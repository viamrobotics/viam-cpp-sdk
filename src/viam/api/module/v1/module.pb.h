// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module/v1/module.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_module_2fv1_2fmodule_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_module_2fv1_2fmodule_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "app/v1/robot.pb.h"
#include "robot/v1/robot.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_module_2fv1_2fmodule_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_module_2fv1_2fmodule_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_module_2fv1_2fmodule_2eproto;
namespace viam {
namespace module {
namespace v1 {
class AddResourceRequest;
struct AddResourceRequestDefaultTypeInternal;
extern AddResourceRequestDefaultTypeInternal _AddResourceRequest_default_instance_;
class AddResourceResponse;
struct AddResourceResponseDefaultTypeInternal;
extern AddResourceResponseDefaultTypeInternal _AddResourceResponse_default_instance_;
class HandlerDefinition;
struct HandlerDefinitionDefaultTypeInternal;
extern HandlerDefinitionDefaultTypeInternal _HandlerDefinition_default_instance_;
class HandlerMap;
struct HandlerMapDefaultTypeInternal;
extern HandlerMapDefaultTypeInternal _HandlerMap_default_instance_;
class ReadyRequest;
struct ReadyRequestDefaultTypeInternal;
extern ReadyRequestDefaultTypeInternal _ReadyRequest_default_instance_;
class ReadyResponse;
struct ReadyResponseDefaultTypeInternal;
extern ReadyResponseDefaultTypeInternal _ReadyResponse_default_instance_;
class ReconfigureResourceRequest;
struct ReconfigureResourceRequestDefaultTypeInternal;
extern ReconfigureResourceRequestDefaultTypeInternal _ReconfigureResourceRequest_default_instance_;
class ReconfigureResourceResponse;
struct ReconfigureResourceResponseDefaultTypeInternal;
extern ReconfigureResourceResponseDefaultTypeInternal _ReconfigureResourceResponse_default_instance_;
class RemoveResourceRequest;
struct RemoveResourceRequestDefaultTypeInternal;
extern RemoveResourceRequestDefaultTypeInternal _RemoveResourceRequest_default_instance_;
class RemoveResourceResponse;
struct RemoveResourceResponseDefaultTypeInternal;
extern RemoveResourceResponseDefaultTypeInternal _RemoveResourceResponse_default_instance_;
class ValidateConfigRequest;
struct ValidateConfigRequestDefaultTypeInternal;
extern ValidateConfigRequestDefaultTypeInternal _ValidateConfigRequest_default_instance_;
class ValidateConfigResponse;
struct ValidateConfigResponseDefaultTypeInternal;
extern ValidateConfigResponseDefaultTypeInternal _ValidateConfigResponse_default_instance_;
}  // namespace v1
}  // namespace module
}  // namespace viam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace viam {
namespace module {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class ValidateConfigResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.module.v1.ValidateConfigResponse) */ {
 public:
  inline ValidateConfigResponse() : ValidateConfigResponse(nullptr) {}
  ~ValidateConfigResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ValidateConfigResponse(::google::protobuf::internal::ConstantInitialized);

  inline ValidateConfigResponse(const ValidateConfigResponse& from)
      : ValidateConfigResponse(nullptr, from) {}
  ValidateConfigResponse(ValidateConfigResponse&& from) noexcept
    : ValidateConfigResponse() {
    *this = ::std::move(from);
  }

  inline ValidateConfigResponse& operator=(const ValidateConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidateConfigResponse& operator=(ValidateConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidateConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ValidateConfigResponse* internal_default_instance() {
    return reinterpret_cast<const ValidateConfigResponse*>(
               &_ValidateConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ValidateConfigResponse& a, ValidateConfigResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ValidateConfigResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidateConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidateConfigResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ValidateConfigResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidateConfigResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ValidateConfigResponse& from) {
    ValidateConfigResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ValidateConfigResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.module.v1.ValidateConfigResponse";
  }
  protected:
  explicit ValidateConfigResponse(::google::protobuf::Arena* arena);
  ValidateConfigResponse(::google::protobuf::Arena* arena, const ValidateConfigResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDependenciesFieldNumber = 1,
  };
  // repeated string dependencies = 1 [json_name = "dependencies"];
  int dependencies_size() const;
  private:
  int _internal_dependencies_size() const;

  public:
  void clear_dependencies() ;
  const std::string& dependencies(int index) const;
  std::string* mutable_dependencies(int index);
  void set_dependencies(int index, const std::string& value);
  void set_dependencies(int index, std::string&& value);
  void set_dependencies(int index, const char* value);
  void set_dependencies(int index, const char* value, std::size_t size);
  void set_dependencies(int index, absl::string_view value);
  std::string* add_dependencies();
  void add_dependencies(const std::string& value);
  void add_dependencies(std::string&& value);
  void add_dependencies(const char* value);
  void add_dependencies(const char* value, std::size_t size);
  void add_dependencies(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_dependencies();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dependencies();

  public:
  // @@protoc_insertion_point(class_scope:viam.module.v1.ValidateConfigResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> dependencies_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_2fv1_2fmodule_2eproto;
};// -------------------------------------------------------------------

class RemoveResourceResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.module.v1.RemoveResourceResponse) */ {
 public:
  inline RemoveResourceResponse() : RemoveResourceResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveResourceResponse(::google::protobuf::internal::ConstantInitialized);

  inline RemoveResourceResponse(const RemoveResourceResponse& from)
      : RemoveResourceResponse(nullptr, from) {}
  RemoveResourceResponse(RemoveResourceResponse&& from) noexcept
    : RemoveResourceResponse() {
    *this = ::std::move(from);
  }

  inline RemoveResourceResponse& operator=(const RemoveResourceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveResourceResponse& operator=(RemoveResourceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveResourceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveResourceResponse* internal_default_instance() {
    return reinterpret_cast<const RemoveResourceResponse*>(
               &_RemoveResourceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(RemoveResourceResponse& a, RemoveResourceResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveResourceResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveResourceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveResourceResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveResourceResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RemoveResourceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RemoveResourceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.module.v1.RemoveResourceResponse";
  }
  protected:
  explicit RemoveResourceResponse(::google::protobuf::Arena* arena);
  RemoveResourceResponse(::google::protobuf::Arena* arena, const RemoveResourceResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.module.v1.RemoveResourceResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_2fv1_2fmodule_2eproto;
};// -------------------------------------------------------------------

class RemoveResourceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.module.v1.RemoveResourceRequest) */ {
 public:
  inline RemoveResourceRequest() : RemoveResourceRequest(nullptr) {}
  ~RemoveResourceRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveResourceRequest(::google::protobuf::internal::ConstantInitialized);

  inline RemoveResourceRequest(const RemoveResourceRequest& from)
      : RemoveResourceRequest(nullptr, from) {}
  RemoveResourceRequest(RemoveResourceRequest&& from) noexcept
    : RemoveResourceRequest() {
    *this = ::std::move(from);
  }

  inline RemoveResourceRequest& operator=(const RemoveResourceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveResourceRequest& operator=(RemoveResourceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveResourceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveResourceRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveResourceRequest*>(
               &_RemoveResourceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RemoveResourceRequest& a, RemoveResourceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveResourceRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveResourceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveResourceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveResourceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveResourceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RemoveResourceRequest& from) {
    RemoveResourceRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoveResourceRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.module.v1.RemoveResourceRequest";
  }
  protected:
  explicit RemoveResourceRequest(::google::protobuf::Arena* arena);
  RemoveResourceRequest(::google::protobuf::Arena* arena, const RemoveResourceRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:viam.module.v1.RemoveResourceRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_2fv1_2fmodule_2eproto;
};// -------------------------------------------------------------------

class ReconfigureResourceResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.module.v1.ReconfigureResourceResponse) */ {
 public:
  inline ReconfigureResourceResponse() : ReconfigureResourceResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReconfigureResourceResponse(::google::protobuf::internal::ConstantInitialized);

  inline ReconfigureResourceResponse(const ReconfigureResourceResponse& from)
      : ReconfigureResourceResponse(nullptr, from) {}
  ReconfigureResourceResponse(ReconfigureResourceResponse&& from) noexcept
    : ReconfigureResourceResponse() {
    *this = ::std::move(from);
  }

  inline ReconfigureResourceResponse& operator=(const ReconfigureResourceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReconfigureResourceResponse& operator=(ReconfigureResourceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReconfigureResourceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReconfigureResourceResponse* internal_default_instance() {
    return reinterpret_cast<const ReconfigureResourceResponse*>(
               &_ReconfigureResourceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ReconfigureResourceResponse& a, ReconfigureResourceResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReconfigureResourceResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReconfigureResourceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReconfigureResourceResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReconfigureResourceResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ReconfigureResourceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ReconfigureResourceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.module.v1.ReconfigureResourceResponse";
  }
  protected:
  explicit ReconfigureResourceResponse(::google::protobuf::Arena* arena);
  ReconfigureResourceResponse(::google::protobuf::Arena* arena, const ReconfigureResourceResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.module.v1.ReconfigureResourceResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_2fv1_2fmodule_2eproto;
};// -------------------------------------------------------------------

class ReadyRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.module.v1.ReadyRequest) */ {
 public:
  inline ReadyRequest() : ReadyRequest(nullptr) {}
  ~ReadyRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReadyRequest(::google::protobuf::internal::ConstantInitialized);

  inline ReadyRequest(const ReadyRequest& from)
      : ReadyRequest(nullptr, from) {}
  ReadyRequest(ReadyRequest&& from) noexcept
    : ReadyRequest() {
    *this = ::std::move(from);
  }

  inline ReadyRequest& operator=(const ReadyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadyRequest& operator=(ReadyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReadyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadyRequest* internal_default_instance() {
    return reinterpret_cast<const ReadyRequest*>(
               &_ReadyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ReadyRequest& a, ReadyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReadyRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReadyRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReadyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReadyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReadyRequest& from) {
    ReadyRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReadyRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.module.v1.ReadyRequest";
  }
  protected:
  explicit ReadyRequest(::google::protobuf::Arena* arena);
  ReadyRequest(::google::protobuf::Arena* arena, const ReadyRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentAddressFieldNumber = 1,
    kWebrtcOfferFieldNumber = 2,
  };
  // string parent_address = 1 [json_name = "parentAddress"];
  void clear_parent_address() ;
  const std::string& parent_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_parent_address(Arg_&& arg, Args_... args);
  std::string* mutable_parent_address();
  PROTOBUF_NODISCARD std::string* release_parent_address();
  void set_allocated_parent_address(std::string* value);

  private:
  const std::string& _internal_parent_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_parent_address(
      const std::string& value);
  std::string* _internal_mutable_parent_address();

  public:
  // string webrtc_offer = 2 [json_name = "webrtcOffer"];
  void clear_webrtc_offer() ;
  const std::string& webrtc_offer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_webrtc_offer(Arg_&& arg, Args_... args);
  std::string* mutable_webrtc_offer();
  PROTOBUF_NODISCARD std::string* release_webrtc_offer();
  void set_allocated_webrtc_offer(std::string* value);

  private:
  const std::string& _internal_webrtc_offer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_webrtc_offer(
      const std::string& value);
  std::string* _internal_mutable_webrtc_offer();

  public:
  // @@protoc_insertion_point(class_scope:viam.module.v1.ReadyRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr parent_address_;
    ::google::protobuf::internal::ArenaStringPtr webrtc_offer_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_2fv1_2fmodule_2eproto;
};// -------------------------------------------------------------------

class AddResourceResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.module.v1.AddResourceResponse) */ {
 public:
  inline AddResourceResponse() : AddResourceResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddResourceResponse(::google::protobuf::internal::ConstantInitialized);

  inline AddResourceResponse(const AddResourceResponse& from)
      : AddResourceResponse(nullptr, from) {}
  AddResourceResponse(AddResourceResponse&& from) noexcept
    : AddResourceResponse() {
    *this = ::std::move(from);
  }

  inline AddResourceResponse& operator=(const AddResourceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddResourceResponse& operator=(AddResourceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddResourceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddResourceResponse* internal_default_instance() {
    return reinterpret_cast<const AddResourceResponse*>(
               &_AddResourceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AddResourceResponse& a, AddResourceResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AddResourceResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddResourceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddResourceResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddResourceResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AddResourceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AddResourceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.module.v1.AddResourceResponse";
  }
  protected:
  explicit AddResourceResponse(::google::protobuf::Arena* arena);
  AddResourceResponse(::google::protobuf::Arena* arena, const AddResourceResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.module.v1.AddResourceResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_2fv1_2fmodule_2eproto;
};// -------------------------------------------------------------------

class HandlerDefinition final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.module.v1.HandlerDefinition) */ {
 public:
  inline HandlerDefinition() : HandlerDefinition(nullptr) {}
  ~HandlerDefinition() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HandlerDefinition(::google::protobuf::internal::ConstantInitialized);

  inline HandlerDefinition(const HandlerDefinition& from)
      : HandlerDefinition(nullptr, from) {}
  HandlerDefinition(HandlerDefinition&& from) noexcept
    : HandlerDefinition() {
    *this = ::std::move(from);
  }

  inline HandlerDefinition& operator=(const HandlerDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  inline HandlerDefinition& operator=(HandlerDefinition&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HandlerDefinition& default_instance() {
    return *internal_default_instance();
  }
  static inline const HandlerDefinition* internal_default_instance() {
    return reinterpret_cast<const HandlerDefinition*>(
               &_HandlerDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(HandlerDefinition& a, HandlerDefinition& b) {
    a.Swap(&b);
  }
  inline void Swap(HandlerDefinition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HandlerDefinition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HandlerDefinition* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HandlerDefinition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HandlerDefinition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HandlerDefinition& from) {
    HandlerDefinition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HandlerDefinition* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.module.v1.HandlerDefinition";
  }
  protected:
  explicit HandlerDefinition(::google::protobuf::Arena* arena);
  HandlerDefinition(::google::protobuf::Arena* arena, const HandlerDefinition& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelsFieldNumber = 2,
    kSubtypeFieldNumber = 1,
  };
  // repeated string models = 2 [json_name = "models"];
  int models_size() const;
  private:
  int _internal_models_size() const;

  public:
  void clear_models() ;
  const std::string& models(int index) const;
  std::string* mutable_models(int index);
  void set_models(int index, const std::string& value);
  void set_models(int index, std::string&& value);
  void set_models(int index, const char* value);
  void set_models(int index, const char* value, std::size_t size);
  void set_models(int index, absl::string_view value);
  std::string* add_models();
  void add_models(const std::string& value);
  void add_models(std::string&& value);
  void add_models(const char* value);
  void add_models(const char* value, std::size_t size);
  void add_models(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& models() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_models();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_models() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_models();

  public:
  // .viam.robot.v1.ResourceRPCSubtype subtype = 1 [json_name = "subtype"];
  bool has_subtype() const;
  void clear_subtype() ;
  const ::viam::robot::v1::ResourceRPCSubtype& subtype() const;
  PROTOBUF_NODISCARD ::viam::robot::v1::ResourceRPCSubtype* release_subtype();
  ::viam::robot::v1::ResourceRPCSubtype* mutable_subtype();
  void set_allocated_subtype(::viam::robot::v1::ResourceRPCSubtype* value);
  void unsafe_arena_set_allocated_subtype(::viam::robot::v1::ResourceRPCSubtype* value);
  ::viam::robot::v1::ResourceRPCSubtype* unsafe_arena_release_subtype();

  private:
  const ::viam::robot::v1::ResourceRPCSubtype& _internal_subtype() const;
  ::viam::robot::v1::ResourceRPCSubtype* _internal_mutable_subtype();

  public:
  // @@protoc_insertion_point(class_scope:viam.module.v1.HandlerDefinition)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> models_;
    ::viam::robot::v1::ResourceRPCSubtype* subtype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_2fv1_2fmodule_2eproto;
};// -------------------------------------------------------------------

class HandlerMap final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.module.v1.HandlerMap) */ {
 public:
  inline HandlerMap() : HandlerMap(nullptr) {}
  ~HandlerMap() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HandlerMap(::google::protobuf::internal::ConstantInitialized);

  inline HandlerMap(const HandlerMap& from)
      : HandlerMap(nullptr, from) {}
  HandlerMap(HandlerMap&& from) noexcept
    : HandlerMap() {
    *this = ::std::move(from);
  }

  inline HandlerMap& operator=(const HandlerMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline HandlerMap& operator=(HandlerMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HandlerMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const HandlerMap* internal_default_instance() {
    return reinterpret_cast<const HandlerMap*>(
               &_HandlerMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(HandlerMap& a, HandlerMap& b) {
    a.Swap(&b);
  }
  inline void Swap(HandlerMap* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HandlerMap* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HandlerMap* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HandlerMap>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HandlerMap& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HandlerMap& from) {
    HandlerMap::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HandlerMap* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.module.v1.HandlerMap";
  }
  protected:
  explicit HandlerMap(::google::protobuf::Arena* arena);
  HandlerMap(::google::protobuf::Arena* arena, const HandlerMap& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHandlersFieldNumber = 1,
  };
  // repeated .viam.module.v1.HandlerDefinition handlers = 1 [json_name = "handlers"];
  int handlers_size() const;
  private:
  int _internal_handlers_size() const;

  public:
  void clear_handlers() ;
  ::viam::module::v1::HandlerDefinition* mutable_handlers(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::module::v1::HandlerDefinition >*
      mutable_handlers();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::module::v1::HandlerDefinition>& _internal_handlers() const;
  ::google::protobuf::RepeatedPtrField<::viam::module::v1::HandlerDefinition>* _internal_mutable_handlers();
  public:
  const ::viam::module::v1::HandlerDefinition& handlers(int index) const;
  ::viam::module::v1::HandlerDefinition* add_handlers();
  const ::google::protobuf::RepeatedPtrField< ::viam::module::v1::HandlerDefinition >&
      handlers() const;
  // @@protoc_insertion_point(class_scope:viam.module.v1.HandlerMap)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::module::v1::HandlerDefinition > handlers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_2fv1_2fmodule_2eproto;
};// -------------------------------------------------------------------

class ReadyResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.module.v1.ReadyResponse) */ {
 public:
  inline ReadyResponse() : ReadyResponse(nullptr) {}
  ~ReadyResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReadyResponse(::google::protobuf::internal::ConstantInitialized);

  inline ReadyResponse(const ReadyResponse& from)
      : ReadyResponse(nullptr, from) {}
  ReadyResponse(ReadyResponse&& from) noexcept
    : ReadyResponse() {
    *this = ::std::move(from);
  }

  inline ReadyResponse& operator=(const ReadyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadyResponse& operator=(ReadyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReadyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadyResponse* internal_default_instance() {
    return reinterpret_cast<const ReadyResponse*>(
               &_ReadyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ReadyResponse& a, ReadyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReadyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReadyResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReadyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReadyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReadyResponse& from) {
    ReadyResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReadyResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.module.v1.ReadyResponse";
  }
  protected:
  explicit ReadyResponse(::google::protobuf::Arena* arena);
  ReadyResponse(::google::protobuf::Arena* arena, const ReadyResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWebrtcAnswerFieldNumber = 3,
    kHandlermapFieldNumber = 2,
    kReadyFieldNumber = 1,
  };
  // string webrtc_answer = 3 [json_name = "webrtcAnswer"];
  void clear_webrtc_answer() ;
  const std::string& webrtc_answer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_webrtc_answer(Arg_&& arg, Args_... args);
  std::string* mutable_webrtc_answer();
  PROTOBUF_NODISCARD std::string* release_webrtc_answer();
  void set_allocated_webrtc_answer(std::string* value);

  private:
  const std::string& _internal_webrtc_answer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_webrtc_answer(
      const std::string& value);
  std::string* _internal_mutable_webrtc_answer();

  public:
  // .viam.module.v1.HandlerMap handlermap = 2 [json_name = "handlermap"];
  bool has_handlermap() const;
  void clear_handlermap() ;
  const ::viam::module::v1::HandlerMap& handlermap() const;
  PROTOBUF_NODISCARD ::viam::module::v1::HandlerMap* release_handlermap();
  ::viam::module::v1::HandlerMap* mutable_handlermap();
  void set_allocated_handlermap(::viam::module::v1::HandlerMap* value);
  void unsafe_arena_set_allocated_handlermap(::viam::module::v1::HandlerMap* value);
  ::viam::module::v1::HandlerMap* unsafe_arena_release_handlermap();

  private:
  const ::viam::module::v1::HandlerMap& _internal_handlermap() const;
  ::viam::module::v1::HandlerMap* _internal_mutable_handlermap();

  public:
  // bool ready = 1 [json_name = "ready"];
  void clear_ready() ;
  bool ready() const;
  void set_ready(bool value);

  private:
  bool _internal_ready() const;
  void _internal_set_ready(bool value);

  public:
  // @@protoc_insertion_point(class_scope:viam.module.v1.ReadyResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr webrtc_answer_;
    ::viam::module::v1::HandlerMap* handlermap_;
    bool ready_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_2fv1_2fmodule_2eproto;
};// -------------------------------------------------------------------

class ValidateConfigRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.module.v1.ValidateConfigRequest) */ {
 public:
  inline ValidateConfigRequest() : ValidateConfigRequest(nullptr) {}
  ~ValidateConfigRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ValidateConfigRequest(::google::protobuf::internal::ConstantInitialized);

  inline ValidateConfigRequest(const ValidateConfigRequest& from)
      : ValidateConfigRequest(nullptr, from) {}
  ValidateConfigRequest(ValidateConfigRequest&& from) noexcept
    : ValidateConfigRequest() {
    *this = ::std::move(from);
  }

  inline ValidateConfigRequest& operator=(const ValidateConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidateConfigRequest& operator=(ValidateConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidateConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ValidateConfigRequest* internal_default_instance() {
    return reinterpret_cast<const ValidateConfigRequest*>(
               &_ValidateConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ValidateConfigRequest& a, ValidateConfigRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ValidateConfigRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidateConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidateConfigRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ValidateConfigRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidateConfigRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ValidateConfigRequest& from) {
    ValidateConfigRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ValidateConfigRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.module.v1.ValidateConfigRequest";
  }
  protected:
  explicit ValidateConfigRequest(::google::protobuf::Arena* arena);
  ValidateConfigRequest(::google::protobuf::Arena* arena, const ValidateConfigRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigFieldNumber = 1,
  };
  // .viam.app.v1.ComponentConfig config = 1 [json_name = "config"];
  bool has_config() const;
  void clear_config() ;
  const ::viam::app::v1::ComponentConfig& config() const;
  PROTOBUF_NODISCARD ::viam::app::v1::ComponentConfig* release_config();
  ::viam::app::v1::ComponentConfig* mutable_config();
  void set_allocated_config(::viam::app::v1::ComponentConfig* value);
  void unsafe_arena_set_allocated_config(::viam::app::v1::ComponentConfig* value);
  ::viam::app::v1::ComponentConfig* unsafe_arena_release_config();

  private:
  const ::viam::app::v1::ComponentConfig& _internal_config() const;
  ::viam::app::v1::ComponentConfig* _internal_mutable_config();

  public:
  // @@protoc_insertion_point(class_scope:viam.module.v1.ValidateConfigRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::app::v1::ComponentConfig* config_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_2fv1_2fmodule_2eproto;
};// -------------------------------------------------------------------

class ReconfigureResourceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.module.v1.ReconfigureResourceRequest) */ {
 public:
  inline ReconfigureResourceRequest() : ReconfigureResourceRequest(nullptr) {}
  ~ReconfigureResourceRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReconfigureResourceRequest(::google::protobuf::internal::ConstantInitialized);

  inline ReconfigureResourceRequest(const ReconfigureResourceRequest& from)
      : ReconfigureResourceRequest(nullptr, from) {}
  ReconfigureResourceRequest(ReconfigureResourceRequest&& from) noexcept
    : ReconfigureResourceRequest() {
    *this = ::std::move(from);
  }

  inline ReconfigureResourceRequest& operator=(const ReconfigureResourceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReconfigureResourceRequest& operator=(ReconfigureResourceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReconfigureResourceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReconfigureResourceRequest* internal_default_instance() {
    return reinterpret_cast<const ReconfigureResourceRequest*>(
               &_ReconfigureResourceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ReconfigureResourceRequest& a, ReconfigureResourceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReconfigureResourceRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReconfigureResourceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReconfigureResourceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReconfigureResourceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReconfigureResourceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReconfigureResourceRequest& from) {
    ReconfigureResourceRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReconfigureResourceRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.module.v1.ReconfigureResourceRequest";
  }
  protected:
  explicit ReconfigureResourceRequest(::google::protobuf::Arena* arena);
  ReconfigureResourceRequest(::google::protobuf::Arena* arena, const ReconfigureResourceRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDependenciesFieldNumber = 2,
    kConfigFieldNumber = 1,
  };
  // repeated string dependencies = 2 [json_name = "dependencies"];
  int dependencies_size() const;
  private:
  int _internal_dependencies_size() const;

  public:
  void clear_dependencies() ;
  const std::string& dependencies(int index) const;
  std::string* mutable_dependencies(int index);
  void set_dependencies(int index, const std::string& value);
  void set_dependencies(int index, std::string&& value);
  void set_dependencies(int index, const char* value);
  void set_dependencies(int index, const char* value, std::size_t size);
  void set_dependencies(int index, absl::string_view value);
  std::string* add_dependencies();
  void add_dependencies(const std::string& value);
  void add_dependencies(std::string&& value);
  void add_dependencies(const char* value);
  void add_dependencies(const char* value, std::size_t size);
  void add_dependencies(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_dependencies();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dependencies();

  public:
  // .viam.app.v1.ComponentConfig config = 1 [json_name = "config"];
  bool has_config() const;
  void clear_config() ;
  const ::viam::app::v1::ComponentConfig& config() const;
  PROTOBUF_NODISCARD ::viam::app::v1::ComponentConfig* release_config();
  ::viam::app::v1::ComponentConfig* mutable_config();
  void set_allocated_config(::viam::app::v1::ComponentConfig* value);
  void unsafe_arena_set_allocated_config(::viam::app::v1::ComponentConfig* value);
  ::viam::app::v1::ComponentConfig* unsafe_arena_release_config();

  private:
  const ::viam::app::v1::ComponentConfig& _internal_config() const;
  ::viam::app::v1::ComponentConfig* _internal_mutable_config();

  public:
  // @@protoc_insertion_point(class_scope:viam.module.v1.ReconfigureResourceRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> dependencies_;
    ::viam::app::v1::ComponentConfig* config_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_2fv1_2fmodule_2eproto;
};// -------------------------------------------------------------------

class AddResourceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.module.v1.AddResourceRequest) */ {
 public:
  inline AddResourceRequest() : AddResourceRequest(nullptr) {}
  ~AddResourceRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddResourceRequest(::google::protobuf::internal::ConstantInitialized);

  inline AddResourceRequest(const AddResourceRequest& from)
      : AddResourceRequest(nullptr, from) {}
  AddResourceRequest(AddResourceRequest&& from) noexcept
    : AddResourceRequest() {
    *this = ::std::move(from);
  }

  inline AddResourceRequest& operator=(const AddResourceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddResourceRequest& operator=(AddResourceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddResourceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddResourceRequest* internal_default_instance() {
    return reinterpret_cast<const AddResourceRequest*>(
               &_AddResourceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AddResourceRequest& a, AddResourceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AddResourceRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddResourceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddResourceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddResourceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddResourceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddResourceRequest& from) {
    AddResourceRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddResourceRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.module.v1.AddResourceRequest";
  }
  protected:
  explicit AddResourceRequest(::google::protobuf::Arena* arena);
  AddResourceRequest(::google::protobuf::Arena* arena, const AddResourceRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDependenciesFieldNumber = 2,
    kConfigFieldNumber = 1,
  };
  // repeated string dependencies = 2 [json_name = "dependencies"];
  int dependencies_size() const;
  private:
  int _internal_dependencies_size() const;

  public:
  void clear_dependencies() ;
  const std::string& dependencies(int index) const;
  std::string* mutable_dependencies(int index);
  void set_dependencies(int index, const std::string& value);
  void set_dependencies(int index, std::string&& value);
  void set_dependencies(int index, const char* value);
  void set_dependencies(int index, const char* value, std::size_t size);
  void set_dependencies(int index, absl::string_view value);
  std::string* add_dependencies();
  void add_dependencies(const std::string& value);
  void add_dependencies(std::string&& value);
  void add_dependencies(const char* value);
  void add_dependencies(const char* value, std::size_t size);
  void add_dependencies(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_dependencies();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dependencies() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dependencies();

  public:
  // .viam.app.v1.ComponentConfig config = 1 [json_name = "config"];
  bool has_config() const;
  void clear_config() ;
  const ::viam::app::v1::ComponentConfig& config() const;
  PROTOBUF_NODISCARD ::viam::app::v1::ComponentConfig* release_config();
  ::viam::app::v1::ComponentConfig* mutable_config();
  void set_allocated_config(::viam::app::v1::ComponentConfig* value);
  void unsafe_arena_set_allocated_config(::viam::app::v1::ComponentConfig* value);
  ::viam::app::v1::ComponentConfig* unsafe_arena_release_config();

  private:
  const ::viam::app::v1::ComponentConfig& _internal_config() const;
  ::viam::app::v1::ComponentConfig* _internal_mutable_config();

  public:
  // @@protoc_insertion_point(class_scope:viam.module.v1.AddResourceRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> dependencies_;
    ::viam::app::v1::ComponentConfig* config_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_2fv1_2fmodule_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AddResourceRequest

// .viam.app.v1.ComponentConfig config = 1 [json_name = "config"];
inline bool AddResourceRequest::has_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.config_ != nullptr);
  return value;
}
inline const ::viam::app::v1::ComponentConfig& AddResourceRequest::_internal_config() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::app::v1::ComponentConfig* p = _impl_.config_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::app::v1::ComponentConfig&>(::viam::app::v1::_ComponentConfig_default_instance_);
}
inline const ::viam::app::v1::ComponentConfig& AddResourceRequest::config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.AddResourceRequest.config)
  return _internal_config();
}
inline void AddResourceRequest::unsafe_arena_set_allocated_config(::viam::app::v1::ComponentConfig* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }
  _impl_.config_ = reinterpret_cast<::viam::app::v1::ComponentConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.module.v1.AddResourceRequest.config)
}
inline ::viam::app::v1::ComponentConfig* AddResourceRequest::release_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::app::v1::ComponentConfig* released = _impl_.config_;
  _impl_.config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::app::v1::ComponentConfig* AddResourceRequest::unsafe_arena_release_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.module.v1.AddResourceRequest.config)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::app::v1::ComponentConfig* temp = _impl_.config_;
  _impl_.config_ = nullptr;
  return temp;
}
inline ::viam::app::v1::ComponentConfig* AddResourceRequest::_internal_mutable_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.config_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::app::v1::ComponentConfig>(GetArena());
    _impl_.config_ = reinterpret_cast<::viam::app::v1::ComponentConfig*>(p);
  }
  return _impl_.config_;
}
inline ::viam::app::v1::ComponentConfig* AddResourceRequest::mutable_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::app::v1::ComponentConfig* _msg = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:viam.module.v1.AddResourceRequest.config)
  return _msg;
}
inline void AddResourceRequest::set_allocated_config(::viam::app::v1::ComponentConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.config_ = reinterpret_cast<::viam::app::v1::ComponentConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.module.v1.AddResourceRequest.config)
}

// repeated string dependencies = 2 [json_name = "dependencies"];
inline int AddResourceRequest::_internal_dependencies_size() const {
  return _internal_dependencies().size();
}
inline int AddResourceRequest::dependencies_size() const {
  return _internal_dependencies_size();
}
inline void AddResourceRequest::clear_dependencies() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dependencies_.Clear();
}
inline std::string* AddResourceRequest::add_dependencies()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_dependencies()->Add();
  // @@protoc_insertion_point(field_add_mutable:viam.module.v1.AddResourceRequest.dependencies)
  return _s;
}
inline const std::string& AddResourceRequest::dependencies(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.AddResourceRequest.dependencies)
  return _internal_dependencies().Get(index);
}
inline std::string* AddResourceRequest::mutable_dependencies(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.module.v1.AddResourceRequest.dependencies)
  return _internal_mutable_dependencies()->Mutable(index);
}
inline void AddResourceRequest::set_dependencies(int index, const std::string& value) {
  _internal_mutable_dependencies()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:viam.module.v1.AddResourceRequest.dependencies)
}
inline void AddResourceRequest::set_dependencies(int index, std::string&& value) {
  _internal_mutable_dependencies()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:viam.module.v1.AddResourceRequest.dependencies)
}
inline void AddResourceRequest::set_dependencies(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_dependencies()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:viam.module.v1.AddResourceRequest.dependencies)
}
inline void AddResourceRequest::set_dependencies(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_dependencies()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:viam.module.v1.AddResourceRequest.dependencies)
}
inline void AddResourceRequest::set_dependencies(int index, absl::string_view value) {
  _internal_mutable_dependencies()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:viam.module.v1.AddResourceRequest.dependencies)
}
inline void AddResourceRequest::add_dependencies(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:viam.module.v1.AddResourceRequest.dependencies)
}
inline void AddResourceRequest::add_dependencies(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:viam.module.v1.AddResourceRequest.dependencies)
}
inline void AddResourceRequest::add_dependencies(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:viam.module.v1.AddResourceRequest.dependencies)
}
inline void AddResourceRequest::add_dependencies(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:viam.module.v1.AddResourceRequest.dependencies)
}
inline void AddResourceRequest::add_dependencies(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:viam.module.v1.AddResourceRequest.dependencies)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AddResourceRequest::dependencies() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.module.v1.AddResourceRequest.dependencies)
  return _internal_dependencies();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AddResourceRequest::mutable_dependencies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.module.v1.AddResourceRequest.dependencies)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_dependencies();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AddResourceRequest::_internal_dependencies() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dependencies_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AddResourceRequest::_internal_mutable_dependencies() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.dependencies_;
}

// -------------------------------------------------------------------

// AddResourceResponse

// -------------------------------------------------------------------

// ReconfigureResourceRequest

// .viam.app.v1.ComponentConfig config = 1 [json_name = "config"];
inline bool ReconfigureResourceRequest::has_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.config_ != nullptr);
  return value;
}
inline const ::viam::app::v1::ComponentConfig& ReconfigureResourceRequest::_internal_config() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::app::v1::ComponentConfig* p = _impl_.config_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::app::v1::ComponentConfig&>(::viam::app::v1::_ComponentConfig_default_instance_);
}
inline const ::viam::app::v1::ComponentConfig& ReconfigureResourceRequest::config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.ReconfigureResourceRequest.config)
  return _internal_config();
}
inline void ReconfigureResourceRequest::unsafe_arena_set_allocated_config(::viam::app::v1::ComponentConfig* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }
  _impl_.config_ = reinterpret_cast<::viam::app::v1::ComponentConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.module.v1.ReconfigureResourceRequest.config)
}
inline ::viam::app::v1::ComponentConfig* ReconfigureResourceRequest::release_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::app::v1::ComponentConfig* released = _impl_.config_;
  _impl_.config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::app::v1::ComponentConfig* ReconfigureResourceRequest::unsafe_arena_release_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.module.v1.ReconfigureResourceRequest.config)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::app::v1::ComponentConfig* temp = _impl_.config_;
  _impl_.config_ = nullptr;
  return temp;
}
inline ::viam::app::v1::ComponentConfig* ReconfigureResourceRequest::_internal_mutable_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.config_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::app::v1::ComponentConfig>(GetArena());
    _impl_.config_ = reinterpret_cast<::viam::app::v1::ComponentConfig*>(p);
  }
  return _impl_.config_;
}
inline ::viam::app::v1::ComponentConfig* ReconfigureResourceRequest::mutable_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::app::v1::ComponentConfig* _msg = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:viam.module.v1.ReconfigureResourceRequest.config)
  return _msg;
}
inline void ReconfigureResourceRequest::set_allocated_config(::viam::app::v1::ComponentConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.config_ = reinterpret_cast<::viam::app::v1::ComponentConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.module.v1.ReconfigureResourceRequest.config)
}

// repeated string dependencies = 2 [json_name = "dependencies"];
inline int ReconfigureResourceRequest::_internal_dependencies_size() const {
  return _internal_dependencies().size();
}
inline int ReconfigureResourceRequest::dependencies_size() const {
  return _internal_dependencies_size();
}
inline void ReconfigureResourceRequest::clear_dependencies() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dependencies_.Clear();
}
inline std::string* ReconfigureResourceRequest::add_dependencies()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_dependencies()->Add();
  // @@protoc_insertion_point(field_add_mutable:viam.module.v1.ReconfigureResourceRequest.dependencies)
  return _s;
}
inline const std::string& ReconfigureResourceRequest::dependencies(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.ReconfigureResourceRequest.dependencies)
  return _internal_dependencies().Get(index);
}
inline std::string* ReconfigureResourceRequest::mutable_dependencies(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.module.v1.ReconfigureResourceRequest.dependencies)
  return _internal_mutable_dependencies()->Mutable(index);
}
inline void ReconfigureResourceRequest::set_dependencies(int index, const std::string& value) {
  _internal_mutable_dependencies()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:viam.module.v1.ReconfigureResourceRequest.dependencies)
}
inline void ReconfigureResourceRequest::set_dependencies(int index, std::string&& value) {
  _internal_mutable_dependencies()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:viam.module.v1.ReconfigureResourceRequest.dependencies)
}
inline void ReconfigureResourceRequest::set_dependencies(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_dependencies()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:viam.module.v1.ReconfigureResourceRequest.dependencies)
}
inline void ReconfigureResourceRequest::set_dependencies(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_dependencies()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:viam.module.v1.ReconfigureResourceRequest.dependencies)
}
inline void ReconfigureResourceRequest::set_dependencies(int index, absl::string_view value) {
  _internal_mutable_dependencies()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:viam.module.v1.ReconfigureResourceRequest.dependencies)
}
inline void ReconfigureResourceRequest::add_dependencies(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:viam.module.v1.ReconfigureResourceRequest.dependencies)
}
inline void ReconfigureResourceRequest::add_dependencies(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:viam.module.v1.ReconfigureResourceRequest.dependencies)
}
inline void ReconfigureResourceRequest::add_dependencies(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:viam.module.v1.ReconfigureResourceRequest.dependencies)
}
inline void ReconfigureResourceRequest::add_dependencies(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:viam.module.v1.ReconfigureResourceRequest.dependencies)
}
inline void ReconfigureResourceRequest::add_dependencies(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:viam.module.v1.ReconfigureResourceRequest.dependencies)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ReconfigureResourceRequest::dependencies() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.module.v1.ReconfigureResourceRequest.dependencies)
  return _internal_dependencies();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ReconfigureResourceRequest::mutable_dependencies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.module.v1.ReconfigureResourceRequest.dependencies)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_dependencies();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ReconfigureResourceRequest::_internal_dependencies() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dependencies_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ReconfigureResourceRequest::_internal_mutable_dependencies() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.dependencies_;
}

// -------------------------------------------------------------------

// ReconfigureResourceResponse

// -------------------------------------------------------------------

// RemoveResourceRequest

// string name = 1 [json_name = "name"];
inline void RemoveResourceRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& RemoveResourceRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.RemoveResourceRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveResourceRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.module.v1.RemoveResourceRequest.name)
}
inline std::string* RemoveResourceRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.module.v1.RemoveResourceRequest.name)
  return _s;
}
inline const std::string& RemoveResourceRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void RemoveResourceRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* RemoveResourceRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* RemoveResourceRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.module.v1.RemoveResourceRequest.name)
  return _impl_.name_.Release();
}
inline void RemoveResourceRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.module.v1.RemoveResourceRequest.name)
}

// -------------------------------------------------------------------

// RemoveResourceResponse

// -------------------------------------------------------------------

// HandlerDefinition

// .viam.robot.v1.ResourceRPCSubtype subtype = 1 [json_name = "subtype"];
inline bool HandlerDefinition::has_subtype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.subtype_ != nullptr);
  return value;
}
inline const ::viam::robot::v1::ResourceRPCSubtype& HandlerDefinition::_internal_subtype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::robot::v1::ResourceRPCSubtype* p = _impl_.subtype_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::robot::v1::ResourceRPCSubtype&>(::viam::robot::v1::_ResourceRPCSubtype_default_instance_);
}
inline const ::viam::robot::v1::ResourceRPCSubtype& HandlerDefinition::subtype() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.HandlerDefinition.subtype)
  return _internal_subtype();
}
inline void HandlerDefinition::unsafe_arena_set_allocated_subtype(::viam::robot::v1::ResourceRPCSubtype* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.subtype_);
  }
  _impl_.subtype_ = reinterpret_cast<::viam::robot::v1::ResourceRPCSubtype*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.module.v1.HandlerDefinition.subtype)
}
inline ::viam::robot::v1::ResourceRPCSubtype* HandlerDefinition::release_subtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::robot::v1::ResourceRPCSubtype* released = _impl_.subtype_;
  _impl_.subtype_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::robot::v1::ResourceRPCSubtype* HandlerDefinition::unsafe_arena_release_subtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.module.v1.HandlerDefinition.subtype)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::robot::v1::ResourceRPCSubtype* temp = _impl_.subtype_;
  _impl_.subtype_ = nullptr;
  return temp;
}
inline ::viam::robot::v1::ResourceRPCSubtype* HandlerDefinition::_internal_mutable_subtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.subtype_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::robot::v1::ResourceRPCSubtype>(GetArena());
    _impl_.subtype_ = reinterpret_cast<::viam::robot::v1::ResourceRPCSubtype*>(p);
  }
  return _impl_.subtype_;
}
inline ::viam::robot::v1::ResourceRPCSubtype* HandlerDefinition::mutable_subtype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::robot::v1::ResourceRPCSubtype* _msg = _internal_mutable_subtype();
  // @@protoc_insertion_point(field_mutable:viam.module.v1.HandlerDefinition.subtype)
  return _msg;
}
inline void HandlerDefinition::set_allocated_subtype(::viam::robot::v1::ResourceRPCSubtype* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.subtype_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.subtype_ = reinterpret_cast<::viam::robot::v1::ResourceRPCSubtype*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.module.v1.HandlerDefinition.subtype)
}

// repeated string models = 2 [json_name = "models"];
inline int HandlerDefinition::_internal_models_size() const {
  return _internal_models().size();
}
inline int HandlerDefinition::models_size() const {
  return _internal_models_size();
}
inline void HandlerDefinition::clear_models() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.models_.Clear();
}
inline std::string* HandlerDefinition::add_models()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_models()->Add();
  // @@protoc_insertion_point(field_add_mutable:viam.module.v1.HandlerDefinition.models)
  return _s;
}
inline const std::string& HandlerDefinition::models(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.HandlerDefinition.models)
  return _internal_models().Get(index);
}
inline std::string* HandlerDefinition::mutable_models(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.module.v1.HandlerDefinition.models)
  return _internal_mutable_models()->Mutable(index);
}
inline void HandlerDefinition::set_models(int index, const std::string& value) {
  _internal_mutable_models()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:viam.module.v1.HandlerDefinition.models)
}
inline void HandlerDefinition::set_models(int index, std::string&& value) {
  _internal_mutable_models()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:viam.module.v1.HandlerDefinition.models)
}
inline void HandlerDefinition::set_models(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_models()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:viam.module.v1.HandlerDefinition.models)
}
inline void HandlerDefinition::set_models(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_models()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:viam.module.v1.HandlerDefinition.models)
}
inline void HandlerDefinition::set_models(int index, absl::string_view value) {
  _internal_mutable_models()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:viam.module.v1.HandlerDefinition.models)
}
inline void HandlerDefinition::add_models(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_models()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:viam.module.v1.HandlerDefinition.models)
}
inline void HandlerDefinition::add_models(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_models()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:viam.module.v1.HandlerDefinition.models)
}
inline void HandlerDefinition::add_models(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_models()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:viam.module.v1.HandlerDefinition.models)
}
inline void HandlerDefinition::add_models(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_models()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:viam.module.v1.HandlerDefinition.models)
}
inline void HandlerDefinition::add_models(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_models()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:viam.module.v1.HandlerDefinition.models)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
HandlerDefinition::models() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.module.v1.HandlerDefinition.models)
  return _internal_models();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
HandlerDefinition::mutable_models() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.module.v1.HandlerDefinition.models)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_models();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
HandlerDefinition::_internal_models() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.models_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
HandlerDefinition::_internal_mutable_models() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.models_;
}

// -------------------------------------------------------------------

// HandlerMap

// repeated .viam.module.v1.HandlerDefinition handlers = 1 [json_name = "handlers"];
inline int HandlerMap::_internal_handlers_size() const {
  return _internal_handlers().size();
}
inline int HandlerMap::handlers_size() const {
  return _internal_handlers_size();
}
inline void HandlerMap::clear_handlers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.handlers_.Clear();
}
inline ::viam::module::v1::HandlerDefinition* HandlerMap::mutable_handlers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.module.v1.HandlerMap.handlers)
  return _internal_mutable_handlers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::module::v1::HandlerDefinition>* HandlerMap::mutable_handlers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.module.v1.HandlerMap.handlers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_handlers();
}
inline const ::viam::module::v1::HandlerDefinition& HandlerMap::handlers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.HandlerMap.handlers)
  return _internal_handlers().Get(index);
}
inline ::viam::module::v1::HandlerDefinition* HandlerMap::add_handlers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::module::v1::HandlerDefinition* _add = _internal_mutable_handlers()->Add();
  // @@protoc_insertion_point(field_add:viam.module.v1.HandlerMap.handlers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::module::v1::HandlerDefinition>& HandlerMap::handlers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.module.v1.HandlerMap.handlers)
  return _internal_handlers();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::module::v1::HandlerDefinition>&
HandlerMap::_internal_handlers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.handlers_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::module::v1::HandlerDefinition>*
HandlerMap::_internal_mutable_handlers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.handlers_;
}

// -------------------------------------------------------------------

// ReadyRequest

// string parent_address = 1 [json_name = "parentAddress"];
inline void ReadyRequest::clear_parent_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.parent_address_.ClearToEmpty();
}
inline const std::string& ReadyRequest::parent_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.ReadyRequest.parent_address)
  return _internal_parent_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReadyRequest::set_parent_address(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.parent_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.module.v1.ReadyRequest.parent_address)
}
inline std::string* ReadyRequest::mutable_parent_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_parent_address();
  // @@protoc_insertion_point(field_mutable:viam.module.v1.ReadyRequest.parent_address)
  return _s;
}
inline const std::string& ReadyRequest::_internal_parent_address() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.parent_address_.Get();
}
inline void ReadyRequest::_internal_set_parent_address(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.parent_address_.Set(value, GetArena());
}
inline std::string* ReadyRequest::_internal_mutable_parent_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.parent_address_.Mutable( GetArena());
}
inline std::string* ReadyRequest::release_parent_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.module.v1.ReadyRequest.parent_address)
  return _impl_.parent_address_.Release();
}
inline void ReadyRequest::set_allocated_parent_address(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.parent_address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.parent_address_.IsDefault()) {
          _impl_.parent_address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.module.v1.ReadyRequest.parent_address)
}

// string webrtc_offer = 2 [json_name = "webrtcOffer"];
inline void ReadyRequest::clear_webrtc_offer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.webrtc_offer_.ClearToEmpty();
}
inline const std::string& ReadyRequest::webrtc_offer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.ReadyRequest.webrtc_offer)
  return _internal_webrtc_offer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReadyRequest::set_webrtc_offer(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.webrtc_offer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.module.v1.ReadyRequest.webrtc_offer)
}
inline std::string* ReadyRequest::mutable_webrtc_offer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_webrtc_offer();
  // @@protoc_insertion_point(field_mutable:viam.module.v1.ReadyRequest.webrtc_offer)
  return _s;
}
inline const std::string& ReadyRequest::_internal_webrtc_offer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.webrtc_offer_.Get();
}
inline void ReadyRequest::_internal_set_webrtc_offer(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.webrtc_offer_.Set(value, GetArena());
}
inline std::string* ReadyRequest::_internal_mutable_webrtc_offer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.webrtc_offer_.Mutable( GetArena());
}
inline std::string* ReadyRequest::release_webrtc_offer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.module.v1.ReadyRequest.webrtc_offer)
  return _impl_.webrtc_offer_.Release();
}
inline void ReadyRequest::set_allocated_webrtc_offer(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.webrtc_offer_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.webrtc_offer_.IsDefault()) {
          _impl_.webrtc_offer_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.module.v1.ReadyRequest.webrtc_offer)
}

// -------------------------------------------------------------------

// ReadyResponse

// bool ready = 1 [json_name = "ready"];
inline void ReadyResponse::clear_ready() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ready_ = false;
}
inline bool ReadyResponse::ready() const {
  // @@protoc_insertion_point(field_get:viam.module.v1.ReadyResponse.ready)
  return _internal_ready();
}
inline void ReadyResponse::set_ready(bool value) {
  _internal_set_ready(value);
  // @@protoc_insertion_point(field_set:viam.module.v1.ReadyResponse.ready)
}
inline bool ReadyResponse::_internal_ready() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ready_;
}
inline void ReadyResponse::_internal_set_ready(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ready_ = value;
}

// .viam.module.v1.HandlerMap handlermap = 2 [json_name = "handlermap"];
inline bool ReadyResponse::has_handlermap() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.handlermap_ != nullptr);
  return value;
}
inline void ReadyResponse::clear_handlermap() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.handlermap_ != nullptr) _impl_.handlermap_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::viam::module::v1::HandlerMap& ReadyResponse::_internal_handlermap() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::module::v1::HandlerMap* p = _impl_.handlermap_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::module::v1::HandlerMap&>(::viam::module::v1::_HandlerMap_default_instance_);
}
inline const ::viam::module::v1::HandlerMap& ReadyResponse::handlermap() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.ReadyResponse.handlermap)
  return _internal_handlermap();
}
inline void ReadyResponse::unsafe_arena_set_allocated_handlermap(::viam::module::v1::HandlerMap* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.handlermap_);
  }
  _impl_.handlermap_ = reinterpret_cast<::viam::module::v1::HandlerMap*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.module.v1.ReadyResponse.handlermap)
}
inline ::viam::module::v1::HandlerMap* ReadyResponse::release_handlermap() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::module::v1::HandlerMap* released = _impl_.handlermap_;
  _impl_.handlermap_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::module::v1::HandlerMap* ReadyResponse::unsafe_arena_release_handlermap() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.module.v1.ReadyResponse.handlermap)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::module::v1::HandlerMap* temp = _impl_.handlermap_;
  _impl_.handlermap_ = nullptr;
  return temp;
}
inline ::viam::module::v1::HandlerMap* ReadyResponse::_internal_mutable_handlermap() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.handlermap_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::module::v1::HandlerMap>(GetArena());
    _impl_.handlermap_ = reinterpret_cast<::viam::module::v1::HandlerMap*>(p);
  }
  return _impl_.handlermap_;
}
inline ::viam::module::v1::HandlerMap* ReadyResponse::mutable_handlermap() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::module::v1::HandlerMap* _msg = _internal_mutable_handlermap();
  // @@protoc_insertion_point(field_mutable:viam.module.v1.ReadyResponse.handlermap)
  return _msg;
}
inline void ReadyResponse::set_allocated_handlermap(::viam::module::v1::HandlerMap* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::viam::module::v1::HandlerMap*>(_impl_.handlermap_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::viam::module::v1::HandlerMap*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.handlermap_ = reinterpret_cast<::viam::module::v1::HandlerMap*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.module.v1.ReadyResponse.handlermap)
}

// string webrtc_answer = 3 [json_name = "webrtcAnswer"];
inline void ReadyResponse::clear_webrtc_answer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.webrtc_answer_.ClearToEmpty();
}
inline const std::string& ReadyResponse::webrtc_answer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.ReadyResponse.webrtc_answer)
  return _internal_webrtc_answer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReadyResponse::set_webrtc_answer(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.webrtc_answer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.module.v1.ReadyResponse.webrtc_answer)
}
inline std::string* ReadyResponse::mutable_webrtc_answer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_webrtc_answer();
  // @@protoc_insertion_point(field_mutable:viam.module.v1.ReadyResponse.webrtc_answer)
  return _s;
}
inline const std::string& ReadyResponse::_internal_webrtc_answer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.webrtc_answer_.Get();
}
inline void ReadyResponse::_internal_set_webrtc_answer(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.webrtc_answer_.Set(value, GetArena());
}
inline std::string* ReadyResponse::_internal_mutable_webrtc_answer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.webrtc_answer_.Mutable( GetArena());
}
inline std::string* ReadyResponse::release_webrtc_answer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.module.v1.ReadyResponse.webrtc_answer)
  return _impl_.webrtc_answer_.Release();
}
inline void ReadyResponse::set_allocated_webrtc_answer(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.webrtc_answer_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.webrtc_answer_.IsDefault()) {
          _impl_.webrtc_answer_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.module.v1.ReadyResponse.webrtc_answer)
}

// -------------------------------------------------------------------

// ValidateConfigRequest

// .viam.app.v1.ComponentConfig config = 1 [json_name = "config"];
inline bool ValidateConfigRequest::has_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.config_ != nullptr);
  return value;
}
inline const ::viam::app::v1::ComponentConfig& ValidateConfigRequest::_internal_config() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::app::v1::ComponentConfig* p = _impl_.config_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::app::v1::ComponentConfig&>(::viam::app::v1::_ComponentConfig_default_instance_);
}
inline const ::viam::app::v1::ComponentConfig& ValidateConfigRequest::config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.ValidateConfigRequest.config)
  return _internal_config();
}
inline void ValidateConfigRequest::unsafe_arena_set_allocated_config(::viam::app::v1::ComponentConfig* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }
  _impl_.config_ = reinterpret_cast<::viam::app::v1::ComponentConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.module.v1.ValidateConfigRequest.config)
}
inline ::viam::app::v1::ComponentConfig* ValidateConfigRequest::release_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::app::v1::ComponentConfig* released = _impl_.config_;
  _impl_.config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::app::v1::ComponentConfig* ValidateConfigRequest::unsafe_arena_release_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.module.v1.ValidateConfigRequest.config)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::app::v1::ComponentConfig* temp = _impl_.config_;
  _impl_.config_ = nullptr;
  return temp;
}
inline ::viam::app::v1::ComponentConfig* ValidateConfigRequest::_internal_mutable_config() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.config_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::app::v1::ComponentConfig>(GetArena());
    _impl_.config_ = reinterpret_cast<::viam::app::v1::ComponentConfig*>(p);
  }
  return _impl_.config_;
}
inline ::viam::app::v1::ComponentConfig* ValidateConfigRequest::mutable_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::app::v1::ComponentConfig* _msg = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:viam.module.v1.ValidateConfigRequest.config)
  return _msg;
}
inline void ValidateConfigRequest::set_allocated_config(::viam::app::v1::ComponentConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.config_ = reinterpret_cast<::viam::app::v1::ComponentConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.module.v1.ValidateConfigRequest.config)
}

// -------------------------------------------------------------------

// ValidateConfigResponse

// repeated string dependencies = 1 [json_name = "dependencies"];
inline int ValidateConfigResponse::_internal_dependencies_size() const {
  return _internal_dependencies().size();
}
inline int ValidateConfigResponse::dependencies_size() const {
  return _internal_dependencies_size();
}
inline void ValidateConfigResponse::clear_dependencies() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dependencies_.Clear();
}
inline std::string* ValidateConfigResponse::add_dependencies()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_dependencies()->Add();
  // @@protoc_insertion_point(field_add_mutable:viam.module.v1.ValidateConfigResponse.dependencies)
  return _s;
}
inline const std::string& ValidateConfigResponse::dependencies(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.module.v1.ValidateConfigResponse.dependencies)
  return _internal_dependencies().Get(index);
}
inline std::string* ValidateConfigResponse::mutable_dependencies(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.module.v1.ValidateConfigResponse.dependencies)
  return _internal_mutable_dependencies()->Mutable(index);
}
inline void ValidateConfigResponse::set_dependencies(int index, const std::string& value) {
  _internal_mutable_dependencies()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:viam.module.v1.ValidateConfigResponse.dependencies)
}
inline void ValidateConfigResponse::set_dependencies(int index, std::string&& value) {
  _internal_mutable_dependencies()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:viam.module.v1.ValidateConfigResponse.dependencies)
}
inline void ValidateConfigResponse::set_dependencies(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_dependencies()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:viam.module.v1.ValidateConfigResponse.dependencies)
}
inline void ValidateConfigResponse::set_dependencies(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_dependencies()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:viam.module.v1.ValidateConfigResponse.dependencies)
}
inline void ValidateConfigResponse::set_dependencies(int index, absl::string_view value) {
  _internal_mutable_dependencies()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:viam.module.v1.ValidateConfigResponse.dependencies)
}
inline void ValidateConfigResponse::add_dependencies(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:viam.module.v1.ValidateConfigResponse.dependencies)
}
inline void ValidateConfigResponse::add_dependencies(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:viam.module.v1.ValidateConfigResponse.dependencies)
}
inline void ValidateConfigResponse::add_dependencies(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:viam.module.v1.ValidateConfigResponse.dependencies)
}
inline void ValidateConfigResponse::add_dependencies(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:viam.module.v1.ValidateConfigResponse.dependencies)
}
inline void ValidateConfigResponse::add_dependencies(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_dependencies()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:viam.module.v1.ValidateConfigResponse.dependencies)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ValidateConfigResponse::dependencies() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.module.v1.ValidateConfigResponse.dependencies)
  return _internal_dependencies();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ValidateConfigResponse::mutable_dependencies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.module.v1.ValidateConfigResponse.dependencies)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_dependencies();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ValidateConfigResponse::_internal_dependencies() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dependencies_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ValidateConfigResponse::_internal_mutable_dependencies() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.dependencies_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace module
}  // namespace viam


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_module_2fv1_2fmodule_2eproto_2epb_2eh
