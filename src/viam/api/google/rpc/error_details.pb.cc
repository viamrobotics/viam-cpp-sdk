// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/rpc/error_details.proto

#include "google/rpc/error_details.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace rpc {
PROTOBUF_CONSTEXPR ErrorInfo_MetadataEntry_DoNotUse::ErrorInfo_MetadataEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct ErrorInfo_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ErrorInfo_MetadataEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ErrorInfo_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ErrorInfo_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ErrorInfo_MetadataEntry_DoNotUseDefaultTypeInternal _ErrorInfo_MetadataEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ErrorInfo::ErrorInfo(
    ::_pbi::ConstantInitialized)
  : metadata_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , reason_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , domain_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ErrorInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ErrorInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ErrorInfoDefaultTypeInternal() {}
  union {
    ErrorInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ErrorInfoDefaultTypeInternal _ErrorInfo_default_instance_;
PROTOBUF_CONSTEXPR RetryInfo::RetryInfo(
    ::_pbi::ConstantInitialized)
  : retry_delay_(nullptr){}
struct RetryInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RetryInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RetryInfoDefaultTypeInternal() {}
  union {
    RetryInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RetryInfoDefaultTypeInternal _RetryInfo_default_instance_;
PROTOBUF_CONSTEXPR DebugInfo::DebugInfo(
    ::_pbi::ConstantInitialized)
  : stack_entries_()
  , detail_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DebugInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DebugInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DebugInfoDefaultTypeInternal() {}
  union {
    DebugInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DebugInfoDefaultTypeInternal _DebugInfo_default_instance_;
PROTOBUF_CONSTEXPR QuotaFailure_Violation::QuotaFailure_Violation(
    ::_pbi::ConstantInitialized)
  : subject_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct QuotaFailure_ViolationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuotaFailure_ViolationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuotaFailure_ViolationDefaultTypeInternal() {}
  union {
    QuotaFailure_Violation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuotaFailure_ViolationDefaultTypeInternal _QuotaFailure_Violation_default_instance_;
PROTOBUF_CONSTEXPR QuotaFailure::QuotaFailure(
    ::_pbi::ConstantInitialized)
  : violations_(){}
struct QuotaFailureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuotaFailureDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuotaFailureDefaultTypeInternal() {}
  union {
    QuotaFailure _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuotaFailureDefaultTypeInternal _QuotaFailure_default_instance_;
PROTOBUF_CONSTEXPR PreconditionFailure_Violation::PreconditionFailure_Violation(
    ::_pbi::ConstantInitialized)
  : type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , subject_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct PreconditionFailure_ViolationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PreconditionFailure_ViolationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PreconditionFailure_ViolationDefaultTypeInternal() {}
  union {
    PreconditionFailure_Violation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PreconditionFailure_ViolationDefaultTypeInternal _PreconditionFailure_Violation_default_instance_;
PROTOBUF_CONSTEXPR PreconditionFailure::PreconditionFailure(
    ::_pbi::ConstantInitialized)
  : violations_(){}
struct PreconditionFailureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PreconditionFailureDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PreconditionFailureDefaultTypeInternal() {}
  union {
    PreconditionFailure _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PreconditionFailureDefaultTypeInternal _PreconditionFailure_default_instance_;
PROTOBUF_CONSTEXPR BadRequest_FieldViolation::BadRequest_FieldViolation(
    ::_pbi::ConstantInitialized)
  : field_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , reason_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , localized_message_(nullptr){}
struct BadRequest_FieldViolationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BadRequest_FieldViolationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BadRequest_FieldViolationDefaultTypeInternal() {}
  union {
    BadRequest_FieldViolation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BadRequest_FieldViolationDefaultTypeInternal _BadRequest_FieldViolation_default_instance_;
PROTOBUF_CONSTEXPR BadRequest::BadRequest(
    ::_pbi::ConstantInitialized)
  : field_violations_(){}
struct BadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BadRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BadRequestDefaultTypeInternal() {}
  union {
    BadRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BadRequestDefaultTypeInternal _BadRequest_default_instance_;
PROTOBUF_CONSTEXPR RequestInfo::RequestInfo(
    ::_pbi::ConstantInitialized)
  : request_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , serving_data_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct RequestInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestInfoDefaultTypeInternal() {}
  union {
    RequestInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestInfoDefaultTypeInternal _RequestInfo_default_instance_;
PROTOBUF_CONSTEXPR ResourceInfo::ResourceInfo(
    ::_pbi::ConstantInitialized)
  : resource_type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , resource_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , owner_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ResourceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceInfoDefaultTypeInternal() {}
  union {
    ResourceInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceInfoDefaultTypeInternal _ResourceInfo_default_instance_;
PROTOBUF_CONSTEXPR Help_Link::Help_Link(
    ::_pbi::ConstantInitialized)
  : description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct Help_LinkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Help_LinkDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Help_LinkDefaultTypeInternal() {}
  union {
    Help_Link _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Help_LinkDefaultTypeInternal _Help_Link_default_instance_;
PROTOBUF_CONSTEXPR Help::Help(
    ::_pbi::ConstantInitialized)
  : links_(){}
struct HelpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelpDefaultTypeInternal() {}
  union {
    Help _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HelpDefaultTypeInternal _Help_default_instance_;
PROTOBUF_CONSTEXPR LocalizedMessage::LocalizedMessage(
    ::_pbi::ConstantInitialized)
  : locale_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , message_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct LocalizedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalizedMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalizedMessageDefaultTypeInternal() {}
  union {
    LocalizedMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalizedMessageDefaultTypeInternal _LocalizedMessage_default_instance_;
}  // namespace rpc
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[15];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2frpc_2ferror_5fdetails_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2frpc_2ferror_5fdetails_2eproto = nullptr;

const uint32_t TableStruct_google_2frpc_2ferror_5fdetails_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::rpc::ErrorInfo_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::ErrorInfo_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::ErrorInfo_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::ErrorInfo_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::ErrorInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::ErrorInfo, reason_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::ErrorInfo, domain_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::ErrorInfo, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::RetryInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::RetryInfo, retry_delay_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::DebugInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::DebugInfo, stack_entries_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::DebugInfo, detail_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::QuotaFailure_Violation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::QuotaFailure_Violation, subject_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::QuotaFailure_Violation, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::QuotaFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::QuotaFailure, violations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::PreconditionFailure_Violation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::PreconditionFailure_Violation, type_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::PreconditionFailure_Violation, subject_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::PreconditionFailure_Violation, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::PreconditionFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::PreconditionFailure, violations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::BadRequest_FieldViolation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::BadRequest_FieldViolation, field_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::BadRequest_FieldViolation, description_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::BadRequest_FieldViolation, reason_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::BadRequest_FieldViolation, localized_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::BadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::BadRequest, field_violations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::RequestInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::RequestInfo, request_id_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::RequestInfo, serving_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::ResourceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::ResourceInfo, resource_type_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::ResourceInfo, resource_name_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::ResourceInfo, owner_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::ResourceInfo, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::Help_Link, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::Help_Link, description_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::Help_Link, url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::Help, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::Help, links_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::rpc::LocalizedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::rpc::LocalizedMessage, locale_),
  PROTOBUF_FIELD_OFFSET(::google::rpc::LocalizedMessage, message_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::google::rpc::ErrorInfo_MetadataEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::google::rpc::ErrorInfo)},
  { 19, -1, -1, sizeof(::google::rpc::RetryInfo)},
  { 26, -1, -1, sizeof(::google::rpc::DebugInfo)},
  { 34, -1, -1, sizeof(::google::rpc::QuotaFailure_Violation)},
  { 42, -1, -1, sizeof(::google::rpc::QuotaFailure)},
  { 49, -1, -1, sizeof(::google::rpc::PreconditionFailure_Violation)},
  { 58, -1, -1, sizeof(::google::rpc::PreconditionFailure)},
  { 65, -1, -1, sizeof(::google::rpc::BadRequest_FieldViolation)},
  { 75, -1, -1, sizeof(::google::rpc::BadRequest)},
  { 82, -1, -1, sizeof(::google::rpc::RequestInfo)},
  { 90, -1, -1, sizeof(::google::rpc::ResourceInfo)},
  { 100, -1, -1, sizeof(::google::rpc::Help_Link)},
  { 108, -1, -1, sizeof(::google::rpc::Help)},
  { 115, -1, -1, sizeof(::google::rpc::LocalizedMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::rpc::_ErrorInfo_MetadataEntry_DoNotUse_default_instance_._instance,
  &::google::rpc::_ErrorInfo_default_instance_._instance,
  &::google::rpc::_RetryInfo_default_instance_._instance,
  &::google::rpc::_DebugInfo_default_instance_._instance,
  &::google::rpc::_QuotaFailure_Violation_default_instance_._instance,
  &::google::rpc::_QuotaFailure_default_instance_._instance,
  &::google::rpc::_PreconditionFailure_Violation_default_instance_._instance,
  &::google::rpc::_PreconditionFailure_default_instance_._instance,
  &::google::rpc::_BadRequest_FieldViolation_default_instance_._instance,
  &::google::rpc::_BadRequest_default_instance_._instance,
  &::google::rpc::_RequestInfo_default_instance_._instance,
  &::google::rpc::_ResourceInfo_default_instance_._instance,
  &::google::rpc::_Help_Link_default_instance_._instance,
  &::google::rpc::_Help_default_instance_._instance,
  &::google::rpc::_LocalizedMessage_default_instance_._instance,
};

const char descriptor_table_protodef_google_2frpc_2ferror_5fdetails_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036google/rpc/error_details.proto\022\ngoogle"
  ".rpc\032\036google/protobuf/duration.proto\"\271\001\n"
  "\tErrorInfo\022\026\n\006reason\030\001 \001(\tR\006reason\022\026\n\006do"
  "main\030\002 \001(\tR\006domain\022\?\n\010metadata\030\003 \003(\0132#.g"
  "oogle.rpc.ErrorInfo.MetadataEntryR\010metad"
  "ata\032;\n\rMetadataEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024"
  "\n\005value\030\002 \001(\tR\005value:\0028\001\"G\n\tRetryInfo\022:\n"
  "\013retry_delay\030\001 \001(\0132\031.google.protobuf.Dur"
  "ationR\nretryDelay\"H\n\tDebugInfo\022#\n\rstack_"
  "entries\030\001 \003(\tR\014stackEntries\022\026\n\006detail\030\002 "
  "\001(\tR\006detail\"\233\001\n\014QuotaFailure\022B\n\nviolatio"
  "ns\030\001 \003(\0132\".google.rpc.QuotaFailure.Viola"
  "tionR\nviolations\032G\n\tViolation\022\030\n\007subject"
  "\030\001 \001(\tR\007subject\022 \n\013description\030\002 \001(\tR\013de"
  "scription\"\275\001\n\023PreconditionFailure\022I\n\nvio"
  "lations\030\001 \003(\0132).google.rpc.PreconditionF"
  "ailure.ViolationR\nviolations\032[\n\tViolatio"
  "n\022\022\n\004type\030\001 \001(\tR\004type\022\030\n\007subject\030\002 \001(\tR\007"
  "subject\022 \n\013description\030\003 \001(\tR\013descriptio"
  "n\"\214\002\n\nBadRequest\022P\n\020field_violations\030\001 \003"
  "(\0132%.google.rpc.BadRequest.FieldViolatio"
  "nR\017fieldViolations\032\253\001\n\016FieldViolation\022\024\n"
  "\005field\030\001 \001(\tR\005field\022 \n\013description\030\002 \001(\t"
  "R\013description\022\026\n\006reason\030\003 \001(\tR\006reason\022I\n"
  "\021localized_message\030\004 \001(\0132\034.google.rpc.Lo"
  "calizedMessageR\020localizedMessage\"O\n\013Requ"
  "estInfo\022\035\n\nrequest_id\030\001 \001(\tR\trequestId\022!"
  "\n\014serving_data\030\002 \001(\tR\013servingData\"\220\001\n\014Re"
  "sourceInfo\022#\n\rresource_type\030\001 \001(\tR\014resou"
  "rceType\022#\n\rresource_name\030\002 \001(\tR\014resource"
  "Name\022\024\n\005owner\030\003 \001(\tR\005owner\022 \n\013descriptio"
  "n\030\004 \001(\tR\013description\"o\n\004Help\022+\n\005links\030\001 "
  "\003(\0132\025.google.rpc.Help.LinkR\005links\032:\n\004Lin"
  "k\022 \n\013description\030\001 \001(\tR\013description\022\020\n\003u"
  "rl\030\002 \001(\tR\003url\"D\n\020LocalizedMessage\022\026\n\006loc"
  "ale\030\001 \001(\tR\006locale\022\030\n\007message\030\002 \001(\tR\007mess"
  "ageBl\n\016com.google.rpcB\021ErrorDetailsProto"
  "P\001Z\?google.golang.org/genproto/googleapi"
  "s/rpc/errdetails;errdetails\242\002\003RPCb\006proto"
  "3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2frpc_2ferror_5fdetails_2eproto = {
    false, false, 1561, descriptor_table_protodef_google_2frpc_2ferror_5fdetails_2eproto,
    "google/rpc/error_details.proto",
    &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once, descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_deps, 1, 15,
    schemas, file_default_instances, TableStruct_google_2frpc_2ferror_5fdetails_2eproto::offsets,
    file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto, file_level_enum_descriptors_google_2frpc_2ferror_5fdetails_2eproto,
    file_level_service_descriptors_google_2frpc_2ferror_5fdetails_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter() {
  return &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2frpc_2ferror_5fdetails_2eproto(&descriptor_table_google_2frpc_2ferror_5fdetails_2eproto);
namespace google {
namespace rpc {

// ===================================================================

ErrorInfo_MetadataEntry_DoNotUse::ErrorInfo_MetadataEntry_DoNotUse() {}
ErrorInfo_MetadataEntry_DoNotUse::ErrorInfo_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ErrorInfo_MetadataEntry_DoNotUse::MergeFrom(const ErrorInfo_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ErrorInfo_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[0]);
}

// ===================================================================

class ErrorInfo::_Internal {
 public:
};

ErrorInfo::ErrorInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  metadata_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ErrorInfo::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.rpc.ErrorInfo)
}
ErrorInfo::ErrorInfo(const ErrorInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reason().empty()) {
    reason_.Set(from._internal_reason(), 
      GetArenaForAllocation());
  }
  domain_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    domain_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_domain().empty()) {
    domain_.Set(from._internal_domain(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.ErrorInfo)
}

inline void ErrorInfo::SharedCtor() {
reason_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  reason_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
domain_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  domain_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ErrorInfo::~ErrorInfo() {
  // @@protoc_insertion_point(destructor:google.rpc.ErrorInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ErrorInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  metadata_.Destruct();
  reason_.Destroy();
  domain_.Destroy();
}

void ErrorInfo::ArenaDtor(void* object) {
  ErrorInfo* _this = reinterpret_cast< ErrorInfo* >(object);
  _this->metadata_.Destruct();
}
void ErrorInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ErrorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.ErrorInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  reason_.ClearToEmpty();
  domain_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ErrorInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string reason = 1 [json_name = "reason"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.ErrorInfo.reason"));
        } else
          goto handle_unusual;
        continue;
      // string domain = 2 [json_name = "domain"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_domain();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.ErrorInfo.domain"));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> metadata = 3 [json_name = "metadata"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ErrorInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.ErrorInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string reason = 1 [json_name = "reason"];
  if (!this->_internal_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ErrorInfo.reason");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reason(), target);
  }

  // string domain = 2 [json_name = "domain"];
  if (!this->_internal_domain().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain().data(), static_cast<int>(this->_internal_domain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ErrorInfo.domain");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_domain(), target);
  }

  // map<string, string> metadata = 3 [json_name = "metadata"];
  if (!this->_internal_metadata().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = ErrorInfo_MetadataEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_metadata();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.rpc.ErrorInfo.MetadataEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "google.rpc.ErrorInfo.MetadataEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.ErrorInfo)
  return target;
}

size_t ErrorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.ErrorInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> metadata = 3 [json_name = "metadata"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += ErrorInfo_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string reason = 1 [json_name = "reason"];
  if (!this->_internal_reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  // string domain = 2 [json_name = "domain"];
  if (!this->_internal_domain().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ErrorInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ErrorInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ErrorInfo::GetClassData() const { return &_class_data_; }

void ErrorInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ErrorInfo *>(to)->MergeFrom(
      static_cast<const ErrorInfo &>(from));
}


void ErrorInfo::MergeFrom(const ErrorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.ErrorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (!from._internal_reason().empty()) {
    _internal_set_reason(from._internal_reason());
  }
  if (!from._internal_domain().empty()) {
    _internal_set_domain(from._internal_domain());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ErrorInfo::CopyFrom(const ErrorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.ErrorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorInfo::IsInitialized() const {
  return true;
}

void ErrorInfo::InternalSwap(ErrorInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &reason_, lhs_arena,
      &other->reason_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &domain_, lhs_arena,
      &other->domain_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ErrorInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[1]);
}

// ===================================================================

class RetryInfo::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Duration& retry_delay(const RetryInfo* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Duration&
RetryInfo::_Internal::retry_delay(const RetryInfo* msg) {
  return *msg->retry_delay_;
}
void RetryInfo::clear_retry_delay() {
  if (GetArenaForAllocation() == nullptr && retry_delay_ != nullptr) {
    delete retry_delay_;
  }
  retry_delay_ = nullptr;
}
RetryInfo::RetryInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.rpc.RetryInfo)
}
RetryInfo::RetryInfo(const RetryInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_retry_delay()) {
    retry_delay_ = new ::PROTOBUF_NAMESPACE_ID::Duration(*from.retry_delay_);
  } else {
    retry_delay_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.RetryInfo)
}

inline void RetryInfo::SharedCtor() {
retry_delay_ = nullptr;
}

RetryInfo::~RetryInfo() {
  // @@protoc_insertion_point(destructor:google.rpc.RetryInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RetryInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete retry_delay_;
}

void RetryInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RetryInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.RetryInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && retry_delay_ != nullptr) {
    delete retry_delay_;
  }
  retry_delay_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RetryInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Duration retry_delay = 1 [json_name = "retryDelay"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_retry_delay(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RetryInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.RetryInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration retry_delay = 1 [json_name = "retryDelay"];
  if (this->_internal_has_retry_delay()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::retry_delay(this),
        _Internal::retry_delay(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.RetryInfo)
  return target;
}

size_t RetryInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.RetryInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Duration retry_delay = 1 [json_name = "retryDelay"];
  if (this->_internal_has_retry_delay()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *retry_delay_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RetryInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RetryInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RetryInfo::GetClassData() const { return &_class_data_; }

void RetryInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RetryInfo *>(to)->MergeFrom(
      static_cast<const RetryInfo &>(from));
}


void RetryInfo::MergeFrom(const RetryInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.RetryInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_retry_delay()) {
    _internal_mutable_retry_delay()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_retry_delay());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RetryInfo::CopyFrom(const RetryInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.RetryInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetryInfo::IsInitialized() const {
  return true;
}

void RetryInfo::InternalSwap(RetryInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(retry_delay_, other->retry_delay_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RetryInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[2]);
}

// ===================================================================

class DebugInfo::_Internal {
 public:
};

DebugInfo::DebugInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  stack_entries_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.rpc.DebugInfo)
}
DebugInfo::DebugInfo(const DebugInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      stack_entries_(from.stack_entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_detail().empty()) {
    detail_.Set(from._internal_detail(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.DebugInfo)
}

inline void DebugInfo::SharedCtor() {
detail_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  detail_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DebugInfo::~DebugInfo() {
  // @@protoc_insertion_point(destructor:google.rpc.DebugInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DebugInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  detail_.Destroy();
}

void DebugInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DebugInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.DebugInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stack_entries_.Clear();
  detail_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DebugInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string stack_entries = 1 [json_name = "stackEntries"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_stack_entries();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "google.rpc.DebugInfo.stack_entries"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string detail = 2 [json_name = "detail"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_detail();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.DebugInfo.detail"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DebugInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.DebugInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string stack_entries = 1 [json_name = "stackEntries"];
  for (int i = 0, n = this->_internal_stack_entries_size(); i < n; i++) {
    const auto& s = this->_internal_stack_entries(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.DebugInfo.stack_entries");
    target = stream->WriteString(1, s, target);
  }

  // string detail = 2 [json_name = "detail"];
  if (!this->_internal_detail().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_detail().data(), static_cast<int>(this->_internal_detail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.DebugInfo.detail");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_detail(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.DebugInfo)
  return target;
}

size_t DebugInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.DebugInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string stack_entries = 1 [json_name = "stackEntries"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(stack_entries_.size());
  for (int i = 0, n = stack_entries_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      stack_entries_.Get(i));
  }

  // string detail = 2 [json_name = "detail"];
  if (!this->_internal_detail().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_detail());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DebugInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DebugInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DebugInfo::GetClassData() const { return &_class_data_; }

void DebugInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DebugInfo *>(to)->MergeFrom(
      static_cast<const DebugInfo &>(from));
}


void DebugInfo::MergeFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.DebugInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  stack_entries_.MergeFrom(from.stack_entries_);
  if (!from._internal_detail().empty()) {
    _internal_set_detail(from._internal_detail());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DebugInfo::CopyFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.DebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugInfo::IsInitialized() const {
  return true;
}

void DebugInfo::InternalSwap(DebugInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  stack_entries_.InternalSwap(&other->stack_entries_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &detail_, lhs_arena,
      &other->detail_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DebugInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[3]);
}

// ===================================================================

class QuotaFailure_Violation::_Internal {
 public:
};

QuotaFailure_Violation::QuotaFailure_Violation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.rpc.QuotaFailure.Violation)
}
QuotaFailure_Violation::QuotaFailure_Violation(const QuotaFailure_Violation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subject_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    subject_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_subject().empty()) {
    subject_.Set(from._internal_subject(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.QuotaFailure.Violation)
}

inline void QuotaFailure_Violation::SharedCtor() {
subject_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  subject_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QuotaFailure_Violation::~QuotaFailure_Violation() {
  // @@protoc_insertion_point(destructor:google.rpc.QuotaFailure.Violation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuotaFailure_Violation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  subject_.Destroy();
  description_.Destroy();
}

void QuotaFailure_Violation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QuotaFailure_Violation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.QuotaFailure.Violation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subject_.ClearToEmpty();
  description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuotaFailure_Violation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string subject = 1 [json_name = "subject"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_subject();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.QuotaFailure.Violation.subject"));
        } else
          goto handle_unusual;
        continue;
      // string description = 2 [json_name = "description"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.QuotaFailure.Violation.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QuotaFailure_Violation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.QuotaFailure.Violation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1 [json_name = "subject"];
  if (!this->_internal_subject().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subject().data(), static_cast<int>(this->_internal_subject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.QuotaFailure.Violation.subject");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subject(), target);
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.QuotaFailure.Violation.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.QuotaFailure.Violation)
  return target;
}

size_t QuotaFailure_Violation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.QuotaFailure.Violation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subject = 1 [json_name = "subject"];
  if (!this->_internal_subject().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subject());
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuotaFailure_Violation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    QuotaFailure_Violation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuotaFailure_Violation::GetClassData() const { return &_class_data_; }

void QuotaFailure_Violation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<QuotaFailure_Violation *>(to)->MergeFrom(
      static_cast<const QuotaFailure_Violation &>(from));
}


void QuotaFailure_Violation::MergeFrom(const QuotaFailure_Violation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.QuotaFailure.Violation)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_subject().empty()) {
    _internal_set_subject(from._internal_subject());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuotaFailure_Violation::CopyFrom(const QuotaFailure_Violation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.QuotaFailure.Violation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaFailure_Violation::IsInitialized() const {
  return true;
}

void QuotaFailure_Violation::InternalSwap(QuotaFailure_Violation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &subject_, lhs_arena,
      &other->subject_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata QuotaFailure_Violation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[4]);
}

// ===================================================================

class QuotaFailure::_Internal {
 public:
};

QuotaFailure::QuotaFailure(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  violations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.rpc.QuotaFailure)
}
QuotaFailure::QuotaFailure(const QuotaFailure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      violations_(from.violations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.rpc.QuotaFailure)
}

inline void QuotaFailure::SharedCtor() {
}

QuotaFailure::~QuotaFailure() {
  // @@protoc_insertion_point(destructor:google.rpc.QuotaFailure)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuotaFailure::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void QuotaFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QuotaFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.QuotaFailure)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  violations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuotaFailure::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.rpc.QuotaFailure.Violation violations = 1 [json_name = "violations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_violations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QuotaFailure::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.QuotaFailure)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.rpc.QuotaFailure.Violation violations = 1 [json_name = "violations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_violations_size()); i < n; i++) {
    const auto& repfield = this->_internal_violations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.QuotaFailure)
  return target;
}

size_t QuotaFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.QuotaFailure)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.rpc.QuotaFailure.Violation violations = 1 [json_name = "violations"];
  total_size += 1UL * this->_internal_violations_size();
  for (const auto& msg : this->violations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuotaFailure::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    QuotaFailure::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuotaFailure::GetClassData() const { return &_class_data_; }

void QuotaFailure::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<QuotaFailure *>(to)->MergeFrom(
      static_cast<const QuotaFailure &>(from));
}


void QuotaFailure::MergeFrom(const QuotaFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.QuotaFailure)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  violations_.MergeFrom(from.violations_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuotaFailure::CopyFrom(const QuotaFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.QuotaFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaFailure::IsInitialized() const {
  return true;
}

void QuotaFailure::InternalSwap(QuotaFailure* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  violations_.InternalSwap(&other->violations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuotaFailure::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[5]);
}

// ===================================================================

class PreconditionFailure_Violation::_Internal {
 public:
};

PreconditionFailure_Violation::PreconditionFailure_Violation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.rpc.PreconditionFailure.Violation)
}
PreconditionFailure_Violation::PreconditionFailure_Violation(const PreconditionFailure_Violation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    type_.Set(from._internal_type(), 
      GetArenaForAllocation());
  }
  subject_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    subject_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_subject().empty()) {
    subject_.Set(from._internal_subject(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.PreconditionFailure.Violation)
}

inline void PreconditionFailure_Violation::SharedCtor() {
type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
subject_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  subject_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PreconditionFailure_Violation::~PreconditionFailure_Violation() {
  // @@protoc_insertion_point(destructor:google.rpc.PreconditionFailure.Violation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PreconditionFailure_Violation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  type_.Destroy();
  subject_.Destroy();
  description_.Destroy();
}

void PreconditionFailure_Violation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PreconditionFailure_Violation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.PreconditionFailure.Violation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmpty();
  subject_.ClearToEmpty();
  description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreconditionFailure_Violation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string type = 1 [json_name = "type"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.PreconditionFailure.Violation.type"));
        } else
          goto handle_unusual;
        continue;
      // string subject = 2 [json_name = "subject"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_subject();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.PreconditionFailure.Violation.subject"));
        } else
          goto handle_unusual;
        continue;
      // string description = 3 [json_name = "description"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.PreconditionFailure.Violation.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PreconditionFailure_Violation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.PreconditionFailure.Violation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1 [json_name = "type"];
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.PreconditionFailure.Violation.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // string subject = 2 [json_name = "subject"];
  if (!this->_internal_subject().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subject().data(), static_cast<int>(this->_internal_subject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.PreconditionFailure.Violation.subject");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subject(), target);
  }

  // string description = 3 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.PreconditionFailure.Violation.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.PreconditionFailure.Violation)
  return target;
}

size_t PreconditionFailure_Violation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.PreconditionFailure.Violation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 1 [json_name = "type"];
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string subject = 2 [json_name = "subject"];
  if (!this->_internal_subject().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subject());
  }

  // string description = 3 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PreconditionFailure_Violation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PreconditionFailure_Violation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PreconditionFailure_Violation::GetClassData() const { return &_class_data_; }

void PreconditionFailure_Violation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PreconditionFailure_Violation *>(to)->MergeFrom(
      static_cast<const PreconditionFailure_Violation &>(from));
}


void PreconditionFailure_Violation::MergeFrom(const PreconditionFailure_Violation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.PreconditionFailure.Violation)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _internal_set_type(from._internal_type());
  }
  if (!from._internal_subject().empty()) {
    _internal_set_subject(from._internal_subject());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PreconditionFailure_Violation::CopyFrom(const PreconditionFailure_Violation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.PreconditionFailure.Violation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreconditionFailure_Violation::IsInitialized() const {
  return true;
}

void PreconditionFailure_Violation::InternalSwap(PreconditionFailure_Violation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &type_, lhs_arena,
      &other->type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &subject_, lhs_arena,
      &other->subject_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PreconditionFailure_Violation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[6]);
}

// ===================================================================

class PreconditionFailure::_Internal {
 public:
};

PreconditionFailure::PreconditionFailure(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  violations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.rpc.PreconditionFailure)
}
PreconditionFailure::PreconditionFailure(const PreconditionFailure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      violations_(from.violations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.rpc.PreconditionFailure)
}

inline void PreconditionFailure::SharedCtor() {
}

PreconditionFailure::~PreconditionFailure() {
  // @@protoc_insertion_point(destructor:google.rpc.PreconditionFailure)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PreconditionFailure::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PreconditionFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PreconditionFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.PreconditionFailure)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  violations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreconditionFailure::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.rpc.PreconditionFailure.Violation violations = 1 [json_name = "violations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_violations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PreconditionFailure::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.PreconditionFailure)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.rpc.PreconditionFailure.Violation violations = 1 [json_name = "violations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_violations_size()); i < n; i++) {
    const auto& repfield = this->_internal_violations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.PreconditionFailure)
  return target;
}

size_t PreconditionFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.PreconditionFailure)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.rpc.PreconditionFailure.Violation violations = 1 [json_name = "violations"];
  total_size += 1UL * this->_internal_violations_size();
  for (const auto& msg : this->violations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PreconditionFailure::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PreconditionFailure::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PreconditionFailure::GetClassData() const { return &_class_data_; }

void PreconditionFailure::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PreconditionFailure *>(to)->MergeFrom(
      static_cast<const PreconditionFailure &>(from));
}


void PreconditionFailure::MergeFrom(const PreconditionFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.PreconditionFailure)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  violations_.MergeFrom(from.violations_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PreconditionFailure::CopyFrom(const PreconditionFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.PreconditionFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreconditionFailure::IsInitialized() const {
  return true;
}

void PreconditionFailure::InternalSwap(PreconditionFailure* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  violations_.InternalSwap(&other->violations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PreconditionFailure::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[7]);
}

// ===================================================================

class BadRequest_FieldViolation::_Internal {
 public:
  static const ::google::rpc::LocalizedMessage& localized_message(const BadRequest_FieldViolation* msg);
};

const ::google::rpc::LocalizedMessage&
BadRequest_FieldViolation::_Internal::localized_message(const BadRequest_FieldViolation* msg) {
  return *msg->localized_message_;
}
BadRequest_FieldViolation::BadRequest_FieldViolation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.rpc.BadRequest.FieldViolation)
}
BadRequest_FieldViolation::BadRequest_FieldViolation(const BadRequest_FieldViolation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  field_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    field_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_field().empty()) {
    field_.Set(from._internal_field(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  reason_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    reason_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reason().empty()) {
    reason_.Set(from._internal_reason(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_localized_message()) {
    localized_message_ = new ::google::rpc::LocalizedMessage(*from.localized_message_);
  } else {
    localized_message_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.BadRequest.FieldViolation)
}

inline void BadRequest_FieldViolation::SharedCtor() {
field_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  field_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
reason_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  reason_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
localized_message_ = nullptr;
}

BadRequest_FieldViolation::~BadRequest_FieldViolation() {
  // @@protoc_insertion_point(destructor:google.rpc.BadRequest.FieldViolation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BadRequest_FieldViolation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  field_.Destroy();
  description_.Destroy();
  reason_.Destroy();
  if (this != internal_default_instance()) delete localized_message_;
}

void BadRequest_FieldViolation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BadRequest_FieldViolation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.BadRequest.FieldViolation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.ClearToEmpty();
  description_.ClearToEmpty();
  reason_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && localized_message_ != nullptr) {
    delete localized_message_;
  }
  localized_message_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BadRequest_FieldViolation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string field = 1 [json_name = "field"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_field();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.BadRequest.FieldViolation.field"));
        } else
          goto handle_unusual;
        continue;
      // string description = 2 [json_name = "description"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.BadRequest.FieldViolation.description"));
        } else
          goto handle_unusual;
        continue;
      // string reason = 3 [json_name = "reason"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_reason();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.BadRequest.FieldViolation.reason"));
        } else
          goto handle_unusual;
        continue;
      // .google.rpc.LocalizedMessage localized_message = 4 [json_name = "localizedMessage"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_localized_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BadRequest_FieldViolation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.BadRequest.FieldViolation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string field = 1 [json_name = "field"];
  if (!this->_internal_field().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field().data(), static_cast<int>(this->_internal_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.BadRequest.FieldViolation.field");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_field(), target);
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.BadRequest.FieldViolation.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // string reason = 3 [json_name = "reason"];
  if (!this->_internal_reason().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.BadRequest.FieldViolation.reason");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_reason(), target);
  }

  // .google.rpc.LocalizedMessage localized_message = 4 [json_name = "localizedMessage"];
  if (this->_internal_has_localized_message()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::localized_message(this),
        _Internal::localized_message(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.BadRequest.FieldViolation)
  return target;
}

size_t BadRequest_FieldViolation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.BadRequest.FieldViolation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field = 1 [json_name = "field"];
  if (!this->_internal_field().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field());
  }

  // string description = 2 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string reason = 3 [json_name = "reason"];
  if (!this->_internal_reason().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reason());
  }

  // .google.rpc.LocalizedMessage localized_message = 4 [json_name = "localizedMessage"];
  if (this->_internal_has_localized_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *localized_message_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BadRequest_FieldViolation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BadRequest_FieldViolation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BadRequest_FieldViolation::GetClassData() const { return &_class_data_; }

void BadRequest_FieldViolation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BadRequest_FieldViolation *>(to)->MergeFrom(
      static_cast<const BadRequest_FieldViolation &>(from));
}


void BadRequest_FieldViolation::MergeFrom(const BadRequest_FieldViolation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.BadRequest.FieldViolation)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field().empty()) {
    _internal_set_field(from._internal_field());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_reason().empty()) {
    _internal_set_reason(from._internal_reason());
  }
  if (from._internal_has_localized_message()) {
    _internal_mutable_localized_message()->::google::rpc::LocalizedMessage::MergeFrom(from._internal_localized_message());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BadRequest_FieldViolation::CopyFrom(const BadRequest_FieldViolation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.BadRequest.FieldViolation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BadRequest_FieldViolation::IsInitialized() const {
  return true;
}

void BadRequest_FieldViolation::InternalSwap(BadRequest_FieldViolation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &field_, lhs_arena,
      &other->field_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &reason_, lhs_arena,
      &other->reason_, rhs_arena
  );
  swap(localized_message_, other->localized_message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BadRequest_FieldViolation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[8]);
}

// ===================================================================

class BadRequest::_Internal {
 public:
};

BadRequest::BadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  field_violations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.rpc.BadRequest)
}
BadRequest::BadRequest(const BadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      field_violations_(from.field_violations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.rpc.BadRequest)
}

inline void BadRequest::SharedCtor() {
}

BadRequest::~BadRequest() {
  // @@protoc_insertion_point(destructor:google.rpc.BadRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.BadRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_violations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BadRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.rpc.BadRequest.FieldViolation field_violations = 1 [json_name = "fieldViolations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_field_violations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BadRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.BadRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.rpc.BadRequest.FieldViolation field_violations = 1 [json_name = "fieldViolations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_field_violations_size()); i < n; i++) {
    const auto& repfield = this->_internal_field_violations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.BadRequest)
  return target;
}

size_t BadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.BadRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.rpc.BadRequest.FieldViolation field_violations = 1 [json_name = "fieldViolations"];
  total_size += 1UL * this->_internal_field_violations_size();
  for (const auto& msg : this->field_violations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BadRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BadRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BadRequest::GetClassData() const { return &_class_data_; }

void BadRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BadRequest *>(to)->MergeFrom(
      static_cast<const BadRequest &>(from));
}


void BadRequest::MergeFrom(const BadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.BadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  field_violations_.MergeFrom(from.field_violations_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BadRequest::CopyFrom(const BadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.BadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BadRequest::IsInitialized() const {
  return true;
}

void BadRequest::InternalSwap(BadRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  field_violations_.InternalSwap(&other->field_violations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[9]);
}

// ===================================================================

class RequestInfo::_Internal {
 public:
};

RequestInfo::RequestInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.rpc.RequestInfo)
}
RequestInfo::RequestInfo(const RequestInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  request_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    request_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_request_id().empty()) {
    request_id_.Set(from._internal_request_id(), 
      GetArenaForAllocation());
  }
  serving_data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    serving_data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_serving_data().empty()) {
    serving_data_.Set(from._internal_serving_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.RequestInfo)
}

inline void RequestInfo::SharedCtor() {
request_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  request_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
serving_data_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  serving_data_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RequestInfo::~RequestInfo() {
  // @@protoc_insertion_point(destructor:google.rpc.RequestInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  request_id_.Destroy();
  serving_data_.Destroy();
}

void RequestInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.RequestInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmpty();
  serving_data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string request_id = 1 [json_name = "requestId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_request_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.RequestInfo.request_id"));
        } else
          goto handle_unusual;
        continue;
      // string serving_data = 2 [json_name = "servingData"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_serving_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.RequestInfo.serving_data"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.RequestInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1 [json_name = "requestId"];
  if (!this->_internal_request_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_id().data(), static_cast<int>(this->_internal_request_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.RequestInfo.request_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_request_id(), target);
  }

  // string serving_data = 2 [json_name = "servingData"];
  if (!this->_internal_serving_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serving_data().data(), static_cast<int>(this->_internal_serving_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.RequestInfo.serving_data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_serving_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.RequestInfo)
  return target;
}

size_t RequestInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.RequestInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string request_id = 1 [json_name = "requestId"];
  if (!this->_internal_request_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_id());
  }

  // string serving_data = 2 [json_name = "servingData"];
  if (!this->_internal_serving_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serving_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestInfo::GetClassData() const { return &_class_data_; }

void RequestInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestInfo *>(to)->MergeFrom(
      static_cast<const RequestInfo &>(from));
}


void RequestInfo::MergeFrom(const RequestInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.RequestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_request_id().empty()) {
    _internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_serving_data().empty()) {
    _internal_set_serving_data(from._internal_serving_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestInfo::CopyFrom(const RequestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.RequestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestInfo::IsInitialized() const {
  return true;
}

void RequestInfo::InternalSwap(RequestInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &request_id_, lhs_arena,
      &other->request_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &serving_data_, lhs_arena,
      &other->serving_data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[10]);
}

// ===================================================================

class ResourceInfo::_Internal {
 public:
};

ResourceInfo::ResourceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.rpc.ResourceInfo)
}
ResourceInfo::ResourceInfo(const ResourceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resource_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_type().empty()) {
    resource_type_.Set(from._internal_resource_type(), 
      GetArenaForAllocation());
  }
  resource_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_name().empty()) {
    resource_name_.Set(from._internal_resource_name(), 
      GetArenaForAllocation());
  }
  owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    owner_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_owner().empty()) {
    owner_.Set(from._internal_owner(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.ResourceInfo)
}

inline void ResourceInfo::SharedCtor() {
resource_type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resource_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
owner_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  owner_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResourceInfo::~ResourceInfo() {
  // @@protoc_insertion_point(destructor:google.rpc.ResourceInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResourceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  resource_type_.Destroy();
  resource_name_.Destroy();
  owner_.Destroy();
  description_.Destroy();
}

void ResourceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResourceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.ResourceInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_type_.ClearToEmpty();
  resource_name_.ClearToEmpty();
  owner_.ClearToEmpty();
  description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string resource_type = 1 [json_name = "resourceType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_resource_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.ResourceInfo.resource_type"));
        } else
          goto handle_unusual;
        continue;
      // string resource_name = 2 [json_name = "resourceName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_resource_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.ResourceInfo.resource_name"));
        } else
          goto handle_unusual;
        continue;
      // string owner = 3 [json_name = "owner"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_owner();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.ResourceInfo.owner"));
        } else
          goto handle_unusual;
        continue;
      // string description = 4 [json_name = "description"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.ResourceInfo.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResourceInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.ResourceInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_type = 1 [json_name = "resourceType"];
  if (!this->_internal_resource_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_type().data(), static_cast<int>(this->_internal_resource_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ResourceInfo.resource_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_resource_type(), target);
  }

  // string resource_name = 2 [json_name = "resourceName"];
  if (!this->_internal_resource_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_name().data(), static_cast<int>(this->_internal_resource_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ResourceInfo.resource_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_resource_name(), target);
  }

  // string owner = 3 [json_name = "owner"];
  if (!this->_internal_owner().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_owner().data(), static_cast<int>(this->_internal_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ResourceInfo.owner");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_owner(), target);
  }

  // string description = 4 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.ResourceInfo.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.ResourceInfo)
  return target;
}

size_t ResourceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.ResourceInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource_type = 1 [json_name = "resourceType"];
  if (!this->_internal_resource_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_type());
  }

  // string resource_name = 2 [json_name = "resourceName"];
  if (!this->_internal_resource_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_name());
  }

  // string owner = 3 [json_name = "owner"];
  if (!this->_internal_owner().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_owner());
  }

  // string description = 4 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResourceInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResourceInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResourceInfo::GetClassData() const { return &_class_data_; }

void ResourceInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResourceInfo *>(to)->MergeFrom(
      static_cast<const ResourceInfo &>(from));
}


void ResourceInfo::MergeFrom(const ResourceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.ResourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_resource_type().empty()) {
    _internal_set_resource_type(from._internal_resource_type());
  }
  if (!from._internal_resource_name().empty()) {
    _internal_set_resource_name(from._internal_resource_name());
  }
  if (!from._internal_owner().empty()) {
    _internal_set_owner(from._internal_owner());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResourceInfo::CopyFrom(const ResourceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.ResourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceInfo::IsInitialized() const {
  return true;
}

void ResourceInfo::InternalSwap(ResourceInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &resource_type_, lhs_arena,
      &other->resource_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &resource_name_, lhs_arena,
      &other->resource_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &owner_, lhs_arena,
      &other->owner_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[11]);
}

// ===================================================================

class Help_Link::_Internal {
 public:
};

Help_Link::Help_Link(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.rpc.Help.Link)
}
Help_Link::Help_Link(const Help_Link& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.Help.Link)
}

inline void Help_Link::SharedCtor() {
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Help_Link::~Help_Link() {
  // @@protoc_insertion_point(destructor:google.rpc.Help.Link)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Help_Link::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  description_.Destroy();
  url_.Destroy();
}

void Help_Link::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Help_Link::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.Help.Link)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmpty();
  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Help_Link::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string description = 1 [json_name = "description"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.Help.Link.description"));
        } else
          goto handle_unusual;
        continue;
      // string url = 2 [json_name = "url"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.Help.Link.url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Help_Link::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.Help.Link)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.Help.Link.description");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_description(), target);
  }

  // string url = 2 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.Help.Link.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.Help.Link)
  return target;
}

size_t Help_Link::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.Help.Link)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 1 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string url = 2 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Help_Link::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Help_Link::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Help_Link::GetClassData() const { return &_class_data_; }

void Help_Link::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Help_Link *>(to)->MergeFrom(
      static_cast<const Help_Link &>(from));
}


void Help_Link::MergeFrom(const Help_Link& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.Help.Link)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Help_Link::CopyFrom(const Help_Link& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.Help.Link)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Help_Link::IsInitialized() const {
  return true;
}

void Help_Link::InternalSwap(Help_Link* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Help_Link::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[12]);
}

// ===================================================================

class Help::_Internal {
 public:
};

Help::Help(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  links_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.rpc.Help)
}
Help::Help(const Help& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      links_(from.links_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.rpc.Help)
}

inline void Help::SharedCtor() {
}

Help::~Help() {
  // @@protoc_insertion_point(destructor:google.rpc.Help)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Help::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Help::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Help::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.Help)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  links_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Help::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.rpc.Help.Link links = 1 [json_name = "links"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_links(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Help::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.Help)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.rpc.Help.Link links = 1 [json_name = "links"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_links_size()); i < n; i++) {
    const auto& repfield = this->_internal_links(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.Help)
  return target;
}

size_t Help::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.Help)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.rpc.Help.Link links = 1 [json_name = "links"];
  total_size += 1UL * this->_internal_links_size();
  for (const auto& msg : this->links_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Help::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Help::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Help::GetClassData() const { return &_class_data_; }

void Help::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Help *>(to)->MergeFrom(
      static_cast<const Help &>(from));
}


void Help::MergeFrom(const Help& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.Help)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  links_.MergeFrom(from.links_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Help::CopyFrom(const Help& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.Help)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Help::IsInitialized() const {
  return true;
}

void Help::InternalSwap(Help* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  links_.InternalSwap(&other->links_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Help::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[13]);
}

// ===================================================================

class LocalizedMessage::_Internal {
 public:
};

LocalizedMessage::LocalizedMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.rpc.LocalizedMessage)
}
LocalizedMessage::LocalizedMessage(const LocalizedMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  locale_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    locale_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_locale().empty()) {
    locale_.Set(from._internal_locale(), 
      GetArenaForAllocation());
  }
  message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(from._internal_message(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.rpc.LocalizedMessage)
}

inline void LocalizedMessage::SharedCtor() {
locale_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  locale_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
message_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LocalizedMessage::~LocalizedMessage() {
  // @@protoc_insertion_point(destructor:google.rpc.LocalizedMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocalizedMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  locale_.Destroy();
  message_.Destroy();
}

void LocalizedMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocalizedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.rpc.LocalizedMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locale_.ClearToEmpty();
  message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalizedMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string locale = 1 [json_name = "locale"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_locale();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.LocalizedMessage.locale"));
        } else
          goto handle_unusual;
        continue;
      // string message = 2 [json_name = "message"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.rpc.LocalizedMessage.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocalizedMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.rpc.LocalizedMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string locale = 1 [json_name = "locale"];
  if (!this->_internal_locale().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_locale().data(), static_cast<int>(this->_internal_locale().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.LocalizedMessage.locale");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_locale(), target);
  }

  // string message = 2 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.rpc.LocalizedMessage.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.rpc.LocalizedMessage)
  return target;
}

size_t LocalizedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.rpc.LocalizedMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string locale = 1 [json_name = "locale"];
  if (!this->_internal_locale().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_locale());
  }

  // string message = 2 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocalizedMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocalizedMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocalizedMessage::GetClassData() const { return &_class_data_; }

void LocalizedMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocalizedMessage *>(to)->MergeFrom(
      static_cast<const LocalizedMessage &>(from));
}


void LocalizedMessage::MergeFrom(const LocalizedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.rpc.LocalizedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_locale().empty()) {
    _internal_set_locale(from._internal_locale());
  }
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocalizedMessage::CopyFrom(const LocalizedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.rpc.LocalizedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalizedMessage::IsInitialized() const {
  return true;
}

void LocalizedMessage::InternalSwap(LocalizedMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &locale_, lhs_arena,
      &other->locale_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalizedMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_getter, &descriptor_table_google_2frpc_2ferror_5fdetails_2eproto_once,
      file_level_metadata_google_2frpc_2ferror_5fdetails_2eproto[14]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::rpc::ErrorInfo_MetadataEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::rpc::ErrorInfo_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::ErrorInfo_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::ErrorInfo*
Arena::CreateMaybeMessage< ::google::rpc::ErrorInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::ErrorInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::RetryInfo*
Arena::CreateMaybeMessage< ::google::rpc::RetryInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::RetryInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::DebugInfo*
Arena::CreateMaybeMessage< ::google::rpc::DebugInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::DebugInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::QuotaFailure_Violation*
Arena::CreateMaybeMessage< ::google::rpc::QuotaFailure_Violation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::QuotaFailure_Violation >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::QuotaFailure*
Arena::CreateMaybeMessage< ::google::rpc::QuotaFailure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::QuotaFailure >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::PreconditionFailure_Violation*
Arena::CreateMaybeMessage< ::google::rpc::PreconditionFailure_Violation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::PreconditionFailure_Violation >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::PreconditionFailure*
Arena::CreateMaybeMessage< ::google::rpc::PreconditionFailure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::PreconditionFailure >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::BadRequest_FieldViolation*
Arena::CreateMaybeMessage< ::google::rpc::BadRequest_FieldViolation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::BadRequest_FieldViolation >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::BadRequest*
Arena::CreateMaybeMessage< ::google::rpc::BadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::BadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::RequestInfo*
Arena::CreateMaybeMessage< ::google::rpc::RequestInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::RequestInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::ResourceInfo*
Arena::CreateMaybeMessage< ::google::rpc::ResourceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::ResourceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::Help_Link*
Arena::CreateMaybeMessage< ::google::rpc::Help_Link >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::Help_Link >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::Help*
Arena::CreateMaybeMessage< ::google::rpc::Help >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::Help >(arena);
}
template<> PROTOBUF_NOINLINE ::google::rpc::LocalizedMessage*
Arena::CreateMaybeMessage< ::google::rpc::LocalizedMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::rpc::LocalizedMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
