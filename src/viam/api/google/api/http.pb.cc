// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/http.proto

#include "google/api/http.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
PROTOBUF_CONSTEXPR Http::Http(
    ::_pbi::ConstantInitialized)
  : rules_()
  , fully_decode_reserved_expansion_(false){}
struct HttpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HttpDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HttpDefaultTypeInternal() {}
  union {
    Http _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HttpDefaultTypeInternal _Http_default_instance_;
PROTOBUF_CONSTEXPR HttpRule::HttpRule(
    ::_pbi::ConstantInitialized)
  : additional_bindings_()
  , selector_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , body_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , response_body_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , _oneof_case_{}{}
struct HttpRuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HttpRuleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HttpRuleDefaultTypeInternal() {}
  union {
    HttpRule _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HttpRuleDefaultTypeInternal _HttpRule_default_instance_;
PROTOBUF_CONSTEXPR CustomHttpPattern::CustomHttpPattern(
    ::_pbi::ConstantInitialized)
  : kind_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , path_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CustomHttpPatternDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomHttpPatternDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomHttpPatternDefaultTypeInternal() {}
  union {
    CustomHttpPattern _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomHttpPatternDefaultTypeInternal _CustomHttpPattern_default_instance_;
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fhttp_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fhttp_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fhttp_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fhttp_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::Http, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::Http, rules_),
  PROTOBUF_FIELD_OFFSET(::google::api::Http, fully_decode_reserved_expansion_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::HttpRule, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::HttpRule, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::HttpRule, selector_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::google::api::HttpRule, body_),
  PROTOBUF_FIELD_OFFSET(::google::api::HttpRule, response_body_),
  PROTOBUF_FIELD_OFFSET(::google::api::HttpRule, additional_bindings_),
  PROTOBUF_FIELD_OFFSET(::google::api::HttpRule, pattern_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::CustomHttpPattern, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::CustomHttpPattern, kind_),
  PROTOBUF_FIELD_OFFSET(::google::api::CustomHttpPattern, path_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::Http)},
  { 8, -1, -1, sizeof(::google::api::HttpRule)},
  { 25, -1, -1, sizeof(::google::api::CustomHttpPattern)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::_Http_default_instance_._instance,
  &::google::api::_HttpRule_default_instance_._instance,
  &::google::api::_CustomHttpPattern_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fhttp_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025google/api/http.proto\022\ngoogle.api\"y\n\004H"
  "ttp\022*\n\005rules\030\001 \003(\0132\024.google.api.HttpRule"
  "R\005rules\022E\n\037fully_decode_reserved_expansi"
  "on\030\002 \001(\010R\034fullyDecodeReservedExpansion\"\332"
  "\002\n\010HttpRule\022\032\n\010selector\030\001 \001(\tR\010selector\022"
  "\022\n\003get\030\002 \001(\tH\000R\003get\022\022\n\003put\030\003 \001(\tH\000R\003put\022"
  "\024\n\004post\030\004 \001(\tH\000R\004post\022\030\n\006delete\030\005 \001(\tH\000R"
  "\006delete\022\026\n\005patch\030\006 \001(\tH\000R\005patch\0227\n\006custo"
  "m\030\010 \001(\0132\035.google.api.CustomHttpPatternH\000"
  "R\006custom\022\022\n\004body\030\007 \001(\tR\004body\022#\n\rresponse"
  "_body\030\014 \001(\tR\014responseBody\022E\n\023additional_"
  "bindings\030\013 \003(\0132\024.google.api.HttpRuleR\022ad"
  "ditionalBindingsB\t\n\007pattern\";\n\021CustomHtt"
  "pPattern\022\022\n\004kind\030\001 \001(\tR\004kind\022\022\n\004path\030\002 \001"
  "(\tR\004pathBj\n\016com.google.apiB\tHttpProtoP\001Z"
  "Agoogle.golang.org/genproto/googleapis/a"
  "pi/annotations;annotations\370\001\001\242\002\004GAPIb\006pr"
  "oto3"
  ;
static ::_pbi::once_flag descriptor_table_google_2fapi_2fhttp_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fhttp_2eproto = {
    false, false, 684, descriptor_table_protodef_google_2fapi_2fhttp_2eproto,
    "google/api/http.proto",
    &descriptor_table_google_2fapi_2fhttp_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_google_2fapi_2fhttp_2eproto::offsets,
    file_level_metadata_google_2fapi_2fhttp_2eproto, file_level_enum_descriptors_google_2fapi_2fhttp_2eproto,
    file_level_service_descriptors_google_2fapi_2fhttp_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fhttp_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fhttp_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fhttp_2eproto(&descriptor_table_google_2fapi_2fhttp_2eproto);
namespace google {
namespace api {

// ===================================================================

class Http::_Internal {
 public:
};

Http::Http(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  rules_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.Http)
}
Http::Http(const Http& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      rules_(from.rules_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fully_decode_reserved_expansion_ = from.fully_decode_reserved_expansion_;
  // @@protoc_insertion_point(copy_constructor:google.api.Http)
}

inline void Http::SharedCtor() {
fully_decode_reserved_expansion_ = false;
}

Http::~Http() {
  // @@protoc_insertion_point(destructor:google.api.Http)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Http::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Http::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Http::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Http)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rules_.Clear();
  fully_decode_reserved_expansion_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Http::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.HttpRule rules = 1 [json_name = "rules"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rules(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool fully_decode_reserved_expansion = 2 [json_name = "fullyDecodeReservedExpansion"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          fully_decode_reserved_expansion_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Http::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Http)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.HttpRule rules = 1 [json_name = "rules"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rules_size()); i < n; i++) {
    const auto& repfield = this->_internal_rules(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool fully_decode_reserved_expansion = 2 [json_name = "fullyDecodeReservedExpansion"];
  if (this->_internal_fully_decode_reserved_expansion() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_fully_decode_reserved_expansion(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Http)
  return target;
}

size_t Http::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Http)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.HttpRule rules = 1 [json_name = "rules"];
  total_size += 1UL * this->_internal_rules_size();
  for (const auto& msg : this->rules_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool fully_decode_reserved_expansion = 2 [json_name = "fullyDecodeReservedExpansion"];
  if (this->_internal_fully_decode_reserved_expansion() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Http::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Http::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Http::GetClassData() const { return &_class_data_; }

void Http::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Http *>(to)->MergeFrom(
      static_cast<const Http &>(from));
}


void Http::MergeFrom(const Http& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Http)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  rules_.MergeFrom(from.rules_);
  if (from._internal_fully_decode_reserved_expansion() != 0) {
    _internal_set_fully_decode_reserved_expansion(from._internal_fully_decode_reserved_expansion());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Http::CopyFrom(const Http& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Http)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Http::IsInitialized() const {
  return true;
}

void Http::InternalSwap(Http* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  rules_.InternalSwap(&other->rules_);
  swap(fully_decode_reserved_expansion_, other->fully_decode_reserved_expansion_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Http::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fhttp_2eproto_getter, &descriptor_table_google_2fapi_2fhttp_2eproto_once,
      file_level_metadata_google_2fapi_2fhttp_2eproto[0]);
}

// ===================================================================

class HttpRule::_Internal {
 public:
  static const ::google::api::CustomHttpPattern& custom(const HttpRule* msg);
};

const ::google::api::CustomHttpPattern&
HttpRule::_Internal::custom(const HttpRule* msg) {
  return *msg->pattern_.custom_;
}
void HttpRule::set_allocated_custom(::google::api::CustomHttpPattern* custom) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_pattern();
  if (custom) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(custom);
    if (message_arena != submessage_arena) {
      custom = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom, submessage_arena);
    }
    set_has_custom();
    pattern_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.HttpRule.custom)
}
HttpRule::HttpRule(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  additional_bindings_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.HttpRule)
}
HttpRule::HttpRule(const HttpRule& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      additional_bindings_(from.additional_bindings_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  selector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    selector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_selector().empty()) {
    selector_.Set(from._internal_selector(), 
      GetArenaForAllocation());
  }
  body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    body_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_body().empty()) {
    body_.Set(from._internal_body(), 
      GetArenaForAllocation());
  }
  response_body_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    response_body_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_response_body().empty()) {
    response_body_.Set(from._internal_response_body(), 
      GetArenaForAllocation());
  }
  clear_has_pattern();
  switch (from.pattern_case()) {
    case kGet: {
      _internal_set_get(from._internal_get());
      break;
    }
    case kPut: {
      _internal_set_put(from._internal_put());
      break;
    }
    case kPost: {
      _internal_set_post(from._internal_post());
      break;
    }
    case kDelete: {
      _internal_set_delete_(from._internal_delete_());
      break;
    }
    case kPatch: {
      _internal_set_patch(from._internal_patch());
      break;
    }
    case kCustom: {
      _internal_mutable_custom()->::google::api::CustomHttpPattern::MergeFrom(from._internal_custom());
      break;
    }
    case PATTERN_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.HttpRule)
}

inline void HttpRule::SharedCtor() {
selector_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  selector_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
body_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  body_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
response_body_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  response_body_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
clear_has_pattern();
}

HttpRule::~HttpRule() {
  // @@protoc_insertion_point(destructor:google.api.HttpRule)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HttpRule::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  selector_.Destroy();
  body_.Destroy();
  response_body_.Destroy();
  if (has_pattern()) {
    clear_pattern();
  }
}

void HttpRule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HttpRule::clear_pattern() {
// @@protoc_insertion_point(one_of_clear_start:google.api.HttpRule)
  switch (pattern_case()) {
    case kGet: {
      pattern_.get_.Destroy();
      break;
    }
    case kPut: {
      pattern_.put_.Destroy();
      break;
    }
    case kPost: {
      pattern_.post_.Destroy();
      break;
    }
    case kDelete: {
      pattern_.delete__.Destroy();
      break;
    }
    case kPatch: {
      pattern_.patch_.Destroy();
      break;
    }
    case kCustom: {
      if (GetArenaForAllocation() == nullptr) {
        delete pattern_.custom_;
      }
      break;
    }
    case PATTERN_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PATTERN_NOT_SET;
}


void HttpRule::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.HttpRule)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  additional_bindings_.Clear();
  selector_.ClearToEmpty();
  body_.ClearToEmpty();
  response_body_.ClearToEmpty();
  clear_pattern();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HttpRule::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string selector = 1 [json_name = "selector"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_selector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.HttpRule.selector"));
        } else
          goto handle_unusual;
        continue;
      // string get = 2 [json_name = "get"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_get();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.HttpRule.get"));
        } else
          goto handle_unusual;
        continue;
      // string put = 3 [json_name = "put"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_put();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.HttpRule.put"));
        } else
          goto handle_unusual;
        continue;
      // string post = 4 [json_name = "post"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_post();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.HttpRule.post"));
        } else
          goto handle_unusual;
        continue;
      // string delete = 5 [json_name = "delete"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_delete_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.HttpRule.delete"));
        } else
          goto handle_unusual;
        continue;
      // string patch = 6 [json_name = "patch"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_patch();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.HttpRule.patch"));
        } else
          goto handle_unusual;
        continue;
      // string body = 7 [json_name = "body"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_body();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.HttpRule.body"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.CustomHttpPattern custom = 8 [json_name = "custom"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.HttpRule additional_bindings = 11 [json_name = "additionalBindings"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_additional_bindings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string response_body = 12 [json_name = "responseBody"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_response_body();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.HttpRule.response_body"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HttpRule::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.HttpRule)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string selector = 1 [json_name = "selector"];
  if (!this->_internal_selector().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_selector().data(), static_cast<int>(this->_internal_selector().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.HttpRule.selector");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_selector(), target);
  }

  // string get = 2 [json_name = "get"];
  if (_internal_has_get()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_get().data(), static_cast<int>(this->_internal_get().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.HttpRule.get");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_get(), target);
  }

  // string put = 3 [json_name = "put"];
  if (_internal_has_put()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_put().data(), static_cast<int>(this->_internal_put().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.HttpRule.put");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_put(), target);
  }

  // string post = 4 [json_name = "post"];
  if (_internal_has_post()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_post().data(), static_cast<int>(this->_internal_post().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.HttpRule.post");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_post(), target);
  }

  // string delete = 5 [json_name = "delete"];
  if (_internal_has_delete_()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_delete_().data(), static_cast<int>(this->_internal_delete_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.HttpRule.delete");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_delete_(), target);
  }

  // string patch = 6 [json_name = "patch"];
  if (_internal_has_patch()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_patch().data(), static_cast<int>(this->_internal_patch().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.HttpRule.patch");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_patch(), target);
  }

  // string body = 7 [json_name = "body"];
  if (!this->_internal_body().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_body().data(), static_cast<int>(this->_internal_body().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.HttpRule.body");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_body(), target);
  }

  // .google.api.CustomHttpPattern custom = 8 [json_name = "custom"];
  if (_internal_has_custom()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::custom(this),
        _Internal::custom(this).GetCachedSize(), target, stream);
  }

  // repeated .google.api.HttpRule additional_bindings = 11 [json_name = "additionalBindings"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_additional_bindings_size()); i < n; i++) {
    const auto& repfield = this->_internal_additional_bindings(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string response_body = 12 [json_name = "responseBody"];
  if (!this->_internal_response_body().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_response_body().data(), static_cast<int>(this->_internal_response_body().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.HttpRule.response_body");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_response_body(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.HttpRule)
  return target;
}

size_t HttpRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.HttpRule)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.HttpRule additional_bindings = 11 [json_name = "additionalBindings"];
  total_size += 1UL * this->_internal_additional_bindings_size();
  for (const auto& msg : this->additional_bindings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string selector = 1 [json_name = "selector"];
  if (!this->_internal_selector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_selector());
  }

  // string body = 7 [json_name = "body"];
  if (!this->_internal_body().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_body());
  }

  // string response_body = 12 [json_name = "responseBody"];
  if (!this->_internal_response_body().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_response_body());
  }

  switch (pattern_case()) {
    // string get = 2 [json_name = "get"];
    case kGet: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_get());
      break;
    }
    // string put = 3 [json_name = "put"];
    case kPut: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_put());
      break;
    }
    // string post = 4 [json_name = "post"];
    case kPost: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_post());
      break;
    }
    // string delete = 5 [json_name = "delete"];
    case kDelete: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_delete_());
      break;
    }
    // string patch = 6 [json_name = "patch"];
    case kPatch: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_patch());
      break;
    }
    // .google.api.CustomHttpPattern custom = 8 [json_name = "custom"];
    case kCustom: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pattern_.custom_);
      break;
    }
    case PATTERN_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HttpRule::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    HttpRule::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HttpRule::GetClassData() const { return &_class_data_; }

void HttpRule::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<HttpRule *>(to)->MergeFrom(
      static_cast<const HttpRule &>(from));
}


void HttpRule::MergeFrom(const HttpRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.HttpRule)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  additional_bindings_.MergeFrom(from.additional_bindings_);
  if (!from._internal_selector().empty()) {
    _internal_set_selector(from._internal_selector());
  }
  if (!from._internal_body().empty()) {
    _internal_set_body(from._internal_body());
  }
  if (!from._internal_response_body().empty()) {
    _internal_set_response_body(from._internal_response_body());
  }
  switch (from.pattern_case()) {
    case kGet: {
      _internal_set_get(from._internal_get());
      break;
    }
    case kPut: {
      _internal_set_put(from._internal_put());
      break;
    }
    case kPost: {
      _internal_set_post(from._internal_post());
      break;
    }
    case kDelete: {
      _internal_set_delete_(from._internal_delete_());
      break;
    }
    case kPatch: {
      _internal_set_patch(from._internal_patch());
      break;
    }
    case kCustom: {
      _internal_mutable_custom()->::google::api::CustomHttpPattern::MergeFrom(from._internal_custom());
      break;
    }
    case PATTERN_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HttpRule::CopyFrom(const HttpRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.HttpRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpRule::IsInitialized() const {
  return true;
}

void HttpRule::InternalSwap(HttpRule* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  additional_bindings_.InternalSwap(&other->additional_bindings_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &selector_, lhs_arena,
      &other->selector_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &body_, lhs_arena,
      &other->body_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &response_body_, lhs_arena,
      &other->response_body_, rhs_arena
  );
  swap(pattern_, other->pattern_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata HttpRule::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fhttp_2eproto_getter, &descriptor_table_google_2fapi_2fhttp_2eproto_once,
      file_level_metadata_google_2fapi_2fhttp_2eproto[1]);
}

// ===================================================================

class CustomHttpPattern::_Internal {
 public:
};

CustomHttpPattern::CustomHttpPattern(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.CustomHttpPattern)
}
CustomHttpPattern::CustomHttpPattern(const CustomHttpPattern& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  kind_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    kind_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_kind().empty()) {
    kind_.Set(from._internal_kind(), 
      GetArenaForAllocation());
  }
  path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    path_.Set(from._internal_path(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.CustomHttpPattern)
}

inline void CustomHttpPattern::SharedCtor() {
kind_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  kind_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
path_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  path_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CustomHttpPattern::~CustomHttpPattern() {
  // @@protoc_insertion_point(destructor:google.api.CustomHttpPattern)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomHttpPattern::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  kind_.Destroy();
  path_.Destroy();
}

void CustomHttpPattern::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CustomHttpPattern::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.CustomHttpPattern)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_.ClearToEmpty();
  path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomHttpPattern::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string kind = 1 [json_name = "kind"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_kind();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.CustomHttpPattern.kind"));
        } else
          goto handle_unusual;
        continue;
      // string path = 2 [json_name = "path"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.CustomHttpPattern.path"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomHttpPattern::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.CustomHttpPattern)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string kind = 1 [json_name = "kind"];
  if (!this->_internal_kind().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_kind().data(), static_cast<int>(this->_internal_kind().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.CustomHttpPattern.kind");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_kind(), target);
  }

  // string path = 2 [json_name = "path"];
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.CustomHttpPattern.path");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.CustomHttpPattern)
  return target;
}

size_t CustomHttpPattern::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.CustomHttpPattern)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string kind = 1 [json_name = "kind"];
  if (!this->_internal_kind().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_kind());
  }

  // string path = 2 [json_name = "path"];
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomHttpPattern::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CustomHttpPattern::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomHttpPattern::GetClassData() const { return &_class_data_; }

void CustomHttpPattern::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CustomHttpPattern *>(to)->MergeFrom(
      static_cast<const CustomHttpPattern &>(from));
}


void CustomHttpPattern::MergeFrom(const CustomHttpPattern& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.CustomHttpPattern)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_kind().empty()) {
    _internal_set_kind(from._internal_kind());
  }
  if (!from._internal_path().empty()) {
    _internal_set_path(from._internal_path());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomHttpPattern::CopyFrom(const CustomHttpPattern& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.CustomHttpPattern)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomHttpPattern::IsInitialized() const {
  return true;
}

void CustomHttpPattern::InternalSwap(CustomHttpPattern* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &kind_, lhs_arena,
      &other->kind_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &path_, lhs_arena,
      &other->path_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomHttpPattern::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fhttp_2eproto_getter, &descriptor_table_google_2fapi_2fhttp_2eproto_once,
      file_level_metadata_google_2fapi_2fhttp_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::Http*
Arena::CreateMaybeMessage< ::google::api::Http >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::Http >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::HttpRule*
Arena::CreateMaybeMessage< ::google::api::HttpRule >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::HttpRule >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::CustomHttpPattern*
Arena::CreateMaybeMessage< ::google::api::CustomHttpPattern >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::CustomHttpPattern >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
