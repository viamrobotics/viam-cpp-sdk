// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1beta1/source.proto

#include "google/api/expr/v1beta1/source.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace expr {
namespace v1beta1 {
PROTOBUF_CONSTEXPR SourceInfo_PositionsEntry_DoNotUse::SourceInfo_PositionsEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct SourceInfo_PositionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SourceInfo_PositionsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SourceInfo_PositionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SourceInfo_PositionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SourceInfo_PositionsEntry_DoNotUseDefaultTypeInternal _SourceInfo_PositionsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SourceInfo::SourceInfo(
    ::_pbi::ConstantInitialized)
  : line_offsets_()
  , _line_offsets_cached_byte_size_(0)
  , positions_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , location_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct SourceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SourceInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SourceInfoDefaultTypeInternal() {}
  union {
    SourceInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SourceInfoDefaultTypeInternal _SourceInfo_default_instance_;
PROTOBUF_CONSTEXPR SourcePosition::SourcePosition(
    ::_pbi::ConstantInitialized)
  : location_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , offset_(0)
  , line_(0)
  , column_(0){}
struct SourcePositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SourcePositionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SourcePositionDefaultTypeInternal() {}
  union {
    SourcePosition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SourcePositionDefaultTypeInternal _SourcePosition_default_instance_;
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo, location_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo, line_offsets_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo, positions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, location_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, offset_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, line_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, column_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::google::api::expr::v1beta1::SourceInfo)},
  { 19, -1, -1, sizeof(::google::api::expr::v1beta1::SourcePosition)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::expr::v1beta1::_SourceInfo_PositionsEntry_DoNotUse_default_instance_._instance,
  &::google::api::expr::v1beta1::_SourceInfo_default_instance_._instance,
  &::google::api::expr::v1beta1::_SourcePosition_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$google/api/expr/v1beta1/source.proto\022\027"
  "google.api.expr.v1beta1\"\333\001\n\nSourceInfo\022\032"
  "\n\010location\030\002 \001(\tR\010location\022!\n\014line_offse"
  "ts\030\003 \003(\005R\013lineOffsets\022P\n\tpositions\030\004 \003(\013"
  "22.google.api.expr.v1beta1.SourceInfo.Po"
  "sitionsEntryR\tpositions\032<\n\016PositionsEntr"
  "y\022\020\n\003key\030\001 \001(\005R\003key\022\024\n\005value\030\002 \001(\005R\005valu"
  "e:\0028\001\"p\n\016SourcePosition\022\032\n\010location\030\001 \001("
  "\tR\010location\022\026\n\006offset\030\002 \001(\005R\006offset\022\022\n\004l"
  "ine\030\003 \001(\005R\004line\022\026\n\006column\030\004 \001(\005R\006columnB"
  "l\n\033com.google.api.expr.v1beta1B\013SourcePr"
  "otoP\001Z;google.golang.org/genproto/google"
  "apis/api/expr/v1beta1;expr\370\001\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto = {
    false, false, 517, descriptor_table_protodef_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto,
    "google/api/expr/v1beta1/source.proto",
    &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::offsets,
    file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto, file_level_enum_descriptors_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto,
    file_level_service_descriptors_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto(&descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto);
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {

// ===================================================================

SourceInfo_PositionsEntry_DoNotUse::SourceInfo_PositionsEntry_DoNotUse() {}
SourceInfo_PositionsEntry_DoNotUse::SourceInfo_PositionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SourceInfo_PositionsEntry_DoNotUse::MergeFrom(const SourceInfo_PositionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SourceInfo_PositionsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto[0]);
}

// ===================================================================

class SourceInfo::_Internal {
 public:
};

SourceInfo::SourceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  line_offsets_(arena),
  positions_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &SourceInfo::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.SourceInfo)
}
SourceInfo::SourceInfo(const SourceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      line_offsets_(from.line_offsets_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  positions_.MergeFrom(from.positions_);
  location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    location_.Set(from._internal_location(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.SourceInfo)
}

inline void SourceInfo::SharedCtor() {
location_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SourceInfo::~SourceInfo() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.SourceInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void SourceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  positions_.Destruct();
  location_.Destroy();
}

void SourceInfo::ArenaDtor(void* object) {
  SourceInfo* _this = reinterpret_cast< SourceInfo* >(object);
  _this->positions_.Destruct();
}
void SourceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SourceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.SourceInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  line_offsets_.Clear();
  positions_.Clear();
  location_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourceInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location = 2 [json_name = "location"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1beta1.SourceInfo.location"));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 line_offsets = 3 [json_name = "lineOffsets"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_line_offsets(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_line_offsets(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<int32, int32> positions = 4 [json_name = "positions"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&positions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SourceInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.SourceInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 2 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.SourceInfo.location");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_location(), target);
  }

  // repeated int32 line_offsets = 3 [json_name = "lineOffsets"];
  {
    int byte_size = _line_offsets_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_line_offsets(), byte_size, target);
    }
  }

  // map<int32, int32> positions = 4 [json_name = "positions"];
  if (!this->_internal_positions().empty()) {
    using MapType = ::_pb::Map<int32_t, int32_t>;
    using WireHelper = SourceInfo_PositionsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_positions();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.SourceInfo)
  return target;
}

size_t SourceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.SourceInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 line_offsets = 3 [json_name = "lineOffsets"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->line_offsets_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _line_offsets_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<int32, int32> positions = 4 [json_name = "positions"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_positions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_iterator
      it = this->_internal_positions().begin();
      it != this->_internal_positions().end(); ++it) {
    total_size += SourceInfo_PositionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string location = 2 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SourceInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SourceInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SourceInfo::GetClassData() const { return &_class_data_; }

void SourceInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SourceInfo *>(to)->MergeFrom(
      static_cast<const SourceInfo &>(from));
}


void SourceInfo::MergeFrom(const SourceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.SourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  line_offsets_.MergeFrom(from.line_offsets_);
  positions_.MergeFrom(from.positions_);
  if (!from._internal_location().empty()) {
    _internal_set_location(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SourceInfo::CopyFrom(const SourceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.SourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceInfo::IsInitialized() const {
  return true;
}

void SourceInfo::InternalSwap(SourceInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  line_offsets_.InternalSwap(&other->line_offsets_);
  positions_.InternalSwap(&other->positions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_, lhs_arena,
      &other->location_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto[1]);
}

// ===================================================================

class SourcePosition::_Internal {
 public:
};

SourcePosition::SourcePosition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.SourcePosition)
}
SourcePosition::SourcePosition(const SourcePosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    location_.Set(from._internal_location(), 
      GetArenaForAllocation());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&column_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(column_));
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.SourcePosition)
}

inline void SourcePosition::SharedCtor() {
location_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&offset_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&column_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(column_));
}

SourcePosition::~SourcePosition() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.SourcePosition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SourcePosition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_.Destroy();
}

void SourcePosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SourcePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.SourcePosition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_.ClearToEmpty();
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&column_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(column_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourcePosition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location = 1 [json_name = "location"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1beta1.SourcePosition.location"));
        } else
          goto handle_unusual;
        continue;
      // int32 offset = 2 [json_name = "offset"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 line = 3 [json_name = "line"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          line_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 column = 4 [json_name = "column"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          column_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SourcePosition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.SourcePosition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.SourcePosition.location");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location(), target);
  }

  // int32 offset = 2 [json_name = "offset"];
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_offset(), target);
  }

  // int32 line = 3 [json_name = "line"];
  if (this->_internal_line() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_line(), target);
  }

  // int32 column = 4 [json_name = "column"];
  if (this->_internal_column() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_column(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.SourcePosition)
  return target;
}

size_t SourcePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.SourcePosition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location = 1 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // int32 offset = 2 [json_name = "offset"];
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_offset());
  }

  // int32 line = 3 [json_name = "line"];
  if (this->_internal_line() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_line());
  }

  // int32 column = 4 [json_name = "column"];
  if (this->_internal_column() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_column());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SourcePosition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SourcePosition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SourcePosition::GetClassData() const { return &_class_data_; }

void SourcePosition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SourcePosition *>(to)->MergeFrom(
      static_cast<const SourcePosition &>(from));
}


void SourcePosition::MergeFrom(const SourcePosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.SourcePosition)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location().empty()) {
    _internal_set_location(from._internal_location());
  }
  if (from._internal_offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from._internal_line() != 0) {
    _internal_set_line(from._internal_line());
  }
  if (from._internal_column() != 0) {
    _internal_set_column(from._internal_column());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SourcePosition::CopyFrom(const SourcePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.SourcePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourcePosition::IsInitialized() const {
  return true;
}

void SourcePosition::InternalSwap(SourcePosition* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_, lhs_arena,
      &other->location_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SourcePosition, column_)
      + sizeof(SourcePosition::column_)
      - PROTOBUF_FIELD_OFFSET(SourcePosition, offset_)>(
          reinterpret_cast<char*>(&offset_),
          reinterpret_cast<char*>(&other->offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SourcePosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::SourceInfo*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::SourceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::SourceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::SourcePosition*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::SourcePosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::SourcePosition >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
