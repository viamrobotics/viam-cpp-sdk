// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1beta1/decl.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/api/expr/v1beta1/expr.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto;
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {
class Decl;
struct DeclDefaultTypeInternal;
extern DeclDefaultTypeInternal _Decl_default_instance_;
class DeclType;
struct DeclTypeDefaultTypeInternal;
extern DeclTypeDefaultTypeInternal _DeclType_default_instance_;
class FunctionDecl;
struct FunctionDeclDefaultTypeInternal;
extern FunctionDeclDefaultTypeInternal _FunctionDecl_default_instance_;
class IdentDecl;
struct IdentDeclDefaultTypeInternal;
extern IdentDeclDefaultTypeInternal _IdentDecl_default_instance_;
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace google {
namespace api {
namespace expr {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class DeclType final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1beta1.DeclType) */ {
 public:
  inline DeclType() : DeclType(nullptr) {}
  ~DeclType() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeclType(::google::protobuf::internal::ConstantInitialized);

  inline DeclType(const DeclType& from)
      : DeclType(nullptr, from) {}
  DeclType(DeclType&& from) noexcept
    : DeclType() {
    *this = ::std::move(from);
  }

  inline DeclType& operator=(const DeclType& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeclType& operator=(DeclType&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeclType& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeclType* internal_default_instance() {
    return reinterpret_cast<const DeclType*>(
               &_DeclType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DeclType& a, DeclType& b) {
    a.Swap(&b);
  }
  inline void Swap(DeclType* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeclType* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeclType* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeclType>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeclType& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DeclType& from) {
    DeclType::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeclType* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "google.api.expr.v1beta1.DeclType";
  }
  protected:
  explicit DeclType(::google::protobuf::Arena* arena);
  DeclType(::google::protobuf::Arena* arena, const DeclType& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeParamsFieldNumber = 4,
    kTypeFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated .google.api.expr.v1beta1.DeclType type_params = 4 [json_name = "typeParams"];
  int type_params_size() const;
  private:
  int _internal_type_params_size() const;

  public:
  void clear_type_params() ;
  ::google::api::expr::v1beta1::DeclType* mutable_type_params(int index);
  ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::DeclType >*
      mutable_type_params();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::api::expr::v1beta1::DeclType>& _internal_type_params() const;
  ::google::protobuf::RepeatedPtrField<::google::api::expr::v1beta1::DeclType>* _internal_mutable_type_params();
  public:
  const ::google::api::expr::v1beta1::DeclType& type_params(int index) const;
  ::google::api::expr::v1beta1::DeclType* add_type_params();
  const ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::DeclType >&
      type_params() const;
  // string type = 2 [json_name = "type"];
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // int32 id = 1 [json_name = "id"];
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:google.api.expr.v1beta1.DeclType)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::DeclType > type_params_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::int32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto;
};// -------------------------------------------------------------------

class IdentDecl final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1beta1.IdentDecl) */ {
 public:
  inline IdentDecl() : IdentDecl(nullptr) {}
  ~IdentDecl() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IdentDecl(::google::protobuf::internal::ConstantInitialized);

  inline IdentDecl(const IdentDecl& from)
      : IdentDecl(nullptr, from) {}
  IdentDecl(IdentDecl&& from) noexcept
    : IdentDecl() {
    *this = ::std::move(from);
  }

  inline IdentDecl& operator=(const IdentDecl& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdentDecl& operator=(IdentDecl&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IdentDecl& default_instance() {
    return *internal_default_instance();
  }
  static inline const IdentDecl* internal_default_instance() {
    return reinterpret_cast<const IdentDecl*>(
               &_IdentDecl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(IdentDecl& a, IdentDecl& b) {
    a.Swap(&b);
  }
  inline void Swap(IdentDecl* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdentDecl* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IdentDecl* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IdentDecl>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IdentDecl& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IdentDecl& from) {
    IdentDecl::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IdentDecl* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "google.api.expr.v1beta1.IdentDecl";
  }
  protected:
  explicit IdentDecl(::google::protobuf::Arena* arena);
  IdentDecl(::google::protobuf::Arena* arena, const IdentDecl& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 3,
    kValueFieldNumber = 4,
  };
  // .google.api.expr.v1beta1.DeclType type = 3 [json_name = "type"];
  bool has_type() const;
  void clear_type() ;
  const ::google::api::expr::v1beta1::DeclType& type() const;
  PROTOBUF_NODISCARD ::google::api::expr::v1beta1::DeclType* release_type();
  ::google::api::expr::v1beta1::DeclType* mutable_type();
  void set_allocated_type(::google::api::expr::v1beta1::DeclType* value);
  void unsafe_arena_set_allocated_type(::google::api::expr::v1beta1::DeclType* value);
  ::google::api::expr::v1beta1::DeclType* unsafe_arena_release_type();

  private:
  const ::google::api::expr::v1beta1::DeclType& _internal_type() const;
  ::google::api::expr::v1beta1::DeclType* _internal_mutable_type();

  public:
  // .google.api.expr.v1beta1.Expr value = 4 [json_name = "value"];
  bool has_value() const;
  void clear_value() ;
  const ::google::api::expr::v1beta1::Expr& value() const;
  PROTOBUF_NODISCARD ::google::api::expr::v1beta1::Expr* release_value();
  ::google::api::expr::v1beta1::Expr* mutable_value();
  void set_allocated_value(::google::api::expr::v1beta1::Expr* value);
  void unsafe_arena_set_allocated_value(::google::api::expr::v1beta1::Expr* value);
  ::google::api::expr::v1beta1::Expr* unsafe_arena_release_value();

  private:
  const ::google::api::expr::v1beta1::Expr& _internal_value() const;
  ::google::api::expr::v1beta1::Expr* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:google.api.expr.v1beta1.IdentDecl)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::api::expr::v1beta1::DeclType* type_;
    ::google::api::expr::v1beta1::Expr* value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto;
};// -------------------------------------------------------------------

class FunctionDecl final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1beta1.FunctionDecl) */ {
 public:
  inline FunctionDecl() : FunctionDecl(nullptr) {}
  ~FunctionDecl() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionDecl(::google::protobuf::internal::ConstantInitialized);

  inline FunctionDecl(const FunctionDecl& from)
      : FunctionDecl(nullptr, from) {}
  FunctionDecl(FunctionDecl&& from) noexcept
    : FunctionDecl() {
    *this = ::std::move(from);
  }

  inline FunctionDecl& operator=(const FunctionDecl& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionDecl& operator=(FunctionDecl&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionDecl& default_instance() {
    return *internal_default_instance();
  }
  static inline const FunctionDecl* internal_default_instance() {
    return reinterpret_cast<const FunctionDecl*>(
               &_FunctionDecl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(FunctionDecl& a, FunctionDecl& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionDecl* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionDecl* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionDecl* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionDecl>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionDecl& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionDecl& from) {
    FunctionDecl::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionDecl* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "google.api.expr.v1beta1.FunctionDecl";
  }
  protected:
  explicit FunctionDecl(::google::protobuf::Arena* arena);
  FunctionDecl(::google::protobuf::Arena* arena, const FunctionDecl& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArgsFieldNumber = 1,
    kReturnTypeFieldNumber = 2,
    kReceiverFunctionFieldNumber = 3,
  };
  // repeated .google.api.expr.v1beta1.IdentDecl args = 1 [json_name = "args"];
  int args_size() const;
  private:
  int _internal_args_size() const;

  public:
  void clear_args() ;
  ::google::api::expr::v1beta1::IdentDecl* mutable_args(int index);
  ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::IdentDecl >*
      mutable_args();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::api::expr::v1beta1::IdentDecl>& _internal_args() const;
  ::google::protobuf::RepeatedPtrField<::google::api::expr::v1beta1::IdentDecl>* _internal_mutable_args();
  public:
  const ::google::api::expr::v1beta1::IdentDecl& args(int index) const;
  ::google::api::expr::v1beta1::IdentDecl* add_args();
  const ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::IdentDecl >&
      args() const;
  // .google.api.expr.v1beta1.DeclType return_type = 2 [json_name = "returnType"];
  bool has_return_type() const;
  void clear_return_type() ;
  const ::google::api::expr::v1beta1::DeclType& return_type() const;
  PROTOBUF_NODISCARD ::google::api::expr::v1beta1::DeclType* release_return_type();
  ::google::api::expr::v1beta1::DeclType* mutable_return_type();
  void set_allocated_return_type(::google::api::expr::v1beta1::DeclType* value);
  void unsafe_arena_set_allocated_return_type(::google::api::expr::v1beta1::DeclType* value);
  ::google::api::expr::v1beta1::DeclType* unsafe_arena_release_return_type();

  private:
  const ::google::api::expr::v1beta1::DeclType& _internal_return_type() const;
  ::google::api::expr::v1beta1::DeclType* _internal_mutable_return_type();

  public:
  // bool receiver_function = 3 [json_name = "receiverFunction"];
  void clear_receiver_function() ;
  bool receiver_function() const;
  void set_receiver_function(bool value);

  private:
  bool _internal_receiver_function() const;
  void _internal_set_receiver_function(bool value);

  public:
  // @@protoc_insertion_point(class_scope:google.api.expr.v1beta1.FunctionDecl)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::IdentDecl > args_;
    ::google::api::expr::v1beta1::DeclType* return_type_;
    bool receiver_function_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto;
};// -------------------------------------------------------------------

class Decl final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1beta1.Decl) */ {
 public:
  inline Decl() : Decl(nullptr) {}
  ~Decl() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Decl(::google::protobuf::internal::ConstantInitialized);

  inline Decl(const Decl& from)
      : Decl(nullptr, from) {}
  Decl(Decl&& from) noexcept
    : Decl() {
    *this = ::std::move(from);
  }

  inline Decl& operator=(const Decl& from) {
    CopyFrom(from);
    return *this;
  }
  inline Decl& operator=(Decl&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Decl& default_instance() {
    return *internal_default_instance();
  }
  enum KindCase {
    kIdent = 4,
    kFunction = 5,
    KIND_NOT_SET = 0,
  };

  static inline const Decl* internal_default_instance() {
    return reinterpret_cast<const Decl*>(
               &_Decl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Decl& a, Decl& b) {
    a.Swap(&b);
  }
  inline void Swap(Decl* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Decl* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Decl* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Decl>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Decl& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Decl& from) {
    Decl::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Decl* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "google.api.expr.v1beta1.Decl";
  }
  protected:
  explicit Decl(::google::protobuf::Arena* arena);
  Decl(::google::protobuf::Arena* arena, const Decl& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kDocFieldNumber = 3,
    kIdFieldNumber = 1,
    kIdentFieldNumber = 4,
    kFunctionFieldNumber = 5,
  };
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string doc = 3 [json_name = "doc"];
  void clear_doc() ;
  const std::string& doc() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_doc(Arg_&& arg, Args_... args);
  std::string* mutable_doc();
  PROTOBUF_NODISCARD std::string* release_doc();
  void set_allocated_doc(std::string* value);

  private:
  const std::string& _internal_doc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_doc(
      const std::string& value);
  std::string* _internal_mutable_doc();

  public:
  // int32 id = 1 [json_name = "id"];
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // .google.api.expr.v1beta1.IdentDecl ident = 4 [json_name = "ident"];
  bool has_ident() const;
  private:
  bool _internal_has_ident() const;

  public:
  void clear_ident() ;
  const ::google::api::expr::v1beta1::IdentDecl& ident() const;
  PROTOBUF_NODISCARD ::google::api::expr::v1beta1::IdentDecl* release_ident();
  ::google::api::expr::v1beta1::IdentDecl* mutable_ident();
  void set_allocated_ident(::google::api::expr::v1beta1::IdentDecl* value);
  void unsafe_arena_set_allocated_ident(::google::api::expr::v1beta1::IdentDecl* value);
  ::google::api::expr::v1beta1::IdentDecl* unsafe_arena_release_ident();

  private:
  const ::google::api::expr::v1beta1::IdentDecl& _internal_ident() const;
  ::google::api::expr::v1beta1::IdentDecl* _internal_mutable_ident();

  public:
  // .google.api.expr.v1beta1.FunctionDecl function = 5 [json_name = "function"];
  bool has_function() const;
  private:
  bool _internal_has_function() const;

  public:
  void clear_function() ;
  const ::google::api::expr::v1beta1::FunctionDecl& function() const;
  PROTOBUF_NODISCARD ::google::api::expr::v1beta1::FunctionDecl* release_function();
  ::google::api::expr::v1beta1::FunctionDecl* mutable_function();
  void set_allocated_function(::google::api::expr::v1beta1::FunctionDecl* value);
  void unsafe_arena_set_allocated_function(::google::api::expr::v1beta1::FunctionDecl* value);
  ::google::api::expr::v1beta1::FunctionDecl* unsafe_arena_release_function();

  private:
  const ::google::api::expr::v1beta1::FunctionDecl& _internal_function() const;
  ::google::api::expr::v1beta1::FunctionDecl* _internal_mutable_function();

  public:
  void clear_kind();
  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:google.api.expr.v1beta1.Decl)
 private:
  class _Internal;
  void set_has_ident();
  void set_has_function();

  inline bool has_kind() const;
  inline void clear_has_kind();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 2,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr doc_;
    ::int32_t id_;
    union KindUnion {
      constexpr KindUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::api::expr::v1beta1::IdentDecl* ident_;
      ::google::api::expr::v1beta1::FunctionDecl* function_;
    } kind_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Decl

// int32 id = 1 [json_name = "id"];
inline void Decl::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t Decl::id() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Decl.id)
  return _internal_id();
}
inline void Decl::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Decl.id)
}
inline ::int32_t Decl::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void Decl::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string name = 2 [json_name = "name"];
inline void Decl::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Decl::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Decl.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Decl::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Decl.name)
}
inline std::string* Decl::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.Decl.name)
  return _s;
}
inline const std::string& Decl::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Decl::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Decl::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Decl::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.Decl.name)
  return _impl_.name_.Release();
}
inline void Decl::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Decl.name)
}

// string doc = 3 [json_name = "doc"];
inline void Decl::clear_doc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.doc_.ClearToEmpty();
}
inline const std::string& Decl::doc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Decl.doc)
  return _internal_doc();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Decl::set_doc(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.doc_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Decl.doc)
}
inline std::string* Decl::mutable_doc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_doc();
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.Decl.doc)
  return _s;
}
inline const std::string& Decl::_internal_doc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.doc_.Get();
}
inline void Decl::_internal_set_doc(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.doc_.Set(value, GetArena());
}
inline std::string* Decl::_internal_mutable_doc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.doc_.Mutable( GetArena());
}
inline std::string* Decl::release_doc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.Decl.doc)
  return _impl_.doc_.Release();
}
inline void Decl::set_allocated_doc(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.doc_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.doc_.IsDefault()) {
          _impl_.doc_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Decl.doc)
}

// .google.api.expr.v1beta1.IdentDecl ident = 4 [json_name = "ident"];
inline bool Decl::has_ident() const {
  return kind_case() == kIdent;
}
inline bool Decl::_internal_has_ident() const {
  return kind_case() == kIdent;
}
inline void Decl::set_has_ident() {
  _impl_._oneof_case_[0] = kIdent;
}
inline void Decl::clear_ident() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (kind_case() == kIdent) {
    if (GetArena() == nullptr) {
      delete _impl_.kind_.ident_;
    }
    clear_has_kind();
  }
}
inline ::google::api::expr::v1beta1::IdentDecl* Decl::release_ident() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.Decl.ident)
  if (kind_case() == kIdent) {
    clear_has_kind();
    auto* temp = _impl_.kind_.ident_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.kind_.ident_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::api::expr::v1beta1::IdentDecl& Decl::_internal_ident() const {
  return kind_case() == kIdent ? *_impl_.kind_.ident_ : reinterpret_cast<::google::api::expr::v1beta1::IdentDecl&>(::google::api::expr::v1beta1::_IdentDecl_default_instance_);
}
inline const ::google::api::expr::v1beta1::IdentDecl& Decl::ident() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Decl.ident)
  return _internal_ident();
}
inline ::google::api::expr::v1beta1::IdentDecl* Decl::unsafe_arena_release_ident() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.Decl.ident)
  if (kind_case() == kIdent) {
    clear_has_kind();
    auto* temp = _impl_.kind_.ident_;
    _impl_.kind_.ident_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Decl::unsafe_arena_set_allocated_ident(::google::api::expr::v1beta1::IdentDecl* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_kind();
  if (value) {
    set_has_ident();
    _impl_.kind_.ident_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.Decl.ident)
}
inline ::google::api::expr::v1beta1::IdentDecl* Decl::_internal_mutable_ident() {
  if (kind_case() != kIdent) {
    clear_kind();
    set_has_ident();
    _impl_.kind_.ident_ = CreateMaybeMessage<::google::api::expr::v1beta1::IdentDecl>(GetArena());
  }
  return _impl_.kind_.ident_;
}
inline ::google::api::expr::v1beta1::IdentDecl* Decl::mutable_ident() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::api::expr::v1beta1::IdentDecl* _msg = _internal_mutable_ident();
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.Decl.ident)
  return _msg;
}

// .google.api.expr.v1beta1.FunctionDecl function = 5 [json_name = "function"];
inline bool Decl::has_function() const {
  return kind_case() == kFunction;
}
inline bool Decl::_internal_has_function() const {
  return kind_case() == kFunction;
}
inline void Decl::set_has_function() {
  _impl_._oneof_case_[0] = kFunction;
}
inline void Decl::clear_function() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (kind_case() == kFunction) {
    if (GetArena() == nullptr) {
      delete _impl_.kind_.function_;
    }
    clear_has_kind();
  }
}
inline ::google::api::expr::v1beta1::FunctionDecl* Decl::release_function() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.Decl.function)
  if (kind_case() == kFunction) {
    clear_has_kind();
    auto* temp = _impl_.kind_.function_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.kind_.function_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::api::expr::v1beta1::FunctionDecl& Decl::_internal_function() const {
  return kind_case() == kFunction ? *_impl_.kind_.function_ : reinterpret_cast<::google::api::expr::v1beta1::FunctionDecl&>(::google::api::expr::v1beta1::_FunctionDecl_default_instance_);
}
inline const ::google::api::expr::v1beta1::FunctionDecl& Decl::function() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Decl.function)
  return _internal_function();
}
inline ::google::api::expr::v1beta1::FunctionDecl* Decl::unsafe_arena_release_function() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.Decl.function)
  if (kind_case() == kFunction) {
    clear_has_kind();
    auto* temp = _impl_.kind_.function_;
    _impl_.kind_.function_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Decl::unsafe_arena_set_allocated_function(::google::api::expr::v1beta1::FunctionDecl* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_kind();
  if (value) {
    set_has_function();
    _impl_.kind_.function_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.Decl.function)
}
inline ::google::api::expr::v1beta1::FunctionDecl* Decl::_internal_mutable_function() {
  if (kind_case() != kFunction) {
    clear_kind();
    set_has_function();
    _impl_.kind_.function_ = CreateMaybeMessage<::google::api::expr::v1beta1::FunctionDecl>(GetArena());
  }
  return _impl_.kind_.function_;
}
inline ::google::api::expr::v1beta1::FunctionDecl* Decl::mutable_function() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::api::expr::v1beta1::FunctionDecl* _msg = _internal_mutable_function();
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.Decl.function)
  return _msg;
}

inline bool Decl::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void Decl::clear_has_kind() {
  _impl_._oneof_case_[0] = KIND_NOT_SET;
}
inline Decl::KindCase Decl::kind_case() const {
  return Decl::KindCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// DeclType

// int32 id = 1 [json_name = "id"];
inline void DeclType::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0;
}
inline ::int32_t DeclType::id() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.DeclType.id)
  return _internal_id();
}
inline void DeclType::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.DeclType.id)
}
inline ::int32_t DeclType::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void DeclType::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string type = 2 [json_name = "type"];
inline void DeclType::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& DeclType::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.DeclType.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeclType::set_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.DeclType.type)
}
inline std::string* DeclType::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.DeclType.type)
  return _s;
}
inline const std::string& DeclType::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_.Get();
}
inline void DeclType::_internal_set_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(value, GetArena());
}
inline std::string* DeclType::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* DeclType::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.DeclType.type)
  return _impl_.type_.Release();
}
inline void DeclType::set_allocated_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.DeclType.type)
}

// repeated .google.api.expr.v1beta1.DeclType type_params = 4 [json_name = "typeParams"];
inline int DeclType::_internal_type_params_size() const {
  return _internal_type_params().size();
}
inline int DeclType::type_params_size() const {
  return _internal_type_params_size();
}
inline void DeclType::clear_type_params() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_params_.Clear();
}
inline ::google::api::expr::v1beta1::DeclType* DeclType::mutable_type_params(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.DeclType.type_params)
  return _internal_mutable_type_params()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::api::expr::v1beta1::DeclType>* DeclType::mutable_type_params()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:google.api.expr.v1beta1.DeclType.type_params)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_type_params();
}
inline const ::google::api::expr::v1beta1::DeclType& DeclType::type_params(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.DeclType.type_params)
  return _internal_type_params().Get(index);
}
inline ::google::api::expr::v1beta1::DeclType* DeclType::add_type_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::api::expr::v1beta1::DeclType* _add = _internal_mutable_type_params()->Add();
  // @@protoc_insertion_point(field_add:google.api.expr.v1beta1.DeclType.type_params)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::api::expr::v1beta1::DeclType>& DeclType::type_params() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:google.api.expr.v1beta1.DeclType.type_params)
  return _internal_type_params();
}
inline const ::google::protobuf::RepeatedPtrField<::google::api::expr::v1beta1::DeclType>&
DeclType::_internal_type_params() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_params_;
}
inline ::google::protobuf::RepeatedPtrField<::google::api::expr::v1beta1::DeclType>*
DeclType::_internal_mutable_type_params() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.type_params_;
}

// -------------------------------------------------------------------

// IdentDecl

// .google.api.expr.v1beta1.DeclType type = 3 [json_name = "type"];
inline bool IdentDecl::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.type_ != nullptr);
  return value;
}
inline void IdentDecl::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.type_ != nullptr) _impl_.type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::google::api::expr::v1beta1::DeclType& IdentDecl::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::api::expr::v1beta1::DeclType* p = _impl_.type_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::api::expr::v1beta1::DeclType&>(::google::api::expr::v1beta1::_DeclType_default_instance_);
}
inline const ::google::api::expr::v1beta1::DeclType& IdentDecl::type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.IdentDecl.type)
  return _internal_type();
}
inline void IdentDecl::unsafe_arena_set_allocated_type(::google::api::expr::v1beta1::DeclType* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_);
  }
  _impl_.type_ = reinterpret_cast<::google::api::expr::v1beta1::DeclType*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.IdentDecl.type)
}
inline ::google::api::expr::v1beta1::DeclType* IdentDecl::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::api::expr::v1beta1::DeclType* released = _impl_.type_;
  _impl_.type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::api::expr::v1beta1::DeclType* IdentDecl::unsafe_arena_release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.IdentDecl.type)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::api::expr::v1beta1::DeclType* temp = _impl_.type_;
  _impl_.type_ = nullptr;
  return temp;
}
inline ::google::api::expr::v1beta1::DeclType* IdentDecl::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.type_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::api::expr::v1beta1::DeclType>(GetArena());
    _impl_.type_ = reinterpret_cast<::google::api::expr::v1beta1::DeclType*>(p);
  }
  return _impl_.type_;
}
inline ::google::api::expr::v1beta1::DeclType* IdentDecl::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::api::expr::v1beta1::DeclType* _msg = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.IdentDecl.type)
  return _msg;
}
inline void IdentDecl::set_allocated_type(::google::api::expr::v1beta1::DeclType* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::api::expr::v1beta1::DeclType*>(_impl_.type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::api::expr::v1beta1::DeclType*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.type_ = reinterpret_cast<::google::api::expr::v1beta1::DeclType*>(value);
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.IdentDecl.type)
}

// .google.api.expr.v1beta1.Expr value = 4 [json_name = "value"];
inline bool IdentDecl::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.value_ != nullptr);
  return value;
}
inline const ::google::api::expr::v1beta1::Expr& IdentDecl::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::api::expr::v1beta1::Expr* p = _impl_.value_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::api::expr::v1beta1::Expr&>(::google::api::expr::v1beta1::_Expr_default_instance_);
}
inline const ::google::api::expr::v1beta1::Expr& IdentDecl::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.IdentDecl.value)
  return _internal_value();
}
inline void IdentDecl::unsafe_arena_set_allocated_value(::google::api::expr::v1beta1::Expr* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }
  _impl_.value_ = reinterpret_cast<::google::api::expr::v1beta1::Expr*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.IdentDecl.value)
}
inline ::google::api::expr::v1beta1::Expr* IdentDecl::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::api::expr::v1beta1::Expr* released = _impl_.value_;
  _impl_.value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::api::expr::v1beta1::Expr* IdentDecl::unsafe_arena_release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.IdentDecl.value)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::api::expr::v1beta1::Expr* temp = _impl_.value_;
  _impl_.value_ = nullptr;
  return temp;
}
inline ::google::api::expr::v1beta1::Expr* IdentDecl::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.value_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::api::expr::v1beta1::Expr>(GetArena());
    _impl_.value_ = reinterpret_cast<::google::api::expr::v1beta1::Expr*>(p);
  }
  return _impl_.value_;
}
inline ::google::api::expr::v1beta1::Expr* IdentDecl::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::api::expr::v1beta1::Expr* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.IdentDecl.value)
  return _msg;
}
inline void IdentDecl::set_allocated_value(::google::api::expr::v1beta1::Expr* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.value_ = reinterpret_cast<::google::api::expr::v1beta1::Expr*>(value);
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.IdentDecl.value)
}

// -------------------------------------------------------------------

// FunctionDecl

// repeated .google.api.expr.v1beta1.IdentDecl args = 1 [json_name = "args"];
inline int FunctionDecl::_internal_args_size() const {
  return _internal_args().size();
}
inline int FunctionDecl::args_size() const {
  return _internal_args_size();
}
inline void FunctionDecl::clear_args() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.args_.Clear();
}
inline ::google::api::expr::v1beta1::IdentDecl* FunctionDecl::mutable_args(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.FunctionDecl.args)
  return _internal_mutable_args()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::api::expr::v1beta1::IdentDecl>* FunctionDecl::mutable_args()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:google.api.expr.v1beta1.FunctionDecl.args)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_args();
}
inline const ::google::api::expr::v1beta1::IdentDecl& FunctionDecl::args(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.FunctionDecl.args)
  return _internal_args().Get(index);
}
inline ::google::api::expr::v1beta1::IdentDecl* FunctionDecl::add_args() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::api::expr::v1beta1::IdentDecl* _add = _internal_mutable_args()->Add();
  // @@protoc_insertion_point(field_add:google.api.expr.v1beta1.FunctionDecl.args)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::api::expr::v1beta1::IdentDecl>& FunctionDecl::args() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:google.api.expr.v1beta1.FunctionDecl.args)
  return _internal_args();
}
inline const ::google::protobuf::RepeatedPtrField<::google::api::expr::v1beta1::IdentDecl>&
FunctionDecl::_internal_args() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.args_;
}
inline ::google::protobuf::RepeatedPtrField<::google::api::expr::v1beta1::IdentDecl>*
FunctionDecl::_internal_mutable_args() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.args_;
}

// .google.api.expr.v1beta1.DeclType return_type = 2 [json_name = "returnType"];
inline bool FunctionDecl::has_return_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.return_type_ != nullptr);
  return value;
}
inline void FunctionDecl::clear_return_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.return_type_ != nullptr) _impl_.return_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::google::api::expr::v1beta1::DeclType& FunctionDecl::_internal_return_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::api::expr::v1beta1::DeclType* p = _impl_.return_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::api::expr::v1beta1::DeclType&>(::google::api::expr::v1beta1::_DeclType_default_instance_);
}
inline const ::google::api::expr::v1beta1::DeclType& FunctionDecl::return_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.FunctionDecl.return_type)
  return _internal_return_type();
}
inline void FunctionDecl::unsafe_arena_set_allocated_return_type(::google::api::expr::v1beta1::DeclType* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.return_type_);
  }
  _impl_.return_type_ = reinterpret_cast<::google::api::expr::v1beta1::DeclType*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.FunctionDecl.return_type)
}
inline ::google::api::expr::v1beta1::DeclType* FunctionDecl::release_return_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::api::expr::v1beta1::DeclType* released = _impl_.return_type_;
  _impl_.return_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::api::expr::v1beta1::DeclType* FunctionDecl::unsafe_arena_release_return_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.FunctionDecl.return_type)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::api::expr::v1beta1::DeclType* temp = _impl_.return_type_;
  _impl_.return_type_ = nullptr;
  return temp;
}
inline ::google::api::expr::v1beta1::DeclType* FunctionDecl::_internal_mutable_return_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.return_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::api::expr::v1beta1::DeclType>(GetArena());
    _impl_.return_type_ = reinterpret_cast<::google::api::expr::v1beta1::DeclType*>(p);
  }
  return _impl_.return_type_;
}
inline ::google::api::expr::v1beta1::DeclType* FunctionDecl::mutable_return_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::api::expr::v1beta1::DeclType* _msg = _internal_mutable_return_type();
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.FunctionDecl.return_type)
  return _msg;
}
inline void FunctionDecl::set_allocated_return_type(::google::api::expr::v1beta1::DeclType* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::api::expr::v1beta1::DeclType*>(_impl_.return_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::api::expr::v1beta1::DeclType*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.return_type_ = reinterpret_cast<::google::api::expr::v1beta1::DeclType*>(value);
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.FunctionDecl.return_type)
}

// bool receiver_function = 3 [json_name = "receiverFunction"];
inline void FunctionDecl::clear_receiver_function() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.receiver_function_ = false;
}
inline bool FunctionDecl::receiver_function() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.FunctionDecl.receiver_function)
  return _internal_receiver_function();
}
inline void FunctionDecl::set_receiver_function(bool value) {
  _internal_set_receiver_function(value);
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.FunctionDecl.receiver_function)
}
inline bool FunctionDecl::_internal_receiver_function() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.receiver_function_;
}
inline void FunctionDecl::_internal_set_receiver_function(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.receiver_function_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto_2epb_2eh
