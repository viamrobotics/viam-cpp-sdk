// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1alpha1/eval.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/expr/v1alpha1/value.pb.h"
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto;
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {
class ErrorSet;
struct ErrorSetDefaultTypeInternal;
extern ErrorSetDefaultTypeInternal _ErrorSet_default_instance_;
class EvalState;
struct EvalStateDefaultTypeInternal;
extern EvalStateDefaultTypeInternal _EvalState_default_instance_;
class EvalState_Result;
struct EvalState_ResultDefaultTypeInternal;
extern EvalState_ResultDefaultTypeInternal _EvalState_Result_default_instance_;
class ExprValue;
struct ExprValueDefaultTypeInternal;
extern ExprValueDefaultTypeInternal _ExprValue_default_instance_;
class UnknownSet;
struct UnknownSetDefaultTypeInternal;
extern UnknownSetDefaultTypeInternal _UnknownSet_default_instance_;
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::api::expr::v1alpha1::ErrorSet* Arena::CreateMaybeMessage<::google::api::expr::v1alpha1::ErrorSet>(Arena*);
template<> ::google::api::expr::v1alpha1::EvalState* Arena::CreateMaybeMessage<::google::api::expr::v1alpha1::EvalState>(Arena*);
template<> ::google::api::expr::v1alpha1::EvalState_Result* Arena::CreateMaybeMessage<::google::api::expr::v1alpha1::EvalState_Result>(Arena*);
template<> ::google::api::expr::v1alpha1::ExprValue* Arena::CreateMaybeMessage<::google::api::expr::v1alpha1::ExprValue>(Arena*);
template<> ::google::api::expr::v1alpha1::UnknownSet* Arena::CreateMaybeMessage<::google::api::expr::v1alpha1::UnknownSet>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {

// ===================================================================

class EvalState_Result final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1alpha1.EvalState.Result) */ {
 public:
  inline EvalState_Result() : EvalState_Result(nullptr) {}
  ~EvalState_Result() override;
  explicit PROTOBUF_CONSTEXPR EvalState_Result(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EvalState_Result(const EvalState_Result& from);
  EvalState_Result(EvalState_Result&& from) noexcept
    : EvalState_Result() {
    *this = ::std::move(from);
  }

  inline EvalState_Result& operator=(const EvalState_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvalState_Result& operator=(EvalState_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EvalState_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const EvalState_Result* internal_default_instance() {
    return reinterpret_cast<const EvalState_Result*>(
               &_EvalState_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EvalState_Result& a, EvalState_Result& b) {
    a.Swap(&b);
  }
  inline void Swap(EvalState_Result* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EvalState_Result* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EvalState_Result* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EvalState_Result>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EvalState_Result& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const EvalState_Result& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EvalState_Result* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.expr.v1alpha1.EvalState.Result";
  }
  protected:
  explicit EvalState_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExprFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // int64 expr = 1 [json_name = "expr"];
  void clear_expr();
  int64_t expr() const;
  void set_expr(int64_t value);
  private:
  int64_t _internal_expr() const;
  void _internal_set_expr(int64_t value);
  public:

  // int64 value = 2 [json_name = "value"];
  void clear_value();
  int64_t value() const;
  void set_value(int64_t value);
  private:
  int64_t _internal_value() const;
  void _internal_set_value(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:google.api.expr.v1alpha1.EvalState.Result)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t expr_;
  int64_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto;
};
// -------------------------------------------------------------------

class EvalState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1alpha1.EvalState) */ {
 public:
  inline EvalState() : EvalState(nullptr) {}
  ~EvalState() override;
  explicit PROTOBUF_CONSTEXPR EvalState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EvalState(const EvalState& from);
  EvalState(EvalState&& from) noexcept
    : EvalState() {
    *this = ::std::move(from);
  }

  inline EvalState& operator=(const EvalState& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvalState& operator=(EvalState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EvalState& default_instance() {
    return *internal_default_instance();
  }
  static inline const EvalState* internal_default_instance() {
    return reinterpret_cast<const EvalState*>(
               &_EvalState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EvalState& a, EvalState& b) {
    a.Swap(&b);
  }
  inline void Swap(EvalState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EvalState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EvalState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EvalState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EvalState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const EvalState& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EvalState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.expr.v1alpha1.EvalState";
  }
  protected:
  explicit EvalState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EvalState_Result Result;

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 1,
    kResultsFieldNumber = 3,
  };
  // repeated .google.api.expr.v1alpha1.ExprValue values = 1 [json_name = "values"];
  int values_size() const;
  private:
  int _internal_values_size() const;
  public:
  void clear_values();
  ::google::api::expr::v1alpha1::ExprValue* mutable_values(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::expr::v1alpha1::ExprValue >*
      mutable_values();
  private:
  const ::google::api::expr::v1alpha1::ExprValue& _internal_values(int index) const;
  ::google::api::expr::v1alpha1::ExprValue* _internal_add_values();
  public:
  const ::google::api::expr::v1alpha1::ExprValue& values(int index) const;
  ::google::api::expr::v1alpha1::ExprValue* add_values();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::expr::v1alpha1::ExprValue >&
      values() const;

  // repeated .google.api.expr.v1alpha1.EvalState.Result results = 3 [json_name = "results"];
  int results_size() const;
  private:
  int _internal_results_size() const;
  public:
  void clear_results();
  ::google::api::expr::v1alpha1::EvalState_Result* mutable_results(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::expr::v1alpha1::EvalState_Result >*
      mutable_results();
  private:
  const ::google::api::expr::v1alpha1::EvalState_Result& _internal_results(int index) const;
  ::google::api::expr::v1alpha1::EvalState_Result* _internal_add_results();
  public:
  const ::google::api::expr::v1alpha1::EvalState_Result& results(int index) const;
  ::google::api::expr::v1alpha1::EvalState_Result* add_results();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::expr::v1alpha1::EvalState_Result >&
      results() const;

  // @@protoc_insertion_point(class_scope:google.api.expr.v1alpha1.EvalState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::expr::v1alpha1::ExprValue > values_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::expr::v1alpha1::EvalState_Result > results_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto;
};
// -------------------------------------------------------------------

class ExprValue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1alpha1.ExprValue) */ {
 public:
  inline ExprValue() : ExprValue(nullptr) {}
  ~ExprValue() override;
  explicit PROTOBUF_CONSTEXPR ExprValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ExprValue(const ExprValue& from);
  ExprValue(ExprValue&& from) noexcept
    : ExprValue() {
    *this = ::std::move(from);
  }

  inline ExprValue& operator=(const ExprValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExprValue& operator=(ExprValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExprValue& default_instance() {
    return *internal_default_instance();
  }
  enum KindCase {
    kValue = 1,
    kError = 2,
    kUnknown = 3,
    KIND_NOT_SET = 0,
  };

  static inline const ExprValue* internal_default_instance() {
    return reinterpret_cast<const ExprValue*>(
               &_ExprValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ExprValue& a, ExprValue& b) {
    a.Swap(&b);
  }
  inline void Swap(ExprValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExprValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExprValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExprValue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ExprValue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ExprValue& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExprValue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.expr.v1alpha1.ExprValue";
  }
  protected:
  explicit ExprValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kErrorFieldNumber = 2,
    kUnknownFieldNumber = 3,
  };
  // .google.api.expr.v1alpha1.Value value = 1 [json_name = "value"];
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::google::api::expr::v1alpha1::Value& value() const;
  PROTOBUF_NODISCARD ::google::api::expr::v1alpha1::Value* release_value();
  ::google::api::expr::v1alpha1::Value* mutable_value();
  void set_allocated_value(::google::api::expr::v1alpha1::Value* value);
  private:
  const ::google::api::expr::v1alpha1::Value& _internal_value() const;
  ::google::api::expr::v1alpha1::Value* _internal_mutable_value();
  public:
  void unsafe_arena_set_allocated_value(
      ::google::api::expr::v1alpha1::Value* value);
  ::google::api::expr::v1alpha1::Value* unsafe_arena_release_value();

  // .google.api.expr.v1alpha1.ErrorSet error = 2 [json_name = "error"];
  bool has_error() const;
  private:
  bool _internal_has_error() const;
  public:
  void clear_error();
  const ::google::api::expr::v1alpha1::ErrorSet& error() const;
  PROTOBUF_NODISCARD ::google::api::expr::v1alpha1::ErrorSet* release_error();
  ::google::api::expr::v1alpha1::ErrorSet* mutable_error();
  void set_allocated_error(::google::api::expr::v1alpha1::ErrorSet* error);
  private:
  const ::google::api::expr::v1alpha1::ErrorSet& _internal_error() const;
  ::google::api::expr::v1alpha1::ErrorSet* _internal_mutable_error();
  public:
  void unsafe_arena_set_allocated_error(
      ::google::api::expr::v1alpha1::ErrorSet* error);
  ::google::api::expr::v1alpha1::ErrorSet* unsafe_arena_release_error();

  // .google.api.expr.v1alpha1.UnknownSet unknown = 3 [json_name = "unknown"];
  bool has_unknown() const;
  private:
  bool _internal_has_unknown() const;
  public:
  void clear_unknown();
  const ::google::api::expr::v1alpha1::UnknownSet& unknown() const;
  PROTOBUF_NODISCARD ::google::api::expr::v1alpha1::UnknownSet* release_unknown();
  ::google::api::expr::v1alpha1::UnknownSet* mutable_unknown();
  void set_allocated_unknown(::google::api::expr::v1alpha1::UnknownSet* unknown);
  private:
  const ::google::api::expr::v1alpha1::UnknownSet& _internal_unknown() const;
  ::google::api::expr::v1alpha1::UnknownSet* _internal_mutable_unknown();
  public:
  void unsafe_arena_set_allocated_unknown(
      ::google::api::expr::v1alpha1::UnknownSet* unknown);
  ::google::api::expr::v1alpha1::UnknownSet* unsafe_arena_release_unknown();

  void clear_kind();
  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:google.api.expr.v1alpha1.ExprValue)
 private:
  class _Internal;
  void set_has_value();
  void set_has_error();
  void set_has_unknown();

  inline bool has_kind() const;
  inline void clear_has_kind();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union KindUnion {
    constexpr KindUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::google::api::expr::v1alpha1::Value* value_;
    ::google::api::expr::v1alpha1::ErrorSet* error_;
    ::google::api::expr::v1alpha1::UnknownSet* unknown_;
  } kind_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t _oneof_case_[1];

  friend struct ::TableStruct_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto;
};
// -------------------------------------------------------------------

class ErrorSet final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1alpha1.ErrorSet) */ {
 public:
  inline ErrorSet() : ErrorSet(nullptr) {}
  ~ErrorSet() override;
  explicit PROTOBUF_CONSTEXPR ErrorSet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ErrorSet(const ErrorSet& from);
  ErrorSet(ErrorSet&& from) noexcept
    : ErrorSet() {
    *this = ::std::move(from);
  }

  inline ErrorSet& operator=(const ErrorSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline ErrorSet& operator=(ErrorSet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ErrorSet& default_instance() {
    return *internal_default_instance();
  }
  static inline const ErrorSet* internal_default_instance() {
    return reinterpret_cast<const ErrorSet*>(
               &_ErrorSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ErrorSet& a, ErrorSet& b) {
    a.Swap(&b);
  }
  inline void Swap(ErrorSet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ErrorSet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ErrorSet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ErrorSet>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ErrorSet& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ErrorSet& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ErrorSet* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.expr.v1alpha1.ErrorSet";
  }
  protected:
  explicit ErrorSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorsFieldNumber = 1,
  };
  // repeated .google.rpc.Status errors = 1 [json_name = "errors"];
  int errors_size() const;
  private:
  int _internal_errors_size() const;
  public:
  void clear_errors();
  ::google::rpc::Status* mutable_errors(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::rpc::Status >*
      mutable_errors();
  private:
  const ::google::rpc::Status& _internal_errors(int index) const;
  ::google::rpc::Status* _internal_add_errors();
  public:
  const ::google::rpc::Status& errors(int index) const;
  ::google::rpc::Status* add_errors();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::rpc::Status >&
      errors() const;

  // @@protoc_insertion_point(class_scope:google.api.expr.v1alpha1.ErrorSet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::rpc::Status > errors_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto;
};
// -------------------------------------------------------------------

class UnknownSet final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1alpha1.UnknownSet) */ {
 public:
  inline UnknownSet() : UnknownSet(nullptr) {}
  ~UnknownSet() override;
  explicit PROTOBUF_CONSTEXPR UnknownSet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UnknownSet(const UnknownSet& from);
  UnknownSet(UnknownSet&& from) noexcept
    : UnknownSet() {
    *this = ::std::move(from);
  }

  inline UnknownSet& operator=(const UnknownSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnknownSet& operator=(UnknownSet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnknownSet& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnknownSet* internal_default_instance() {
    return reinterpret_cast<const UnknownSet*>(
               &_UnknownSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(UnknownSet& a, UnknownSet& b) {
    a.Swap(&b);
  }
  inline void Swap(UnknownSet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnknownSet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnknownSet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnknownSet>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UnknownSet& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const UnknownSet& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnknownSet* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.expr.v1alpha1.UnknownSet";
  }
  protected:
  explicit UnknownSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExprsFieldNumber = 1,
  };
  // repeated int64 exprs = 1 [json_name = "exprs"];
  int exprs_size() const;
  private:
  int _internal_exprs_size() const;
  public:
  void clear_exprs();
  private:
  int64_t _internal_exprs(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_exprs() const;
  void _internal_add_exprs(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_exprs();
  public:
  int64_t exprs(int index) const;
  void set_exprs(int index, int64_t value);
  void add_exprs(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      exprs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_exprs();

  // @@protoc_insertion_point(class_scope:google.api.expr.v1alpha1.UnknownSet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > exprs_;
  mutable std::atomic<int> _exprs_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EvalState_Result

// int64 expr = 1 [json_name = "expr"];
inline void EvalState_Result::clear_expr() {
  expr_ = int64_t{0};
}
inline int64_t EvalState_Result::_internal_expr() const {
  return expr_;
}
inline int64_t EvalState_Result::expr() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.EvalState.Result.expr)
  return _internal_expr();
}
inline void EvalState_Result::_internal_set_expr(int64_t value) {
  
  expr_ = value;
}
inline void EvalState_Result::set_expr(int64_t value) {
  _internal_set_expr(value);
  // @@protoc_insertion_point(field_set:google.api.expr.v1alpha1.EvalState.Result.expr)
}

// int64 value = 2 [json_name = "value"];
inline void EvalState_Result::clear_value() {
  value_ = int64_t{0};
}
inline int64_t EvalState_Result::_internal_value() const {
  return value_;
}
inline int64_t EvalState_Result::value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.EvalState.Result.value)
  return _internal_value();
}
inline void EvalState_Result::_internal_set_value(int64_t value) {
  
  value_ = value;
}
inline void EvalState_Result::set_value(int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:google.api.expr.v1alpha1.EvalState.Result.value)
}

// -------------------------------------------------------------------

// EvalState

// repeated .google.api.expr.v1alpha1.ExprValue values = 1 [json_name = "values"];
inline int EvalState::_internal_values_size() const {
  return values_.size();
}
inline int EvalState::values_size() const {
  return _internal_values_size();
}
inline void EvalState::clear_values() {
  values_.Clear();
}
inline ::google::api::expr::v1alpha1::ExprValue* EvalState::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.EvalState.values)
  return values_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::expr::v1alpha1::ExprValue >*
EvalState::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:google.api.expr.v1alpha1.EvalState.values)
  return &values_;
}
inline const ::google::api::expr::v1alpha1::ExprValue& EvalState::_internal_values(int index) const {
  return values_.Get(index);
}
inline const ::google::api::expr::v1alpha1::ExprValue& EvalState::values(int index) const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.EvalState.values)
  return _internal_values(index);
}
inline ::google::api::expr::v1alpha1::ExprValue* EvalState::_internal_add_values() {
  return values_.Add();
}
inline ::google::api::expr::v1alpha1::ExprValue* EvalState::add_values() {
  ::google::api::expr::v1alpha1::ExprValue* _add = _internal_add_values();
  // @@protoc_insertion_point(field_add:google.api.expr.v1alpha1.EvalState.values)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::expr::v1alpha1::ExprValue >&
EvalState::values() const {
  // @@protoc_insertion_point(field_list:google.api.expr.v1alpha1.EvalState.values)
  return values_;
}

// repeated .google.api.expr.v1alpha1.EvalState.Result results = 3 [json_name = "results"];
inline int EvalState::_internal_results_size() const {
  return results_.size();
}
inline int EvalState::results_size() const {
  return _internal_results_size();
}
inline void EvalState::clear_results() {
  results_.Clear();
}
inline ::google::api::expr::v1alpha1::EvalState_Result* EvalState::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.EvalState.results)
  return results_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::expr::v1alpha1::EvalState_Result >*
EvalState::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:google.api.expr.v1alpha1.EvalState.results)
  return &results_;
}
inline const ::google::api::expr::v1alpha1::EvalState_Result& EvalState::_internal_results(int index) const {
  return results_.Get(index);
}
inline const ::google::api::expr::v1alpha1::EvalState_Result& EvalState::results(int index) const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.EvalState.results)
  return _internal_results(index);
}
inline ::google::api::expr::v1alpha1::EvalState_Result* EvalState::_internal_add_results() {
  return results_.Add();
}
inline ::google::api::expr::v1alpha1::EvalState_Result* EvalState::add_results() {
  ::google::api::expr::v1alpha1::EvalState_Result* _add = _internal_add_results();
  // @@protoc_insertion_point(field_add:google.api.expr.v1alpha1.EvalState.results)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::api::expr::v1alpha1::EvalState_Result >&
EvalState::results() const {
  // @@protoc_insertion_point(field_list:google.api.expr.v1alpha1.EvalState.results)
  return results_;
}

// -------------------------------------------------------------------

// ExprValue

// .google.api.expr.v1alpha1.Value value = 1 [json_name = "value"];
inline bool ExprValue::_internal_has_value() const {
  return kind_case() == kValue;
}
inline bool ExprValue::has_value() const {
  return _internal_has_value();
}
inline void ExprValue::set_has_value() {
  _oneof_case_[0] = kValue;
}
inline ::google::api::expr::v1alpha1::Value* ExprValue::release_value() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.ExprValue.value)
  if (_internal_has_value()) {
    clear_has_kind();
    ::google::api::expr::v1alpha1::Value* temp = kind_.value_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::api::expr::v1alpha1::Value& ExprValue::_internal_value() const {
  return _internal_has_value()
      ? *kind_.value_
      : reinterpret_cast< ::google::api::expr::v1alpha1::Value&>(::google::api::expr::v1alpha1::_Value_default_instance_);
}
inline const ::google::api::expr::v1alpha1::Value& ExprValue::value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.ExprValue.value)
  return _internal_value();
}
inline ::google::api::expr::v1alpha1::Value* ExprValue::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.ExprValue.value)
  if (_internal_has_value()) {
    clear_has_kind();
    ::google::api::expr::v1alpha1::Value* temp = kind_.value_;
    kind_.value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ExprValue::unsafe_arena_set_allocated_value(::google::api::expr::v1alpha1::Value* value) {
  clear_kind();
  if (value) {
    set_has_value();
    kind_.value_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.ExprValue.value)
}
inline ::google::api::expr::v1alpha1::Value* ExprValue::_internal_mutable_value() {
  if (!_internal_has_value()) {
    clear_kind();
    set_has_value();
    kind_.value_ = CreateMaybeMessage< ::google::api::expr::v1alpha1::Value >(GetArenaForAllocation());
  }
  return kind_.value_;
}
inline ::google::api::expr::v1alpha1::Value* ExprValue::mutable_value() {
  ::google::api::expr::v1alpha1::Value* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.ExprValue.value)
  return _msg;
}

// .google.api.expr.v1alpha1.ErrorSet error = 2 [json_name = "error"];
inline bool ExprValue::_internal_has_error() const {
  return kind_case() == kError;
}
inline bool ExprValue::has_error() const {
  return _internal_has_error();
}
inline void ExprValue::set_has_error() {
  _oneof_case_[0] = kError;
}
inline void ExprValue::clear_error() {
  if (_internal_has_error()) {
    if (GetArenaForAllocation() == nullptr) {
      delete kind_.error_;
    }
    clear_has_kind();
  }
}
inline ::google::api::expr::v1alpha1::ErrorSet* ExprValue::release_error() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.ExprValue.error)
  if (_internal_has_error()) {
    clear_has_kind();
    ::google::api::expr::v1alpha1::ErrorSet* temp = kind_.error_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.error_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::api::expr::v1alpha1::ErrorSet& ExprValue::_internal_error() const {
  return _internal_has_error()
      ? *kind_.error_
      : reinterpret_cast< ::google::api::expr::v1alpha1::ErrorSet&>(::google::api::expr::v1alpha1::_ErrorSet_default_instance_);
}
inline const ::google::api::expr::v1alpha1::ErrorSet& ExprValue::error() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.ExprValue.error)
  return _internal_error();
}
inline ::google::api::expr::v1alpha1::ErrorSet* ExprValue::unsafe_arena_release_error() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.ExprValue.error)
  if (_internal_has_error()) {
    clear_has_kind();
    ::google::api::expr::v1alpha1::ErrorSet* temp = kind_.error_;
    kind_.error_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ExprValue::unsafe_arena_set_allocated_error(::google::api::expr::v1alpha1::ErrorSet* error) {
  clear_kind();
  if (error) {
    set_has_error();
    kind_.error_ = error;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.ExprValue.error)
}
inline ::google::api::expr::v1alpha1::ErrorSet* ExprValue::_internal_mutable_error() {
  if (!_internal_has_error()) {
    clear_kind();
    set_has_error();
    kind_.error_ = CreateMaybeMessage< ::google::api::expr::v1alpha1::ErrorSet >(GetArenaForAllocation());
  }
  return kind_.error_;
}
inline ::google::api::expr::v1alpha1::ErrorSet* ExprValue::mutable_error() {
  ::google::api::expr::v1alpha1::ErrorSet* _msg = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.ExprValue.error)
  return _msg;
}

// .google.api.expr.v1alpha1.UnknownSet unknown = 3 [json_name = "unknown"];
inline bool ExprValue::_internal_has_unknown() const {
  return kind_case() == kUnknown;
}
inline bool ExprValue::has_unknown() const {
  return _internal_has_unknown();
}
inline void ExprValue::set_has_unknown() {
  _oneof_case_[0] = kUnknown;
}
inline void ExprValue::clear_unknown() {
  if (_internal_has_unknown()) {
    if (GetArenaForAllocation() == nullptr) {
      delete kind_.unknown_;
    }
    clear_has_kind();
  }
}
inline ::google::api::expr::v1alpha1::UnknownSet* ExprValue::release_unknown() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.ExprValue.unknown)
  if (_internal_has_unknown()) {
    clear_has_kind();
    ::google::api::expr::v1alpha1::UnknownSet* temp = kind_.unknown_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    kind_.unknown_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::api::expr::v1alpha1::UnknownSet& ExprValue::_internal_unknown() const {
  return _internal_has_unknown()
      ? *kind_.unknown_
      : reinterpret_cast< ::google::api::expr::v1alpha1::UnknownSet&>(::google::api::expr::v1alpha1::_UnknownSet_default_instance_);
}
inline const ::google::api::expr::v1alpha1::UnknownSet& ExprValue::unknown() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.ExprValue.unknown)
  return _internal_unknown();
}
inline ::google::api::expr::v1alpha1::UnknownSet* ExprValue::unsafe_arena_release_unknown() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.ExprValue.unknown)
  if (_internal_has_unknown()) {
    clear_has_kind();
    ::google::api::expr::v1alpha1::UnknownSet* temp = kind_.unknown_;
    kind_.unknown_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ExprValue::unsafe_arena_set_allocated_unknown(::google::api::expr::v1alpha1::UnknownSet* unknown) {
  clear_kind();
  if (unknown) {
    set_has_unknown();
    kind_.unknown_ = unknown;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.ExprValue.unknown)
}
inline ::google::api::expr::v1alpha1::UnknownSet* ExprValue::_internal_mutable_unknown() {
  if (!_internal_has_unknown()) {
    clear_kind();
    set_has_unknown();
    kind_.unknown_ = CreateMaybeMessage< ::google::api::expr::v1alpha1::UnknownSet >(GetArenaForAllocation());
  }
  return kind_.unknown_;
}
inline ::google::api::expr::v1alpha1::UnknownSet* ExprValue::mutable_unknown() {
  ::google::api::expr::v1alpha1::UnknownSet* _msg = _internal_mutable_unknown();
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.ExprValue.unknown)
  return _msg;
}

inline bool ExprValue::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void ExprValue::clear_has_kind() {
  _oneof_case_[0] = KIND_NOT_SET;
}
inline ExprValue::KindCase ExprValue::kind_case() const {
  return ExprValue::KindCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ErrorSet

// repeated .google.rpc.Status errors = 1 [json_name = "errors"];
inline int ErrorSet::_internal_errors_size() const {
  return errors_.size();
}
inline int ErrorSet::errors_size() const {
  return _internal_errors_size();
}
inline ::google::rpc::Status* ErrorSet::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.ErrorSet.errors)
  return errors_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::rpc::Status >*
ErrorSet::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:google.api.expr.v1alpha1.ErrorSet.errors)
  return &errors_;
}
inline const ::google::rpc::Status& ErrorSet::_internal_errors(int index) const {
  return errors_.Get(index);
}
inline const ::google::rpc::Status& ErrorSet::errors(int index) const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.ErrorSet.errors)
  return _internal_errors(index);
}
inline ::google::rpc::Status* ErrorSet::_internal_add_errors() {
  return errors_.Add();
}
inline ::google::rpc::Status* ErrorSet::add_errors() {
  ::google::rpc::Status* _add = _internal_add_errors();
  // @@protoc_insertion_point(field_add:google.api.expr.v1alpha1.ErrorSet.errors)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::rpc::Status >&
ErrorSet::errors() const {
  // @@protoc_insertion_point(field_list:google.api.expr.v1alpha1.ErrorSet.errors)
  return errors_;
}

// -------------------------------------------------------------------

// UnknownSet

// repeated int64 exprs = 1 [json_name = "exprs"];
inline int UnknownSet::_internal_exprs_size() const {
  return exprs_.size();
}
inline int UnknownSet::exprs_size() const {
  return _internal_exprs_size();
}
inline void UnknownSet::clear_exprs() {
  exprs_.Clear();
}
inline int64_t UnknownSet::_internal_exprs(int index) const {
  return exprs_.Get(index);
}
inline int64_t UnknownSet::exprs(int index) const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.UnknownSet.exprs)
  return _internal_exprs(index);
}
inline void UnknownSet::set_exprs(int index, int64_t value) {
  exprs_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.expr.v1alpha1.UnknownSet.exprs)
}
inline void UnknownSet::_internal_add_exprs(int64_t value) {
  exprs_.Add(value);
}
inline void UnknownSet::add_exprs(int64_t value) {
  _internal_add_exprs(value);
  // @@protoc_insertion_point(field_add:google.api.expr.v1alpha1.UnknownSet.exprs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
UnknownSet::_internal_exprs() const {
  return exprs_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
UnknownSet::exprs() const {
  // @@protoc_insertion_point(field_list:google.api.expr.v1alpha1.UnknownSet.exprs)
  return _internal_exprs();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
UnknownSet::_internal_mutable_exprs() {
  return &exprs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
UnknownSet::mutable_exprs() {
  // @@protoc_insertion_point(field_mutable_list:google.api.expr.v1alpha1.UnknownSet.exprs)
  return _internal_mutable_exprs();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto
