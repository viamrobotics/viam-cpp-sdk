// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/slam/v1/slam.proto

#include "service/slam/v1/slam.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace viam {
namespace service {
namespace slam {
namespace v1 {

inline constexpr SensorInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::viam::service::slam::v1::SensorType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorInfo::SensorInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorInfoDefaultTypeInternal() {}
  union {
    SensorInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorInfoDefaultTypeInternal _SensorInfo_default_instance_;

inline constexpr GetPropertiesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetPropertiesRequest::GetPropertiesRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetPropertiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPropertiesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPropertiesRequestDefaultTypeInternal() {}
  union {
    GetPropertiesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPropertiesRequestDefaultTypeInternal _GetPropertiesRequest_default_instance_;

inline constexpr GetPositionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetPositionRequest::GetPositionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetPositionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPositionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPositionRequestDefaultTypeInternal() {}
  union {
    GetPositionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPositionRequestDefaultTypeInternal _GetPositionRequest_default_instance_;

inline constexpr GetPointCloudMapResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : point_cloud_pcd_chunk_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetPointCloudMapResponse::GetPointCloudMapResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetPointCloudMapResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPointCloudMapResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPointCloudMapResponseDefaultTypeInternal() {}
  union {
    GetPointCloudMapResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPointCloudMapResponseDefaultTypeInternal _GetPointCloudMapResponse_default_instance_;

inline constexpr GetPointCloudMapRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        return_edited_map_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GetPointCloudMapRequest::GetPointCloudMapRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetPointCloudMapRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPointCloudMapRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPointCloudMapRequestDefaultTypeInternal() {}
  union {
    GetPointCloudMapRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPointCloudMapRequestDefaultTypeInternal _GetPointCloudMapRequest_default_instance_;

inline constexpr GetInternalStateResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : internal_state_chunk_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetInternalStateResponse::GetInternalStateResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetInternalStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInternalStateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInternalStateResponseDefaultTypeInternal() {}
  union {
    GetInternalStateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInternalStateResponseDefaultTypeInternal _GetInternalStateResponse_default_instance_;

inline constexpr GetInternalStateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetInternalStateRequest::GetInternalStateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetInternalStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInternalStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInternalStateRequestDefaultTypeInternal() {}
  union {
    GetInternalStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInternalStateRequestDefaultTypeInternal _GetInternalStateRequest_default_instance_;

inline constexpr GetPropertiesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sensor_info_{},
        internal_state_file_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cloud_slam_{false},
        mapping_mode_{static_cast< ::viam::service::slam::v1::MappingMode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetPropertiesResponse::GetPropertiesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetPropertiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPropertiesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPropertiesResponseDefaultTypeInternal() {}
  union {
    GetPropertiesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPropertiesResponseDefaultTypeInternal _GetPropertiesResponse_default_instance_;

inline constexpr GetPositionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pose_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetPositionResponse::GetPositionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetPositionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPositionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPositionResponseDefaultTypeInternal() {}
  union {
    GetPositionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPositionResponseDefaultTypeInternal _GetPositionResponse_default_instance_;
}  // namespace v1
}  // namespace slam
}  // namespace service
}  // namespace viam
static ::_pb::Metadata file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[9];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_service_2fslam_2fv1_2fslam_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_service_2fslam_2fv1_2fslam_2eproto = nullptr;
const ::uint32_t TableStruct_service_2fslam_2fv1_2fslam_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionResponse, _impl_.pose_),
    0,
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapRequest, _impl_.return_edited_map_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapResponse, _impl_.point_cloud_pcd_chunk_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetInternalStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetInternalStateRequest, _impl_.name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetInternalStateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetInternalStateResponse, _impl_.internal_state_chunk_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPropertiesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPropertiesRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPropertiesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPropertiesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPropertiesResponse, _impl_.cloud_slam_),
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPropertiesResponse, _impl_.mapping_mode_),
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPropertiesResponse, _impl_.internal_state_file_type_),
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPropertiesResponse, _impl_.sensor_info_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::SensorInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::SensorInfo, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::SensorInfo, _impl_.type_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::viam::service::slam::v1::GetPositionRequest)},
        {9, 18, -1, sizeof(::viam::service::slam::v1::GetPositionResponse)},
        {19, 29, -1, sizeof(::viam::service::slam::v1::GetPointCloudMapRequest)},
        {31, -1, -1, sizeof(::viam::service::slam::v1::GetPointCloudMapResponse)},
        {40, -1, -1, sizeof(::viam::service::slam::v1::GetInternalStateRequest)},
        {49, -1, -1, sizeof(::viam::service::slam::v1::GetInternalStateResponse)},
        {58, -1, -1, sizeof(::viam::service::slam::v1::GetPropertiesRequest)},
        {67, 79, -1, sizeof(::viam::service::slam::v1::GetPropertiesResponse)},
        {83, -1, -1, sizeof(::viam::service::slam::v1::SensorInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::viam::service::slam::v1::_GetPositionRequest_default_instance_._instance,
    &::viam::service::slam::v1::_GetPositionResponse_default_instance_._instance,
    &::viam::service::slam::v1::_GetPointCloudMapRequest_default_instance_._instance,
    &::viam::service::slam::v1::_GetPointCloudMapResponse_default_instance_._instance,
    &::viam::service::slam::v1::_GetInternalStateRequest_default_instance_._instance,
    &::viam::service::slam::v1::_GetInternalStateResponse_default_instance_._instance,
    &::viam::service::slam::v1::_GetPropertiesRequest_default_instance_._instance,
    &::viam::service::slam::v1::_GetPropertiesResponse_default_instance_._instance,
    &::viam::service::slam::v1::_SensorInfo_default_instance_._instance,
};
const char descriptor_table_protodef_service_2fslam_2fv1_2fslam_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\032service/slam/v1/slam.proto\022\024viam.servi"
    "ce.slam.v1\032\026common/v1/common.proto\032\034goog"
    "le/api/annotations.proto\"(\n\022GetPositionR"
    "equest\022\022\n\004name\030\001 \001(\tR\004name\"\?\n\023GetPositio"
    "nResponse\022(\n\004pose\030\001 \001(\0132\024.viam.common.v1"
    ".PoseR\004pose\"t\n\027GetPointCloudMapRequest\022\022"
    "\n\004name\030\001 \001(\tR\004name\022/\n\021return_edited_map\030"
    "\002 \001(\010H\000R\017returnEditedMap\210\001\001B\024\n\022_return_e"
    "dited_map\"M\n\030GetPointCloudMapResponse\0221\n"
    "\025point_cloud_pcd_chunk\030\001 \001(\014R\022pointCloud"
    "PcdChunk\"-\n\027GetInternalStateRequest\022\022\n\004n"
    "ame\030\001 \001(\tR\004name\"L\n\030GetInternalStateRespo"
    "nse\0220\n\024internal_state_chunk\030\001 \001(\014R\022inter"
    "nalStateChunk\"*\n\024GetPropertiesRequest\022\022\n"
    "\004name\030\001 \001(\tR\004name\"\232\002\n\025GetPropertiesRespo"
    "nse\022\035\n\ncloud_slam\030\001 \001(\010R\tcloudSlam\022D\n\014ma"
    "pping_mode\030\002 \001(\0162!.viam.service.slam.v1."
    "MappingModeR\013mappingMode\022<\n\030internal_sta"
    "te_file_type\030\003 \001(\tH\000R\025internalStateFileT"
    "ype\210\001\001\022A\n\013sensor_info\030\004 \003(\0132 .viam.servi"
    "ce.slam.v1.SensorInfoR\nsensorInfoB\033\n\031_in"
    "ternal_state_file_type\"V\n\nSensorInfo\022\022\n\004"
    "name\030\001 \001(\tR\004name\0224\n\004type\030\002 \001(\0162 .viam.se"
    "rvice.slam.v1.SensorTypeR\004type*\222\001\n\013Mappi"
    "ngMode\022\034\n\030MAPPING_MODE_UNSPECIFIED\020\000\022\037\n\033"
    "MAPPING_MODE_CREATE_NEW_MAP\020\001\022\036\n\032MAPPING"
    "_MODE_LOCALIZE_ONLY\020\002\022$\n MAPPING_MODE_UP"
    "DATE_EXISTING_MAP\020\003*b\n\nSensorType\022\033\n\027SEN"
    "SOR_TYPE_UNSPECIFIED\020\000\022\026\n\022SENSOR_TYPE_CA"
    "MERA\020\001\022\037\n\033SENSOR_TYPE_MOVEMENT_SENSOR\020\0022"
    "\254\006\n\013SLAMService\022\225\001\n\013GetPosition\022(.viam.s"
    "ervice.slam.v1.GetPositionRequest\032).viam"
    ".service.slam.v1.GetPositionResponse\"1\202\323"
    "\344\223\002+\022)/viam/api/v1/service/slam/{name}/p"
    "osition\022\255\001\n\020GetPointCloudMap\022-.viam.serv"
    "ice.slam.v1.GetPointCloudMapRequest\032..vi"
    "am.service.slam.v1.GetPointCloudMapRespo"
    "nse\"8\202\323\344\223\0022\0220/viam/api/v1/service/slam/{"
    "name}/point_cloud_map0\001\022\254\001\n\020GetInternalS"
    "tate\022-.viam.service.slam.v1.GetInternalS"
    "tateRequest\032..viam.service.slam.v1.GetIn"
    "ternalStateResponse\"7\202\323\344\223\0021\022//viam/api/v"
    "1/service/slam/{name}/internal_state0\001\022\235"
    "\001\n\rGetProperties\022*.viam.service.slam.v1."
    "GetPropertiesRequest\032+.viam.service.slam"
    ".v1.GetPropertiesResponse\"3\202\323\344\223\002-\022+/viam"
    "/api/v1/service/slam/{name}/properties\022\205"
    "\001\n\tDoCommand\022 .viam.common.v1.DoCommandR"
    "equest\032!.viam.common.v1.DoCommandRespons"
    "e\"3\202\323\344\223\002-\"+/viam/api/v1/service/slam/{na"
    "me}/do_commandB\271\001\n\030com.viam.service.slam"
    ".v1B\tSlamProtoP\001Z\037go.viam.com/api/servic"
    "e/slam/v1\242\002\003VSS\252\002\024Viam.Service.Slam.V1\312\002"
    "\024Viam\\Service\\Slam\\V1\342\002 Viam\\Service\\Sla"
    "m\\V1\\GPBMetadata\352\002\027Viam::Service::Slam::"
    "V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_service_2fslam_2fv1_2fslam_2eproto_deps[2] =
    {
        &::descriptor_table_common_2fv1_2fcommon_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_service_2fslam_2fv1_2fslam_2eproto = {
    false,
    false,
    2210,
    descriptor_table_protodef_service_2fslam_2fv1_2fslam_2eproto,
    "service/slam/v1/slam.proto",
    &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
    descriptor_table_service_2fslam_2fv1_2fslam_2eproto_deps,
    2,
    9,
    schemas,
    file_default_instances,
    TableStruct_service_2fslam_2fv1_2fslam_2eproto::offsets,
    file_level_metadata_service_2fslam_2fv1_2fslam_2eproto,
    file_level_enum_descriptors_service_2fslam_2fv1_2fslam_2eproto,
    file_level_service_descriptors_service_2fslam_2fv1_2fslam_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter() {
  return &descriptor_table_service_2fslam_2fv1_2fslam_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_service_2fslam_2fv1_2fslam_2eproto(&descriptor_table_service_2fslam_2fv1_2fslam_2eproto);
namespace viam {
namespace service {
namespace slam {
namespace v1 {
const ::google::protobuf::EnumDescriptor* MappingMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_service_2fslam_2fv1_2fslam_2eproto);
  return file_level_enum_descriptors_service_2fslam_2fv1_2fslam_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MappingMode_internal_data_[] = {
    262144u, 0u, };
bool MappingMode_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* SensorType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_service_2fslam_2fv1_2fslam_2eproto);
  return file_level_enum_descriptors_service_2fslam_2fv1_2fslam_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t SensorType_internal_data_[] = {
    196608u, 0u, };
bool SensorType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class GetPositionRequest::_Internal {
 public:
};

GetPositionRequest::GetPositionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPositionRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetPositionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

GetPositionRequest::GetPositionRequest(
    ::google::protobuf::Arena* arena,
    const GetPositionRequest& from)
    : ::google::protobuf::Message(arena) {
  GetPositionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPositionRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetPositionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void GetPositionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetPositionRequest::~GetPositionRequest() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPositionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPositionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetPositionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPositionRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPositionRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 52, 2> GetPositionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetPositionRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetPositionRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(GetPositionRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\4\0\0\0\0\0\0"
    "viam.service.slam.v1.GetPositionRequest"
    "name"
  }},
};

::uint8_t* GetPositionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPositionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "viam.service.slam.v1.GetPositionRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPositionRequest)
  return target;
}

::size_t GetPositionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPositionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPositionRequest::_class_data_ = {
    GetPositionRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetPositionRequest::GetClassData() const {
  return &_class_data_;
}

void GetPositionRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPositionRequest*>(&to_msg);
  auto& from = static_cast<const GetPositionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPositionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPositionRequest::CopyFrom(const GetPositionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPositionRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetPositionRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetPositionRequest::InternalSwap(GetPositionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata GetPositionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[0]);
}
// ===================================================================

class GetPositionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetPositionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetPositionResponse, _impl_._has_bits_);
  static const ::viam::common::v1::Pose& pose(const GetPositionResponse* msg);
  static void set_has_pose(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::viam::common::v1::Pose& GetPositionResponse::_Internal::pose(const GetPositionResponse* msg) {
  return *msg->_impl_.pose_;
}
void GetPositionResponse::clear_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pose_ != nullptr) _impl_.pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetPositionResponse::GetPositionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPositionResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPositionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetPositionResponse::GetPositionResponse(
    ::google::protobuf::Arena* arena,
    const GetPositionResponse& from)
    : ::google::protobuf::Message(arena) {
  GetPositionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pose_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::viam::common::v1::Pose>(arena, *from._impl_.pose_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPositionResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPositionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetPositionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pose_ = {};
}
GetPositionResponse::~GetPositionResponse() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPositionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPositionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.pose_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetPositionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPositionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pose_ != nullptr);
    _impl_.pose_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPositionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetPositionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetPositionResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetPositionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .viam.common.v1.Pose pose = 1 [json_name = "pose"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetPositionResponse, _impl_.pose_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .viam.common.v1.Pose pose = 1 [json_name = "pose"];
    {PROTOBUF_FIELD_OFFSET(GetPositionResponse, _impl_.pose_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::viam::common::v1::Pose>()},
  }}, {{
  }},
};

::uint8_t* GetPositionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPositionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .viam.common.v1.Pose pose = 1 [json_name = "pose"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::pose(this),
        _Internal::pose(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPositionResponse)
  return target;
}

::size_t GetPositionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPositionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.Pose pose = 1 [json_name = "pose"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pose_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPositionResponse::_class_data_ = {
    GetPositionResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetPositionResponse::GetClassData() const {
  return &_class_data_;
}

void GetPositionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPositionResponse*>(&to_msg);
  auto& from = static_cast<const GetPositionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPositionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pose()->::viam::common::v1::Pose::MergeFrom(
        from._internal_pose());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPositionResponse::CopyFrom(const GetPositionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPositionResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetPositionResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetPositionResponse::InternalSwap(GetPositionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pose_, other->_impl_.pose_);
}

::google::protobuf::Metadata GetPositionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[1]);
}
// ===================================================================

class GetPointCloudMapRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetPointCloudMapRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetPointCloudMapRequest, _impl_._has_bits_);
  static void set_has_return_edited_map(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

GetPointCloudMapRequest::GetPointCloudMapRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPointCloudMapRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetPointCloudMapRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

GetPointCloudMapRequest::GetPointCloudMapRequest(
    ::google::protobuf::Arena* arena,
    const GetPointCloudMapRequest& from)
    : ::google::protobuf::Message(arena) {
  GetPointCloudMapRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.return_edited_map_ = from._impl_.return_edited_map_;

  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPointCloudMapRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetPointCloudMapRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void GetPointCloudMapRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.return_edited_map_ = {};
}
GetPointCloudMapRequest::~GetPointCloudMapRequest() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPointCloudMapRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPointCloudMapRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetPointCloudMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPointCloudMapRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.return_edited_map_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPointCloudMapRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> GetPointCloudMapRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetPointCloudMapRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetPointCloudMapRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool return_edited_map = 2 [json_name = "returnEditedMap"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetPointCloudMapRequest, _impl_.return_edited_map_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(GetPointCloudMapRequest, _impl_.return_edited_map_)}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetPointCloudMapRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(GetPointCloudMapRequest, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bool return_edited_map = 2 [json_name = "returnEditedMap"];
    {PROTOBUF_FIELD_OFFSET(GetPointCloudMapRequest, _impl_.return_edited_map_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\54\4\0\0\0\0\0\0"
    "viam.service.slam.v1.GetPointCloudMapRequest"
    "name"
  }},
};

::uint8_t* GetPointCloudMapRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPointCloudMapRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "viam.service.slam.v1.GetPointCloudMapRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool return_edited_map = 2 [json_name = "returnEditedMap"];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_return_edited_map(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPointCloudMapRequest)
  return target;
}

::size_t GetPointCloudMapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPointCloudMapRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // optional bool return_edited_map = 2 [json_name = "returnEditedMap"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPointCloudMapRequest::_class_data_ = {
    GetPointCloudMapRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetPointCloudMapRequest::GetClassData() const {
  return &_class_data_;
}

void GetPointCloudMapRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPointCloudMapRequest*>(&to_msg);
  auto& from = static_cast<const GetPointCloudMapRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPointCloudMapRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_return_edited_map(from._internal_return_edited_map());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPointCloudMapRequest::CopyFrom(const GetPointCloudMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPointCloudMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPointCloudMapRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetPointCloudMapRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetPointCloudMapRequest::InternalSwap(GetPointCloudMapRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.return_edited_map_, other->_impl_.return_edited_map_);
}

::google::protobuf::Metadata GetPointCloudMapRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[2]);
}
// ===================================================================

class GetPointCloudMapResponse::_Internal {
 public:
};

GetPointCloudMapResponse::GetPointCloudMapResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPointCloudMapResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPointCloudMapResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : point_cloud_pcd_chunk_(arena, from.point_cloud_pcd_chunk_),
        _cached_size_{0} {}

GetPointCloudMapResponse::GetPointCloudMapResponse(
    ::google::protobuf::Arena* arena,
    const GetPointCloudMapResponse& from)
    : ::google::protobuf::Message(arena) {
  GetPointCloudMapResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPointCloudMapResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPointCloudMapResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : point_cloud_pcd_chunk_(arena),
        _cached_size_{0} {}

inline void GetPointCloudMapResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetPointCloudMapResponse::~GetPointCloudMapResponse() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPointCloudMapResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPointCloudMapResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.point_cloud_pcd_chunk_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetPointCloudMapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPointCloudMapResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.point_cloud_pcd_chunk_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPointCloudMapResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetPointCloudMapResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetPointCloudMapResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes point_cloud_pcd_chunk = 1 [json_name = "pointCloudPcdChunk"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetPointCloudMapResponse, _impl_.point_cloud_pcd_chunk_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes point_cloud_pcd_chunk = 1 [json_name = "pointCloudPcdChunk"];
    {PROTOBUF_FIELD_OFFSET(GetPointCloudMapResponse, _impl_.point_cloud_pcd_chunk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetPointCloudMapResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPointCloudMapResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes point_cloud_pcd_chunk = 1 [json_name = "pointCloudPcdChunk"];
  if (!this->_internal_point_cloud_pcd_chunk().empty()) {
    const std::string& _s = this->_internal_point_cloud_pcd_chunk();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPointCloudMapResponse)
  return target;
}

::size_t GetPointCloudMapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPointCloudMapResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes point_cloud_pcd_chunk = 1 [json_name = "pointCloudPcdChunk"];
  if (!this->_internal_point_cloud_pcd_chunk().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_point_cloud_pcd_chunk());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPointCloudMapResponse::_class_data_ = {
    GetPointCloudMapResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetPointCloudMapResponse::GetClassData() const {
  return &_class_data_;
}

void GetPointCloudMapResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPointCloudMapResponse*>(&to_msg);
  auto& from = static_cast<const GetPointCloudMapResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPointCloudMapResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_point_cloud_pcd_chunk().empty()) {
    _this->_internal_set_point_cloud_pcd_chunk(from._internal_point_cloud_pcd_chunk());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPointCloudMapResponse::CopyFrom(const GetPointCloudMapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPointCloudMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPointCloudMapResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetPointCloudMapResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetPointCloudMapResponse::InternalSwap(GetPointCloudMapResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.point_cloud_pcd_chunk_, &other->_impl_.point_cloud_pcd_chunk_, arena);
}

::google::protobuf::Metadata GetPointCloudMapResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[3]);
}
// ===================================================================

class GetInternalStateRequest::_Internal {
 public:
};

GetInternalStateRequest::GetInternalStateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetInternalStateRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetInternalStateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

GetInternalStateRequest::GetInternalStateRequest(
    ::google::protobuf::Arena* arena,
    const GetInternalStateRequest& from)
    : ::google::protobuf::Message(arena) {
  GetInternalStateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetInternalStateRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetInternalStateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void GetInternalStateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetInternalStateRequest::~GetInternalStateRequest() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetInternalStateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetInternalStateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetInternalStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetInternalStateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetInternalStateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 57, 2> GetInternalStateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetInternalStateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetInternalStateRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(GetInternalStateRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\4\0\0\0\0\0\0"
    "viam.service.slam.v1.GetInternalStateRequest"
    "name"
  }},
};

::uint8_t* GetInternalStateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetInternalStateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "viam.service.slam.v1.GetInternalStateRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetInternalStateRequest)
  return target;
}

::size_t GetInternalStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetInternalStateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetInternalStateRequest::_class_data_ = {
    GetInternalStateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetInternalStateRequest::GetClassData() const {
  return &_class_data_;
}

void GetInternalStateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetInternalStateRequest*>(&to_msg);
  auto& from = static_cast<const GetInternalStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetInternalStateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetInternalStateRequest::CopyFrom(const GetInternalStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetInternalStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetInternalStateRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetInternalStateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetInternalStateRequest::InternalSwap(GetInternalStateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata GetInternalStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[4]);
}
// ===================================================================

class GetInternalStateResponse::_Internal {
 public:
};

GetInternalStateResponse::GetInternalStateResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetInternalStateResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetInternalStateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : internal_state_chunk_(arena, from.internal_state_chunk_),
        _cached_size_{0} {}

GetInternalStateResponse::GetInternalStateResponse(
    ::google::protobuf::Arena* arena,
    const GetInternalStateResponse& from)
    : ::google::protobuf::Message(arena) {
  GetInternalStateResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetInternalStateResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetInternalStateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : internal_state_chunk_(arena),
        _cached_size_{0} {}

inline void GetInternalStateResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetInternalStateResponse::~GetInternalStateResponse() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetInternalStateResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetInternalStateResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.internal_state_chunk_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetInternalStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetInternalStateResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.internal_state_chunk_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetInternalStateResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetInternalStateResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetInternalStateResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes internal_state_chunk = 1 [json_name = "internalStateChunk"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetInternalStateResponse, _impl_.internal_state_chunk_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes internal_state_chunk = 1 [json_name = "internalStateChunk"];
    {PROTOBUF_FIELD_OFFSET(GetInternalStateResponse, _impl_.internal_state_chunk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetInternalStateResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetInternalStateResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes internal_state_chunk = 1 [json_name = "internalStateChunk"];
  if (!this->_internal_internal_state_chunk().empty()) {
    const std::string& _s = this->_internal_internal_state_chunk();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetInternalStateResponse)
  return target;
}

::size_t GetInternalStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetInternalStateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes internal_state_chunk = 1 [json_name = "internalStateChunk"];
  if (!this->_internal_internal_state_chunk().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_internal_state_chunk());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetInternalStateResponse::_class_data_ = {
    GetInternalStateResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetInternalStateResponse::GetClassData() const {
  return &_class_data_;
}

void GetInternalStateResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetInternalStateResponse*>(&to_msg);
  auto& from = static_cast<const GetInternalStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetInternalStateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_internal_state_chunk().empty()) {
    _this->_internal_set_internal_state_chunk(from._internal_internal_state_chunk());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetInternalStateResponse::CopyFrom(const GetInternalStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetInternalStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetInternalStateResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetInternalStateResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetInternalStateResponse::InternalSwap(GetInternalStateResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.internal_state_chunk_, &other->_impl_.internal_state_chunk_, arena);
}

::google::protobuf::Metadata GetInternalStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[5]);
}
// ===================================================================

class GetPropertiesRequest::_Internal {
 public:
};

GetPropertiesRequest::GetPropertiesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPropertiesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetPropertiesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

GetPropertiesRequest::GetPropertiesRequest(
    ::google::protobuf::Arena* arena,
    const GetPropertiesRequest& from)
    : ::google::protobuf::Message(arena) {
  GetPropertiesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPropertiesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetPropertiesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void GetPropertiesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetPropertiesRequest::~GetPropertiesRequest() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPropertiesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPropertiesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetPropertiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPropertiesRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPropertiesRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 54, 2> GetPropertiesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetPropertiesRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetPropertiesRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(GetPropertiesRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\4\0\0\0\0\0\0"
    "viam.service.slam.v1.GetPropertiesRequest"
    "name"
  }},
};

::uint8_t* GetPropertiesRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPropertiesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "viam.service.slam.v1.GetPropertiesRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPropertiesRequest)
  return target;
}

::size_t GetPropertiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPropertiesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPropertiesRequest::_class_data_ = {
    GetPropertiesRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetPropertiesRequest::GetClassData() const {
  return &_class_data_;
}

void GetPropertiesRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPropertiesRequest*>(&to_msg);
  auto& from = static_cast<const GetPropertiesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPropertiesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPropertiesRequest::CopyFrom(const GetPropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPropertiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPropertiesRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetPropertiesRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetPropertiesRequest::InternalSwap(GetPropertiesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata GetPropertiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[6]);
}
// ===================================================================

class GetPropertiesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetPropertiesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, _impl_._has_bits_);
  static void set_has_internal_state_file_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

GetPropertiesResponse::GetPropertiesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPropertiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPropertiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sensor_info_{visibility, arena, from.sensor_info_},
        internal_state_file_type_(arena, from.internal_state_file_type_) {}

GetPropertiesResponse::GetPropertiesResponse(
    ::google::protobuf::Arena* arena,
    const GetPropertiesResponse& from)
    : ::google::protobuf::Message(arena) {
  GetPropertiesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cloud_slam_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, cloud_slam_),
           offsetof(Impl_, mapping_mode_) -
               offsetof(Impl_, cloud_slam_) +
               sizeof(Impl_::mapping_mode_));

  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPropertiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPropertiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sensor_info_{visibility, arena},
        internal_state_file_type_(arena) {}

inline void GetPropertiesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cloud_slam_),
           0,
           offsetof(Impl_, mapping_mode_) -
               offsetof(Impl_, cloud_slam_) +
               sizeof(Impl_::mapping_mode_));
}
GetPropertiesResponse::~GetPropertiesResponse() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPropertiesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetPropertiesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.internal_state_file_type_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetPropertiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPropertiesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sensor_info_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.internal_state_file_type_.ClearNonDefaultToEmpty();
  }
  ::memset(&_impl_.cloud_slam_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mapping_mode_) -
      reinterpret_cast<char*>(&_impl_.cloud_slam_)) + sizeof(_impl_.mapping_mode_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetPropertiesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 75, 2> GetPropertiesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetPropertiesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .viam.service.slam.v1.SensorInfo sensor_info = 4 [json_name = "sensorInfo"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, _impl_.sensor_info_)}},
    // bool cloud_slam = 1 [json_name = "cloudSlam"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetPropertiesResponse, _impl_.cloud_slam_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, _impl_.cloud_slam_)}},
    // .viam.service.slam.v1.MappingMode mapping_mode = 2 [json_name = "mappingMode"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetPropertiesResponse, _impl_.mapping_mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, _impl_.mapping_mode_)}},
    // optional string internal_state_file_type = 3 [json_name = "internalStateFileType"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, _impl_.internal_state_file_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool cloud_slam = 1 [json_name = "cloudSlam"];
    {PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, _impl_.cloud_slam_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .viam.service.slam.v1.MappingMode mapping_mode = 2 [json_name = "mappingMode"];
    {PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, _impl_.mapping_mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional string internal_state_file_type = 3 [json_name = "internalStateFileType"];
    {PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, _impl_.internal_state_file_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .viam.service.slam.v1.SensorInfo sensor_info = 4 [json_name = "sensorInfo"];
    {PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, _impl_.sensor_info_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::viam::service::slam::v1::SensorInfo>()},
  }}, {{
    "\52\0\0\30\0\0\0\0"
    "viam.service.slam.v1.GetPropertiesResponse"
    "internal_state_file_type"
  }},
};

::uint8_t* GetPropertiesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPropertiesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool cloud_slam = 1 [json_name = "cloudSlam"];
  if (this->_internal_cloud_slam() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_cloud_slam(), target);
  }

  // .viam.service.slam.v1.MappingMode mapping_mode = 2 [json_name = "mappingMode"];
  if (this->_internal_mapping_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_mapping_mode(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string internal_state_file_type = 3 [json_name = "internalStateFileType"];
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_internal_state_file_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "viam.service.slam.v1.GetPropertiesResponse.internal_state_file_type");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated .viam.service.slam.v1.SensorInfo sensor_info = 4 [json_name = "sensorInfo"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sensor_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_sensor_info().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPropertiesResponse)
  return target;
}

::size_t GetPropertiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPropertiesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.service.slam.v1.SensorInfo sensor_info = 4 [json_name = "sensorInfo"];
  total_size += 1UL * this->_internal_sensor_info_size();
  for (const auto& msg : this->_internal_sensor_info()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional string internal_state_file_type = 3 [json_name = "internalStateFileType"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_internal_state_file_type());
  }

  // bool cloud_slam = 1 [json_name = "cloudSlam"];
  if (this->_internal_cloud_slam() != 0) {
    total_size += 2;
  }

  // .viam.service.slam.v1.MappingMode mapping_mode = 2 [json_name = "mappingMode"];
  if (this->_internal_mapping_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mapping_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetPropertiesResponse::_class_data_ = {
    GetPropertiesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetPropertiesResponse::GetClassData() const {
  return &_class_data_;
}

void GetPropertiesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetPropertiesResponse*>(&to_msg);
  auto& from = static_cast<const GetPropertiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPropertiesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sensor_info()->MergeFrom(
      from._internal_sensor_info());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_internal_state_file_type(from._internal_internal_state_file_type());
  }
  if (from._internal_cloud_slam() != 0) {
    _this->_internal_set_cloud_slam(from._internal_cloud_slam());
  }
  if (from._internal_mapping_mode() != 0) {
    _this->_internal_set_mapping_mode(from._internal_mapping_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPropertiesResponse::CopyFrom(const GetPropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPropertiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetPropertiesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetPropertiesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetPropertiesResponse::InternalSwap(GetPropertiesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sensor_info_.InternalSwap(&other->_impl_.sensor_info_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.internal_state_file_type_, &other->_impl_.internal_state_file_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, _impl_.mapping_mode_)
      + sizeof(GetPropertiesResponse::_impl_.mapping_mode_)
      - PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, _impl_.cloud_slam_)>(
          reinterpret_cast<char*>(&_impl_.cloud_slam_),
          reinterpret_cast<char*>(&other->_impl_.cloud_slam_));
}

::google::protobuf::Metadata GetPropertiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[7]);
}
// ===================================================================

class SensorInfo::_Internal {
 public:
};

SensorInfo::SensorInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.SensorInfo)
}
inline PROTOBUF_NDEBUG_INLINE SensorInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

SensorInfo::SensorInfo(
    ::google::protobuf::Arena* arena,
    const SensorInfo& from)
    : ::google::protobuf::Message(arena) {
  SensorInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.SensorInfo)
}
inline PROTOBUF_NDEBUG_INLINE SensorInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void SensorInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
SensorInfo::~SensorInfo() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.SensorInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.SensorInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 44, 2> SensorInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .viam.service.slam.v1.SensorType type = 2 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorInfo, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SensorInfo, _impl_.type_)}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorInfo, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(SensorInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .viam.service.slam.v1.SensorType type = 2 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(SensorInfo, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\37\4\0\0\0\0\0\0"
    "viam.service.slam.v1.SensorInfo"
    "name"
  }},
};

::uint8_t* SensorInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.SensorInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "viam.service.slam.v1.SensorInfo.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .viam.service.slam.v1.SensorType type = 2 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.SensorInfo)
  return target;
}

::size_t SensorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.SensorInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .viam.service.slam.v1.SensorType type = 2 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorInfo::_class_data_ = {
    SensorInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorInfo::GetClassData() const {
  return &_class_data_;
}

void SensorInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorInfo*>(&to_msg);
  auto& from = static_cast<const SensorInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.SensorInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorInfo::CopyFrom(const SensorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.SensorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorInfo::InternalSwap(SensorInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata SensorInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[8]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace slam
}  // namespace service
}  // namespace viam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
