// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/sensors/v1/sensors.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_service_2fsensors_2fv1_2fsensors_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_service_2fsensors_2fv1_2fsensors_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "common/v1/common.pb.h"
#include "google/api/annotations.pb.h"
#include "google/protobuf/struct.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_service_2fsensors_2fv1_2fsensors_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_service_2fsensors_2fv1_2fsensors_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_service_2fsensors_2fv1_2fsensors_2eproto;
namespace viam {
namespace service {
namespace sensors {
namespace v1 {
class GetReadingsRequest;
struct GetReadingsRequestDefaultTypeInternal;
extern GetReadingsRequestDefaultTypeInternal _GetReadingsRequest_default_instance_;
class GetReadingsResponse;
struct GetReadingsResponseDefaultTypeInternal;
extern GetReadingsResponseDefaultTypeInternal _GetReadingsResponse_default_instance_;
class GetSensorsRequest;
struct GetSensorsRequestDefaultTypeInternal;
extern GetSensorsRequestDefaultTypeInternal _GetSensorsRequest_default_instance_;
class GetSensorsResponse;
struct GetSensorsResponseDefaultTypeInternal;
extern GetSensorsResponseDefaultTypeInternal _GetSensorsResponse_default_instance_;
class Readings;
struct ReadingsDefaultTypeInternal;
extern ReadingsDefaultTypeInternal _Readings_default_instance_;
class Readings_ReadingsEntry_DoNotUse;
struct Readings_ReadingsEntry_DoNotUseDefaultTypeInternal;
extern Readings_ReadingsEntry_DoNotUseDefaultTypeInternal _Readings_ReadingsEntry_DoNotUse_default_instance_;
}  // namespace v1
}  // namespace sensors
}  // namespace service
}  // namespace viam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace viam {
namespace service {
namespace sensors {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Readings_ReadingsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Readings_ReadingsEntry_DoNotUse, std::string, ::google::protobuf::Value,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Readings_ReadingsEntry_DoNotUse, std::string, ::google::protobuf::Value,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  Readings_ReadingsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Readings_ReadingsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Readings_ReadingsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Readings_ReadingsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Readings_ReadingsEntry_DoNotUse*>(
        &_Readings_ReadingsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "viam.service.sensors.v1.Readings.ReadingsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_service_2fsensors_2fv1_2fsensors_2eproto;
};
// -------------------------------------------------------------------

class GetSensorsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.sensors.v1.GetSensorsResponse) */ {
 public:
  inline GetSensorsResponse() : GetSensorsResponse(nullptr) {}
  ~GetSensorsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSensorsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetSensorsResponse(const GetSensorsResponse& from)
      : GetSensorsResponse(nullptr, from) {}
  GetSensorsResponse(GetSensorsResponse&& from) noexcept
    : GetSensorsResponse() {
    *this = ::std::move(from);
  }

  inline GetSensorsResponse& operator=(const GetSensorsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSensorsResponse& operator=(GetSensorsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSensorsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSensorsResponse* internal_default_instance() {
    return reinterpret_cast<const GetSensorsResponse*>(
               &_GetSensorsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetSensorsResponse& a, GetSensorsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSensorsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSensorsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSensorsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSensorsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSensorsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetSensorsResponse& from) {
    GetSensorsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetSensorsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.sensors.v1.GetSensorsResponse";
  }
  protected:
  explicit GetSensorsResponse(::google::protobuf::Arena* arena);
  GetSensorsResponse(::google::protobuf::Arena* arena, const GetSensorsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSensorNamesFieldNumber = 1,
  };
  // repeated .viam.common.v1.ResourceName sensor_names = 1 [json_name = "sensorNames", deprecated = true];
  [[deprecated]]  int sensor_names_size() const;
  private:
  int _internal_sensor_names_size() const;

  public:
  [[deprecated]]  void clear_sensor_names() ;
  [[deprecated]] ::viam::common::v1::ResourceName* mutable_sensor_names(int index);
  [[deprecated]] ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName >*
      mutable_sensor_names();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>& _internal_sensor_names() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>* _internal_mutable_sensor_names();
  public:
  [[deprecated]] const ::viam::common::v1::ResourceName& sensor_names(int index) const;
  [[deprecated]] ::viam::common::v1::ResourceName* add_sensor_names();
  [[deprecated]] const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName >&
      sensor_names() const;
  // @@protoc_insertion_point(class_scope:viam.service.sensors.v1.GetSensorsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName > sensor_names_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fsensors_2fv1_2fsensors_2eproto;
};// -------------------------------------------------------------------

class GetSensorsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.sensors.v1.GetSensorsRequest) */ {
 public:
  inline GetSensorsRequest() : GetSensorsRequest(nullptr) {}
  ~GetSensorsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSensorsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetSensorsRequest(const GetSensorsRequest& from)
      : GetSensorsRequest(nullptr, from) {}
  GetSensorsRequest(GetSensorsRequest&& from) noexcept
    : GetSensorsRequest() {
    *this = ::std::move(from);
  }

  inline GetSensorsRequest& operator=(const GetSensorsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSensorsRequest& operator=(GetSensorsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSensorsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSensorsRequest* internal_default_instance() {
    return reinterpret_cast<const GetSensorsRequest*>(
               &_GetSensorsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetSensorsRequest& a, GetSensorsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSensorsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSensorsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSensorsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSensorsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSensorsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetSensorsRequest& from) {
    GetSensorsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetSensorsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.sensors.v1.GetSensorsRequest";
  }
  protected:
  explicit GetSensorsRequest(::google::protobuf::Arena* arena);
  GetSensorsRequest(::google::protobuf::Arena* arena, const GetSensorsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name", deprecated = true];
  [[deprecated]]  void clear_name() ;
  [[deprecated]] const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_name(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_name();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_name();
  [[deprecated]] void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra", deprecated = true];
  [[deprecated]]  bool has_extra() const;
  [[deprecated]]  void clear_extra() ;
  [[deprecated]] const ::google::protobuf::Struct& extra() const;
  [[deprecated]] PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  [[deprecated]] ::google::protobuf::Struct* mutable_extra();
  [[deprecated]] void set_allocated_extra(::google::protobuf::Struct* value);
  [[deprecated]] void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  [[deprecated]] ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.sensors.v1.GetSensorsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      54, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fsensors_2fv1_2fsensors_2eproto;
};// -------------------------------------------------------------------

class GetReadingsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.sensors.v1.GetReadingsRequest) */ {
 public:
  inline GetReadingsRequest() : GetReadingsRequest(nullptr) {}
  ~GetReadingsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetReadingsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetReadingsRequest(const GetReadingsRequest& from)
      : GetReadingsRequest(nullptr, from) {}
  GetReadingsRequest(GetReadingsRequest&& from) noexcept
    : GetReadingsRequest() {
    *this = ::std::move(from);
  }

  inline GetReadingsRequest& operator=(const GetReadingsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetReadingsRequest& operator=(GetReadingsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetReadingsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetReadingsRequest* internal_default_instance() {
    return reinterpret_cast<const GetReadingsRequest*>(
               &_GetReadingsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetReadingsRequest& a, GetReadingsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetReadingsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetReadingsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetReadingsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetReadingsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetReadingsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetReadingsRequest& from) {
    GetReadingsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetReadingsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.sensors.v1.GetReadingsRequest";
  }
  protected:
  explicit GetReadingsRequest(::google::protobuf::Arena* arena);
  GetReadingsRequest(::google::protobuf::Arena* arena, const GetReadingsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSensorNamesFieldNumber = 2,
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // repeated .viam.common.v1.ResourceName sensor_names = 2 [json_name = "sensorNames", deprecated = true];
  [[deprecated]]  int sensor_names_size() const;
  private:
  int _internal_sensor_names_size() const;

  public:
  [[deprecated]]  void clear_sensor_names() ;
  [[deprecated]] ::viam::common::v1::ResourceName* mutable_sensor_names(int index);
  [[deprecated]] ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName >*
      mutable_sensor_names();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>& _internal_sensor_names() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>* _internal_mutable_sensor_names();
  public:
  [[deprecated]] const ::viam::common::v1::ResourceName& sensor_names(int index) const;
  [[deprecated]] ::viam::common::v1::ResourceName* add_sensor_names();
  [[deprecated]] const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName >&
      sensor_names() const;
  // string name = 1 [json_name = "name", deprecated = true];
  [[deprecated]]  void clear_name() ;
  [[deprecated]] const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_name(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_name();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_name();
  [[deprecated]] void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra", deprecated = true];
  [[deprecated]]  bool has_extra() const;
  [[deprecated]]  void clear_extra() ;
  [[deprecated]] const ::google::protobuf::Struct& extra() const;
  [[deprecated]] PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  [[deprecated]] ::google::protobuf::Struct* mutable_extra();
  [[deprecated]] void set_allocated_extra(::google::protobuf::Struct* value);
  [[deprecated]] void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  [[deprecated]] ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.sensors.v1.GetReadingsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      55, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName > sensor_names_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fsensors_2fv1_2fsensors_2eproto;
};// -------------------------------------------------------------------

class Readings final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.sensors.v1.Readings) */ {
 public:
  inline Readings() : Readings(nullptr) {}
  ~Readings() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Readings(::google::protobuf::internal::ConstantInitialized);

  inline Readings(const Readings& from)
      : Readings(nullptr, from) {}
  Readings(Readings&& from) noexcept
    : Readings() {
    *this = ::std::move(from);
  }

  inline Readings& operator=(const Readings& from) {
    CopyFrom(from);
    return *this;
  }
  inline Readings& operator=(Readings&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Readings& default_instance() {
    return *internal_default_instance();
  }
  static inline const Readings* internal_default_instance() {
    return reinterpret_cast<const Readings*>(
               &_Readings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Readings& a, Readings& b) {
    a.Swap(&b);
  }
  inline void Swap(Readings* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Readings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Readings* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Readings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Readings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Readings& from) {
    Readings::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Readings* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.sensors.v1.Readings";
  }
  protected:
  explicit Readings(::google::protobuf::Arena* arena);
  Readings(::google::protobuf::Arena* arena, const Readings& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kReadingsFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // map<string, .google.protobuf.Value> readings = 2 [json_name = "readings", deprecated = true];
  [[deprecated]]  int readings_size() const;
  private:
  int _internal_readings_size() const;

  public:
  [[deprecated]]  void clear_readings() ;
  [[deprecated]] const ::google::protobuf::Map<std::string, ::google::protobuf::Value>& readings() const;
  [[deprecated]] ::google::protobuf::Map<std::string, ::google::protobuf::Value>* mutable_readings();

  private:
  const ::google::protobuf::Map<std::string, ::google::protobuf::Value>& _internal_readings() const;
  ::google::protobuf::Map<std::string, ::google::protobuf::Value>* _internal_mutable_readings();

  public:
  // .viam.common.v1.ResourceName name = 1 [json_name = "name", deprecated = true];
  [[deprecated]]  bool has_name() const;
  [[deprecated]]  void clear_name() ;
  [[deprecated]] const ::viam::common::v1::ResourceName& name() const;
  [[deprecated]] PROTOBUF_NODISCARD ::viam::common::v1::ResourceName* release_name();
  [[deprecated]] ::viam::common::v1::ResourceName* mutable_name();
  [[deprecated]] void set_allocated_name(::viam::common::v1::ResourceName* value);
  [[deprecated]] void unsafe_arena_set_allocated_name(::viam::common::v1::ResourceName* value);
  [[deprecated]] ::viam::common::v1::ResourceName* unsafe_arena_release_name();

  private:
  const ::viam::common::v1::ResourceName& _internal_name() const;
  ::viam::common::v1::ResourceName* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.sensors.v1.Readings)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 3,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<Readings_ReadingsEntry_DoNotUse, std::string, ::google::protobuf::Value,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        readings_;
    ::viam::common::v1::ResourceName* name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fsensors_2fv1_2fsensors_2eproto;
};// -------------------------------------------------------------------

class GetReadingsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.sensors.v1.GetReadingsResponse) */ {
 public:
  inline GetReadingsResponse() : GetReadingsResponse(nullptr) {}
  ~GetReadingsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetReadingsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetReadingsResponse(const GetReadingsResponse& from)
      : GetReadingsResponse(nullptr, from) {}
  GetReadingsResponse(GetReadingsResponse&& from) noexcept
    : GetReadingsResponse() {
    *this = ::std::move(from);
  }

  inline GetReadingsResponse& operator=(const GetReadingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetReadingsResponse& operator=(GetReadingsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetReadingsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetReadingsResponse* internal_default_instance() {
    return reinterpret_cast<const GetReadingsResponse*>(
               &_GetReadingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetReadingsResponse& a, GetReadingsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetReadingsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetReadingsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetReadingsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetReadingsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetReadingsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetReadingsResponse& from) {
    GetReadingsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetReadingsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.sensors.v1.GetReadingsResponse";
  }
  protected:
  explicit GetReadingsResponse(::google::protobuf::Arena* arena);
  GetReadingsResponse(::google::protobuf::Arena* arena, const GetReadingsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReadingsFieldNumber = 1,
  };
  // repeated .viam.service.sensors.v1.Readings readings = 1 [json_name = "readings", deprecated = true];
  [[deprecated]]  int readings_size() const;
  private:
  int _internal_readings_size() const;

  public:
  [[deprecated]]  void clear_readings() ;
  [[deprecated]] ::viam::service::sensors::v1::Readings* mutable_readings(int index);
  [[deprecated]] ::google::protobuf::RepeatedPtrField< ::viam::service::sensors::v1::Readings >*
      mutable_readings();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::service::sensors::v1::Readings>& _internal_readings() const;
  ::google::protobuf::RepeatedPtrField<::viam::service::sensors::v1::Readings>* _internal_mutable_readings();
  public:
  [[deprecated]] const ::viam::service::sensors::v1::Readings& readings(int index) const;
  [[deprecated]] ::viam::service::sensors::v1::Readings* add_readings();
  [[deprecated]] const ::google::protobuf::RepeatedPtrField< ::viam::service::sensors::v1::Readings >&
      readings() const;
  // @@protoc_insertion_point(class_scope:viam.service.sensors.v1.GetReadingsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::service::sensors::v1::Readings > readings_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fsensors_2fv1_2fsensors_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetSensorsRequest

// string name = 1 [json_name = "name", deprecated = true];
inline void GetSensorsRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetSensorsRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.sensors.v1.GetSensorsRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSensorsRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.sensors.v1.GetSensorsRequest.name)
}
inline std::string* GetSensorsRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.sensors.v1.GetSensorsRequest.name)
  return _s;
}
inline const std::string& GetSensorsRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetSensorsRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetSensorsRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetSensorsRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.sensors.v1.GetSensorsRequest.name)
  return _impl_.name_.Release();
}
inline void GetSensorsRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.sensors.v1.GetSensorsRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra", deprecated = true];
inline bool GetSensorsRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetSensorsRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetSensorsRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.sensors.v1.GetSensorsRequest.extra)
  return _internal_extra();
}
inline void GetSensorsRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.sensors.v1.GetSensorsRequest.extra)
}
inline ::google::protobuf::Struct* GetSensorsRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetSensorsRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.sensors.v1.GetSensorsRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetSensorsRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetSensorsRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.sensors.v1.GetSensorsRequest.extra)
  return _msg;
}
inline void GetSensorsRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.sensors.v1.GetSensorsRequest.extra)
}

// -------------------------------------------------------------------

// GetSensorsResponse

// repeated .viam.common.v1.ResourceName sensor_names = 1 [json_name = "sensorNames", deprecated = true];
inline int GetSensorsResponse::_internal_sensor_names_size() const {
  return _internal_sensor_names().size();
}
inline int GetSensorsResponse::sensor_names_size() const {
  return _internal_sensor_names_size();
}
inline ::viam::common::v1::ResourceName* GetSensorsResponse::mutable_sensor_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.sensors.v1.GetSensorsResponse.sensor_names)
  return _internal_mutable_sensor_names()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>* GetSensorsResponse::mutable_sensor_names()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.sensors.v1.GetSensorsResponse.sensor_names)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_sensor_names();
}
inline const ::viam::common::v1::ResourceName& GetSensorsResponse::sensor_names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.sensors.v1.GetSensorsResponse.sensor_names)
  return _internal_sensor_names().Get(index);
}
inline ::viam::common::v1::ResourceName* GetSensorsResponse::add_sensor_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::ResourceName* _add = _internal_mutable_sensor_names()->Add();
  // @@protoc_insertion_point(field_add:viam.service.sensors.v1.GetSensorsResponse.sensor_names)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>& GetSensorsResponse::sensor_names() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.sensors.v1.GetSensorsResponse.sensor_names)
  return _internal_sensor_names();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>&
GetSensorsResponse::_internal_sensor_names() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sensor_names_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>*
GetSensorsResponse::_internal_mutable_sensor_names() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.sensor_names_;
}

// -------------------------------------------------------------------

// GetReadingsRequest

// string name = 1 [json_name = "name", deprecated = true];
inline void GetReadingsRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetReadingsRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.sensors.v1.GetReadingsRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetReadingsRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.sensors.v1.GetReadingsRequest.name)
}
inline std::string* GetReadingsRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.sensors.v1.GetReadingsRequest.name)
  return _s;
}
inline const std::string& GetReadingsRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetReadingsRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetReadingsRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetReadingsRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.sensors.v1.GetReadingsRequest.name)
  return _impl_.name_.Release();
}
inline void GetReadingsRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.sensors.v1.GetReadingsRequest.name)
}

// repeated .viam.common.v1.ResourceName sensor_names = 2 [json_name = "sensorNames", deprecated = true];
inline int GetReadingsRequest::_internal_sensor_names_size() const {
  return _internal_sensor_names().size();
}
inline int GetReadingsRequest::sensor_names_size() const {
  return _internal_sensor_names_size();
}
inline ::viam::common::v1::ResourceName* GetReadingsRequest::mutable_sensor_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.sensors.v1.GetReadingsRequest.sensor_names)
  return _internal_mutable_sensor_names()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>* GetReadingsRequest::mutable_sensor_names()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.sensors.v1.GetReadingsRequest.sensor_names)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_sensor_names();
}
inline const ::viam::common::v1::ResourceName& GetReadingsRequest::sensor_names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.sensors.v1.GetReadingsRequest.sensor_names)
  return _internal_sensor_names().Get(index);
}
inline ::viam::common::v1::ResourceName* GetReadingsRequest::add_sensor_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::ResourceName* _add = _internal_mutable_sensor_names()->Add();
  // @@protoc_insertion_point(field_add:viam.service.sensors.v1.GetReadingsRequest.sensor_names)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>& GetReadingsRequest::sensor_names() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.sensors.v1.GetReadingsRequest.sensor_names)
  return _internal_sensor_names();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>&
GetReadingsRequest::_internal_sensor_names() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sensor_names_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>*
GetReadingsRequest::_internal_mutable_sensor_names() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.sensor_names_;
}

// .google.protobuf.Struct extra = 99 [json_name = "extra", deprecated = true];
inline bool GetReadingsRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetReadingsRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetReadingsRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.sensors.v1.GetReadingsRequest.extra)
  return _internal_extra();
}
inline void GetReadingsRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.sensors.v1.GetReadingsRequest.extra)
}
inline ::google::protobuf::Struct* GetReadingsRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetReadingsRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.sensors.v1.GetReadingsRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetReadingsRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetReadingsRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.sensors.v1.GetReadingsRequest.extra)
  return _msg;
}
inline void GetReadingsRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.sensors.v1.GetReadingsRequest.extra)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Readings

// .viam.common.v1.ResourceName name = 1 [json_name = "name", deprecated = true];
inline bool Readings::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.name_ != nullptr);
  return value;
}
inline const ::viam::common::v1::ResourceName& Readings::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::ResourceName* p = _impl_.name_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::ResourceName&>(::viam::common::v1::_ResourceName_default_instance_);
}
inline const ::viam::common::v1::ResourceName& Readings::name() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.sensors.v1.Readings.name)
  return _internal_name();
}
inline void Readings::unsafe_arena_set_allocated_name(::viam::common::v1::ResourceName* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.name_);
  }
  _impl_.name_ = reinterpret_cast<::viam::common::v1::ResourceName*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.sensors.v1.Readings.name)
}
inline ::viam::common::v1::ResourceName* Readings::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::ResourceName* released = _impl_.name_;
  _impl_.name_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::ResourceName* Readings::unsafe_arena_release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.sensors.v1.Readings.name)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::ResourceName* temp = _impl_.name_;
  _impl_.name_ = nullptr;
  return temp;
}
inline ::viam::common::v1::ResourceName* Readings::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.name_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::ResourceName>(GetArena());
    _impl_.name_ = reinterpret_cast<::viam::common::v1::ResourceName*>(p);
  }
  return _impl_.name_;
}
inline ::viam::common::v1::ResourceName* Readings::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::ResourceName* _msg = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.sensors.v1.Readings.name)
  return _msg;
}
inline void Readings::set_allocated_name(::viam::common::v1::ResourceName* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.name_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.name_ = reinterpret_cast<::viam::common::v1::ResourceName*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.sensors.v1.Readings.name)
}

// map<string, .google.protobuf.Value> readings = 2 [json_name = "readings", deprecated = true];
inline int Readings::_internal_readings_size() const {
  return _internal_readings().size();
}
inline int Readings::readings_size() const {
  return _internal_readings_size();
}
inline const ::google::protobuf::Map<std::string, ::google::protobuf::Value>& Readings::_internal_readings() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.readings_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::google::protobuf::Value>& Readings::readings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:viam.service.sensors.v1.Readings.readings)
  return _internal_readings();
}
inline ::google::protobuf::Map<std::string, ::google::protobuf::Value>* Readings::_internal_mutable_readings() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.readings_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::google::protobuf::Value>* Readings::mutable_readings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:viam.service.sensors.v1.Readings.readings)
  return _internal_mutable_readings();
}

// -------------------------------------------------------------------

// GetReadingsResponse

// repeated .viam.service.sensors.v1.Readings readings = 1 [json_name = "readings", deprecated = true];
inline int GetReadingsResponse::_internal_readings_size() const {
  return _internal_readings().size();
}
inline int GetReadingsResponse::readings_size() const {
  return _internal_readings_size();
}
inline void GetReadingsResponse::clear_readings() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.readings_.Clear();
}
inline ::viam::service::sensors::v1::Readings* GetReadingsResponse::mutable_readings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.sensors.v1.GetReadingsResponse.readings)
  return _internal_mutable_readings()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::sensors::v1::Readings>* GetReadingsResponse::mutable_readings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.sensors.v1.GetReadingsResponse.readings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_readings();
}
inline const ::viam::service::sensors::v1::Readings& GetReadingsResponse::readings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.sensors.v1.GetReadingsResponse.readings)
  return _internal_readings().Get(index);
}
inline ::viam::service::sensors::v1::Readings* GetReadingsResponse::add_readings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::service::sensors::v1::Readings* _add = _internal_mutable_readings()->Add();
  // @@protoc_insertion_point(field_add:viam.service.sensors.v1.GetReadingsResponse.readings)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::sensors::v1::Readings>& GetReadingsResponse::readings() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.sensors.v1.GetReadingsResponse.readings)
  return _internal_readings();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::sensors::v1::Readings>&
GetReadingsResponse::_internal_readings() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.readings_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::sensors::v1::Readings>*
GetReadingsResponse::_internal_mutable_readings() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.readings_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace sensors
}  // namespace service
}  // namespace viam


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_service_2fsensors_2fv1_2fsensors_2eproto_2epb_2eh
