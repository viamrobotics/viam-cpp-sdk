// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/worldstatestore/v1/world_state_store.proto

#include "service/worldstatestore/v1/world_state_store.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace service {
namespace worldstatestore {
namespace v1 {
PROTOBUF_CONSTEXPR ListUUIDsRequest::ListUUIDsRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct ListUUIDsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListUUIDsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListUUIDsRequestDefaultTypeInternal() {}
  union {
    ListUUIDsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListUUIDsRequestDefaultTypeInternal _ListUUIDsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListUUIDsResponse::ListUUIDsResponse(
    ::_pbi::ConstantInitialized)
  : uuids_(){}
struct ListUUIDsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListUUIDsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListUUIDsResponseDefaultTypeInternal() {}
  union {
    ListUUIDsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListUUIDsResponseDefaultTypeInternal _ListUUIDsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetTransformRequest::GetTransformRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , uuid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetTransformRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTransformRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTransformRequestDefaultTypeInternal() {}
  union {
    GetTransformRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTransformRequestDefaultTypeInternal _GetTransformRequest_default_instance_;
PROTOBUF_CONSTEXPR GetTransformResponse::GetTransformResponse(
    ::_pbi::ConstantInitialized)
  : transform_(nullptr){}
struct GetTransformResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTransformResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTransformResponseDefaultTypeInternal() {}
  union {
    GetTransformResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTransformResponseDefaultTypeInternal _GetTransformResponse_default_instance_;
PROTOBUF_CONSTEXPR StreamTransformChangesRequest::StreamTransformChangesRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct StreamTransformChangesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamTransformChangesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamTransformChangesRequestDefaultTypeInternal() {}
  union {
    StreamTransformChangesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamTransformChangesRequestDefaultTypeInternal _StreamTransformChangesRequest_default_instance_;
PROTOBUF_CONSTEXPR StreamTransformChangesResponse::StreamTransformChangesResponse(
    ::_pbi::ConstantInitialized)
  : transform_(nullptr)
  , updated_fields_(nullptr)
  , change_type_(0)
{}
struct StreamTransformChangesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamTransformChangesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamTransformChangesResponseDefaultTypeInternal() {}
  union {
    StreamTransformChangesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamTransformChangesResponseDefaultTypeInternal _StreamTransformChangesResponse_default_instance_;
}  // namespace v1
}  // namespace worldstatestore
}  // namespace service
}  // namespace viam
static ::_pb::Metadata file_level_metadata_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto = nullptr;

const uint32_t TableStruct_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::ListUUIDsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::ListUUIDsRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::ListUUIDsRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::ListUUIDsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::ListUUIDsResponse, uuids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::GetTransformRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::GetTransformRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::GetTransformRequest, uuid_),
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::GetTransformRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::GetTransformResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::GetTransformResponse, transform_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::StreamTransformChangesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::StreamTransformChangesRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::StreamTransformChangesRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::StreamTransformChangesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::StreamTransformChangesResponse, change_type_),
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::StreamTransformChangesResponse, transform_),
  PROTOBUF_FIELD_OFFSET(::viam::service::worldstatestore::v1::StreamTransformChangesResponse, updated_fields_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::service::worldstatestore::v1::ListUUIDsRequest)},
  { 8, -1, -1, sizeof(::viam::service::worldstatestore::v1::ListUUIDsResponse)},
  { 15, -1, -1, sizeof(::viam::service::worldstatestore::v1::GetTransformRequest)},
  { 24, -1, -1, sizeof(::viam::service::worldstatestore::v1::GetTransformResponse)},
  { 31, -1, -1, sizeof(::viam::service::worldstatestore::v1::StreamTransformChangesRequest)},
  { 39, -1, -1, sizeof(::viam::service::worldstatestore::v1::StreamTransformChangesResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::service::worldstatestore::v1::_ListUUIDsRequest_default_instance_._instance,
  &::viam::service::worldstatestore::v1::_ListUUIDsResponse_default_instance_._instance,
  &::viam::service::worldstatestore::v1::_GetTransformRequest_default_instance_._instance,
  &::viam::service::worldstatestore::v1::_GetTransformResponse_default_instance_._instance,
  &::viam::service::worldstatestore::v1::_StreamTransformChangesRequest_default_instance_._instance,
  &::viam::service::worldstatestore::v1::_StreamTransformChangesResponse_default_instance_._instance,
};

const char descriptor_table_protodef_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n2service/worldstatestore/v1/world_state"
  "_store.proto\022\037viam.service.worldstatesto"
  "re.v1\032\026common/v1/common.proto\032\034google/ap"
  "i/annotations.proto\032 google/protobuf/fie"
  "ld_mask.proto\032\034google/protobuf/struct.pr"
  "oto\"U\n\020ListUUIDsRequest\022\022\n\004name\030\001 \001(\tR\004n"
  "ame\022-\n\005extra\030c \001(\0132\027.google.protobuf.Str"
  "uctR\005extra\")\n\021ListUUIDsResponse\022\024\n\005uuids"
  "\030\001 \003(\014R\005uuids\"l\n\023GetTransformRequest\022\022\n\004"
  "name\030\001 \001(\tR\004name\022\022\n\004uuid\030\002 \001(\014R\004uuid\022-\n\005"
  "extra\030c \001(\0132\027.google.protobuf.StructR\005ex"
  "tra\"O\n\024GetTransformResponse\0227\n\ttransform"
  "\030\002 \001(\0132\031.viam.common.v1.TransformR\ttrans"
  "form\"b\n\035StreamTransformChangesRequest\022\022\n"
  "\004name\030\001 \001(\tR\004name\022-\n\005extra\030c \001(\0132\027.googl"
  "e.protobuf.StructR\005extra\"\363\001\n\036StreamTrans"
  "formChangesResponse\022U\n\013change_type\030\001 \001(\016"
  "24.viam.service.worldstatestore.v1.Trans"
  "formChangeTypeR\nchangeType\0227\n\ttransform\030"
  "\002 \001(\0132\031.viam.common.v1.TransformR\ttransf"
  "orm\022A\n\016updated_fields\030\003 \001(\0132\032.google.pro"
  "tobuf.FieldMaskR\rupdatedFields*\243\001\n\023Trans"
  "formChangeType\022%\n!TRANSFORM_CHANGE_TYPE_"
  "UNSPECIFIED\020\000\022\037\n\033TRANSFORM_CHANGE_TYPE_A"
  "DDED\020\001\022!\n\035TRANSFORM_CHANGE_TYPE_REMOVED\020"
  "\002\022!\n\035TRANSFORM_CHANGE_TYPE_UPDATED\020\0032\214\005\n"
  "\026WorldStateStoreService\022t\n\tListUUIDs\0221.v"
  "iam.service.worldstatestore.v1.ListUUIDs"
  "Request\0322.viam.service.worldstatestore.v"
  "1.ListUUIDsResponse\"\000\022}\n\014GetTransform\0224."
  "viam.service.worldstatestore.v1.GetTrans"
  "formRequest\0325.viam.service.worldstatesto"
  "re.v1.GetTransformResponse\"\000\022\351\001\n\026StreamT"
  "ransformChanges\022>.viam.service.worldstat"
  "estore.v1.StreamTransformChangesRequest\032"
  "\?.viam.service.worldstatestore.v1.Stream"
  "TransformChangesResponse\"L\202\323\344\223\002F\022D/viam/"
  "api/v1/service/worldstatestore/{name}/st"
  "ream_transform_changes0\001\022\220\001\n\tDoCommand\022 "
  ".viam.common.v1.DoCommandRequest\032!.viam."
  "common.v1.DoCommandResponse\">\202\323\344\223\0028\"6/vi"
  "am/api/v1/service/worldstatestore/{name}"
  "/do_commandBQ\n#com.viam.service.worldsta"
  "testore.v1Z*go.viam.com/api/service/worl"
  "dstatestore/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_deps[4] = {
  &::descriptor_table_common_2fv1_2fcommon_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto = {
    false, false, 1782, descriptor_table_protodef_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto,
    "service/worldstatestore/v1/world_state_store.proto",
    &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_once, descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_deps, 4, 6,
    schemas, file_default_instances, TableStruct_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto::offsets,
    file_level_metadata_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto, file_level_enum_descriptors_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto,
    file_level_service_descriptors_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_getter() {
  return &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto(&descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto);
namespace viam {
namespace service {
namespace worldstatestore {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TransformChangeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto);
  return file_level_enum_descriptors_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto[0];
}
bool TransformChangeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class ListUUIDsRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const ListUUIDsRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
ListUUIDsRequest::_Internal::extra(const ListUUIDsRequest* msg) {
  return *msg->extra_;
}
void ListUUIDsRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
ListUUIDsRequest::ListUUIDsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.worldstatestore.v1.ListUUIDsRequest)
}
ListUUIDsRequest::ListUUIDsRequest(const ListUUIDsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.worldstatestore.v1.ListUUIDsRequest)
}

inline void ListUUIDsRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

ListUUIDsRequest::~ListUUIDsRequest() {
  // @@protoc_insertion_point(destructor:viam.service.worldstatestore.v1.ListUUIDsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListUUIDsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void ListUUIDsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListUUIDsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.worldstatestore.v1.ListUUIDsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListUUIDsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.service.worldstatestore.v1.ListUUIDsRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListUUIDsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.worldstatestore.v1.ListUUIDsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.service.worldstatestore.v1.ListUUIDsRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.worldstatestore.v1.ListUUIDsRequest)
  return target;
}

size_t ListUUIDsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.worldstatestore.v1.ListUUIDsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListUUIDsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListUUIDsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListUUIDsRequest::GetClassData() const { return &_class_data_; }

void ListUUIDsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListUUIDsRequest *>(to)->MergeFrom(
      static_cast<const ListUUIDsRequest &>(from));
}


void ListUUIDsRequest::MergeFrom(const ListUUIDsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.worldstatestore.v1.ListUUIDsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListUUIDsRequest::CopyFrom(const ListUUIDsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.worldstatestore.v1.ListUUIDsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUUIDsRequest::IsInitialized() const {
  return true;
}

void ListUUIDsRequest::InternalSwap(ListUUIDsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListUUIDsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_getter, &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_once,
      file_level_metadata_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto[0]);
}

// ===================================================================

class ListUUIDsResponse::_Internal {
 public:
};

ListUUIDsResponse::ListUUIDsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  uuids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.worldstatestore.v1.ListUUIDsResponse)
}
ListUUIDsResponse::ListUUIDsResponse(const ListUUIDsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      uuids_(from.uuids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.service.worldstatestore.v1.ListUUIDsResponse)
}

inline void ListUUIDsResponse::SharedCtor() {
}

ListUUIDsResponse::~ListUUIDsResponse() {
  // @@protoc_insertion_point(destructor:viam.service.worldstatestore.v1.ListUUIDsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListUUIDsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListUUIDsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListUUIDsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.worldstatestore.v1.ListUUIDsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListUUIDsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes uuids = 1 [json_name = "uuids"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_uuids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListUUIDsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.worldstatestore.v1.ListUUIDsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes uuids = 1 [json_name = "uuids"];
  for (int i = 0, n = this->_internal_uuids_size(); i < n; i++) {
    const auto& s = this->_internal_uuids(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.worldstatestore.v1.ListUUIDsResponse)
  return target;
}

size_t ListUUIDsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.worldstatestore.v1.ListUUIDsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes uuids = 1 [json_name = "uuids"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(uuids_.size());
  for (int i = 0, n = uuids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      uuids_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListUUIDsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListUUIDsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListUUIDsResponse::GetClassData() const { return &_class_data_; }

void ListUUIDsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListUUIDsResponse *>(to)->MergeFrom(
      static_cast<const ListUUIDsResponse &>(from));
}


void ListUUIDsResponse::MergeFrom(const ListUUIDsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.worldstatestore.v1.ListUUIDsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  uuids_.MergeFrom(from.uuids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListUUIDsResponse::CopyFrom(const ListUUIDsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.worldstatestore.v1.ListUUIDsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUUIDsResponse::IsInitialized() const {
  return true;
}

void ListUUIDsResponse::InternalSwap(ListUUIDsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  uuids_.InternalSwap(&other->uuids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListUUIDsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_getter, &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_once,
      file_level_metadata_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto[1]);
}

// ===================================================================

class GetTransformRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetTransformRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetTransformRequest::_Internal::extra(const GetTransformRequest* msg) {
  return *msg->extra_;
}
void GetTransformRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetTransformRequest::GetTransformRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.worldstatestore.v1.GetTransformRequest)
}
GetTransformRequest::GetTransformRequest(const GetTransformRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uuid().empty()) {
    uuid_.Set(from._internal_uuid(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.worldstatestore.v1.GetTransformRequest)
}

inline void GetTransformRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
uuid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  uuid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetTransformRequest::~GetTransformRequest() {
  // @@protoc_insertion_point(destructor:viam.service.worldstatestore.v1.GetTransformRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTransformRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  uuid_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetTransformRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTransformRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.worldstatestore.v1.GetTransformRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  uuid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTransformRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.service.worldstatestore.v1.GetTransformRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // bytes uuid = 2 [json_name = "uuid"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_uuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTransformRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.worldstatestore.v1.GetTransformRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.service.worldstatestore.v1.GetTransformRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bytes uuid = 2 [json_name = "uuid"];
  if (!this->_internal_uuid().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_uuid(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.worldstatestore.v1.GetTransformRequest)
  return target;
}

size_t GetTransformRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.worldstatestore.v1.GetTransformRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes uuid = 2 [json_name = "uuid"];
  if (!this->_internal_uuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_uuid());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTransformRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetTransformRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTransformRequest::GetClassData() const { return &_class_data_; }

void GetTransformRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetTransformRequest *>(to)->MergeFrom(
      static_cast<const GetTransformRequest &>(from));
}


void GetTransformRequest::MergeFrom(const GetTransformRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.worldstatestore.v1.GetTransformRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_uuid().empty()) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTransformRequest::CopyFrom(const GetTransformRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.worldstatestore.v1.GetTransformRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTransformRequest::IsInitialized() const {
  return true;
}

void GetTransformRequest::InternalSwap(GetTransformRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &uuid_, lhs_arena,
      &other->uuid_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTransformRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_getter, &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_once,
      file_level_metadata_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto[2]);
}

// ===================================================================

class GetTransformResponse::_Internal {
 public:
  static const ::viam::common::v1::Transform& transform(const GetTransformResponse* msg);
};

const ::viam::common::v1::Transform&
GetTransformResponse::_Internal::transform(const GetTransformResponse* msg) {
  return *msg->transform_;
}
void GetTransformResponse::clear_transform() {
  if (GetArenaForAllocation() == nullptr && transform_ != nullptr) {
    delete transform_;
  }
  transform_ = nullptr;
}
GetTransformResponse::GetTransformResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.worldstatestore.v1.GetTransformResponse)
}
GetTransformResponse::GetTransformResponse(const GetTransformResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transform()) {
    transform_ = new ::viam::common::v1::Transform(*from.transform_);
  } else {
    transform_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.worldstatestore.v1.GetTransformResponse)
}

inline void GetTransformResponse::SharedCtor() {
transform_ = nullptr;
}

GetTransformResponse::~GetTransformResponse() {
  // @@protoc_insertion_point(destructor:viam.service.worldstatestore.v1.GetTransformResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTransformResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete transform_;
}

void GetTransformResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTransformResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.worldstatestore.v1.GetTransformResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && transform_ != nullptr) {
    delete transform_;
  }
  transform_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTransformResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.Transform transform = 2 [json_name = "transform"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transform(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTransformResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.worldstatestore.v1.GetTransformResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.Transform transform = 2 [json_name = "transform"];
  if (this->_internal_has_transform()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transform(this),
        _Internal::transform(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.worldstatestore.v1.GetTransformResponse)
  return target;
}

size_t GetTransformResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.worldstatestore.v1.GetTransformResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.Transform transform = 2 [json_name = "transform"];
  if (this->_internal_has_transform()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *transform_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTransformResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetTransformResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTransformResponse::GetClassData() const { return &_class_data_; }

void GetTransformResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetTransformResponse *>(to)->MergeFrom(
      static_cast<const GetTransformResponse &>(from));
}


void GetTransformResponse::MergeFrom(const GetTransformResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.worldstatestore.v1.GetTransformResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_transform()) {
    _internal_mutable_transform()->::viam::common::v1::Transform::MergeFrom(from._internal_transform());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTransformResponse::CopyFrom(const GetTransformResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.worldstatestore.v1.GetTransformResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTransformResponse::IsInitialized() const {
  return true;
}

void GetTransformResponse::InternalSwap(GetTransformResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(transform_, other->transform_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTransformResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_getter, &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_once,
      file_level_metadata_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto[3]);
}

// ===================================================================

class StreamTransformChangesRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const StreamTransformChangesRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
StreamTransformChangesRequest::_Internal::extra(const StreamTransformChangesRequest* msg) {
  return *msg->extra_;
}
void StreamTransformChangesRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
StreamTransformChangesRequest::StreamTransformChangesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.worldstatestore.v1.StreamTransformChangesRequest)
}
StreamTransformChangesRequest::StreamTransformChangesRequest(const StreamTransformChangesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.worldstatestore.v1.StreamTransformChangesRequest)
}

inline void StreamTransformChangesRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

StreamTransformChangesRequest::~StreamTransformChangesRequest() {
  // @@protoc_insertion_point(destructor:viam.service.worldstatestore.v1.StreamTransformChangesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamTransformChangesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void StreamTransformChangesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StreamTransformChangesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.worldstatestore.v1.StreamTransformChangesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamTransformChangesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.service.worldstatestore.v1.StreamTransformChangesRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamTransformChangesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.worldstatestore.v1.StreamTransformChangesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.service.worldstatestore.v1.StreamTransformChangesRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.worldstatestore.v1.StreamTransformChangesRequest)
  return target;
}

size_t StreamTransformChangesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.worldstatestore.v1.StreamTransformChangesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamTransformChangesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StreamTransformChangesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamTransformChangesRequest::GetClassData() const { return &_class_data_; }

void StreamTransformChangesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StreamTransformChangesRequest *>(to)->MergeFrom(
      static_cast<const StreamTransformChangesRequest &>(from));
}


void StreamTransformChangesRequest::MergeFrom(const StreamTransformChangesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.worldstatestore.v1.StreamTransformChangesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamTransformChangesRequest::CopyFrom(const StreamTransformChangesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.worldstatestore.v1.StreamTransformChangesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamTransformChangesRequest::IsInitialized() const {
  return true;
}

void StreamTransformChangesRequest::InternalSwap(StreamTransformChangesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamTransformChangesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_getter, &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_once,
      file_level_metadata_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto[4]);
}

// ===================================================================

class StreamTransformChangesResponse::_Internal {
 public:
  static const ::viam::common::v1::Transform& transform(const StreamTransformChangesResponse* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& updated_fields(const StreamTransformChangesResponse* msg);
};

const ::viam::common::v1::Transform&
StreamTransformChangesResponse::_Internal::transform(const StreamTransformChangesResponse* msg) {
  return *msg->transform_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
StreamTransformChangesResponse::_Internal::updated_fields(const StreamTransformChangesResponse* msg) {
  return *msg->updated_fields_;
}
void StreamTransformChangesResponse::clear_transform() {
  if (GetArenaForAllocation() == nullptr && transform_ != nullptr) {
    delete transform_;
  }
  transform_ = nullptr;
}
void StreamTransformChangesResponse::clear_updated_fields() {
  if (GetArenaForAllocation() == nullptr && updated_fields_ != nullptr) {
    delete updated_fields_;
  }
  updated_fields_ = nullptr;
}
StreamTransformChangesResponse::StreamTransformChangesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.worldstatestore.v1.StreamTransformChangesResponse)
}
StreamTransformChangesResponse::StreamTransformChangesResponse(const StreamTransformChangesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transform()) {
    transform_ = new ::viam::common::v1::Transform(*from.transform_);
  } else {
    transform_ = nullptr;
  }
  if (from._internal_has_updated_fields()) {
    updated_fields_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from.updated_fields_);
  } else {
    updated_fields_ = nullptr;
  }
  change_type_ = from.change_type_;
  // @@protoc_insertion_point(copy_constructor:viam.service.worldstatestore.v1.StreamTransformChangesResponse)
}

inline void StreamTransformChangesResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&transform_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&change_type_) -
    reinterpret_cast<char*>(&transform_)) + sizeof(change_type_));
}

StreamTransformChangesResponse::~StreamTransformChangesResponse() {
  // @@protoc_insertion_point(destructor:viam.service.worldstatestore.v1.StreamTransformChangesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamTransformChangesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete transform_;
  if (this != internal_default_instance()) delete updated_fields_;
}

void StreamTransformChangesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StreamTransformChangesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.worldstatestore.v1.StreamTransformChangesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && transform_ != nullptr) {
    delete transform_;
  }
  transform_ = nullptr;
  if (GetArenaForAllocation() == nullptr && updated_fields_ != nullptr) {
    delete updated_fields_;
  }
  updated_fields_ = nullptr;
  change_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamTransformChangesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.service.worldstatestore.v1.TransformChangeType change_type = 1 [json_name = "changeType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_change_type(static_cast<::viam::service::worldstatestore::v1::TransformChangeType>(val));
        } else
          goto handle_unusual;
        continue;
      // .viam.common.v1.Transform transform = 2 [json_name = "transform"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transform(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask updated_fields = 3 [json_name = "updatedFields"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_fields(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamTransformChangesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.worldstatestore.v1.StreamTransformChangesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.service.worldstatestore.v1.TransformChangeType change_type = 1 [json_name = "changeType"];
  if (this->_internal_change_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_change_type(), target);
  }

  // .viam.common.v1.Transform transform = 2 [json_name = "transform"];
  if (this->_internal_has_transform()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transform(this),
        _Internal::transform(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FieldMask updated_fields = 3 [json_name = "updatedFields"];
  if (this->_internal_has_updated_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::updated_fields(this),
        _Internal::updated_fields(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.worldstatestore.v1.StreamTransformChangesResponse)
  return target;
}

size_t StreamTransformChangesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.worldstatestore.v1.StreamTransformChangesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.Transform transform = 2 [json_name = "transform"];
  if (this->_internal_has_transform()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *transform_);
  }

  // .google.protobuf.FieldMask updated_fields = 3 [json_name = "updatedFields"];
  if (this->_internal_has_updated_fields()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_fields_);
  }

  // .viam.service.worldstatestore.v1.TransformChangeType change_type = 1 [json_name = "changeType"];
  if (this->_internal_change_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_change_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamTransformChangesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StreamTransformChangesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamTransformChangesResponse::GetClassData() const { return &_class_data_; }

void StreamTransformChangesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StreamTransformChangesResponse *>(to)->MergeFrom(
      static_cast<const StreamTransformChangesResponse &>(from));
}


void StreamTransformChangesResponse::MergeFrom(const StreamTransformChangesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.worldstatestore.v1.StreamTransformChangesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_transform()) {
    _internal_mutable_transform()->::viam::common::v1::Transform::MergeFrom(from._internal_transform());
  }
  if (from._internal_has_updated_fields()) {
    _internal_mutable_updated_fields()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_updated_fields());
  }
  if (from._internal_change_type() != 0) {
    _internal_set_change_type(from._internal_change_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamTransformChangesResponse::CopyFrom(const StreamTransformChangesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.worldstatestore.v1.StreamTransformChangesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamTransformChangesResponse::IsInitialized() const {
  return true;
}

void StreamTransformChangesResponse::InternalSwap(StreamTransformChangesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StreamTransformChangesResponse, change_type_)
      + sizeof(StreamTransformChangesResponse::change_type_)
      - PROTOBUF_FIELD_OFFSET(StreamTransformChangesResponse, transform_)>(
          reinterpret_cast<char*>(&transform_),
          reinterpret_cast<char*>(&other->transform_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamTransformChangesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_getter, &descriptor_table_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto_once,
      file_level_metadata_service_2fworldstatestore_2fv1_2fworld_5fstate_5fstore_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace worldstatestore
}  // namespace service
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::service::worldstatestore::v1::ListUUIDsRequest*
Arena::CreateMaybeMessage< ::viam::service::worldstatestore::v1::ListUUIDsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::worldstatestore::v1::ListUUIDsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::worldstatestore::v1::ListUUIDsResponse*
Arena::CreateMaybeMessage< ::viam::service::worldstatestore::v1::ListUUIDsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::worldstatestore::v1::ListUUIDsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::worldstatestore::v1::GetTransformRequest*
Arena::CreateMaybeMessage< ::viam::service::worldstatestore::v1::GetTransformRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::worldstatestore::v1::GetTransformRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::worldstatestore::v1::GetTransformResponse*
Arena::CreateMaybeMessage< ::viam::service::worldstatestore::v1::GetTransformResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::worldstatestore::v1::GetTransformResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::worldstatestore::v1::StreamTransformChangesRequest*
Arena::CreateMaybeMessage< ::viam::service::worldstatestore::v1::StreamTransformChangesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::worldstatestore::v1::StreamTransformChangesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::worldstatestore::v1::StreamTransformChangesResponse*
Arena::CreateMaybeMessage< ::viam::service::worldstatestore::v1::StreamTransformChangesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::worldstatestore::v1::StreamTransformChangesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
