// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/navigation/v1/navigation.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_service_2fnavigation_2fv1_2fnavigation_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_service_2fnavigation_2fv1_2fnavigation_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "common/v1/common.pb.h"
#include "google/api/annotations.pb.h"
#include "google/protobuf/struct.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_service_2fnavigation_2fv1_2fnavigation_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_service_2fnavigation_2fv1_2fnavigation_2eproto;
namespace viam {
namespace service {
namespace navigation {
namespace v1 {
class AddWaypointRequest;
struct AddWaypointRequestDefaultTypeInternal;
extern AddWaypointRequestDefaultTypeInternal _AddWaypointRequest_default_instance_;
class AddWaypointResponse;
struct AddWaypointResponseDefaultTypeInternal;
extern AddWaypointResponseDefaultTypeInternal _AddWaypointResponse_default_instance_;
class GetLocationRequest;
struct GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
struct GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GetModeRequest;
struct GetModeRequestDefaultTypeInternal;
extern GetModeRequestDefaultTypeInternal _GetModeRequest_default_instance_;
class GetModeResponse;
struct GetModeResponseDefaultTypeInternal;
extern GetModeResponseDefaultTypeInternal _GetModeResponse_default_instance_;
class GetObstaclesRequest;
struct GetObstaclesRequestDefaultTypeInternal;
extern GetObstaclesRequestDefaultTypeInternal _GetObstaclesRequest_default_instance_;
class GetObstaclesResponse;
struct GetObstaclesResponseDefaultTypeInternal;
extern GetObstaclesResponseDefaultTypeInternal _GetObstaclesResponse_default_instance_;
class GetPathsRequest;
struct GetPathsRequestDefaultTypeInternal;
extern GetPathsRequestDefaultTypeInternal _GetPathsRequest_default_instance_;
class GetPathsResponse;
struct GetPathsResponseDefaultTypeInternal;
extern GetPathsResponseDefaultTypeInternal _GetPathsResponse_default_instance_;
class GetPropertiesRequest;
struct GetPropertiesRequestDefaultTypeInternal;
extern GetPropertiesRequestDefaultTypeInternal _GetPropertiesRequest_default_instance_;
class GetPropertiesResponse;
struct GetPropertiesResponseDefaultTypeInternal;
extern GetPropertiesResponseDefaultTypeInternal _GetPropertiesResponse_default_instance_;
class GetWaypointsRequest;
struct GetWaypointsRequestDefaultTypeInternal;
extern GetWaypointsRequestDefaultTypeInternal _GetWaypointsRequest_default_instance_;
class GetWaypointsResponse;
struct GetWaypointsResponseDefaultTypeInternal;
extern GetWaypointsResponseDefaultTypeInternal _GetWaypointsResponse_default_instance_;
class Path;
struct PathDefaultTypeInternal;
extern PathDefaultTypeInternal _Path_default_instance_;
class RemoveWaypointRequest;
struct RemoveWaypointRequestDefaultTypeInternal;
extern RemoveWaypointRequestDefaultTypeInternal _RemoveWaypointRequest_default_instance_;
class RemoveWaypointResponse;
struct RemoveWaypointResponseDefaultTypeInternal;
extern RemoveWaypointResponseDefaultTypeInternal _RemoveWaypointResponse_default_instance_;
class SetModeRequest;
struct SetModeRequestDefaultTypeInternal;
extern SetModeRequestDefaultTypeInternal _SetModeRequest_default_instance_;
class SetModeResponse;
struct SetModeResponseDefaultTypeInternal;
extern SetModeResponseDefaultTypeInternal _SetModeResponse_default_instance_;
class Waypoint;
struct WaypointDefaultTypeInternal;
extern WaypointDefaultTypeInternal _Waypoint_default_instance_;
}  // namespace v1
}  // namespace navigation
}  // namespace service
}  // namespace viam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace viam {
namespace service {
namespace navigation {
namespace v1 {
enum MapType : int {
  MAP_TYPE_UNSPECIFIED = 0,
  MAP_TYPE_NONE = 1,
  MAP_TYPE_GPS = 2,
  MapType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MapType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MapType_IsValid(int value);
extern const uint32_t MapType_internal_data_[];
constexpr MapType MapType_MIN = static_cast<MapType>(0);
constexpr MapType MapType_MAX = static_cast<MapType>(2);
constexpr int MapType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
MapType_descriptor();
template <typename T>
const std::string& MapType_Name(T value) {
  static_assert(std::is_same<T, MapType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MapType_Name().");
  return MapType_Name(static_cast<MapType>(value));
}
template <>
inline const std::string& MapType_Name(MapType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MapType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool MapType_Parse(absl::string_view name, MapType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MapType>(
      MapType_descriptor(), name, value);
}
enum Mode : int {
  MODE_UNSPECIFIED = 0,
  MODE_MANUAL = 1,
  MODE_WAYPOINT = 2,
  MODE_EXPLORE = 3,
  Mode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Mode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Mode_IsValid(int value);
extern const uint32_t Mode_internal_data_[];
constexpr Mode Mode_MIN = static_cast<Mode>(0);
constexpr Mode Mode_MAX = static_cast<Mode>(3);
constexpr int Mode_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
Mode_descriptor();
template <typename T>
const std::string& Mode_Name(T value) {
  static_assert(std::is_same<T, Mode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Mode_Name().");
  return Mode_Name(static_cast<Mode>(value));
}
template <>
inline const std::string& Mode_Name(Mode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Mode_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool Mode_Parse(absl::string_view name, Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Mode>(
      Mode_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SetModeResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.SetModeResponse) */ {
 public:
  inline SetModeResponse() : SetModeResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetModeResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetModeResponse(const SetModeResponse& from)
      : SetModeResponse(nullptr, from) {}
  SetModeResponse(SetModeResponse&& from) noexcept
    : SetModeResponse() {
    *this = ::std::move(from);
  }

  inline SetModeResponse& operator=(const SetModeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetModeResponse& operator=(SetModeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetModeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetModeResponse* internal_default_instance() {
    return reinterpret_cast<const SetModeResponse*>(
               &_SetModeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SetModeResponse& a, SetModeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetModeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetModeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetModeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetModeResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetModeResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetModeResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.SetModeResponse";
  }
  protected:
  explicit SetModeResponse(::google::protobuf::Arena* arena);
  SetModeResponse(::google::protobuf::Arena* arena, const SetModeResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.SetModeResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class RemoveWaypointResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.RemoveWaypointResponse) */ {
 public:
  inline RemoveWaypointResponse() : RemoveWaypointResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveWaypointResponse(::google::protobuf::internal::ConstantInitialized);

  inline RemoveWaypointResponse(const RemoveWaypointResponse& from)
      : RemoveWaypointResponse(nullptr, from) {}
  RemoveWaypointResponse(RemoveWaypointResponse&& from) noexcept
    : RemoveWaypointResponse() {
    *this = ::std::move(from);
  }

  inline RemoveWaypointResponse& operator=(const RemoveWaypointResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveWaypointResponse& operator=(RemoveWaypointResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveWaypointResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveWaypointResponse* internal_default_instance() {
    return reinterpret_cast<const RemoveWaypointResponse*>(
               &_RemoveWaypointResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(RemoveWaypointResponse& a, RemoveWaypointResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveWaypointResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveWaypointResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveWaypointResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveWaypointResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RemoveWaypointResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RemoveWaypointResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.RemoveWaypointResponse";
  }
  protected:
  explicit RemoveWaypointResponse(::google::protobuf::Arena* arena);
  RemoveWaypointResponse(::google::protobuf::Arena* arena, const RemoveWaypointResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.RemoveWaypointResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class GetPropertiesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.GetPropertiesResponse) */ {
 public:
  inline GetPropertiesResponse() : GetPropertiesResponse(nullptr) {}
  ~GetPropertiesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPropertiesResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetPropertiesResponse(const GetPropertiesResponse& from)
      : GetPropertiesResponse(nullptr, from) {}
  GetPropertiesResponse(GetPropertiesResponse&& from) noexcept
    : GetPropertiesResponse() {
    *this = ::std::move(from);
  }

  inline GetPropertiesResponse& operator=(const GetPropertiesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPropertiesResponse& operator=(GetPropertiesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPropertiesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPropertiesResponse* internal_default_instance() {
    return reinterpret_cast<const GetPropertiesResponse*>(
               &_GetPropertiesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(GetPropertiesResponse& a, GetPropertiesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPropertiesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPropertiesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPropertiesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPropertiesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPropertiesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPropertiesResponse& from) {
    GetPropertiesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPropertiesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.GetPropertiesResponse";
  }
  protected:
  explicit GetPropertiesResponse(::google::protobuf::Arena* arena);
  GetPropertiesResponse(::google::protobuf::Arena* arena, const GetPropertiesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMapTypeFieldNumber = 1,
  };
  // .viam.service.navigation.v1.MapType map_type = 1 [json_name = "mapType"];
  void clear_map_type() ;
  ::viam::service::navigation::v1::MapType map_type() const;
  void set_map_type(::viam::service::navigation::v1::MapType value);

  private:
  ::viam::service::navigation::v1::MapType _internal_map_type() const;
  void _internal_set_map_type(::viam::service::navigation::v1::MapType value);

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.GetPropertiesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int map_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class GetPropertiesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.GetPropertiesRequest) */ {
 public:
  inline GetPropertiesRequest() : GetPropertiesRequest(nullptr) {}
  ~GetPropertiesRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPropertiesRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetPropertiesRequest(const GetPropertiesRequest& from)
      : GetPropertiesRequest(nullptr, from) {}
  GetPropertiesRequest(GetPropertiesRequest&& from) noexcept
    : GetPropertiesRequest() {
    *this = ::std::move(from);
  }

  inline GetPropertiesRequest& operator=(const GetPropertiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPropertiesRequest& operator=(GetPropertiesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPropertiesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPropertiesRequest* internal_default_instance() {
    return reinterpret_cast<const GetPropertiesRequest*>(
               &_GetPropertiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(GetPropertiesRequest& a, GetPropertiesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPropertiesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPropertiesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPropertiesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPropertiesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPropertiesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPropertiesRequest& from) {
    GetPropertiesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPropertiesRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.GetPropertiesRequest";
  }
  protected:
  explicit GetPropertiesRequest(::google::protobuf::Arena* arena);
  GetPropertiesRequest(::google::protobuf::Arena* arena, const GetPropertiesRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.GetPropertiesRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class GetModeResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.GetModeResponse) */ {
 public:
  inline GetModeResponse() : GetModeResponse(nullptr) {}
  ~GetModeResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetModeResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetModeResponse(const GetModeResponse& from)
      : GetModeResponse(nullptr, from) {}
  GetModeResponse(GetModeResponse&& from) noexcept
    : GetModeResponse() {
    *this = ::std::move(from);
  }

  inline GetModeResponse& operator=(const GetModeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetModeResponse& operator=(GetModeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetModeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetModeResponse* internal_default_instance() {
    return reinterpret_cast<const GetModeResponse*>(
               &_GetModeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetModeResponse& a, GetModeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetModeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetModeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetModeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetModeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetModeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetModeResponse& from) {
    GetModeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetModeResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.GetModeResponse";
  }
  protected:
  explicit GetModeResponse(::google::protobuf::Arena* arena);
  GetModeResponse(::google::protobuf::Arena* arena, const GetModeResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModeFieldNumber = 1,
  };
  // .viam.service.navigation.v1.Mode mode = 1 [json_name = "mode"];
  void clear_mode() ;
  ::viam::service::navigation::v1::Mode mode() const;
  void set_mode(::viam::service::navigation::v1::Mode value);

  private:
  ::viam::service::navigation::v1::Mode _internal_mode() const;
  void _internal_set_mode(::viam::service::navigation::v1::Mode value);

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.GetModeResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int mode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class AddWaypointResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.AddWaypointResponse) */ {
 public:
  inline AddWaypointResponse() : AddWaypointResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddWaypointResponse(::google::protobuf::internal::ConstantInitialized);

  inline AddWaypointResponse(const AddWaypointResponse& from)
      : AddWaypointResponse(nullptr, from) {}
  AddWaypointResponse(AddWaypointResponse&& from) noexcept
    : AddWaypointResponse() {
    *this = ::std::move(from);
  }

  inline AddWaypointResponse& operator=(const AddWaypointResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddWaypointResponse& operator=(AddWaypointResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddWaypointResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddWaypointResponse* internal_default_instance() {
    return reinterpret_cast<const AddWaypointResponse*>(
               &_AddWaypointResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(AddWaypointResponse& a, AddWaypointResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AddWaypointResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddWaypointResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddWaypointResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddWaypointResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AddWaypointResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AddWaypointResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.AddWaypointResponse";
  }
  protected:
  explicit AddWaypointResponse(::google::protobuf::Arena* arena);
  AddWaypointResponse(::google::protobuf::Arena* arena, const AddWaypointResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.AddWaypointResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class Waypoint final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.Waypoint) */ {
 public:
  inline Waypoint() : Waypoint(nullptr) {}
  ~Waypoint() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Waypoint(::google::protobuf::internal::ConstantInitialized);

  inline Waypoint(const Waypoint& from)
      : Waypoint(nullptr, from) {}
  Waypoint(Waypoint&& from) noexcept
    : Waypoint() {
    *this = ::std::move(from);
  }

  inline Waypoint& operator=(const Waypoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline Waypoint& operator=(Waypoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Waypoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const Waypoint* internal_default_instance() {
    return reinterpret_cast<const Waypoint*>(
               &_Waypoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Waypoint& a, Waypoint& b) {
    a.Swap(&b);
  }
  inline void Swap(Waypoint* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Waypoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Waypoint* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Waypoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Waypoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Waypoint& from) {
    Waypoint::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Waypoint* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.Waypoint";
  }
  protected:
  explicit Waypoint(::google::protobuf::Arena* arena);
  Waypoint(::google::protobuf::Arena* arena, const Waypoint& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kLocationFieldNumber = 2,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .viam.common.v1.GeoPoint location = 2 [json_name = "location"];
  bool has_location() const;
  void clear_location() ;
  const ::viam::common::v1::GeoPoint& location() const;
  PROTOBUF_NODISCARD ::viam::common::v1::GeoPoint* release_location();
  ::viam::common::v1::GeoPoint* mutable_location();
  void set_allocated_location(::viam::common::v1::GeoPoint* value);
  void unsafe_arena_set_allocated_location(::viam::common::v1::GeoPoint* value);
  ::viam::common::v1::GeoPoint* unsafe_arena_release_location();

  private:
  const ::viam::common::v1::GeoPoint& _internal_location() const;
  ::viam::common::v1::GeoPoint* _internal_mutable_location();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.Waypoint)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      46, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::viam::common::v1::GeoPoint* location_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class SetModeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.SetModeRequest) */ {
 public:
  inline SetModeRequest() : SetModeRequest(nullptr) {}
  ~SetModeRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetModeRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetModeRequest(const SetModeRequest& from)
      : SetModeRequest(nullptr, from) {}
  SetModeRequest(SetModeRequest&& from) noexcept
    : SetModeRequest() {
    *this = ::std::move(from);
  }

  inline SetModeRequest& operator=(const SetModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetModeRequest& operator=(SetModeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetModeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetModeRequest* internal_default_instance() {
    return reinterpret_cast<const SetModeRequest*>(
               &_SetModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SetModeRequest& a, SetModeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetModeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetModeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetModeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetModeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetModeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetModeRequest& from) {
    SetModeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetModeRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.SetModeRequest";
  }
  protected:
  explicit SetModeRequest(::google::protobuf::Arena* arena);
  SetModeRequest(::google::protobuf::Arena* arena, const SetModeRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
    kModeFieldNumber = 2,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // .viam.service.navigation.v1.Mode mode = 2 [json_name = "mode"];
  void clear_mode() ;
  ::viam::service::navigation::v1::Mode mode() const;
  void set_mode(::viam::service::navigation::v1::Mode value);

  private:
  ::viam::service::navigation::v1::Mode _internal_mode() const;
  void _internal_set_mode(::viam::service::navigation::v1::Mode value);

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.SetModeRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      54, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    int mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class RemoveWaypointRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.RemoveWaypointRequest) */ {
 public:
  inline RemoveWaypointRequest() : RemoveWaypointRequest(nullptr) {}
  ~RemoveWaypointRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveWaypointRequest(::google::protobuf::internal::ConstantInitialized);

  inline RemoveWaypointRequest(const RemoveWaypointRequest& from)
      : RemoveWaypointRequest(nullptr, from) {}
  RemoveWaypointRequest(RemoveWaypointRequest&& from) noexcept
    : RemoveWaypointRequest() {
    *this = ::std::move(from);
  }

  inline RemoveWaypointRequest& operator=(const RemoveWaypointRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveWaypointRequest& operator=(RemoveWaypointRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveWaypointRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveWaypointRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveWaypointRequest*>(
               &_RemoveWaypointRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(RemoveWaypointRequest& a, RemoveWaypointRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveWaypointRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveWaypointRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveWaypointRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveWaypointRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveWaypointRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RemoveWaypointRequest& from) {
    RemoveWaypointRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoveWaypointRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.RemoveWaypointRequest";
  }
  protected:
  explicit RemoveWaypointRequest(::google::protobuf::Arena* arena);
  RemoveWaypointRequest(::google::protobuf::Arena* arena, const RemoveWaypointRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kIdFieldNumber = 2,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string id = 2 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.RemoveWaypointRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      63, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class Path final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.Path) */ {
 public:
  inline Path() : Path(nullptr) {}
  ~Path() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Path(::google::protobuf::internal::ConstantInitialized);

  inline Path(const Path& from)
      : Path(nullptr, from) {}
  Path(Path&& from) noexcept
    : Path() {
    *this = ::std::move(from);
  }

  inline Path& operator=(const Path& from) {
    CopyFrom(from);
    return *this;
  }
  inline Path& operator=(Path&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Path& default_instance() {
    return *internal_default_instance();
  }
  static inline const Path* internal_default_instance() {
    return reinterpret_cast<const Path*>(
               &_Path_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(Path& a, Path& b) {
    a.Swap(&b);
  }
  inline void Swap(Path* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Path* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Path* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Path>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Path& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Path& from) {
    Path::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Path* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.Path";
  }
  protected:
  explicit Path(::google::protobuf::Arena* arena);
  Path(::google::protobuf::Arena* arena, const Path& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGeopointsFieldNumber = 2,
    kDestinationWaypointIdFieldNumber = 1,
  };
  // repeated .viam.common.v1.GeoPoint geopoints = 2 [json_name = "geopoints"];
  int geopoints_size() const;
  private:
  int _internal_geopoints_size() const;

  public:
  void clear_geopoints() ;
  ::viam::common::v1::GeoPoint* mutable_geopoints(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::GeoPoint >*
      mutable_geopoints();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeoPoint>& _internal_geopoints() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeoPoint>* _internal_mutable_geopoints();
  public:
  const ::viam::common::v1::GeoPoint& geopoints(int index) const;
  ::viam::common::v1::GeoPoint* add_geopoints();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::GeoPoint >&
      geopoints() const;
  // string destination_waypoint_id = 1 [json_name = "destinationWaypointId"];
  void clear_destination_waypoint_id() ;
  const std::string& destination_waypoint_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_destination_waypoint_id(Arg_&& arg, Args_... args);
  std::string* mutable_destination_waypoint_id();
  PROTOBUF_NODISCARD std::string* release_destination_waypoint_id();
  void set_allocated_destination_waypoint_id(std::string* value);

  private:
  const std::string& _internal_destination_waypoint_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_destination_waypoint_id(
      const std::string& value);
  std::string* _internal_mutable_destination_waypoint_id();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.Path)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      63, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::GeoPoint > geopoints_;
    ::google::protobuf::internal::ArenaStringPtr destination_waypoint_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class GetWaypointsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.GetWaypointsRequest) */ {
 public:
  inline GetWaypointsRequest() : GetWaypointsRequest(nullptr) {}
  ~GetWaypointsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetWaypointsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetWaypointsRequest(const GetWaypointsRequest& from)
      : GetWaypointsRequest(nullptr, from) {}
  GetWaypointsRequest(GetWaypointsRequest&& from) noexcept
    : GetWaypointsRequest() {
    *this = ::std::move(from);
  }

  inline GetWaypointsRequest& operator=(const GetWaypointsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetWaypointsRequest& operator=(GetWaypointsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetWaypointsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetWaypointsRequest* internal_default_instance() {
    return reinterpret_cast<const GetWaypointsRequest*>(
               &_GetWaypointsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GetWaypointsRequest& a, GetWaypointsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetWaypointsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetWaypointsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetWaypointsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetWaypointsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetWaypointsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetWaypointsRequest& from) {
    GetWaypointsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetWaypointsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.GetWaypointsRequest";
  }
  protected:
  explicit GetWaypointsRequest(::google::protobuf::Arena* arena);
  GetWaypointsRequest(::google::protobuf::Arena* arena, const GetWaypointsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.GetWaypointsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      59, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class GetPathsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.GetPathsRequest) */ {
 public:
  inline GetPathsRequest() : GetPathsRequest(nullptr) {}
  ~GetPathsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPathsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetPathsRequest(const GetPathsRequest& from)
      : GetPathsRequest(nullptr, from) {}
  GetPathsRequest(GetPathsRequest&& from) noexcept
    : GetPathsRequest() {
    *this = ::std::move(from);
  }

  inline GetPathsRequest& operator=(const GetPathsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPathsRequest& operator=(GetPathsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPathsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPathsRequest* internal_default_instance() {
    return reinterpret_cast<const GetPathsRequest*>(
               &_GetPathsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(GetPathsRequest& a, GetPathsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPathsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPathsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPathsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPathsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPathsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPathsRequest& from) {
    GetPathsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPathsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.GetPathsRequest";
  }
  protected:
  explicit GetPathsRequest(::google::protobuf::Arena* arena);
  GetPathsRequest(::google::protobuf::Arena* arena, const GetPathsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.GetPathsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      55, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class GetObstaclesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.GetObstaclesRequest) */ {
 public:
  inline GetObstaclesRequest() : GetObstaclesRequest(nullptr) {}
  ~GetObstaclesRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetObstaclesRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetObstaclesRequest(const GetObstaclesRequest& from)
      : GetObstaclesRequest(nullptr, from) {}
  GetObstaclesRequest(GetObstaclesRequest&& from) noexcept
    : GetObstaclesRequest() {
    *this = ::std::move(from);
  }

  inline GetObstaclesRequest& operator=(const GetObstaclesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetObstaclesRequest& operator=(GetObstaclesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetObstaclesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetObstaclesRequest* internal_default_instance() {
    return reinterpret_cast<const GetObstaclesRequest*>(
               &_GetObstaclesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(GetObstaclesRequest& a, GetObstaclesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetObstaclesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetObstaclesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetObstaclesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetObstaclesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetObstaclesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetObstaclesRequest& from) {
    GetObstaclesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetObstaclesRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.GetObstaclesRequest";
  }
  protected:
  explicit GetObstaclesRequest(::google::protobuf::Arena* arena);
  GetObstaclesRequest(::google::protobuf::Arena* arena, const GetObstaclesRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.GetObstaclesRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      59, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class GetModeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.GetModeRequest) */ {
 public:
  inline GetModeRequest() : GetModeRequest(nullptr) {}
  ~GetModeRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetModeRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetModeRequest(const GetModeRequest& from)
      : GetModeRequest(nullptr, from) {}
  GetModeRequest(GetModeRequest&& from) noexcept
    : GetModeRequest() {
    *this = ::std::move(from);
  }

  inline GetModeRequest& operator=(const GetModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetModeRequest& operator=(GetModeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetModeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetModeRequest* internal_default_instance() {
    return reinterpret_cast<const GetModeRequest*>(
               &_GetModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetModeRequest& a, GetModeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetModeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetModeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetModeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetModeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetModeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetModeRequest& from) {
    GetModeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetModeRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.GetModeRequest";
  }
  protected:
  explicit GetModeRequest(::google::protobuf::Arena* arena);
  GetModeRequest(::google::protobuf::Arena* arena, const GetModeRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.GetModeRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      54, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class GetLocationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.GetLocationResponse) */ {
 public:
  inline GetLocationResponse() : GetLocationResponse(nullptr) {}
  ~GetLocationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLocationResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetLocationResponse(const GetLocationResponse& from)
      : GetLocationResponse(nullptr, from) {}
  GetLocationResponse(GetLocationResponse&& from) noexcept
    : GetLocationResponse() {
    *this = ::std::move(from);
  }

  inline GetLocationResponse& operator=(const GetLocationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLocationResponse& operator=(GetLocationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLocationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLocationResponse* internal_default_instance() {
    return reinterpret_cast<const GetLocationResponse*>(
               &_GetLocationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetLocationResponse& a, GetLocationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLocationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLocationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLocationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLocationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLocationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLocationResponse& from) {
    GetLocationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetLocationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.GetLocationResponse";
  }
  protected:
  explicit GetLocationResponse(::google::protobuf::Arena* arena);
  GetLocationResponse(::google::protobuf::Arena* arena, const GetLocationResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 1,
    kCompassHeadingFieldNumber = 2,
  };
  // .viam.common.v1.GeoPoint location = 1 [json_name = "location"];
  bool has_location() const;
  void clear_location() ;
  const ::viam::common::v1::GeoPoint& location() const;
  PROTOBUF_NODISCARD ::viam::common::v1::GeoPoint* release_location();
  ::viam::common::v1::GeoPoint* mutable_location();
  void set_allocated_location(::viam::common::v1::GeoPoint* value);
  void unsafe_arena_set_allocated_location(::viam::common::v1::GeoPoint* value);
  ::viam::common::v1::GeoPoint* unsafe_arena_release_location();

  private:
  const ::viam::common::v1::GeoPoint& _internal_location() const;
  ::viam::common::v1::GeoPoint* _internal_mutable_location();

  public:
  // double compass_heading = 2 [json_name = "compassHeading"];
  void clear_compass_heading() ;
  double compass_heading() const;
  void set_compass_heading(double value);

  private:
  double _internal_compass_heading() const;
  void _internal_set_compass_heading(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.GetLocationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::common::v1::GeoPoint* location_;
    double compass_heading_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class GetLocationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.GetLocationRequest) */ {
 public:
  inline GetLocationRequest() : GetLocationRequest(nullptr) {}
  ~GetLocationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLocationRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetLocationRequest(const GetLocationRequest& from)
      : GetLocationRequest(nullptr, from) {}
  GetLocationRequest(GetLocationRequest&& from) noexcept
    : GetLocationRequest() {
    *this = ::std::move(from);
  }

  inline GetLocationRequest& operator=(const GetLocationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLocationRequest& operator=(GetLocationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLocationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLocationRequest* internal_default_instance() {
    return reinterpret_cast<const GetLocationRequest*>(
               &_GetLocationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetLocationRequest& a, GetLocationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLocationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLocationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLocationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLocationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLocationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLocationRequest& from) {
    GetLocationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetLocationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.GetLocationRequest";
  }
  protected:
  explicit GetLocationRequest(::google::protobuf::Arena* arena);
  GetLocationRequest(::google::protobuf::Arena* arena, const GetLocationRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.GetLocationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      58, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class AddWaypointRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.AddWaypointRequest) */ {
 public:
  inline AddWaypointRequest() : AddWaypointRequest(nullptr) {}
  ~AddWaypointRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddWaypointRequest(::google::protobuf::internal::ConstantInitialized);

  inline AddWaypointRequest(const AddWaypointRequest& from)
      : AddWaypointRequest(nullptr, from) {}
  AddWaypointRequest(AddWaypointRequest&& from) noexcept
    : AddWaypointRequest() {
    *this = ::std::move(from);
  }

  inline AddWaypointRequest& operator=(const AddWaypointRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddWaypointRequest& operator=(AddWaypointRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddWaypointRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddWaypointRequest* internal_default_instance() {
    return reinterpret_cast<const AddWaypointRequest*>(
               &_AddWaypointRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(AddWaypointRequest& a, AddWaypointRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AddWaypointRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddWaypointRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddWaypointRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddWaypointRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddWaypointRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddWaypointRequest& from) {
    AddWaypointRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddWaypointRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.AddWaypointRequest";
  }
  protected:
  explicit AddWaypointRequest(::google::protobuf::Arena* arena);
  AddWaypointRequest(::google::protobuf::Arena* arena, const AddWaypointRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kLocationFieldNumber = 2,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .viam.common.v1.GeoPoint location = 2 [json_name = "location"];
  bool has_location() const;
  void clear_location() ;
  const ::viam::common::v1::GeoPoint& location() const;
  PROTOBUF_NODISCARD ::viam::common::v1::GeoPoint* release_location();
  ::viam::common::v1::GeoPoint* mutable_location();
  void set_allocated_location(::viam::common::v1::GeoPoint* value);
  void unsafe_arena_set_allocated_location(::viam::common::v1::GeoPoint* value);
  ::viam::common::v1::GeoPoint* unsafe_arena_release_location();

  private:
  const ::viam::common::v1::GeoPoint& _internal_location() const;
  ::viam::common::v1::GeoPoint* _internal_mutable_location();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.AddWaypointRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      58, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::viam::common::v1::GeoPoint* location_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class GetWaypointsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.GetWaypointsResponse) */ {
 public:
  inline GetWaypointsResponse() : GetWaypointsResponse(nullptr) {}
  ~GetWaypointsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetWaypointsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetWaypointsResponse(const GetWaypointsResponse& from)
      : GetWaypointsResponse(nullptr, from) {}
  GetWaypointsResponse(GetWaypointsResponse&& from) noexcept
    : GetWaypointsResponse() {
    *this = ::std::move(from);
  }

  inline GetWaypointsResponse& operator=(const GetWaypointsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetWaypointsResponse& operator=(GetWaypointsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetWaypointsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetWaypointsResponse* internal_default_instance() {
    return reinterpret_cast<const GetWaypointsResponse*>(
               &_GetWaypointsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GetWaypointsResponse& a, GetWaypointsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetWaypointsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetWaypointsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetWaypointsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetWaypointsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetWaypointsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetWaypointsResponse& from) {
    GetWaypointsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetWaypointsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.GetWaypointsResponse";
  }
  protected:
  explicit GetWaypointsResponse(::google::protobuf::Arena* arena);
  GetWaypointsResponse(::google::protobuf::Arena* arena, const GetWaypointsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWaypointsFieldNumber = 1,
  };
  // repeated .viam.service.navigation.v1.Waypoint waypoints = 1 [json_name = "waypoints"];
  int waypoints_size() const;
  private:
  int _internal_waypoints_size() const;

  public:
  void clear_waypoints() ;
  ::viam::service::navigation::v1::Waypoint* mutable_waypoints(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::service::navigation::v1::Waypoint >*
      mutable_waypoints();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::service::navigation::v1::Waypoint>& _internal_waypoints() const;
  ::google::protobuf::RepeatedPtrField<::viam::service::navigation::v1::Waypoint>* _internal_mutable_waypoints();
  public:
  const ::viam::service::navigation::v1::Waypoint& waypoints(int index) const;
  ::viam::service::navigation::v1::Waypoint* add_waypoints();
  const ::google::protobuf::RepeatedPtrField< ::viam::service::navigation::v1::Waypoint >&
      waypoints() const;
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.GetWaypointsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::service::navigation::v1::Waypoint > waypoints_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class GetPathsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.GetPathsResponse) */ {
 public:
  inline GetPathsResponse() : GetPathsResponse(nullptr) {}
  ~GetPathsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPathsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetPathsResponse(const GetPathsResponse& from)
      : GetPathsResponse(nullptr, from) {}
  GetPathsResponse(GetPathsResponse&& from) noexcept
    : GetPathsResponse() {
    *this = ::std::move(from);
  }

  inline GetPathsResponse& operator=(const GetPathsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPathsResponse& operator=(GetPathsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPathsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPathsResponse* internal_default_instance() {
    return reinterpret_cast<const GetPathsResponse*>(
               &_GetPathsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(GetPathsResponse& a, GetPathsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPathsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPathsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPathsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPathsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPathsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPathsResponse& from) {
    GetPathsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPathsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.GetPathsResponse";
  }
  protected:
  explicit GetPathsResponse(::google::protobuf::Arena* arena);
  GetPathsResponse(::google::protobuf::Arena* arena, const GetPathsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathsFieldNumber = 1,
  };
  // repeated .viam.service.navigation.v1.Path paths = 1 [json_name = "paths"];
  int paths_size() const;
  private:
  int _internal_paths_size() const;

  public:
  void clear_paths() ;
  ::viam::service::navigation::v1::Path* mutable_paths(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::service::navigation::v1::Path >*
      mutable_paths();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::service::navigation::v1::Path>& _internal_paths() const;
  ::google::protobuf::RepeatedPtrField<::viam::service::navigation::v1::Path>* _internal_mutable_paths();
  public:
  const ::viam::service::navigation::v1::Path& paths(int index) const;
  ::viam::service::navigation::v1::Path* add_paths();
  const ::google::protobuf::RepeatedPtrField< ::viam::service::navigation::v1::Path >&
      paths() const;
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.GetPathsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::service::navigation::v1::Path > paths_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};// -------------------------------------------------------------------

class GetObstaclesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.navigation.v1.GetObstaclesResponse) */ {
 public:
  inline GetObstaclesResponse() : GetObstaclesResponse(nullptr) {}
  ~GetObstaclesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetObstaclesResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetObstaclesResponse(const GetObstaclesResponse& from)
      : GetObstaclesResponse(nullptr, from) {}
  GetObstaclesResponse(GetObstaclesResponse&& from) noexcept
    : GetObstaclesResponse() {
    *this = ::std::move(from);
  }

  inline GetObstaclesResponse& operator=(const GetObstaclesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetObstaclesResponse& operator=(GetObstaclesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetObstaclesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetObstaclesResponse* internal_default_instance() {
    return reinterpret_cast<const GetObstaclesResponse*>(
               &_GetObstaclesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(GetObstaclesResponse& a, GetObstaclesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetObstaclesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetObstaclesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetObstaclesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetObstaclesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetObstaclesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetObstaclesResponse& from) {
    GetObstaclesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetObstaclesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.navigation.v1.GetObstaclesResponse";
  }
  protected:
  explicit GetObstaclesResponse(::google::protobuf::Arena* arena);
  GetObstaclesResponse(::google::protobuf::Arena* arena, const GetObstaclesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObstaclesFieldNumber = 1,
  };
  // repeated .viam.common.v1.GeoGeometry obstacles = 1 [json_name = "obstacles"];
  int obstacles_size() const;
  private:
  int _internal_obstacles_size() const;

  public:
  void clear_obstacles() ;
  ::viam::common::v1::GeoGeometry* mutable_obstacles(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::GeoGeometry >*
      mutable_obstacles();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeoGeometry>& _internal_obstacles() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeoGeometry>* _internal_mutable_obstacles();
  public:
  const ::viam::common::v1::GeoGeometry& obstacles(int index) const;
  ::viam::common::v1::GeoGeometry* add_obstacles();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::GeoGeometry >&
      obstacles() const;
  // @@protoc_insertion_point(class_scope:viam.service.navigation.v1.GetObstaclesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::GeoGeometry > obstacles_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fnavigation_2fv1_2fnavigation_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetModeRequest

// string name = 1 [json_name = "name"];
inline void GetModeRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetModeRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetModeRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetModeRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.GetModeRequest.name)
}
inline std::string* GetModeRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetModeRequest.name)
  return _s;
}
inline const std::string& GetModeRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetModeRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetModeRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetModeRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.GetModeRequest.name)
  return _impl_.name_.Release();
}
inline void GetModeRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.GetModeRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetModeRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetModeRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetModeRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetModeRequest.extra)
  return _internal_extra();
}
inline void GetModeRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.navigation.v1.GetModeRequest.extra)
}
inline ::google::protobuf::Struct* GetModeRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetModeRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.GetModeRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetModeRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetModeRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetModeRequest.extra)
  return _msg;
}
inline void GetModeRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.GetModeRequest.extra)
}

// -------------------------------------------------------------------

// GetModeResponse

// .viam.service.navigation.v1.Mode mode = 1 [json_name = "mode"];
inline void GetModeResponse::clear_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mode_ = 0;
}
inline ::viam::service::navigation::v1::Mode GetModeResponse::mode() const {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetModeResponse.mode)
  return _internal_mode();
}
inline void GetModeResponse::set_mode(::viam::service::navigation::v1::Mode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.GetModeResponse.mode)
}
inline ::viam::service::navigation::v1::Mode GetModeResponse::_internal_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::viam::service::navigation::v1::Mode>(_impl_.mode_);
}
inline void GetModeResponse::_internal_set_mode(::viam::service::navigation::v1::Mode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// SetModeRequest

// string name = 1 [json_name = "name"];
inline void SetModeRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SetModeRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.SetModeRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetModeRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.SetModeRequest.name)
}
inline std::string* SetModeRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.SetModeRequest.name)
  return _s;
}
inline const std::string& SetModeRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SetModeRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SetModeRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SetModeRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.SetModeRequest.name)
  return _impl_.name_.Release();
}
inline void SetModeRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.SetModeRequest.name)
}

// .viam.service.navigation.v1.Mode mode = 2 [json_name = "mode"];
inline void SetModeRequest::clear_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mode_ = 0;
}
inline ::viam::service::navigation::v1::Mode SetModeRequest::mode() const {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.SetModeRequest.mode)
  return _internal_mode();
}
inline void SetModeRequest::set_mode(::viam::service::navigation::v1::Mode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.SetModeRequest.mode)
}
inline ::viam::service::navigation::v1::Mode SetModeRequest::_internal_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::viam::service::navigation::v1::Mode>(_impl_.mode_);
}
inline void SetModeRequest::_internal_set_mode(::viam::service::navigation::v1::Mode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_ = value;
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool SetModeRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& SetModeRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& SetModeRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.SetModeRequest.extra)
  return _internal_extra();
}
inline void SetModeRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.navigation.v1.SetModeRequest.extra)
}
inline ::google::protobuf::Struct* SetModeRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* SetModeRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.SetModeRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* SetModeRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* SetModeRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.SetModeRequest.extra)
  return _msg;
}
inline void SetModeRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.SetModeRequest.extra)
}

// -------------------------------------------------------------------

// SetModeResponse

// -------------------------------------------------------------------

// Waypoint

// string id = 1 [json_name = "id"];
inline void Waypoint::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Waypoint::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.Waypoint.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Waypoint::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.Waypoint.id)
}
inline std::string* Waypoint::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.Waypoint.id)
  return _s;
}
inline const std::string& Waypoint::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void Waypoint::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Waypoint::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Waypoint::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.Waypoint.id)
  return _impl_.id_.Release();
}
inline void Waypoint::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.Waypoint.id)
}

// .viam.common.v1.GeoPoint location = 2 [json_name = "location"];
inline bool Waypoint::has_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.location_ != nullptr);
  return value;
}
inline const ::viam::common::v1::GeoPoint& Waypoint::_internal_location() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::GeoPoint* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::GeoPoint&>(::viam::common::v1::_GeoPoint_default_instance_);
}
inline const ::viam::common::v1::GeoPoint& Waypoint::location() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.Waypoint.location)
  return _internal_location();
}
inline void Waypoint::unsafe_arena_set_allocated_location(::viam::common::v1::GeoPoint* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.navigation.v1.Waypoint.location)
}
inline ::viam::common::v1::GeoPoint* Waypoint::release_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::GeoPoint* released = _impl_.location_;
  _impl_.location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::GeoPoint* Waypoint::unsafe_arena_release_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.Waypoint.location)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::GeoPoint* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::viam::common::v1::GeoPoint* Waypoint::_internal_mutable_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.location_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::GeoPoint>(GetArena());
    _impl_.location_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(p);
  }
  return _impl_.location_;
}
inline ::viam::common::v1::GeoPoint* Waypoint::mutable_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::GeoPoint* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.Waypoint.location)
  return _msg;
}
inline void Waypoint::set_allocated_location(::viam::common::v1::GeoPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.location_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.Waypoint.location)
}

// -------------------------------------------------------------------

// GetLocationRequest

// string name = 1 [json_name = "name"];
inline void GetLocationRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetLocationRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetLocationRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetLocationRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.GetLocationRequest.name)
}
inline std::string* GetLocationRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetLocationRequest.name)
  return _s;
}
inline const std::string& GetLocationRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetLocationRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetLocationRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetLocationRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.GetLocationRequest.name)
  return _impl_.name_.Release();
}
inline void GetLocationRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.GetLocationRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetLocationRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetLocationRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetLocationRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetLocationRequest.extra)
  return _internal_extra();
}
inline void GetLocationRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.navigation.v1.GetLocationRequest.extra)
}
inline ::google::protobuf::Struct* GetLocationRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetLocationRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.GetLocationRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetLocationRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetLocationRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetLocationRequest.extra)
  return _msg;
}
inline void GetLocationRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.GetLocationRequest.extra)
}

// -------------------------------------------------------------------

// GetLocationResponse

// .viam.common.v1.GeoPoint location = 1 [json_name = "location"];
inline bool GetLocationResponse::has_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.location_ != nullptr);
  return value;
}
inline const ::viam::common::v1::GeoPoint& GetLocationResponse::_internal_location() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::GeoPoint* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::GeoPoint&>(::viam::common::v1::_GeoPoint_default_instance_);
}
inline const ::viam::common::v1::GeoPoint& GetLocationResponse::location() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetLocationResponse.location)
  return _internal_location();
}
inline void GetLocationResponse::unsafe_arena_set_allocated_location(::viam::common::v1::GeoPoint* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.navigation.v1.GetLocationResponse.location)
}
inline ::viam::common::v1::GeoPoint* GetLocationResponse::release_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::GeoPoint* released = _impl_.location_;
  _impl_.location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::GeoPoint* GetLocationResponse::unsafe_arena_release_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.GetLocationResponse.location)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::GeoPoint* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::viam::common::v1::GeoPoint* GetLocationResponse::_internal_mutable_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.location_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::GeoPoint>(GetArena());
    _impl_.location_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(p);
  }
  return _impl_.location_;
}
inline ::viam::common::v1::GeoPoint* GetLocationResponse::mutable_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::GeoPoint* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetLocationResponse.location)
  return _msg;
}
inline void GetLocationResponse::set_allocated_location(::viam::common::v1::GeoPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.location_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.GetLocationResponse.location)
}

// double compass_heading = 2 [json_name = "compassHeading"];
inline void GetLocationResponse::clear_compass_heading() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.compass_heading_ = 0;
}
inline double GetLocationResponse::compass_heading() const {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetLocationResponse.compass_heading)
  return _internal_compass_heading();
}
inline void GetLocationResponse::set_compass_heading(double value) {
  _internal_set_compass_heading(value);
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.GetLocationResponse.compass_heading)
}
inline double GetLocationResponse::_internal_compass_heading() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.compass_heading_;
}
inline void GetLocationResponse::_internal_set_compass_heading(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.compass_heading_ = value;
}

// -------------------------------------------------------------------

// GetWaypointsRequest

// string name = 1 [json_name = "name"];
inline void GetWaypointsRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetWaypointsRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetWaypointsRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetWaypointsRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.GetWaypointsRequest.name)
}
inline std::string* GetWaypointsRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetWaypointsRequest.name)
  return _s;
}
inline const std::string& GetWaypointsRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetWaypointsRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetWaypointsRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetWaypointsRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.GetWaypointsRequest.name)
  return _impl_.name_.Release();
}
inline void GetWaypointsRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.GetWaypointsRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetWaypointsRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetWaypointsRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetWaypointsRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetWaypointsRequest.extra)
  return _internal_extra();
}
inline void GetWaypointsRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.navigation.v1.GetWaypointsRequest.extra)
}
inline ::google::protobuf::Struct* GetWaypointsRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetWaypointsRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.GetWaypointsRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetWaypointsRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetWaypointsRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetWaypointsRequest.extra)
  return _msg;
}
inline void GetWaypointsRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.GetWaypointsRequest.extra)
}

// -------------------------------------------------------------------

// GetWaypointsResponse

// repeated .viam.service.navigation.v1.Waypoint waypoints = 1 [json_name = "waypoints"];
inline int GetWaypointsResponse::_internal_waypoints_size() const {
  return _internal_waypoints().size();
}
inline int GetWaypointsResponse::waypoints_size() const {
  return _internal_waypoints_size();
}
inline void GetWaypointsResponse::clear_waypoints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.waypoints_.Clear();
}
inline ::viam::service::navigation::v1::Waypoint* GetWaypointsResponse::mutable_waypoints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetWaypointsResponse.waypoints)
  return _internal_mutable_waypoints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::navigation::v1::Waypoint>* GetWaypointsResponse::mutable_waypoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.navigation.v1.GetWaypointsResponse.waypoints)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_waypoints();
}
inline const ::viam::service::navigation::v1::Waypoint& GetWaypointsResponse::waypoints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetWaypointsResponse.waypoints)
  return _internal_waypoints().Get(index);
}
inline ::viam::service::navigation::v1::Waypoint* GetWaypointsResponse::add_waypoints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::service::navigation::v1::Waypoint* _add = _internal_mutable_waypoints()->Add();
  // @@protoc_insertion_point(field_add:viam.service.navigation.v1.GetWaypointsResponse.waypoints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::navigation::v1::Waypoint>& GetWaypointsResponse::waypoints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.navigation.v1.GetWaypointsResponse.waypoints)
  return _internal_waypoints();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::navigation::v1::Waypoint>&
GetWaypointsResponse::_internal_waypoints() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.waypoints_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::navigation::v1::Waypoint>*
GetWaypointsResponse::_internal_mutable_waypoints() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.waypoints_;
}

// -------------------------------------------------------------------

// AddWaypointRequest

// string name = 1 [json_name = "name"];
inline void AddWaypointRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& AddWaypointRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.AddWaypointRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddWaypointRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.AddWaypointRequest.name)
}
inline std::string* AddWaypointRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.AddWaypointRequest.name)
  return _s;
}
inline const std::string& AddWaypointRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void AddWaypointRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* AddWaypointRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* AddWaypointRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.AddWaypointRequest.name)
  return _impl_.name_.Release();
}
inline void AddWaypointRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.AddWaypointRequest.name)
}

// .viam.common.v1.GeoPoint location = 2 [json_name = "location"];
inline bool AddWaypointRequest::has_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.location_ != nullptr);
  return value;
}
inline const ::viam::common::v1::GeoPoint& AddWaypointRequest::_internal_location() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::GeoPoint* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::GeoPoint&>(::viam::common::v1::_GeoPoint_default_instance_);
}
inline const ::viam::common::v1::GeoPoint& AddWaypointRequest::location() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.AddWaypointRequest.location)
  return _internal_location();
}
inline void AddWaypointRequest::unsafe_arena_set_allocated_location(::viam::common::v1::GeoPoint* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.navigation.v1.AddWaypointRequest.location)
}
inline ::viam::common::v1::GeoPoint* AddWaypointRequest::release_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::GeoPoint* released = _impl_.location_;
  _impl_.location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::GeoPoint* AddWaypointRequest::unsafe_arena_release_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.AddWaypointRequest.location)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::GeoPoint* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::viam::common::v1::GeoPoint* AddWaypointRequest::_internal_mutable_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.location_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::GeoPoint>(GetArena());
    _impl_.location_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(p);
  }
  return _impl_.location_;
}
inline ::viam::common::v1::GeoPoint* AddWaypointRequest::mutable_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::GeoPoint* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.AddWaypointRequest.location)
  return _msg;
}
inline void AddWaypointRequest::set_allocated_location(::viam::common::v1::GeoPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.location_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.AddWaypointRequest.location)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool AddWaypointRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& AddWaypointRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& AddWaypointRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.AddWaypointRequest.extra)
  return _internal_extra();
}
inline void AddWaypointRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.navigation.v1.AddWaypointRequest.extra)
}
inline ::google::protobuf::Struct* AddWaypointRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* AddWaypointRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.AddWaypointRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* AddWaypointRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* AddWaypointRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.AddWaypointRequest.extra)
  return _msg;
}
inline void AddWaypointRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.AddWaypointRequest.extra)
}

// -------------------------------------------------------------------

// AddWaypointResponse

// -------------------------------------------------------------------

// RemoveWaypointRequest

// string name = 1 [json_name = "name"];
inline void RemoveWaypointRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& RemoveWaypointRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.RemoveWaypointRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveWaypointRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.RemoveWaypointRequest.name)
}
inline std::string* RemoveWaypointRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.RemoveWaypointRequest.name)
  return _s;
}
inline const std::string& RemoveWaypointRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void RemoveWaypointRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* RemoveWaypointRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* RemoveWaypointRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.RemoveWaypointRequest.name)
  return _impl_.name_.Release();
}
inline void RemoveWaypointRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.RemoveWaypointRequest.name)
}

// string id = 2 [json_name = "id"];
inline void RemoveWaypointRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& RemoveWaypointRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.RemoveWaypointRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveWaypointRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.RemoveWaypointRequest.id)
}
inline std::string* RemoveWaypointRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.RemoveWaypointRequest.id)
  return _s;
}
inline const std::string& RemoveWaypointRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void RemoveWaypointRequest::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* RemoveWaypointRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* RemoveWaypointRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.RemoveWaypointRequest.id)
  return _impl_.id_.Release();
}
inline void RemoveWaypointRequest::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.RemoveWaypointRequest.id)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool RemoveWaypointRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& RemoveWaypointRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& RemoveWaypointRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.RemoveWaypointRequest.extra)
  return _internal_extra();
}
inline void RemoveWaypointRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.navigation.v1.RemoveWaypointRequest.extra)
}
inline ::google::protobuf::Struct* RemoveWaypointRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* RemoveWaypointRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.RemoveWaypointRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* RemoveWaypointRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* RemoveWaypointRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.RemoveWaypointRequest.extra)
  return _msg;
}
inline void RemoveWaypointRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.RemoveWaypointRequest.extra)
}

// -------------------------------------------------------------------

// RemoveWaypointResponse

// -------------------------------------------------------------------

// GetObstaclesRequest

// string name = 1 [json_name = "name"];
inline void GetObstaclesRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetObstaclesRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetObstaclesRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetObstaclesRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.GetObstaclesRequest.name)
}
inline std::string* GetObstaclesRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetObstaclesRequest.name)
  return _s;
}
inline const std::string& GetObstaclesRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetObstaclesRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetObstaclesRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetObstaclesRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.GetObstaclesRequest.name)
  return _impl_.name_.Release();
}
inline void GetObstaclesRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.GetObstaclesRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetObstaclesRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetObstaclesRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetObstaclesRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetObstaclesRequest.extra)
  return _internal_extra();
}
inline void GetObstaclesRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.navigation.v1.GetObstaclesRequest.extra)
}
inline ::google::protobuf::Struct* GetObstaclesRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetObstaclesRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.GetObstaclesRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetObstaclesRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetObstaclesRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetObstaclesRequest.extra)
  return _msg;
}
inline void GetObstaclesRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.GetObstaclesRequest.extra)
}

// -------------------------------------------------------------------

// GetObstaclesResponse

// repeated .viam.common.v1.GeoGeometry obstacles = 1 [json_name = "obstacles"];
inline int GetObstaclesResponse::_internal_obstacles_size() const {
  return _internal_obstacles().size();
}
inline int GetObstaclesResponse::obstacles_size() const {
  return _internal_obstacles_size();
}
inline ::viam::common::v1::GeoGeometry* GetObstaclesResponse::mutable_obstacles(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetObstaclesResponse.obstacles)
  return _internal_mutable_obstacles()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeoGeometry>* GetObstaclesResponse::mutable_obstacles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.navigation.v1.GetObstaclesResponse.obstacles)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_obstacles();
}
inline const ::viam::common::v1::GeoGeometry& GetObstaclesResponse::obstacles(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetObstaclesResponse.obstacles)
  return _internal_obstacles().Get(index);
}
inline ::viam::common::v1::GeoGeometry* GetObstaclesResponse::add_obstacles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::GeoGeometry* _add = _internal_mutable_obstacles()->Add();
  // @@protoc_insertion_point(field_add:viam.service.navigation.v1.GetObstaclesResponse.obstacles)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeoGeometry>& GetObstaclesResponse::obstacles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.navigation.v1.GetObstaclesResponse.obstacles)
  return _internal_obstacles();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeoGeometry>&
GetObstaclesResponse::_internal_obstacles() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.obstacles_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeoGeometry>*
GetObstaclesResponse::_internal_mutable_obstacles() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.obstacles_;
}

// -------------------------------------------------------------------

// Path

// string destination_waypoint_id = 1 [json_name = "destinationWaypointId"];
inline void Path::clear_destination_waypoint_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.destination_waypoint_id_.ClearToEmpty();
}
inline const std::string& Path::destination_waypoint_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.Path.destination_waypoint_id)
  return _internal_destination_waypoint_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Path::set_destination_waypoint_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.destination_waypoint_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.Path.destination_waypoint_id)
}
inline std::string* Path::mutable_destination_waypoint_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_destination_waypoint_id();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.Path.destination_waypoint_id)
  return _s;
}
inline const std::string& Path::_internal_destination_waypoint_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.destination_waypoint_id_.Get();
}
inline void Path::_internal_set_destination_waypoint_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.destination_waypoint_id_.Set(value, GetArena());
}
inline std::string* Path::_internal_mutable_destination_waypoint_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.destination_waypoint_id_.Mutable( GetArena());
}
inline std::string* Path::release_destination_waypoint_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.Path.destination_waypoint_id)
  return _impl_.destination_waypoint_id_.Release();
}
inline void Path::set_allocated_destination_waypoint_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.destination_waypoint_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.destination_waypoint_id_.IsDefault()) {
          _impl_.destination_waypoint_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.Path.destination_waypoint_id)
}

// repeated .viam.common.v1.GeoPoint geopoints = 2 [json_name = "geopoints"];
inline int Path::_internal_geopoints_size() const {
  return _internal_geopoints().size();
}
inline int Path::geopoints_size() const {
  return _internal_geopoints_size();
}
inline ::viam::common::v1::GeoPoint* Path::mutable_geopoints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.Path.geopoints)
  return _internal_mutable_geopoints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeoPoint>* Path::mutable_geopoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.navigation.v1.Path.geopoints)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_geopoints();
}
inline const ::viam::common::v1::GeoPoint& Path::geopoints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.Path.geopoints)
  return _internal_geopoints().Get(index);
}
inline ::viam::common::v1::GeoPoint* Path::add_geopoints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::GeoPoint* _add = _internal_mutable_geopoints()->Add();
  // @@protoc_insertion_point(field_add:viam.service.navigation.v1.Path.geopoints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeoPoint>& Path::geopoints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.navigation.v1.Path.geopoints)
  return _internal_geopoints();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeoPoint>&
Path::_internal_geopoints() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.geopoints_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeoPoint>*
Path::_internal_mutable_geopoints() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.geopoints_;
}

// -------------------------------------------------------------------

// GetPathsRequest

// string name = 1 [json_name = "name"];
inline void GetPathsRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetPathsRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetPathsRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetPathsRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.GetPathsRequest.name)
}
inline std::string* GetPathsRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetPathsRequest.name)
  return _s;
}
inline const std::string& GetPathsRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetPathsRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetPathsRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetPathsRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.GetPathsRequest.name)
  return _impl_.name_.Release();
}
inline void GetPathsRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.GetPathsRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetPathsRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetPathsRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetPathsRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetPathsRequest.extra)
  return _internal_extra();
}
inline void GetPathsRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.navigation.v1.GetPathsRequest.extra)
}
inline ::google::protobuf::Struct* GetPathsRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetPathsRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.GetPathsRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetPathsRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetPathsRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetPathsRequest.extra)
  return _msg;
}
inline void GetPathsRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.GetPathsRequest.extra)
}

// -------------------------------------------------------------------

// GetPathsResponse

// repeated .viam.service.navigation.v1.Path paths = 1 [json_name = "paths"];
inline int GetPathsResponse::_internal_paths_size() const {
  return _internal_paths().size();
}
inline int GetPathsResponse::paths_size() const {
  return _internal_paths_size();
}
inline void GetPathsResponse::clear_paths() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.paths_.Clear();
}
inline ::viam::service::navigation::v1::Path* GetPathsResponse::mutable_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetPathsResponse.paths)
  return _internal_mutable_paths()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::navigation::v1::Path>* GetPathsResponse::mutable_paths()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.navigation.v1.GetPathsResponse.paths)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_paths();
}
inline const ::viam::service::navigation::v1::Path& GetPathsResponse::paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetPathsResponse.paths)
  return _internal_paths().Get(index);
}
inline ::viam::service::navigation::v1::Path* GetPathsResponse::add_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::service::navigation::v1::Path* _add = _internal_mutable_paths()->Add();
  // @@protoc_insertion_point(field_add:viam.service.navigation.v1.GetPathsResponse.paths)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::navigation::v1::Path>& GetPathsResponse::paths() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.navigation.v1.GetPathsResponse.paths)
  return _internal_paths();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::navigation::v1::Path>&
GetPathsResponse::_internal_paths() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.paths_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::navigation::v1::Path>*
GetPathsResponse::_internal_mutable_paths() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.paths_;
}

// -------------------------------------------------------------------

// GetPropertiesRequest

// string name = 1 [json_name = "name"];
inline void GetPropertiesRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetPropertiesRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetPropertiesRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetPropertiesRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.GetPropertiesRequest.name)
}
inline std::string* GetPropertiesRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.navigation.v1.GetPropertiesRequest.name)
  return _s;
}
inline const std::string& GetPropertiesRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetPropertiesRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetPropertiesRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetPropertiesRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.navigation.v1.GetPropertiesRequest.name)
  return _impl_.name_.Release();
}
inline void GetPropertiesRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.navigation.v1.GetPropertiesRequest.name)
}

// -------------------------------------------------------------------

// GetPropertiesResponse

// .viam.service.navigation.v1.MapType map_type = 1 [json_name = "mapType"];
inline void GetPropertiesResponse::clear_map_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_type_ = 0;
}
inline ::viam::service::navigation::v1::MapType GetPropertiesResponse::map_type() const {
  // @@protoc_insertion_point(field_get:viam.service.navigation.v1.GetPropertiesResponse.map_type)
  return _internal_map_type();
}
inline void GetPropertiesResponse::set_map_type(::viam::service::navigation::v1::MapType value) {
  _internal_set_map_type(value);
  // @@protoc_insertion_point(field_set:viam.service.navigation.v1.GetPropertiesResponse.map_type)
}
inline ::viam::service::navigation::v1::MapType GetPropertiesResponse::_internal_map_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::viam::service::navigation::v1::MapType>(_impl_.map_type_);
}
inline void GetPropertiesResponse::_internal_set_map_type(::viam::service::navigation::v1::MapType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.map_type_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace navigation
}  // namespace service
}  // namespace viam


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::viam::service::navigation::v1::MapType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::viam::service::navigation::v1::MapType>() {
  return ::viam::service::navigation::v1::MapType_descriptor();
}
template <>
struct is_proto_enum<::viam::service::navigation::v1::Mode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::viam::service::navigation::v1::Mode>() {
  return ::viam::service::navigation::v1::Mode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_service_2fnavigation_2fv1_2fnavigation_2eproto_2epb_2eh
