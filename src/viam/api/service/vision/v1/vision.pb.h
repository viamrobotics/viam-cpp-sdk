// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/vision/v1/vision.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_service_2fvision_2fv1_2fvision_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_service_2fvision_2fv1_2fvision_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "common/v1/common.pb.h"
#include "component/camera/v1/camera.pb.h"
#include "google/api/annotations.pb.h"
#include "google/protobuf/struct.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_service_2fvision_2fv1_2fvision_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_service_2fvision_2fv1_2fvision_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_service_2fvision_2fv1_2fvision_2eproto;
namespace viam {
namespace service {
namespace vision {
namespace v1 {
class CaptureAllFromCameraRequest;
struct CaptureAllFromCameraRequestDefaultTypeInternal;
extern CaptureAllFromCameraRequestDefaultTypeInternal _CaptureAllFromCameraRequest_default_instance_;
class CaptureAllFromCameraResponse;
struct CaptureAllFromCameraResponseDefaultTypeInternal;
extern CaptureAllFromCameraResponseDefaultTypeInternal _CaptureAllFromCameraResponse_default_instance_;
class Classification;
struct ClassificationDefaultTypeInternal;
extern ClassificationDefaultTypeInternal _Classification_default_instance_;
class Detection;
struct DetectionDefaultTypeInternal;
extern DetectionDefaultTypeInternal _Detection_default_instance_;
class GetClassificationsFromCameraRequest;
struct GetClassificationsFromCameraRequestDefaultTypeInternal;
extern GetClassificationsFromCameraRequestDefaultTypeInternal _GetClassificationsFromCameraRequest_default_instance_;
class GetClassificationsFromCameraResponse;
struct GetClassificationsFromCameraResponseDefaultTypeInternal;
extern GetClassificationsFromCameraResponseDefaultTypeInternal _GetClassificationsFromCameraResponse_default_instance_;
class GetClassificationsRequest;
struct GetClassificationsRequestDefaultTypeInternal;
extern GetClassificationsRequestDefaultTypeInternal _GetClassificationsRequest_default_instance_;
class GetClassificationsResponse;
struct GetClassificationsResponseDefaultTypeInternal;
extern GetClassificationsResponseDefaultTypeInternal _GetClassificationsResponse_default_instance_;
class GetDetectionsFromCameraRequest;
struct GetDetectionsFromCameraRequestDefaultTypeInternal;
extern GetDetectionsFromCameraRequestDefaultTypeInternal _GetDetectionsFromCameraRequest_default_instance_;
class GetDetectionsFromCameraResponse;
struct GetDetectionsFromCameraResponseDefaultTypeInternal;
extern GetDetectionsFromCameraResponseDefaultTypeInternal _GetDetectionsFromCameraResponse_default_instance_;
class GetDetectionsRequest;
struct GetDetectionsRequestDefaultTypeInternal;
extern GetDetectionsRequestDefaultTypeInternal _GetDetectionsRequest_default_instance_;
class GetDetectionsResponse;
struct GetDetectionsResponseDefaultTypeInternal;
extern GetDetectionsResponseDefaultTypeInternal _GetDetectionsResponse_default_instance_;
class GetObjectPointCloudsRequest;
struct GetObjectPointCloudsRequestDefaultTypeInternal;
extern GetObjectPointCloudsRequestDefaultTypeInternal _GetObjectPointCloudsRequest_default_instance_;
class GetObjectPointCloudsResponse;
struct GetObjectPointCloudsResponseDefaultTypeInternal;
extern GetObjectPointCloudsResponseDefaultTypeInternal _GetObjectPointCloudsResponse_default_instance_;
class GetPropertiesRequest;
struct GetPropertiesRequestDefaultTypeInternal;
extern GetPropertiesRequestDefaultTypeInternal _GetPropertiesRequest_default_instance_;
class GetPropertiesResponse;
struct GetPropertiesResponseDefaultTypeInternal;
extern GetPropertiesResponseDefaultTypeInternal _GetPropertiesResponse_default_instance_;
}  // namespace v1
}  // namespace vision
}  // namespace service
}  // namespace viam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace viam {
namespace service {
namespace vision {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class GetPropertiesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.GetPropertiesResponse) */ {
 public:
  inline GetPropertiesResponse() : GetPropertiesResponse(nullptr) {}
  ~GetPropertiesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPropertiesResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetPropertiesResponse(const GetPropertiesResponse& from)
      : GetPropertiesResponse(nullptr, from) {}
  GetPropertiesResponse(GetPropertiesResponse&& from) noexcept
    : GetPropertiesResponse() {
    *this = ::std::move(from);
  }

  inline GetPropertiesResponse& operator=(const GetPropertiesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPropertiesResponse& operator=(GetPropertiesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPropertiesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPropertiesResponse* internal_default_instance() {
    return reinterpret_cast<const GetPropertiesResponse*>(
               &_GetPropertiesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(GetPropertiesResponse& a, GetPropertiesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPropertiesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPropertiesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPropertiesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPropertiesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPropertiesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPropertiesResponse& from) {
    GetPropertiesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPropertiesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.GetPropertiesResponse";
  }
  protected:
  explicit GetPropertiesResponse(::google::protobuf::Arena* arena);
  GetPropertiesResponse(::google::protobuf::Arena* arena, const GetPropertiesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClassificationsSupportedFieldNumber = 1,
    kDetectionsSupportedFieldNumber = 2,
    kObjectPointCloudsSupportedFieldNumber = 3,
  };
  // bool classifications_supported = 1 [json_name = "classificationsSupported"];
  void clear_classifications_supported() ;
  bool classifications_supported() const;
  void set_classifications_supported(bool value);

  private:
  bool _internal_classifications_supported() const;
  void _internal_set_classifications_supported(bool value);

  public:
  // bool detections_supported = 2 [json_name = "detectionsSupported"];
  void clear_detections_supported() ;
  bool detections_supported() const;
  void set_detections_supported(bool value);

  private:
  bool _internal_detections_supported() const;
  void _internal_set_detections_supported(bool value);

  public:
  // bool object_point_clouds_supported = 3 [json_name = "objectPointCloudsSupported"];
  void clear_object_point_clouds_supported() ;
  bool object_point_clouds_supported() const;
  void set_object_point_clouds_supported(bool value);

  private:
  bool _internal_object_point_clouds_supported() const;
  void _internal_set_object_point_clouds_supported(bool value);

  public:
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.GetPropertiesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool classifications_supported_;
    bool detections_supported_;
    bool object_point_clouds_supported_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class Detection final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.Detection) */ {
 public:
  inline Detection() : Detection(nullptr) {}
  ~Detection() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Detection(::google::protobuf::internal::ConstantInitialized);

  inline Detection(const Detection& from)
      : Detection(nullptr, from) {}
  Detection(Detection&& from) noexcept
    : Detection() {
    *this = ::std::move(from);
  }

  inline Detection& operator=(const Detection& from) {
    CopyFrom(from);
    return *this;
  }
  inline Detection& operator=(Detection&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Detection& default_instance() {
    return *internal_default_instance();
  }
  static inline const Detection* internal_default_instance() {
    return reinterpret_cast<const Detection*>(
               &_Detection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Detection& a, Detection& b) {
    a.Swap(&b);
  }
  inline void Swap(Detection* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Detection* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Detection* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Detection>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Detection& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Detection& from) {
    Detection::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Detection* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.Detection";
  }
  protected:
  explicit Detection(::google::protobuf::Arena* arena);
  Detection(::google::protobuf::Arena* arena, const Detection& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClassNameFieldNumber = 6,
    kXMinFieldNumber = 1,
    kYMinFieldNumber = 2,
    kXMaxFieldNumber = 3,
    kYMaxFieldNumber = 4,
    kConfidenceFieldNumber = 5,
  };
  // string class_name = 6 [json_name = "className"];
  void clear_class_name() ;
  const std::string& class_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_class_name(Arg_&& arg, Args_... args);
  std::string* mutable_class_name();
  PROTOBUF_NODISCARD std::string* release_class_name();
  void set_allocated_class_name(std::string* value);

  private:
  const std::string& _internal_class_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_class_name(
      const std::string& value);
  std::string* _internal_mutable_class_name();

  public:
  // optional int64 x_min = 1 [json_name = "xMin"];
  bool has_x_min() const;
  void clear_x_min() ;
  ::int64_t x_min() const;
  void set_x_min(::int64_t value);

  private:
  ::int64_t _internal_x_min() const;
  void _internal_set_x_min(::int64_t value);

  public:
  // optional int64 y_min = 2 [json_name = "yMin"];
  bool has_y_min() const;
  void clear_y_min() ;
  ::int64_t y_min() const;
  void set_y_min(::int64_t value);

  private:
  ::int64_t _internal_y_min() const;
  void _internal_set_y_min(::int64_t value);

  public:
  // optional int64 x_max = 3 [json_name = "xMax"];
  bool has_x_max() const;
  void clear_x_max() ;
  ::int64_t x_max() const;
  void set_x_max(::int64_t value);

  private:
  ::int64_t _internal_x_max() const;
  void _internal_set_x_max(::int64_t value);

  public:
  // optional int64 y_max = 4 [json_name = "yMax"];
  bool has_y_max() const;
  void clear_y_max() ;
  ::int64_t y_max() const;
  void set_y_max(::int64_t value);

  private:
  ::int64_t _internal_y_max() const;
  void _internal_set_y_max(::int64_t value);

  public:
  // double confidence = 5 [json_name = "confidence"];
  void clear_confidence() ;
  double confidence() const;
  void set_confidence(double value);

  private:
  double _internal_confidence() const;
  void _internal_set_confidence(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.Detection)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      51, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr class_name_;
    ::int64_t x_min_;
    ::int64_t y_min_;
    ::int64_t x_max_;
    ::int64_t y_max_;
    double confidence_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class Classification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.Classification) */ {
 public:
  inline Classification() : Classification(nullptr) {}
  ~Classification() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Classification(::google::protobuf::internal::ConstantInitialized);

  inline Classification(const Classification& from)
      : Classification(nullptr, from) {}
  Classification(Classification&& from) noexcept
    : Classification() {
    *this = ::std::move(from);
  }

  inline Classification& operator=(const Classification& from) {
    CopyFrom(from);
    return *this;
  }
  inline Classification& operator=(Classification&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Classification& default_instance() {
    return *internal_default_instance();
  }
  static inline const Classification* internal_default_instance() {
    return reinterpret_cast<const Classification*>(
               &_Classification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Classification& a, Classification& b) {
    a.Swap(&b);
  }
  inline void Swap(Classification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Classification* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Classification* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Classification>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Classification& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Classification& from) {
    Classification::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Classification* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.Classification";
  }
  protected:
  explicit Classification(::google::protobuf::Arena* arena);
  Classification(::google::protobuf::Arena* arena, const Classification& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClassNameFieldNumber = 1,
    kConfidenceFieldNumber = 2,
  };
  // string class_name = 1 [json_name = "className"];
  void clear_class_name() ;
  const std::string& class_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_class_name(Arg_&& arg, Args_... args);
  std::string* mutable_class_name();
  PROTOBUF_NODISCARD std::string* release_class_name();
  void set_allocated_class_name(std::string* value);

  private:
  const std::string& _internal_class_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_class_name(
      const std::string& value);
  std::string* _internal_mutable_class_name();

  public:
  // double confidence = 2 [json_name = "confidence"];
  void clear_confidence() ;
  double confidence() const;
  void set_confidence(double value);

  private:
  double _internal_confidence() const;
  void _internal_set_confidence(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.Classification)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr class_name_;
    double confidence_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class GetPropertiesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.GetPropertiesRequest) */ {
 public:
  inline GetPropertiesRequest() : GetPropertiesRequest(nullptr) {}
  ~GetPropertiesRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPropertiesRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetPropertiesRequest(const GetPropertiesRequest& from)
      : GetPropertiesRequest(nullptr, from) {}
  GetPropertiesRequest(GetPropertiesRequest&& from) noexcept
    : GetPropertiesRequest() {
    *this = ::std::move(from);
  }

  inline GetPropertiesRequest& operator=(const GetPropertiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPropertiesRequest& operator=(GetPropertiesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPropertiesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPropertiesRequest* internal_default_instance() {
    return reinterpret_cast<const GetPropertiesRequest*>(
               &_GetPropertiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GetPropertiesRequest& a, GetPropertiesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPropertiesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPropertiesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPropertiesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPropertiesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPropertiesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPropertiesRequest& from) {
    GetPropertiesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPropertiesRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.GetPropertiesRequest";
  }
  protected:
  explicit GetPropertiesRequest(::google::protobuf::Arena* arena);
  GetPropertiesRequest(::google::protobuf::Arena* arena, const GetPropertiesRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.GetPropertiesRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      56, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class GetObjectPointCloudsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.GetObjectPointCloudsRequest) */ {
 public:
  inline GetObjectPointCloudsRequest() : GetObjectPointCloudsRequest(nullptr) {}
  ~GetObjectPointCloudsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetObjectPointCloudsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetObjectPointCloudsRequest(const GetObjectPointCloudsRequest& from)
      : GetObjectPointCloudsRequest(nullptr, from) {}
  GetObjectPointCloudsRequest(GetObjectPointCloudsRequest&& from) noexcept
    : GetObjectPointCloudsRequest() {
    *this = ::std::move(from);
  }

  inline GetObjectPointCloudsRequest& operator=(const GetObjectPointCloudsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetObjectPointCloudsRequest& operator=(GetObjectPointCloudsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetObjectPointCloudsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetObjectPointCloudsRequest* internal_default_instance() {
    return reinterpret_cast<const GetObjectPointCloudsRequest*>(
               &_GetObjectPointCloudsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(GetObjectPointCloudsRequest& a, GetObjectPointCloudsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetObjectPointCloudsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetObjectPointCloudsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetObjectPointCloudsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetObjectPointCloudsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetObjectPointCloudsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetObjectPointCloudsRequest& from) {
    GetObjectPointCloudsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetObjectPointCloudsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.GetObjectPointCloudsRequest";
  }
  protected:
  explicit GetObjectPointCloudsRequest(::google::protobuf::Arena* arena);
  GetObjectPointCloudsRequest(::google::protobuf::Arena* arena, const GetObjectPointCloudsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kCameraNameFieldNumber = 2,
    kMimeTypeFieldNumber = 3,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string camera_name = 2 [json_name = "cameraName"];
  void clear_camera_name() ;
  const std::string& camera_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_camera_name(Arg_&& arg, Args_... args);
  std::string* mutable_camera_name();
  PROTOBUF_NODISCARD std::string* release_camera_name();
  void set_allocated_camera_name(std::string* value);

  private:
  const std::string& _internal_camera_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_camera_name(
      const std::string& value);
  std::string* _internal_mutable_camera_name();

  public:
  // string mime_type = 3 [json_name = "mimeType"];
  void clear_mime_type() ;
  const std::string& mime_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mime_type(Arg_&& arg, Args_... args);
  std::string* mutable_mime_type();
  PROTOBUF_NODISCARD std::string* release_mime_type();
  void set_allocated_mime_type(std::string* value);

  private:
  const std::string& _internal_mime_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mime_type(
      const std::string& value);
  std::string* _internal_mutable_mime_type();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.GetObjectPointCloudsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      83, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr camera_name_;
    ::google::protobuf::internal::ArenaStringPtr mime_type_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class GetDetectionsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.GetDetectionsResponse) */ {
 public:
  inline GetDetectionsResponse() : GetDetectionsResponse(nullptr) {}
  ~GetDetectionsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetDetectionsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetDetectionsResponse(const GetDetectionsResponse& from)
      : GetDetectionsResponse(nullptr, from) {}
  GetDetectionsResponse(GetDetectionsResponse&& from) noexcept
    : GetDetectionsResponse() {
    *this = ::std::move(from);
  }

  inline GetDetectionsResponse& operator=(const GetDetectionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDetectionsResponse& operator=(GetDetectionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDetectionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDetectionsResponse* internal_default_instance() {
    return reinterpret_cast<const GetDetectionsResponse*>(
               &_GetDetectionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetDetectionsResponse& a, GetDetectionsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDetectionsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDetectionsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDetectionsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetDetectionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetDetectionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetDetectionsResponse& from) {
    GetDetectionsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetDetectionsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.GetDetectionsResponse";
  }
  protected:
  explicit GetDetectionsResponse(::google::protobuf::Arena* arena);
  GetDetectionsResponse(::google::protobuf::Arena* arena, const GetDetectionsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDetectionsFieldNumber = 1,
  };
  // repeated .viam.service.vision.v1.Detection detections = 1 [json_name = "detections"];
  int detections_size() const;
  private:
  int _internal_detections_size() const;

  public:
  void clear_detections() ;
  ::viam::service::vision::v1::Detection* mutable_detections(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Detection >*
      mutable_detections();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>& _internal_detections() const;
  ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>* _internal_mutable_detections();
  public:
  const ::viam::service::vision::v1::Detection& detections(int index) const;
  ::viam::service::vision::v1::Detection* add_detections();
  const ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Detection >&
      detections() const;
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.GetDetectionsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Detection > detections_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class GetDetectionsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.GetDetectionsRequest) */ {
 public:
  inline GetDetectionsRequest() : GetDetectionsRequest(nullptr) {}
  ~GetDetectionsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetDetectionsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetDetectionsRequest(const GetDetectionsRequest& from)
      : GetDetectionsRequest(nullptr, from) {}
  GetDetectionsRequest(GetDetectionsRequest&& from) noexcept
    : GetDetectionsRequest() {
    *this = ::std::move(from);
  }

  inline GetDetectionsRequest& operator=(const GetDetectionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDetectionsRequest& operator=(GetDetectionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDetectionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDetectionsRequest* internal_default_instance() {
    return reinterpret_cast<const GetDetectionsRequest*>(
               &_GetDetectionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetDetectionsRequest& a, GetDetectionsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDetectionsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDetectionsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDetectionsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetDetectionsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetDetectionsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetDetectionsRequest& from) {
    GetDetectionsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetDetectionsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.GetDetectionsRequest";
  }
  protected:
  explicit GetDetectionsRequest(::google::protobuf::Arena* arena);
  GetDetectionsRequest(::google::protobuf::Arena* arena, const GetDetectionsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kImageFieldNumber = 2,
    kMimeTypeFieldNumber = 5,
    kExtraFieldNumber = 99,
    kWidthFieldNumber = 3,
    kHeightFieldNumber = 4,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // bytes image = 2 [json_name = "image"];
  void clear_image() ;
  const std::string& image() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_image(Arg_&& arg, Args_... args);
  std::string* mutable_image();
  PROTOBUF_NODISCARD std::string* release_image();
  void set_allocated_image(std::string* value);

  private:
  const std::string& _internal_image() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image(
      const std::string& value);
  std::string* _internal_mutable_image();

  public:
  // string mime_type = 5 [json_name = "mimeType"];
  void clear_mime_type() ;
  const std::string& mime_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mime_type(Arg_&& arg, Args_... args);
  std::string* mutable_mime_type();
  PROTOBUF_NODISCARD std::string* release_mime_type();
  void set_allocated_mime_type(std::string* value);

  private:
  const std::string& _internal_mime_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mime_type(
      const std::string& value);
  std::string* _internal_mutable_mime_type();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // int64 width = 3 [json_name = "width"];
  void clear_width() ;
  ::int64_t width() const;
  void set_width(::int64_t value);

  private:
  ::int64_t _internal_width() const;
  void _internal_set_width(::int64_t value);

  public:
  // int64 height = 4 [json_name = "height"];
  void clear_height() ;
  ::int64_t height() const;
  void set_height(::int64_t value);

  private:
  ::int64_t _internal_height() const;
  void _internal_set_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.GetDetectionsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      65, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr image_;
    ::google::protobuf::internal::ArenaStringPtr mime_type_;
    ::google::protobuf::Struct* extra_;
    ::int64_t width_;
    ::int64_t height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class GetDetectionsFromCameraResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.GetDetectionsFromCameraResponse) */ {
 public:
  inline GetDetectionsFromCameraResponse() : GetDetectionsFromCameraResponse(nullptr) {}
  ~GetDetectionsFromCameraResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetDetectionsFromCameraResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetDetectionsFromCameraResponse(const GetDetectionsFromCameraResponse& from)
      : GetDetectionsFromCameraResponse(nullptr, from) {}
  GetDetectionsFromCameraResponse(GetDetectionsFromCameraResponse&& from) noexcept
    : GetDetectionsFromCameraResponse() {
    *this = ::std::move(from);
  }

  inline GetDetectionsFromCameraResponse& operator=(const GetDetectionsFromCameraResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDetectionsFromCameraResponse& operator=(GetDetectionsFromCameraResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDetectionsFromCameraResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDetectionsFromCameraResponse* internal_default_instance() {
    return reinterpret_cast<const GetDetectionsFromCameraResponse*>(
               &_GetDetectionsFromCameraResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetDetectionsFromCameraResponse& a, GetDetectionsFromCameraResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDetectionsFromCameraResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDetectionsFromCameraResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDetectionsFromCameraResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetDetectionsFromCameraResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetDetectionsFromCameraResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetDetectionsFromCameraResponse& from) {
    GetDetectionsFromCameraResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetDetectionsFromCameraResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.GetDetectionsFromCameraResponse";
  }
  protected:
  explicit GetDetectionsFromCameraResponse(::google::protobuf::Arena* arena);
  GetDetectionsFromCameraResponse(::google::protobuf::Arena* arena, const GetDetectionsFromCameraResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDetectionsFieldNumber = 1,
  };
  // repeated .viam.service.vision.v1.Detection detections = 1 [json_name = "detections"];
  int detections_size() const;
  private:
  int _internal_detections_size() const;

  public:
  void clear_detections() ;
  ::viam::service::vision::v1::Detection* mutable_detections(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Detection >*
      mutable_detections();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>& _internal_detections() const;
  ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>* _internal_mutable_detections();
  public:
  const ::viam::service::vision::v1::Detection& detections(int index) const;
  ::viam::service::vision::v1::Detection* add_detections();
  const ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Detection >&
      detections() const;
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.GetDetectionsFromCameraResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Detection > detections_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class GetDetectionsFromCameraRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.GetDetectionsFromCameraRequest) */ {
 public:
  inline GetDetectionsFromCameraRequest() : GetDetectionsFromCameraRequest(nullptr) {}
  ~GetDetectionsFromCameraRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetDetectionsFromCameraRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetDetectionsFromCameraRequest(const GetDetectionsFromCameraRequest& from)
      : GetDetectionsFromCameraRequest(nullptr, from) {}
  GetDetectionsFromCameraRequest(GetDetectionsFromCameraRequest&& from) noexcept
    : GetDetectionsFromCameraRequest() {
    *this = ::std::move(from);
  }

  inline GetDetectionsFromCameraRequest& operator=(const GetDetectionsFromCameraRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDetectionsFromCameraRequest& operator=(GetDetectionsFromCameraRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDetectionsFromCameraRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDetectionsFromCameraRequest* internal_default_instance() {
    return reinterpret_cast<const GetDetectionsFromCameraRequest*>(
               &_GetDetectionsFromCameraRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetDetectionsFromCameraRequest& a, GetDetectionsFromCameraRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDetectionsFromCameraRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDetectionsFromCameraRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDetectionsFromCameraRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetDetectionsFromCameraRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetDetectionsFromCameraRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetDetectionsFromCameraRequest& from) {
    GetDetectionsFromCameraRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetDetectionsFromCameraRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.GetDetectionsFromCameraRequest";
  }
  protected:
  explicit GetDetectionsFromCameraRequest(::google::protobuf::Arena* arena);
  GetDetectionsFromCameraRequest(::google::protobuf::Arena* arena, const GetDetectionsFromCameraRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kCameraNameFieldNumber = 2,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string camera_name = 2 [json_name = "cameraName"];
  void clear_camera_name() ;
  const std::string& camera_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_camera_name(Arg_&& arg, Args_... args);
  std::string* mutable_camera_name();
  PROTOBUF_NODISCARD std::string* release_camera_name();
  void set_allocated_camera_name(std::string* value);

  private:
  const std::string& _internal_camera_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_camera_name(
      const std::string& value);
  std::string* _internal_mutable_camera_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.GetDetectionsFromCameraRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      77, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr camera_name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class GetClassificationsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.GetClassificationsResponse) */ {
 public:
  inline GetClassificationsResponse() : GetClassificationsResponse(nullptr) {}
  ~GetClassificationsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetClassificationsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetClassificationsResponse(const GetClassificationsResponse& from)
      : GetClassificationsResponse(nullptr, from) {}
  GetClassificationsResponse(GetClassificationsResponse&& from) noexcept
    : GetClassificationsResponse() {
    *this = ::std::move(from);
  }

  inline GetClassificationsResponse& operator=(const GetClassificationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetClassificationsResponse& operator=(GetClassificationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetClassificationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetClassificationsResponse* internal_default_instance() {
    return reinterpret_cast<const GetClassificationsResponse*>(
               &_GetClassificationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetClassificationsResponse& a, GetClassificationsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetClassificationsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetClassificationsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetClassificationsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetClassificationsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetClassificationsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetClassificationsResponse& from) {
    GetClassificationsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetClassificationsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.GetClassificationsResponse";
  }
  protected:
  explicit GetClassificationsResponse(::google::protobuf::Arena* arena);
  GetClassificationsResponse(::google::protobuf::Arena* arena, const GetClassificationsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClassificationsFieldNumber = 1,
  };
  // repeated .viam.service.vision.v1.Classification classifications = 1 [json_name = "classifications"];
  int classifications_size() const;
  private:
  int _internal_classifications_size() const;

  public:
  void clear_classifications() ;
  ::viam::service::vision::v1::Classification* mutable_classifications(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Classification >*
      mutable_classifications();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>& _internal_classifications() const;
  ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>* _internal_mutable_classifications();
  public:
  const ::viam::service::vision::v1::Classification& classifications(int index) const;
  ::viam::service::vision::v1::Classification* add_classifications();
  const ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Classification >&
      classifications() const;
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.GetClassificationsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Classification > classifications_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class GetClassificationsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.GetClassificationsRequest) */ {
 public:
  inline GetClassificationsRequest() : GetClassificationsRequest(nullptr) {}
  ~GetClassificationsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetClassificationsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetClassificationsRequest(const GetClassificationsRequest& from)
      : GetClassificationsRequest(nullptr, from) {}
  GetClassificationsRequest(GetClassificationsRequest&& from) noexcept
    : GetClassificationsRequest() {
    *this = ::std::move(from);
  }

  inline GetClassificationsRequest& operator=(const GetClassificationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetClassificationsRequest& operator=(GetClassificationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetClassificationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetClassificationsRequest* internal_default_instance() {
    return reinterpret_cast<const GetClassificationsRequest*>(
               &_GetClassificationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetClassificationsRequest& a, GetClassificationsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetClassificationsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetClassificationsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetClassificationsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetClassificationsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetClassificationsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetClassificationsRequest& from) {
    GetClassificationsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetClassificationsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.GetClassificationsRequest";
  }
  protected:
  explicit GetClassificationsRequest(::google::protobuf::Arena* arena);
  GetClassificationsRequest(::google::protobuf::Arena* arena, const GetClassificationsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kImageFieldNumber = 2,
    kMimeTypeFieldNumber = 5,
    kExtraFieldNumber = 99,
    kWidthFieldNumber = 3,
    kHeightFieldNumber = 4,
    kNFieldNumber = 6,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // bytes image = 2 [json_name = "image"];
  void clear_image() ;
  const std::string& image() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_image(Arg_&& arg, Args_... args);
  std::string* mutable_image();
  PROTOBUF_NODISCARD std::string* release_image();
  void set_allocated_image(std::string* value);

  private:
  const std::string& _internal_image() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image(
      const std::string& value);
  std::string* _internal_mutable_image();

  public:
  // string mime_type = 5 [json_name = "mimeType"];
  void clear_mime_type() ;
  const std::string& mime_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mime_type(Arg_&& arg, Args_... args);
  std::string* mutable_mime_type();
  PROTOBUF_NODISCARD std::string* release_mime_type();
  void set_allocated_mime_type(std::string* value);

  private:
  const std::string& _internal_mime_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mime_type(
      const std::string& value);
  std::string* _internal_mutable_mime_type();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // int32 width = 3 [json_name = "width"];
  void clear_width() ;
  ::int32_t width() const;
  void set_width(::int32_t value);

  private:
  ::int32_t _internal_width() const;
  void _internal_set_width(::int32_t value);

  public:
  // int32 height = 4 [json_name = "height"];
  void clear_height() ;
  ::int32_t height() const;
  void set_height(::int32_t value);

  private:
  ::int32_t _internal_height() const;
  void _internal_set_height(::int32_t value);

  public:
  // int32 n = 6 [json_name = "n"];
  void clear_n() ;
  ::int32_t n() const;
  void set_n(::int32_t value);

  private:
  ::int32_t _internal_n() const;
  void _internal_set_n(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.GetClassificationsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      70, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr image_;
    ::google::protobuf::internal::ArenaStringPtr mime_type_;
    ::google::protobuf::Struct* extra_;
    ::int32_t width_;
    ::int32_t height_;
    ::int32_t n_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class GetClassificationsFromCameraResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.GetClassificationsFromCameraResponse) */ {
 public:
  inline GetClassificationsFromCameraResponse() : GetClassificationsFromCameraResponse(nullptr) {}
  ~GetClassificationsFromCameraResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetClassificationsFromCameraResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetClassificationsFromCameraResponse(const GetClassificationsFromCameraResponse& from)
      : GetClassificationsFromCameraResponse(nullptr, from) {}
  GetClassificationsFromCameraResponse(GetClassificationsFromCameraResponse&& from) noexcept
    : GetClassificationsFromCameraResponse() {
    *this = ::std::move(from);
  }

  inline GetClassificationsFromCameraResponse& operator=(const GetClassificationsFromCameraResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetClassificationsFromCameraResponse& operator=(GetClassificationsFromCameraResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetClassificationsFromCameraResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetClassificationsFromCameraResponse* internal_default_instance() {
    return reinterpret_cast<const GetClassificationsFromCameraResponse*>(
               &_GetClassificationsFromCameraResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GetClassificationsFromCameraResponse& a, GetClassificationsFromCameraResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetClassificationsFromCameraResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetClassificationsFromCameraResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetClassificationsFromCameraResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetClassificationsFromCameraResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetClassificationsFromCameraResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetClassificationsFromCameraResponse& from) {
    GetClassificationsFromCameraResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetClassificationsFromCameraResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.GetClassificationsFromCameraResponse";
  }
  protected:
  explicit GetClassificationsFromCameraResponse(::google::protobuf::Arena* arena);
  GetClassificationsFromCameraResponse(::google::protobuf::Arena* arena, const GetClassificationsFromCameraResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClassificationsFieldNumber = 1,
  };
  // repeated .viam.service.vision.v1.Classification classifications = 1 [json_name = "classifications"];
  int classifications_size() const;
  private:
  int _internal_classifications_size() const;

  public:
  void clear_classifications() ;
  ::viam::service::vision::v1::Classification* mutable_classifications(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Classification >*
      mutable_classifications();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>& _internal_classifications() const;
  ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>* _internal_mutable_classifications();
  public:
  const ::viam::service::vision::v1::Classification& classifications(int index) const;
  ::viam::service::vision::v1::Classification* add_classifications();
  const ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Classification >&
      classifications() const;
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.GetClassificationsFromCameraResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Classification > classifications_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class GetClassificationsFromCameraRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.GetClassificationsFromCameraRequest) */ {
 public:
  inline GetClassificationsFromCameraRequest() : GetClassificationsFromCameraRequest(nullptr) {}
  ~GetClassificationsFromCameraRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetClassificationsFromCameraRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetClassificationsFromCameraRequest(const GetClassificationsFromCameraRequest& from)
      : GetClassificationsFromCameraRequest(nullptr, from) {}
  GetClassificationsFromCameraRequest(GetClassificationsFromCameraRequest&& from) noexcept
    : GetClassificationsFromCameraRequest() {
    *this = ::std::move(from);
  }

  inline GetClassificationsFromCameraRequest& operator=(const GetClassificationsFromCameraRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetClassificationsFromCameraRequest& operator=(GetClassificationsFromCameraRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetClassificationsFromCameraRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetClassificationsFromCameraRequest* internal_default_instance() {
    return reinterpret_cast<const GetClassificationsFromCameraRequest*>(
               &_GetClassificationsFromCameraRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GetClassificationsFromCameraRequest& a, GetClassificationsFromCameraRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetClassificationsFromCameraRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetClassificationsFromCameraRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetClassificationsFromCameraRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetClassificationsFromCameraRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetClassificationsFromCameraRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetClassificationsFromCameraRequest& from) {
    GetClassificationsFromCameraRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetClassificationsFromCameraRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.GetClassificationsFromCameraRequest";
  }
  protected:
  explicit GetClassificationsFromCameraRequest(::google::protobuf::Arena* arena);
  GetClassificationsFromCameraRequest(::google::protobuf::Arena* arena, const GetClassificationsFromCameraRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kCameraNameFieldNumber = 2,
    kExtraFieldNumber = 99,
    kNFieldNumber = 3,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string camera_name = 2 [json_name = "cameraName"];
  void clear_camera_name() ;
  const std::string& camera_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_camera_name(Arg_&& arg, Args_... args);
  std::string* mutable_camera_name();
  PROTOBUF_NODISCARD std::string* release_camera_name();
  void set_allocated_camera_name(std::string* value);

  private:
  const std::string& _internal_camera_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_camera_name(
      const std::string& value);
  std::string* _internal_mutable_camera_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // int32 n = 3 [json_name = "n"];
  void clear_n() ;
  ::int32_t n() const;
  void set_n(::int32_t value);

  private:
  ::int32_t _internal_n() const;
  void _internal_set_n(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.GetClassificationsFromCameraRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      82, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr camera_name_;
    ::google::protobuf::Struct* extra_;
    ::int32_t n_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class CaptureAllFromCameraRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.CaptureAllFromCameraRequest) */ {
 public:
  inline CaptureAllFromCameraRequest() : CaptureAllFromCameraRequest(nullptr) {}
  ~CaptureAllFromCameraRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CaptureAllFromCameraRequest(::google::protobuf::internal::ConstantInitialized);

  inline CaptureAllFromCameraRequest(const CaptureAllFromCameraRequest& from)
      : CaptureAllFromCameraRequest(nullptr, from) {}
  CaptureAllFromCameraRequest(CaptureAllFromCameraRequest&& from) noexcept
    : CaptureAllFromCameraRequest() {
    *this = ::std::move(from);
  }

  inline CaptureAllFromCameraRequest& operator=(const CaptureAllFromCameraRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CaptureAllFromCameraRequest& operator=(CaptureAllFromCameraRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CaptureAllFromCameraRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CaptureAllFromCameraRequest* internal_default_instance() {
    return reinterpret_cast<const CaptureAllFromCameraRequest*>(
               &_CaptureAllFromCameraRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CaptureAllFromCameraRequest& a, CaptureAllFromCameraRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CaptureAllFromCameraRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CaptureAllFromCameraRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CaptureAllFromCameraRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CaptureAllFromCameraRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CaptureAllFromCameraRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CaptureAllFromCameraRequest& from) {
    CaptureAllFromCameraRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CaptureAllFromCameraRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.CaptureAllFromCameraRequest";
  }
  protected:
  explicit CaptureAllFromCameraRequest(::google::protobuf::Arena* arena);
  CaptureAllFromCameraRequest(::google::protobuf::Arena* arena, const CaptureAllFromCameraRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kCameraNameFieldNumber = 2,
    kExtraFieldNumber = 99,
    kReturnImageFieldNumber = 3,
    kReturnClassificationsFieldNumber = 4,
    kReturnDetectionsFieldNumber = 5,
    kReturnObjectPointCloudsFieldNumber = 6,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string camera_name = 2 [json_name = "cameraName"];
  void clear_camera_name() ;
  const std::string& camera_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_camera_name(Arg_&& arg, Args_... args);
  std::string* mutable_camera_name();
  PROTOBUF_NODISCARD std::string* release_camera_name();
  void set_allocated_camera_name(std::string* value);

  private:
  const std::string& _internal_camera_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_camera_name(
      const std::string& value);
  std::string* _internal_mutable_camera_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // bool return_image = 3 [json_name = "returnImage"];
  void clear_return_image() ;
  bool return_image() const;
  void set_return_image(bool value);

  private:
  bool _internal_return_image() const;
  void _internal_set_return_image(bool value);

  public:
  // bool return_classifications = 4 [json_name = "returnClassifications"];
  void clear_return_classifications() ;
  bool return_classifications() const;
  void set_return_classifications(bool value);

  private:
  bool _internal_return_classifications() const;
  void _internal_set_return_classifications(bool value);

  public:
  // bool return_detections = 5 [json_name = "returnDetections"];
  void clear_return_detections() ;
  bool return_detections() const;
  void set_return_detections(bool value);

  private:
  bool _internal_return_detections() const;
  void _internal_set_return_detections(bool value);

  public:
  // bool return_object_point_clouds = 6 [json_name = "returnObjectPointClouds"];
  void clear_return_object_point_clouds() ;
  bool return_object_point_clouds() const;
  void set_return_object_point_clouds(bool value);

  private:
  bool _internal_return_object_point_clouds() const;
  void _internal_set_return_object_point_clouds(bool value);

  public:
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.CaptureAllFromCameraRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      74, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr camera_name_;
    ::google::protobuf::Struct* extra_;
    bool return_image_;
    bool return_classifications_;
    bool return_detections_;
    bool return_object_point_clouds_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class GetObjectPointCloudsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.GetObjectPointCloudsResponse) */ {
 public:
  inline GetObjectPointCloudsResponse() : GetObjectPointCloudsResponse(nullptr) {}
  ~GetObjectPointCloudsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetObjectPointCloudsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetObjectPointCloudsResponse(const GetObjectPointCloudsResponse& from)
      : GetObjectPointCloudsResponse(nullptr, from) {}
  GetObjectPointCloudsResponse(GetObjectPointCloudsResponse&& from) noexcept
    : GetObjectPointCloudsResponse() {
    *this = ::std::move(from);
  }

  inline GetObjectPointCloudsResponse& operator=(const GetObjectPointCloudsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetObjectPointCloudsResponse& operator=(GetObjectPointCloudsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetObjectPointCloudsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetObjectPointCloudsResponse* internal_default_instance() {
    return reinterpret_cast<const GetObjectPointCloudsResponse*>(
               &_GetObjectPointCloudsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(GetObjectPointCloudsResponse& a, GetObjectPointCloudsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetObjectPointCloudsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetObjectPointCloudsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetObjectPointCloudsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetObjectPointCloudsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetObjectPointCloudsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetObjectPointCloudsResponse& from) {
    GetObjectPointCloudsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetObjectPointCloudsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.GetObjectPointCloudsResponse";
  }
  protected:
  explicit GetObjectPointCloudsResponse(::google::protobuf::Arena* arena);
  GetObjectPointCloudsResponse(::google::protobuf::Arena* arena, const GetObjectPointCloudsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectsFieldNumber = 2,
    kMimeTypeFieldNumber = 1,
  };
  // repeated .viam.common.v1.PointCloudObject objects = 2 [json_name = "objects"];
  int objects_size() const;
  private:
  int _internal_objects_size() const;

  public:
  void clear_objects() ;
  ::viam::common::v1::PointCloudObject* mutable_objects(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::PointCloudObject >*
      mutable_objects();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::PointCloudObject>& _internal_objects() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::PointCloudObject>* _internal_mutable_objects();
  public:
  const ::viam::common::v1::PointCloudObject& objects(int index) const;
  ::viam::common::v1::PointCloudObject* add_objects();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::PointCloudObject >&
      objects() const;
  // string mime_type = 1 [json_name = "mimeType"];
  void clear_mime_type() ;
  const std::string& mime_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mime_type(Arg_&& arg, Args_... args);
  std::string* mutable_mime_type();
  PROTOBUF_NODISCARD std::string* release_mime_type();
  void set_allocated_mime_type(std::string* value);

  private:
  const std::string& _internal_mime_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mime_type(
      const std::string& value);
  std::string* _internal_mutable_mime_type();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.GetObjectPointCloudsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      69, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::PointCloudObject > objects_;
    ::google::protobuf::internal::ArenaStringPtr mime_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};// -------------------------------------------------------------------

class CaptureAllFromCameraResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.service.vision.v1.CaptureAllFromCameraResponse) */ {
 public:
  inline CaptureAllFromCameraResponse() : CaptureAllFromCameraResponse(nullptr) {}
  ~CaptureAllFromCameraResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CaptureAllFromCameraResponse(::google::protobuf::internal::ConstantInitialized);

  inline CaptureAllFromCameraResponse(const CaptureAllFromCameraResponse& from)
      : CaptureAllFromCameraResponse(nullptr, from) {}
  CaptureAllFromCameraResponse(CaptureAllFromCameraResponse&& from) noexcept
    : CaptureAllFromCameraResponse() {
    *this = ::std::move(from);
  }

  inline CaptureAllFromCameraResponse& operator=(const CaptureAllFromCameraResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CaptureAllFromCameraResponse& operator=(CaptureAllFromCameraResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CaptureAllFromCameraResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CaptureAllFromCameraResponse* internal_default_instance() {
    return reinterpret_cast<const CaptureAllFromCameraResponse*>(
               &_CaptureAllFromCameraResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CaptureAllFromCameraResponse& a, CaptureAllFromCameraResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CaptureAllFromCameraResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CaptureAllFromCameraResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CaptureAllFromCameraResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CaptureAllFromCameraResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CaptureAllFromCameraResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CaptureAllFromCameraResponse& from) {
    CaptureAllFromCameraResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CaptureAllFromCameraResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.service.vision.v1.CaptureAllFromCameraResponse";
  }
  protected:
  explicit CaptureAllFromCameraResponse(::google::protobuf::Arena* arena);
  CaptureAllFromCameraResponse(::google::protobuf::Arena* arena, const CaptureAllFromCameraResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDetectionsFieldNumber = 2,
    kClassificationsFieldNumber = 3,
    kObjectsFieldNumber = 4,
    kImageFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // repeated .viam.service.vision.v1.Detection detections = 2 [json_name = "detections"];
  int detections_size() const;
  private:
  int _internal_detections_size() const;

  public:
  void clear_detections() ;
  ::viam::service::vision::v1::Detection* mutable_detections(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Detection >*
      mutable_detections();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>& _internal_detections() const;
  ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>* _internal_mutable_detections();
  public:
  const ::viam::service::vision::v1::Detection& detections(int index) const;
  ::viam::service::vision::v1::Detection* add_detections();
  const ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Detection >&
      detections() const;
  // repeated .viam.service.vision.v1.Classification classifications = 3 [json_name = "classifications"];
  int classifications_size() const;
  private:
  int _internal_classifications_size() const;

  public:
  void clear_classifications() ;
  ::viam::service::vision::v1::Classification* mutable_classifications(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Classification >*
      mutable_classifications();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>& _internal_classifications() const;
  ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>* _internal_mutable_classifications();
  public:
  const ::viam::service::vision::v1::Classification& classifications(int index) const;
  ::viam::service::vision::v1::Classification* add_classifications();
  const ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Classification >&
      classifications() const;
  // repeated .viam.common.v1.PointCloudObject objects = 4 [json_name = "objects"];
  int objects_size() const;
  private:
  int _internal_objects_size() const;

  public:
  void clear_objects() ;
  ::viam::common::v1::PointCloudObject* mutable_objects(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::PointCloudObject >*
      mutable_objects();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::PointCloudObject>& _internal_objects() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::PointCloudObject>* _internal_mutable_objects();
  public:
  const ::viam::common::v1::PointCloudObject& objects(int index) const;
  ::viam::common::v1::PointCloudObject* add_objects();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::PointCloudObject >&
      objects() const;
  // .viam.component.camera.v1.Image image = 1 [json_name = "image"];
  bool has_image() const;
  void clear_image() ;
  const ::viam::component::camera::v1::Image& image() const;
  PROTOBUF_NODISCARD ::viam::component::camera::v1::Image* release_image();
  ::viam::component::camera::v1::Image* mutable_image();
  void set_allocated_image(::viam::component::camera::v1::Image* value);
  void unsafe_arena_set_allocated_image(::viam::component::camera::v1::Image* value);
  ::viam::component::camera::v1::Image* unsafe_arena_release_image();

  private:
  const ::viam::component::camera::v1::Image& _internal_image() const;
  ::viam::component::camera::v1::Image* _internal_mutable_image();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.service.vision.v1.CaptureAllFromCameraResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 5,
      0, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Detection > detections_;
    ::google::protobuf::RepeatedPtrField< ::viam::service::vision::v1::Classification > classifications_;
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::PointCloudObject > objects_;
    ::viam::component::camera::v1::Image* image_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_service_2fvision_2fv1_2fvision_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetDetectionsRequest

// string name = 1 [json_name = "name"];
inline void GetDetectionsRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetDetectionsRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetDetectionsRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetDetectionsRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetDetectionsRequest.name)
}
inline std::string* GetDetectionsRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetDetectionsRequest.name)
  return _s;
}
inline const std::string& GetDetectionsRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetDetectionsRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetDetectionsRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetDetectionsRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetDetectionsRequest.name)
  return _impl_.name_.Release();
}
inline void GetDetectionsRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetDetectionsRequest.name)
}

// bytes image = 2 [json_name = "image"];
inline void GetDetectionsRequest::clear_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.image_.ClearToEmpty();
}
inline const std::string& GetDetectionsRequest::image() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetDetectionsRequest.image)
  return _internal_image();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetDetectionsRequest::set_image(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.image_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetDetectionsRequest.image)
}
inline std::string* GetDetectionsRequest::mutable_image() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_image();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetDetectionsRequest.image)
  return _s;
}
inline const std::string& GetDetectionsRequest::_internal_image() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.image_.Get();
}
inline void GetDetectionsRequest::_internal_set_image(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.image_.Set(value, GetArena());
}
inline std::string* GetDetectionsRequest::_internal_mutable_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.image_.Mutable( GetArena());
}
inline std::string* GetDetectionsRequest::release_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetDetectionsRequest.image)
  return _impl_.image_.Release();
}
inline void GetDetectionsRequest::set_allocated_image(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.image_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.image_.IsDefault()) {
          _impl_.image_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetDetectionsRequest.image)
}

// int64 width = 3 [json_name = "width"];
inline void GetDetectionsRequest::clear_width() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.width_ = ::int64_t{0};
}
inline ::int64_t GetDetectionsRequest::width() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetDetectionsRequest.width)
  return _internal_width();
}
inline void GetDetectionsRequest::set_width(::int64_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetDetectionsRequest.width)
}
inline ::int64_t GetDetectionsRequest::_internal_width() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.width_;
}
inline void GetDetectionsRequest::_internal_set_width(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.width_ = value;
}

// int64 height = 4 [json_name = "height"];
inline void GetDetectionsRequest::clear_height() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.height_ = ::int64_t{0};
}
inline ::int64_t GetDetectionsRequest::height() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetDetectionsRequest.height)
  return _internal_height();
}
inline void GetDetectionsRequest::set_height(::int64_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetDetectionsRequest.height)
}
inline ::int64_t GetDetectionsRequest::_internal_height() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.height_;
}
inline void GetDetectionsRequest::_internal_set_height(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.height_ = value;
}

// string mime_type = 5 [json_name = "mimeType"];
inline void GetDetectionsRequest::clear_mime_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mime_type_.ClearToEmpty();
}
inline const std::string& GetDetectionsRequest::mime_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetDetectionsRequest.mime_type)
  return _internal_mime_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetDetectionsRequest::set_mime_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mime_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetDetectionsRequest.mime_type)
}
inline std::string* GetDetectionsRequest::mutable_mime_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mime_type();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetDetectionsRequest.mime_type)
  return _s;
}
inline const std::string& GetDetectionsRequest::_internal_mime_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mime_type_.Get();
}
inline void GetDetectionsRequest::_internal_set_mime_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mime_type_.Set(value, GetArena());
}
inline std::string* GetDetectionsRequest::_internal_mutable_mime_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.mime_type_.Mutable( GetArena());
}
inline std::string* GetDetectionsRequest::release_mime_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetDetectionsRequest.mime_type)
  return _impl_.mime_type_.Release();
}
inline void GetDetectionsRequest::set_allocated_mime_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mime_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mime_type_.IsDefault()) {
          _impl_.mime_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetDetectionsRequest.mime_type)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetDetectionsRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetDetectionsRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetDetectionsRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetDetectionsRequest.extra)
  return _internal_extra();
}
inline void GetDetectionsRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.vision.v1.GetDetectionsRequest.extra)
}
inline ::google::protobuf::Struct* GetDetectionsRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetDetectionsRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetDetectionsRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetDetectionsRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetDetectionsRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetDetectionsRequest.extra)
  return _msg;
}
inline void GetDetectionsRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetDetectionsRequest.extra)
}

// -------------------------------------------------------------------

// GetDetectionsResponse

// repeated .viam.service.vision.v1.Detection detections = 1 [json_name = "detections"];
inline int GetDetectionsResponse::_internal_detections_size() const {
  return _internal_detections().size();
}
inline int GetDetectionsResponse::detections_size() const {
  return _internal_detections_size();
}
inline void GetDetectionsResponse::clear_detections() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.detections_.Clear();
}
inline ::viam::service::vision::v1::Detection* GetDetectionsResponse::mutable_detections(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetDetectionsResponse.detections)
  return _internal_mutable_detections()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>* GetDetectionsResponse::mutable_detections()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.vision.v1.GetDetectionsResponse.detections)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_detections();
}
inline const ::viam::service::vision::v1::Detection& GetDetectionsResponse::detections(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetDetectionsResponse.detections)
  return _internal_detections().Get(index);
}
inline ::viam::service::vision::v1::Detection* GetDetectionsResponse::add_detections() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::service::vision::v1::Detection* _add = _internal_mutable_detections()->Add();
  // @@protoc_insertion_point(field_add:viam.service.vision.v1.GetDetectionsResponse.detections)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>& GetDetectionsResponse::detections() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.vision.v1.GetDetectionsResponse.detections)
  return _internal_detections();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>&
GetDetectionsResponse::_internal_detections() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.detections_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>*
GetDetectionsResponse::_internal_mutable_detections() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.detections_;
}

// -------------------------------------------------------------------

// GetDetectionsFromCameraRequest

// string name = 1 [json_name = "name"];
inline void GetDetectionsFromCameraRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetDetectionsFromCameraRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetDetectionsFromCameraRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetDetectionsFromCameraRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetDetectionsFromCameraRequest.name)
}
inline std::string* GetDetectionsFromCameraRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetDetectionsFromCameraRequest.name)
  return _s;
}
inline const std::string& GetDetectionsFromCameraRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetDetectionsFromCameraRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetDetectionsFromCameraRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetDetectionsFromCameraRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetDetectionsFromCameraRequest.name)
  return _impl_.name_.Release();
}
inline void GetDetectionsFromCameraRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetDetectionsFromCameraRequest.name)
}

// string camera_name = 2 [json_name = "cameraName"];
inline void GetDetectionsFromCameraRequest::clear_camera_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.camera_name_.ClearToEmpty();
}
inline const std::string& GetDetectionsFromCameraRequest::camera_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetDetectionsFromCameraRequest.camera_name)
  return _internal_camera_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetDetectionsFromCameraRequest::set_camera_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.camera_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetDetectionsFromCameraRequest.camera_name)
}
inline std::string* GetDetectionsFromCameraRequest::mutable_camera_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_camera_name();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetDetectionsFromCameraRequest.camera_name)
  return _s;
}
inline const std::string& GetDetectionsFromCameraRequest::_internal_camera_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.camera_name_.Get();
}
inline void GetDetectionsFromCameraRequest::_internal_set_camera_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.camera_name_.Set(value, GetArena());
}
inline std::string* GetDetectionsFromCameraRequest::_internal_mutable_camera_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.camera_name_.Mutable( GetArena());
}
inline std::string* GetDetectionsFromCameraRequest::release_camera_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetDetectionsFromCameraRequest.camera_name)
  return _impl_.camera_name_.Release();
}
inline void GetDetectionsFromCameraRequest::set_allocated_camera_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.camera_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.camera_name_.IsDefault()) {
          _impl_.camera_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetDetectionsFromCameraRequest.camera_name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetDetectionsFromCameraRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetDetectionsFromCameraRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetDetectionsFromCameraRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetDetectionsFromCameraRequest.extra)
  return _internal_extra();
}
inline void GetDetectionsFromCameraRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.vision.v1.GetDetectionsFromCameraRequest.extra)
}
inline ::google::protobuf::Struct* GetDetectionsFromCameraRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetDetectionsFromCameraRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetDetectionsFromCameraRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetDetectionsFromCameraRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetDetectionsFromCameraRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetDetectionsFromCameraRequest.extra)
  return _msg;
}
inline void GetDetectionsFromCameraRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetDetectionsFromCameraRequest.extra)
}

// -------------------------------------------------------------------

// GetDetectionsFromCameraResponse

// repeated .viam.service.vision.v1.Detection detections = 1 [json_name = "detections"];
inline int GetDetectionsFromCameraResponse::_internal_detections_size() const {
  return _internal_detections().size();
}
inline int GetDetectionsFromCameraResponse::detections_size() const {
  return _internal_detections_size();
}
inline void GetDetectionsFromCameraResponse::clear_detections() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.detections_.Clear();
}
inline ::viam::service::vision::v1::Detection* GetDetectionsFromCameraResponse::mutable_detections(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetDetectionsFromCameraResponse.detections)
  return _internal_mutable_detections()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>* GetDetectionsFromCameraResponse::mutable_detections()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.vision.v1.GetDetectionsFromCameraResponse.detections)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_detections();
}
inline const ::viam::service::vision::v1::Detection& GetDetectionsFromCameraResponse::detections(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetDetectionsFromCameraResponse.detections)
  return _internal_detections().Get(index);
}
inline ::viam::service::vision::v1::Detection* GetDetectionsFromCameraResponse::add_detections() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::service::vision::v1::Detection* _add = _internal_mutable_detections()->Add();
  // @@protoc_insertion_point(field_add:viam.service.vision.v1.GetDetectionsFromCameraResponse.detections)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>& GetDetectionsFromCameraResponse::detections() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.vision.v1.GetDetectionsFromCameraResponse.detections)
  return _internal_detections();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>&
GetDetectionsFromCameraResponse::_internal_detections() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.detections_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>*
GetDetectionsFromCameraResponse::_internal_mutable_detections() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.detections_;
}

// -------------------------------------------------------------------

// Detection

// optional int64 x_min = 1 [json_name = "xMin"];
inline bool Detection::has_x_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Detection::clear_x_min() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_min_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Detection::x_min() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.Detection.x_min)
  return _internal_x_min();
}
inline void Detection::set_x_min(::int64_t value) {
  _internal_set_x_min(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.Detection.x_min)
}
inline ::int64_t Detection::_internal_x_min() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_min_;
}
inline void Detection::_internal_set_x_min(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.x_min_ = value;
}

// optional int64 y_min = 2 [json_name = "yMin"];
inline bool Detection::has_y_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Detection::clear_y_min() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_min_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t Detection::y_min() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.Detection.y_min)
  return _internal_y_min();
}
inline void Detection::set_y_min(::int64_t value) {
  _internal_set_y_min(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.Detection.y_min)
}
inline ::int64_t Detection::_internal_y_min() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_min_;
}
inline void Detection::_internal_set_y_min(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.y_min_ = value;
}

// optional int64 x_max = 3 [json_name = "xMax"];
inline bool Detection::has_x_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Detection::clear_x_max() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_max_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t Detection::x_max() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.Detection.x_max)
  return _internal_x_max();
}
inline void Detection::set_x_max(::int64_t value) {
  _internal_set_x_max(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.Detection.x_max)
}
inline ::int64_t Detection::_internal_x_max() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_max_;
}
inline void Detection::_internal_set_x_max(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.x_max_ = value;
}

// optional int64 y_max = 4 [json_name = "yMax"];
inline bool Detection::has_y_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Detection::clear_y_max() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_max_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t Detection::y_max() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.Detection.y_max)
  return _internal_y_max();
}
inline void Detection::set_y_max(::int64_t value) {
  _internal_set_y_max(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.Detection.y_max)
}
inline ::int64_t Detection::_internal_y_max() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_max_;
}
inline void Detection::_internal_set_y_max(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.y_max_ = value;
}

// double confidence = 5 [json_name = "confidence"];
inline void Detection::clear_confidence() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.confidence_ = 0;
}
inline double Detection::confidence() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.Detection.confidence)
  return _internal_confidence();
}
inline void Detection::set_confidence(double value) {
  _internal_set_confidence(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.Detection.confidence)
}
inline double Detection::_internal_confidence() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.confidence_;
}
inline void Detection::_internal_set_confidence(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.confidence_ = value;
}

// string class_name = 6 [json_name = "className"];
inline void Detection::clear_class_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.class_name_.ClearToEmpty();
}
inline const std::string& Detection::class_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.Detection.class_name)
  return _internal_class_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Detection::set_class_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.class_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.Detection.class_name)
}
inline std::string* Detection::mutable_class_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_class_name();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.Detection.class_name)
  return _s;
}
inline const std::string& Detection::_internal_class_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.class_name_.Get();
}
inline void Detection::_internal_set_class_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.class_name_.Set(value, GetArena());
}
inline std::string* Detection::_internal_mutable_class_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.class_name_.Mutable( GetArena());
}
inline std::string* Detection::release_class_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.Detection.class_name)
  return _impl_.class_name_.Release();
}
inline void Detection::set_allocated_class_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.class_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.class_name_.IsDefault()) {
          _impl_.class_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.Detection.class_name)
}

// -------------------------------------------------------------------

// GetClassificationsRequest

// string name = 1 [json_name = "name"];
inline void GetClassificationsRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetClassificationsRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetClassificationsRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetClassificationsRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetClassificationsRequest.name)
}
inline std::string* GetClassificationsRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetClassificationsRequest.name)
  return _s;
}
inline const std::string& GetClassificationsRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetClassificationsRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetClassificationsRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetClassificationsRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetClassificationsRequest.name)
  return _impl_.name_.Release();
}
inline void GetClassificationsRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetClassificationsRequest.name)
}

// bytes image = 2 [json_name = "image"];
inline void GetClassificationsRequest::clear_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.image_.ClearToEmpty();
}
inline const std::string& GetClassificationsRequest::image() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetClassificationsRequest.image)
  return _internal_image();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetClassificationsRequest::set_image(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.image_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetClassificationsRequest.image)
}
inline std::string* GetClassificationsRequest::mutable_image() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_image();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetClassificationsRequest.image)
  return _s;
}
inline const std::string& GetClassificationsRequest::_internal_image() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.image_.Get();
}
inline void GetClassificationsRequest::_internal_set_image(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.image_.Set(value, GetArena());
}
inline std::string* GetClassificationsRequest::_internal_mutable_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.image_.Mutable( GetArena());
}
inline std::string* GetClassificationsRequest::release_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetClassificationsRequest.image)
  return _impl_.image_.Release();
}
inline void GetClassificationsRequest::set_allocated_image(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.image_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.image_.IsDefault()) {
          _impl_.image_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetClassificationsRequest.image)
}

// int32 width = 3 [json_name = "width"];
inline void GetClassificationsRequest::clear_width() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.width_ = 0;
}
inline ::int32_t GetClassificationsRequest::width() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetClassificationsRequest.width)
  return _internal_width();
}
inline void GetClassificationsRequest::set_width(::int32_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetClassificationsRequest.width)
}
inline ::int32_t GetClassificationsRequest::_internal_width() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.width_;
}
inline void GetClassificationsRequest::_internal_set_width(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.width_ = value;
}

// int32 height = 4 [json_name = "height"];
inline void GetClassificationsRequest::clear_height() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.height_ = 0;
}
inline ::int32_t GetClassificationsRequest::height() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetClassificationsRequest.height)
  return _internal_height();
}
inline void GetClassificationsRequest::set_height(::int32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetClassificationsRequest.height)
}
inline ::int32_t GetClassificationsRequest::_internal_height() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.height_;
}
inline void GetClassificationsRequest::_internal_set_height(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.height_ = value;
}

// string mime_type = 5 [json_name = "mimeType"];
inline void GetClassificationsRequest::clear_mime_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mime_type_.ClearToEmpty();
}
inline const std::string& GetClassificationsRequest::mime_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetClassificationsRequest.mime_type)
  return _internal_mime_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetClassificationsRequest::set_mime_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mime_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetClassificationsRequest.mime_type)
}
inline std::string* GetClassificationsRequest::mutable_mime_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mime_type();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetClassificationsRequest.mime_type)
  return _s;
}
inline const std::string& GetClassificationsRequest::_internal_mime_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mime_type_.Get();
}
inline void GetClassificationsRequest::_internal_set_mime_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mime_type_.Set(value, GetArena());
}
inline std::string* GetClassificationsRequest::_internal_mutable_mime_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.mime_type_.Mutable( GetArena());
}
inline std::string* GetClassificationsRequest::release_mime_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetClassificationsRequest.mime_type)
  return _impl_.mime_type_.Release();
}
inline void GetClassificationsRequest::set_allocated_mime_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mime_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mime_type_.IsDefault()) {
          _impl_.mime_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetClassificationsRequest.mime_type)
}

// int32 n = 6 [json_name = "n"];
inline void GetClassificationsRequest::clear_n() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n_ = 0;
}
inline ::int32_t GetClassificationsRequest::n() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetClassificationsRequest.n)
  return _internal_n();
}
inline void GetClassificationsRequest::set_n(::int32_t value) {
  _internal_set_n(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetClassificationsRequest.n)
}
inline ::int32_t GetClassificationsRequest::_internal_n() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n_;
}
inline void GetClassificationsRequest::_internal_set_n(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.n_ = value;
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetClassificationsRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetClassificationsRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetClassificationsRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetClassificationsRequest.extra)
  return _internal_extra();
}
inline void GetClassificationsRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.vision.v1.GetClassificationsRequest.extra)
}
inline ::google::protobuf::Struct* GetClassificationsRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetClassificationsRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetClassificationsRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetClassificationsRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetClassificationsRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetClassificationsRequest.extra)
  return _msg;
}
inline void GetClassificationsRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetClassificationsRequest.extra)
}

// -------------------------------------------------------------------

// GetClassificationsResponse

// repeated .viam.service.vision.v1.Classification classifications = 1 [json_name = "classifications"];
inline int GetClassificationsResponse::_internal_classifications_size() const {
  return _internal_classifications().size();
}
inline int GetClassificationsResponse::classifications_size() const {
  return _internal_classifications_size();
}
inline void GetClassificationsResponse::clear_classifications() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.classifications_.Clear();
}
inline ::viam::service::vision::v1::Classification* GetClassificationsResponse::mutable_classifications(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetClassificationsResponse.classifications)
  return _internal_mutable_classifications()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>* GetClassificationsResponse::mutable_classifications()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.vision.v1.GetClassificationsResponse.classifications)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_classifications();
}
inline const ::viam::service::vision::v1::Classification& GetClassificationsResponse::classifications(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetClassificationsResponse.classifications)
  return _internal_classifications().Get(index);
}
inline ::viam::service::vision::v1::Classification* GetClassificationsResponse::add_classifications() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::service::vision::v1::Classification* _add = _internal_mutable_classifications()->Add();
  // @@protoc_insertion_point(field_add:viam.service.vision.v1.GetClassificationsResponse.classifications)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>& GetClassificationsResponse::classifications() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.vision.v1.GetClassificationsResponse.classifications)
  return _internal_classifications();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>&
GetClassificationsResponse::_internal_classifications() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.classifications_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>*
GetClassificationsResponse::_internal_mutable_classifications() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.classifications_;
}

// -------------------------------------------------------------------

// GetClassificationsFromCameraRequest

// string name = 1 [json_name = "name"];
inline void GetClassificationsFromCameraRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetClassificationsFromCameraRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetClassificationsFromCameraRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetClassificationsFromCameraRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetClassificationsFromCameraRequest.name)
}
inline std::string* GetClassificationsFromCameraRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetClassificationsFromCameraRequest.name)
  return _s;
}
inline const std::string& GetClassificationsFromCameraRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetClassificationsFromCameraRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetClassificationsFromCameraRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetClassificationsFromCameraRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetClassificationsFromCameraRequest.name)
  return _impl_.name_.Release();
}
inline void GetClassificationsFromCameraRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetClassificationsFromCameraRequest.name)
}

// string camera_name = 2 [json_name = "cameraName"];
inline void GetClassificationsFromCameraRequest::clear_camera_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.camera_name_.ClearToEmpty();
}
inline const std::string& GetClassificationsFromCameraRequest::camera_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetClassificationsFromCameraRequest.camera_name)
  return _internal_camera_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetClassificationsFromCameraRequest::set_camera_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.camera_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetClassificationsFromCameraRequest.camera_name)
}
inline std::string* GetClassificationsFromCameraRequest::mutable_camera_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_camera_name();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetClassificationsFromCameraRequest.camera_name)
  return _s;
}
inline const std::string& GetClassificationsFromCameraRequest::_internal_camera_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.camera_name_.Get();
}
inline void GetClassificationsFromCameraRequest::_internal_set_camera_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.camera_name_.Set(value, GetArena());
}
inline std::string* GetClassificationsFromCameraRequest::_internal_mutable_camera_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.camera_name_.Mutable( GetArena());
}
inline std::string* GetClassificationsFromCameraRequest::release_camera_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetClassificationsFromCameraRequest.camera_name)
  return _impl_.camera_name_.Release();
}
inline void GetClassificationsFromCameraRequest::set_allocated_camera_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.camera_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.camera_name_.IsDefault()) {
          _impl_.camera_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetClassificationsFromCameraRequest.camera_name)
}

// int32 n = 3 [json_name = "n"];
inline void GetClassificationsFromCameraRequest::clear_n() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n_ = 0;
}
inline ::int32_t GetClassificationsFromCameraRequest::n() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetClassificationsFromCameraRequest.n)
  return _internal_n();
}
inline void GetClassificationsFromCameraRequest::set_n(::int32_t value) {
  _internal_set_n(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetClassificationsFromCameraRequest.n)
}
inline ::int32_t GetClassificationsFromCameraRequest::_internal_n() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n_;
}
inline void GetClassificationsFromCameraRequest::_internal_set_n(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.n_ = value;
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetClassificationsFromCameraRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetClassificationsFromCameraRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetClassificationsFromCameraRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetClassificationsFromCameraRequest.extra)
  return _internal_extra();
}
inline void GetClassificationsFromCameraRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.vision.v1.GetClassificationsFromCameraRequest.extra)
}
inline ::google::protobuf::Struct* GetClassificationsFromCameraRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetClassificationsFromCameraRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetClassificationsFromCameraRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetClassificationsFromCameraRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetClassificationsFromCameraRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetClassificationsFromCameraRequest.extra)
  return _msg;
}
inline void GetClassificationsFromCameraRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetClassificationsFromCameraRequest.extra)
}

// -------------------------------------------------------------------

// GetClassificationsFromCameraResponse

// repeated .viam.service.vision.v1.Classification classifications = 1 [json_name = "classifications"];
inline int GetClassificationsFromCameraResponse::_internal_classifications_size() const {
  return _internal_classifications().size();
}
inline int GetClassificationsFromCameraResponse::classifications_size() const {
  return _internal_classifications_size();
}
inline void GetClassificationsFromCameraResponse::clear_classifications() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.classifications_.Clear();
}
inline ::viam::service::vision::v1::Classification* GetClassificationsFromCameraResponse::mutable_classifications(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetClassificationsFromCameraResponse.classifications)
  return _internal_mutable_classifications()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>* GetClassificationsFromCameraResponse::mutable_classifications()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.vision.v1.GetClassificationsFromCameraResponse.classifications)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_classifications();
}
inline const ::viam::service::vision::v1::Classification& GetClassificationsFromCameraResponse::classifications(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetClassificationsFromCameraResponse.classifications)
  return _internal_classifications().Get(index);
}
inline ::viam::service::vision::v1::Classification* GetClassificationsFromCameraResponse::add_classifications() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::service::vision::v1::Classification* _add = _internal_mutable_classifications()->Add();
  // @@protoc_insertion_point(field_add:viam.service.vision.v1.GetClassificationsFromCameraResponse.classifications)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>& GetClassificationsFromCameraResponse::classifications() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.vision.v1.GetClassificationsFromCameraResponse.classifications)
  return _internal_classifications();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>&
GetClassificationsFromCameraResponse::_internal_classifications() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.classifications_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>*
GetClassificationsFromCameraResponse::_internal_mutable_classifications() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.classifications_;
}

// -------------------------------------------------------------------

// Classification

// string class_name = 1 [json_name = "className"];
inline void Classification::clear_class_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.class_name_.ClearToEmpty();
}
inline const std::string& Classification::class_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.Classification.class_name)
  return _internal_class_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Classification::set_class_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.class_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.Classification.class_name)
}
inline std::string* Classification::mutable_class_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_class_name();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.Classification.class_name)
  return _s;
}
inline const std::string& Classification::_internal_class_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.class_name_.Get();
}
inline void Classification::_internal_set_class_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.class_name_.Set(value, GetArena());
}
inline std::string* Classification::_internal_mutable_class_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.class_name_.Mutable( GetArena());
}
inline std::string* Classification::release_class_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.Classification.class_name)
  return _impl_.class_name_.Release();
}
inline void Classification::set_allocated_class_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.class_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.class_name_.IsDefault()) {
          _impl_.class_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.Classification.class_name)
}

// double confidence = 2 [json_name = "confidence"];
inline void Classification::clear_confidence() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.confidence_ = 0;
}
inline double Classification::confidence() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.Classification.confidence)
  return _internal_confidence();
}
inline void Classification::set_confidence(double value) {
  _internal_set_confidence(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.Classification.confidence)
}
inline double Classification::_internal_confidence() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.confidence_;
}
inline void Classification::_internal_set_confidence(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.confidence_ = value;
}

// -------------------------------------------------------------------

// GetObjectPointCloudsRequest

// string name = 1 [json_name = "name"];
inline void GetObjectPointCloudsRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetObjectPointCloudsRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetObjectPointCloudsRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetObjectPointCloudsRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetObjectPointCloudsRequest.name)
}
inline std::string* GetObjectPointCloudsRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetObjectPointCloudsRequest.name)
  return _s;
}
inline const std::string& GetObjectPointCloudsRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetObjectPointCloudsRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetObjectPointCloudsRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetObjectPointCloudsRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetObjectPointCloudsRequest.name)
  return _impl_.name_.Release();
}
inline void GetObjectPointCloudsRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetObjectPointCloudsRequest.name)
}

// string camera_name = 2 [json_name = "cameraName"];
inline void GetObjectPointCloudsRequest::clear_camera_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.camera_name_.ClearToEmpty();
}
inline const std::string& GetObjectPointCloudsRequest::camera_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetObjectPointCloudsRequest.camera_name)
  return _internal_camera_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetObjectPointCloudsRequest::set_camera_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.camera_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetObjectPointCloudsRequest.camera_name)
}
inline std::string* GetObjectPointCloudsRequest::mutable_camera_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_camera_name();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetObjectPointCloudsRequest.camera_name)
  return _s;
}
inline const std::string& GetObjectPointCloudsRequest::_internal_camera_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.camera_name_.Get();
}
inline void GetObjectPointCloudsRequest::_internal_set_camera_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.camera_name_.Set(value, GetArena());
}
inline std::string* GetObjectPointCloudsRequest::_internal_mutable_camera_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.camera_name_.Mutable( GetArena());
}
inline std::string* GetObjectPointCloudsRequest::release_camera_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetObjectPointCloudsRequest.camera_name)
  return _impl_.camera_name_.Release();
}
inline void GetObjectPointCloudsRequest::set_allocated_camera_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.camera_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.camera_name_.IsDefault()) {
          _impl_.camera_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetObjectPointCloudsRequest.camera_name)
}

// string mime_type = 3 [json_name = "mimeType"];
inline void GetObjectPointCloudsRequest::clear_mime_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mime_type_.ClearToEmpty();
}
inline const std::string& GetObjectPointCloudsRequest::mime_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetObjectPointCloudsRequest.mime_type)
  return _internal_mime_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetObjectPointCloudsRequest::set_mime_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mime_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetObjectPointCloudsRequest.mime_type)
}
inline std::string* GetObjectPointCloudsRequest::mutable_mime_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mime_type();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetObjectPointCloudsRequest.mime_type)
  return _s;
}
inline const std::string& GetObjectPointCloudsRequest::_internal_mime_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mime_type_.Get();
}
inline void GetObjectPointCloudsRequest::_internal_set_mime_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mime_type_.Set(value, GetArena());
}
inline std::string* GetObjectPointCloudsRequest::_internal_mutable_mime_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.mime_type_.Mutable( GetArena());
}
inline std::string* GetObjectPointCloudsRequest::release_mime_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetObjectPointCloudsRequest.mime_type)
  return _impl_.mime_type_.Release();
}
inline void GetObjectPointCloudsRequest::set_allocated_mime_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mime_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mime_type_.IsDefault()) {
          _impl_.mime_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetObjectPointCloudsRequest.mime_type)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetObjectPointCloudsRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetObjectPointCloudsRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetObjectPointCloudsRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetObjectPointCloudsRequest.extra)
  return _internal_extra();
}
inline void GetObjectPointCloudsRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.vision.v1.GetObjectPointCloudsRequest.extra)
}
inline ::google::protobuf::Struct* GetObjectPointCloudsRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetObjectPointCloudsRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetObjectPointCloudsRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetObjectPointCloudsRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetObjectPointCloudsRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetObjectPointCloudsRequest.extra)
  return _msg;
}
inline void GetObjectPointCloudsRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetObjectPointCloudsRequest.extra)
}

// -------------------------------------------------------------------

// GetObjectPointCloudsResponse

// string mime_type = 1 [json_name = "mimeType"];
inline void GetObjectPointCloudsResponse::clear_mime_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mime_type_.ClearToEmpty();
}
inline const std::string& GetObjectPointCloudsResponse::mime_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetObjectPointCloudsResponse.mime_type)
  return _internal_mime_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetObjectPointCloudsResponse::set_mime_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mime_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetObjectPointCloudsResponse.mime_type)
}
inline std::string* GetObjectPointCloudsResponse::mutable_mime_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mime_type();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetObjectPointCloudsResponse.mime_type)
  return _s;
}
inline const std::string& GetObjectPointCloudsResponse::_internal_mime_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mime_type_.Get();
}
inline void GetObjectPointCloudsResponse::_internal_set_mime_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mime_type_.Set(value, GetArena());
}
inline std::string* GetObjectPointCloudsResponse::_internal_mutable_mime_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.mime_type_.Mutable( GetArena());
}
inline std::string* GetObjectPointCloudsResponse::release_mime_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetObjectPointCloudsResponse.mime_type)
  return _impl_.mime_type_.Release();
}
inline void GetObjectPointCloudsResponse::set_allocated_mime_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mime_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mime_type_.IsDefault()) {
          _impl_.mime_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetObjectPointCloudsResponse.mime_type)
}

// repeated .viam.common.v1.PointCloudObject objects = 2 [json_name = "objects"];
inline int GetObjectPointCloudsResponse::_internal_objects_size() const {
  return _internal_objects().size();
}
inline int GetObjectPointCloudsResponse::objects_size() const {
  return _internal_objects_size();
}
inline ::viam::common::v1::PointCloudObject* GetObjectPointCloudsResponse::mutable_objects(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetObjectPointCloudsResponse.objects)
  return _internal_mutable_objects()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::PointCloudObject>* GetObjectPointCloudsResponse::mutable_objects()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.vision.v1.GetObjectPointCloudsResponse.objects)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_objects();
}
inline const ::viam::common::v1::PointCloudObject& GetObjectPointCloudsResponse::objects(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetObjectPointCloudsResponse.objects)
  return _internal_objects().Get(index);
}
inline ::viam::common::v1::PointCloudObject* GetObjectPointCloudsResponse::add_objects() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::PointCloudObject* _add = _internal_mutable_objects()->Add();
  // @@protoc_insertion_point(field_add:viam.service.vision.v1.GetObjectPointCloudsResponse.objects)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::PointCloudObject>& GetObjectPointCloudsResponse::objects() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.vision.v1.GetObjectPointCloudsResponse.objects)
  return _internal_objects();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::PointCloudObject>&
GetObjectPointCloudsResponse::_internal_objects() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.objects_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::PointCloudObject>*
GetObjectPointCloudsResponse::_internal_mutable_objects() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.objects_;
}

// -------------------------------------------------------------------

// GetPropertiesRequest

// string name = 1 [json_name = "name"];
inline void GetPropertiesRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetPropertiesRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetPropertiesRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetPropertiesRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetPropertiesRequest.name)
}
inline std::string* GetPropertiesRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetPropertiesRequest.name)
  return _s;
}
inline const std::string& GetPropertiesRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetPropertiesRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetPropertiesRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetPropertiesRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetPropertiesRequest.name)
  return _impl_.name_.Release();
}
inline void GetPropertiesRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetPropertiesRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetPropertiesRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetPropertiesRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetPropertiesRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetPropertiesRequest.extra)
  return _internal_extra();
}
inline void GetPropertiesRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.vision.v1.GetPropertiesRequest.extra)
}
inline ::google::protobuf::Struct* GetPropertiesRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetPropertiesRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.GetPropertiesRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetPropertiesRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetPropertiesRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.GetPropertiesRequest.extra)
  return _msg;
}
inline void GetPropertiesRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.GetPropertiesRequest.extra)
}

// -------------------------------------------------------------------

// CaptureAllFromCameraRequest

// string name = 1 [json_name = "name"];
inline void CaptureAllFromCameraRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& CaptureAllFromCameraRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.CaptureAllFromCameraRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CaptureAllFromCameraRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.CaptureAllFromCameraRequest.name)
}
inline std::string* CaptureAllFromCameraRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.CaptureAllFromCameraRequest.name)
  return _s;
}
inline const std::string& CaptureAllFromCameraRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void CaptureAllFromCameraRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* CaptureAllFromCameraRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* CaptureAllFromCameraRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.CaptureAllFromCameraRequest.name)
  return _impl_.name_.Release();
}
inline void CaptureAllFromCameraRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.CaptureAllFromCameraRequest.name)
}

// string camera_name = 2 [json_name = "cameraName"];
inline void CaptureAllFromCameraRequest::clear_camera_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.camera_name_.ClearToEmpty();
}
inline const std::string& CaptureAllFromCameraRequest::camera_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.CaptureAllFromCameraRequest.camera_name)
  return _internal_camera_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CaptureAllFromCameraRequest::set_camera_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.camera_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.CaptureAllFromCameraRequest.camera_name)
}
inline std::string* CaptureAllFromCameraRequest::mutable_camera_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_camera_name();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.CaptureAllFromCameraRequest.camera_name)
  return _s;
}
inline const std::string& CaptureAllFromCameraRequest::_internal_camera_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.camera_name_.Get();
}
inline void CaptureAllFromCameraRequest::_internal_set_camera_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.camera_name_.Set(value, GetArena());
}
inline std::string* CaptureAllFromCameraRequest::_internal_mutable_camera_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.camera_name_.Mutable( GetArena());
}
inline std::string* CaptureAllFromCameraRequest::release_camera_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.CaptureAllFromCameraRequest.camera_name)
  return _impl_.camera_name_.Release();
}
inline void CaptureAllFromCameraRequest::set_allocated_camera_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.camera_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.camera_name_.IsDefault()) {
          _impl_.camera_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.CaptureAllFromCameraRequest.camera_name)
}

// bool return_image = 3 [json_name = "returnImage"];
inline void CaptureAllFromCameraRequest::clear_return_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.return_image_ = false;
}
inline bool CaptureAllFromCameraRequest::return_image() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.CaptureAllFromCameraRequest.return_image)
  return _internal_return_image();
}
inline void CaptureAllFromCameraRequest::set_return_image(bool value) {
  _internal_set_return_image(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.CaptureAllFromCameraRequest.return_image)
}
inline bool CaptureAllFromCameraRequest::_internal_return_image() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.return_image_;
}
inline void CaptureAllFromCameraRequest::_internal_set_return_image(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.return_image_ = value;
}

// bool return_classifications = 4 [json_name = "returnClassifications"];
inline void CaptureAllFromCameraRequest::clear_return_classifications() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.return_classifications_ = false;
}
inline bool CaptureAllFromCameraRequest::return_classifications() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.CaptureAllFromCameraRequest.return_classifications)
  return _internal_return_classifications();
}
inline void CaptureAllFromCameraRequest::set_return_classifications(bool value) {
  _internal_set_return_classifications(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.CaptureAllFromCameraRequest.return_classifications)
}
inline bool CaptureAllFromCameraRequest::_internal_return_classifications() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.return_classifications_;
}
inline void CaptureAllFromCameraRequest::_internal_set_return_classifications(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.return_classifications_ = value;
}

// bool return_detections = 5 [json_name = "returnDetections"];
inline void CaptureAllFromCameraRequest::clear_return_detections() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.return_detections_ = false;
}
inline bool CaptureAllFromCameraRequest::return_detections() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.CaptureAllFromCameraRequest.return_detections)
  return _internal_return_detections();
}
inline void CaptureAllFromCameraRequest::set_return_detections(bool value) {
  _internal_set_return_detections(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.CaptureAllFromCameraRequest.return_detections)
}
inline bool CaptureAllFromCameraRequest::_internal_return_detections() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.return_detections_;
}
inline void CaptureAllFromCameraRequest::_internal_set_return_detections(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.return_detections_ = value;
}

// bool return_object_point_clouds = 6 [json_name = "returnObjectPointClouds"];
inline void CaptureAllFromCameraRequest::clear_return_object_point_clouds() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.return_object_point_clouds_ = false;
}
inline bool CaptureAllFromCameraRequest::return_object_point_clouds() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.CaptureAllFromCameraRequest.return_object_point_clouds)
  return _internal_return_object_point_clouds();
}
inline void CaptureAllFromCameraRequest::set_return_object_point_clouds(bool value) {
  _internal_set_return_object_point_clouds(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.CaptureAllFromCameraRequest.return_object_point_clouds)
}
inline bool CaptureAllFromCameraRequest::_internal_return_object_point_clouds() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.return_object_point_clouds_;
}
inline void CaptureAllFromCameraRequest::_internal_set_return_object_point_clouds(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.return_object_point_clouds_ = value;
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool CaptureAllFromCameraRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& CaptureAllFromCameraRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& CaptureAllFromCameraRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.CaptureAllFromCameraRequest.extra)
  return _internal_extra();
}
inline void CaptureAllFromCameraRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.vision.v1.CaptureAllFromCameraRequest.extra)
}
inline ::google::protobuf::Struct* CaptureAllFromCameraRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* CaptureAllFromCameraRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.CaptureAllFromCameraRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* CaptureAllFromCameraRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* CaptureAllFromCameraRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.CaptureAllFromCameraRequest.extra)
  return _msg;
}
inline void CaptureAllFromCameraRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.CaptureAllFromCameraRequest.extra)
}

// -------------------------------------------------------------------

// CaptureAllFromCameraResponse

// .viam.component.camera.v1.Image image = 1 [json_name = "image"];
inline bool CaptureAllFromCameraResponse::has_image() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.image_ != nullptr);
  return value;
}
inline const ::viam::component::camera::v1::Image& CaptureAllFromCameraResponse::_internal_image() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::component::camera::v1::Image* p = _impl_.image_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::component::camera::v1::Image&>(::viam::component::camera::v1::_Image_default_instance_);
}
inline const ::viam::component::camera::v1::Image& CaptureAllFromCameraResponse::image() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.CaptureAllFromCameraResponse.image)
  return _internal_image();
}
inline void CaptureAllFromCameraResponse::unsafe_arena_set_allocated_image(::viam::component::camera::v1::Image* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.image_);
  }
  _impl_.image_ = reinterpret_cast<::viam::component::camera::v1::Image*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.vision.v1.CaptureAllFromCameraResponse.image)
}
inline ::viam::component::camera::v1::Image* CaptureAllFromCameraResponse::release_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::component::camera::v1::Image* released = _impl_.image_;
  _impl_.image_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::component::camera::v1::Image* CaptureAllFromCameraResponse::unsafe_arena_release_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.CaptureAllFromCameraResponse.image)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::component::camera::v1::Image* temp = _impl_.image_;
  _impl_.image_ = nullptr;
  return temp;
}
inline ::viam::component::camera::v1::Image* CaptureAllFromCameraResponse::_internal_mutable_image() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.image_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::component::camera::v1::Image>(GetArena());
    _impl_.image_ = reinterpret_cast<::viam::component::camera::v1::Image*>(p);
  }
  return _impl_.image_;
}
inline ::viam::component::camera::v1::Image* CaptureAllFromCameraResponse::mutable_image() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::component::camera::v1::Image* _msg = _internal_mutable_image();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.CaptureAllFromCameraResponse.image)
  return _msg;
}
inline void CaptureAllFromCameraResponse::set_allocated_image(::viam::component::camera::v1::Image* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.image_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.image_ = reinterpret_cast<::viam::component::camera::v1::Image*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.CaptureAllFromCameraResponse.image)
}

// repeated .viam.service.vision.v1.Detection detections = 2 [json_name = "detections"];
inline int CaptureAllFromCameraResponse::_internal_detections_size() const {
  return _internal_detections().size();
}
inline int CaptureAllFromCameraResponse::detections_size() const {
  return _internal_detections_size();
}
inline void CaptureAllFromCameraResponse::clear_detections() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.detections_.Clear();
}
inline ::viam::service::vision::v1::Detection* CaptureAllFromCameraResponse::mutable_detections(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.CaptureAllFromCameraResponse.detections)
  return _internal_mutable_detections()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>* CaptureAllFromCameraResponse::mutable_detections()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.vision.v1.CaptureAllFromCameraResponse.detections)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_detections();
}
inline const ::viam::service::vision::v1::Detection& CaptureAllFromCameraResponse::detections(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.CaptureAllFromCameraResponse.detections)
  return _internal_detections().Get(index);
}
inline ::viam::service::vision::v1::Detection* CaptureAllFromCameraResponse::add_detections() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::service::vision::v1::Detection* _add = _internal_mutable_detections()->Add();
  // @@protoc_insertion_point(field_add:viam.service.vision.v1.CaptureAllFromCameraResponse.detections)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>& CaptureAllFromCameraResponse::detections() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.vision.v1.CaptureAllFromCameraResponse.detections)
  return _internal_detections();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>&
CaptureAllFromCameraResponse::_internal_detections() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.detections_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Detection>*
CaptureAllFromCameraResponse::_internal_mutable_detections() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.detections_;
}

// repeated .viam.service.vision.v1.Classification classifications = 3 [json_name = "classifications"];
inline int CaptureAllFromCameraResponse::_internal_classifications_size() const {
  return _internal_classifications().size();
}
inline int CaptureAllFromCameraResponse::classifications_size() const {
  return _internal_classifications_size();
}
inline void CaptureAllFromCameraResponse::clear_classifications() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.classifications_.Clear();
}
inline ::viam::service::vision::v1::Classification* CaptureAllFromCameraResponse::mutable_classifications(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.CaptureAllFromCameraResponse.classifications)
  return _internal_mutable_classifications()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>* CaptureAllFromCameraResponse::mutable_classifications()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.vision.v1.CaptureAllFromCameraResponse.classifications)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_classifications();
}
inline const ::viam::service::vision::v1::Classification& CaptureAllFromCameraResponse::classifications(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.CaptureAllFromCameraResponse.classifications)
  return _internal_classifications().Get(index);
}
inline ::viam::service::vision::v1::Classification* CaptureAllFromCameraResponse::add_classifications() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::service::vision::v1::Classification* _add = _internal_mutable_classifications()->Add();
  // @@protoc_insertion_point(field_add:viam.service.vision.v1.CaptureAllFromCameraResponse.classifications)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>& CaptureAllFromCameraResponse::classifications() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.vision.v1.CaptureAllFromCameraResponse.classifications)
  return _internal_classifications();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>&
CaptureAllFromCameraResponse::_internal_classifications() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.classifications_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::service::vision::v1::Classification>*
CaptureAllFromCameraResponse::_internal_mutable_classifications() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.classifications_;
}

// repeated .viam.common.v1.PointCloudObject objects = 4 [json_name = "objects"];
inline int CaptureAllFromCameraResponse::_internal_objects_size() const {
  return _internal_objects().size();
}
inline int CaptureAllFromCameraResponse::objects_size() const {
  return _internal_objects_size();
}
inline ::viam::common::v1::PointCloudObject* CaptureAllFromCameraResponse::mutable_objects(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.CaptureAllFromCameraResponse.objects)
  return _internal_mutable_objects()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::PointCloudObject>* CaptureAllFromCameraResponse::mutable_objects()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.service.vision.v1.CaptureAllFromCameraResponse.objects)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_objects();
}
inline const ::viam::common::v1::PointCloudObject& CaptureAllFromCameraResponse::objects(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.CaptureAllFromCameraResponse.objects)
  return _internal_objects().Get(index);
}
inline ::viam::common::v1::PointCloudObject* CaptureAllFromCameraResponse::add_objects() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::PointCloudObject* _add = _internal_mutable_objects()->Add();
  // @@protoc_insertion_point(field_add:viam.service.vision.v1.CaptureAllFromCameraResponse.objects)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::PointCloudObject>& CaptureAllFromCameraResponse::objects() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.service.vision.v1.CaptureAllFromCameraResponse.objects)
  return _internal_objects();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::PointCloudObject>&
CaptureAllFromCameraResponse::_internal_objects() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.objects_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::PointCloudObject>*
CaptureAllFromCameraResponse::_internal_mutable_objects() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.objects_;
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool CaptureAllFromCameraResponse::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& CaptureAllFromCameraResponse::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& CaptureAllFromCameraResponse::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.CaptureAllFromCameraResponse.extra)
  return _internal_extra();
}
inline void CaptureAllFromCameraResponse::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.service.vision.v1.CaptureAllFromCameraResponse.extra)
}
inline ::google::protobuf::Struct* CaptureAllFromCameraResponse::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* CaptureAllFromCameraResponse::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.service.vision.v1.CaptureAllFromCameraResponse.extra)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* CaptureAllFromCameraResponse::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* CaptureAllFromCameraResponse::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.service.vision.v1.CaptureAllFromCameraResponse.extra)
  return _msg;
}
inline void CaptureAllFromCameraResponse::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.service.vision.v1.CaptureAllFromCameraResponse.extra)
}

// -------------------------------------------------------------------

// GetPropertiesResponse

// bool classifications_supported = 1 [json_name = "classificationsSupported"];
inline void GetPropertiesResponse::clear_classifications_supported() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.classifications_supported_ = false;
}
inline bool GetPropertiesResponse::classifications_supported() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetPropertiesResponse.classifications_supported)
  return _internal_classifications_supported();
}
inline void GetPropertiesResponse::set_classifications_supported(bool value) {
  _internal_set_classifications_supported(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetPropertiesResponse.classifications_supported)
}
inline bool GetPropertiesResponse::_internal_classifications_supported() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.classifications_supported_;
}
inline void GetPropertiesResponse::_internal_set_classifications_supported(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.classifications_supported_ = value;
}

// bool detections_supported = 2 [json_name = "detectionsSupported"];
inline void GetPropertiesResponse::clear_detections_supported() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.detections_supported_ = false;
}
inline bool GetPropertiesResponse::detections_supported() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetPropertiesResponse.detections_supported)
  return _internal_detections_supported();
}
inline void GetPropertiesResponse::set_detections_supported(bool value) {
  _internal_set_detections_supported(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetPropertiesResponse.detections_supported)
}
inline bool GetPropertiesResponse::_internal_detections_supported() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.detections_supported_;
}
inline void GetPropertiesResponse::_internal_set_detections_supported(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.detections_supported_ = value;
}

// bool object_point_clouds_supported = 3 [json_name = "objectPointCloudsSupported"];
inline void GetPropertiesResponse::clear_object_point_clouds_supported() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.object_point_clouds_supported_ = false;
}
inline bool GetPropertiesResponse::object_point_clouds_supported() const {
  // @@protoc_insertion_point(field_get:viam.service.vision.v1.GetPropertiesResponse.object_point_clouds_supported)
  return _internal_object_point_clouds_supported();
}
inline void GetPropertiesResponse::set_object_point_clouds_supported(bool value) {
  _internal_set_object_point_clouds_supported(value);
  // @@protoc_insertion_point(field_set:viam.service.vision.v1.GetPropertiesResponse.object_point_clouds_supported)
}
inline bool GetPropertiesResponse::_internal_object_point_clouds_supported() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.object_point_clouds_supported_;
}
inline void GetPropertiesResponse::_internal_set_object_point_clouds_supported(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.object_point_clouds_supported_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace vision
}  // namespace service
}  // namespace viam


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_service_2fvision_2fv1_2fvision_2eproto_2epb_2eh
