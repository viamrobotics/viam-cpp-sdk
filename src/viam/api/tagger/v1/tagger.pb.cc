// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tagger/v1/tagger.proto

#include "tagger/v1/tagger.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tagger {
namespace v1 {
}  // namespace v1
}  // namespace tagger
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tagger_2fv1_2ftagger_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tagger_2fv1_2ftagger_2eproto = nullptr;
const ::uint32_t TableStruct_tagger_2fv1_2ftagger_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;
const char descriptor_table_protodef_tagger_2fv1_2ftagger_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\026tagger/v1/tagger.proto\022\ttagger.v1\032 goo"
    "gle/protobuf/descriptor.proto:3\n\004tags\022\035."
    "google.protobuf.FieldOptions\030\303\3403 \001(\tR\004ta"
    "gs:>\n\noneof_tags\022\035.google.protobuf.Oneof"
    "Options\030\303\3403 \001(\tR\toneofTagsB\225\001\n\rcom.tagge"
    "r.v1B\013TaggerProtoP\001Z2github.com/srikrsna"
    "/protoc-gen-gotag/tagger;tagger\242\002\003TXX\252\002\t"
    "Tagger.V1\312\002\tTagger\\V1\342\002\025Tagger\\V1\\GPBMet"
    "adata\352\002\nTagger::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tagger_2fv1_2ftagger_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::absl::once_flag descriptor_table_tagger_2fv1_2ftagger_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tagger_2fv1_2ftagger_2eproto = {
    false,
    false,
    346,
    descriptor_table_protodef_tagger_2fv1_2ftagger_2eproto,
    "tagger/v1/tagger.proto",
    &descriptor_table_tagger_2fv1_2ftagger_2eproto_once,
    descriptor_table_tagger_2fv1_2ftagger_2eproto_deps,
    1,
    0,
    schemas,
    file_default_instances,
    TableStruct_tagger_2fv1_2ftagger_2eproto::offsets,
    nullptr,
    file_level_enum_descriptors_tagger_2fv1_2ftagger_2eproto,
    file_level_service_descriptors_tagger_2fv1_2ftagger_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tagger_2fv1_2ftagger_2eproto_getter() {
  return &descriptor_table_tagger_2fv1_2ftagger_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tagger_2fv1_2ftagger_2eproto(&descriptor_table_tagger_2fv1_2ftagger_2eproto);
namespace tagger {
namespace v1 {
const std::string tags_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  tags(kTagsFieldNumber, tags_default, nullptr);
const std::string oneof_tags_default("");
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::OneofOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false>
  oneof_tags(kOneofTagsFieldNumber, oneof_tags_default, nullptr);
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace tagger
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
