// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/v1/common.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_common_2fv1_2fcommon_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_common_2fv1_2fcommon_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/descriptor.pb.h"
#include "google/protobuf/struct.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_2fv1_2fcommon_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_common_2fv1_2fcommon_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_common_2fv1_2fcommon_2eproto;
namespace viam {
namespace common {
namespace v1 {
class ActuatorStatus;
struct ActuatorStatusDefaultTypeInternal;
extern ActuatorStatusDefaultTypeInternal _ActuatorStatus_default_instance_;
class Capsule;
struct CapsuleDefaultTypeInternal;
extern CapsuleDefaultTypeInternal _Capsule_default_instance_;
class DoCommandRequest;
struct DoCommandRequestDefaultTypeInternal;
extern DoCommandRequestDefaultTypeInternal _DoCommandRequest_default_instance_;
class DoCommandResponse;
struct DoCommandResponseDefaultTypeInternal;
extern DoCommandResponseDefaultTypeInternal _DoCommandResponse_default_instance_;
class GeoGeometry;
struct GeoGeometryDefaultTypeInternal;
extern GeoGeometryDefaultTypeInternal _GeoGeometry_default_instance_;
class GeoPoint;
struct GeoPointDefaultTypeInternal;
extern GeoPointDefaultTypeInternal _GeoPoint_default_instance_;
class GeometriesInFrame;
struct GeometriesInFrameDefaultTypeInternal;
extern GeometriesInFrameDefaultTypeInternal _GeometriesInFrame_default_instance_;
class Geometry;
struct GeometryDefaultTypeInternal;
extern GeometryDefaultTypeInternal _Geometry_default_instance_;
class GetGeometriesRequest;
struct GetGeometriesRequestDefaultTypeInternal;
extern GetGeometriesRequestDefaultTypeInternal _GetGeometriesRequest_default_instance_;
class GetGeometriesResponse;
struct GetGeometriesResponseDefaultTypeInternal;
extern GetGeometriesResponseDefaultTypeInternal _GetGeometriesResponse_default_instance_;
class GetKinematicsRequest;
struct GetKinematicsRequestDefaultTypeInternal;
extern GetKinematicsRequestDefaultTypeInternal _GetKinematicsRequest_default_instance_;
class GetKinematicsResponse;
struct GetKinematicsResponseDefaultTypeInternal;
extern GetKinematicsResponseDefaultTypeInternal _GetKinematicsResponse_default_instance_;
class GetReadingsRequest;
struct GetReadingsRequestDefaultTypeInternal;
extern GetReadingsRequestDefaultTypeInternal _GetReadingsRequest_default_instance_;
class GetReadingsResponse;
struct GetReadingsResponseDefaultTypeInternal;
extern GetReadingsResponseDefaultTypeInternal _GetReadingsResponse_default_instance_;
class GetReadingsResponse_ReadingsEntry_DoNotUse;
struct GetReadingsResponse_ReadingsEntry_DoNotUseDefaultTypeInternal;
extern GetReadingsResponse_ReadingsEntry_DoNotUseDefaultTypeInternal _GetReadingsResponse_ReadingsEntry_DoNotUse_default_instance_;
class LogEntry;
struct LogEntryDefaultTypeInternal;
extern LogEntryDefaultTypeInternal _LogEntry_default_instance_;
class Orientation;
struct OrientationDefaultTypeInternal;
extern OrientationDefaultTypeInternal _Orientation_default_instance_;
class PointCloudObject;
struct PointCloudObjectDefaultTypeInternal;
extern PointCloudObjectDefaultTypeInternal _PointCloudObject_default_instance_;
class Pose;
struct PoseDefaultTypeInternal;
extern PoseDefaultTypeInternal _Pose_default_instance_;
class PoseInFrame;
struct PoseInFrameDefaultTypeInternal;
extern PoseInFrameDefaultTypeInternal _PoseInFrame_default_instance_;
class RectangularPrism;
struct RectangularPrismDefaultTypeInternal;
extern RectangularPrismDefaultTypeInternal _RectangularPrism_default_instance_;
class ResourceName;
struct ResourceNameDefaultTypeInternal;
extern ResourceNameDefaultTypeInternal _ResourceName_default_instance_;
class ResponseMetadata;
struct ResponseMetadataDefaultTypeInternal;
extern ResponseMetadataDefaultTypeInternal _ResponseMetadata_default_instance_;
class Sphere;
struct SphereDefaultTypeInternal;
extern SphereDefaultTypeInternal _Sphere_default_instance_;
class Transform;
struct TransformDefaultTypeInternal;
extern TransformDefaultTypeInternal _Transform_default_instance_;
class Vector3;
struct Vector3DefaultTypeInternal;
extern Vector3DefaultTypeInternal _Vector3_default_instance_;
class WorldState;
struct WorldStateDefaultTypeInternal;
extern WorldStateDefaultTypeInternal _WorldState_default_instance_;
}  // namespace v1
}  // namespace common
}  // namespace viam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace viam {
namespace common {
namespace v1 {
enum KinematicsFileFormat : int {
  KINEMATICS_FILE_FORMAT_UNSPECIFIED = 0,
  KINEMATICS_FILE_FORMAT_SVA = 1,
  KINEMATICS_FILE_FORMAT_URDF = 2,
  KinematicsFileFormat_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  KinematicsFileFormat_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool KinematicsFileFormat_IsValid(int value);
extern const uint32_t KinematicsFileFormat_internal_data_[];
constexpr KinematicsFileFormat KinematicsFileFormat_MIN = static_cast<KinematicsFileFormat>(0);
constexpr KinematicsFileFormat KinematicsFileFormat_MAX = static_cast<KinematicsFileFormat>(2);
constexpr int KinematicsFileFormat_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
KinematicsFileFormat_descriptor();
template <typename T>
const std::string& KinematicsFileFormat_Name(T value) {
  static_assert(std::is_same<T, KinematicsFileFormat>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to KinematicsFileFormat_Name().");
  return KinematicsFileFormat_Name(static_cast<KinematicsFileFormat>(value));
}
template <>
inline const std::string& KinematicsFileFormat_Name(KinematicsFileFormat value) {
  return ::google::protobuf::internal::NameOfDenseEnum<KinematicsFileFormat_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool KinematicsFileFormat_Parse(absl::string_view name, KinematicsFileFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<KinematicsFileFormat>(
      KinematicsFileFormat_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Vector3 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.Vector3) */ {
 public:
  inline Vector3() : Vector3(nullptr) {}
  ~Vector3() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Vector3(::google::protobuf::internal::ConstantInitialized);

  inline Vector3(const Vector3& from)
      : Vector3(nullptr, from) {}
  Vector3(Vector3&& from) noexcept
    : Vector3() {
    *this = ::std::move(from);
  }

  inline Vector3& operator=(const Vector3& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector3& operator=(Vector3&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector3& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector3* internal_default_instance() {
    return reinterpret_cast<const Vector3*>(
               &_Vector3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Vector3& a, Vector3& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector3* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector3* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Vector3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Vector3& from) {
    Vector3::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Vector3* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.Vector3";
  }
  protected:
  explicit Vector3(::google::protobuf::Arena* arena);
  Vector3(::google::protobuf::Arena* arena, const Vector3& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1 [json_name = "x"];
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2 [json_name = "y"];
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3 [json_name = "z"];
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.Vector3)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double x_;
    double y_;
    double z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class Sphere final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.Sphere) */ {
 public:
  inline Sphere() : Sphere(nullptr) {}
  ~Sphere() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Sphere(::google::protobuf::internal::ConstantInitialized);

  inline Sphere(const Sphere& from)
      : Sphere(nullptr, from) {}
  Sphere(Sphere&& from) noexcept
    : Sphere() {
    *this = ::std::move(from);
  }

  inline Sphere& operator=(const Sphere& from) {
    CopyFrom(from);
    return *this;
  }
  inline Sphere& operator=(Sphere&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Sphere& default_instance() {
    return *internal_default_instance();
  }
  static inline const Sphere* internal_default_instance() {
    return reinterpret_cast<const Sphere*>(
               &_Sphere_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Sphere& a, Sphere& b) {
    a.Swap(&b);
  }
  inline void Swap(Sphere* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Sphere* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Sphere* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Sphere>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Sphere& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Sphere& from) {
    Sphere::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Sphere* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.Sphere";
  }
  protected:
  explicit Sphere(::google::protobuf::Arena* arena);
  Sphere(::google::protobuf::Arena* arena, const Sphere& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRadiusMmFieldNumber = 1,
  };
  // double radius_mm = 1 [json_name = "radiusMm"];
  void clear_radius_mm() ;
  double radius_mm() const;
  void set_radius_mm(double value);

  private:
  double _internal_radius_mm() const;
  void _internal_set_radius_mm(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.Sphere)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double radius_mm_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class ResourceName final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.ResourceName) */ {
 public:
  inline ResourceName() : ResourceName(nullptr) {}
  ~ResourceName() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResourceName(::google::protobuf::internal::ConstantInitialized);

  inline ResourceName(const ResourceName& from)
      : ResourceName(nullptr, from) {}
  ResourceName(ResourceName&& from) noexcept
    : ResourceName() {
    *this = ::std::move(from);
  }

  inline ResourceName& operator=(const ResourceName& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceName& operator=(ResourceName&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResourceName& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResourceName* internal_default_instance() {
    return reinterpret_cast<const ResourceName*>(
               &_ResourceName_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ResourceName& a, ResourceName& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceName* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResourceName* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResourceName* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResourceName>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResourceName& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ResourceName& from) {
    ResourceName::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResourceName* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.ResourceName";
  }
  protected:
  explicit ResourceName(::google::protobuf::Arena* arena);
  ResourceName(::google::protobuf::Arena* arena, const ResourceName& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNamespaceFieldNumber = 1,
    kTypeFieldNumber = 2,
    kSubtypeFieldNumber = 3,
    kNameFieldNumber = 4,
  };
  // string namespace = 1 [json_name = "namespace"];
  void clear_namespace_() ;
  const std::string& namespace_() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_namespace_(Arg_&& arg, Args_... args);
  std::string* mutable_namespace_();
  PROTOBUF_NODISCARD std::string* release_namespace_();
  void set_allocated_namespace_(std::string* value);

  private:
  const std::string& _internal_namespace_() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_namespace_(
      const std::string& value);
  std::string* _internal_mutable_namespace_();

  public:
  // string type = 2 [json_name = "type"];
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string subtype = 3 [json_name = "subtype"];
  void clear_subtype() ;
  const std::string& subtype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subtype(Arg_&& arg, Args_... args);
  std::string* mutable_subtype();
  PROTOBUF_NODISCARD std::string* release_subtype();
  void set_allocated_subtype(std::string* value);

  private:
  const std::string& _internal_subtype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subtype(
      const std::string& value);
  std::string* _internal_mutable_subtype();

  public:
  // string name = 4 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.ResourceName)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr namespace__;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr subtype_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class Pose final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.Pose) */ {
 public:
  inline Pose() : Pose(nullptr) {}
  ~Pose() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Pose(::google::protobuf::internal::ConstantInitialized);

  inline Pose(const Pose& from)
      : Pose(nullptr, from) {}
  Pose(Pose&& from) noexcept
    : Pose() {
    *this = ::std::move(from);
  }

  inline Pose& operator=(const Pose& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pose& operator=(Pose&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pose& default_instance() {
    return *internal_default_instance();
  }
  static inline const Pose* internal_default_instance() {
    return reinterpret_cast<const Pose*>(
               &_Pose_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Pose& a, Pose& b) {
    a.Swap(&b);
  }
  inline void Swap(Pose* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pose* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pose* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Pose>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Pose& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Pose& from) {
    Pose::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Pose* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.Pose";
  }
  protected:
  explicit Pose(::google::protobuf::Arena* arena);
  Pose(::google::protobuf::Arena* arena, const Pose& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kOXFieldNumber = 4,
    kOYFieldNumber = 5,
    kOZFieldNumber = 6,
    kThetaFieldNumber = 7,
  };
  // double x = 1 [json_name = "x"];
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2 [json_name = "y"];
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3 [json_name = "z"];
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // double o_x = 4 [json_name = "oX"];
  void clear_o_x() ;
  double o_x() const;
  void set_o_x(double value);

  private:
  double _internal_o_x() const;
  void _internal_set_o_x(double value);

  public:
  // double o_y = 5 [json_name = "oY"];
  void clear_o_y() ;
  double o_y() const;
  void set_o_y(double value);

  private:
  double _internal_o_y() const;
  void _internal_set_o_y(double value);

  public:
  // double o_z = 6 [json_name = "oZ"];
  void clear_o_z() ;
  double o_z() const;
  void set_o_z(double value);

  private:
  double _internal_o_z() const;
  void _internal_set_o_z(double value);

  public:
  // double theta = 7 [json_name = "theta"];
  void clear_theta() ;
  double theta() const;
  void set_theta(double value);

  private:
  double _internal_theta() const;
  void _internal_set_theta(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.Pose)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double x_;
    double y_;
    double z_;
    double o_x_;
    double o_y_;
    double o_z_;
    double theta_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class Orientation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.Orientation) */ {
 public:
  inline Orientation() : Orientation(nullptr) {}
  ~Orientation() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Orientation(::google::protobuf::internal::ConstantInitialized);

  inline Orientation(const Orientation& from)
      : Orientation(nullptr, from) {}
  Orientation(Orientation&& from) noexcept
    : Orientation() {
    *this = ::std::move(from);
  }

  inline Orientation& operator=(const Orientation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Orientation& operator=(Orientation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Orientation& default_instance() {
    return *internal_default_instance();
  }
  static inline const Orientation* internal_default_instance() {
    return reinterpret_cast<const Orientation*>(
               &_Orientation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Orientation& a, Orientation& b) {
    a.Swap(&b);
  }
  inline void Swap(Orientation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Orientation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Orientation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Orientation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Orientation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Orientation& from) {
    Orientation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Orientation* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.Orientation";
  }
  protected:
  explicit Orientation(::google::protobuf::Arena* arena);
  Orientation(::google::protobuf::Arena* arena, const Orientation& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOXFieldNumber = 1,
    kOYFieldNumber = 2,
    kOZFieldNumber = 3,
    kThetaFieldNumber = 4,
  };
  // double o_x = 1 [json_name = "oX"];
  void clear_o_x() ;
  double o_x() const;
  void set_o_x(double value);

  private:
  double _internal_o_x() const;
  void _internal_set_o_x(double value);

  public:
  // double o_y = 2 [json_name = "oY"];
  void clear_o_y() ;
  double o_y() const;
  void set_o_y(double value);

  private:
  double _internal_o_y() const;
  void _internal_set_o_y(double value);

  public:
  // double o_z = 3 [json_name = "oZ"];
  void clear_o_z() ;
  double o_z() const;
  void set_o_z(double value);

  private:
  double _internal_o_z() const;
  void _internal_set_o_z(double value);

  public:
  // double theta = 4 [json_name = "theta"];
  void clear_theta() ;
  double theta() const;
  void set_theta(double value);

  private:
  double _internal_theta() const;
  void _internal_set_theta(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.Orientation)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double o_x_;
    double o_y_;
    double o_z_;
    double theta_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class GetKinematicsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.GetKinematicsResponse) */ {
 public:
  inline GetKinematicsResponse() : GetKinematicsResponse(nullptr) {}
  ~GetKinematicsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetKinematicsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetKinematicsResponse(const GetKinematicsResponse& from)
      : GetKinematicsResponse(nullptr, from) {}
  GetKinematicsResponse(GetKinematicsResponse&& from) noexcept
    : GetKinematicsResponse() {
    *this = ::std::move(from);
  }

  inline GetKinematicsResponse& operator=(const GetKinematicsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetKinematicsResponse& operator=(GetKinematicsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetKinematicsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetKinematicsResponse* internal_default_instance() {
    return reinterpret_cast<const GetKinematicsResponse*>(
               &_GetKinematicsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(GetKinematicsResponse& a, GetKinematicsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetKinematicsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetKinematicsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetKinematicsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetKinematicsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetKinematicsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetKinematicsResponse& from) {
    GetKinematicsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetKinematicsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.GetKinematicsResponse";
  }
  protected:
  explicit GetKinematicsResponse(::google::protobuf::Arena* arena);
  GetKinematicsResponse(::google::protobuf::Arena* arena, const GetKinematicsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKinematicsDataFieldNumber = 2,
    kFormatFieldNumber = 1,
  };
  // bytes kinematics_data = 2 [json_name = "kinematicsData"];
  void clear_kinematics_data() ;
  const std::string& kinematics_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_kinematics_data(Arg_&& arg, Args_... args);
  std::string* mutable_kinematics_data();
  PROTOBUF_NODISCARD std::string* release_kinematics_data();
  void set_allocated_kinematics_data(std::string* value);

  private:
  const std::string& _internal_kinematics_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_kinematics_data(
      const std::string& value);
  std::string* _internal_mutable_kinematics_data();

  public:
  // .viam.common.v1.KinematicsFileFormat format = 1 [json_name = "format"];
  void clear_format() ;
  ::viam::common::v1::KinematicsFileFormat format() const;
  void set_format(::viam::common::v1::KinematicsFileFormat value);

  private:
  ::viam::common::v1::KinematicsFileFormat _internal_format() const;
  void _internal_set_format(::viam::common::v1::KinematicsFileFormat value);

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.GetKinematicsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr kinematics_data_;
    int format_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class GeoPoint final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.GeoPoint) */ {
 public:
  inline GeoPoint() : GeoPoint(nullptr) {}
  ~GeoPoint() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GeoPoint(::google::protobuf::internal::ConstantInitialized);

  inline GeoPoint(const GeoPoint& from)
      : GeoPoint(nullptr, from) {}
  GeoPoint(GeoPoint&& from) noexcept
    : GeoPoint() {
    *this = ::std::move(from);
  }

  inline GeoPoint& operator=(const GeoPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoPoint& operator=(GeoPoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeoPoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeoPoint* internal_default_instance() {
    return reinterpret_cast<const GeoPoint*>(
               &_GeoPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(GeoPoint& a, GeoPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(GeoPoint* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeoPoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeoPoint* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GeoPoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GeoPoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GeoPoint& from) {
    GeoPoint::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GeoPoint* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.GeoPoint";
  }
  protected:
  explicit GeoPoint(::google::protobuf::Arena* arena);
  GeoPoint(::google::protobuf::Arena* arena, const GeoPoint& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLatitudeFieldNumber = 1,
    kLongitudeFieldNumber = 2,
  };
  // double latitude = 1 [json_name = "latitude"];
  void clear_latitude() ;
  double latitude() const;
  void set_latitude(double value);

  private:
  double _internal_latitude() const;
  void _internal_set_latitude(double value);

  public:
  // double longitude = 2 [json_name = "longitude"];
  void clear_longitude() ;
  double longitude() const;
  void set_longitude(double value);

  private:
  double _internal_longitude() const;
  void _internal_set_longitude(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.GeoPoint)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double latitude_;
    double longitude_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class Capsule final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.Capsule) */ {
 public:
  inline Capsule() : Capsule(nullptr) {}
  ~Capsule() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Capsule(::google::protobuf::internal::ConstantInitialized);

  inline Capsule(const Capsule& from)
      : Capsule(nullptr, from) {}
  Capsule(Capsule&& from) noexcept
    : Capsule() {
    *this = ::std::move(from);
  }

  inline Capsule& operator=(const Capsule& from) {
    CopyFrom(from);
    return *this;
  }
  inline Capsule& operator=(Capsule&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Capsule& default_instance() {
    return *internal_default_instance();
  }
  static inline const Capsule* internal_default_instance() {
    return reinterpret_cast<const Capsule*>(
               &_Capsule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Capsule& a, Capsule& b) {
    a.Swap(&b);
  }
  inline void Swap(Capsule* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Capsule* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Capsule* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Capsule>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Capsule& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Capsule& from) {
    Capsule::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Capsule* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.Capsule";
  }
  protected:
  explicit Capsule(::google::protobuf::Arena* arena);
  Capsule(::google::protobuf::Arena* arena, const Capsule& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRadiusMmFieldNumber = 1,
    kLengthMmFieldNumber = 2,
  };
  // double radius_mm = 1 [json_name = "radiusMm"];
  void clear_radius_mm() ;
  double radius_mm() const;
  void set_radius_mm(double value);

  private:
  double _internal_radius_mm() const;
  void _internal_set_radius_mm(double value);

  public:
  // double length_mm = 2 [json_name = "lengthMm"];
  void clear_length_mm() ;
  double length_mm() const;
  void set_length_mm(double value);

  private:
  double _internal_length_mm() const;
  void _internal_set_length_mm(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.Capsule)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double radius_mm_;
    double length_mm_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class ActuatorStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.ActuatorStatus) */ {
 public:
  inline ActuatorStatus() : ActuatorStatus(nullptr) {}
  ~ActuatorStatus() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ActuatorStatus(::google::protobuf::internal::ConstantInitialized);

  inline ActuatorStatus(const ActuatorStatus& from)
      : ActuatorStatus(nullptr, from) {}
  ActuatorStatus(ActuatorStatus&& from) noexcept
    : ActuatorStatus() {
    *this = ::std::move(from);
  }

  inline ActuatorStatus& operator=(const ActuatorStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActuatorStatus& operator=(ActuatorStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActuatorStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActuatorStatus* internal_default_instance() {
    return reinterpret_cast<const ActuatorStatus*>(
               &_ActuatorStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ActuatorStatus& a, ActuatorStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(ActuatorStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActuatorStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActuatorStatus* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ActuatorStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ActuatorStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ActuatorStatus& from) {
    ActuatorStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ActuatorStatus* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.ActuatorStatus";
  }
  protected:
  explicit ActuatorStatus(::google::protobuf::Arena* arena);
  ActuatorStatus(::google::protobuf::Arena* arena, const ActuatorStatus& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsMovingFieldNumber = 1,
  };
  // bool is_moving = 1 [json_name = "isMoving"];
  void clear_is_moving() ;
  bool is_moving() const;
  void set_is_moving(bool value);

  private:
  bool _internal_is_moving() const;
  void _internal_set_is_moving(bool value);

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.ActuatorStatus)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool is_moving_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class ResponseMetadata final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.ResponseMetadata) */ {
 public:
  inline ResponseMetadata() : ResponseMetadata(nullptr) {}
  ~ResponseMetadata() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResponseMetadata(::google::protobuf::internal::ConstantInitialized);

  inline ResponseMetadata(const ResponseMetadata& from)
      : ResponseMetadata(nullptr, from) {}
  ResponseMetadata(ResponseMetadata&& from) noexcept
    : ResponseMetadata() {
    *this = ::std::move(from);
  }

  inline ResponseMetadata& operator=(const ResponseMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResponseMetadata& operator=(ResponseMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResponseMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResponseMetadata* internal_default_instance() {
    return reinterpret_cast<const ResponseMetadata*>(
               &_ResponseMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(ResponseMetadata& a, ResponseMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(ResponseMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResponseMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResponseMetadata* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResponseMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResponseMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ResponseMetadata& from) {
    ResponseMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResponseMetadata* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.ResponseMetadata";
  }
  protected:
  explicit ResponseMetadata(::google::protobuf::Arena* arena);
  ResponseMetadata(::google::protobuf::Arena* arena, const ResponseMetadata& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCapturedAtFieldNumber = 1,
  };
  // optional .google.protobuf.Timestamp captured_at = 1 [json_name = "capturedAt"];
  bool has_captured_at() const;
  void clear_captured_at() ;
  const ::google::protobuf::Timestamp& captured_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_captured_at();
  ::google::protobuf::Timestamp* mutable_captured_at();
  void set_allocated_captured_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_captured_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_captured_at();

  private:
  const ::google::protobuf::Timestamp& _internal_captured_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_captured_at();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.ResponseMetadata)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* captured_at_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class RectangularPrism final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.RectangularPrism) */ {
 public:
  inline RectangularPrism() : RectangularPrism(nullptr) {}
  ~RectangularPrism() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RectangularPrism(::google::protobuf::internal::ConstantInitialized);

  inline RectangularPrism(const RectangularPrism& from)
      : RectangularPrism(nullptr, from) {}
  RectangularPrism(RectangularPrism&& from) noexcept
    : RectangularPrism() {
    *this = ::std::move(from);
  }

  inline RectangularPrism& operator=(const RectangularPrism& from) {
    CopyFrom(from);
    return *this;
  }
  inline RectangularPrism& operator=(RectangularPrism&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RectangularPrism& default_instance() {
    return *internal_default_instance();
  }
  static inline const RectangularPrism* internal_default_instance() {
    return reinterpret_cast<const RectangularPrism*>(
               &_RectangularPrism_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(RectangularPrism& a, RectangularPrism& b) {
    a.Swap(&b);
  }
  inline void Swap(RectangularPrism* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RectangularPrism* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RectangularPrism* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RectangularPrism>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RectangularPrism& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RectangularPrism& from) {
    RectangularPrism::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RectangularPrism* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.RectangularPrism";
  }
  protected:
  explicit RectangularPrism(::google::protobuf::Arena* arena);
  RectangularPrism(::google::protobuf::Arena* arena, const RectangularPrism& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimsMmFieldNumber = 1,
  };
  // .viam.common.v1.Vector3 dims_mm = 1 [json_name = "dimsMm"];
  bool has_dims_mm() const;
  void clear_dims_mm() ;
  const ::viam::common::v1::Vector3& dims_mm() const;
  PROTOBUF_NODISCARD ::viam::common::v1::Vector3* release_dims_mm();
  ::viam::common::v1::Vector3* mutable_dims_mm();
  void set_allocated_dims_mm(::viam::common::v1::Vector3* value);
  void unsafe_arena_set_allocated_dims_mm(::viam::common::v1::Vector3* value);
  ::viam::common::v1::Vector3* unsafe_arena_release_dims_mm();

  private:
  const ::viam::common::v1::Vector3& _internal_dims_mm() const;
  ::viam::common::v1::Vector3* _internal_mutable_dims_mm();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.RectangularPrism)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::common::v1::Vector3* dims_mm_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class PoseInFrame final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.PoseInFrame) */ {
 public:
  inline PoseInFrame() : PoseInFrame(nullptr) {}
  ~PoseInFrame() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PoseInFrame(::google::protobuf::internal::ConstantInitialized);

  inline PoseInFrame(const PoseInFrame& from)
      : PoseInFrame(nullptr, from) {}
  PoseInFrame(PoseInFrame&& from) noexcept
    : PoseInFrame() {
    *this = ::std::move(from);
  }

  inline PoseInFrame& operator=(const PoseInFrame& from) {
    CopyFrom(from);
    return *this;
  }
  inline PoseInFrame& operator=(PoseInFrame&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PoseInFrame& default_instance() {
    return *internal_default_instance();
  }
  static inline const PoseInFrame* internal_default_instance() {
    return reinterpret_cast<const PoseInFrame*>(
               &_PoseInFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PoseInFrame& a, PoseInFrame& b) {
    a.Swap(&b);
  }
  inline void Swap(PoseInFrame* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PoseInFrame* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PoseInFrame* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PoseInFrame>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PoseInFrame& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PoseInFrame& from) {
    PoseInFrame::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PoseInFrame* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.PoseInFrame";
  }
  protected:
  explicit PoseInFrame(::google::protobuf::Arena* arena);
  PoseInFrame(::google::protobuf::Arena* arena, const PoseInFrame& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReferenceFrameFieldNumber = 1,
    kPoseFieldNumber = 2,
  };
  // string reference_frame = 1 [json_name = "referenceFrame"];
  void clear_reference_frame() ;
  const std::string& reference_frame() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reference_frame(Arg_&& arg, Args_... args);
  std::string* mutable_reference_frame();
  PROTOBUF_NODISCARD std::string* release_reference_frame();
  void set_allocated_reference_frame(std::string* value);

  private:
  const std::string& _internal_reference_frame() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reference_frame(
      const std::string& value);
  std::string* _internal_mutable_reference_frame();

  public:
  // .viam.common.v1.Pose pose = 2 [json_name = "pose"];
  bool has_pose() const;
  void clear_pose() ;
  const ::viam::common::v1::Pose& pose() const;
  PROTOBUF_NODISCARD ::viam::common::v1::Pose* release_pose();
  ::viam::common::v1::Pose* mutable_pose();
  void set_allocated_pose(::viam::common::v1::Pose* value);
  void unsafe_arena_set_allocated_pose(::viam::common::v1::Pose* value);
  ::viam::common::v1::Pose* unsafe_arena_release_pose();

  private:
  const ::viam::common::v1::Pose& _internal_pose() const;
  ::viam::common::v1::Pose* _internal_mutable_pose();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.PoseInFrame)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr reference_frame_;
    ::viam::common::v1::Pose* pose_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class LogEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.LogEntry) */ {
 public:
  inline LogEntry() : LogEntry(nullptr) {}
  ~LogEntry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LogEntry(::google::protobuf::internal::ConstantInitialized);

  inline LogEntry(const LogEntry& from)
      : LogEntry(nullptr, from) {}
  LogEntry(LogEntry&& from) noexcept
    : LogEntry() {
    *this = ::std::move(from);
  }

  inline LogEntry& operator=(const LogEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogEntry& operator=(LogEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const LogEntry* internal_default_instance() {
    return reinterpret_cast<const LogEntry*>(
               &_LogEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(LogEntry& a, LogEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(LogEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LogEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LogEntry& from) {
    LogEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LogEntry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.LogEntry";
  }
  protected:
  explicit LogEntry(::google::protobuf::Arena* arena);
  LogEntry(::google::protobuf::Arena* arena, const LogEntry& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldsFieldNumber = 8,
    kHostFieldNumber = 1,
    kLevelFieldNumber = 2,
    kLoggerNameFieldNumber = 4,
    kMessageFieldNumber = 5,
    kStackFieldNumber = 7,
    kTimeFieldNumber = 3,
    kCallerFieldNumber = 6,
  };
  // repeated .google.protobuf.Struct fields = 8 [json_name = "fields"];
  int fields_size() const;
  private:
  int _internal_fields_size() const;

  public:
  void clear_fields() ;
  ::google::protobuf::Struct* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Struct >*
      mutable_fields();
  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Struct>& _internal_fields() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Struct>* _internal_mutable_fields();
  public:
  const ::google::protobuf::Struct& fields(int index) const;
  ::google::protobuf::Struct* add_fields();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Struct >&
      fields() const;
  // string host = 1 [json_name = "host"];
  void clear_host() ;
  const std::string& host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_host(Arg_&& arg, Args_... args);
  std::string* mutable_host();
  PROTOBUF_NODISCARD std::string* release_host();
  void set_allocated_host(std::string* value);

  private:
  const std::string& _internal_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_host(
      const std::string& value);
  std::string* _internal_mutable_host();

  public:
  // string level = 2 [json_name = "level"];
  void clear_level() ;
  const std::string& level() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_level(Arg_&& arg, Args_... args);
  std::string* mutable_level();
  PROTOBUF_NODISCARD std::string* release_level();
  void set_allocated_level(std::string* value);

  private:
  const std::string& _internal_level() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_level(
      const std::string& value);
  std::string* _internal_mutable_level();

  public:
  // string logger_name = 4 [json_name = "loggerName"];
  void clear_logger_name() ;
  const std::string& logger_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_logger_name(Arg_&& arg, Args_... args);
  std::string* mutable_logger_name();
  PROTOBUF_NODISCARD std::string* release_logger_name();
  void set_allocated_logger_name(std::string* value);

  private:
  const std::string& _internal_logger_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_logger_name(
      const std::string& value);
  std::string* _internal_mutable_logger_name();

  public:
  // string message = 5 [json_name = "message"];
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // string stack = 7 [json_name = "stack"];
  void clear_stack() ;
  const std::string& stack() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_stack(Arg_&& arg, Args_... args);
  std::string* mutable_stack();
  PROTOBUF_NODISCARD std::string* release_stack();
  void set_allocated_stack(std::string* value);

  private:
  const std::string& _internal_stack() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stack(
      const std::string& value);
  std::string* _internal_mutable_stack();

  public:
  // .google.protobuf.Timestamp time = 3 [json_name = "time"];
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_time();
  ::google::protobuf::Timestamp* mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_time();

  public:
  // .google.protobuf.Struct caller = 6 [json_name = "caller"];
  bool has_caller() const;
  void clear_caller() ;
  const ::google::protobuf::Struct& caller() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_caller();
  ::google::protobuf::Struct* mutable_caller();
  void set_allocated_caller(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_caller(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_caller();

  private:
  const ::google::protobuf::Struct& _internal_caller() const;
  ::google::protobuf::Struct* _internal_mutable_caller();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.LogEntry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 3,
      72, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Struct > fields_;
    ::google::protobuf::internal::ArenaStringPtr host_;
    ::google::protobuf::internal::ArenaStringPtr level_;
    ::google::protobuf::internal::ArenaStringPtr logger_name_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::internal::ArenaStringPtr stack_;
    ::google::protobuf::Timestamp* time_;
    ::google::protobuf::Struct* caller_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class GetReadingsResponse_ReadingsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GetReadingsResponse_ReadingsEntry_DoNotUse, std::string, ::google::protobuf::Value,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GetReadingsResponse_ReadingsEntry_DoNotUse, std::string, ::google::protobuf::Value,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  GetReadingsResponse_ReadingsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetReadingsResponse_ReadingsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetReadingsResponse_ReadingsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GetReadingsResponse_ReadingsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GetReadingsResponse_ReadingsEntry_DoNotUse*>(
        &_GetReadingsResponse_ReadingsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "viam.common.v1.GetReadingsResponse.ReadingsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};
// -------------------------------------------------------------------

class GetReadingsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.GetReadingsRequest) */ {
 public:
  inline GetReadingsRequest() : GetReadingsRequest(nullptr) {}
  ~GetReadingsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetReadingsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetReadingsRequest(const GetReadingsRequest& from)
      : GetReadingsRequest(nullptr, from) {}
  GetReadingsRequest(GetReadingsRequest&& from) noexcept
    : GetReadingsRequest() {
    *this = ::std::move(from);
  }

  inline GetReadingsRequest& operator=(const GetReadingsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetReadingsRequest& operator=(GetReadingsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetReadingsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetReadingsRequest* internal_default_instance() {
    return reinterpret_cast<const GetReadingsRequest*>(
               &_GetReadingsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(GetReadingsRequest& a, GetReadingsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetReadingsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetReadingsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetReadingsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetReadingsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetReadingsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetReadingsRequest& from) {
    GetReadingsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetReadingsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.GetReadingsRequest";
  }
  protected:
  explicit GetReadingsRequest(::google::protobuf::Arena* arena);
  GetReadingsRequest(::google::protobuf::Arena* arena, const GetReadingsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.GetReadingsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      46, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class GetKinematicsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.GetKinematicsRequest) */ {
 public:
  inline GetKinematicsRequest() : GetKinematicsRequest(nullptr) {}
  ~GetKinematicsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetKinematicsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetKinematicsRequest(const GetKinematicsRequest& from)
      : GetKinematicsRequest(nullptr, from) {}
  GetKinematicsRequest(GetKinematicsRequest&& from) noexcept
    : GetKinematicsRequest() {
    *this = ::std::move(from);
  }

  inline GetKinematicsRequest& operator=(const GetKinematicsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetKinematicsRequest& operator=(GetKinematicsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetKinematicsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetKinematicsRequest* internal_default_instance() {
    return reinterpret_cast<const GetKinematicsRequest*>(
               &_GetKinematicsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(GetKinematicsRequest& a, GetKinematicsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetKinematicsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetKinematicsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetKinematicsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetKinematicsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetKinematicsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetKinematicsRequest& from) {
    GetKinematicsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetKinematicsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.GetKinematicsRequest";
  }
  protected:
  explicit GetKinematicsRequest(::google::protobuf::Arena* arena);
  GetKinematicsRequest(::google::protobuf::Arena* arena, const GetKinematicsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.GetKinematicsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      48, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class GetGeometriesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.GetGeometriesRequest) */ {
 public:
  inline GetGeometriesRequest() : GetGeometriesRequest(nullptr) {}
  ~GetGeometriesRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetGeometriesRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetGeometriesRequest(const GetGeometriesRequest& from)
      : GetGeometriesRequest(nullptr, from) {}
  GetGeometriesRequest(GetGeometriesRequest&& from) noexcept
    : GetGeometriesRequest() {
    *this = ::std::move(from);
  }

  inline GetGeometriesRequest& operator=(const GetGeometriesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGeometriesRequest& operator=(GetGeometriesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGeometriesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGeometriesRequest* internal_default_instance() {
    return reinterpret_cast<const GetGeometriesRequest*>(
               &_GetGeometriesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(GetGeometriesRequest& a, GetGeometriesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetGeometriesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGeometriesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGeometriesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetGeometriesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGeometriesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetGeometriesRequest& from) {
    GetGeometriesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetGeometriesRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.GetGeometriesRequest";
  }
  protected:
  explicit GetGeometriesRequest(::google::protobuf::Arena* arena);
  GetGeometriesRequest(::google::protobuf::Arena* arena, const GetGeometriesRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.GetGeometriesRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      48, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class DoCommandResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.DoCommandResponse) */ {
 public:
  inline DoCommandResponse() : DoCommandResponse(nullptr) {}
  ~DoCommandResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DoCommandResponse(::google::protobuf::internal::ConstantInitialized);

  inline DoCommandResponse(const DoCommandResponse& from)
      : DoCommandResponse(nullptr, from) {}
  DoCommandResponse(DoCommandResponse&& from) noexcept
    : DoCommandResponse() {
    *this = ::std::move(from);
  }

  inline DoCommandResponse& operator=(const DoCommandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DoCommandResponse& operator=(DoCommandResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DoCommandResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DoCommandResponse* internal_default_instance() {
    return reinterpret_cast<const DoCommandResponse*>(
               &_DoCommandResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(DoCommandResponse& a, DoCommandResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DoCommandResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DoCommandResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DoCommandResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DoCommandResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DoCommandResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DoCommandResponse& from) {
    DoCommandResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DoCommandResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.DoCommandResponse";
  }
  protected:
  explicit DoCommandResponse(::google::protobuf::Arena* arena);
  DoCommandResponse(::google::protobuf::Arena* arena, const DoCommandResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // .google.protobuf.Struct result = 1 [json_name = "result"];
  bool has_result() const;
  void clear_result() ;
  const ::google::protobuf::Struct& result() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_result();
  ::google::protobuf::Struct* mutable_result();
  void set_allocated_result(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_result(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_result();

  private:
  const ::google::protobuf::Struct& _internal_result() const;
  ::google::protobuf::Struct* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.DoCommandResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Struct* result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class DoCommandRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.DoCommandRequest) */ {
 public:
  inline DoCommandRequest() : DoCommandRequest(nullptr) {}
  ~DoCommandRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DoCommandRequest(::google::protobuf::internal::ConstantInitialized);

  inline DoCommandRequest(const DoCommandRequest& from)
      : DoCommandRequest(nullptr, from) {}
  DoCommandRequest(DoCommandRequest&& from) noexcept
    : DoCommandRequest() {
    *this = ::std::move(from);
  }

  inline DoCommandRequest& operator=(const DoCommandRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DoCommandRequest& operator=(DoCommandRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DoCommandRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DoCommandRequest* internal_default_instance() {
    return reinterpret_cast<const DoCommandRequest*>(
               &_DoCommandRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(DoCommandRequest& a, DoCommandRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DoCommandRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DoCommandRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DoCommandRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DoCommandRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DoCommandRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DoCommandRequest& from) {
    DoCommandRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DoCommandRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.DoCommandRequest";
  }
  protected:
  explicit DoCommandRequest(::google::protobuf::Arena* arena);
  DoCommandRequest(::google::protobuf::Arena* arena, const DoCommandRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kCommandFieldNumber = 2,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct command = 2 [json_name = "command"];
  bool has_command() const;
  void clear_command() ;
  const ::google::protobuf::Struct& command() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_command();
  ::google::protobuf::Struct* mutable_command();
  void set_allocated_command(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_command(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_command();

  private:
  const ::google::protobuf::Struct& _internal_command() const;
  ::google::protobuf::Struct* _internal_mutable_command();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.DoCommandRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* command_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class GetReadingsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.GetReadingsResponse) */ {
 public:
  inline GetReadingsResponse() : GetReadingsResponse(nullptr) {}
  ~GetReadingsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetReadingsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetReadingsResponse(const GetReadingsResponse& from)
      : GetReadingsResponse(nullptr, from) {}
  GetReadingsResponse(GetReadingsResponse&& from) noexcept
    : GetReadingsResponse() {
    *this = ::std::move(from);
  }

  inline GetReadingsResponse& operator=(const GetReadingsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetReadingsResponse& operator=(GetReadingsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetReadingsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetReadingsResponse* internal_default_instance() {
    return reinterpret_cast<const GetReadingsResponse*>(
               &_GetReadingsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(GetReadingsResponse& a, GetReadingsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetReadingsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetReadingsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetReadingsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetReadingsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetReadingsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetReadingsResponse& from) {
    GetReadingsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetReadingsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.GetReadingsResponse";
  }
  protected:
  explicit GetReadingsResponse(::google::protobuf::Arena* arena);
  GetReadingsResponse(::google::protobuf::Arena* arena, const GetReadingsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kReadingsFieldNumber = 1,
  };
  // map<string, .google.protobuf.Value> readings = 1 [json_name = "readings"];
  int readings_size() const;
  private:
  int _internal_readings_size() const;

  public:
  void clear_readings() ;
  const ::google::protobuf::Map<std::string, ::google::protobuf::Value>& readings() const;
  ::google::protobuf::Map<std::string, ::google::protobuf::Value>* mutable_readings();

  private:
  const ::google::protobuf::Map<std::string, ::google::protobuf::Value>& _internal_readings() const;
  ::google::protobuf::Map<std::string, ::google::protobuf::Value>* _internal_mutable_readings();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.GetReadingsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      51, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<GetReadingsResponse_ReadingsEntry_DoNotUse, std::string, ::google::protobuf::Value,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        readings_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class Geometry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.Geometry) */ {
 public:
  inline Geometry() : Geometry(nullptr) {}
  ~Geometry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Geometry(::google::protobuf::internal::ConstantInitialized);

  inline Geometry(const Geometry& from)
      : Geometry(nullptr, from) {}
  Geometry(Geometry&& from) noexcept
    : Geometry() {
    *this = ::std::move(from);
  }

  inline Geometry& operator=(const Geometry& from) {
    CopyFrom(from);
    return *this;
  }
  inline Geometry& operator=(Geometry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Geometry& default_instance() {
    return *internal_default_instance();
  }
  enum GeometryTypeCase {
    kSphere = 2,
    kBox = 3,
    kCapsule = 5,
    GEOMETRY_TYPE_NOT_SET = 0,
  };

  static inline const Geometry* internal_default_instance() {
    return reinterpret_cast<const Geometry*>(
               &_Geometry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Geometry& a, Geometry& b) {
    a.Swap(&b);
  }
  inline void Swap(Geometry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Geometry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Geometry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Geometry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Geometry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Geometry& from) {
    Geometry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Geometry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.Geometry";
  }
  protected:
  explicit Geometry(::google::protobuf::Arena* arena);
  Geometry(::google::protobuf::Arena* arena, const Geometry& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLabelFieldNumber = 4,
    kCenterFieldNumber = 1,
    kSphereFieldNumber = 2,
    kBoxFieldNumber = 3,
    kCapsuleFieldNumber = 5,
  };
  // string label = 4 [json_name = "label"];
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // .viam.common.v1.Pose center = 1 [json_name = "center"];
  bool has_center() const;
  void clear_center() ;
  const ::viam::common::v1::Pose& center() const;
  PROTOBUF_NODISCARD ::viam::common::v1::Pose* release_center();
  ::viam::common::v1::Pose* mutable_center();
  void set_allocated_center(::viam::common::v1::Pose* value);
  void unsafe_arena_set_allocated_center(::viam::common::v1::Pose* value);
  ::viam::common::v1::Pose* unsafe_arena_release_center();

  private:
  const ::viam::common::v1::Pose& _internal_center() const;
  ::viam::common::v1::Pose* _internal_mutable_center();

  public:
  // .viam.common.v1.Sphere sphere = 2 [json_name = "sphere"];
  bool has_sphere() const;
  private:
  bool _internal_has_sphere() const;

  public:
  void clear_sphere() ;
  const ::viam::common::v1::Sphere& sphere() const;
  PROTOBUF_NODISCARD ::viam::common::v1::Sphere* release_sphere();
  ::viam::common::v1::Sphere* mutable_sphere();
  void set_allocated_sphere(::viam::common::v1::Sphere* value);
  void unsafe_arena_set_allocated_sphere(::viam::common::v1::Sphere* value);
  ::viam::common::v1::Sphere* unsafe_arena_release_sphere();

  private:
  const ::viam::common::v1::Sphere& _internal_sphere() const;
  ::viam::common::v1::Sphere* _internal_mutable_sphere();

  public:
  // .viam.common.v1.RectangularPrism box = 3 [json_name = "box"];
  bool has_box() const;
  private:
  bool _internal_has_box() const;

  public:
  void clear_box() ;
  const ::viam::common::v1::RectangularPrism& box() const;
  PROTOBUF_NODISCARD ::viam::common::v1::RectangularPrism* release_box();
  ::viam::common::v1::RectangularPrism* mutable_box();
  void set_allocated_box(::viam::common::v1::RectangularPrism* value);
  void unsafe_arena_set_allocated_box(::viam::common::v1::RectangularPrism* value);
  ::viam::common::v1::RectangularPrism* unsafe_arena_release_box();

  private:
  const ::viam::common::v1::RectangularPrism& _internal_box() const;
  ::viam::common::v1::RectangularPrism* _internal_mutable_box();

  public:
  // .viam.common.v1.Capsule capsule = 5 [json_name = "capsule"];
  bool has_capsule() const;
  private:
  bool _internal_has_capsule() const;

  public:
  void clear_capsule() ;
  const ::viam::common::v1::Capsule& capsule() const;
  PROTOBUF_NODISCARD ::viam::common::v1::Capsule* release_capsule();
  ::viam::common::v1::Capsule* mutable_capsule();
  void set_allocated_capsule(::viam::common::v1::Capsule* value);
  void unsafe_arena_set_allocated_capsule(::viam::common::v1::Capsule* value);
  ::viam::common::v1::Capsule* unsafe_arena_release_capsule();

  private:
  const ::viam::common::v1::Capsule& _internal_capsule() const;
  ::viam::common::v1::Capsule* _internal_mutable_capsule();

  public:
  void clear_geometry_type();
  GeometryTypeCase geometry_type_case() const;
  // @@protoc_insertion_point(class_scope:viam.common.v1.Geometry)
 private:
  class _Internal;
  void set_has_sphere();
  void set_has_box();
  void set_has_capsule();

  inline bool has_geometry_type() const;
  inline void clear_has_geometry_type();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 5, 4,
      37, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::viam::common::v1::Pose* center_;
    union GeometryTypeUnion {
      constexpr GeometryTypeUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::viam::common::v1::Sphere* sphere_;
      ::viam::common::v1::RectangularPrism* box_;
      ::viam::common::v1::Capsule* capsule_;
    } geometry_type_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class Transform final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.Transform) */ {
 public:
  inline Transform() : Transform(nullptr) {}
  ~Transform() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Transform(::google::protobuf::internal::ConstantInitialized);

  inline Transform(const Transform& from)
      : Transform(nullptr, from) {}
  Transform(Transform&& from) noexcept
    : Transform() {
    *this = ::std::move(from);
  }

  inline Transform& operator=(const Transform& from) {
    CopyFrom(from);
    return *this;
  }
  inline Transform& operator=(Transform&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Transform& default_instance() {
    return *internal_default_instance();
  }
  static inline const Transform* internal_default_instance() {
    return reinterpret_cast<const Transform*>(
               &_Transform_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(Transform& a, Transform& b) {
    a.Swap(&b);
  }
  inline void Swap(Transform* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Transform* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Transform* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Transform>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Transform& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Transform& from) {
    Transform::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Transform* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.Transform";
  }
  protected:
  explicit Transform(::google::protobuf::Arena* arena);
  Transform(::google::protobuf::Arena* arena, const Transform& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReferenceFrameFieldNumber = 1,
    kPoseInObserverFrameFieldNumber = 2,
    kPhysicalObjectFieldNumber = 3,
  };
  // string reference_frame = 1 [json_name = "referenceFrame"];
  void clear_reference_frame() ;
  const std::string& reference_frame() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reference_frame(Arg_&& arg, Args_... args);
  std::string* mutable_reference_frame();
  PROTOBUF_NODISCARD std::string* release_reference_frame();
  void set_allocated_reference_frame(std::string* value);

  private:
  const std::string& _internal_reference_frame() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reference_frame(
      const std::string& value);
  std::string* _internal_mutable_reference_frame();

  public:
  // .viam.common.v1.PoseInFrame pose_in_observer_frame = 2 [json_name = "poseInObserverFrame"];
  bool has_pose_in_observer_frame() const;
  void clear_pose_in_observer_frame() ;
  const ::viam::common::v1::PoseInFrame& pose_in_observer_frame() const;
  PROTOBUF_NODISCARD ::viam::common::v1::PoseInFrame* release_pose_in_observer_frame();
  ::viam::common::v1::PoseInFrame* mutable_pose_in_observer_frame();
  void set_allocated_pose_in_observer_frame(::viam::common::v1::PoseInFrame* value);
  void unsafe_arena_set_allocated_pose_in_observer_frame(::viam::common::v1::PoseInFrame* value);
  ::viam::common::v1::PoseInFrame* unsafe_arena_release_pose_in_observer_frame();

  private:
  const ::viam::common::v1::PoseInFrame& _internal_pose_in_observer_frame() const;
  ::viam::common::v1::PoseInFrame* _internal_mutable_pose_in_observer_frame();

  public:
  // optional .viam.common.v1.Geometry physical_object = 3 [json_name = "physicalObject"];
  bool has_physical_object() const;
  void clear_physical_object() ;
  const ::viam::common::v1::Geometry& physical_object() const;
  PROTOBUF_NODISCARD ::viam::common::v1::Geometry* release_physical_object();
  ::viam::common::v1::Geometry* mutable_physical_object();
  void set_allocated_physical_object(::viam::common::v1::Geometry* value);
  void unsafe_arena_set_allocated_physical_object(::viam::common::v1::Geometry* value);
  ::viam::common::v1::Geometry* unsafe_arena_release_physical_object();

  private:
  const ::viam::common::v1::Geometry& _internal_physical_object() const;
  ::viam::common::v1::Geometry* _internal_mutable_physical_object();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.Transform)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr reference_frame_;
    ::viam::common::v1::PoseInFrame* pose_in_observer_frame_;
    ::viam::common::v1::Geometry* physical_object_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class GetGeometriesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.GetGeometriesResponse) */ {
 public:
  inline GetGeometriesResponse() : GetGeometriesResponse(nullptr) {}
  ~GetGeometriesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetGeometriesResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetGeometriesResponse(const GetGeometriesResponse& from)
      : GetGeometriesResponse(nullptr, from) {}
  GetGeometriesResponse(GetGeometriesResponse&& from) noexcept
    : GetGeometriesResponse() {
    *this = ::std::move(from);
  }

  inline GetGeometriesResponse& operator=(const GetGeometriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGeometriesResponse& operator=(GetGeometriesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGeometriesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGeometriesResponse* internal_default_instance() {
    return reinterpret_cast<const GetGeometriesResponse*>(
               &_GetGeometriesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(GetGeometriesResponse& a, GetGeometriesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetGeometriesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGeometriesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGeometriesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetGeometriesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGeometriesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetGeometriesResponse& from) {
    GetGeometriesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetGeometriesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.GetGeometriesResponse";
  }
  protected:
  explicit GetGeometriesResponse(::google::protobuf::Arena* arena);
  GetGeometriesResponse(::google::protobuf::Arena* arena, const GetGeometriesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGeometriesFieldNumber = 1,
  };
  // repeated .viam.common.v1.Geometry geometries = 1 [json_name = "geometries"];
  int geometries_size() const;
  private:
  int _internal_geometries_size() const;

  public:
  void clear_geometries() ;
  ::viam::common::v1::Geometry* mutable_geometries(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Geometry >*
      mutable_geometries();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>& _internal_geometries() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>* _internal_mutable_geometries();
  public:
  const ::viam::common::v1::Geometry& geometries(int index) const;
  ::viam::common::v1::Geometry* add_geometries();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Geometry >&
      geometries() const;
  // @@protoc_insertion_point(class_scope:viam.common.v1.GetGeometriesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Geometry > geometries_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class GeometriesInFrame final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.GeometriesInFrame) */ {
 public:
  inline GeometriesInFrame() : GeometriesInFrame(nullptr) {}
  ~GeometriesInFrame() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GeometriesInFrame(::google::protobuf::internal::ConstantInitialized);

  inline GeometriesInFrame(const GeometriesInFrame& from)
      : GeometriesInFrame(nullptr, from) {}
  GeometriesInFrame(GeometriesInFrame&& from) noexcept
    : GeometriesInFrame() {
    *this = ::std::move(from);
  }

  inline GeometriesInFrame& operator=(const GeometriesInFrame& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeometriesInFrame& operator=(GeometriesInFrame&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeometriesInFrame& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeometriesInFrame* internal_default_instance() {
    return reinterpret_cast<const GeometriesInFrame*>(
               &_GeometriesInFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GeometriesInFrame& a, GeometriesInFrame& b) {
    a.Swap(&b);
  }
  inline void Swap(GeometriesInFrame* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeometriesInFrame* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeometriesInFrame* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GeometriesInFrame>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GeometriesInFrame& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GeometriesInFrame& from) {
    GeometriesInFrame::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GeometriesInFrame* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.GeometriesInFrame";
  }
  protected:
  explicit GeometriesInFrame(::google::protobuf::Arena* arena);
  GeometriesInFrame(::google::protobuf::Arena* arena, const GeometriesInFrame& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGeometriesFieldNumber = 2,
    kReferenceFrameFieldNumber = 1,
  };
  // repeated .viam.common.v1.Geometry geometries = 2 [json_name = "geometries"];
  int geometries_size() const;
  private:
  int _internal_geometries_size() const;

  public:
  void clear_geometries() ;
  ::viam::common::v1::Geometry* mutable_geometries(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Geometry >*
      mutable_geometries();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>& _internal_geometries() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>* _internal_mutable_geometries();
  public:
  const ::viam::common::v1::Geometry& geometries(int index) const;
  ::viam::common::v1::Geometry* add_geometries();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Geometry >&
      geometries() const;
  // string reference_frame = 1 [json_name = "referenceFrame"];
  void clear_reference_frame() ;
  const std::string& reference_frame() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reference_frame(Arg_&& arg, Args_... args);
  std::string* mutable_reference_frame();
  PROTOBUF_NODISCARD std::string* release_reference_frame();
  void set_allocated_reference_frame(std::string* value);

  private:
  const std::string& _internal_reference_frame() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reference_frame(
      const std::string& value);
  std::string* _internal_mutable_reference_frame();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.GeometriesInFrame)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Geometry > geometries_;
    ::google::protobuf::internal::ArenaStringPtr reference_frame_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class GeoGeometry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.GeoGeometry) */ {
 public:
  inline GeoGeometry() : GeoGeometry(nullptr) {}
  ~GeoGeometry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GeoGeometry(::google::protobuf::internal::ConstantInitialized);

  inline GeoGeometry(const GeoGeometry& from)
      : GeoGeometry(nullptr, from) {}
  GeoGeometry(GeoGeometry&& from) noexcept
    : GeoGeometry() {
    *this = ::std::move(from);
  }

  inline GeoGeometry& operator=(const GeoGeometry& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoGeometry& operator=(GeoGeometry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeoGeometry& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeoGeometry* internal_default_instance() {
    return reinterpret_cast<const GeoGeometry*>(
               &_GeoGeometry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GeoGeometry& a, GeoGeometry& b) {
    a.Swap(&b);
  }
  inline void Swap(GeoGeometry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeoGeometry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeoGeometry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GeoGeometry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GeoGeometry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GeoGeometry& from) {
    GeoGeometry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GeoGeometry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.GeoGeometry";
  }
  protected:
  explicit GeoGeometry(::google::protobuf::Arena* arena);
  GeoGeometry(::google::protobuf::Arena* arena, const GeoGeometry& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGeometriesFieldNumber = 2,
    kLocationFieldNumber = 1,
  };
  // repeated .viam.common.v1.Geometry geometries = 2 [json_name = "geometries"];
  int geometries_size() const;
  private:
  int _internal_geometries_size() const;

  public:
  void clear_geometries() ;
  ::viam::common::v1::Geometry* mutable_geometries(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Geometry >*
      mutable_geometries();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>& _internal_geometries() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>* _internal_mutable_geometries();
  public:
  const ::viam::common::v1::Geometry& geometries(int index) const;
  ::viam::common::v1::Geometry* add_geometries();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Geometry >&
      geometries() const;
  // .viam.common.v1.GeoPoint location = 1 [json_name = "location"];
  bool has_location() const;
  void clear_location() ;
  const ::viam::common::v1::GeoPoint& location() const;
  PROTOBUF_NODISCARD ::viam::common::v1::GeoPoint* release_location();
  ::viam::common::v1::GeoPoint* mutable_location();
  void set_allocated_location(::viam::common::v1::GeoPoint* value);
  void unsafe_arena_set_allocated_location(::viam::common::v1::GeoPoint* value);
  ::viam::common::v1::GeoPoint* unsafe_arena_release_location();

  private:
  const ::viam::common::v1::GeoPoint& _internal_location() const;
  ::viam::common::v1::GeoPoint* _internal_mutable_location();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.GeoGeometry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Geometry > geometries_;
    ::viam::common::v1::GeoPoint* location_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class WorldState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.WorldState) */ {
 public:
  inline WorldState() : WorldState(nullptr) {}
  ~WorldState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WorldState(::google::protobuf::internal::ConstantInitialized);

  inline WorldState(const WorldState& from)
      : WorldState(nullptr, from) {}
  WorldState(WorldState&& from) noexcept
    : WorldState() {
    *this = ::std::move(from);
  }

  inline WorldState& operator=(const WorldState& from) {
    CopyFrom(from);
    return *this;
  }
  inline WorldState& operator=(WorldState&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WorldState& default_instance() {
    return *internal_default_instance();
  }
  static inline const WorldState* internal_default_instance() {
    return reinterpret_cast<const WorldState*>(
               &_WorldState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(WorldState& a, WorldState& b) {
    a.Swap(&b);
  }
  inline void Swap(WorldState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WorldState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WorldState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WorldState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WorldState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WorldState& from) {
    WorldState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WorldState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.WorldState";
  }
  protected:
  explicit WorldState(::google::protobuf::Arena* arena);
  WorldState(::google::protobuf::Arena* arena, const WorldState& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObstaclesFieldNumber = 1,
    kTransformsFieldNumber = 3,
  };
  // repeated .viam.common.v1.GeometriesInFrame obstacles = 1 [json_name = "obstacles"];
  int obstacles_size() const;
  private:
  int _internal_obstacles_size() const;

  public:
  void clear_obstacles() ;
  ::viam::common::v1::GeometriesInFrame* mutable_obstacles(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::GeometriesInFrame >*
      mutable_obstacles();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeometriesInFrame>& _internal_obstacles() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeometriesInFrame>* _internal_mutable_obstacles();
  public:
  const ::viam::common::v1::GeometriesInFrame& obstacles(int index) const;
  ::viam::common::v1::GeometriesInFrame* add_obstacles();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::GeometriesInFrame >&
      obstacles() const;
  // repeated .viam.common.v1.Transform transforms = 3 [json_name = "transforms"];
  int transforms_size() const;
  private:
  int _internal_transforms_size() const;

  public:
  void clear_transforms() ;
  ::viam::common::v1::Transform* mutable_transforms(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Transform >*
      mutable_transforms();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>& _internal_transforms() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>* _internal_mutable_transforms();
  public:
  const ::viam::common::v1::Transform& transforms(int index) const;
  ::viam::common::v1::Transform* add_transforms();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Transform >&
      transforms() const;
  // @@protoc_insertion_point(class_scope:viam.common.v1.WorldState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::GeometriesInFrame > obstacles_;
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Transform > transforms_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};// -------------------------------------------------------------------

class PointCloudObject final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.common.v1.PointCloudObject) */ {
 public:
  inline PointCloudObject() : PointCloudObject(nullptr) {}
  ~PointCloudObject() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PointCloudObject(::google::protobuf::internal::ConstantInitialized);

  inline PointCloudObject(const PointCloudObject& from)
      : PointCloudObject(nullptr, from) {}
  PointCloudObject(PointCloudObject&& from) noexcept
    : PointCloudObject() {
    *this = ::std::move(from);
  }

  inline PointCloudObject& operator=(const PointCloudObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline PointCloudObject& operator=(PointCloudObject&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PointCloudObject& default_instance() {
    return *internal_default_instance();
  }
  static inline const PointCloudObject* internal_default_instance() {
    return reinterpret_cast<const PointCloudObject*>(
               &_PointCloudObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(PointCloudObject& a, PointCloudObject& b) {
    a.Swap(&b);
  }
  inline void Swap(PointCloudObject* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PointCloudObject* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PointCloudObject* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PointCloudObject>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PointCloudObject& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PointCloudObject& from) {
    PointCloudObject::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PointCloudObject* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.common.v1.PointCloudObject";
  }
  protected:
  explicit PointCloudObject(::google::protobuf::Arena* arena);
  PointCloudObject(::google::protobuf::Arena* arena, const PointCloudObject& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointCloudFieldNumber = 1,
    kGeometriesFieldNumber = 2,
  };
  // bytes point_cloud = 1 [json_name = "pointCloud"];
  void clear_point_cloud() ;
  const std::string& point_cloud() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_point_cloud(Arg_&& arg, Args_... args);
  std::string* mutable_point_cloud();
  PROTOBUF_NODISCARD std::string* release_point_cloud();
  void set_allocated_point_cloud(std::string* value);

  private:
  const std::string& _internal_point_cloud() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_point_cloud(
      const std::string& value);
  std::string* _internal_mutable_point_cloud();

  public:
  // .viam.common.v1.GeometriesInFrame geometries = 2 [json_name = "geometries"];
  bool has_geometries() const;
  void clear_geometries() ;
  const ::viam::common::v1::GeometriesInFrame& geometries() const;
  PROTOBUF_NODISCARD ::viam::common::v1::GeometriesInFrame* release_geometries();
  ::viam::common::v1::GeometriesInFrame* mutable_geometries();
  void set_allocated_geometries(::viam::common::v1::GeometriesInFrame* value);
  void unsafe_arena_set_allocated_geometries(::viam::common::v1::GeometriesInFrame* value);
  ::viam::common::v1::GeometriesInFrame* unsafe_arena_release_geometries();

  private:
  const ::viam::common::v1::GeometriesInFrame& _internal_geometries() const;
  ::viam::common::v1::GeometriesInFrame* _internal_mutable_geometries();

  public:
  // @@protoc_insertion_point(class_scope:viam.common.v1.PointCloudObject)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr point_cloud_;
    ::viam::common::v1::GeometriesInFrame* geometries_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fv1_2fcommon_2eproto;
};

// ===================================================================



static const int kSafetyHeartbeatMonitoredFieldNumber = 84260;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  safety_heartbeat_monitored;

// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ResourceName

// string namespace = 1 [json_name = "namespace"];
inline void ResourceName::clear_namespace_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.namespace__.ClearToEmpty();
}
inline const std::string& ResourceName::namespace_() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.ResourceName.namespace)
  return _internal_namespace_();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResourceName::set_namespace_(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.namespace__.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.ResourceName.namespace)
}
inline std::string* ResourceName::mutable_namespace_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_namespace_();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.ResourceName.namespace)
  return _s;
}
inline const std::string& ResourceName::_internal_namespace_() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.namespace__.Get();
}
inline void ResourceName::_internal_set_namespace_(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.namespace__.Set(value, GetArena());
}
inline std::string* ResourceName::_internal_mutable_namespace_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.namespace__.Mutable( GetArena());
}
inline std::string* ResourceName::release_namespace_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.ResourceName.namespace)
  return _impl_.namespace__.Release();
}
inline void ResourceName::set_allocated_namespace_(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.namespace__.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.namespace__.IsDefault()) {
          _impl_.namespace__.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.ResourceName.namespace)
}

// string type = 2 [json_name = "type"];
inline void ResourceName::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& ResourceName::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.ResourceName.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResourceName::set_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.ResourceName.type)
}
inline std::string* ResourceName::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.ResourceName.type)
  return _s;
}
inline const std::string& ResourceName::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_.Get();
}
inline void ResourceName::_internal_set_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(value, GetArena());
}
inline std::string* ResourceName::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* ResourceName::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.ResourceName.type)
  return _impl_.type_.Release();
}
inline void ResourceName::set_allocated_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.ResourceName.type)
}

// string subtype = 3 [json_name = "subtype"];
inline void ResourceName::clear_subtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subtype_.ClearToEmpty();
}
inline const std::string& ResourceName::subtype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.ResourceName.subtype)
  return _internal_subtype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResourceName::set_subtype(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subtype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.ResourceName.subtype)
}
inline std::string* ResourceName::mutable_subtype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subtype();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.ResourceName.subtype)
  return _s;
}
inline const std::string& ResourceName::_internal_subtype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subtype_.Get();
}
inline void ResourceName::_internal_set_subtype(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subtype_.Set(value, GetArena());
}
inline std::string* ResourceName::_internal_mutable_subtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subtype_.Mutable( GetArena());
}
inline std::string* ResourceName::release_subtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.ResourceName.subtype)
  return _impl_.subtype_.Release();
}
inline void ResourceName::set_allocated_subtype(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subtype_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subtype_.IsDefault()) {
          _impl_.subtype_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.ResourceName.subtype)
}

// string name = 4 [json_name = "name"];
inline void ResourceName::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ResourceName::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.ResourceName.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResourceName::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.ResourceName.name)
}
inline std::string* ResourceName::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.ResourceName.name)
  return _s;
}
inline const std::string& ResourceName::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void ResourceName::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ResourceName::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ResourceName::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.ResourceName.name)
  return _impl_.name_.Release();
}
inline void ResourceName::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.ResourceName.name)
}

// -------------------------------------------------------------------

// Pose

// double x = 1 [json_name = "x"];
inline void Pose::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline double Pose::x() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Pose.x)
  return _internal_x();
}
inline void Pose::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Pose.x)
}
inline double Pose::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void Pose::_internal_set_x(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// double y = 2 [json_name = "y"];
inline void Pose::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline double Pose::y() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Pose.y)
  return _internal_y();
}
inline void Pose::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Pose.y)
}
inline double Pose::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void Pose::_internal_set_y(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// double z = 3 [json_name = "z"];
inline void Pose::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = 0;
}
inline double Pose::z() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Pose.z)
  return _internal_z();
}
inline void Pose::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Pose.z)
}
inline double Pose::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void Pose::_internal_set_z(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.z_ = value;
}

// double o_x = 4 [json_name = "oX"];
inline void Pose::clear_o_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.o_x_ = 0;
}
inline double Pose::o_x() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Pose.o_x)
  return _internal_o_x();
}
inline void Pose::set_o_x(double value) {
  _internal_set_o_x(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Pose.o_x)
}
inline double Pose::_internal_o_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.o_x_;
}
inline void Pose::_internal_set_o_x(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.o_x_ = value;
}

// double o_y = 5 [json_name = "oY"];
inline void Pose::clear_o_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.o_y_ = 0;
}
inline double Pose::o_y() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Pose.o_y)
  return _internal_o_y();
}
inline void Pose::set_o_y(double value) {
  _internal_set_o_y(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Pose.o_y)
}
inline double Pose::_internal_o_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.o_y_;
}
inline void Pose::_internal_set_o_y(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.o_y_ = value;
}

// double o_z = 6 [json_name = "oZ"];
inline void Pose::clear_o_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.o_z_ = 0;
}
inline double Pose::o_z() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Pose.o_z)
  return _internal_o_z();
}
inline void Pose::set_o_z(double value) {
  _internal_set_o_z(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Pose.o_z)
}
inline double Pose::_internal_o_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.o_z_;
}
inline void Pose::_internal_set_o_z(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.o_z_ = value;
}

// double theta = 7 [json_name = "theta"];
inline void Pose::clear_theta() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.theta_ = 0;
}
inline double Pose::theta() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Pose.theta)
  return _internal_theta();
}
inline void Pose::set_theta(double value) {
  _internal_set_theta(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Pose.theta)
}
inline double Pose::_internal_theta() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.theta_;
}
inline void Pose::_internal_set_theta(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.theta_ = value;
}

// -------------------------------------------------------------------

// Orientation

// double o_x = 1 [json_name = "oX"];
inline void Orientation::clear_o_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.o_x_ = 0;
}
inline double Orientation::o_x() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Orientation.o_x)
  return _internal_o_x();
}
inline void Orientation::set_o_x(double value) {
  _internal_set_o_x(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Orientation.o_x)
}
inline double Orientation::_internal_o_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.o_x_;
}
inline void Orientation::_internal_set_o_x(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.o_x_ = value;
}

// double o_y = 2 [json_name = "oY"];
inline void Orientation::clear_o_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.o_y_ = 0;
}
inline double Orientation::o_y() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Orientation.o_y)
  return _internal_o_y();
}
inline void Orientation::set_o_y(double value) {
  _internal_set_o_y(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Orientation.o_y)
}
inline double Orientation::_internal_o_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.o_y_;
}
inline void Orientation::_internal_set_o_y(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.o_y_ = value;
}

// double o_z = 3 [json_name = "oZ"];
inline void Orientation::clear_o_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.o_z_ = 0;
}
inline double Orientation::o_z() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Orientation.o_z)
  return _internal_o_z();
}
inline void Orientation::set_o_z(double value) {
  _internal_set_o_z(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Orientation.o_z)
}
inline double Orientation::_internal_o_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.o_z_;
}
inline void Orientation::_internal_set_o_z(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.o_z_ = value;
}

// double theta = 4 [json_name = "theta"];
inline void Orientation::clear_theta() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.theta_ = 0;
}
inline double Orientation::theta() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Orientation.theta)
  return _internal_theta();
}
inline void Orientation::set_theta(double value) {
  _internal_set_theta(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Orientation.theta)
}
inline double Orientation::_internal_theta() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.theta_;
}
inline void Orientation::_internal_set_theta(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.theta_ = value;
}

// -------------------------------------------------------------------

// PoseInFrame

// string reference_frame = 1 [json_name = "referenceFrame"];
inline void PoseInFrame::clear_reference_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reference_frame_.ClearToEmpty();
}
inline const std::string& PoseInFrame::reference_frame() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.PoseInFrame.reference_frame)
  return _internal_reference_frame();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PoseInFrame::set_reference_frame(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reference_frame_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.PoseInFrame.reference_frame)
}
inline std::string* PoseInFrame::mutable_reference_frame() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reference_frame();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.PoseInFrame.reference_frame)
  return _s;
}
inline const std::string& PoseInFrame::_internal_reference_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reference_frame_.Get();
}
inline void PoseInFrame::_internal_set_reference_frame(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reference_frame_.Set(value, GetArena());
}
inline std::string* PoseInFrame::_internal_mutable_reference_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.reference_frame_.Mutable( GetArena());
}
inline std::string* PoseInFrame::release_reference_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.PoseInFrame.reference_frame)
  return _impl_.reference_frame_.Release();
}
inline void PoseInFrame::set_allocated_reference_frame(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reference_frame_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reference_frame_.IsDefault()) {
          _impl_.reference_frame_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.PoseInFrame.reference_frame)
}

// .viam.common.v1.Pose pose = 2 [json_name = "pose"];
inline bool PoseInFrame::has_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pose_ != nullptr);
  return value;
}
inline void PoseInFrame::clear_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pose_ != nullptr) _impl_.pose_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::viam::common::v1::Pose& PoseInFrame::_internal_pose() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::Pose* p = _impl_.pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::Pose&>(::viam::common::v1::_Pose_default_instance_);
}
inline const ::viam::common::v1::Pose& PoseInFrame::pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.PoseInFrame.pose)
  return _internal_pose();
}
inline void PoseInFrame::unsafe_arena_set_allocated_pose(::viam::common::v1::Pose* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }
  _impl_.pose_ = reinterpret_cast<::viam::common::v1::Pose*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.PoseInFrame.pose)
}
inline ::viam::common::v1::Pose* PoseInFrame::release_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Pose* released = _impl_.pose_;
  _impl_.pose_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::Pose* PoseInFrame::unsafe_arena_release_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.PoseInFrame.pose)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Pose* temp = _impl_.pose_;
  _impl_.pose_ = nullptr;
  return temp;
}
inline ::viam::common::v1::Pose* PoseInFrame::_internal_mutable_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pose_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::Pose>(GetArena());
    _impl_.pose_ = reinterpret_cast<::viam::common::v1::Pose*>(p);
  }
  return _impl_.pose_;
}
inline ::viam::common::v1::Pose* PoseInFrame::mutable_pose() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::Pose* _msg = _internal_mutable_pose();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.PoseInFrame.pose)
  return _msg;
}
inline void PoseInFrame::set_allocated_pose(::viam::common::v1::Pose* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::viam::common::v1::Pose*>(_impl_.pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::viam::common::v1::Pose*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pose_ = reinterpret_cast<::viam::common::v1::Pose*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.PoseInFrame.pose)
}

// -------------------------------------------------------------------

// Vector3

// double x = 1 [json_name = "x"];
inline void Vector3::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline double Vector3::x() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Vector3.x)
  return _internal_x();
}
inline void Vector3::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Vector3.x)
}
inline double Vector3::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void Vector3::_internal_set_x(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// double y = 2 [json_name = "y"];
inline void Vector3::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline double Vector3::y() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Vector3.y)
  return _internal_y();
}
inline void Vector3::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Vector3.y)
}
inline double Vector3::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void Vector3::_internal_set_y(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// double z = 3 [json_name = "z"];
inline void Vector3::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = 0;
}
inline double Vector3::z() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Vector3.z)
  return _internal_z();
}
inline void Vector3::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Vector3.z)
}
inline double Vector3::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void Vector3::_internal_set_z(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Sphere

// double radius_mm = 1 [json_name = "radiusMm"];
inline void Sphere::clear_radius_mm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.radius_mm_ = 0;
}
inline double Sphere::radius_mm() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Sphere.radius_mm)
  return _internal_radius_mm();
}
inline void Sphere::set_radius_mm(double value) {
  _internal_set_radius_mm(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Sphere.radius_mm)
}
inline double Sphere::_internal_radius_mm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.radius_mm_;
}
inline void Sphere::_internal_set_radius_mm(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.radius_mm_ = value;
}

// -------------------------------------------------------------------

// Capsule

// double radius_mm = 1 [json_name = "radiusMm"];
inline void Capsule::clear_radius_mm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.radius_mm_ = 0;
}
inline double Capsule::radius_mm() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Capsule.radius_mm)
  return _internal_radius_mm();
}
inline void Capsule::set_radius_mm(double value) {
  _internal_set_radius_mm(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Capsule.radius_mm)
}
inline double Capsule::_internal_radius_mm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.radius_mm_;
}
inline void Capsule::_internal_set_radius_mm(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.radius_mm_ = value;
}

// double length_mm = 2 [json_name = "lengthMm"];
inline void Capsule::clear_length_mm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.length_mm_ = 0;
}
inline double Capsule::length_mm() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.Capsule.length_mm)
  return _internal_length_mm();
}
inline void Capsule::set_length_mm(double value) {
  _internal_set_length_mm(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.Capsule.length_mm)
}
inline double Capsule::_internal_length_mm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.length_mm_;
}
inline void Capsule::_internal_set_length_mm(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.length_mm_ = value;
}

// -------------------------------------------------------------------

// RectangularPrism

// .viam.common.v1.Vector3 dims_mm = 1 [json_name = "dimsMm"];
inline bool RectangularPrism::has_dims_mm() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dims_mm_ != nullptr);
  return value;
}
inline void RectangularPrism::clear_dims_mm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.dims_mm_ != nullptr) _impl_.dims_mm_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::viam::common::v1::Vector3& RectangularPrism::_internal_dims_mm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::Vector3* p = _impl_.dims_mm_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::Vector3&>(::viam::common::v1::_Vector3_default_instance_);
}
inline const ::viam::common::v1::Vector3& RectangularPrism::dims_mm() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.RectangularPrism.dims_mm)
  return _internal_dims_mm();
}
inline void RectangularPrism::unsafe_arena_set_allocated_dims_mm(::viam::common::v1::Vector3* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dims_mm_);
  }
  _impl_.dims_mm_ = reinterpret_cast<::viam::common::v1::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.RectangularPrism.dims_mm)
}
inline ::viam::common::v1::Vector3* RectangularPrism::release_dims_mm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Vector3* released = _impl_.dims_mm_;
  _impl_.dims_mm_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::Vector3* RectangularPrism::unsafe_arena_release_dims_mm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.RectangularPrism.dims_mm)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Vector3* temp = _impl_.dims_mm_;
  _impl_.dims_mm_ = nullptr;
  return temp;
}
inline ::viam::common::v1::Vector3* RectangularPrism::_internal_mutable_dims_mm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.dims_mm_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::Vector3>(GetArena());
    _impl_.dims_mm_ = reinterpret_cast<::viam::common::v1::Vector3*>(p);
  }
  return _impl_.dims_mm_;
}
inline ::viam::common::v1::Vector3* RectangularPrism::mutable_dims_mm() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::Vector3* _msg = _internal_mutable_dims_mm();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.RectangularPrism.dims_mm)
  return _msg;
}
inline void RectangularPrism::set_allocated_dims_mm(::viam::common::v1::Vector3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::viam::common::v1::Vector3*>(_impl_.dims_mm_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::viam::common::v1::Vector3*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.dims_mm_ = reinterpret_cast<::viam::common::v1::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.RectangularPrism.dims_mm)
}

// -------------------------------------------------------------------

// Geometry

// .viam.common.v1.Pose center = 1 [json_name = "center"];
inline bool Geometry::has_center() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.center_ != nullptr);
  return value;
}
inline void Geometry::clear_center() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.center_ != nullptr) _impl_.center_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::viam::common::v1::Pose& Geometry::_internal_center() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::Pose* p = _impl_.center_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::Pose&>(::viam::common::v1::_Pose_default_instance_);
}
inline const ::viam::common::v1::Pose& Geometry::center() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.Geometry.center)
  return _internal_center();
}
inline void Geometry::unsafe_arena_set_allocated_center(::viam::common::v1::Pose* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.center_);
  }
  _impl_.center_ = reinterpret_cast<::viam::common::v1::Pose*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.Geometry.center)
}
inline ::viam::common::v1::Pose* Geometry::release_center() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Pose* released = _impl_.center_;
  _impl_.center_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::Pose* Geometry::unsafe_arena_release_center() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.Geometry.center)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Pose* temp = _impl_.center_;
  _impl_.center_ = nullptr;
  return temp;
}
inline ::viam::common::v1::Pose* Geometry::_internal_mutable_center() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.center_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::Pose>(GetArena());
    _impl_.center_ = reinterpret_cast<::viam::common::v1::Pose*>(p);
  }
  return _impl_.center_;
}
inline ::viam::common::v1::Pose* Geometry::mutable_center() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::Pose* _msg = _internal_mutable_center();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.Geometry.center)
  return _msg;
}
inline void Geometry::set_allocated_center(::viam::common::v1::Pose* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::viam::common::v1::Pose*>(_impl_.center_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::viam::common::v1::Pose*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.center_ = reinterpret_cast<::viam::common::v1::Pose*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.Geometry.center)
}

// .viam.common.v1.Sphere sphere = 2 [json_name = "sphere"];
inline bool Geometry::has_sphere() const {
  return geometry_type_case() == kSphere;
}
inline bool Geometry::_internal_has_sphere() const {
  return geometry_type_case() == kSphere;
}
inline void Geometry::set_has_sphere() {
  _impl_._oneof_case_[0] = kSphere;
}
inline void Geometry::clear_sphere() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (geometry_type_case() == kSphere) {
    if (GetArena() == nullptr) {
      delete _impl_.geometry_type_.sphere_;
    }
    clear_has_geometry_type();
  }
}
inline ::viam::common::v1::Sphere* Geometry::release_sphere() {
  // @@protoc_insertion_point(field_release:viam.common.v1.Geometry.sphere)
  if (geometry_type_case() == kSphere) {
    clear_has_geometry_type();
    auto* temp = _impl_.geometry_type_.sphere_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.geometry_type_.sphere_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::viam::common::v1::Sphere& Geometry::_internal_sphere() const {
  return geometry_type_case() == kSphere ? *_impl_.geometry_type_.sphere_ : reinterpret_cast<::viam::common::v1::Sphere&>(::viam::common::v1::_Sphere_default_instance_);
}
inline const ::viam::common::v1::Sphere& Geometry::sphere() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.Geometry.sphere)
  return _internal_sphere();
}
inline ::viam::common::v1::Sphere* Geometry::unsafe_arena_release_sphere() {
  // @@protoc_insertion_point(field_unsafe_arena_release:viam.common.v1.Geometry.sphere)
  if (geometry_type_case() == kSphere) {
    clear_has_geometry_type();
    auto* temp = _impl_.geometry_type_.sphere_;
    _impl_.geometry_type_.sphere_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Geometry::unsafe_arena_set_allocated_sphere(::viam::common::v1::Sphere* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_geometry_type();
  if (value) {
    set_has_sphere();
    _impl_.geometry_type_.sphere_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.Geometry.sphere)
}
inline ::viam::common::v1::Sphere* Geometry::_internal_mutable_sphere() {
  if (geometry_type_case() != kSphere) {
    clear_geometry_type();
    set_has_sphere();
    _impl_.geometry_type_.sphere_ = CreateMaybeMessage<::viam::common::v1::Sphere>(GetArena());
  }
  return _impl_.geometry_type_.sphere_;
}
inline ::viam::common::v1::Sphere* Geometry::mutable_sphere() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::Sphere* _msg = _internal_mutable_sphere();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.Geometry.sphere)
  return _msg;
}

// .viam.common.v1.RectangularPrism box = 3 [json_name = "box"];
inline bool Geometry::has_box() const {
  return geometry_type_case() == kBox;
}
inline bool Geometry::_internal_has_box() const {
  return geometry_type_case() == kBox;
}
inline void Geometry::set_has_box() {
  _impl_._oneof_case_[0] = kBox;
}
inline void Geometry::clear_box() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (geometry_type_case() == kBox) {
    if (GetArena() == nullptr) {
      delete _impl_.geometry_type_.box_;
    }
    clear_has_geometry_type();
  }
}
inline ::viam::common::v1::RectangularPrism* Geometry::release_box() {
  // @@protoc_insertion_point(field_release:viam.common.v1.Geometry.box)
  if (geometry_type_case() == kBox) {
    clear_has_geometry_type();
    auto* temp = _impl_.geometry_type_.box_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.geometry_type_.box_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::viam::common::v1::RectangularPrism& Geometry::_internal_box() const {
  return geometry_type_case() == kBox ? *_impl_.geometry_type_.box_ : reinterpret_cast<::viam::common::v1::RectangularPrism&>(::viam::common::v1::_RectangularPrism_default_instance_);
}
inline const ::viam::common::v1::RectangularPrism& Geometry::box() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.Geometry.box)
  return _internal_box();
}
inline ::viam::common::v1::RectangularPrism* Geometry::unsafe_arena_release_box() {
  // @@protoc_insertion_point(field_unsafe_arena_release:viam.common.v1.Geometry.box)
  if (geometry_type_case() == kBox) {
    clear_has_geometry_type();
    auto* temp = _impl_.geometry_type_.box_;
    _impl_.geometry_type_.box_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Geometry::unsafe_arena_set_allocated_box(::viam::common::v1::RectangularPrism* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_geometry_type();
  if (value) {
    set_has_box();
    _impl_.geometry_type_.box_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.Geometry.box)
}
inline ::viam::common::v1::RectangularPrism* Geometry::_internal_mutable_box() {
  if (geometry_type_case() != kBox) {
    clear_geometry_type();
    set_has_box();
    _impl_.geometry_type_.box_ = CreateMaybeMessage<::viam::common::v1::RectangularPrism>(GetArena());
  }
  return _impl_.geometry_type_.box_;
}
inline ::viam::common::v1::RectangularPrism* Geometry::mutable_box() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::RectangularPrism* _msg = _internal_mutable_box();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.Geometry.box)
  return _msg;
}

// .viam.common.v1.Capsule capsule = 5 [json_name = "capsule"];
inline bool Geometry::has_capsule() const {
  return geometry_type_case() == kCapsule;
}
inline bool Geometry::_internal_has_capsule() const {
  return geometry_type_case() == kCapsule;
}
inline void Geometry::set_has_capsule() {
  _impl_._oneof_case_[0] = kCapsule;
}
inline void Geometry::clear_capsule() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (geometry_type_case() == kCapsule) {
    if (GetArena() == nullptr) {
      delete _impl_.geometry_type_.capsule_;
    }
    clear_has_geometry_type();
  }
}
inline ::viam::common::v1::Capsule* Geometry::release_capsule() {
  // @@protoc_insertion_point(field_release:viam.common.v1.Geometry.capsule)
  if (geometry_type_case() == kCapsule) {
    clear_has_geometry_type();
    auto* temp = _impl_.geometry_type_.capsule_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.geometry_type_.capsule_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::viam::common::v1::Capsule& Geometry::_internal_capsule() const {
  return geometry_type_case() == kCapsule ? *_impl_.geometry_type_.capsule_ : reinterpret_cast<::viam::common::v1::Capsule&>(::viam::common::v1::_Capsule_default_instance_);
}
inline const ::viam::common::v1::Capsule& Geometry::capsule() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.Geometry.capsule)
  return _internal_capsule();
}
inline ::viam::common::v1::Capsule* Geometry::unsafe_arena_release_capsule() {
  // @@protoc_insertion_point(field_unsafe_arena_release:viam.common.v1.Geometry.capsule)
  if (geometry_type_case() == kCapsule) {
    clear_has_geometry_type();
    auto* temp = _impl_.geometry_type_.capsule_;
    _impl_.geometry_type_.capsule_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Geometry::unsafe_arena_set_allocated_capsule(::viam::common::v1::Capsule* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_geometry_type();
  if (value) {
    set_has_capsule();
    _impl_.geometry_type_.capsule_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.Geometry.capsule)
}
inline ::viam::common::v1::Capsule* Geometry::_internal_mutable_capsule() {
  if (geometry_type_case() != kCapsule) {
    clear_geometry_type();
    set_has_capsule();
    _impl_.geometry_type_.capsule_ = CreateMaybeMessage<::viam::common::v1::Capsule>(GetArena());
  }
  return _impl_.geometry_type_.capsule_;
}
inline ::viam::common::v1::Capsule* Geometry::mutable_capsule() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::Capsule* _msg = _internal_mutable_capsule();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.Geometry.capsule)
  return _msg;
}

// string label = 4 [json_name = "label"];
inline void Geometry::clear_label() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& Geometry::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.Geometry.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Geometry::set_label(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.Geometry.label)
}
inline std::string* Geometry::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.Geometry.label)
  return _s;
}
inline const std::string& Geometry::_internal_label() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.label_.Get();
}
inline void Geometry::_internal_set_label(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.label_.Set(value, GetArena());
}
inline std::string* Geometry::_internal_mutable_label() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* Geometry::release_label() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.Geometry.label)
  return _impl_.label_.Release();
}
inline void Geometry::set_allocated_label(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.Geometry.label)
}

inline bool Geometry::has_geometry_type() const {
  return geometry_type_case() != GEOMETRY_TYPE_NOT_SET;
}
inline void Geometry::clear_has_geometry_type() {
  _impl_._oneof_case_[0] = GEOMETRY_TYPE_NOT_SET;
}
inline Geometry::GeometryTypeCase Geometry::geometry_type_case() const {
  return Geometry::GeometryTypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// GeometriesInFrame

// string reference_frame = 1 [json_name = "referenceFrame"];
inline void GeometriesInFrame::clear_reference_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reference_frame_.ClearToEmpty();
}
inline const std::string& GeometriesInFrame::reference_frame() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.GeometriesInFrame.reference_frame)
  return _internal_reference_frame();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GeometriesInFrame::set_reference_frame(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reference_frame_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.GeometriesInFrame.reference_frame)
}
inline std::string* GeometriesInFrame::mutable_reference_frame() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reference_frame();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.GeometriesInFrame.reference_frame)
  return _s;
}
inline const std::string& GeometriesInFrame::_internal_reference_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reference_frame_.Get();
}
inline void GeometriesInFrame::_internal_set_reference_frame(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reference_frame_.Set(value, GetArena());
}
inline std::string* GeometriesInFrame::_internal_mutable_reference_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.reference_frame_.Mutable( GetArena());
}
inline std::string* GeometriesInFrame::release_reference_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.GeometriesInFrame.reference_frame)
  return _impl_.reference_frame_.Release();
}
inline void GeometriesInFrame::set_allocated_reference_frame(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reference_frame_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reference_frame_.IsDefault()) {
          _impl_.reference_frame_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.GeometriesInFrame.reference_frame)
}

// repeated .viam.common.v1.Geometry geometries = 2 [json_name = "geometries"];
inline int GeometriesInFrame::_internal_geometries_size() const {
  return _internal_geometries().size();
}
inline int GeometriesInFrame::geometries_size() const {
  return _internal_geometries_size();
}
inline void GeometriesInFrame::clear_geometries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.geometries_.Clear();
}
inline ::viam::common::v1::Geometry* GeometriesInFrame::mutable_geometries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.common.v1.GeometriesInFrame.geometries)
  return _internal_mutable_geometries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>* GeometriesInFrame::mutable_geometries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.common.v1.GeometriesInFrame.geometries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_geometries();
}
inline const ::viam::common::v1::Geometry& GeometriesInFrame::geometries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.GeometriesInFrame.geometries)
  return _internal_geometries().Get(index);
}
inline ::viam::common::v1::Geometry* GeometriesInFrame::add_geometries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::Geometry* _add = _internal_mutable_geometries()->Add();
  // @@protoc_insertion_point(field_add:viam.common.v1.GeometriesInFrame.geometries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>& GeometriesInFrame::geometries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.common.v1.GeometriesInFrame.geometries)
  return _internal_geometries();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>&
GeometriesInFrame::_internal_geometries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.geometries_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>*
GeometriesInFrame::_internal_mutable_geometries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.geometries_;
}

// -------------------------------------------------------------------

// PointCloudObject

// bytes point_cloud = 1 [json_name = "pointCloud"];
inline void PointCloudObject::clear_point_cloud() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.point_cloud_.ClearToEmpty();
}
inline const std::string& PointCloudObject::point_cloud() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.PointCloudObject.point_cloud)
  return _internal_point_cloud();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PointCloudObject::set_point_cloud(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.point_cloud_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.PointCloudObject.point_cloud)
}
inline std::string* PointCloudObject::mutable_point_cloud() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_point_cloud();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.PointCloudObject.point_cloud)
  return _s;
}
inline const std::string& PointCloudObject::_internal_point_cloud() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.point_cloud_.Get();
}
inline void PointCloudObject::_internal_set_point_cloud(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.point_cloud_.Set(value, GetArena());
}
inline std::string* PointCloudObject::_internal_mutable_point_cloud() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.point_cloud_.Mutable( GetArena());
}
inline std::string* PointCloudObject::release_point_cloud() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.PointCloudObject.point_cloud)
  return _impl_.point_cloud_.Release();
}
inline void PointCloudObject::set_allocated_point_cloud(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.point_cloud_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.point_cloud_.IsDefault()) {
          _impl_.point_cloud_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.PointCloudObject.point_cloud)
}

// .viam.common.v1.GeometriesInFrame geometries = 2 [json_name = "geometries"];
inline bool PointCloudObject::has_geometries() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.geometries_ != nullptr);
  return value;
}
inline void PointCloudObject::clear_geometries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.geometries_ != nullptr) _impl_.geometries_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::viam::common::v1::GeometriesInFrame& PointCloudObject::_internal_geometries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::GeometriesInFrame* p = _impl_.geometries_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::GeometriesInFrame&>(::viam::common::v1::_GeometriesInFrame_default_instance_);
}
inline const ::viam::common::v1::GeometriesInFrame& PointCloudObject::geometries() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.PointCloudObject.geometries)
  return _internal_geometries();
}
inline void PointCloudObject::unsafe_arena_set_allocated_geometries(::viam::common::v1::GeometriesInFrame* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.geometries_);
  }
  _impl_.geometries_ = reinterpret_cast<::viam::common::v1::GeometriesInFrame*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.PointCloudObject.geometries)
}
inline ::viam::common::v1::GeometriesInFrame* PointCloudObject::release_geometries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::GeometriesInFrame* released = _impl_.geometries_;
  _impl_.geometries_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::GeometriesInFrame* PointCloudObject::unsafe_arena_release_geometries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.PointCloudObject.geometries)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::GeometriesInFrame* temp = _impl_.geometries_;
  _impl_.geometries_ = nullptr;
  return temp;
}
inline ::viam::common::v1::GeometriesInFrame* PointCloudObject::_internal_mutable_geometries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.geometries_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::GeometriesInFrame>(GetArena());
    _impl_.geometries_ = reinterpret_cast<::viam::common::v1::GeometriesInFrame*>(p);
  }
  return _impl_.geometries_;
}
inline ::viam::common::v1::GeometriesInFrame* PointCloudObject::mutable_geometries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::GeometriesInFrame* _msg = _internal_mutable_geometries();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.PointCloudObject.geometries)
  return _msg;
}
inline void PointCloudObject::set_allocated_geometries(::viam::common::v1::GeometriesInFrame* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::viam::common::v1::GeometriesInFrame*>(_impl_.geometries_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::viam::common::v1::GeometriesInFrame*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.geometries_ = reinterpret_cast<::viam::common::v1::GeometriesInFrame*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.PointCloudObject.geometries)
}

// -------------------------------------------------------------------

// GeoPoint

// double latitude = 1 [json_name = "latitude"];
inline void GeoPoint::clear_latitude() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.latitude_ = 0;
}
inline double GeoPoint::latitude() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.GeoPoint.latitude)
  return _internal_latitude();
}
inline void GeoPoint::set_latitude(double value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.GeoPoint.latitude)
}
inline double GeoPoint::_internal_latitude() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.latitude_;
}
inline void GeoPoint::_internal_set_latitude(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.latitude_ = value;
}

// double longitude = 2 [json_name = "longitude"];
inline void GeoPoint::clear_longitude() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.longitude_ = 0;
}
inline double GeoPoint::longitude() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.GeoPoint.longitude)
  return _internal_longitude();
}
inline void GeoPoint::set_longitude(double value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.GeoPoint.longitude)
}
inline double GeoPoint::_internal_longitude() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.longitude_;
}
inline void GeoPoint::_internal_set_longitude(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.longitude_ = value;
}

// -------------------------------------------------------------------

// GeoGeometry

// .viam.common.v1.GeoPoint location = 1 [json_name = "location"];
inline bool GeoGeometry::has_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.location_ != nullptr);
  return value;
}
inline void GeoGeometry::clear_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.location_ != nullptr) _impl_.location_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::viam::common::v1::GeoPoint& GeoGeometry::_internal_location() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::GeoPoint* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::GeoPoint&>(::viam::common::v1::_GeoPoint_default_instance_);
}
inline const ::viam::common::v1::GeoPoint& GeoGeometry::location() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.GeoGeometry.location)
  return _internal_location();
}
inline void GeoGeometry::unsafe_arena_set_allocated_location(::viam::common::v1::GeoPoint* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.GeoGeometry.location)
}
inline ::viam::common::v1::GeoPoint* GeoGeometry::release_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::GeoPoint* released = _impl_.location_;
  _impl_.location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::GeoPoint* GeoGeometry::unsafe_arena_release_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.GeoGeometry.location)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::GeoPoint* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::viam::common::v1::GeoPoint* GeoGeometry::_internal_mutable_location() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.location_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::GeoPoint>(GetArena());
    _impl_.location_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(p);
  }
  return _impl_.location_;
}
inline ::viam::common::v1::GeoPoint* GeoGeometry::mutable_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::GeoPoint* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.GeoGeometry.location)
  return _msg;
}
inline void GeoGeometry::set_allocated_location(::viam::common::v1::GeoPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::viam::common::v1::GeoPoint*>(_impl_.location_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::viam::common::v1::GeoPoint*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.location_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.GeoGeometry.location)
}

// repeated .viam.common.v1.Geometry geometries = 2 [json_name = "geometries"];
inline int GeoGeometry::_internal_geometries_size() const {
  return _internal_geometries().size();
}
inline int GeoGeometry::geometries_size() const {
  return _internal_geometries_size();
}
inline void GeoGeometry::clear_geometries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.geometries_.Clear();
}
inline ::viam::common::v1::Geometry* GeoGeometry::mutable_geometries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.common.v1.GeoGeometry.geometries)
  return _internal_mutable_geometries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>* GeoGeometry::mutable_geometries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.common.v1.GeoGeometry.geometries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_geometries();
}
inline const ::viam::common::v1::Geometry& GeoGeometry::geometries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.GeoGeometry.geometries)
  return _internal_geometries().Get(index);
}
inline ::viam::common::v1::Geometry* GeoGeometry::add_geometries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::Geometry* _add = _internal_mutable_geometries()->Add();
  // @@protoc_insertion_point(field_add:viam.common.v1.GeoGeometry.geometries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>& GeoGeometry::geometries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.common.v1.GeoGeometry.geometries)
  return _internal_geometries();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>&
GeoGeometry::_internal_geometries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.geometries_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>*
GeoGeometry::_internal_mutable_geometries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.geometries_;
}

// -------------------------------------------------------------------

// Transform

// string reference_frame = 1 [json_name = "referenceFrame"];
inline void Transform::clear_reference_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reference_frame_.ClearToEmpty();
}
inline const std::string& Transform::reference_frame() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.Transform.reference_frame)
  return _internal_reference_frame();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Transform::set_reference_frame(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reference_frame_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.Transform.reference_frame)
}
inline std::string* Transform::mutable_reference_frame() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reference_frame();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.Transform.reference_frame)
  return _s;
}
inline const std::string& Transform::_internal_reference_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reference_frame_.Get();
}
inline void Transform::_internal_set_reference_frame(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reference_frame_.Set(value, GetArena());
}
inline std::string* Transform::_internal_mutable_reference_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.reference_frame_.Mutable( GetArena());
}
inline std::string* Transform::release_reference_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.Transform.reference_frame)
  return _impl_.reference_frame_.Release();
}
inline void Transform::set_allocated_reference_frame(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reference_frame_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reference_frame_.IsDefault()) {
          _impl_.reference_frame_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.Transform.reference_frame)
}

// .viam.common.v1.PoseInFrame pose_in_observer_frame = 2 [json_name = "poseInObserverFrame"];
inline bool Transform::has_pose_in_observer_frame() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pose_in_observer_frame_ != nullptr);
  return value;
}
inline void Transform::clear_pose_in_observer_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pose_in_observer_frame_ != nullptr) _impl_.pose_in_observer_frame_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::viam::common::v1::PoseInFrame& Transform::_internal_pose_in_observer_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::PoseInFrame* p = _impl_.pose_in_observer_frame_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::PoseInFrame&>(::viam::common::v1::_PoseInFrame_default_instance_);
}
inline const ::viam::common::v1::PoseInFrame& Transform::pose_in_observer_frame() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.Transform.pose_in_observer_frame)
  return _internal_pose_in_observer_frame();
}
inline void Transform::unsafe_arena_set_allocated_pose_in_observer_frame(::viam::common::v1::PoseInFrame* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_in_observer_frame_);
  }
  _impl_.pose_in_observer_frame_ = reinterpret_cast<::viam::common::v1::PoseInFrame*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.Transform.pose_in_observer_frame)
}
inline ::viam::common::v1::PoseInFrame* Transform::release_pose_in_observer_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::PoseInFrame* released = _impl_.pose_in_observer_frame_;
  _impl_.pose_in_observer_frame_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::PoseInFrame* Transform::unsafe_arena_release_pose_in_observer_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.Transform.pose_in_observer_frame)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::PoseInFrame* temp = _impl_.pose_in_observer_frame_;
  _impl_.pose_in_observer_frame_ = nullptr;
  return temp;
}
inline ::viam::common::v1::PoseInFrame* Transform::_internal_mutable_pose_in_observer_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pose_in_observer_frame_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::PoseInFrame>(GetArena());
    _impl_.pose_in_observer_frame_ = reinterpret_cast<::viam::common::v1::PoseInFrame*>(p);
  }
  return _impl_.pose_in_observer_frame_;
}
inline ::viam::common::v1::PoseInFrame* Transform::mutable_pose_in_observer_frame() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::PoseInFrame* _msg = _internal_mutable_pose_in_observer_frame();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.Transform.pose_in_observer_frame)
  return _msg;
}
inline void Transform::set_allocated_pose_in_observer_frame(::viam::common::v1::PoseInFrame* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::viam::common::v1::PoseInFrame*>(_impl_.pose_in_observer_frame_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::viam::common::v1::PoseInFrame*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pose_in_observer_frame_ = reinterpret_cast<::viam::common::v1::PoseInFrame*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.Transform.pose_in_observer_frame)
}

// optional .viam.common.v1.Geometry physical_object = 3 [json_name = "physicalObject"];
inline bool Transform::has_physical_object() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.physical_object_ != nullptr);
  return value;
}
inline void Transform::clear_physical_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.physical_object_ != nullptr) _impl_.physical_object_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::viam::common::v1::Geometry& Transform::_internal_physical_object() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::Geometry* p = _impl_.physical_object_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::Geometry&>(::viam::common::v1::_Geometry_default_instance_);
}
inline const ::viam::common::v1::Geometry& Transform::physical_object() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.Transform.physical_object)
  return _internal_physical_object();
}
inline void Transform::unsafe_arena_set_allocated_physical_object(::viam::common::v1::Geometry* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.physical_object_);
  }
  _impl_.physical_object_ = reinterpret_cast<::viam::common::v1::Geometry*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.Transform.physical_object)
}
inline ::viam::common::v1::Geometry* Transform::release_physical_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::viam::common::v1::Geometry* released = _impl_.physical_object_;
  _impl_.physical_object_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::Geometry* Transform::unsafe_arena_release_physical_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.Transform.physical_object)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::viam::common::v1::Geometry* temp = _impl_.physical_object_;
  _impl_.physical_object_ = nullptr;
  return temp;
}
inline ::viam::common::v1::Geometry* Transform::_internal_mutable_physical_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.physical_object_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::Geometry>(GetArena());
    _impl_.physical_object_ = reinterpret_cast<::viam::common::v1::Geometry*>(p);
  }
  return _impl_.physical_object_;
}
inline ::viam::common::v1::Geometry* Transform::mutable_physical_object() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::Geometry* _msg = _internal_mutable_physical_object();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.Transform.physical_object)
  return _msg;
}
inline void Transform::set_allocated_physical_object(::viam::common::v1::Geometry* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::viam::common::v1::Geometry*>(_impl_.physical_object_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::viam::common::v1::Geometry*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.physical_object_ = reinterpret_cast<::viam::common::v1::Geometry*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.Transform.physical_object)
}

// -------------------------------------------------------------------

// WorldState

// repeated .viam.common.v1.GeometriesInFrame obstacles = 1 [json_name = "obstacles"];
inline int WorldState::_internal_obstacles_size() const {
  return _internal_obstacles().size();
}
inline int WorldState::obstacles_size() const {
  return _internal_obstacles_size();
}
inline void WorldState::clear_obstacles() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.obstacles_.Clear();
}
inline ::viam::common::v1::GeometriesInFrame* WorldState::mutable_obstacles(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.common.v1.WorldState.obstacles)
  return _internal_mutable_obstacles()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeometriesInFrame>* WorldState::mutable_obstacles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.common.v1.WorldState.obstacles)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_obstacles();
}
inline const ::viam::common::v1::GeometriesInFrame& WorldState::obstacles(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.WorldState.obstacles)
  return _internal_obstacles().Get(index);
}
inline ::viam::common::v1::GeometriesInFrame* WorldState::add_obstacles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::GeometriesInFrame* _add = _internal_mutable_obstacles()->Add();
  // @@protoc_insertion_point(field_add:viam.common.v1.WorldState.obstacles)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeometriesInFrame>& WorldState::obstacles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.common.v1.WorldState.obstacles)
  return _internal_obstacles();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeometriesInFrame>&
WorldState::_internal_obstacles() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.obstacles_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::GeometriesInFrame>*
WorldState::_internal_mutable_obstacles() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.obstacles_;
}

// repeated .viam.common.v1.Transform transforms = 3 [json_name = "transforms"];
inline int WorldState::_internal_transforms_size() const {
  return _internal_transforms().size();
}
inline int WorldState::transforms_size() const {
  return _internal_transforms_size();
}
inline void WorldState::clear_transforms() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.transforms_.Clear();
}
inline ::viam::common::v1::Transform* WorldState::mutable_transforms(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.common.v1.WorldState.transforms)
  return _internal_mutable_transforms()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>* WorldState::mutable_transforms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.common.v1.WorldState.transforms)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_transforms();
}
inline const ::viam::common::v1::Transform& WorldState::transforms(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.WorldState.transforms)
  return _internal_transforms().Get(index);
}
inline ::viam::common::v1::Transform* WorldState::add_transforms() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::Transform* _add = _internal_mutable_transforms()->Add();
  // @@protoc_insertion_point(field_add:viam.common.v1.WorldState.transforms)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>& WorldState::transforms() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.common.v1.WorldState.transforms)
  return _internal_transforms();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>&
WorldState::_internal_transforms() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transforms_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>*
WorldState::_internal_mutable_transforms() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.transforms_;
}

// -------------------------------------------------------------------

// ActuatorStatus

// bool is_moving = 1 [json_name = "isMoving"];
inline void ActuatorStatus::clear_is_moving() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_moving_ = false;
}
inline bool ActuatorStatus::is_moving() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.ActuatorStatus.is_moving)
  return _internal_is_moving();
}
inline void ActuatorStatus::set_is_moving(bool value) {
  _internal_set_is_moving(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.ActuatorStatus.is_moving)
}
inline bool ActuatorStatus::_internal_is_moving() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_moving_;
}
inline void ActuatorStatus::_internal_set_is_moving(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_moving_ = value;
}

// -------------------------------------------------------------------

// ResponseMetadata

// optional .google.protobuf.Timestamp captured_at = 1 [json_name = "capturedAt"];
inline bool ResponseMetadata::has_captured_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.captured_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ResponseMetadata::_internal_captured_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.captured_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ResponseMetadata::captured_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.ResponseMetadata.captured_at)
  return _internal_captured_at();
}
inline void ResponseMetadata::unsafe_arena_set_allocated_captured_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.captured_at_);
  }
  _impl_.captured_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.ResponseMetadata.captured_at)
}
inline ::google::protobuf::Timestamp* ResponseMetadata::release_captured_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.captured_at_;
  _impl_.captured_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* ResponseMetadata::unsafe_arena_release_captured_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.ResponseMetadata.captured_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.captured_at_;
  _impl_.captured_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ResponseMetadata::_internal_mutable_captured_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.captured_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.captured_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.captured_at_;
}
inline ::google::protobuf::Timestamp* ResponseMetadata::mutable_captured_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_captured_at();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.ResponseMetadata.captured_at)
  return _msg;
}
inline void ResponseMetadata::set_allocated_captured_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.captured_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.captured_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.ResponseMetadata.captured_at)
}

// -------------------------------------------------------------------

// DoCommandRequest

// string name = 1 [json_name = "name"];
inline void DoCommandRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& DoCommandRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.DoCommandRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DoCommandRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.DoCommandRequest.name)
}
inline std::string* DoCommandRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.DoCommandRequest.name)
  return _s;
}
inline const std::string& DoCommandRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void DoCommandRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* DoCommandRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* DoCommandRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.DoCommandRequest.name)
  return _impl_.name_.Release();
}
inline void DoCommandRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.DoCommandRequest.name)
}

// .google.protobuf.Struct command = 2 [json_name = "command"];
inline bool DoCommandRequest::has_command() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.command_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& DoCommandRequest::_internal_command() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.command_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& DoCommandRequest::command() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.DoCommandRequest.command)
  return _internal_command();
}
inline void DoCommandRequest::unsafe_arena_set_allocated_command(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.command_);
  }
  _impl_.command_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.DoCommandRequest.command)
}
inline ::google::protobuf::Struct* DoCommandRequest::release_command() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.command_;
  _impl_.command_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* DoCommandRequest::unsafe_arena_release_command() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.DoCommandRequest.command)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.command_;
  _impl_.command_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* DoCommandRequest::_internal_mutable_command() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.command_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.command_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.command_;
}
inline ::google::protobuf::Struct* DoCommandRequest::mutable_command() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_command();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.DoCommandRequest.command)
  return _msg;
}
inline void DoCommandRequest::set_allocated_command(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.command_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.command_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.DoCommandRequest.command)
}

// -------------------------------------------------------------------

// DoCommandResponse

// .google.protobuf.Struct result = 1 [json_name = "result"];
inline bool DoCommandResponse::has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.result_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& DoCommandResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.result_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& DoCommandResponse::result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.DoCommandResponse.result)
  return _internal_result();
}
inline void DoCommandResponse::unsafe_arena_set_allocated_result(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }
  _impl_.result_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.DoCommandResponse.result)
}
inline ::google::protobuf::Struct* DoCommandResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.result_;
  _impl_.result_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* DoCommandResponse::unsafe_arena_release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.DoCommandResponse.result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.result_;
  _impl_.result_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* DoCommandResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.result_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.result_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.result_;
}
inline ::google::protobuf::Struct* DoCommandResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.DoCommandResponse.result)
  return _msg;
}
inline void DoCommandResponse::set_allocated_result(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.result_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.DoCommandResponse.result)
}

// -------------------------------------------------------------------

// GetKinematicsRequest

// string name = 1 [json_name = "name"];
inline void GetKinematicsRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetKinematicsRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.GetKinematicsRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetKinematicsRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.GetKinematicsRequest.name)
}
inline std::string* GetKinematicsRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.GetKinematicsRequest.name)
  return _s;
}
inline const std::string& GetKinematicsRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetKinematicsRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetKinematicsRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetKinematicsRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.GetKinematicsRequest.name)
  return _impl_.name_.Release();
}
inline void GetKinematicsRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.GetKinematicsRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetKinematicsRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetKinematicsRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetKinematicsRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.GetKinematicsRequest.extra)
  return _internal_extra();
}
inline void GetKinematicsRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.GetKinematicsRequest.extra)
}
inline ::google::protobuf::Struct* GetKinematicsRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetKinematicsRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.GetKinematicsRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetKinematicsRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetKinematicsRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.GetKinematicsRequest.extra)
  return _msg;
}
inline void GetKinematicsRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.GetKinematicsRequest.extra)
}

// -------------------------------------------------------------------

// GetKinematicsResponse

// .viam.common.v1.KinematicsFileFormat format = 1 [json_name = "format"];
inline void GetKinematicsResponse::clear_format() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.format_ = 0;
}
inline ::viam::common::v1::KinematicsFileFormat GetKinematicsResponse::format() const {
  // @@protoc_insertion_point(field_get:viam.common.v1.GetKinematicsResponse.format)
  return _internal_format();
}
inline void GetKinematicsResponse::set_format(::viam::common::v1::KinematicsFileFormat value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:viam.common.v1.GetKinematicsResponse.format)
}
inline ::viam::common::v1::KinematicsFileFormat GetKinematicsResponse::_internal_format() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::viam::common::v1::KinematicsFileFormat>(_impl_.format_);
}
inline void GetKinematicsResponse::_internal_set_format(::viam::common::v1::KinematicsFileFormat value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.format_ = value;
}

// bytes kinematics_data = 2 [json_name = "kinematicsData"];
inline void GetKinematicsResponse::clear_kinematics_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.kinematics_data_.ClearToEmpty();
}
inline const std::string& GetKinematicsResponse::kinematics_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.GetKinematicsResponse.kinematics_data)
  return _internal_kinematics_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetKinematicsResponse::set_kinematics_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.kinematics_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.GetKinematicsResponse.kinematics_data)
}
inline std::string* GetKinematicsResponse::mutable_kinematics_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_kinematics_data();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.GetKinematicsResponse.kinematics_data)
  return _s;
}
inline const std::string& GetKinematicsResponse::_internal_kinematics_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kinematics_data_.Get();
}
inline void GetKinematicsResponse::_internal_set_kinematics_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.kinematics_data_.Set(value, GetArena());
}
inline std::string* GetKinematicsResponse::_internal_mutable_kinematics_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.kinematics_data_.Mutable( GetArena());
}
inline std::string* GetKinematicsResponse::release_kinematics_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.GetKinematicsResponse.kinematics_data)
  return _impl_.kinematics_data_.Release();
}
inline void GetKinematicsResponse::set_allocated_kinematics_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.kinematics_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.kinematics_data_.IsDefault()) {
          _impl_.kinematics_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.GetKinematicsResponse.kinematics_data)
}

// -------------------------------------------------------------------

// GetGeometriesRequest

// string name = 1 [json_name = "name"];
inline void GetGeometriesRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetGeometriesRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.GetGeometriesRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetGeometriesRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.GetGeometriesRequest.name)
}
inline std::string* GetGeometriesRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.GetGeometriesRequest.name)
  return _s;
}
inline const std::string& GetGeometriesRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetGeometriesRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetGeometriesRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetGeometriesRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.GetGeometriesRequest.name)
  return _impl_.name_.Release();
}
inline void GetGeometriesRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.GetGeometriesRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetGeometriesRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetGeometriesRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetGeometriesRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.GetGeometriesRequest.extra)
  return _internal_extra();
}
inline void GetGeometriesRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.GetGeometriesRequest.extra)
}
inline ::google::protobuf::Struct* GetGeometriesRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetGeometriesRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.GetGeometriesRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetGeometriesRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetGeometriesRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.GetGeometriesRequest.extra)
  return _msg;
}
inline void GetGeometriesRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.GetGeometriesRequest.extra)
}

// -------------------------------------------------------------------

// GetGeometriesResponse

// repeated .viam.common.v1.Geometry geometries = 1 [json_name = "geometries"];
inline int GetGeometriesResponse::_internal_geometries_size() const {
  return _internal_geometries().size();
}
inline int GetGeometriesResponse::geometries_size() const {
  return _internal_geometries_size();
}
inline void GetGeometriesResponse::clear_geometries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.geometries_.Clear();
}
inline ::viam::common::v1::Geometry* GetGeometriesResponse::mutable_geometries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.common.v1.GetGeometriesResponse.geometries)
  return _internal_mutable_geometries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>* GetGeometriesResponse::mutable_geometries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.common.v1.GetGeometriesResponse.geometries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_geometries();
}
inline const ::viam::common::v1::Geometry& GetGeometriesResponse::geometries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.GetGeometriesResponse.geometries)
  return _internal_geometries().Get(index);
}
inline ::viam::common::v1::Geometry* GetGeometriesResponse::add_geometries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::Geometry* _add = _internal_mutable_geometries()->Add();
  // @@protoc_insertion_point(field_add:viam.common.v1.GetGeometriesResponse.geometries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>& GetGeometriesResponse::geometries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.common.v1.GetGeometriesResponse.geometries)
  return _internal_geometries();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>&
GetGeometriesResponse::_internal_geometries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.geometries_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::Geometry>*
GetGeometriesResponse::_internal_mutable_geometries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.geometries_;
}

// -------------------------------------------------------------------

// GetReadingsRequest

// string name = 1 [json_name = "name"];
inline void GetReadingsRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetReadingsRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.GetReadingsRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetReadingsRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.GetReadingsRequest.name)
}
inline std::string* GetReadingsRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.GetReadingsRequest.name)
  return _s;
}
inline const std::string& GetReadingsRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetReadingsRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetReadingsRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetReadingsRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.GetReadingsRequest.name)
  return _impl_.name_.Release();
}
inline void GetReadingsRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.GetReadingsRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetReadingsRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetReadingsRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetReadingsRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.GetReadingsRequest.extra)
  return _internal_extra();
}
inline void GetReadingsRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.GetReadingsRequest.extra)
}
inline ::google::protobuf::Struct* GetReadingsRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetReadingsRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.GetReadingsRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetReadingsRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetReadingsRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.GetReadingsRequest.extra)
  return _msg;
}
inline void GetReadingsRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.GetReadingsRequest.extra)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetReadingsResponse

// map<string, .google.protobuf.Value> readings = 1 [json_name = "readings"];
inline int GetReadingsResponse::_internal_readings_size() const {
  return _internal_readings().size();
}
inline int GetReadingsResponse::readings_size() const {
  return _internal_readings_size();
}
inline const ::google::protobuf::Map<std::string, ::google::protobuf::Value>& GetReadingsResponse::_internal_readings() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.readings_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::google::protobuf::Value>& GetReadingsResponse::readings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:viam.common.v1.GetReadingsResponse.readings)
  return _internal_readings();
}
inline ::google::protobuf::Map<std::string, ::google::protobuf::Value>* GetReadingsResponse::_internal_mutable_readings() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.readings_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::google::protobuf::Value>* GetReadingsResponse::mutable_readings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:viam.common.v1.GetReadingsResponse.readings)
  return _internal_mutable_readings();
}

// -------------------------------------------------------------------

// LogEntry

// string host = 1 [json_name = "host"];
inline void LogEntry::clear_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.host_.ClearToEmpty();
}
inline const std::string& LogEntry::host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.LogEntry.host)
  return _internal_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogEntry::set_host(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.LogEntry.host)
}
inline std::string* LogEntry::mutable_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_host();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.LogEntry.host)
  return _s;
}
inline const std::string& LogEntry::_internal_host() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.host_.Get();
}
inline void LogEntry::_internal_set_host(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.host_.Set(value, GetArena());
}
inline std::string* LogEntry::_internal_mutable_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.host_.Mutable( GetArena());
}
inline std::string* LogEntry::release_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.LogEntry.host)
  return _impl_.host_.Release();
}
inline void LogEntry::set_allocated_host(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.host_.IsDefault()) {
          _impl_.host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.LogEntry.host)
}

// string level = 2 [json_name = "level"];
inline void LogEntry::clear_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.level_.ClearToEmpty();
}
inline const std::string& LogEntry::level() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.LogEntry.level)
  return _internal_level();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogEntry::set_level(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.LogEntry.level)
}
inline std::string* LogEntry::mutable_level() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_level();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.LogEntry.level)
  return _s;
}
inline const std::string& LogEntry::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.level_.Get();
}
inline void LogEntry::_internal_set_level(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_.Set(value, GetArena());
}
inline std::string* LogEntry::_internal_mutable_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.level_.Mutable( GetArena());
}
inline std::string* LogEntry::release_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.LogEntry.level)
  return _impl_.level_.Release();
}
inline void LogEntry::set_allocated_level(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.level_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.level_.IsDefault()) {
          _impl_.level_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.LogEntry.level)
}

// .google.protobuf.Timestamp time = 3 [json_name = "time"];
inline bool LogEntry::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& LogEntry::_internal_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& LogEntry::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.LogEntry.time)
  return _internal_time();
}
inline void LogEntry::unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.LogEntry.time)
}
inline ::google::protobuf::Timestamp* LogEntry::release_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* LogEntry::unsafe_arena_release_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.LogEntry.time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* LogEntry::_internal_mutable_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* LogEntry::mutable_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.LogEntry.time)
  return _msg;
}
inline void LogEntry::set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.LogEntry.time)
}

// string logger_name = 4 [json_name = "loggerName"];
inline void LogEntry::clear_logger_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.logger_name_.ClearToEmpty();
}
inline const std::string& LogEntry::logger_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.LogEntry.logger_name)
  return _internal_logger_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogEntry::set_logger_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.logger_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.LogEntry.logger_name)
}
inline std::string* LogEntry::mutable_logger_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_logger_name();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.LogEntry.logger_name)
  return _s;
}
inline const std::string& LogEntry::_internal_logger_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.logger_name_.Get();
}
inline void LogEntry::_internal_set_logger_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.logger_name_.Set(value, GetArena());
}
inline std::string* LogEntry::_internal_mutable_logger_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.logger_name_.Mutable( GetArena());
}
inline std::string* LogEntry::release_logger_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.LogEntry.logger_name)
  return _impl_.logger_name_.Release();
}
inline void LogEntry::set_allocated_logger_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.logger_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.logger_name_.IsDefault()) {
          _impl_.logger_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.LogEntry.logger_name)
}

// string message = 5 [json_name = "message"];
inline void LogEntry::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& LogEntry::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.LogEntry.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogEntry::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.LogEntry.message)
}
inline std::string* LogEntry::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.LogEntry.message)
  return _s;
}
inline const std::string& LogEntry::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void LogEntry::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* LogEntry::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* LogEntry::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.LogEntry.message)
  return _impl_.message_.Release();
}
inline void LogEntry::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.LogEntry.message)
}

// .google.protobuf.Struct caller = 6 [json_name = "caller"];
inline bool LogEntry::has_caller() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.caller_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& LogEntry::_internal_caller() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.caller_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& LogEntry::caller() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.LogEntry.caller)
  return _internal_caller();
}
inline void LogEntry::unsafe_arena_set_allocated_caller(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.caller_);
  }
  _impl_.caller_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.common.v1.LogEntry.caller)
}
inline ::google::protobuf::Struct* LogEntry::release_caller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* released = _impl_.caller_;
  _impl_.caller_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* LogEntry::unsafe_arena_release_caller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.LogEntry.caller)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* temp = _impl_.caller_;
  _impl_.caller_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* LogEntry::_internal_mutable_caller() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.caller_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.caller_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.caller_;
}
inline ::google::protobuf::Struct* LogEntry::mutable_caller() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_caller();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.LogEntry.caller)
  return _msg;
}
inline void LogEntry::set_allocated_caller(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.caller_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.caller_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.LogEntry.caller)
}

// string stack = 7 [json_name = "stack"];
inline void LogEntry::clear_stack() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stack_.ClearToEmpty();
}
inline const std::string& LogEntry::stack() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.LogEntry.stack)
  return _internal_stack();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogEntry::set_stack(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.stack_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.common.v1.LogEntry.stack)
}
inline std::string* LogEntry::mutable_stack() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_stack();
  // @@protoc_insertion_point(field_mutable:viam.common.v1.LogEntry.stack)
  return _s;
}
inline const std::string& LogEntry::_internal_stack() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stack_.Get();
}
inline void LogEntry::_internal_set_stack(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.stack_.Set(value, GetArena());
}
inline std::string* LogEntry::_internal_mutable_stack() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.stack_.Mutable( GetArena());
}
inline std::string* LogEntry::release_stack() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.common.v1.LogEntry.stack)
  return _impl_.stack_.Release();
}
inline void LogEntry::set_allocated_stack(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stack_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.stack_.IsDefault()) {
          _impl_.stack_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.common.v1.LogEntry.stack)
}

// repeated .google.protobuf.Struct fields = 8 [json_name = "fields"];
inline int LogEntry::_internal_fields_size() const {
  return _internal_fields().size();
}
inline int LogEntry::fields_size() const {
  return _internal_fields_size();
}
inline ::google::protobuf::Struct* LogEntry::mutable_fields(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.common.v1.LogEntry.fields)
  return _internal_mutable_fields()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Struct>* LogEntry::mutable_fields()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.common.v1.LogEntry.fields)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_fields();
}
inline const ::google::protobuf::Struct& LogEntry::fields(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.common.v1.LogEntry.fields)
  return _internal_fields().Get(index);
}
inline ::google::protobuf::Struct* LogEntry::add_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::google::protobuf::Struct* _add = _internal_mutable_fields()->Add();
  // @@protoc_insertion_point(field_add:viam.common.v1.LogEntry.fields)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Struct>& LogEntry::fields() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.common.v1.LogEntry.fields)
  return _internal_fields();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Struct>&
LogEntry::_internal_fields() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fields_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Struct>*
LogEntry::_internal_mutable_fields() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.fields_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace common
}  // namespace viam


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::viam::common::v1::KinematicsFileFormat> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::viam::common::v1::KinematicsFileFormat>() {
  return ::viam::common::v1::KinematicsFileFormat_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_common_2fv1_2fcommon_2eproto_2epb_2eh
