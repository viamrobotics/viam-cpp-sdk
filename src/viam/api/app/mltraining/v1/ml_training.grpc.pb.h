// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: app/mltraining/v1/ml_training.proto
#ifndef GRPC_app_2fmltraining_2fv1_2fml_5ftraining_2eproto__INCLUDED
#define GRPC_app_2fmltraining_2fv1_2fml_5ftraining_2eproto__INCLUDED

#include "app/mltraining/v1/ml_training.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace viam {
namespace app {
namespace mltraining {
namespace v1 {

class MLTrainingService final {
 public:
  static constexpr char const* service_full_name() {
    return "viam.app.mltraining.v1.MLTrainingService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // SubmitTrainingJob submits a training job request.
    virtual ::grpc::Status SubmitTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest& request, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::SubmitTrainingJobResponse>> AsyncSubmitTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::SubmitTrainingJobResponse>>(AsyncSubmitTrainingJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::SubmitTrainingJobResponse>> PrepareAsyncSubmitTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::SubmitTrainingJobResponse>>(PrepareAsyncSubmitTrainingJobRaw(context, request, cq));
    }
    // SubmitCustomTrainingJob submits a custom training job request.
    virtual ::grpc::Status SubmitCustomTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest& request, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>> AsyncSubmitCustomTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>>(AsyncSubmitCustomTrainingJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>> PrepareAsyncSubmitCustomTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>>(PrepareAsyncSubmitCustomTrainingJobRaw(context, request, cq));
    }
    // GetTrainingJob retrieves a training job by its ID.
    virtual ::grpc::Status GetTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest& request, ::viam::app::mltraining::v1::GetTrainingJobResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::GetTrainingJobResponse>> AsyncGetTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::GetTrainingJobResponse>>(AsyncGetTrainingJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::GetTrainingJobResponse>> PrepareAsyncGetTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::GetTrainingJobResponse>>(PrepareAsyncGetTrainingJobRaw(context, request, cq));
    }
    // ListTrainingJobs lists training jobs for a given organization ID and training status.
    virtual ::grpc::Status ListTrainingJobs(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest& request, ::viam::app::mltraining::v1::ListTrainingJobsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::ListTrainingJobsResponse>> AsyncListTrainingJobs(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::ListTrainingJobsResponse>>(AsyncListTrainingJobsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::ListTrainingJobsResponse>> PrepareAsyncListTrainingJobs(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::ListTrainingJobsResponse>>(PrepareAsyncListTrainingJobsRaw(context, request, cq));
    }
    // CancelTrainingJob cancels a training job that has not yet completed.
    virtual ::grpc::Status CancelTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest& request, ::viam::app::mltraining::v1::CancelTrainingJobResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::CancelTrainingJobResponse>> AsyncCancelTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::CancelTrainingJobResponse>>(AsyncCancelTrainingJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::CancelTrainingJobResponse>> PrepareAsyncCancelTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::CancelTrainingJobResponse>>(PrepareAsyncCancelTrainingJobRaw(context, request, cq));
    }
    // DeleteCompletedTrainingJob removes a completed training job from the database, whether the job succeeded or failed.
    virtual ::grpc::Status DeleteCompletedTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest& request, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>> AsyncDeleteCompletedTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>>(AsyncDeleteCompletedTrainingJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>> PrepareAsyncDeleteCompletedTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>>(PrepareAsyncDeleteCompletedTrainingJobRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // SubmitTrainingJob submits a training job request.
      virtual void SubmitTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest* request, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SubmitTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest* request, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // SubmitCustomTrainingJob submits a custom training job request.
      virtual void SubmitCustomTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* request, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SubmitCustomTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* request, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // GetTrainingJob retrieves a training job by its ID.
      virtual void GetTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest* request, ::viam::app::mltraining::v1::GetTrainingJobResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest* request, ::viam::app::mltraining::v1::GetTrainingJobResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ListTrainingJobs lists training jobs for a given organization ID and training status.
      virtual void ListTrainingJobs(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest* request, ::viam::app::mltraining::v1::ListTrainingJobsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListTrainingJobs(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest* request, ::viam::app::mltraining::v1::ListTrainingJobsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // CancelTrainingJob cancels a training job that has not yet completed.
      virtual void CancelTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest* request, ::viam::app::mltraining::v1::CancelTrainingJobResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CancelTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest* request, ::viam::app::mltraining::v1::CancelTrainingJobResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // DeleteCompletedTrainingJob removes a completed training job from the database, whether the job succeeded or failed.
      virtual void DeleteCompletedTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* request, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteCompletedTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* request, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::SubmitTrainingJobResponse>* AsyncSubmitTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::SubmitTrainingJobResponse>* PrepareAsyncSubmitTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>* AsyncSubmitCustomTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>* PrepareAsyncSubmitCustomTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::GetTrainingJobResponse>* AsyncGetTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::GetTrainingJobResponse>* PrepareAsyncGetTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::ListTrainingJobsResponse>* AsyncListTrainingJobsRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::ListTrainingJobsResponse>* PrepareAsyncListTrainingJobsRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::CancelTrainingJobResponse>* AsyncCancelTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::CancelTrainingJobResponse>* PrepareAsyncCancelTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>* AsyncDeleteCompletedTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>* PrepareAsyncDeleteCompletedTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SubmitTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest& request, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::SubmitTrainingJobResponse>> AsyncSubmitTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::SubmitTrainingJobResponse>>(AsyncSubmitTrainingJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::SubmitTrainingJobResponse>> PrepareAsyncSubmitTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::SubmitTrainingJobResponse>>(PrepareAsyncSubmitTrainingJobRaw(context, request, cq));
    }
    ::grpc::Status SubmitCustomTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest& request, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>> AsyncSubmitCustomTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>>(AsyncSubmitCustomTrainingJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>> PrepareAsyncSubmitCustomTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>>(PrepareAsyncSubmitCustomTrainingJobRaw(context, request, cq));
    }
    ::grpc::Status GetTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest& request, ::viam::app::mltraining::v1::GetTrainingJobResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::GetTrainingJobResponse>> AsyncGetTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::GetTrainingJobResponse>>(AsyncGetTrainingJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::GetTrainingJobResponse>> PrepareAsyncGetTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::GetTrainingJobResponse>>(PrepareAsyncGetTrainingJobRaw(context, request, cq));
    }
    ::grpc::Status ListTrainingJobs(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest& request, ::viam::app::mltraining::v1::ListTrainingJobsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::ListTrainingJobsResponse>> AsyncListTrainingJobs(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::ListTrainingJobsResponse>>(AsyncListTrainingJobsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::ListTrainingJobsResponse>> PrepareAsyncListTrainingJobs(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::ListTrainingJobsResponse>>(PrepareAsyncListTrainingJobsRaw(context, request, cq));
    }
    ::grpc::Status CancelTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest& request, ::viam::app::mltraining::v1::CancelTrainingJobResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::CancelTrainingJobResponse>> AsyncCancelTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::CancelTrainingJobResponse>>(AsyncCancelTrainingJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::CancelTrainingJobResponse>> PrepareAsyncCancelTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::CancelTrainingJobResponse>>(PrepareAsyncCancelTrainingJobRaw(context, request, cq));
    }
    ::grpc::Status DeleteCompletedTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest& request, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>> AsyncDeleteCompletedTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>>(AsyncDeleteCompletedTrainingJobRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>> PrepareAsyncDeleteCompletedTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>>(PrepareAsyncDeleteCompletedTrainingJobRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SubmitTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest* request, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* response, std::function<void(::grpc::Status)>) override;
      void SubmitTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest* request, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SubmitCustomTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* request, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* response, std::function<void(::grpc::Status)>) override;
      void SubmitCustomTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* request, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest* request, ::viam::app::mltraining::v1::GetTrainingJobResponse* response, std::function<void(::grpc::Status)>) override;
      void GetTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest* request, ::viam::app::mltraining::v1::GetTrainingJobResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListTrainingJobs(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest* request, ::viam::app::mltraining::v1::ListTrainingJobsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListTrainingJobs(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest* request, ::viam::app::mltraining::v1::ListTrainingJobsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CancelTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest* request, ::viam::app::mltraining::v1::CancelTrainingJobResponse* response, std::function<void(::grpc::Status)>) override;
      void CancelTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest* request, ::viam::app::mltraining::v1::CancelTrainingJobResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteCompletedTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* request, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteCompletedTrainingJob(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* request, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::SubmitTrainingJobResponse>* AsyncSubmitTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::SubmitTrainingJobResponse>* PrepareAsyncSubmitTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>* AsyncSubmitCustomTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>* PrepareAsyncSubmitCustomTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::GetTrainingJobResponse>* AsyncGetTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::GetTrainingJobResponse>* PrepareAsyncGetTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::ListTrainingJobsResponse>* AsyncListTrainingJobsRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::ListTrainingJobsResponse>* PrepareAsyncListTrainingJobsRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::CancelTrainingJobResponse>* AsyncCancelTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::CancelTrainingJobResponse>* PrepareAsyncCancelTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>* AsyncDeleteCompletedTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>* PrepareAsyncDeleteCompletedTrainingJobRaw(::grpc::ClientContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SubmitTrainingJob_;
    const ::grpc::internal::RpcMethod rpcmethod_SubmitCustomTrainingJob_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTrainingJob_;
    const ::grpc::internal::RpcMethod rpcmethod_ListTrainingJobs_;
    const ::grpc::internal::RpcMethod rpcmethod_CancelTrainingJob_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteCompletedTrainingJob_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // SubmitTrainingJob submits a training job request.
    virtual ::grpc::Status SubmitTrainingJob(::grpc::ServerContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest* request, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* response);
    // SubmitCustomTrainingJob submits a custom training job request.
    virtual ::grpc::Status SubmitCustomTrainingJob(::grpc::ServerContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* request, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* response);
    // GetTrainingJob retrieves a training job by its ID.
    virtual ::grpc::Status GetTrainingJob(::grpc::ServerContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest* request, ::viam::app::mltraining::v1::GetTrainingJobResponse* response);
    // ListTrainingJobs lists training jobs for a given organization ID and training status.
    virtual ::grpc::Status ListTrainingJobs(::grpc::ServerContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest* request, ::viam::app::mltraining::v1::ListTrainingJobsResponse* response);
    // CancelTrainingJob cancels a training job that has not yet completed.
    virtual ::grpc::Status CancelTrainingJob(::grpc::ServerContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest* request, ::viam::app::mltraining::v1::CancelTrainingJobResponse* response);
    // DeleteCompletedTrainingJob removes a completed training job from the database, whether the job succeeded or failed.
    virtual ::grpc::Status DeleteCompletedTrainingJob(::grpc::ServerContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* request, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SubmitTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubmitTrainingJob() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SubmitTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubmitTrainingJob(::grpc::ServerContext* context, ::viam::app::mltraining::v1::SubmitTrainingJobRequest* request, ::grpc::ServerAsyncResponseWriter< ::viam::app::mltraining::v1::SubmitTrainingJobResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubmitCustomTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubmitCustomTrainingJob() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SubmitCustomTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitCustomTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubmitCustomTrainingJob(::grpc::ServerContext* context, ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* request, ::grpc::ServerAsyncResponseWriter< ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTrainingJob() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::GetTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::GetTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTrainingJob(::grpc::ServerContext* context, ::viam::app::mltraining::v1::GetTrainingJobRequest* request, ::grpc::ServerAsyncResponseWriter< ::viam::app::mltraining::v1::GetTrainingJobResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListTrainingJobs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListTrainingJobs() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ListTrainingJobs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrainingJobs(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::ListTrainingJobsRequest* /*request*/, ::viam::app::mltraining::v1::ListTrainingJobsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTrainingJobs(::grpc::ServerContext* context, ::viam::app::mltraining::v1::ListTrainingJobsRequest* request, ::grpc::ServerAsyncResponseWriter< ::viam::app::mltraining::v1::ListTrainingJobsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CancelTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CancelTrainingJob() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_CancelTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::CancelTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::CancelTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCancelTrainingJob(::grpc::ServerContext* context, ::viam::app::mltraining::v1::CancelTrainingJobRequest* request, ::grpc::ServerAsyncResponseWriter< ::viam::app::mltraining::v1::CancelTrainingJobResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteCompletedTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteCompletedTrainingJob() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteCompletedTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCompletedTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCompletedTrainingJob(::grpc::ServerContext* context, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* request, ::grpc::ServerAsyncResponseWriter< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SubmitTrainingJob<WithAsyncMethod_SubmitCustomTrainingJob<WithAsyncMethod_GetTrainingJob<WithAsyncMethod_ListTrainingJobs<WithAsyncMethod_CancelTrainingJob<WithAsyncMethod_DeleteCompletedTrainingJob<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SubmitTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubmitTrainingJob() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::viam::app::mltraining::v1::SubmitTrainingJobRequest, ::viam::app::mltraining::v1::SubmitTrainingJobResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest* request, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* response) { return this->SubmitTrainingJob(context, request, response); }));}
    void SetMessageAllocatorFor_SubmitTrainingJob(
        ::grpc::MessageAllocator< ::viam::app::mltraining::v1::SubmitTrainingJobRequest, ::viam::app::mltraining::v1::SubmitTrainingJobResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::viam::app::mltraining::v1::SubmitTrainingJobRequest, ::viam::app::mltraining::v1::SubmitTrainingJobResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SubmitTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SubmitTrainingJob(
      ::grpc::CallbackServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubmitCustomTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubmitCustomTrainingJob() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* request, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* response) { return this->SubmitCustomTrainingJob(context, request, response); }));}
    void SetMessageAllocatorFor_SubmitCustomTrainingJob(
        ::grpc::MessageAllocator< ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SubmitCustomTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitCustomTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SubmitCustomTrainingJob(
      ::grpc::CallbackServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTrainingJob() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::viam::app::mltraining::v1::GetTrainingJobRequest, ::viam::app::mltraining::v1::GetTrainingJobResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::viam::app::mltraining::v1::GetTrainingJobRequest* request, ::viam::app::mltraining::v1::GetTrainingJobResponse* response) { return this->GetTrainingJob(context, request, response); }));}
    void SetMessageAllocatorFor_GetTrainingJob(
        ::grpc::MessageAllocator< ::viam::app::mltraining::v1::GetTrainingJobRequest, ::viam::app::mltraining::v1::GetTrainingJobResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::viam::app::mltraining::v1::GetTrainingJobRequest, ::viam::app::mltraining::v1::GetTrainingJobResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::GetTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::GetTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTrainingJob(
      ::grpc::CallbackServerContext* /*context*/, const ::viam::app::mltraining::v1::GetTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::GetTrainingJobResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListTrainingJobs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListTrainingJobs() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::viam::app::mltraining::v1::ListTrainingJobsRequest, ::viam::app::mltraining::v1::ListTrainingJobsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::viam::app::mltraining::v1::ListTrainingJobsRequest* request, ::viam::app::mltraining::v1::ListTrainingJobsResponse* response) { return this->ListTrainingJobs(context, request, response); }));}
    void SetMessageAllocatorFor_ListTrainingJobs(
        ::grpc::MessageAllocator< ::viam::app::mltraining::v1::ListTrainingJobsRequest, ::viam::app::mltraining::v1::ListTrainingJobsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::viam::app::mltraining::v1::ListTrainingJobsRequest, ::viam::app::mltraining::v1::ListTrainingJobsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListTrainingJobs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrainingJobs(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::ListTrainingJobsRequest* /*request*/, ::viam::app::mltraining::v1::ListTrainingJobsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListTrainingJobs(
      ::grpc::CallbackServerContext* /*context*/, const ::viam::app::mltraining::v1::ListTrainingJobsRequest* /*request*/, ::viam::app::mltraining::v1::ListTrainingJobsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CancelTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CancelTrainingJob() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::viam::app::mltraining::v1::CancelTrainingJobRequest, ::viam::app::mltraining::v1::CancelTrainingJobResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::viam::app::mltraining::v1::CancelTrainingJobRequest* request, ::viam::app::mltraining::v1::CancelTrainingJobResponse* response) { return this->CancelTrainingJob(context, request, response); }));}
    void SetMessageAllocatorFor_CancelTrainingJob(
        ::grpc::MessageAllocator< ::viam::app::mltraining::v1::CancelTrainingJobRequest, ::viam::app::mltraining::v1::CancelTrainingJobResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::viam::app::mltraining::v1::CancelTrainingJobRequest, ::viam::app::mltraining::v1::CancelTrainingJobResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CancelTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::CancelTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::CancelTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CancelTrainingJob(
      ::grpc::CallbackServerContext* /*context*/, const ::viam::app::mltraining::v1::CancelTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::CancelTrainingJobResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteCompletedTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteCompletedTrainingJob() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* request, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* response) { return this->DeleteCompletedTrainingJob(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteCompletedTrainingJob(
        ::grpc::MessageAllocator< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteCompletedTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCompletedTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteCompletedTrainingJob(
      ::grpc::CallbackServerContext* /*context*/, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_SubmitTrainingJob<WithCallbackMethod_SubmitCustomTrainingJob<WithCallbackMethod_GetTrainingJob<WithCallbackMethod_ListTrainingJobs<WithCallbackMethod_CancelTrainingJob<WithCallbackMethod_DeleteCompletedTrainingJob<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SubmitTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubmitTrainingJob() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SubmitTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubmitCustomTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubmitCustomTrainingJob() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SubmitCustomTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitCustomTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTrainingJob() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::GetTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::GetTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListTrainingJobs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListTrainingJobs() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ListTrainingJobs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrainingJobs(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::ListTrainingJobsRequest* /*request*/, ::viam::app::mltraining::v1::ListTrainingJobsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CancelTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CancelTrainingJob() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_CancelTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::CancelTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::CancelTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteCompletedTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteCompletedTrainingJob() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteCompletedTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCompletedTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubmitTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubmitTrainingJob() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SubmitTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubmitTrainingJob(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubmitCustomTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubmitCustomTrainingJob() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SubmitCustomTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitCustomTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubmitCustomTrainingJob(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTrainingJob() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::GetTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::GetTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTrainingJob(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListTrainingJobs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListTrainingJobs() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ListTrainingJobs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrainingJobs(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::ListTrainingJobsRequest* /*request*/, ::viam::app::mltraining::v1::ListTrainingJobsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTrainingJobs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CancelTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CancelTrainingJob() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_CancelTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::CancelTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::CancelTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCancelTrainingJob(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteCompletedTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteCompletedTrainingJob() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteCompletedTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCompletedTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCompletedTrainingJob(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubmitTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubmitTrainingJob() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SubmitTrainingJob(context, request, response); }));
    }
    ~WithRawCallbackMethod_SubmitTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SubmitTrainingJob(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubmitCustomTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubmitCustomTrainingJob() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SubmitCustomTrainingJob(context, request, response); }));
    }
    ~WithRawCallbackMethod_SubmitCustomTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubmitCustomTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SubmitCustomTrainingJob(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTrainingJob() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetTrainingJob(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::GetTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::GetTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTrainingJob(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListTrainingJobs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListTrainingJobs() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListTrainingJobs(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListTrainingJobs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrainingJobs(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::ListTrainingJobsRequest* /*request*/, ::viam::app::mltraining::v1::ListTrainingJobsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListTrainingJobs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CancelTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CancelTrainingJob() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CancelTrainingJob(context, request, response); }));
    }
    ~WithRawCallbackMethod_CancelTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::CancelTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::CancelTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CancelTrainingJob(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteCompletedTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteCompletedTrainingJob() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteCompletedTrainingJob(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteCompletedTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCompletedTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteCompletedTrainingJob(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SubmitTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SubmitTrainingJob() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::viam::app::mltraining::v1::SubmitTrainingJobRequest, ::viam::app::mltraining::v1::SubmitTrainingJobResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::viam::app::mltraining::v1::SubmitTrainingJobRequest, ::viam::app::mltraining::v1::SubmitTrainingJobResponse>* streamer) {
                       return this->StreamedSubmitTrainingJob(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SubmitTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubmitTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSubmitTrainingJob(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::viam::app::mltraining::v1::SubmitTrainingJobRequest,::viam::app::mltraining::v1::SubmitTrainingJobResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SubmitCustomTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SubmitCustomTrainingJob() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>* streamer) {
                       return this->StreamedSubmitCustomTrainingJob(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SubmitCustomTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SubmitCustomTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSubmitCustomTrainingJob(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::viam::app::mltraining::v1::SubmitCustomTrainingJobRequest,::viam::app::mltraining::v1::SubmitCustomTrainingJobResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetTrainingJob() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::viam::app::mltraining::v1::GetTrainingJobRequest, ::viam::app::mltraining::v1::GetTrainingJobResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::viam::app::mltraining::v1::GetTrainingJobRequest, ::viam::app::mltraining::v1::GetTrainingJobResponse>* streamer) {
                       return this->StreamedGetTrainingJob(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::GetTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::GetTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTrainingJob(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::viam::app::mltraining::v1::GetTrainingJobRequest,::viam::app::mltraining::v1::GetTrainingJobResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListTrainingJobs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListTrainingJobs() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::viam::app::mltraining::v1::ListTrainingJobsRequest, ::viam::app::mltraining::v1::ListTrainingJobsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::viam::app::mltraining::v1::ListTrainingJobsRequest, ::viam::app::mltraining::v1::ListTrainingJobsResponse>* streamer) {
                       return this->StreamedListTrainingJobs(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListTrainingJobs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListTrainingJobs(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::ListTrainingJobsRequest* /*request*/, ::viam::app::mltraining::v1::ListTrainingJobsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListTrainingJobs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::viam::app::mltraining::v1::ListTrainingJobsRequest,::viam::app::mltraining::v1::ListTrainingJobsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CancelTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CancelTrainingJob() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::viam::app::mltraining::v1::CancelTrainingJobRequest, ::viam::app::mltraining::v1::CancelTrainingJobResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::viam::app::mltraining::v1::CancelTrainingJobRequest, ::viam::app::mltraining::v1::CancelTrainingJobResponse>* streamer) {
                       return this->StreamedCancelTrainingJob(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CancelTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CancelTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::CancelTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::CancelTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCancelTrainingJob(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::viam::app::mltraining::v1::CancelTrainingJobRequest,::viam::app::mltraining::v1::CancelTrainingJobResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteCompletedTrainingJob : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteCompletedTrainingJob() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>* streamer) {
                       return this->StreamedDeleteCompletedTrainingJob(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteCompletedTrainingJob() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteCompletedTrainingJob(::grpc::ServerContext* /*context*/, const ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest* /*request*/, ::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteCompletedTrainingJob(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::viam::app::mltraining::v1::DeleteCompletedTrainingJobRequest,::viam::app::mltraining::v1::DeleteCompletedTrainingJobResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SubmitTrainingJob<WithStreamedUnaryMethod_SubmitCustomTrainingJob<WithStreamedUnaryMethod_GetTrainingJob<WithStreamedUnaryMethod_ListTrainingJobs<WithStreamedUnaryMethod_CancelTrainingJob<WithStreamedUnaryMethod_DeleteCompletedTrainingJob<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_SubmitTrainingJob<WithStreamedUnaryMethod_SubmitCustomTrainingJob<WithStreamedUnaryMethod_GetTrainingJob<WithStreamedUnaryMethod_ListTrainingJobs<WithStreamedUnaryMethod_CancelTrainingJob<WithStreamedUnaryMethod_DeleteCompletedTrainingJob<Service > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace mltraining
}  // namespace app
}  // namespace viam


#endif  // GRPC_app_2fmltraining_2fv1_2fml_5ftraining_2eproto__INCLUDED
