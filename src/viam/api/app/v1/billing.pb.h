// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/v1/billing.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_app_2fv1_2fbilling_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_app_2fv1_2fbilling_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_app_2fv1_2fbilling_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_app_2fv1_2fbilling_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_app_2fv1_2fbilling_2eproto;
namespace viam {
namespace app {
namespace v1 {
class GetCurrentMonthUsageRequest;
struct GetCurrentMonthUsageRequestDefaultTypeInternal;
extern GetCurrentMonthUsageRequestDefaultTypeInternal _GetCurrentMonthUsageRequest_default_instance_;
class GetCurrentMonthUsageResponse;
struct GetCurrentMonthUsageResponseDefaultTypeInternal;
extern GetCurrentMonthUsageResponseDefaultTypeInternal _GetCurrentMonthUsageResponse_default_instance_;
class GetInvoicePdfRequest;
struct GetInvoicePdfRequestDefaultTypeInternal;
extern GetInvoicePdfRequestDefaultTypeInternal _GetInvoicePdfRequest_default_instance_;
class GetInvoicePdfResponse;
struct GetInvoicePdfResponseDefaultTypeInternal;
extern GetInvoicePdfResponseDefaultTypeInternal _GetInvoicePdfResponse_default_instance_;
class GetInvoicesSummaryRequest;
struct GetInvoicesSummaryRequestDefaultTypeInternal;
extern GetInvoicesSummaryRequestDefaultTypeInternal _GetInvoicesSummaryRequest_default_instance_;
class GetInvoicesSummaryResponse;
struct GetInvoicesSummaryResponseDefaultTypeInternal;
extern GetInvoicesSummaryResponseDefaultTypeInternal _GetInvoicesSummaryResponse_default_instance_;
class GetOrgBillingInformationRequest;
struct GetOrgBillingInformationRequestDefaultTypeInternal;
extern GetOrgBillingInformationRequestDefaultTypeInternal _GetOrgBillingInformationRequest_default_instance_;
class GetOrgBillingInformationResponse;
struct GetOrgBillingInformationResponseDefaultTypeInternal;
extern GetOrgBillingInformationResponseDefaultTypeInternal _GetOrgBillingInformationResponse_default_instance_;
class InvoiceSummary;
struct InvoiceSummaryDefaultTypeInternal;
extern InvoiceSummaryDefaultTypeInternal _InvoiceSummary_default_instance_;
class PaymentMethodCard;
struct PaymentMethodCardDefaultTypeInternal;
extern PaymentMethodCardDefaultTypeInternal _PaymentMethodCard_default_instance_;
class ResourceUsageCosts;
struct ResourceUsageCostsDefaultTypeInternal;
extern ResourceUsageCostsDefaultTypeInternal _ResourceUsageCosts_default_instance_;
class ResourceUsageCostsBySource;
struct ResourceUsageCostsBySourceDefaultTypeInternal;
extern ResourceUsageCostsBySourceDefaultTypeInternal _ResourceUsageCostsBySource_default_instance_;
class SendPaymentRequiredEmailRequest;
struct SendPaymentRequiredEmailRequestDefaultTypeInternal;
extern SendPaymentRequiredEmailRequestDefaultTypeInternal _SendPaymentRequiredEmailRequest_default_instance_;
class SendPaymentRequiredEmailResponse;
struct SendPaymentRequiredEmailResponseDefaultTypeInternal;
extern SendPaymentRequiredEmailResponseDefaultTypeInternal _SendPaymentRequiredEmailResponse_default_instance_;
class UsageCost;
struct UsageCostDefaultTypeInternal;
extern UsageCostDefaultTypeInternal _UsageCost_default_instance_;
}  // namespace v1
}  // namespace app
}  // namespace viam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace viam {
namespace app {
namespace v1 {
enum PaymentMethodType : int {
  PAYMENT_METHOD_TYPE_UNSPECIFIED = 0,
  PAYMENT_METHOD_TYPE_CARD = 1,
  PaymentMethodType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PaymentMethodType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PaymentMethodType_IsValid(int value);
extern const uint32_t PaymentMethodType_internal_data_[];
constexpr PaymentMethodType PaymentMethodType_MIN = static_cast<PaymentMethodType>(0);
constexpr PaymentMethodType PaymentMethodType_MAX = static_cast<PaymentMethodType>(1);
constexpr int PaymentMethodType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
PaymentMethodType_descriptor();
template <typename T>
const std::string& PaymentMethodType_Name(T value) {
  static_assert(std::is_same<T, PaymentMethodType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PaymentMethodType_Name().");
  return PaymentMethodType_Name(static_cast<PaymentMethodType>(value));
}
template <>
inline const std::string& PaymentMethodType_Name(PaymentMethodType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PaymentMethodType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool PaymentMethodType_Parse(absl::string_view name, PaymentMethodType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PaymentMethodType>(
      PaymentMethodType_descriptor(), name, value);
}
enum UsageCostType : int {
  USAGE_COST_TYPE_UNSPECIFIED = 0,
  USAGE_COST_TYPE_DATA_UPLOAD = 1,
  USAGE_COST_TYPE_DATA_EGRESS = 2,
  USAGE_COST_TYPE_REMOTE_CONTROL = 3,
  USAGE_COST_TYPE_STANDARD_COMPUTE = 4,
  USAGE_COST_TYPE_CLOUD_STORAGE = 5,
  USAGE_COST_TYPE_BINARY_DATA_CLOUD_STORAGE = 6,
  USAGE_COST_TYPE_OTHER_CLOUD_STORAGE = 7,
  USAGE_COST_TYPE_PER_MACHINE = 8,
  UsageCostType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  UsageCostType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool UsageCostType_IsValid(int value);
extern const uint32_t UsageCostType_internal_data_[];
constexpr UsageCostType UsageCostType_MIN = static_cast<UsageCostType>(0);
constexpr UsageCostType UsageCostType_MAX = static_cast<UsageCostType>(8);
constexpr int UsageCostType_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
UsageCostType_descriptor();
template <typename T>
const std::string& UsageCostType_Name(T value) {
  static_assert(std::is_same<T, UsageCostType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to UsageCostType_Name().");
  return UsageCostType_Name(static_cast<UsageCostType>(value));
}
template <>
inline const std::string& UsageCostType_Name(UsageCostType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<UsageCostType_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool UsageCostType_Parse(absl::string_view name, UsageCostType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UsageCostType>(
      UsageCostType_descriptor(), name, value);
}
enum SourceType : int {
  SOURCE_TYPE_UNSPECIFIED = 0,
  SOURCE_TYPE_ORG = 1,
  SOURCE_TYPE_FRAGMENT = 2,
  SourceType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SourceType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SourceType_IsValid(int value);
extern const uint32_t SourceType_internal_data_[];
constexpr SourceType SourceType_MIN = static_cast<SourceType>(0);
constexpr SourceType SourceType_MAX = static_cast<SourceType>(2);
constexpr int SourceType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
SourceType_descriptor();
template <typename T>
const std::string& SourceType_Name(T value) {
  static_assert(std::is_same<T, SourceType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SourceType_Name().");
  return SourceType_Name(static_cast<SourceType>(value));
}
template <>
inline const std::string& SourceType_Name(SourceType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SourceType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool SourceType_Parse(absl::string_view name, SourceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SourceType>(
      SourceType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UsageCost final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.UsageCost) */ {
 public:
  inline UsageCost() : UsageCost(nullptr) {}
  ~UsageCost() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UsageCost(::google::protobuf::internal::ConstantInitialized);

  inline UsageCost(const UsageCost& from)
      : UsageCost(nullptr, from) {}
  UsageCost(UsageCost&& from) noexcept
    : UsageCost() {
    *this = ::std::move(from);
  }

  inline UsageCost& operator=(const UsageCost& from) {
    CopyFrom(from);
    return *this;
  }
  inline UsageCost& operator=(UsageCost&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UsageCost& default_instance() {
    return *internal_default_instance();
  }
  static inline const UsageCost* internal_default_instance() {
    return reinterpret_cast<const UsageCost*>(
               &_UsageCost_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(UsageCost& a, UsageCost& b) {
    a.Swap(&b);
  }
  inline void Swap(UsageCost* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UsageCost* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UsageCost* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UsageCost>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UsageCost& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UsageCost& from) {
    UsageCost::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UsageCost* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.UsageCost";
  }
  protected:
  explicit UsageCost(::google::protobuf::Arena* arena);
  UsageCost(::google::protobuf::Arena* arena, const UsageCost& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCostFieldNumber = 2,
    kResourceTypeFieldNumber = 1,
  };
  // double cost = 2 [json_name = "cost"];
  void clear_cost() ;
  double cost() const;
  void set_cost(double value);

  private:
  double _internal_cost() const;
  void _internal_set_cost(double value);

  public:
  // .viam.app.v1.UsageCostType resource_type = 1 [json_name = "resourceType"];
  void clear_resource_type() ;
  ::viam::app::v1::UsageCostType resource_type() const;
  void set_resource_type(::viam::app::v1::UsageCostType value);

  private:
  ::viam::app::v1::UsageCostType _internal_resource_type() const;
  void _internal_set_resource_type(::viam::app::v1::UsageCostType value);

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.UsageCost)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double cost_;
    int resource_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class SendPaymentRequiredEmailResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.app.v1.SendPaymentRequiredEmailResponse) */ {
 public:
  inline SendPaymentRequiredEmailResponse() : SendPaymentRequiredEmailResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SendPaymentRequiredEmailResponse(::google::protobuf::internal::ConstantInitialized);

  inline SendPaymentRequiredEmailResponse(const SendPaymentRequiredEmailResponse& from)
      : SendPaymentRequiredEmailResponse(nullptr, from) {}
  SendPaymentRequiredEmailResponse(SendPaymentRequiredEmailResponse&& from) noexcept
    : SendPaymentRequiredEmailResponse() {
    *this = ::std::move(from);
  }

  inline SendPaymentRequiredEmailResponse& operator=(const SendPaymentRequiredEmailResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendPaymentRequiredEmailResponse& operator=(SendPaymentRequiredEmailResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendPaymentRequiredEmailResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendPaymentRequiredEmailResponse* internal_default_instance() {
    return reinterpret_cast<const SendPaymentRequiredEmailResponse*>(
               &_SendPaymentRequiredEmailResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(SendPaymentRequiredEmailResponse& a, SendPaymentRequiredEmailResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SendPaymentRequiredEmailResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendPaymentRequiredEmailResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendPaymentRequiredEmailResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SendPaymentRequiredEmailResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SendPaymentRequiredEmailResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SendPaymentRequiredEmailResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.SendPaymentRequiredEmailResponse";
  }
  protected:
  explicit SendPaymentRequiredEmailResponse(::google::protobuf::Arena* arena);
  SendPaymentRequiredEmailResponse(::google::protobuf::Arena* arena, const SendPaymentRequiredEmailResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.app.v1.SendPaymentRequiredEmailResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class SendPaymentRequiredEmailRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.SendPaymentRequiredEmailRequest) */ {
 public:
  inline SendPaymentRequiredEmailRequest() : SendPaymentRequiredEmailRequest(nullptr) {}
  ~SendPaymentRequiredEmailRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SendPaymentRequiredEmailRequest(::google::protobuf::internal::ConstantInitialized);

  inline SendPaymentRequiredEmailRequest(const SendPaymentRequiredEmailRequest& from)
      : SendPaymentRequiredEmailRequest(nullptr, from) {}
  SendPaymentRequiredEmailRequest(SendPaymentRequiredEmailRequest&& from) noexcept
    : SendPaymentRequiredEmailRequest() {
    *this = ::std::move(from);
  }

  inline SendPaymentRequiredEmailRequest& operator=(const SendPaymentRequiredEmailRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendPaymentRequiredEmailRequest& operator=(SendPaymentRequiredEmailRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendPaymentRequiredEmailRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendPaymentRequiredEmailRequest* internal_default_instance() {
    return reinterpret_cast<const SendPaymentRequiredEmailRequest*>(
               &_SendPaymentRequiredEmailRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(SendPaymentRequiredEmailRequest& a, SendPaymentRequiredEmailRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SendPaymentRequiredEmailRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendPaymentRequiredEmailRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendPaymentRequiredEmailRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SendPaymentRequiredEmailRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendPaymentRequiredEmailRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SendPaymentRequiredEmailRequest& from) {
    SendPaymentRequiredEmailRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendPaymentRequiredEmailRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.SendPaymentRequiredEmailRequest";
  }
  protected:
  explicit SendPaymentRequiredEmailRequest(::google::protobuf::Arena* arena);
  SendPaymentRequiredEmailRequest(::google::protobuf::Arena* arena, const SendPaymentRequiredEmailRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomerOrgIdFieldNumber = 1,
    kBillingOwnerOrgIdFieldNumber = 2,
  };
  // string customer_org_id = 1 [json_name = "customerOrgId"];
  void clear_customer_org_id() ;
  const std::string& customer_org_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_customer_org_id(Arg_&& arg, Args_... args);
  std::string* mutable_customer_org_id();
  PROTOBUF_NODISCARD std::string* release_customer_org_id();
  void set_allocated_customer_org_id(std::string* value);

  private:
  const std::string& _internal_customer_org_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_customer_org_id(
      const std::string& value);
  std::string* _internal_mutable_customer_org_id();

  public:
  // string billing_owner_org_id = 2 [json_name = "billingOwnerOrgId"];
  void clear_billing_owner_org_id() ;
  const std::string& billing_owner_org_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_billing_owner_org_id(Arg_&& arg, Args_... args);
  std::string* mutable_billing_owner_org_id();
  PROTOBUF_NODISCARD std::string* release_billing_owner_org_id();
  void set_allocated_billing_owner_org_id(std::string* value);

  private:
  const std::string& _internal_billing_owner_org_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_billing_owner_org_id(
      const std::string& value);
  std::string* _internal_mutable_billing_owner_org_id();

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.SendPaymentRequiredEmailRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      87, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr customer_org_id_;
    ::google::protobuf::internal::ArenaStringPtr billing_owner_org_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class PaymentMethodCard final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.PaymentMethodCard) */ {
 public:
  inline PaymentMethodCard() : PaymentMethodCard(nullptr) {}
  ~PaymentMethodCard() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PaymentMethodCard(::google::protobuf::internal::ConstantInitialized);

  inline PaymentMethodCard(const PaymentMethodCard& from)
      : PaymentMethodCard(nullptr, from) {}
  PaymentMethodCard(PaymentMethodCard&& from) noexcept
    : PaymentMethodCard() {
    *this = ::std::move(from);
  }

  inline PaymentMethodCard& operator=(const PaymentMethodCard& from) {
    CopyFrom(from);
    return *this;
  }
  inline PaymentMethodCard& operator=(PaymentMethodCard&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PaymentMethodCard& default_instance() {
    return *internal_default_instance();
  }
  static inline const PaymentMethodCard* internal_default_instance() {
    return reinterpret_cast<const PaymentMethodCard*>(
               &_PaymentMethodCard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PaymentMethodCard& a, PaymentMethodCard& b) {
    a.Swap(&b);
  }
  inline void Swap(PaymentMethodCard* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PaymentMethodCard* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PaymentMethodCard* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PaymentMethodCard>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PaymentMethodCard& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PaymentMethodCard& from) {
    PaymentMethodCard::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PaymentMethodCard* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.PaymentMethodCard";
  }
  protected:
  explicit PaymentMethodCard(::google::protobuf::Arena* arena);
  PaymentMethodCard(::google::protobuf::Arena* arena, const PaymentMethodCard& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBrandFieldNumber = 1,
    kLastFourDigitsFieldNumber = 2,
  };
  // string brand = 1 [json_name = "brand"];
  void clear_brand() ;
  const std::string& brand() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_brand(Arg_&& arg, Args_... args);
  std::string* mutable_brand();
  PROTOBUF_NODISCARD std::string* release_brand();
  void set_allocated_brand(std::string* value);

  private:
  const std::string& _internal_brand() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_brand(
      const std::string& value);
  std::string* _internal_mutable_brand();

  public:
  // string last_four_digits = 2 [json_name = "lastFourDigits"];
  void clear_last_four_digits() ;
  const std::string& last_four_digits() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_four_digits(Arg_&& arg, Args_... args);
  std::string* mutable_last_four_digits();
  PROTOBUF_NODISCARD std::string* release_last_four_digits();
  void set_allocated_last_four_digits(std::string* value);

  private:
  const std::string& _internal_last_four_digits() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_four_digits(
      const std::string& value);
  std::string* _internal_mutable_last_four_digits();

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.PaymentMethodCard)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr brand_;
    ::google::protobuf::internal::ArenaStringPtr last_four_digits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class GetOrgBillingInformationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.GetOrgBillingInformationRequest) */ {
 public:
  inline GetOrgBillingInformationRequest() : GetOrgBillingInformationRequest(nullptr) {}
  ~GetOrgBillingInformationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrgBillingInformationRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetOrgBillingInformationRequest(const GetOrgBillingInformationRequest& from)
      : GetOrgBillingInformationRequest(nullptr, from) {}
  GetOrgBillingInformationRequest(GetOrgBillingInformationRequest&& from) noexcept
    : GetOrgBillingInformationRequest() {
    *this = ::std::move(from);
  }

  inline GetOrgBillingInformationRequest& operator=(const GetOrgBillingInformationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrgBillingInformationRequest& operator=(GetOrgBillingInformationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrgBillingInformationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOrgBillingInformationRequest* internal_default_instance() {
    return reinterpret_cast<const GetOrgBillingInformationRequest*>(
               &_GetOrgBillingInformationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GetOrgBillingInformationRequest& a, GetOrgBillingInformationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOrgBillingInformationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrgBillingInformationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrgBillingInformationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetOrgBillingInformationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrgBillingInformationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetOrgBillingInformationRequest& from) {
    GetOrgBillingInformationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetOrgBillingInformationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.GetOrgBillingInformationRequest";
  }
  protected:
  explicit GetOrgBillingInformationRequest(::google::protobuf::Arena* arena);
  GetOrgBillingInformationRequest(::google::protobuf::Arena* arena, const GetOrgBillingInformationRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrgIdFieldNumber = 1,
  };
  // string org_id = 1 [json_name = "orgId"];
  void clear_org_id() ;
  const std::string& org_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_org_id(Arg_&& arg, Args_... args);
  std::string* mutable_org_id();
  PROTOBUF_NODISCARD std::string* release_org_id();
  void set_allocated_org_id(std::string* value);

  private:
  const std::string& _internal_org_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_org_id(
      const std::string& value);
  std::string* _internal_mutable_org_id();

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.GetOrgBillingInformationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr org_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class GetInvoicesSummaryRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.GetInvoicesSummaryRequest) */ {
 public:
  inline GetInvoicesSummaryRequest() : GetInvoicesSummaryRequest(nullptr) {}
  ~GetInvoicesSummaryRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetInvoicesSummaryRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetInvoicesSummaryRequest(const GetInvoicesSummaryRequest& from)
      : GetInvoicesSummaryRequest(nullptr, from) {}
  GetInvoicesSummaryRequest(GetInvoicesSummaryRequest&& from) noexcept
    : GetInvoicesSummaryRequest() {
    *this = ::std::move(from);
  }

  inline GetInvoicesSummaryRequest& operator=(const GetInvoicesSummaryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInvoicesSummaryRequest& operator=(GetInvoicesSummaryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInvoicesSummaryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInvoicesSummaryRequest* internal_default_instance() {
    return reinterpret_cast<const GetInvoicesSummaryRequest*>(
               &_GetInvoicesSummaryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GetInvoicesSummaryRequest& a, GetInvoicesSummaryRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetInvoicesSummaryRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInvoicesSummaryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInvoicesSummaryRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetInvoicesSummaryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetInvoicesSummaryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetInvoicesSummaryRequest& from) {
    GetInvoicesSummaryRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetInvoicesSummaryRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.GetInvoicesSummaryRequest";
  }
  protected:
  explicit GetInvoicesSummaryRequest(::google::protobuf::Arena* arena);
  GetInvoicesSummaryRequest(::google::protobuf::Arena* arena, const GetInvoicesSummaryRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrgIdFieldNumber = 1,
  };
  // string org_id = 1 [json_name = "orgId"];
  void clear_org_id() ;
  const std::string& org_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_org_id(Arg_&& arg, Args_... args);
  std::string* mutable_org_id();
  PROTOBUF_NODISCARD std::string* release_org_id();
  void set_allocated_org_id(std::string* value);

  private:
  const std::string& _internal_org_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_org_id(
      const std::string& value);
  std::string* _internal_mutable_org_id();

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.GetInvoicesSummaryRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr org_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class GetInvoicePdfResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.GetInvoicePdfResponse) */ {
 public:
  inline GetInvoicePdfResponse() : GetInvoicePdfResponse(nullptr) {}
  ~GetInvoicePdfResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetInvoicePdfResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetInvoicePdfResponse(const GetInvoicePdfResponse& from)
      : GetInvoicePdfResponse(nullptr, from) {}
  GetInvoicePdfResponse(GetInvoicePdfResponse&& from) noexcept
    : GetInvoicePdfResponse() {
    *this = ::std::move(from);
  }

  inline GetInvoicePdfResponse& operator=(const GetInvoicePdfResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInvoicePdfResponse& operator=(GetInvoicePdfResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInvoicePdfResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInvoicePdfResponse* internal_default_instance() {
    return reinterpret_cast<const GetInvoicePdfResponse*>(
               &_GetInvoicePdfResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GetInvoicePdfResponse& a, GetInvoicePdfResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetInvoicePdfResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInvoicePdfResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInvoicePdfResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetInvoicePdfResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetInvoicePdfResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetInvoicePdfResponse& from) {
    GetInvoicePdfResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetInvoicePdfResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.GetInvoicePdfResponse";
  }
  protected:
  explicit GetInvoicePdfResponse(::google::protobuf::Arena* arena);
  GetInvoicePdfResponse(::google::protobuf::Arena* arena, const GetInvoicePdfResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChunkFieldNumber = 1,
  };
  // bytes chunk = 1 [json_name = "chunk"];
  void clear_chunk() ;
  const std::string& chunk() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_chunk(Arg_&& arg, Args_... args);
  std::string* mutable_chunk();
  PROTOBUF_NODISCARD std::string* release_chunk();
  void set_allocated_chunk(std::string* value);

  private:
  const std::string& _internal_chunk() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chunk(
      const std::string& value);
  std::string* _internal_mutable_chunk();

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.GetInvoicePdfResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr chunk_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class GetInvoicePdfRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.GetInvoicePdfRequest) */ {
 public:
  inline GetInvoicePdfRequest() : GetInvoicePdfRequest(nullptr) {}
  ~GetInvoicePdfRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetInvoicePdfRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetInvoicePdfRequest(const GetInvoicePdfRequest& from)
      : GetInvoicePdfRequest(nullptr, from) {}
  GetInvoicePdfRequest(GetInvoicePdfRequest&& from) noexcept
    : GetInvoicePdfRequest() {
    *this = ::std::move(from);
  }

  inline GetInvoicePdfRequest& operator=(const GetInvoicePdfRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInvoicePdfRequest& operator=(GetInvoicePdfRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInvoicePdfRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInvoicePdfRequest* internal_default_instance() {
    return reinterpret_cast<const GetInvoicePdfRequest*>(
               &_GetInvoicePdfRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(GetInvoicePdfRequest& a, GetInvoicePdfRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetInvoicePdfRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInvoicePdfRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInvoicePdfRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetInvoicePdfRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetInvoicePdfRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetInvoicePdfRequest& from) {
    GetInvoicePdfRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetInvoicePdfRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.GetInvoicePdfRequest";
  }
  protected:
  explicit GetInvoicePdfRequest(::google::protobuf::Arena* arena);
  GetInvoicePdfRequest(::google::protobuf::Arena* arena, const GetInvoicePdfRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kOrgIdFieldNumber = 2,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string org_id = 2 [json_name = "orgId"];
  void clear_org_id() ;
  const std::string& org_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_org_id(Arg_&& arg, Args_... args);
  std::string* mutable_org_id();
  PROTOBUF_NODISCARD std::string* release_org_id();
  void set_allocated_org_id(std::string* value);

  private:
  const std::string& _internal_org_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_org_id(
      const std::string& value);
  std::string* _internal_mutable_org_id();

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.GetInvoicePdfRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr org_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class GetCurrentMonthUsageRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.GetCurrentMonthUsageRequest) */ {
 public:
  inline GetCurrentMonthUsageRequest() : GetCurrentMonthUsageRequest(nullptr) {}
  ~GetCurrentMonthUsageRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetCurrentMonthUsageRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetCurrentMonthUsageRequest(const GetCurrentMonthUsageRequest& from)
      : GetCurrentMonthUsageRequest(nullptr, from) {}
  GetCurrentMonthUsageRequest(GetCurrentMonthUsageRequest&& from) noexcept
    : GetCurrentMonthUsageRequest() {
    *this = ::std::move(from);
  }

  inline GetCurrentMonthUsageRequest& operator=(const GetCurrentMonthUsageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCurrentMonthUsageRequest& operator=(GetCurrentMonthUsageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCurrentMonthUsageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCurrentMonthUsageRequest* internal_default_instance() {
    return reinterpret_cast<const GetCurrentMonthUsageRequest*>(
               &_GetCurrentMonthUsageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetCurrentMonthUsageRequest& a, GetCurrentMonthUsageRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCurrentMonthUsageRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCurrentMonthUsageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCurrentMonthUsageRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetCurrentMonthUsageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCurrentMonthUsageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetCurrentMonthUsageRequest& from) {
    GetCurrentMonthUsageRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetCurrentMonthUsageRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.GetCurrentMonthUsageRequest";
  }
  protected:
  explicit GetCurrentMonthUsageRequest(::google::protobuf::Arena* arena);
  GetCurrentMonthUsageRequest(::google::protobuf::Arena* arena, const GetCurrentMonthUsageRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrgIdFieldNumber = 1,
  };
  // string org_id = 1 [json_name = "orgId"];
  void clear_org_id() ;
  const std::string& org_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_org_id(Arg_&& arg, Args_... args);
  std::string* mutable_org_id();
  PROTOBUF_NODISCARD std::string* release_org_id();
  void set_allocated_org_id(std::string* value);

  private:
  const std::string& _internal_org_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_org_id(
      const std::string& value);
  std::string* _internal_mutable_org_id();

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.GetCurrentMonthUsageRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr org_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class ResourceUsageCosts final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.ResourceUsageCosts) */ {
 public:
  inline ResourceUsageCosts() : ResourceUsageCosts(nullptr) {}
  ~ResourceUsageCosts() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResourceUsageCosts(::google::protobuf::internal::ConstantInitialized);

  inline ResourceUsageCosts(const ResourceUsageCosts& from)
      : ResourceUsageCosts(nullptr, from) {}
  ResourceUsageCosts(ResourceUsageCosts&& from) noexcept
    : ResourceUsageCosts() {
    *this = ::std::move(from);
  }

  inline ResourceUsageCosts& operator=(const ResourceUsageCosts& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceUsageCosts& operator=(ResourceUsageCosts&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResourceUsageCosts& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResourceUsageCosts* internal_default_instance() {
    return reinterpret_cast<const ResourceUsageCosts*>(
               &_ResourceUsageCosts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ResourceUsageCosts& a, ResourceUsageCosts& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceUsageCosts* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResourceUsageCosts* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResourceUsageCosts* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResourceUsageCosts>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResourceUsageCosts& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ResourceUsageCosts& from) {
    ResourceUsageCosts::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResourceUsageCosts* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.ResourceUsageCosts";
  }
  protected:
  explicit ResourceUsageCosts(::google::protobuf::Arena* arena);
  ResourceUsageCosts(::google::protobuf::Arena* arena, const ResourceUsageCosts& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUsageCostsFieldNumber = 1,
    kDiscountFieldNumber = 2,
    kTotalWithDiscountFieldNumber = 3,
    kTotalWithoutDiscountFieldNumber = 4,
  };
  // repeated .viam.app.v1.UsageCost usage_costs = 1 [json_name = "usageCosts"];
  int usage_costs_size() const;
  private:
  int _internal_usage_costs_size() const;

  public:
  void clear_usage_costs() ;
  ::viam::app::v1::UsageCost* mutable_usage_costs(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::app::v1::UsageCost >*
      mutable_usage_costs();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::app::v1::UsageCost>& _internal_usage_costs() const;
  ::google::protobuf::RepeatedPtrField<::viam::app::v1::UsageCost>* _internal_mutable_usage_costs();
  public:
  const ::viam::app::v1::UsageCost& usage_costs(int index) const;
  ::viam::app::v1::UsageCost* add_usage_costs();
  const ::google::protobuf::RepeatedPtrField< ::viam::app::v1::UsageCost >&
      usage_costs() const;
  // double discount = 2 [json_name = "discount"];
  void clear_discount() ;
  double discount() const;
  void set_discount(double value);

  private:
  double _internal_discount() const;
  void _internal_set_discount(double value);

  public:
  // double total_with_discount = 3 [json_name = "totalWithDiscount"];
  void clear_total_with_discount() ;
  double total_with_discount() const;
  void set_total_with_discount(double value);

  private:
  double _internal_total_with_discount() const;
  void _internal_set_total_with_discount(double value);

  public:
  // double total_without_discount = 4 [json_name = "totalWithoutDiscount"];
  void clear_total_without_discount() ;
  double total_without_discount() const;
  void set_total_without_discount(double value);

  private:
  double _internal_total_without_discount() const;
  void _internal_set_total_without_discount(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.ResourceUsageCosts)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::app::v1::UsageCost > usage_costs_;
    double discount_;
    double total_with_discount_;
    double total_without_discount_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class InvoiceSummary final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.InvoiceSummary) */ {
 public:
  inline InvoiceSummary() : InvoiceSummary(nullptr) {}
  ~InvoiceSummary() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR InvoiceSummary(::google::protobuf::internal::ConstantInitialized);

  inline InvoiceSummary(const InvoiceSummary& from)
      : InvoiceSummary(nullptr, from) {}
  InvoiceSummary(InvoiceSummary&& from) noexcept
    : InvoiceSummary() {
    *this = ::std::move(from);
  }

  inline InvoiceSummary& operator=(const InvoiceSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline InvoiceSummary& operator=(InvoiceSummary&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InvoiceSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const InvoiceSummary* internal_default_instance() {
    return reinterpret_cast<const InvoiceSummary*>(
               &_InvoiceSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InvoiceSummary& a, InvoiceSummary& b) {
    a.Swap(&b);
  }
  inline void Swap(InvoiceSummary* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InvoiceSummary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InvoiceSummary* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InvoiceSummary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InvoiceSummary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const InvoiceSummary& from) {
    InvoiceSummary::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InvoiceSummary* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.InvoiceSummary";
  }
  protected:
  explicit InvoiceSummary(::google::protobuf::Arena* arena);
  InvoiceSummary(::google::protobuf::Arena* arena, const InvoiceSummary& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kStatusFieldNumber = 4,
    kInvoiceDateFieldNumber = 2,
    kDueDateFieldNumber = 5,
    kPaidDateFieldNumber = 6,
    kInvoiceAmountFieldNumber = 3,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string status = 4 [json_name = "status"];
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // .google.protobuf.Timestamp invoice_date = 2 [json_name = "invoiceDate"];
  bool has_invoice_date() const;
  void clear_invoice_date() ;
  const ::google::protobuf::Timestamp& invoice_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_invoice_date();
  ::google::protobuf::Timestamp* mutable_invoice_date();
  void set_allocated_invoice_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_invoice_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_invoice_date();

  private:
  const ::google::protobuf::Timestamp& _internal_invoice_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_invoice_date();

  public:
  // .google.protobuf.Timestamp due_date = 5 [json_name = "dueDate"];
  bool has_due_date() const;
  void clear_due_date() ;
  const ::google::protobuf::Timestamp& due_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_due_date();
  ::google::protobuf::Timestamp* mutable_due_date();
  void set_allocated_due_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_due_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_due_date();

  private:
  const ::google::protobuf::Timestamp& _internal_due_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_due_date();

  public:
  // .google.protobuf.Timestamp paid_date = 6 [json_name = "paidDate"];
  bool has_paid_date() const;
  void clear_paid_date() ;
  const ::google::protobuf::Timestamp& paid_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_paid_date();
  ::google::protobuf::Timestamp* mutable_paid_date();
  void set_allocated_paid_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_paid_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_paid_date();

  private:
  const ::google::protobuf::Timestamp& _internal_paid_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_paid_date();

  public:
  // double invoice_amount = 3 [json_name = "invoiceAmount"];
  void clear_invoice_amount() ;
  double invoice_amount() const;
  void set_invoice_amount(double value);

  private:
  double _internal_invoice_amount() const;
  void _internal_set_invoice_amount(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.InvoiceSummary)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 3,
      43, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::Timestamp* invoice_date_;
    ::google::protobuf::Timestamp* due_date_;
    ::google::protobuf::Timestamp* paid_date_;
    double invoice_amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class GetOrgBillingInformationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.GetOrgBillingInformationResponse) */ {
 public:
  inline GetOrgBillingInformationResponse() : GetOrgBillingInformationResponse(nullptr) {}
  ~GetOrgBillingInformationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrgBillingInformationResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetOrgBillingInformationResponse(const GetOrgBillingInformationResponse& from)
      : GetOrgBillingInformationResponse(nullptr, from) {}
  GetOrgBillingInformationResponse(GetOrgBillingInformationResponse&& from) noexcept
    : GetOrgBillingInformationResponse() {
    *this = ::std::move(from);
  }

  inline GetOrgBillingInformationResponse& operator=(const GetOrgBillingInformationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrgBillingInformationResponse& operator=(GetOrgBillingInformationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrgBillingInformationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOrgBillingInformationResponse* internal_default_instance() {
    return reinterpret_cast<const GetOrgBillingInformationResponse*>(
               &_GetOrgBillingInformationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GetOrgBillingInformationResponse& a, GetOrgBillingInformationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOrgBillingInformationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrgBillingInformationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrgBillingInformationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetOrgBillingInformationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrgBillingInformationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetOrgBillingInformationResponse& from) {
    GetOrgBillingInformationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetOrgBillingInformationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.GetOrgBillingInformationResponse";
  }
  protected:
  explicit GetOrgBillingInformationResponse(::google::protobuf::Arena* arena);
  GetOrgBillingInformationResponse(::google::protobuf::Arena* arena, const GetOrgBillingInformationResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBillingEmailFieldNumber = 2,
    kBillingTierFieldNumber = 4,
    kMethodFieldNumber = 3,
    kTypeFieldNumber = 1,
  };
  // string billing_email = 2 [json_name = "billingEmail"];
  void clear_billing_email() ;
  const std::string& billing_email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_billing_email(Arg_&& arg, Args_... args);
  std::string* mutable_billing_email();
  PROTOBUF_NODISCARD std::string* release_billing_email();
  void set_allocated_billing_email(std::string* value);

  private:
  const std::string& _internal_billing_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_billing_email(
      const std::string& value);
  std::string* _internal_mutable_billing_email();

  public:
  // optional string billing_tier = 4 [json_name = "billingTier"];
  bool has_billing_tier() const;
  void clear_billing_tier() ;
  const std::string& billing_tier() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_billing_tier(Arg_&& arg, Args_... args);
  std::string* mutable_billing_tier();
  PROTOBUF_NODISCARD std::string* release_billing_tier();
  void set_allocated_billing_tier(std::string* value);

  private:
  const std::string& _internal_billing_tier() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_billing_tier(
      const std::string& value);
  std::string* _internal_mutable_billing_tier();

  public:
  // optional .viam.app.v1.PaymentMethodCard method = 3 [json_name = "method"];
  bool has_method() const;
  void clear_method() ;
  const ::viam::app::v1::PaymentMethodCard& method() const;
  PROTOBUF_NODISCARD ::viam::app::v1::PaymentMethodCard* release_method();
  ::viam::app::v1::PaymentMethodCard* mutable_method();
  void set_allocated_method(::viam::app::v1::PaymentMethodCard* value);
  void unsafe_arena_set_allocated_method(::viam::app::v1::PaymentMethodCard* value);
  ::viam::app::v1::PaymentMethodCard* unsafe_arena_release_method();

  private:
  const ::viam::app::v1::PaymentMethodCard& _internal_method() const;
  ::viam::app::v1::PaymentMethodCard* _internal_mutable_method();

  public:
  // .viam.app.v1.PaymentMethodType type = 1 [json_name = "type"];
  void clear_type() ;
  ::viam::app::v1::PaymentMethodType type() const;
  void set_type(::viam::app::v1::PaymentMethodType value);

  private:
  ::viam::app::v1::PaymentMethodType _internal_type() const;
  void _internal_set_type(::viam::app::v1::PaymentMethodType value);

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.GetOrgBillingInformationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      78, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr billing_email_;
    ::google::protobuf::internal::ArenaStringPtr billing_tier_;
    ::viam::app::v1::PaymentMethodCard* method_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class ResourceUsageCostsBySource final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.ResourceUsageCostsBySource) */ {
 public:
  inline ResourceUsageCostsBySource() : ResourceUsageCostsBySource(nullptr) {}
  ~ResourceUsageCostsBySource() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResourceUsageCostsBySource(::google::protobuf::internal::ConstantInitialized);

  inline ResourceUsageCostsBySource(const ResourceUsageCostsBySource& from)
      : ResourceUsageCostsBySource(nullptr, from) {}
  ResourceUsageCostsBySource(ResourceUsageCostsBySource&& from) noexcept
    : ResourceUsageCostsBySource() {
    *this = ::std::move(from);
  }

  inline ResourceUsageCostsBySource& operator=(const ResourceUsageCostsBySource& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceUsageCostsBySource& operator=(ResourceUsageCostsBySource&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResourceUsageCostsBySource& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResourceUsageCostsBySource* internal_default_instance() {
    return reinterpret_cast<const ResourceUsageCostsBySource*>(
               &_ResourceUsageCostsBySource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ResourceUsageCostsBySource& a, ResourceUsageCostsBySource& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceUsageCostsBySource* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResourceUsageCostsBySource* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResourceUsageCostsBySource* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResourceUsageCostsBySource>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResourceUsageCostsBySource& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ResourceUsageCostsBySource& from) {
    ResourceUsageCostsBySource::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResourceUsageCostsBySource* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.ResourceUsageCostsBySource";
  }
  protected:
  explicit ResourceUsageCostsBySource(::google::protobuf::Arena* arena);
  ResourceUsageCostsBySource(::google::protobuf::Arena* arena, const ResourceUsageCostsBySource& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTierNameFieldNumber = 3,
    kResourceUsageCostsFieldNumber = 2,
    kSourceTypeFieldNumber = 1,
  };
  // string tier_name = 3 [json_name = "tierName"];
  void clear_tier_name() ;
  const std::string& tier_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tier_name(Arg_&& arg, Args_... args);
  std::string* mutable_tier_name();
  PROTOBUF_NODISCARD std::string* release_tier_name();
  void set_allocated_tier_name(std::string* value);

  private:
  const std::string& _internal_tier_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tier_name(
      const std::string& value);
  std::string* _internal_mutable_tier_name();

  public:
  // .viam.app.v1.ResourceUsageCosts resource_usage_costs = 2 [json_name = "resourceUsageCosts"];
  bool has_resource_usage_costs() const;
  void clear_resource_usage_costs() ;
  const ::viam::app::v1::ResourceUsageCosts& resource_usage_costs() const;
  PROTOBUF_NODISCARD ::viam::app::v1::ResourceUsageCosts* release_resource_usage_costs();
  ::viam::app::v1::ResourceUsageCosts* mutable_resource_usage_costs();
  void set_allocated_resource_usage_costs(::viam::app::v1::ResourceUsageCosts* value);
  void unsafe_arena_set_allocated_resource_usage_costs(::viam::app::v1::ResourceUsageCosts* value);
  ::viam::app::v1::ResourceUsageCosts* unsafe_arena_release_resource_usage_costs();

  private:
  const ::viam::app::v1::ResourceUsageCosts& _internal_resource_usage_costs() const;
  ::viam::app::v1::ResourceUsageCosts* _internal_mutable_resource_usage_costs();

  public:
  // .viam.app.v1.SourceType source_type = 1 [json_name = "sourceType"];
  void clear_source_type() ;
  ::viam::app::v1::SourceType source_type() const;
  void set_source_type(::viam::app::v1::SourceType value);

  private:
  ::viam::app::v1::SourceType _internal_source_type() const;
  void _internal_set_source_type(::viam::app::v1::SourceType value);

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.ResourceUsageCostsBySource)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr tier_name_;
    ::viam::app::v1::ResourceUsageCosts* resource_usage_costs_;
    int source_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class GetInvoicesSummaryResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.GetInvoicesSummaryResponse) */ {
 public:
  inline GetInvoicesSummaryResponse() : GetInvoicesSummaryResponse(nullptr) {}
  ~GetInvoicesSummaryResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetInvoicesSummaryResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetInvoicesSummaryResponse(const GetInvoicesSummaryResponse& from)
      : GetInvoicesSummaryResponse(nullptr, from) {}
  GetInvoicesSummaryResponse(GetInvoicesSummaryResponse&& from) noexcept
    : GetInvoicesSummaryResponse() {
    *this = ::std::move(from);
  }

  inline GetInvoicesSummaryResponse& operator=(const GetInvoicesSummaryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInvoicesSummaryResponse& operator=(GetInvoicesSummaryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInvoicesSummaryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInvoicesSummaryResponse* internal_default_instance() {
    return reinterpret_cast<const GetInvoicesSummaryResponse*>(
               &_GetInvoicesSummaryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(GetInvoicesSummaryResponse& a, GetInvoicesSummaryResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetInvoicesSummaryResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInvoicesSummaryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInvoicesSummaryResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetInvoicesSummaryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetInvoicesSummaryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetInvoicesSummaryResponse& from) {
    GetInvoicesSummaryResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetInvoicesSummaryResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.GetInvoicesSummaryResponse";
  }
  protected:
  explicit GetInvoicesSummaryResponse(::google::protobuf::Arena* arena);
  GetInvoicesSummaryResponse(::google::protobuf::Arena* arena, const GetInvoicesSummaryResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInvoicesFieldNumber = 2,
    kOutstandingBalanceFieldNumber = 1,
  };
  // repeated .viam.app.v1.InvoiceSummary invoices = 2 [json_name = "invoices"];
  int invoices_size() const;
  private:
  int _internal_invoices_size() const;

  public:
  void clear_invoices() ;
  ::viam::app::v1::InvoiceSummary* mutable_invoices(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::app::v1::InvoiceSummary >*
      mutable_invoices();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::app::v1::InvoiceSummary>& _internal_invoices() const;
  ::google::protobuf::RepeatedPtrField<::viam::app::v1::InvoiceSummary>* _internal_mutable_invoices();
  public:
  const ::viam::app::v1::InvoiceSummary& invoices(int index) const;
  ::viam::app::v1::InvoiceSummary* add_invoices();
  const ::google::protobuf::RepeatedPtrField< ::viam::app::v1::InvoiceSummary >&
      invoices() const;
  // double outstanding_balance = 1 [json_name = "outstandingBalance"];
  void clear_outstanding_balance() ;
  double outstanding_balance() const;
  void set_outstanding_balance(double value);

  private:
  double _internal_outstanding_balance() const;
  void _internal_set_outstanding_balance(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.GetInvoicesSummaryResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::app::v1::InvoiceSummary > invoices_;
    double outstanding_balance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};// -------------------------------------------------------------------

class GetCurrentMonthUsageResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.app.v1.GetCurrentMonthUsageResponse) */ {
 public:
  inline GetCurrentMonthUsageResponse() : GetCurrentMonthUsageResponse(nullptr) {}
  ~GetCurrentMonthUsageResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetCurrentMonthUsageResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetCurrentMonthUsageResponse(const GetCurrentMonthUsageResponse& from)
      : GetCurrentMonthUsageResponse(nullptr, from) {}
  GetCurrentMonthUsageResponse(GetCurrentMonthUsageResponse&& from) noexcept
    : GetCurrentMonthUsageResponse() {
    *this = ::std::move(from);
  }

  inline GetCurrentMonthUsageResponse& operator=(const GetCurrentMonthUsageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCurrentMonthUsageResponse& operator=(GetCurrentMonthUsageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCurrentMonthUsageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCurrentMonthUsageResponse* internal_default_instance() {
    return reinterpret_cast<const GetCurrentMonthUsageResponse*>(
               &_GetCurrentMonthUsageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetCurrentMonthUsageResponse& a, GetCurrentMonthUsageResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCurrentMonthUsageResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCurrentMonthUsageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCurrentMonthUsageResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetCurrentMonthUsageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCurrentMonthUsageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetCurrentMonthUsageResponse& from) {
    GetCurrentMonthUsageResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetCurrentMonthUsageResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.app.v1.GetCurrentMonthUsageResponse";
  }
  protected:
  explicit GetCurrentMonthUsageResponse(::google::protobuf::Arena* arena);
  GetCurrentMonthUsageResponse(::google::protobuf::Arena* arena, const GetCurrentMonthUsageResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResourceUsageCostsBySourceFieldNumber = 14,
    kStartDateFieldNumber = 1,
    kEndDateFieldNumber = 2,
    kCloudStorageUsageCostFieldNumber = 3,
    kDataUploadUsageCostFieldNumber = 4,
    kDataEgresUsageCostFieldNumber = 5,
    kRemoteControlUsageCostFieldNumber = 6,
    kStandardComputeUsageCostFieldNumber = 7,
    kDiscountAmountFieldNumber = 8,
    kTotalUsageWithDiscountFieldNumber = 9,
    kTotalUsageWithoutDiscountFieldNumber = 10,
    kPerMachineUsageCostFieldNumber = 11,
    kBinaryDataCloudStorageUsageCostFieldNumber = 12,
    kOtherCloudStorageUsageCostFieldNumber = 13,
    kSubtotalFieldNumber = 15,
  };
  // repeated .viam.app.v1.ResourceUsageCostsBySource resource_usage_costs_by_source = 14 [json_name = "resourceUsageCostsBySource"];
  int resource_usage_costs_by_source_size() const;
  private:
  int _internal_resource_usage_costs_by_source_size() const;

  public:
  void clear_resource_usage_costs_by_source() ;
  ::viam::app::v1::ResourceUsageCostsBySource* mutable_resource_usage_costs_by_source(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::app::v1::ResourceUsageCostsBySource >*
      mutable_resource_usage_costs_by_source();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::app::v1::ResourceUsageCostsBySource>& _internal_resource_usage_costs_by_source() const;
  ::google::protobuf::RepeatedPtrField<::viam::app::v1::ResourceUsageCostsBySource>* _internal_mutable_resource_usage_costs_by_source();
  public:
  const ::viam::app::v1::ResourceUsageCostsBySource& resource_usage_costs_by_source(int index) const;
  ::viam::app::v1::ResourceUsageCostsBySource* add_resource_usage_costs_by_source();
  const ::google::protobuf::RepeatedPtrField< ::viam::app::v1::ResourceUsageCostsBySource >&
      resource_usage_costs_by_source() const;
  // .google.protobuf.Timestamp start_date = 1 [json_name = "startDate"];
  bool has_start_date() const;
  void clear_start_date() ;
  const ::google::protobuf::Timestamp& start_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_start_date();
  ::google::protobuf::Timestamp* mutable_start_date();
  void set_allocated_start_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_start_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_start_date();

  private:
  const ::google::protobuf::Timestamp& _internal_start_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_start_date();

  public:
  // .google.protobuf.Timestamp end_date = 2 [json_name = "endDate"];
  bool has_end_date() const;
  void clear_end_date() ;
  const ::google::protobuf::Timestamp& end_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_end_date();
  ::google::protobuf::Timestamp* mutable_end_date();
  void set_allocated_end_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_end_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_end_date();

  private:
  const ::google::protobuf::Timestamp& _internal_end_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_end_date();

  public:
  // double cloud_storage_usage_cost = 3 [json_name = "cloudStorageUsageCost", deprecated = true];
  [[deprecated]]  void clear_cloud_storage_usage_cost() ;
  [[deprecated]] double cloud_storage_usage_cost() const;
  [[deprecated]] void set_cloud_storage_usage_cost(double value);

  private:
  double _internal_cloud_storage_usage_cost() const;
  void _internal_set_cloud_storage_usage_cost(double value);

  public:
  // double data_upload_usage_cost = 4 [json_name = "dataUploadUsageCost", deprecated = true];
  [[deprecated]]  void clear_data_upload_usage_cost() ;
  [[deprecated]] double data_upload_usage_cost() const;
  [[deprecated]] void set_data_upload_usage_cost(double value);

  private:
  double _internal_data_upload_usage_cost() const;
  void _internal_set_data_upload_usage_cost(double value);

  public:
  // double data_egres_usage_cost = 5 [json_name = "dataEgresUsageCost", deprecated = true];
  [[deprecated]]  void clear_data_egres_usage_cost() ;
  [[deprecated]] double data_egres_usage_cost() const;
  [[deprecated]] void set_data_egres_usage_cost(double value);

  private:
  double _internal_data_egres_usage_cost() const;
  void _internal_set_data_egres_usage_cost(double value);

  public:
  // double remote_control_usage_cost = 6 [json_name = "remoteControlUsageCost", deprecated = true];
  [[deprecated]]  void clear_remote_control_usage_cost() ;
  [[deprecated]] double remote_control_usage_cost() const;
  [[deprecated]] void set_remote_control_usage_cost(double value);

  private:
  double _internal_remote_control_usage_cost() const;
  void _internal_set_remote_control_usage_cost(double value);

  public:
  // double standard_compute_usage_cost = 7 [json_name = "standardComputeUsageCost", deprecated = true];
  [[deprecated]]  void clear_standard_compute_usage_cost() ;
  [[deprecated]] double standard_compute_usage_cost() const;
  [[deprecated]] void set_standard_compute_usage_cost(double value);

  private:
  double _internal_standard_compute_usage_cost() const;
  void _internal_set_standard_compute_usage_cost(double value);

  public:
  // double discount_amount = 8 [json_name = "discountAmount", deprecated = true];
  [[deprecated]]  void clear_discount_amount() ;
  [[deprecated]] double discount_amount() const;
  [[deprecated]] void set_discount_amount(double value);

  private:
  double _internal_discount_amount() const;
  void _internal_set_discount_amount(double value);

  public:
  // double total_usage_with_discount = 9 [json_name = "totalUsageWithDiscount", deprecated = true];
  [[deprecated]]  void clear_total_usage_with_discount() ;
  [[deprecated]] double total_usage_with_discount() const;
  [[deprecated]] void set_total_usage_with_discount(double value);

  private:
  double _internal_total_usage_with_discount() const;
  void _internal_set_total_usage_with_discount(double value);

  public:
  // double total_usage_without_discount = 10 [json_name = "totalUsageWithoutDiscount", deprecated = true];
  [[deprecated]]  void clear_total_usage_without_discount() ;
  [[deprecated]] double total_usage_without_discount() const;
  [[deprecated]] void set_total_usage_without_discount(double value);

  private:
  double _internal_total_usage_without_discount() const;
  void _internal_set_total_usage_without_discount(double value);

  public:
  // double per_machine_usage_cost = 11 [json_name = "perMachineUsageCost", deprecated = true];
  [[deprecated]]  void clear_per_machine_usage_cost() ;
  [[deprecated]] double per_machine_usage_cost() const;
  [[deprecated]] void set_per_machine_usage_cost(double value);

  private:
  double _internal_per_machine_usage_cost() const;
  void _internal_set_per_machine_usage_cost(double value);

  public:
  // double binary_data_cloud_storage_usage_cost = 12 [json_name = "binaryDataCloudStorageUsageCost", deprecated = true];
  [[deprecated]]  void clear_binary_data_cloud_storage_usage_cost() ;
  [[deprecated]] double binary_data_cloud_storage_usage_cost() const;
  [[deprecated]] void set_binary_data_cloud_storage_usage_cost(double value);

  private:
  double _internal_binary_data_cloud_storage_usage_cost() const;
  void _internal_set_binary_data_cloud_storage_usage_cost(double value);

  public:
  // double other_cloud_storage_usage_cost = 13 [json_name = "otherCloudStorageUsageCost", deprecated = true];
  [[deprecated]]  void clear_other_cloud_storage_usage_cost() ;
  [[deprecated]] double other_cloud_storage_usage_cost() const;
  [[deprecated]] void set_other_cloud_storage_usage_cost(double value);

  private:
  double _internal_other_cloud_storage_usage_cost() const;
  void _internal_set_other_cloud_storage_usage_cost(double value);

  public:
  // double subtotal = 15 [json_name = "subtotal"];
  void clear_subtotal() ;
  double subtotal() const;
  void set_subtotal(double value);

  private:
  double _internal_subtotal() const;
  void _internal_set_subtotal(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.app.v1.GetCurrentMonthUsageResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 15, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::viam::app::v1::ResourceUsageCostsBySource > resource_usage_costs_by_source_;
    ::google::protobuf::Timestamp* start_date_;
    ::google::protobuf::Timestamp* end_date_;
    double cloud_storage_usage_cost_;
    double data_upload_usage_cost_;
    double data_egres_usage_cost_;
    double remote_control_usage_cost_;
    double standard_compute_usage_cost_;
    double discount_amount_;
    double total_usage_with_discount_;
    double total_usage_without_discount_;
    double per_machine_usage_cost_;
    double binary_data_cloud_storage_usage_cost_;
    double other_cloud_storage_usage_cost_;
    double subtotal_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fv1_2fbilling_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// InvoiceSummary

// string id = 1 [json_name = "id"];
inline void InvoiceSummary::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& InvoiceSummary::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.InvoiceSummary.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InvoiceSummary::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.InvoiceSummary.id)
}
inline std::string* InvoiceSummary::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.InvoiceSummary.id)
  return _s;
}
inline const std::string& InvoiceSummary::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void InvoiceSummary::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* InvoiceSummary::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* InvoiceSummary::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.InvoiceSummary.id)
  return _impl_.id_.Release();
}
inline void InvoiceSummary::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.InvoiceSummary.id)
}

// .google.protobuf.Timestamp invoice_date = 2 [json_name = "invoiceDate"];
inline bool InvoiceSummary::has_invoice_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.invoice_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& InvoiceSummary::_internal_invoice_date() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.invoice_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& InvoiceSummary::invoice_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.InvoiceSummary.invoice_date)
  return _internal_invoice_date();
}
inline void InvoiceSummary::unsafe_arena_set_allocated_invoice_date(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.invoice_date_);
  }
  _impl_.invoice_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.app.v1.InvoiceSummary.invoice_date)
}
inline ::google::protobuf::Timestamp* InvoiceSummary::release_invoice_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.invoice_date_;
  _impl_.invoice_date_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* InvoiceSummary::unsafe_arena_release_invoice_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.InvoiceSummary.invoice_date)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.invoice_date_;
  _impl_.invoice_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* InvoiceSummary::_internal_mutable_invoice_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.invoice_date_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.invoice_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.invoice_date_;
}
inline ::google::protobuf::Timestamp* InvoiceSummary::mutable_invoice_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_invoice_date();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.InvoiceSummary.invoice_date)
  return _msg;
}
inline void InvoiceSummary::set_allocated_invoice_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.invoice_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.invoice_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.InvoiceSummary.invoice_date)
}

// double invoice_amount = 3 [json_name = "invoiceAmount"];
inline void InvoiceSummary::clear_invoice_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.invoice_amount_ = 0;
}
inline double InvoiceSummary::invoice_amount() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.InvoiceSummary.invoice_amount)
  return _internal_invoice_amount();
}
inline void InvoiceSummary::set_invoice_amount(double value) {
  _internal_set_invoice_amount(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.InvoiceSummary.invoice_amount)
}
inline double InvoiceSummary::_internal_invoice_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.invoice_amount_;
}
inline void InvoiceSummary::_internal_set_invoice_amount(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.invoice_amount_ = value;
}

// string status = 4 [json_name = "status"];
inline void InvoiceSummary::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& InvoiceSummary::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.InvoiceSummary.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InvoiceSummary::set_status(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.InvoiceSummary.status)
}
inline std::string* InvoiceSummary::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.InvoiceSummary.status)
  return _s;
}
inline const std::string& InvoiceSummary::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_.Get();
}
inline void InvoiceSummary::_internal_set_status(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_.Set(value, GetArena());
}
inline std::string* InvoiceSummary::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* InvoiceSummary::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.InvoiceSummary.status)
  return _impl_.status_.Release();
}
inline void InvoiceSummary::set_allocated_status(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_.IsDefault()) {
          _impl_.status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.InvoiceSummary.status)
}

// .google.protobuf.Timestamp due_date = 5 [json_name = "dueDate"];
inline bool InvoiceSummary::has_due_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.due_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& InvoiceSummary::_internal_due_date() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.due_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& InvoiceSummary::due_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.InvoiceSummary.due_date)
  return _internal_due_date();
}
inline void InvoiceSummary::unsafe_arena_set_allocated_due_date(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.due_date_);
  }
  _impl_.due_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.app.v1.InvoiceSummary.due_date)
}
inline ::google::protobuf::Timestamp* InvoiceSummary::release_due_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.due_date_;
  _impl_.due_date_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* InvoiceSummary::unsafe_arena_release_due_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.InvoiceSummary.due_date)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.due_date_;
  _impl_.due_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* InvoiceSummary::_internal_mutable_due_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.due_date_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.due_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.due_date_;
}
inline ::google::protobuf::Timestamp* InvoiceSummary::mutable_due_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_due_date();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.InvoiceSummary.due_date)
  return _msg;
}
inline void InvoiceSummary::set_allocated_due_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.due_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.due_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.InvoiceSummary.due_date)
}

// .google.protobuf.Timestamp paid_date = 6 [json_name = "paidDate"];
inline bool InvoiceSummary::has_paid_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.paid_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& InvoiceSummary::_internal_paid_date() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.paid_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& InvoiceSummary::paid_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.InvoiceSummary.paid_date)
  return _internal_paid_date();
}
inline void InvoiceSummary::unsafe_arena_set_allocated_paid_date(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.paid_date_);
  }
  _impl_.paid_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.app.v1.InvoiceSummary.paid_date)
}
inline ::google::protobuf::Timestamp* InvoiceSummary::release_paid_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.paid_date_;
  _impl_.paid_date_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* InvoiceSummary::unsafe_arena_release_paid_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.InvoiceSummary.paid_date)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.paid_date_;
  _impl_.paid_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* InvoiceSummary::_internal_mutable_paid_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.paid_date_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.paid_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.paid_date_;
}
inline ::google::protobuf::Timestamp* InvoiceSummary::mutable_paid_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_paid_date();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.InvoiceSummary.paid_date)
  return _msg;
}
inline void InvoiceSummary::set_allocated_paid_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.paid_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.paid_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.InvoiceSummary.paid_date)
}

// -------------------------------------------------------------------

// PaymentMethodCard

// string brand = 1 [json_name = "brand"];
inline void PaymentMethodCard::clear_brand() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.brand_.ClearToEmpty();
}
inline const std::string& PaymentMethodCard::brand() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.PaymentMethodCard.brand)
  return _internal_brand();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PaymentMethodCard::set_brand(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.brand_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.PaymentMethodCard.brand)
}
inline std::string* PaymentMethodCard::mutable_brand() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_brand();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.PaymentMethodCard.brand)
  return _s;
}
inline const std::string& PaymentMethodCard::_internal_brand() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.brand_.Get();
}
inline void PaymentMethodCard::_internal_set_brand(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.brand_.Set(value, GetArena());
}
inline std::string* PaymentMethodCard::_internal_mutable_brand() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.brand_.Mutable( GetArena());
}
inline std::string* PaymentMethodCard::release_brand() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.PaymentMethodCard.brand)
  return _impl_.brand_.Release();
}
inline void PaymentMethodCard::set_allocated_brand(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.brand_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.brand_.IsDefault()) {
          _impl_.brand_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.PaymentMethodCard.brand)
}

// string last_four_digits = 2 [json_name = "lastFourDigits"];
inline void PaymentMethodCard::clear_last_four_digits() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.last_four_digits_.ClearToEmpty();
}
inline const std::string& PaymentMethodCard::last_four_digits() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.PaymentMethodCard.last_four_digits)
  return _internal_last_four_digits();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PaymentMethodCard::set_last_four_digits(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.last_four_digits_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.PaymentMethodCard.last_four_digits)
}
inline std::string* PaymentMethodCard::mutable_last_four_digits() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_four_digits();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.PaymentMethodCard.last_four_digits)
  return _s;
}
inline const std::string& PaymentMethodCard::_internal_last_four_digits() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.last_four_digits_.Get();
}
inline void PaymentMethodCard::_internal_set_last_four_digits(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.last_four_digits_.Set(value, GetArena());
}
inline std::string* PaymentMethodCard::_internal_mutable_last_four_digits() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.last_four_digits_.Mutable( GetArena());
}
inline std::string* PaymentMethodCard::release_last_four_digits() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.PaymentMethodCard.last_four_digits)
  return _impl_.last_four_digits_.Release();
}
inline void PaymentMethodCard::set_allocated_last_four_digits(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.last_four_digits_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.last_four_digits_.IsDefault()) {
          _impl_.last_four_digits_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.PaymentMethodCard.last_four_digits)
}

// -------------------------------------------------------------------

// GetCurrentMonthUsageRequest

// string org_id = 1 [json_name = "orgId"];
inline void GetCurrentMonthUsageRequest::clear_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.org_id_.ClearToEmpty();
}
inline const std::string& GetCurrentMonthUsageRequest::org_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageRequest.org_id)
  return _internal_org_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetCurrentMonthUsageRequest::set_org_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.org_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.GetCurrentMonthUsageRequest.org_id)
}
inline std::string* GetCurrentMonthUsageRequest::mutable_org_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_org_id();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.GetCurrentMonthUsageRequest.org_id)
  return _s;
}
inline const std::string& GetCurrentMonthUsageRequest::_internal_org_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.org_id_.Get();
}
inline void GetCurrentMonthUsageRequest::_internal_set_org_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.org_id_.Set(value, GetArena());
}
inline std::string* GetCurrentMonthUsageRequest::_internal_mutable_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.org_id_.Mutable( GetArena());
}
inline std::string* GetCurrentMonthUsageRequest::release_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.GetCurrentMonthUsageRequest.org_id)
  return _impl_.org_id_.Release();
}
inline void GetCurrentMonthUsageRequest::set_allocated_org_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.org_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.org_id_.IsDefault()) {
          _impl_.org_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.GetCurrentMonthUsageRequest.org_id)
}

// -------------------------------------------------------------------

// UsageCost

// .viam.app.v1.UsageCostType resource_type = 1 [json_name = "resourceType"];
inline void UsageCost::clear_resource_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_type_ = 0;
}
inline ::viam::app::v1::UsageCostType UsageCost::resource_type() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.UsageCost.resource_type)
  return _internal_resource_type();
}
inline void UsageCost::set_resource_type(::viam::app::v1::UsageCostType value) {
  _internal_set_resource_type(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.UsageCost.resource_type)
}
inline ::viam::app::v1::UsageCostType UsageCost::_internal_resource_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::viam::app::v1::UsageCostType>(_impl_.resource_type_);
}
inline void UsageCost::_internal_set_resource_type(::viam::app::v1::UsageCostType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resource_type_ = value;
}

// double cost = 2 [json_name = "cost"];
inline void UsageCost::clear_cost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cost_ = 0;
}
inline double UsageCost::cost() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.UsageCost.cost)
  return _internal_cost();
}
inline void UsageCost::set_cost(double value) {
  _internal_set_cost(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.UsageCost.cost)
}
inline double UsageCost::_internal_cost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cost_;
}
inline void UsageCost::_internal_set_cost(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cost_ = value;
}

// -------------------------------------------------------------------

// ResourceUsageCostsBySource

// .viam.app.v1.SourceType source_type = 1 [json_name = "sourceType"];
inline void ResourceUsageCostsBySource::clear_source_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.source_type_ = 0;
}
inline ::viam::app::v1::SourceType ResourceUsageCostsBySource::source_type() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.ResourceUsageCostsBySource.source_type)
  return _internal_source_type();
}
inline void ResourceUsageCostsBySource::set_source_type(::viam::app::v1::SourceType value) {
  _internal_set_source_type(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.ResourceUsageCostsBySource.source_type)
}
inline ::viam::app::v1::SourceType ResourceUsageCostsBySource::_internal_source_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::viam::app::v1::SourceType>(_impl_.source_type_);
}
inline void ResourceUsageCostsBySource::_internal_set_source_type(::viam::app::v1::SourceType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.source_type_ = value;
}

// .viam.app.v1.ResourceUsageCosts resource_usage_costs = 2 [json_name = "resourceUsageCosts"];
inline bool ResourceUsageCostsBySource::has_resource_usage_costs() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.resource_usage_costs_ != nullptr);
  return value;
}
inline void ResourceUsageCostsBySource::clear_resource_usage_costs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.resource_usage_costs_ != nullptr) _impl_.resource_usage_costs_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::viam::app::v1::ResourceUsageCosts& ResourceUsageCostsBySource::_internal_resource_usage_costs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::app::v1::ResourceUsageCosts* p = _impl_.resource_usage_costs_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::app::v1::ResourceUsageCosts&>(::viam::app::v1::_ResourceUsageCosts_default_instance_);
}
inline const ::viam::app::v1::ResourceUsageCosts& ResourceUsageCostsBySource::resource_usage_costs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.ResourceUsageCostsBySource.resource_usage_costs)
  return _internal_resource_usage_costs();
}
inline void ResourceUsageCostsBySource::unsafe_arena_set_allocated_resource_usage_costs(::viam::app::v1::ResourceUsageCosts* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.resource_usage_costs_);
  }
  _impl_.resource_usage_costs_ = reinterpret_cast<::viam::app::v1::ResourceUsageCosts*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.app.v1.ResourceUsageCostsBySource.resource_usage_costs)
}
inline ::viam::app::v1::ResourceUsageCosts* ResourceUsageCostsBySource::release_resource_usage_costs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::app::v1::ResourceUsageCosts* released = _impl_.resource_usage_costs_;
  _impl_.resource_usage_costs_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::app::v1::ResourceUsageCosts* ResourceUsageCostsBySource::unsafe_arena_release_resource_usage_costs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.ResourceUsageCostsBySource.resource_usage_costs)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::app::v1::ResourceUsageCosts* temp = _impl_.resource_usage_costs_;
  _impl_.resource_usage_costs_ = nullptr;
  return temp;
}
inline ::viam::app::v1::ResourceUsageCosts* ResourceUsageCostsBySource::_internal_mutable_resource_usage_costs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.resource_usage_costs_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::app::v1::ResourceUsageCosts>(GetArena());
    _impl_.resource_usage_costs_ = reinterpret_cast<::viam::app::v1::ResourceUsageCosts*>(p);
  }
  return _impl_.resource_usage_costs_;
}
inline ::viam::app::v1::ResourceUsageCosts* ResourceUsageCostsBySource::mutable_resource_usage_costs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::app::v1::ResourceUsageCosts* _msg = _internal_mutable_resource_usage_costs();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.ResourceUsageCostsBySource.resource_usage_costs)
  return _msg;
}
inline void ResourceUsageCostsBySource::set_allocated_resource_usage_costs(::viam::app::v1::ResourceUsageCosts* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::viam::app::v1::ResourceUsageCosts*>(_impl_.resource_usage_costs_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::viam::app::v1::ResourceUsageCosts*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.resource_usage_costs_ = reinterpret_cast<::viam::app::v1::ResourceUsageCosts*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.ResourceUsageCostsBySource.resource_usage_costs)
}

// string tier_name = 3 [json_name = "tierName"];
inline void ResourceUsageCostsBySource::clear_tier_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tier_name_.ClearToEmpty();
}
inline const std::string& ResourceUsageCostsBySource::tier_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.ResourceUsageCostsBySource.tier_name)
  return _internal_tier_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResourceUsageCostsBySource::set_tier_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tier_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.ResourceUsageCostsBySource.tier_name)
}
inline std::string* ResourceUsageCostsBySource::mutable_tier_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tier_name();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.ResourceUsageCostsBySource.tier_name)
  return _s;
}
inline const std::string& ResourceUsageCostsBySource::_internal_tier_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tier_name_.Get();
}
inline void ResourceUsageCostsBySource::_internal_set_tier_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tier_name_.Set(value, GetArena());
}
inline std::string* ResourceUsageCostsBySource::_internal_mutable_tier_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.tier_name_.Mutable( GetArena());
}
inline std::string* ResourceUsageCostsBySource::release_tier_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.ResourceUsageCostsBySource.tier_name)
  return _impl_.tier_name_.Release();
}
inline void ResourceUsageCostsBySource::set_allocated_tier_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tier_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tier_name_.IsDefault()) {
          _impl_.tier_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.ResourceUsageCostsBySource.tier_name)
}

// -------------------------------------------------------------------

// ResourceUsageCosts

// repeated .viam.app.v1.UsageCost usage_costs = 1 [json_name = "usageCosts"];
inline int ResourceUsageCosts::_internal_usage_costs_size() const {
  return _internal_usage_costs().size();
}
inline int ResourceUsageCosts::usage_costs_size() const {
  return _internal_usage_costs_size();
}
inline void ResourceUsageCosts::clear_usage_costs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.usage_costs_.Clear();
}
inline ::viam::app::v1::UsageCost* ResourceUsageCosts::mutable_usage_costs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.app.v1.ResourceUsageCosts.usage_costs)
  return _internal_mutable_usage_costs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::app::v1::UsageCost>* ResourceUsageCosts::mutable_usage_costs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.app.v1.ResourceUsageCosts.usage_costs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_usage_costs();
}
inline const ::viam::app::v1::UsageCost& ResourceUsageCosts::usage_costs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.ResourceUsageCosts.usage_costs)
  return _internal_usage_costs().Get(index);
}
inline ::viam::app::v1::UsageCost* ResourceUsageCosts::add_usage_costs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::app::v1::UsageCost* _add = _internal_mutable_usage_costs()->Add();
  // @@protoc_insertion_point(field_add:viam.app.v1.ResourceUsageCosts.usage_costs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::app::v1::UsageCost>& ResourceUsageCosts::usage_costs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.app.v1.ResourceUsageCosts.usage_costs)
  return _internal_usage_costs();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::app::v1::UsageCost>&
ResourceUsageCosts::_internal_usage_costs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.usage_costs_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::app::v1::UsageCost>*
ResourceUsageCosts::_internal_mutable_usage_costs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.usage_costs_;
}

// double discount = 2 [json_name = "discount"];
inline void ResourceUsageCosts::clear_discount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.discount_ = 0;
}
inline double ResourceUsageCosts::discount() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.ResourceUsageCosts.discount)
  return _internal_discount();
}
inline void ResourceUsageCosts::set_discount(double value) {
  _internal_set_discount(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.ResourceUsageCosts.discount)
}
inline double ResourceUsageCosts::_internal_discount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.discount_;
}
inline void ResourceUsageCosts::_internal_set_discount(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.discount_ = value;
}

// double total_with_discount = 3 [json_name = "totalWithDiscount"];
inline void ResourceUsageCosts::clear_total_with_discount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.total_with_discount_ = 0;
}
inline double ResourceUsageCosts::total_with_discount() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.ResourceUsageCosts.total_with_discount)
  return _internal_total_with_discount();
}
inline void ResourceUsageCosts::set_total_with_discount(double value) {
  _internal_set_total_with_discount(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.ResourceUsageCosts.total_with_discount)
}
inline double ResourceUsageCosts::_internal_total_with_discount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_with_discount_;
}
inline void ResourceUsageCosts::_internal_set_total_with_discount(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_with_discount_ = value;
}

// double total_without_discount = 4 [json_name = "totalWithoutDiscount"];
inline void ResourceUsageCosts::clear_total_without_discount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.total_without_discount_ = 0;
}
inline double ResourceUsageCosts::total_without_discount() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.ResourceUsageCosts.total_without_discount)
  return _internal_total_without_discount();
}
inline void ResourceUsageCosts::set_total_without_discount(double value) {
  _internal_set_total_without_discount(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.ResourceUsageCosts.total_without_discount)
}
inline double ResourceUsageCosts::_internal_total_without_discount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_without_discount_;
}
inline void ResourceUsageCosts::_internal_set_total_without_discount(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_without_discount_ = value;
}

// -------------------------------------------------------------------

// GetCurrentMonthUsageResponse

// .google.protobuf.Timestamp start_date = 1 [json_name = "startDate"];
inline bool GetCurrentMonthUsageResponse::has_start_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.start_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GetCurrentMonthUsageResponse::_internal_start_date() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.start_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GetCurrentMonthUsageResponse::start_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.start_date)
  return _internal_start_date();
}
inline void GetCurrentMonthUsageResponse::unsafe_arena_set_allocated_start_date(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_date_);
  }
  _impl_.start_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.app.v1.GetCurrentMonthUsageResponse.start_date)
}
inline ::google::protobuf::Timestamp* GetCurrentMonthUsageResponse::release_start_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.start_date_;
  _impl_.start_date_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* GetCurrentMonthUsageResponse::unsafe_arena_release_start_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.GetCurrentMonthUsageResponse.start_date)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.start_date_;
  _impl_.start_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GetCurrentMonthUsageResponse::_internal_mutable_start_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.start_date_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.start_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.start_date_;
}
inline ::google::protobuf::Timestamp* GetCurrentMonthUsageResponse::mutable_start_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_start_date();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.GetCurrentMonthUsageResponse.start_date)
  return _msg;
}
inline void GetCurrentMonthUsageResponse::set_allocated_start_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.start_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.GetCurrentMonthUsageResponse.start_date)
}

// .google.protobuf.Timestamp end_date = 2 [json_name = "endDate"];
inline bool GetCurrentMonthUsageResponse::has_end_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.end_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GetCurrentMonthUsageResponse::_internal_end_date() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.end_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GetCurrentMonthUsageResponse::end_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.end_date)
  return _internal_end_date();
}
inline void GetCurrentMonthUsageResponse::unsafe_arena_set_allocated_end_date(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_date_);
  }
  _impl_.end_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.app.v1.GetCurrentMonthUsageResponse.end_date)
}
inline ::google::protobuf::Timestamp* GetCurrentMonthUsageResponse::release_end_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.end_date_;
  _impl_.end_date_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* GetCurrentMonthUsageResponse::unsafe_arena_release_end_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.GetCurrentMonthUsageResponse.end_date)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.end_date_;
  _impl_.end_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GetCurrentMonthUsageResponse::_internal_mutable_end_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.end_date_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.end_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.end_date_;
}
inline ::google::protobuf::Timestamp* GetCurrentMonthUsageResponse::mutable_end_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_end_date();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.GetCurrentMonthUsageResponse.end_date)
  return _msg;
}
inline void GetCurrentMonthUsageResponse::set_allocated_end_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.end_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.GetCurrentMonthUsageResponse.end_date)
}

// repeated .viam.app.v1.ResourceUsageCostsBySource resource_usage_costs_by_source = 14 [json_name = "resourceUsageCostsBySource"];
inline int GetCurrentMonthUsageResponse::_internal_resource_usage_costs_by_source_size() const {
  return _internal_resource_usage_costs_by_source().size();
}
inline int GetCurrentMonthUsageResponse::resource_usage_costs_by_source_size() const {
  return _internal_resource_usage_costs_by_source_size();
}
inline void GetCurrentMonthUsageResponse::clear_resource_usage_costs_by_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_usage_costs_by_source_.Clear();
}
inline ::viam::app::v1::ResourceUsageCostsBySource* GetCurrentMonthUsageResponse::mutable_resource_usage_costs_by_source(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.app.v1.GetCurrentMonthUsageResponse.resource_usage_costs_by_source)
  return _internal_mutable_resource_usage_costs_by_source()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::app::v1::ResourceUsageCostsBySource>* GetCurrentMonthUsageResponse::mutable_resource_usage_costs_by_source()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.app.v1.GetCurrentMonthUsageResponse.resource_usage_costs_by_source)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_resource_usage_costs_by_source();
}
inline const ::viam::app::v1::ResourceUsageCostsBySource& GetCurrentMonthUsageResponse::resource_usage_costs_by_source(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.resource_usage_costs_by_source)
  return _internal_resource_usage_costs_by_source().Get(index);
}
inline ::viam::app::v1::ResourceUsageCostsBySource* GetCurrentMonthUsageResponse::add_resource_usage_costs_by_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::app::v1::ResourceUsageCostsBySource* _add = _internal_mutable_resource_usage_costs_by_source()->Add();
  // @@protoc_insertion_point(field_add:viam.app.v1.GetCurrentMonthUsageResponse.resource_usage_costs_by_source)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::app::v1::ResourceUsageCostsBySource>& GetCurrentMonthUsageResponse::resource_usage_costs_by_source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.app.v1.GetCurrentMonthUsageResponse.resource_usage_costs_by_source)
  return _internal_resource_usage_costs_by_source();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::app::v1::ResourceUsageCostsBySource>&
GetCurrentMonthUsageResponse::_internal_resource_usage_costs_by_source() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_usage_costs_by_source_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::app::v1::ResourceUsageCostsBySource>*
GetCurrentMonthUsageResponse::_internal_mutable_resource_usage_costs_by_source() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.resource_usage_costs_by_source_;
}

// double subtotal = 15 [json_name = "subtotal"];
inline void GetCurrentMonthUsageResponse::clear_subtotal() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subtotal_ = 0;
}
inline double GetCurrentMonthUsageResponse::subtotal() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.subtotal)
  return _internal_subtotal();
}
inline void GetCurrentMonthUsageResponse::set_subtotal(double value) {
  _internal_set_subtotal(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetCurrentMonthUsageResponse.subtotal)
}
inline double GetCurrentMonthUsageResponse::_internal_subtotal() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subtotal_;
}
inline void GetCurrentMonthUsageResponse::_internal_set_subtotal(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subtotal_ = value;
}

// double cloud_storage_usage_cost = 3 [json_name = "cloudStorageUsageCost", deprecated = true];
inline void GetCurrentMonthUsageResponse::clear_cloud_storage_usage_cost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cloud_storage_usage_cost_ = 0;
}
inline double GetCurrentMonthUsageResponse::cloud_storage_usage_cost() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.cloud_storage_usage_cost)
  return _internal_cloud_storage_usage_cost();
}
inline void GetCurrentMonthUsageResponse::set_cloud_storage_usage_cost(double value) {
  _internal_set_cloud_storage_usage_cost(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetCurrentMonthUsageResponse.cloud_storage_usage_cost)
}
inline double GetCurrentMonthUsageResponse::_internal_cloud_storage_usage_cost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cloud_storage_usage_cost_;
}
inline void GetCurrentMonthUsageResponse::_internal_set_cloud_storage_usage_cost(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cloud_storage_usage_cost_ = value;
}

// double data_upload_usage_cost = 4 [json_name = "dataUploadUsageCost", deprecated = true];
inline void GetCurrentMonthUsageResponse::clear_data_upload_usage_cost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_upload_usage_cost_ = 0;
}
inline double GetCurrentMonthUsageResponse::data_upload_usage_cost() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.data_upload_usage_cost)
  return _internal_data_upload_usage_cost();
}
inline void GetCurrentMonthUsageResponse::set_data_upload_usage_cost(double value) {
  _internal_set_data_upload_usage_cost(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetCurrentMonthUsageResponse.data_upload_usage_cost)
}
inline double GetCurrentMonthUsageResponse::_internal_data_upload_usage_cost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_upload_usage_cost_;
}
inline void GetCurrentMonthUsageResponse::_internal_set_data_upload_usage_cost(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_upload_usage_cost_ = value;
}

// double data_egres_usage_cost = 5 [json_name = "dataEgresUsageCost", deprecated = true];
inline void GetCurrentMonthUsageResponse::clear_data_egres_usage_cost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_egres_usage_cost_ = 0;
}
inline double GetCurrentMonthUsageResponse::data_egres_usage_cost() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.data_egres_usage_cost)
  return _internal_data_egres_usage_cost();
}
inline void GetCurrentMonthUsageResponse::set_data_egres_usage_cost(double value) {
  _internal_set_data_egres_usage_cost(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetCurrentMonthUsageResponse.data_egres_usage_cost)
}
inline double GetCurrentMonthUsageResponse::_internal_data_egres_usage_cost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_egres_usage_cost_;
}
inline void GetCurrentMonthUsageResponse::_internal_set_data_egres_usage_cost(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_egres_usage_cost_ = value;
}

// double remote_control_usage_cost = 6 [json_name = "remoteControlUsageCost", deprecated = true];
inline void GetCurrentMonthUsageResponse::clear_remote_control_usage_cost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.remote_control_usage_cost_ = 0;
}
inline double GetCurrentMonthUsageResponse::remote_control_usage_cost() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.remote_control_usage_cost)
  return _internal_remote_control_usage_cost();
}
inline void GetCurrentMonthUsageResponse::set_remote_control_usage_cost(double value) {
  _internal_set_remote_control_usage_cost(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetCurrentMonthUsageResponse.remote_control_usage_cost)
}
inline double GetCurrentMonthUsageResponse::_internal_remote_control_usage_cost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.remote_control_usage_cost_;
}
inline void GetCurrentMonthUsageResponse::_internal_set_remote_control_usage_cost(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.remote_control_usage_cost_ = value;
}

// double standard_compute_usage_cost = 7 [json_name = "standardComputeUsageCost", deprecated = true];
inline void GetCurrentMonthUsageResponse::clear_standard_compute_usage_cost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.standard_compute_usage_cost_ = 0;
}
inline double GetCurrentMonthUsageResponse::standard_compute_usage_cost() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.standard_compute_usage_cost)
  return _internal_standard_compute_usage_cost();
}
inline void GetCurrentMonthUsageResponse::set_standard_compute_usage_cost(double value) {
  _internal_set_standard_compute_usage_cost(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetCurrentMonthUsageResponse.standard_compute_usage_cost)
}
inline double GetCurrentMonthUsageResponse::_internal_standard_compute_usage_cost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.standard_compute_usage_cost_;
}
inline void GetCurrentMonthUsageResponse::_internal_set_standard_compute_usage_cost(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.standard_compute_usage_cost_ = value;
}

// double discount_amount = 8 [json_name = "discountAmount", deprecated = true];
inline void GetCurrentMonthUsageResponse::clear_discount_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.discount_amount_ = 0;
}
inline double GetCurrentMonthUsageResponse::discount_amount() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.discount_amount)
  return _internal_discount_amount();
}
inline void GetCurrentMonthUsageResponse::set_discount_amount(double value) {
  _internal_set_discount_amount(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetCurrentMonthUsageResponse.discount_amount)
}
inline double GetCurrentMonthUsageResponse::_internal_discount_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.discount_amount_;
}
inline void GetCurrentMonthUsageResponse::_internal_set_discount_amount(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.discount_amount_ = value;
}

// double total_usage_with_discount = 9 [json_name = "totalUsageWithDiscount", deprecated = true];
inline void GetCurrentMonthUsageResponse::clear_total_usage_with_discount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.total_usage_with_discount_ = 0;
}
inline double GetCurrentMonthUsageResponse::total_usage_with_discount() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.total_usage_with_discount)
  return _internal_total_usage_with_discount();
}
inline void GetCurrentMonthUsageResponse::set_total_usage_with_discount(double value) {
  _internal_set_total_usage_with_discount(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetCurrentMonthUsageResponse.total_usage_with_discount)
}
inline double GetCurrentMonthUsageResponse::_internal_total_usage_with_discount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_usage_with_discount_;
}
inline void GetCurrentMonthUsageResponse::_internal_set_total_usage_with_discount(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_usage_with_discount_ = value;
}

// double total_usage_without_discount = 10 [json_name = "totalUsageWithoutDiscount", deprecated = true];
inline void GetCurrentMonthUsageResponse::clear_total_usage_without_discount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.total_usage_without_discount_ = 0;
}
inline double GetCurrentMonthUsageResponse::total_usage_without_discount() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.total_usage_without_discount)
  return _internal_total_usage_without_discount();
}
inline void GetCurrentMonthUsageResponse::set_total_usage_without_discount(double value) {
  _internal_set_total_usage_without_discount(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetCurrentMonthUsageResponse.total_usage_without_discount)
}
inline double GetCurrentMonthUsageResponse::_internal_total_usage_without_discount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_usage_without_discount_;
}
inline void GetCurrentMonthUsageResponse::_internal_set_total_usage_without_discount(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_usage_without_discount_ = value;
}

// double per_machine_usage_cost = 11 [json_name = "perMachineUsageCost", deprecated = true];
inline void GetCurrentMonthUsageResponse::clear_per_machine_usage_cost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.per_machine_usage_cost_ = 0;
}
inline double GetCurrentMonthUsageResponse::per_machine_usage_cost() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.per_machine_usage_cost)
  return _internal_per_machine_usage_cost();
}
inline void GetCurrentMonthUsageResponse::set_per_machine_usage_cost(double value) {
  _internal_set_per_machine_usage_cost(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetCurrentMonthUsageResponse.per_machine_usage_cost)
}
inline double GetCurrentMonthUsageResponse::_internal_per_machine_usage_cost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.per_machine_usage_cost_;
}
inline void GetCurrentMonthUsageResponse::_internal_set_per_machine_usage_cost(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.per_machine_usage_cost_ = value;
}

// double binary_data_cloud_storage_usage_cost = 12 [json_name = "binaryDataCloudStorageUsageCost", deprecated = true];
inline void GetCurrentMonthUsageResponse::clear_binary_data_cloud_storage_usage_cost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.binary_data_cloud_storage_usage_cost_ = 0;
}
inline double GetCurrentMonthUsageResponse::binary_data_cloud_storage_usage_cost() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.binary_data_cloud_storage_usage_cost)
  return _internal_binary_data_cloud_storage_usage_cost();
}
inline void GetCurrentMonthUsageResponse::set_binary_data_cloud_storage_usage_cost(double value) {
  _internal_set_binary_data_cloud_storage_usage_cost(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetCurrentMonthUsageResponse.binary_data_cloud_storage_usage_cost)
}
inline double GetCurrentMonthUsageResponse::_internal_binary_data_cloud_storage_usage_cost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.binary_data_cloud_storage_usage_cost_;
}
inline void GetCurrentMonthUsageResponse::_internal_set_binary_data_cloud_storage_usage_cost(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.binary_data_cloud_storage_usage_cost_ = value;
}

// double other_cloud_storage_usage_cost = 13 [json_name = "otherCloudStorageUsageCost", deprecated = true];
inline void GetCurrentMonthUsageResponse::clear_other_cloud_storage_usage_cost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.other_cloud_storage_usage_cost_ = 0;
}
inline double GetCurrentMonthUsageResponse::other_cloud_storage_usage_cost() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetCurrentMonthUsageResponse.other_cloud_storage_usage_cost)
  return _internal_other_cloud_storage_usage_cost();
}
inline void GetCurrentMonthUsageResponse::set_other_cloud_storage_usage_cost(double value) {
  _internal_set_other_cloud_storage_usage_cost(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetCurrentMonthUsageResponse.other_cloud_storage_usage_cost)
}
inline double GetCurrentMonthUsageResponse::_internal_other_cloud_storage_usage_cost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.other_cloud_storage_usage_cost_;
}
inline void GetCurrentMonthUsageResponse::_internal_set_other_cloud_storage_usage_cost(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.other_cloud_storage_usage_cost_ = value;
}

// -------------------------------------------------------------------

// GetOrgBillingInformationRequest

// string org_id = 1 [json_name = "orgId"];
inline void GetOrgBillingInformationRequest::clear_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.org_id_.ClearToEmpty();
}
inline const std::string& GetOrgBillingInformationRequest::org_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetOrgBillingInformationRequest.org_id)
  return _internal_org_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetOrgBillingInformationRequest::set_org_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.org_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.GetOrgBillingInformationRequest.org_id)
}
inline std::string* GetOrgBillingInformationRequest::mutable_org_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_org_id();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.GetOrgBillingInformationRequest.org_id)
  return _s;
}
inline const std::string& GetOrgBillingInformationRequest::_internal_org_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.org_id_.Get();
}
inline void GetOrgBillingInformationRequest::_internal_set_org_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.org_id_.Set(value, GetArena());
}
inline std::string* GetOrgBillingInformationRequest::_internal_mutable_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.org_id_.Mutable( GetArena());
}
inline std::string* GetOrgBillingInformationRequest::release_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.GetOrgBillingInformationRequest.org_id)
  return _impl_.org_id_.Release();
}
inline void GetOrgBillingInformationRequest::set_allocated_org_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.org_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.org_id_.IsDefault()) {
          _impl_.org_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.GetOrgBillingInformationRequest.org_id)
}

// -------------------------------------------------------------------

// GetOrgBillingInformationResponse

// .viam.app.v1.PaymentMethodType type = 1 [json_name = "type"];
inline void GetOrgBillingInformationResponse::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = 0;
}
inline ::viam::app::v1::PaymentMethodType GetOrgBillingInformationResponse::type() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetOrgBillingInformationResponse.type)
  return _internal_type();
}
inline void GetOrgBillingInformationResponse::set_type(::viam::app::v1::PaymentMethodType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetOrgBillingInformationResponse.type)
}
inline ::viam::app::v1::PaymentMethodType GetOrgBillingInformationResponse::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::viam::app::v1::PaymentMethodType>(_impl_.type_);
}
inline void GetOrgBillingInformationResponse::_internal_set_type(::viam::app::v1::PaymentMethodType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// string billing_email = 2 [json_name = "billingEmail"];
inline void GetOrgBillingInformationResponse::clear_billing_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.billing_email_.ClearToEmpty();
}
inline const std::string& GetOrgBillingInformationResponse::billing_email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetOrgBillingInformationResponse.billing_email)
  return _internal_billing_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetOrgBillingInformationResponse::set_billing_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.billing_email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.GetOrgBillingInformationResponse.billing_email)
}
inline std::string* GetOrgBillingInformationResponse::mutable_billing_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_billing_email();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.GetOrgBillingInformationResponse.billing_email)
  return _s;
}
inline const std::string& GetOrgBillingInformationResponse::_internal_billing_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.billing_email_.Get();
}
inline void GetOrgBillingInformationResponse::_internal_set_billing_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.billing_email_.Set(value, GetArena());
}
inline std::string* GetOrgBillingInformationResponse::_internal_mutable_billing_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.billing_email_.Mutable( GetArena());
}
inline std::string* GetOrgBillingInformationResponse::release_billing_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.GetOrgBillingInformationResponse.billing_email)
  return _impl_.billing_email_.Release();
}
inline void GetOrgBillingInformationResponse::set_allocated_billing_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.billing_email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.billing_email_.IsDefault()) {
          _impl_.billing_email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.GetOrgBillingInformationResponse.billing_email)
}

// optional .viam.app.v1.PaymentMethodCard method = 3 [json_name = "method"];
inline bool GetOrgBillingInformationResponse::has_method() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.method_ != nullptr);
  return value;
}
inline void GetOrgBillingInformationResponse::clear_method() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.method_ != nullptr) _impl_.method_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::viam::app::v1::PaymentMethodCard& GetOrgBillingInformationResponse::_internal_method() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::app::v1::PaymentMethodCard* p = _impl_.method_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::app::v1::PaymentMethodCard&>(::viam::app::v1::_PaymentMethodCard_default_instance_);
}
inline const ::viam::app::v1::PaymentMethodCard& GetOrgBillingInformationResponse::method() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetOrgBillingInformationResponse.method)
  return _internal_method();
}
inline void GetOrgBillingInformationResponse::unsafe_arena_set_allocated_method(::viam::app::v1::PaymentMethodCard* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.method_);
  }
  _impl_.method_ = reinterpret_cast<::viam::app::v1::PaymentMethodCard*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.app.v1.GetOrgBillingInformationResponse.method)
}
inline ::viam::app::v1::PaymentMethodCard* GetOrgBillingInformationResponse::release_method() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::viam::app::v1::PaymentMethodCard* released = _impl_.method_;
  _impl_.method_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::app::v1::PaymentMethodCard* GetOrgBillingInformationResponse::unsafe_arena_release_method() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.GetOrgBillingInformationResponse.method)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::viam::app::v1::PaymentMethodCard* temp = _impl_.method_;
  _impl_.method_ = nullptr;
  return temp;
}
inline ::viam::app::v1::PaymentMethodCard* GetOrgBillingInformationResponse::_internal_mutable_method() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.method_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::app::v1::PaymentMethodCard>(GetArena());
    _impl_.method_ = reinterpret_cast<::viam::app::v1::PaymentMethodCard*>(p);
  }
  return _impl_.method_;
}
inline ::viam::app::v1::PaymentMethodCard* GetOrgBillingInformationResponse::mutable_method() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::app::v1::PaymentMethodCard* _msg = _internal_mutable_method();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.GetOrgBillingInformationResponse.method)
  return _msg;
}
inline void GetOrgBillingInformationResponse::set_allocated_method(::viam::app::v1::PaymentMethodCard* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::viam::app::v1::PaymentMethodCard*>(_impl_.method_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::viam::app::v1::PaymentMethodCard*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.method_ = reinterpret_cast<::viam::app::v1::PaymentMethodCard*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.GetOrgBillingInformationResponse.method)
}

// optional string billing_tier = 4 [json_name = "billingTier"];
inline bool GetOrgBillingInformationResponse::has_billing_tier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void GetOrgBillingInformationResponse::clear_billing_tier() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.billing_tier_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetOrgBillingInformationResponse::billing_tier() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetOrgBillingInformationResponse.billing_tier)
  return _internal_billing_tier();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetOrgBillingInformationResponse::set_billing_tier(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.billing_tier_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.GetOrgBillingInformationResponse.billing_tier)
}
inline std::string* GetOrgBillingInformationResponse::mutable_billing_tier() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_billing_tier();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.GetOrgBillingInformationResponse.billing_tier)
  return _s;
}
inline const std::string& GetOrgBillingInformationResponse::_internal_billing_tier() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.billing_tier_.Get();
}
inline void GetOrgBillingInformationResponse::_internal_set_billing_tier(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.billing_tier_.Set(value, GetArena());
}
inline std::string* GetOrgBillingInformationResponse::_internal_mutable_billing_tier() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.billing_tier_.Mutable( GetArena());
}
inline std::string* GetOrgBillingInformationResponse::release_billing_tier() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.GetOrgBillingInformationResponse.billing_tier)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.billing_tier_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.billing_tier_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GetOrgBillingInformationResponse::set_allocated_billing_tier(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.billing_tier_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.billing_tier_.IsDefault()) {
          _impl_.billing_tier_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.GetOrgBillingInformationResponse.billing_tier)
}

// -------------------------------------------------------------------

// GetInvoicesSummaryRequest

// string org_id = 1 [json_name = "orgId"];
inline void GetInvoicesSummaryRequest::clear_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.org_id_.ClearToEmpty();
}
inline const std::string& GetInvoicesSummaryRequest::org_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetInvoicesSummaryRequest.org_id)
  return _internal_org_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetInvoicesSummaryRequest::set_org_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.org_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.GetInvoicesSummaryRequest.org_id)
}
inline std::string* GetInvoicesSummaryRequest::mutable_org_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_org_id();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.GetInvoicesSummaryRequest.org_id)
  return _s;
}
inline const std::string& GetInvoicesSummaryRequest::_internal_org_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.org_id_.Get();
}
inline void GetInvoicesSummaryRequest::_internal_set_org_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.org_id_.Set(value, GetArena());
}
inline std::string* GetInvoicesSummaryRequest::_internal_mutable_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.org_id_.Mutable( GetArena());
}
inline std::string* GetInvoicesSummaryRequest::release_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.GetInvoicesSummaryRequest.org_id)
  return _impl_.org_id_.Release();
}
inline void GetInvoicesSummaryRequest::set_allocated_org_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.org_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.org_id_.IsDefault()) {
          _impl_.org_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.GetInvoicesSummaryRequest.org_id)
}

// -------------------------------------------------------------------

// GetInvoicesSummaryResponse

// double outstanding_balance = 1 [json_name = "outstandingBalance"];
inline void GetInvoicesSummaryResponse::clear_outstanding_balance() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.outstanding_balance_ = 0;
}
inline double GetInvoicesSummaryResponse::outstanding_balance() const {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetInvoicesSummaryResponse.outstanding_balance)
  return _internal_outstanding_balance();
}
inline void GetInvoicesSummaryResponse::set_outstanding_balance(double value) {
  _internal_set_outstanding_balance(value);
  // @@protoc_insertion_point(field_set:viam.app.v1.GetInvoicesSummaryResponse.outstanding_balance)
}
inline double GetInvoicesSummaryResponse::_internal_outstanding_balance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.outstanding_balance_;
}
inline void GetInvoicesSummaryResponse::_internal_set_outstanding_balance(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.outstanding_balance_ = value;
}

// repeated .viam.app.v1.InvoiceSummary invoices = 2 [json_name = "invoices"];
inline int GetInvoicesSummaryResponse::_internal_invoices_size() const {
  return _internal_invoices().size();
}
inline int GetInvoicesSummaryResponse::invoices_size() const {
  return _internal_invoices_size();
}
inline void GetInvoicesSummaryResponse::clear_invoices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.invoices_.Clear();
}
inline ::viam::app::v1::InvoiceSummary* GetInvoicesSummaryResponse::mutable_invoices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.app.v1.GetInvoicesSummaryResponse.invoices)
  return _internal_mutable_invoices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::app::v1::InvoiceSummary>* GetInvoicesSummaryResponse::mutable_invoices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.app.v1.GetInvoicesSummaryResponse.invoices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_invoices();
}
inline const ::viam::app::v1::InvoiceSummary& GetInvoicesSummaryResponse::invoices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetInvoicesSummaryResponse.invoices)
  return _internal_invoices().Get(index);
}
inline ::viam::app::v1::InvoiceSummary* GetInvoicesSummaryResponse::add_invoices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::app::v1::InvoiceSummary* _add = _internal_mutable_invoices()->Add();
  // @@protoc_insertion_point(field_add:viam.app.v1.GetInvoicesSummaryResponse.invoices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::app::v1::InvoiceSummary>& GetInvoicesSummaryResponse::invoices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.app.v1.GetInvoicesSummaryResponse.invoices)
  return _internal_invoices();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::app::v1::InvoiceSummary>&
GetInvoicesSummaryResponse::_internal_invoices() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.invoices_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::app::v1::InvoiceSummary>*
GetInvoicesSummaryResponse::_internal_mutable_invoices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.invoices_;
}

// -------------------------------------------------------------------

// GetInvoicePdfRequest

// string id = 1 [json_name = "id"];
inline void GetInvoicePdfRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetInvoicePdfRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetInvoicePdfRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetInvoicePdfRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.GetInvoicePdfRequest.id)
}
inline std::string* GetInvoicePdfRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.GetInvoicePdfRequest.id)
  return _s;
}
inline const std::string& GetInvoicePdfRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void GetInvoicePdfRequest::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetInvoicePdfRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetInvoicePdfRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.GetInvoicePdfRequest.id)
  return _impl_.id_.Release();
}
inline void GetInvoicePdfRequest::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.GetInvoicePdfRequest.id)
}

// string org_id = 2 [json_name = "orgId"];
inline void GetInvoicePdfRequest::clear_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.org_id_.ClearToEmpty();
}
inline const std::string& GetInvoicePdfRequest::org_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetInvoicePdfRequest.org_id)
  return _internal_org_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetInvoicePdfRequest::set_org_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.org_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.GetInvoicePdfRequest.org_id)
}
inline std::string* GetInvoicePdfRequest::mutable_org_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_org_id();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.GetInvoicePdfRequest.org_id)
  return _s;
}
inline const std::string& GetInvoicePdfRequest::_internal_org_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.org_id_.Get();
}
inline void GetInvoicePdfRequest::_internal_set_org_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.org_id_.Set(value, GetArena());
}
inline std::string* GetInvoicePdfRequest::_internal_mutable_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.org_id_.Mutable( GetArena());
}
inline std::string* GetInvoicePdfRequest::release_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.GetInvoicePdfRequest.org_id)
  return _impl_.org_id_.Release();
}
inline void GetInvoicePdfRequest::set_allocated_org_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.org_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.org_id_.IsDefault()) {
          _impl_.org_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.GetInvoicePdfRequest.org_id)
}

// -------------------------------------------------------------------

// GetInvoicePdfResponse

// bytes chunk = 1 [json_name = "chunk"];
inline void GetInvoicePdfResponse::clear_chunk() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.chunk_.ClearToEmpty();
}
inline const std::string& GetInvoicePdfResponse::chunk() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.GetInvoicePdfResponse.chunk)
  return _internal_chunk();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetInvoicePdfResponse::set_chunk(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.chunk_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.GetInvoicePdfResponse.chunk)
}
inline std::string* GetInvoicePdfResponse::mutable_chunk() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_chunk();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.GetInvoicePdfResponse.chunk)
  return _s;
}
inline const std::string& GetInvoicePdfResponse::_internal_chunk() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.chunk_.Get();
}
inline void GetInvoicePdfResponse::_internal_set_chunk(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.chunk_.Set(value, GetArena());
}
inline std::string* GetInvoicePdfResponse::_internal_mutable_chunk() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.chunk_.Mutable( GetArena());
}
inline std::string* GetInvoicePdfResponse::release_chunk() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.GetInvoicePdfResponse.chunk)
  return _impl_.chunk_.Release();
}
inline void GetInvoicePdfResponse::set_allocated_chunk(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.chunk_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.chunk_.IsDefault()) {
          _impl_.chunk_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.GetInvoicePdfResponse.chunk)
}

// -------------------------------------------------------------------

// SendPaymentRequiredEmailRequest

// string customer_org_id = 1 [json_name = "customerOrgId"];
inline void SendPaymentRequiredEmailRequest::clear_customer_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.customer_org_id_.ClearToEmpty();
}
inline const std::string& SendPaymentRequiredEmailRequest::customer_org_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.SendPaymentRequiredEmailRequest.customer_org_id)
  return _internal_customer_org_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendPaymentRequiredEmailRequest::set_customer_org_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.customer_org_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.SendPaymentRequiredEmailRequest.customer_org_id)
}
inline std::string* SendPaymentRequiredEmailRequest::mutable_customer_org_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_customer_org_id();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.SendPaymentRequiredEmailRequest.customer_org_id)
  return _s;
}
inline const std::string& SendPaymentRequiredEmailRequest::_internal_customer_org_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.customer_org_id_.Get();
}
inline void SendPaymentRequiredEmailRequest::_internal_set_customer_org_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.customer_org_id_.Set(value, GetArena());
}
inline std::string* SendPaymentRequiredEmailRequest::_internal_mutable_customer_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.customer_org_id_.Mutable( GetArena());
}
inline std::string* SendPaymentRequiredEmailRequest::release_customer_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.SendPaymentRequiredEmailRequest.customer_org_id)
  return _impl_.customer_org_id_.Release();
}
inline void SendPaymentRequiredEmailRequest::set_allocated_customer_org_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.customer_org_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.customer_org_id_.IsDefault()) {
          _impl_.customer_org_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.SendPaymentRequiredEmailRequest.customer_org_id)
}

// string billing_owner_org_id = 2 [json_name = "billingOwnerOrgId"];
inline void SendPaymentRequiredEmailRequest::clear_billing_owner_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.billing_owner_org_id_.ClearToEmpty();
}
inline const std::string& SendPaymentRequiredEmailRequest::billing_owner_org_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.app.v1.SendPaymentRequiredEmailRequest.billing_owner_org_id)
  return _internal_billing_owner_org_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendPaymentRequiredEmailRequest::set_billing_owner_org_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.billing_owner_org_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.app.v1.SendPaymentRequiredEmailRequest.billing_owner_org_id)
}
inline std::string* SendPaymentRequiredEmailRequest::mutable_billing_owner_org_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_billing_owner_org_id();
  // @@protoc_insertion_point(field_mutable:viam.app.v1.SendPaymentRequiredEmailRequest.billing_owner_org_id)
  return _s;
}
inline const std::string& SendPaymentRequiredEmailRequest::_internal_billing_owner_org_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.billing_owner_org_id_.Get();
}
inline void SendPaymentRequiredEmailRequest::_internal_set_billing_owner_org_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.billing_owner_org_id_.Set(value, GetArena());
}
inline std::string* SendPaymentRequiredEmailRequest::_internal_mutable_billing_owner_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.billing_owner_org_id_.Mutable( GetArena());
}
inline std::string* SendPaymentRequiredEmailRequest::release_billing_owner_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.app.v1.SendPaymentRequiredEmailRequest.billing_owner_org_id)
  return _impl_.billing_owner_org_id_.Release();
}
inline void SendPaymentRequiredEmailRequest::set_allocated_billing_owner_org_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.billing_owner_org_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.billing_owner_org_id_.IsDefault()) {
          _impl_.billing_owner_org_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.SendPaymentRequiredEmailRequest.billing_owner_org_id)
}

// -------------------------------------------------------------------

// SendPaymentRequiredEmailResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace app
}  // namespace viam


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::viam::app::v1::PaymentMethodType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::viam::app::v1::PaymentMethodType>() {
  return ::viam::app::v1::PaymentMethodType_descriptor();
}
template <>
struct is_proto_enum<::viam::app::v1::UsageCostType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::viam::app::v1::UsageCostType>() {
  return ::viam::app::v1::UsageCostType_descriptor();
}
template <>
struct is_proto_enum<::viam::app::v1::SourceType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::viam::app::v1::SourceType>() {
  return ::viam::app::v1::SourceType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_app_2fv1_2fbilling_2eproto_2epb_2eh
