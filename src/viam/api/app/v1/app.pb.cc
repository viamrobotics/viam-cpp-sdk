// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/v1/app.proto

#include "app/v1/app.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace app {
namespace v1 {
PROTOBUF_CONSTEXPR Robot::Robot(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , last_access_(nullptr)
  , created_on_(nullptr){}
struct RobotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RobotDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RobotDefaultTypeInternal() {}
  union {
    Robot _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RobotDefaultTypeInternal _Robot_default_instance_;
PROTOBUF_CONSTEXPR RobotPart::RobotPart(
    ::_pbi::ConstantInitialized)
  : secrets_()
  , id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , secret_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , fqdn_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , dns_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , local_fqdn_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_config_(nullptr)
  , last_access_(nullptr)
  , user_supplied_info_(nullptr)
  , created_on_(nullptr)
  , main_part_(false){}
struct RobotPartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RobotPartDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RobotPartDefaultTypeInternal() {}
  union {
    RobotPart _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RobotPartDefaultTypeInternal _RobotPart_default_instance_;
PROTOBUF_CONSTEXPR RobotPartHistoryEntry::RobotPartHistoryEntry(
    ::_pbi::ConstantInitialized)
  : part_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , when_(nullptr)
  , old_(nullptr){}
struct RobotPartHistoryEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RobotPartHistoryEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RobotPartHistoryEntryDefaultTypeInternal() {}
  union {
    RobotPartHistoryEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RobotPartHistoryEntryDefaultTypeInternal _RobotPartHistoryEntry_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationsRequest::ListOrganizationsRequest(
    ::_pbi::ConstantInitialized){}
struct ListOrganizationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationsRequestDefaultTypeInternal() {}
  union {
    ListOrganizationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationsRequestDefaultTypeInternal _ListOrganizationsRequest_default_instance_;
PROTOBUF_CONSTEXPR Organization::Organization(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , public_namespace_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , default_region_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_on_(nullptr){}
struct OrganizationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationDefaultTypeInternal() {}
  union {
    Organization _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationDefaultTypeInternal _Organization_default_instance_;
PROTOBUF_CONSTEXPR OrganizationMember::OrganizationMember(
    ::_pbi::ConstantInitialized)
  : emails_()
  , user_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , date_added_(nullptr){}
struct OrganizationMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationMemberDefaultTypeInternal() {}
  union {
    OrganizationMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationMemberDefaultTypeInternal _OrganizationMember_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationsResponse::ListOrganizationsResponse(
    ::_pbi::ConstantInitialized)
  : organizations_(){}
struct ListOrganizationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationsResponseDefaultTypeInternal() {}
  union {
    ListOrganizationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationsResponseDefaultTypeInternal _ListOrganizationsResponse_default_instance_;
PROTOBUF_CONSTEXPR OrganizationInvite::OrganizationInvite(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_on_(nullptr)
  , robot_count_(int64_t{0}){}
struct OrganizationInviteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationInviteDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationInviteDefaultTypeInternal() {}
  union {
    OrganizationInvite _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationInviteDefaultTypeInternal _OrganizationInvite_default_instance_;
PROTOBUF_CONSTEXPR CreateOrganizationRequest::CreateOrganizationRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateOrganizationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateOrganizationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateOrganizationRequestDefaultTypeInternal() {}
  union {
    CreateOrganizationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateOrganizationRequestDefaultTypeInternal _CreateOrganizationRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateOrganizationResponse::CreateOrganizationResponse(
    ::_pbi::ConstantInitialized)
  : organization_(nullptr){}
struct CreateOrganizationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateOrganizationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateOrganizationResponseDefaultTypeInternal() {}
  union {
    CreateOrganizationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateOrganizationResponseDefaultTypeInternal _CreateOrganizationResponse_default_instance_;
PROTOBUF_CONSTEXPR GetOrganizationRequest::GetOrganizationRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetOrganizationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrganizationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrganizationRequestDefaultTypeInternal() {}
  union {
    GetOrganizationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrganizationRequestDefaultTypeInternal _GetOrganizationRequest_default_instance_;
PROTOBUF_CONSTEXPR GetOrganizationResponse::GetOrganizationResponse(
    ::_pbi::ConstantInitialized)
  : organization_(nullptr){}
struct GetOrganizationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrganizationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrganizationResponseDefaultTypeInternal() {}
  union {
    GetOrganizationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrganizationResponseDefaultTypeInternal _GetOrganizationResponse_default_instance_;
PROTOBUF_CONSTEXPR GetOrganizationNamespaceAvailabilityRequest::GetOrganizationNamespaceAvailabilityRequest(
    ::_pbi::ConstantInitialized)
  : public_namespace_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetOrganizationNamespaceAvailabilityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrganizationNamespaceAvailabilityRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrganizationNamespaceAvailabilityRequestDefaultTypeInternal() {}
  union {
    GetOrganizationNamespaceAvailabilityRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrganizationNamespaceAvailabilityRequestDefaultTypeInternal _GetOrganizationNamespaceAvailabilityRequest_default_instance_;
PROTOBUF_CONSTEXPR GetOrganizationNamespaceAvailabilityResponse::GetOrganizationNamespaceAvailabilityResponse(
    ::_pbi::ConstantInitialized)
  : available_(false){}
struct GetOrganizationNamespaceAvailabilityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrganizationNamespaceAvailabilityResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrganizationNamespaceAvailabilityResponseDefaultTypeInternal() {}
  union {
    GetOrganizationNamespaceAvailabilityResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrganizationNamespaceAvailabilityResponseDefaultTypeInternal _GetOrganizationNamespaceAvailabilityResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateOrganizationRequest::UpdateOrganizationRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , public_namespace_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , region_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UpdateOrganizationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateOrganizationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateOrganizationRequestDefaultTypeInternal() {}
  union {
    UpdateOrganizationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateOrganizationRequestDefaultTypeInternal _UpdateOrganizationRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateOrganizationResponse::UpdateOrganizationResponse(
    ::_pbi::ConstantInitialized)
  : organization_(nullptr){}
struct UpdateOrganizationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateOrganizationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateOrganizationResponseDefaultTypeInternal() {}
  union {
    UpdateOrganizationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateOrganizationResponseDefaultTypeInternal _UpdateOrganizationResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteOrganizationRequest::DeleteOrganizationRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteOrganizationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOrganizationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOrganizationRequestDefaultTypeInternal() {}
  union {
    DeleteOrganizationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOrganizationRequestDefaultTypeInternal _DeleteOrganizationRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteOrganizationResponse::DeleteOrganizationResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteOrganizationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOrganizationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOrganizationResponseDefaultTypeInternal() {}
  union {
    DeleteOrganizationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOrganizationResponseDefaultTypeInternal _DeleteOrganizationResponse_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationMembersRequest::ListOrganizationMembersRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListOrganizationMembersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationMembersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationMembersRequestDefaultTypeInternal() {}
  union {
    ListOrganizationMembersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationMembersRequestDefaultTypeInternal _ListOrganizationMembersRequest_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationMembersResponse::ListOrganizationMembersResponse(
    ::_pbi::ConstantInitialized)
  : members_()
  , invites_()
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListOrganizationMembersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationMembersResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationMembersResponseDefaultTypeInternal() {}
  union {
    ListOrganizationMembersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationMembersResponseDefaultTypeInternal _ListOrganizationMembersResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateOrganizationInviteRequest::CreateOrganizationInviteRequest(
    ::_pbi::ConstantInitialized)
  : authorizations_()
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateOrganizationInviteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateOrganizationInviteRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateOrganizationInviteRequestDefaultTypeInternal() {}
  union {
    CreateOrganizationInviteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateOrganizationInviteRequestDefaultTypeInternal _CreateOrganizationInviteRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateOrganizationInviteResponse::CreateOrganizationInviteResponse(
    ::_pbi::ConstantInitialized)
  : invite_(nullptr){}
struct CreateOrganizationInviteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateOrganizationInviteResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateOrganizationInviteResponseDefaultTypeInternal() {}
  union {
    CreateOrganizationInviteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateOrganizationInviteResponseDefaultTypeInternal _CreateOrganizationInviteResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateOrganizationInviteAuthorizationsRequest::UpdateOrganizationInviteAuthorizationsRequest(
    ::_pbi::ConstantInitialized)
  : add_authorizations_()
  , remove_authorizations_()
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UpdateOrganizationInviteAuthorizationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateOrganizationInviteAuthorizationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateOrganizationInviteAuthorizationsRequestDefaultTypeInternal() {}
  union {
    UpdateOrganizationInviteAuthorizationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateOrganizationInviteAuthorizationsRequestDefaultTypeInternal _UpdateOrganizationInviteAuthorizationsRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateOrganizationInviteAuthorizationsResponse::UpdateOrganizationInviteAuthorizationsResponse(
    ::_pbi::ConstantInitialized)
  : invite_(nullptr){}
struct UpdateOrganizationInviteAuthorizationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateOrganizationInviteAuthorizationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateOrganizationInviteAuthorizationsResponseDefaultTypeInternal() {}
  union {
    UpdateOrganizationInviteAuthorizationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateOrganizationInviteAuthorizationsResponseDefaultTypeInternal _UpdateOrganizationInviteAuthorizationsResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteOrganizationInviteRequest::DeleteOrganizationInviteRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteOrganizationInviteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOrganizationInviteRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOrganizationInviteRequestDefaultTypeInternal() {}
  union {
    DeleteOrganizationInviteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOrganizationInviteRequestDefaultTypeInternal _DeleteOrganizationInviteRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteOrganizationInviteResponse::DeleteOrganizationInviteResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteOrganizationInviteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOrganizationInviteResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOrganizationInviteResponseDefaultTypeInternal() {}
  union {
    DeleteOrganizationInviteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOrganizationInviteResponseDefaultTypeInternal _DeleteOrganizationInviteResponse_default_instance_;
PROTOBUF_CONSTEXPR ResendOrganizationInviteRequest::ResendOrganizationInviteRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ResendOrganizationInviteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResendOrganizationInviteRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResendOrganizationInviteRequestDefaultTypeInternal() {}
  union {
    ResendOrganizationInviteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResendOrganizationInviteRequestDefaultTypeInternal _ResendOrganizationInviteRequest_default_instance_;
PROTOBUF_CONSTEXPR ResendOrganizationInviteResponse::ResendOrganizationInviteResponse(
    ::_pbi::ConstantInitialized)
  : invite_(nullptr){}
struct ResendOrganizationInviteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResendOrganizationInviteResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResendOrganizationInviteResponseDefaultTypeInternal() {}
  union {
    ResendOrganizationInviteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResendOrganizationInviteResponseDefaultTypeInternal _ResendOrganizationInviteResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteOrganizationMemberRequest::DeleteOrganizationMemberRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , user_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteOrganizationMemberRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOrganizationMemberRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOrganizationMemberRequestDefaultTypeInternal() {}
  union {
    DeleteOrganizationMemberRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOrganizationMemberRequestDefaultTypeInternal _DeleteOrganizationMemberRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteOrganizationMemberResponse::DeleteOrganizationMemberResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteOrganizationMemberResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOrganizationMemberResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOrganizationMemberResponseDefaultTypeInternal() {}
  union {
    DeleteOrganizationMemberResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOrganizationMemberResponseDefaultTypeInternal _DeleteOrganizationMemberResponse_default_instance_;
PROTOBUF_CONSTEXPR LocationOrganization::LocationOrganization(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , primary_(false){}
struct LocationOrganizationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationOrganizationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationOrganizationDefaultTypeInternal() {}
  union {
    LocationOrganization _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationOrganizationDefaultTypeInternal _LocationOrganization_default_instance_;
PROTOBUF_CONSTEXPR LocationAuth::LocationAuth(
    ::_pbi::ConstantInitialized)
  : secrets_()
  , secret_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct LocationAuthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationAuthDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationAuthDefaultTypeInternal() {}
  union {
    LocationAuth _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationAuthDefaultTypeInternal _LocationAuth_default_instance_;
PROTOBUF_CONSTEXPR StorageConfig::StorageConfig(
    ::_pbi::ConstantInitialized)
  : region_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct StorageConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageConfigDefaultTypeInternal() {}
  union {
    StorageConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageConfigDefaultTypeInternal _StorageConfig_default_instance_;
PROTOBUF_CONSTEXPR Location::Location(
    ::_pbi::ConstantInitialized)
  : organizations_()
  , id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , parent_location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_on_(nullptr)
  , auth_(nullptr)
  , config_(nullptr)
  , robot_count_(0){}
struct LocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationDefaultTypeInternal() {}
  union {
    Location _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationDefaultTypeInternal _Location_default_instance_;
PROTOBUF_CONSTEXPR SharedSecret::SharedSecret(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , secret_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_on_(nullptr)
  , state_(0)
{}
struct SharedSecretDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SharedSecretDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SharedSecretDefaultTypeInternal() {}
  union {
    SharedSecret _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SharedSecretDefaultTypeInternal _SharedSecret_default_instance_;
PROTOBUF_CONSTEXPR CreateLocationRequest::CreateLocationRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , parent_location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLocationRequestDefaultTypeInternal() {}
  union {
    CreateLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLocationRequestDefaultTypeInternal _CreateLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateLocationResponse::CreateLocationResponse(
    ::_pbi::ConstantInitialized)
  : location_(nullptr){}
struct CreateLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLocationResponseDefaultTypeInternal() {}
  union {
    CreateLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLocationResponseDefaultTypeInternal _CreateLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR GetLocationRequest::GetLocationRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLocationRequestDefaultTypeInternal() {}
  union {
    GetLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR GetLocationResponse::GetLocationResponse(
    ::_pbi::ConstantInitialized)
  : location_(nullptr){}
struct GetLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLocationResponseDefaultTypeInternal() {}
  union {
    GetLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateLocationRequest::UpdateLocationRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , parent_location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , region_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UpdateLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateLocationRequestDefaultTypeInternal() {}
  union {
    UpdateLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateLocationRequestDefaultTypeInternal _UpdateLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateLocationResponse::UpdateLocationResponse(
    ::_pbi::ConstantInitialized)
  : location_(nullptr){}
struct UpdateLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateLocationResponseDefaultTypeInternal() {}
  union {
    UpdateLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateLocationResponseDefaultTypeInternal _UpdateLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteLocationRequest::DeleteLocationRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteLocationRequestDefaultTypeInternal() {}
  union {
    DeleteLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteLocationRequestDefaultTypeInternal _DeleteLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteLocationResponse::DeleteLocationResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteLocationResponseDefaultTypeInternal() {}
  union {
    DeleteLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteLocationResponseDefaultTypeInternal _DeleteLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR ListLocationsRequest::ListLocationsRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListLocationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListLocationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListLocationsRequestDefaultTypeInternal() {}
  union {
    ListLocationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListLocationsRequestDefaultTypeInternal _ListLocationsRequest_default_instance_;
PROTOBUF_CONSTEXPR ShareLocationRequest::ShareLocationRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ShareLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareLocationRequestDefaultTypeInternal() {}
  union {
    ShareLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareLocationRequestDefaultTypeInternal _ShareLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR ShareLocationResponse::ShareLocationResponse(
    ::_pbi::ConstantInitialized){}
struct ShareLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareLocationResponseDefaultTypeInternal() {}
  union {
    ShareLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareLocationResponseDefaultTypeInternal _ShareLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR UnshareLocationRequest::UnshareLocationRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UnshareLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnshareLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnshareLocationRequestDefaultTypeInternal() {}
  union {
    UnshareLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnshareLocationRequestDefaultTypeInternal _UnshareLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR UnshareLocationResponse::UnshareLocationResponse(
    ::_pbi::ConstantInitialized){}
struct UnshareLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnshareLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnshareLocationResponseDefaultTypeInternal() {}
  union {
    UnshareLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnshareLocationResponseDefaultTypeInternal _UnshareLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR ListLocationsResponse::ListLocationsResponse(
    ::_pbi::ConstantInitialized)
  : locations_(){}
struct ListLocationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListLocationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListLocationsResponseDefaultTypeInternal() {}
  union {
    ListLocationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListLocationsResponseDefaultTypeInternal _ListLocationsResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateLocationSecretRequest::CreateLocationSecretRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateLocationSecretRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLocationSecretRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLocationSecretRequestDefaultTypeInternal() {}
  union {
    CreateLocationSecretRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLocationSecretRequestDefaultTypeInternal _CreateLocationSecretRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateLocationSecretResponse::CreateLocationSecretResponse(
    ::_pbi::ConstantInitialized)
  : auth_(nullptr){}
struct CreateLocationSecretResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLocationSecretResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLocationSecretResponseDefaultTypeInternal() {}
  union {
    CreateLocationSecretResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLocationSecretResponseDefaultTypeInternal _CreateLocationSecretResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteLocationSecretRequest::DeleteLocationSecretRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , secret_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteLocationSecretRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteLocationSecretRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteLocationSecretRequestDefaultTypeInternal() {}
  union {
    DeleteLocationSecretRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteLocationSecretRequestDefaultTypeInternal _DeleteLocationSecretRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteLocationSecretResponse::DeleteLocationSecretResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteLocationSecretResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteLocationSecretResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteLocationSecretResponseDefaultTypeInternal() {}
  union {
    DeleteLocationSecretResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteLocationSecretResponseDefaultTypeInternal _DeleteLocationSecretResponse_default_instance_;
PROTOBUF_CONSTEXPR LocationAuthRequest::LocationAuthRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct LocationAuthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationAuthRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationAuthRequestDefaultTypeInternal() {}
  union {
    LocationAuthRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationAuthRequestDefaultTypeInternal _LocationAuthRequest_default_instance_;
PROTOBUF_CONSTEXPR LocationAuthResponse::LocationAuthResponse(
    ::_pbi::ConstantInitialized)
  : auth_(nullptr){}
struct LocationAuthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationAuthResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationAuthResponseDefaultTypeInternal() {}
  union {
    LocationAuthResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationAuthResponseDefaultTypeInternal _LocationAuthResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotRequest::GetRobotRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotRequestDefaultTypeInternal() {}
  union {
    GetRobotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotRequestDefaultTypeInternal _GetRobotRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRoverRentalRobotsRequest::GetRoverRentalRobotsRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRoverRentalRobotsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoverRentalRobotsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoverRentalRobotsRequestDefaultTypeInternal() {}
  union {
    GetRoverRentalRobotsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoverRentalRobotsRequestDefaultTypeInternal _GetRoverRentalRobotsRequest_default_instance_;
PROTOBUF_CONSTEXPR RoverRentalRobot::RoverRentalRobot(
    ::_pbi::ConstantInitialized)
  : robot_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_main_part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct RoverRentalRobotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoverRentalRobotDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoverRentalRobotDefaultTypeInternal() {}
  union {
    RoverRentalRobot _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoverRentalRobotDefaultTypeInternal _RoverRentalRobot_default_instance_;
PROTOBUF_CONSTEXPR GetRoverRentalRobotsResponse::GetRoverRentalRobotsResponse(
    ::_pbi::ConstantInitialized)
  : robots_(){}
struct GetRoverRentalRobotsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoverRentalRobotsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoverRentalRobotsResponseDefaultTypeInternal() {}
  union {
    GetRoverRentalRobotsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoverRentalRobotsResponseDefaultTypeInternal _GetRoverRentalRobotsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotResponse::GetRobotResponse(
    ::_pbi::ConstantInitialized)
  : robot_(nullptr){}
struct GetRobotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotResponseDefaultTypeInternal() {}
  union {
    GetRobotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotResponseDefaultTypeInternal _GetRobotResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartsRequest::GetRobotPartsRequest(
    ::_pbi::ConstantInitialized)
  : robot_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotPartsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartsRequestDefaultTypeInternal() {}
  union {
    GetRobotPartsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartsRequestDefaultTypeInternal _GetRobotPartsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartsResponse::GetRobotPartsResponse(
    ::_pbi::ConstantInitialized)
  : parts_(){}
struct GetRobotPartsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartsResponseDefaultTypeInternal() {}
  union {
    GetRobotPartsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartsResponseDefaultTypeInternal _GetRobotPartsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartRequest::GetRobotPartRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotPartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartRequestDefaultTypeInternal() {}
  union {
    GetRobotPartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartRequestDefaultTypeInternal _GetRobotPartRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartResponse::GetRobotPartResponse(
    ::_pbi::ConstantInitialized)
  : config_json_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , part_(nullptr){}
struct GetRobotPartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartResponseDefaultTypeInternal() {}
  union {
    GetRobotPartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartResponseDefaultTypeInternal _GetRobotPartResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartLogsRequest::GetRobotPartLogsRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , filter_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , page_token_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , errors_only_(false){}
struct GetRobotPartLogsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartLogsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartLogsRequestDefaultTypeInternal() {}
  union {
    GetRobotPartLogsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartLogsRequestDefaultTypeInternal _GetRobotPartLogsRequest_default_instance_;
PROTOBUF_CONSTEXPR LogEntry::LogEntry(
    ::_pbi::ConstantInitialized)
  : fields_()
  , host_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , level_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , logger_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , message_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , stack_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , time_(nullptr)
  , caller_(nullptr){}
struct LogEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogEntryDefaultTypeInternal() {}
  union {
    LogEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogEntryDefaultTypeInternal _LogEntry_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartLogsResponse::GetRobotPartLogsResponse(
    ::_pbi::ConstantInitialized)
  : logs_()
  , next_page_token_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotPartLogsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartLogsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartLogsResponseDefaultTypeInternal() {}
  union {
    GetRobotPartLogsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartLogsResponseDefaultTypeInternal _GetRobotPartLogsResponse_default_instance_;
PROTOBUF_CONSTEXPR TailRobotPartLogsRequest::TailRobotPartLogsRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , filter_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , errors_only_(false){}
struct TailRobotPartLogsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TailRobotPartLogsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TailRobotPartLogsRequestDefaultTypeInternal() {}
  union {
    TailRobotPartLogsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TailRobotPartLogsRequestDefaultTypeInternal _TailRobotPartLogsRequest_default_instance_;
PROTOBUF_CONSTEXPR TailRobotPartLogsResponse::TailRobotPartLogsResponse(
    ::_pbi::ConstantInitialized)
  : logs_(){}
struct TailRobotPartLogsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TailRobotPartLogsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TailRobotPartLogsResponseDefaultTypeInternal() {}
  union {
    TailRobotPartLogsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TailRobotPartLogsResponseDefaultTypeInternal _TailRobotPartLogsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartHistoryRequest::GetRobotPartHistoryRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotPartHistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartHistoryRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartHistoryRequestDefaultTypeInternal() {}
  union {
    GetRobotPartHistoryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartHistoryRequestDefaultTypeInternal _GetRobotPartHistoryRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartHistoryResponse::GetRobotPartHistoryResponse(
    ::_pbi::ConstantInitialized)
  : history_(){}
struct GetRobotPartHistoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartHistoryResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartHistoryResponseDefaultTypeInternal() {}
  union {
    GetRobotPartHistoryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartHistoryResponseDefaultTypeInternal _GetRobotPartHistoryResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateRobotPartRequest::UpdateRobotPartRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_config_(nullptr){}
struct UpdateRobotPartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRobotPartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRobotPartRequestDefaultTypeInternal() {}
  union {
    UpdateRobotPartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRobotPartRequestDefaultTypeInternal _UpdateRobotPartRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateRobotPartResponse::UpdateRobotPartResponse(
    ::_pbi::ConstantInitialized)
  : part_(nullptr){}
struct UpdateRobotPartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRobotPartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRobotPartResponseDefaultTypeInternal() {}
  union {
    UpdateRobotPartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRobotPartResponseDefaultTypeInternal _UpdateRobotPartResponse_default_instance_;
PROTOBUF_CONSTEXPR NewRobotPartRequest::NewRobotPartRequest(
    ::_pbi::ConstantInitialized)
  : robot_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , part_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct NewRobotPartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewRobotPartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewRobotPartRequestDefaultTypeInternal() {}
  union {
    NewRobotPartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewRobotPartRequestDefaultTypeInternal _NewRobotPartRequest_default_instance_;
PROTOBUF_CONSTEXPR NewRobotPartResponse::NewRobotPartResponse(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct NewRobotPartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewRobotPartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewRobotPartResponseDefaultTypeInternal() {}
  union {
    NewRobotPartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewRobotPartResponseDefaultTypeInternal _NewRobotPartResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotPartRequest::DeleteRobotPartRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteRobotPartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotPartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotPartRequestDefaultTypeInternal() {}
  union {
    DeleteRobotPartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotPartRequestDefaultTypeInternal _DeleteRobotPartRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotPartResponse::DeleteRobotPartResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteRobotPartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotPartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotPartResponseDefaultTypeInternal() {}
  union {
    DeleteRobotPartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotPartResponseDefaultTypeInternal _DeleteRobotPartResponse_default_instance_;
PROTOBUF_CONSTEXPR Fragment::Fragment(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_owner_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , fragment_(nullptr)
  , created_on_(nullptr)
  , public__(false)
  , only_used_by_owner_(false)
  , robot_part_count_(0)
  , organization_count_(0){}
struct FragmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FragmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FragmentDefaultTypeInternal() {}
  union {
    Fragment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FragmentDefaultTypeInternal _Fragment_default_instance_;
PROTOBUF_CONSTEXPR ListFragmentsRequest::ListFragmentsRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , show_public_(false){}
struct ListFragmentsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListFragmentsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListFragmentsRequestDefaultTypeInternal() {}
  union {
    ListFragmentsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListFragmentsRequestDefaultTypeInternal _ListFragmentsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListFragmentsResponse::ListFragmentsResponse(
    ::_pbi::ConstantInitialized)
  : fragments_(){}
struct ListFragmentsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListFragmentsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListFragmentsResponseDefaultTypeInternal() {}
  union {
    ListFragmentsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListFragmentsResponseDefaultTypeInternal _ListFragmentsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetFragmentRequest::GetFragmentRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetFragmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFragmentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFragmentRequestDefaultTypeInternal() {}
  union {
    GetFragmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFragmentRequestDefaultTypeInternal _GetFragmentRequest_default_instance_;
PROTOBUF_CONSTEXPR GetFragmentResponse::GetFragmentResponse(
    ::_pbi::ConstantInitialized)
  : fragment_(nullptr){}
struct GetFragmentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFragmentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFragmentResponseDefaultTypeInternal() {}
  union {
    GetFragmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFragmentResponseDefaultTypeInternal _GetFragmentResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateFragmentRequest::CreateFragmentRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , config_(nullptr){}
struct CreateFragmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateFragmentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateFragmentRequestDefaultTypeInternal() {}
  union {
    CreateFragmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateFragmentRequestDefaultTypeInternal _CreateFragmentRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateFragmentResponse::CreateFragmentResponse(
    ::_pbi::ConstantInitialized)
  : fragment_(nullptr){}
struct CreateFragmentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateFragmentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateFragmentResponseDefaultTypeInternal() {}
  union {
    CreateFragmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateFragmentResponseDefaultTypeInternal _CreateFragmentResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateFragmentRequest::UpdateFragmentRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , config_(nullptr)
  , public__(false){}
struct UpdateFragmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateFragmentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateFragmentRequestDefaultTypeInternal() {}
  union {
    UpdateFragmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateFragmentRequestDefaultTypeInternal _UpdateFragmentRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateFragmentResponse::UpdateFragmentResponse(
    ::_pbi::ConstantInitialized)
  : fragment_(nullptr){}
struct UpdateFragmentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateFragmentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateFragmentResponseDefaultTypeInternal() {}
  union {
    UpdateFragmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateFragmentResponseDefaultTypeInternal _UpdateFragmentResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteFragmentRequest::DeleteFragmentRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteFragmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteFragmentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteFragmentRequestDefaultTypeInternal() {}
  union {
    DeleteFragmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteFragmentRequestDefaultTypeInternal _DeleteFragmentRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteFragmentResponse::DeleteFragmentResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteFragmentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteFragmentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteFragmentResponseDefaultTypeInternal() {}
  union {
    DeleteFragmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteFragmentResponseDefaultTypeInternal _DeleteFragmentResponse_default_instance_;
PROTOBUF_CONSTEXPR ListRobotsRequest::ListRobotsRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListRobotsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListRobotsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListRobotsRequestDefaultTypeInternal() {}
  union {
    ListRobotsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListRobotsRequestDefaultTypeInternal _ListRobotsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListRobotsResponse::ListRobotsResponse(
    ::_pbi::ConstantInitialized)
  : robots_(){}
struct ListRobotsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListRobotsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListRobotsResponseDefaultTypeInternal() {}
  union {
    ListRobotsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListRobotsResponseDefaultTypeInternal _ListRobotsResponse_default_instance_;
PROTOBUF_CONSTEXPR NewRobotRequest::NewRobotRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct NewRobotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewRobotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewRobotRequestDefaultTypeInternal() {}
  union {
    NewRobotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewRobotRequestDefaultTypeInternal _NewRobotRequest_default_instance_;
PROTOBUF_CONSTEXPR NewRobotResponse::NewRobotResponse(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct NewRobotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewRobotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewRobotResponseDefaultTypeInternal() {}
  union {
    NewRobotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewRobotResponseDefaultTypeInternal _NewRobotResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateRobotRequest::UpdateRobotRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UpdateRobotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRobotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRobotRequestDefaultTypeInternal() {}
  union {
    UpdateRobotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRobotRequestDefaultTypeInternal _UpdateRobotRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateRobotResponse::UpdateRobotResponse(
    ::_pbi::ConstantInitialized)
  : robot_(nullptr){}
struct UpdateRobotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRobotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRobotResponseDefaultTypeInternal() {}
  union {
    UpdateRobotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRobotResponseDefaultTypeInternal _UpdateRobotResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotRequest::DeleteRobotRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteRobotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotRequestDefaultTypeInternal() {}
  union {
    DeleteRobotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotRequestDefaultTypeInternal _DeleteRobotRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotResponse::DeleteRobotResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteRobotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotResponseDefaultTypeInternal() {}
  union {
    DeleteRobotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotResponseDefaultTypeInternal _DeleteRobotResponse_default_instance_;
PROTOBUF_CONSTEXPR MarkPartAsMainRequest::MarkPartAsMainRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct MarkPartAsMainRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkPartAsMainRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkPartAsMainRequestDefaultTypeInternal() {}
  union {
    MarkPartAsMainRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkPartAsMainRequestDefaultTypeInternal _MarkPartAsMainRequest_default_instance_;
PROTOBUF_CONSTEXPR MarkPartAsMainResponse::MarkPartAsMainResponse(
    ::_pbi::ConstantInitialized){}
struct MarkPartAsMainResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkPartAsMainResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkPartAsMainResponseDefaultTypeInternal() {}
  union {
    MarkPartAsMainResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkPartAsMainResponseDefaultTypeInternal _MarkPartAsMainResponse_default_instance_;
PROTOBUF_CONSTEXPR MarkPartForRestartRequest::MarkPartForRestartRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct MarkPartForRestartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkPartForRestartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkPartForRestartRequestDefaultTypeInternal() {}
  union {
    MarkPartForRestartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkPartForRestartRequestDefaultTypeInternal _MarkPartForRestartRequest_default_instance_;
PROTOBUF_CONSTEXPR MarkPartForRestartResponse::MarkPartForRestartResponse(
    ::_pbi::ConstantInitialized){}
struct MarkPartForRestartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkPartForRestartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkPartForRestartResponseDefaultTypeInternal() {}
  union {
    MarkPartForRestartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkPartForRestartResponseDefaultTypeInternal _MarkPartForRestartResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateRobotPartSecretRequest::CreateRobotPartSecretRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateRobotPartSecretRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateRobotPartSecretRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateRobotPartSecretRequestDefaultTypeInternal() {}
  union {
    CreateRobotPartSecretRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateRobotPartSecretRequestDefaultTypeInternal _CreateRobotPartSecretRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateRobotPartSecretResponse::CreateRobotPartSecretResponse(
    ::_pbi::ConstantInitialized)
  : part_(nullptr){}
struct CreateRobotPartSecretResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateRobotPartSecretResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateRobotPartSecretResponseDefaultTypeInternal() {}
  union {
    CreateRobotPartSecretResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateRobotPartSecretResponseDefaultTypeInternal _CreateRobotPartSecretResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotPartSecretRequest::DeleteRobotPartSecretRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , secret_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteRobotPartSecretRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotPartSecretRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotPartSecretRequestDefaultTypeInternal() {}
  union {
    DeleteRobotPartSecretRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotPartSecretRequestDefaultTypeInternal _DeleteRobotPartSecretRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotPartSecretResponse::DeleteRobotPartSecretResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteRobotPartSecretResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotPartSecretResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotPartSecretResponseDefaultTypeInternal() {}
  union {
    DeleteRobotPartSecretResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotPartSecretResponseDefaultTypeInternal _DeleteRobotPartSecretResponse_default_instance_;
PROTOBUF_CONSTEXPR Authorization::Authorization(
    ::_pbi::ConstantInitialized)
  : authorization_type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , authorization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , resource_type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , resource_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , identity_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct AuthorizationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthorizationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthorizationDefaultTypeInternal() {}
  union {
    Authorization _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthorizationDefaultTypeInternal _Authorization_default_instance_;
PROTOBUF_CONSTEXPR AddRoleRequest::AddRoleRequest(
    ::_pbi::ConstantInitialized)
  : authorization_(nullptr){}
struct AddRoleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddRoleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddRoleRequestDefaultTypeInternal() {}
  union {
    AddRoleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddRoleRequestDefaultTypeInternal _AddRoleRequest_default_instance_;
PROTOBUF_CONSTEXPR AddRoleResponse::AddRoleResponse(
    ::_pbi::ConstantInitialized){}
struct AddRoleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddRoleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddRoleResponseDefaultTypeInternal() {}
  union {
    AddRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddRoleResponseDefaultTypeInternal _AddRoleResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveRoleRequest::RemoveRoleRequest(
    ::_pbi::ConstantInitialized)
  : authorization_(nullptr){}
struct RemoveRoleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveRoleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveRoleRequestDefaultTypeInternal() {}
  union {
    RemoveRoleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveRoleRequestDefaultTypeInternal _RemoveRoleRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveRoleResponse::RemoveRoleResponse(
    ::_pbi::ConstantInitialized){}
struct RemoveRoleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveRoleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveRoleResponseDefaultTypeInternal() {}
  union {
    RemoveRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveRoleResponseDefaultTypeInternal _RemoveRoleResponse_default_instance_;
PROTOBUF_CONSTEXPR ListAuthorizationsRequest::ListAuthorizationsRequest(
    ::_pbi::ConstantInitialized)
  : resource_ids_()
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListAuthorizationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListAuthorizationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListAuthorizationsRequestDefaultTypeInternal() {}
  union {
    ListAuthorizationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListAuthorizationsRequestDefaultTypeInternal _ListAuthorizationsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListAuthorizationsResponse::ListAuthorizationsResponse(
    ::_pbi::ConstantInitialized)
  : authorizations_(){}
struct ListAuthorizationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListAuthorizationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListAuthorizationsResponseDefaultTypeInternal() {}
  union {
    ListAuthorizationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListAuthorizationsResponseDefaultTypeInternal _ListAuthorizationsResponse_default_instance_;
PROTOBUF_CONSTEXPR CheckPermissionsRequest::CheckPermissionsRequest(
    ::_pbi::ConstantInitialized)
  : permissions_(){}
struct CheckPermissionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckPermissionsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckPermissionsRequestDefaultTypeInternal() {}
  union {
    CheckPermissionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckPermissionsRequestDefaultTypeInternal _CheckPermissionsRequest_default_instance_;
PROTOBUF_CONSTEXPR AuthorizedPermissions::AuthorizedPermissions(
    ::_pbi::ConstantInitialized)
  : permissions_()
  , resource_type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , resource_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct AuthorizedPermissionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthorizedPermissionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthorizedPermissionsDefaultTypeInternal() {}
  union {
    AuthorizedPermissions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthorizedPermissionsDefaultTypeInternal _AuthorizedPermissions_default_instance_;
PROTOBUF_CONSTEXPR CheckPermissionsResponse::CheckPermissionsResponse(
    ::_pbi::ConstantInitialized)
  : authorized_permissions_(){}
struct CheckPermissionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckPermissionsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckPermissionsResponseDefaultTypeInternal() {}
  union {
    CheckPermissionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckPermissionsResponseDefaultTypeInternal _CheckPermissionsResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateModuleRequest::CreateModuleRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateModuleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateModuleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateModuleRequestDefaultTypeInternal() {}
  union {
    CreateModuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateModuleRequestDefaultTypeInternal _CreateModuleRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateModuleResponse::CreateModuleResponse(
    ::_pbi::ConstantInitialized)
  : module_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateModuleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateModuleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateModuleResponseDefaultTypeInternal() {}
  union {
    CreateModuleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateModuleResponseDefaultTypeInternal _CreateModuleResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateModuleRequest::UpdateModuleRequest(
    ::_pbi::ConstantInitialized)
  : models_()
  , module_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , entrypoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , visibility_(0)
{}
struct UpdateModuleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateModuleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateModuleRequestDefaultTypeInternal() {}
  union {
    UpdateModuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateModuleRequestDefaultTypeInternal _UpdateModuleRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateModuleResponse::UpdateModuleResponse(
    ::_pbi::ConstantInitialized)
  : url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UpdateModuleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateModuleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateModuleResponseDefaultTypeInternal() {}
  union {
    UpdateModuleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateModuleResponseDefaultTypeInternal _UpdateModuleResponse_default_instance_;
PROTOBUF_CONSTEXPR Model::Model(
    ::_pbi::ConstantInitialized)
  : api_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , model_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelDefaultTypeInternal() {}
  union {
    Model _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelDefaultTypeInternal _Model_default_instance_;
PROTOBUF_CONSTEXPR ModuleFileInfo::ModuleFileInfo(
    ::_pbi::ConstantInitialized)
  : module_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , platform_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModuleFileInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleFileInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleFileInfoDefaultTypeInternal() {}
  union {
    ModuleFileInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleFileInfoDefaultTypeInternal _ModuleFileInfo_default_instance_;
PROTOBUF_CONSTEXPR UploadModuleFileRequest::UploadModuleFileRequest(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct UploadModuleFileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadModuleFileRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadModuleFileRequestDefaultTypeInternal() {}
  union {
    UploadModuleFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadModuleFileRequestDefaultTypeInternal _UploadModuleFileRequest_default_instance_;
PROTOBUF_CONSTEXPR UploadModuleFileResponse::UploadModuleFileResponse(
    ::_pbi::ConstantInitialized)
  : url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UploadModuleFileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadModuleFileResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadModuleFileResponseDefaultTypeInternal() {}
  union {
    UploadModuleFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadModuleFileResponseDefaultTypeInternal _UploadModuleFileResponse_default_instance_;
PROTOBUF_CONSTEXPR GetModuleRequest::GetModuleRequest(
    ::_pbi::ConstantInitialized)
  : module_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetModuleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModuleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModuleRequestDefaultTypeInternal() {}
  union {
    GetModuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModuleRequestDefaultTypeInternal _GetModuleRequest_default_instance_;
PROTOBUF_CONSTEXPR GetModuleResponse::GetModuleResponse(
    ::_pbi::ConstantInitialized)
  : module_(nullptr){}
struct GetModuleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModuleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModuleResponseDefaultTypeInternal() {}
  union {
    GetModuleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModuleResponseDefaultTypeInternal _GetModuleResponse_default_instance_;
PROTOBUF_CONSTEXPR Module::Module(
    ::_pbi::ConstantInitialized)
  : versions_()
  , models_()
  , module_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , entrypoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , total_robot_usage_(int64_t{0})
  , total_organization_usage_(int64_t{0})
  , visibility_(0)
{}
struct ModuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleDefaultTypeInternal() {}
  union {
    Module _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleDefaultTypeInternal _Module_default_instance_;
PROTOBUF_CONSTEXPR VersionHistory::VersionHistory(
    ::_pbi::ConstantInitialized)
  : files_()
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct VersionHistoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionHistoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionHistoryDefaultTypeInternal() {}
  union {
    VersionHistory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionHistoryDefaultTypeInternal _VersionHistory_default_instance_;
PROTOBUF_CONSTEXPR Uploads::Uploads(
    ::_pbi::ConstantInitialized)
  : platform_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , uploaded_at_(nullptr){}
struct UploadsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadsDefaultTypeInternal() {}
  union {
    Uploads _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadsDefaultTypeInternal _Uploads_default_instance_;
PROTOBUF_CONSTEXPR ListModulesRequest::ListModulesRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListModulesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListModulesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListModulesRequestDefaultTypeInternal() {}
  union {
    ListModulesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListModulesRequestDefaultTypeInternal _ListModulesRequest_default_instance_;
PROTOBUF_CONSTEXPR ListModulesResponse::ListModulesResponse(
    ::_pbi::ConstantInitialized)
  : modules_(){}
struct ListModulesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListModulesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListModulesResponseDefaultTypeInternal() {}
  union {
    ListModulesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListModulesResponseDefaultTypeInternal _ListModulesResponse_default_instance_;
PROTOBUF_CONSTEXPR GetUserIDByEmailRequest::GetUserIDByEmailRequest(
    ::_pbi::ConstantInitialized)
  : email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetUserIDByEmailRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserIDByEmailRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserIDByEmailRequestDefaultTypeInternal() {}
  union {
    GetUserIDByEmailRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserIDByEmailRequestDefaultTypeInternal _GetUserIDByEmailRequest_default_instance_;
PROTOBUF_CONSTEXPR GetUserIDByEmailResponse::GetUserIDByEmailResponse(
    ::_pbi::ConstantInitialized)
  : user_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetUserIDByEmailResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserIDByEmailResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserIDByEmailResponseDefaultTypeInternal() {}
  union {
    GetUserIDByEmailResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserIDByEmailResponseDefaultTypeInternal _GetUserIDByEmailResponse_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationsByUserRequest::ListOrganizationsByUserRequest(
    ::_pbi::ConstantInitialized)
  : user_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListOrganizationsByUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationsByUserRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationsByUserRequestDefaultTypeInternal() {}
  union {
    ListOrganizationsByUserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationsByUserRequestDefaultTypeInternal _ListOrganizationsByUserRequest_default_instance_;
PROTOBUF_CONSTEXPR OrgDetails::OrgDetails(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , org_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct OrgDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrgDetailsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrgDetailsDefaultTypeInternal() {}
  union {
    OrgDetails _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrgDetailsDefaultTypeInternal _OrgDetails_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationsByUserResponse::ListOrganizationsByUserResponse(
    ::_pbi::ConstantInitialized)
  : orgs_(){}
struct ListOrganizationsByUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationsByUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationsByUserResponseDefaultTypeInternal() {}
  union {
    ListOrganizationsByUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationsByUserResponseDefaultTypeInternal _ListOrganizationsByUserResponse_default_instance_;
}  // namespace v1
}  // namespace app
}  // namespace viam
static ::_pb::Metadata file_level_metadata_app_2fv1_2fapp_2eproto[134];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_app_2fv1_2fapp_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_app_2fv1_2fapp_2eproto = nullptr;

const uint32_t TableStruct_app_2fv1_2fapp_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, location_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, last_access_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, created_on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, dns_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, secret_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, robot_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, robot_config_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, last_access_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, user_supplied_info_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, main_part_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, fqdn_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, local_fqdn_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, secrets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, part_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, robot_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, when_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, old_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, public_namespace_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, default_region_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationMember, user_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationMember, emails_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationMember, date_added_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsResponse, organizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationInvite, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationInvite, email_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationInvite, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationInvite, robot_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationResponse, organization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationResponse, organization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationNamespaceAvailabilityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationNamespaceAvailabilityRequest, public_namespace_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationNamespaceAvailabilityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationNamespaceAvailabilityResponse, available_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationRequest, public_namespace_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationRequest, region_),
  ~0u,
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationResponse, organization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationMembersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationMembersRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationMembersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationMembersResponse, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationMembersResponse, members_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationMembersResponse, invites_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteRequest, email_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteRequest, authorizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteResponse, invite_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest, email_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest, add_authorizations_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest, remove_authorizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsResponse, invite_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationInviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationInviteRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationInviteRequest, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationInviteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResendOrganizationInviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResendOrganizationInviteRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResendOrganizationInviteRequest, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResendOrganizationInviteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResendOrganizationInviteResponse, invite_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationMemberRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationMemberRequest, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationMemberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationOrganization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationOrganization, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationOrganization, primary_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuth, secret_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuth, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuth, secrets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::StorageConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::StorageConfig, region_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, parent_location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, auth_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, organizations_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, robot_count_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, secret_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, state_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationRequest, parent_location_id_),
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationResponse, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetLocationRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetLocationResponse, location_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationRequest, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationRequest, parent_location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationRequest, region_),
  ~0u,
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationResponse, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListLocationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListLocationsRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ShareLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ShareLocationRequest, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ShareLocationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ShareLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UnshareLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UnshareLocationRequest, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UnshareLocationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UnshareLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListLocationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListLocationsResponse, locations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationSecretRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationSecretResponse, auth_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationSecretRequest, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationSecretRequest, secret_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuthRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuthResponse, auth_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRoverRentalRobotsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRoverRentalRobotsRequest, org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RoverRentalRobot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RoverRentalRobot, robot_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RoverRentalRobot, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RoverRentalRobot, robot_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RoverRentalRobot, robot_main_part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRoverRentalRobotsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRoverRentalRobotsResponse, robots_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotResponse, robot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartsRequest, robot_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartsResponse, parts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartResponse, part_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartResponse, config_json_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, errors_only_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, filter_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, page_token_),
  ~0u,
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, host_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, level_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, time_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, logger_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, message_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, caller_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, stack_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, fields_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsResponse, logs_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsResponse, next_page_token_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsRequest, errors_only_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsRequest, filter_),
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsResponse, logs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartHistoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartHistoryRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartHistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartHistoryResponse, history_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartRequest, robot_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartResponse, part_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartRequest, robot_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartRequest, part_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartResponse, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartRequest, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, fragment_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, organization_owner_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, public__),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, organization_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, robot_part_count_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, organization_count_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, only_used_by_owner_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListFragmentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListFragmentsRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListFragmentsRequest, show_public_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListFragmentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListFragmentsResponse, fragments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentResponse, fragment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentRequest, config_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentResponse, fragment_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentRequest, config_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentRequest, public__),
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentResponse, fragment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteFragmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteFragmentRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteFragmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRobotsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRobotsRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRobotsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRobotsResponse, robots_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotRequest, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotRequest, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotResponse, robot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartAsMainRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartAsMainRequest, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartAsMainResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartForRestartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartForRestartRequest, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartForRestartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRobotPartSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRobotPartSecretRequest, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRobotPartSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRobotPartSecretResponse, part_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartSecretRequest, part_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartSecretRequest, secret_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, authorization_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, authorization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, resource_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, resource_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, identity_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AddRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AddRoleRequest, authorization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AddRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RemoveRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RemoveRoleRequest, authorization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RemoveRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListAuthorizationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListAuthorizationsRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListAuthorizationsRequest, resource_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListAuthorizationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListAuthorizationsResponse, authorizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CheckPermissionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CheckPermissionsRequest, permissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizedPermissions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizedPermissions, resource_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizedPermissions, resource_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizedPermissions, permissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CheckPermissionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CheckPermissionsResponse, authorized_permissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateModuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateModuleRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateModuleRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateModuleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateModuleResponse, module_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateModuleResponse, url_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, module_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, visibility_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, url_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, description_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, models_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, entrypoint_),
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleResponse, url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Model, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Model, api_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Model, model_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleFileInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleFileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleFileInfo, module_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleFileInfo, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleFileInfo, version_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleFileInfo, platform_),
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UploadModuleFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UploadModuleFileRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UploadModuleFileRequest, module_file_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UploadModuleFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UploadModuleFileResponse, url_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetModuleRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetModuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetModuleRequest, module_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetModuleRequest, organization_id_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetModuleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetModuleResponse, module_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, module_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, visibility_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, versions_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, url_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, description_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, models_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, entrypoint_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, total_robot_usage_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, total_organization_usage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::VersionHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::VersionHistory, version_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::VersionHistory, files_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Uploads, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Uploads, platform_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Uploads, uploaded_at_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListModulesRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListModulesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListModulesRequest, organization_id_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListModulesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListModulesResponse, modules_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetUserIDByEmailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetUserIDByEmailRequest, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetUserIDByEmailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetUserIDByEmailResponse, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsByUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsByUserRequest, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrgDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrgDetails, org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrgDetails, org_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsByUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsByUserResponse, orgs_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::app::v1::Robot)},
  { 11, -1, -1, sizeof(::viam::app::v1::RobotPart)},
  { 31, -1, -1, sizeof(::viam::app::v1::RobotPartHistoryEntry)},
  { 41, -1, -1, sizeof(::viam::app::v1::ListOrganizationsRequest)},
  { 47, -1, -1, sizeof(::viam::app::v1::Organization)},
  { 58, -1, -1, sizeof(::viam::app::v1::OrganizationMember)},
  { 67, -1, -1, sizeof(::viam::app::v1::ListOrganizationsResponse)},
  { 74, -1, -1, sizeof(::viam::app::v1::OrganizationInvite)},
  { 84, -1, -1, sizeof(::viam::app::v1::CreateOrganizationRequest)},
  { 91, -1, -1, sizeof(::viam::app::v1::CreateOrganizationResponse)},
  { 98, -1, -1, sizeof(::viam::app::v1::GetOrganizationRequest)},
  { 105, -1, -1, sizeof(::viam::app::v1::GetOrganizationResponse)},
  { 112, -1, -1, sizeof(::viam::app::v1::GetOrganizationNamespaceAvailabilityRequest)},
  { 119, -1, -1, sizeof(::viam::app::v1::GetOrganizationNamespaceAvailabilityResponse)},
  { 126, 136, -1, sizeof(::viam::app::v1::UpdateOrganizationRequest)},
  { 140, -1, -1, sizeof(::viam::app::v1::UpdateOrganizationResponse)},
  { 147, -1, -1, sizeof(::viam::app::v1::DeleteOrganizationRequest)},
  { 154, -1, -1, sizeof(::viam::app::v1::DeleteOrganizationResponse)},
  { 160, -1, -1, sizeof(::viam::app::v1::ListOrganizationMembersRequest)},
  { 167, -1, -1, sizeof(::viam::app::v1::ListOrganizationMembersResponse)},
  { 176, -1, -1, sizeof(::viam::app::v1::CreateOrganizationInviteRequest)},
  { 185, -1, -1, sizeof(::viam::app::v1::CreateOrganizationInviteResponse)},
  { 192, -1, -1, sizeof(::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest)},
  { 202, -1, -1, sizeof(::viam::app::v1::UpdateOrganizationInviteAuthorizationsResponse)},
  { 209, -1, -1, sizeof(::viam::app::v1::DeleteOrganizationInviteRequest)},
  { 217, -1, -1, sizeof(::viam::app::v1::DeleteOrganizationInviteResponse)},
  { 223, -1, -1, sizeof(::viam::app::v1::ResendOrganizationInviteRequest)},
  { 231, -1, -1, sizeof(::viam::app::v1::ResendOrganizationInviteResponse)},
  { 238, -1, -1, sizeof(::viam::app::v1::DeleteOrganizationMemberRequest)},
  { 246, -1, -1, sizeof(::viam::app::v1::DeleteOrganizationMemberResponse)},
  { 252, -1, -1, sizeof(::viam::app::v1::LocationOrganization)},
  { 260, -1, -1, sizeof(::viam::app::v1::LocationAuth)},
  { 269, -1, -1, sizeof(::viam::app::v1::StorageConfig)},
  { 276, -1, -1, sizeof(::viam::app::v1::Location)},
  { 290, -1, -1, sizeof(::viam::app::v1::SharedSecret)},
  { 300, 309, -1, sizeof(::viam::app::v1::CreateLocationRequest)},
  { 312, -1, -1, sizeof(::viam::app::v1::CreateLocationResponse)},
  { 319, -1, -1, sizeof(::viam::app::v1::GetLocationRequest)},
  { 326, -1, -1, sizeof(::viam::app::v1::GetLocationResponse)},
  { 333, 343, -1, sizeof(::viam::app::v1::UpdateLocationRequest)},
  { 347, -1, -1, sizeof(::viam::app::v1::UpdateLocationResponse)},
  { 354, -1, -1, sizeof(::viam::app::v1::DeleteLocationRequest)},
  { 361, -1, -1, sizeof(::viam::app::v1::DeleteLocationResponse)},
  { 367, -1, -1, sizeof(::viam::app::v1::ListLocationsRequest)},
  { 374, -1, -1, sizeof(::viam::app::v1::ShareLocationRequest)},
  { 382, -1, -1, sizeof(::viam::app::v1::ShareLocationResponse)},
  { 388, -1, -1, sizeof(::viam::app::v1::UnshareLocationRequest)},
  { 396, -1, -1, sizeof(::viam::app::v1::UnshareLocationResponse)},
  { 402, -1, -1, sizeof(::viam::app::v1::ListLocationsResponse)},
  { 409, -1, -1, sizeof(::viam::app::v1::CreateLocationSecretRequest)},
  { 416, -1, -1, sizeof(::viam::app::v1::CreateLocationSecretResponse)},
  { 423, -1, -1, sizeof(::viam::app::v1::DeleteLocationSecretRequest)},
  { 431, -1, -1, sizeof(::viam::app::v1::DeleteLocationSecretResponse)},
  { 437, -1, -1, sizeof(::viam::app::v1::LocationAuthRequest)},
  { 444, -1, -1, sizeof(::viam::app::v1::LocationAuthResponse)},
  { 451, -1, -1, sizeof(::viam::app::v1::GetRobotRequest)},
  { 458, -1, -1, sizeof(::viam::app::v1::GetRoverRentalRobotsRequest)},
  { 465, -1, -1, sizeof(::viam::app::v1::RoverRentalRobot)},
  { 475, -1, -1, sizeof(::viam::app::v1::GetRoverRentalRobotsResponse)},
  { 482, -1, -1, sizeof(::viam::app::v1::GetRobotResponse)},
  { 489, -1, -1, sizeof(::viam::app::v1::GetRobotPartsRequest)},
  { 496, -1, -1, sizeof(::viam::app::v1::GetRobotPartsResponse)},
  { 503, -1, -1, sizeof(::viam::app::v1::GetRobotPartRequest)},
  { 510, -1, -1, sizeof(::viam::app::v1::GetRobotPartResponse)},
  { 518, 528, -1, sizeof(::viam::app::v1::GetRobotPartLogsRequest)},
  { 532, -1, -1, sizeof(::viam::app::v1::LogEntry)},
  { 546, -1, -1, sizeof(::viam::app::v1::GetRobotPartLogsResponse)},
  { 554, 563, -1, sizeof(::viam::app::v1::TailRobotPartLogsRequest)},
  { 566, -1, -1, sizeof(::viam::app::v1::TailRobotPartLogsResponse)},
  { 573, -1, -1, sizeof(::viam::app::v1::GetRobotPartHistoryRequest)},
  { 580, -1, -1, sizeof(::viam::app::v1::GetRobotPartHistoryResponse)},
  { 587, -1, -1, sizeof(::viam::app::v1::UpdateRobotPartRequest)},
  { 596, -1, -1, sizeof(::viam::app::v1::UpdateRobotPartResponse)},
  { 603, -1, -1, sizeof(::viam::app::v1::NewRobotPartRequest)},
  { 611, -1, -1, sizeof(::viam::app::v1::NewRobotPartResponse)},
  { 618, -1, -1, sizeof(::viam::app::v1::DeleteRobotPartRequest)},
  { 625, -1, -1, sizeof(::viam::app::v1::DeleteRobotPartResponse)},
  { 631, -1, -1, sizeof(::viam::app::v1::Fragment)},
  { 647, -1, -1, sizeof(::viam::app::v1::ListFragmentsRequest)},
  { 655, -1, -1, sizeof(::viam::app::v1::ListFragmentsResponse)},
  { 662, -1, -1, sizeof(::viam::app::v1::GetFragmentRequest)},
  { 669, -1, -1, sizeof(::viam::app::v1::GetFragmentResponse)},
  { 676, -1, -1, sizeof(::viam::app::v1::CreateFragmentRequest)},
  { 685, -1, -1, sizeof(::viam::app::v1::CreateFragmentResponse)},
  { 692, 702, -1, sizeof(::viam::app::v1::UpdateFragmentRequest)},
  { 706, -1, -1, sizeof(::viam::app::v1::UpdateFragmentResponse)},
  { 713, -1, -1, sizeof(::viam::app::v1::DeleteFragmentRequest)},
  { 720, -1, -1, sizeof(::viam::app::v1::DeleteFragmentResponse)},
  { 726, -1, -1, sizeof(::viam::app::v1::ListRobotsRequest)},
  { 733, -1, -1, sizeof(::viam::app::v1::ListRobotsResponse)},
  { 740, -1, -1, sizeof(::viam::app::v1::NewRobotRequest)},
  { 748, -1, -1, sizeof(::viam::app::v1::NewRobotResponse)},
  { 755, -1, -1, sizeof(::viam::app::v1::UpdateRobotRequest)},
  { 764, -1, -1, sizeof(::viam::app::v1::UpdateRobotResponse)},
  { 771, -1, -1, sizeof(::viam::app::v1::DeleteRobotRequest)},
  { 778, -1, -1, sizeof(::viam::app::v1::DeleteRobotResponse)},
  { 784, -1, -1, sizeof(::viam::app::v1::MarkPartAsMainRequest)},
  { 791, -1, -1, sizeof(::viam::app::v1::MarkPartAsMainResponse)},
  { 797, -1, -1, sizeof(::viam::app::v1::MarkPartForRestartRequest)},
  { 804, -1, -1, sizeof(::viam::app::v1::MarkPartForRestartResponse)},
  { 810, -1, -1, sizeof(::viam::app::v1::CreateRobotPartSecretRequest)},
  { 817, -1, -1, sizeof(::viam::app::v1::CreateRobotPartSecretResponse)},
  { 824, -1, -1, sizeof(::viam::app::v1::DeleteRobotPartSecretRequest)},
  { 832, -1, -1, sizeof(::viam::app::v1::DeleteRobotPartSecretResponse)},
  { 838, -1, -1, sizeof(::viam::app::v1::Authorization)},
  { 850, -1, -1, sizeof(::viam::app::v1::AddRoleRequest)},
  { 857, -1, -1, sizeof(::viam::app::v1::AddRoleResponse)},
  { 863, -1, -1, sizeof(::viam::app::v1::RemoveRoleRequest)},
  { 870, -1, -1, sizeof(::viam::app::v1::RemoveRoleResponse)},
  { 876, -1, -1, sizeof(::viam::app::v1::ListAuthorizationsRequest)},
  { 884, -1, -1, sizeof(::viam::app::v1::ListAuthorizationsResponse)},
  { 891, -1, -1, sizeof(::viam::app::v1::CheckPermissionsRequest)},
  { 898, -1, -1, sizeof(::viam::app::v1::AuthorizedPermissions)},
  { 907, -1, -1, sizeof(::viam::app::v1::CheckPermissionsResponse)},
  { 914, -1, -1, sizeof(::viam::app::v1::CreateModuleRequest)},
  { 922, -1, -1, sizeof(::viam::app::v1::CreateModuleResponse)},
  { 930, 943, -1, sizeof(::viam::app::v1::UpdateModuleRequest)},
  { 950, -1, -1, sizeof(::viam::app::v1::UpdateModuleResponse)},
  { 957, -1, -1, sizeof(::viam::app::v1::Model)},
  { 965, 975, -1, sizeof(::viam::app::v1::ModuleFileInfo)},
  { 979, -1, -1, sizeof(::viam::app::v1::UploadModuleFileRequest)},
  { 988, -1, -1, sizeof(::viam::app::v1::UploadModuleFileResponse)},
  { 995, 1003, -1, sizeof(::viam::app::v1::GetModuleRequest)},
  { 1005, -1, -1, sizeof(::viam::app::v1::GetModuleResponse)},
  { 1012, -1, -1, sizeof(::viam::app::v1::Module)},
  { 1029, -1, -1, sizeof(::viam::app::v1::VersionHistory)},
  { 1037, -1, -1, sizeof(::viam::app::v1::Uploads)},
  { 1045, 1052, -1, sizeof(::viam::app::v1::ListModulesRequest)},
  { 1053, -1, -1, sizeof(::viam::app::v1::ListModulesResponse)},
  { 1060, -1, -1, sizeof(::viam::app::v1::GetUserIDByEmailRequest)},
  { 1067, -1, -1, sizeof(::viam::app::v1::GetUserIDByEmailResponse)},
  { 1074, -1, -1, sizeof(::viam::app::v1::ListOrganizationsByUserRequest)},
  { 1081, -1, -1, sizeof(::viam::app::v1::OrgDetails)},
  { 1089, -1, -1, sizeof(::viam::app::v1::ListOrganizationsByUserResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::app::v1::_Robot_default_instance_._instance,
  &::viam::app::v1::_RobotPart_default_instance_._instance,
  &::viam::app::v1::_RobotPartHistoryEntry_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationsRequest_default_instance_._instance,
  &::viam::app::v1::_Organization_default_instance_._instance,
  &::viam::app::v1::_OrganizationMember_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationsResponse_default_instance_._instance,
  &::viam::app::v1::_OrganizationInvite_default_instance_._instance,
  &::viam::app::v1::_CreateOrganizationRequest_default_instance_._instance,
  &::viam::app::v1::_CreateOrganizationResponse_default_instance_._instance,
  &::viam::app::v1::_GetOrganizationRequest_default_instance_._instance,
  &::viam::app::v1::_GetOrganizationResponse_default_instance_._instance,
  &::viam::app::v1::_GetOrganizationNamespaceAvailabilityRequest_default_instance_._instance,
  &::viam::app::v1::_GetOrganizationNamespaceAvailabilityResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateOrganizationRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateOrganizationResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteOrganizationRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteOrganizationResponse_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationMembersRequest_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationMembersResponse_default_instance_._instance,
  &::viam::app::v1::_CreateOrganizationInviteRequest_default_instance_._instance,
  &::viam::app::v1::_CreateOrganizationInviteResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateOrganizationInviteAuthorizationsRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateOrganizationInviteAuthorizationsResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteOrganizationInviteRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteOrganizationInviteResponse_default_instance_._instance,
  &::viam::app::v1::_ResendOrganizationInviteRequest_default_instance_._instance,
  &::viam::app::v1::_ResendOrganizationInviteResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteOrganizationMemberRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteOrganizationMemberResponse_default_instance_._instance,
  &::viam::app::v1::_LocationOrganization_default_instance_._instance,
  &::viam::app::v1::_LocationAuth_default_instance_._instance,
  &::viam::app::v1::_StorageConfig_default_instance_._instance,
  &::viam::app::v1::_Location_default_instance_._instance,
  &::viam::app::v1::_SharedSecret_default_instance_._instance,
  &::viam::app::v1::_CreateLocationRequest_default_instance_._instance,
  &::viam::app::v1::_CreateLocationResponse_default_instance_._instance,
  &::viam::app::v1::_GetLocationRequest_default_instance_._instance,
  &::viam::app::v1::_GetLocationResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateLocationRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateLocationResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteLocationRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteLocationResponse_default_instance_._instance,
  &::viam::app::v1::_ListLocationsRequest_default_instance_._instance,
  &::viam::app::v1::_ShareLocationRequest_default_instance_._instance,
  &::viam::app::v1::_ShareLocationResponse_default_instance_._instance,
  &::viam::app::v1::_UnshareLocationRequest_default_instance_._instance,
  &::viam::app::v1::_UnshareLocationResponse_default_instance_._instance,
  &::viam::app::v1::_ListLocationsResponse_default_instance_._instance,
  &::viam::app::v1::_CreateLocationSecretRequest_default_instance_._instance,
  &::viam::app::v1::_CreateLocationSecretResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteLocationSecretRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteLocationSecretResponse_default_instance_._instance,
  &::viam::app::v1::_LocationAuthRequest_default_instance_._instance,
  &::viam::app::v1::_LocationAuthResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotRequest_default_instance_._instance,
  &::viam::app::v1::_GetRoverRentalRobotsRequest_default_instance_._instance,
  &::viam::app::v1::_RoverRentalRobot_default_instance_._instance,
  &::viam::app::v1::_GetRoverRentalRobotsResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartsRequest_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartsResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartRequest_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartLogsRequest_default_instance_._instance,
  &::viam::app::v1::_LogEntry_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartLogsResponse_default_instance_._instance,
  &::viam::app::v1::_TailRobotPartLogsRequest_default_instance_._instance,
  &::viam::app::v1::_TailRobotPartLogsResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartHistoryRequest_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartHistoryResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateRobotPartRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateRobotPartResponse_default_instance_._instance,
  &::viam::app::v1::_NewRobotPartRequest_default_instance_._instance,
  &::viam::app::v1::_NewRobotPartResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotPartRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotPartResponse_default_instance_._instance,
  &::viam::app::v1::_Fragment_default_instance_._instance,
  &::viam::app::v1::_ListFragmentsRequest_default_instance_._instance,
  &::viam::app::v1::_ListFragmentsResponse_default_instance_._instance,
  &::viam::app::v1::_GetFragmentRequest_default_instance_._instance,
  &::viam::app::v1::_GetFragmentResponse_default_instance_._instance,
  &::viam::app::v1::_CreateFragmentRequest_default_instance_._instance,
  &::viam::app::v1::_CreateFragmentResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateFragmentRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateFragmentResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteFragmentRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteFragmentResponse_default_instance_._instance,
  &::viam::app::v1::_ListRobotsRequest_default_instance_._instance,
  &::viam::app::v1::_ListRobotsResponse_default_instance_._instance,
  &::viam::app::v1::_NewRobotRequest_default_instance_._instance,
  &::viam::app::v1::_NewRobotResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateRobotRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateRobotResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotResponse_default_instance_._instance,
  &::viam::app::v1::_MarkPartAsMainRequest_default_instance_._instance,
  &::viam::app::v1::_MarkPartAsMainResponse_default_instance_._instance,
  &::viam::app::v1::_MarkPartForRestartRequest_default_instance_._instance,
  &::viam::app::v1::_MarkPartForRestartResponse_default_instance_._instance,
  &::viam::app::v1::_CreateRobotPartSecretRequest_default_instance_._instance,
  &::viam::app::v1::_CreateRobotPartSecretResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotPartSecretRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotPartSecretResponse_default_instance_._instance,
  &::viam::app::v1::_Authorization_default_instance_._instance,
  &::viam::app::v1::_AddRoleRequest_default_instance_._instance,
  &::viam::app::v1::_AddRoleResponse_default_instance_._instance,
  &::viam::app::v1::_RemoveRoleRequest_default_instance_._instance,
  &::viam::app::v1::_RemoveRoleResponse_default_instance_._instance,
  &::viam::app::v1::_ListAuthorizationsRequest_default_instance_._instance,
  &::viam::app::v1::_ListAuthorizationsResponse_default_instance_._instance,
  &::viam::app::v1::_CheckPermissionsRequest_default_instance_._instance,
  &::viam::app::v1::_AuthorizedPermissions_default_instance_._instance,
  &::viam::app::v1::_CheckPermissionsResponse_default_instance_._instance,
  &::viam::app::v1::_CreateModuleRequest_default_instance_._instance,
  &::viam::app::v1::_CreateModuleResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateModuleRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateModuleResponse_default_instance_._instance,
  &::viam::app::v1::_Model_default_instance_._instance,
  &::viam::app::v1::_ModuleFileInfo_default_instance_._instance,
  &::viam::app::v1::_UploadModuleFileRequest_default_instance_._instance,
  &::viam::app::v1::_UploadModuleFileResponse_default_instance_._instance,
  &::viam::app::v1::_GetModuleRequest_default_instance_._instance,
  &::viam::app::v1::_GetModuleResponse_default_instance_._instance,
  &::viam::app::v1::_Module_default_instance_._instance,
  &::viam::app::v1::_VersionHistory_default_instance_._instance,
  &::viam::app::v1::_Uploads_default_instance_._instance,
  &::viam::app::v1::_ListModulesRequest_default_instance_._instance,
  &::viam::app::v1::_ListModulesResponse_default_instance_._instance,
  &::viam::app::v1::_GetUserIDByEmailRequest_default_instance_._instance,
  &::viam::app::v1::_GetUserIDByEmailResponse_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationsByUserRequest_default_instance_._instance,
  &::viam::app::v1::_OrgDetails_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationsByUserResponse_default_instance_._instance,
};

const char descriptor_table_protodef_app_2fv1_2fapp_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020app/v1/app.proto\022\013viam.app.v1\032\034google/"
  "protobuf/struct.proto\032\037google/protobuf/t"
  "imestamp.proto\032\026tagger/v1/tagger.proto\"\354"
  "\002\n\005Robot\0223\n\002id\030\001 \001(\tB#\232\204\236\003\036bson:\"_id\" js"
  "on:\"id,omitempty\"R\002id\0220\n\004name\030\002 \001(\tB\034\232\204\236"
  "\003\027bson:\"name\" json:\"name\"R\004name\022@\n\010locat"
  "ion\030\003 \001(\tB$\232\204\236\003\037bson:\"location\" json:\"lo"
  "cation\"R\010location\022g\n\013last_access\030\004 \001(\0132\032"
  ".google.protobuf.TimestampB*\232\204\236\003%bson:\"l"
  "ast_access\" json:\"last_access\"R\nlastAcce"
  "ss\022Q\n\ncreated_on\030\005 \001(\0132\032.google.protobuf"
  ".TimestampB\026\232\204\236\003\021bson:\"created_on\"R\tcrea"
  "tedOn\"\323\007\n\tRobotPart\0223\n\002id\030\001 \001(\tB#\232\204\236\003\036bs"
  "on:\"_id\" json:\"id,omitempty\"R\002id\0220\n\004name"
  "\030\002 \001(\tB\034\232\204\236\003\027bson:\"name\" json:\"name\"R\004na"
  "me\022\?\n\010dns_name\030\n \001(\tB$\232\204\236\003\037bson:\"dns_nam"
  "e\" json:\"dns_name\"R\007dnsName\022B\n\006secret\030\003 "
  "\001(\tB*\232\204\236\003%bson:\"secret\" json:\"secret,omi"
  "tempty\"R\006secret\0224\n\005robot\030\004 \001(\tB\036\232\204\236\003\031bso"
  "n:\"robot\" json:\"robot\"R\005robot\022A\n\013locatio"
  "n_id\030\014 \001(\tB \232\204\236\003\033bson:\"location_id\" json"
  ":\"-\"R\nlocationId\022b\n\014robot_config\030\005 \001(\0132\027"
  ".google.protobuf.StructB&\232\204\236\003!bson:\"conf"
  "ig\" json:\"robot_config\"R\013robotConfig\022g\n\013"
  "last_access\030\006 \001(\0132\032.google.protobuf.Time"
  "stampB*\232\204\236\003%bson:\"last_access\" json:\"las"
  "t_access\"R\nlastAccess\022\177\n\022user_supplied_i"
  "nfo\030\007 \001(\0132\027.google.protobuf.StructB8\232\204\236\003"
  "3bson:\"user_supplied_info\" json:\"user_su"
  "pplied_info\"R\020userSuppliedInfo\022C\n\tmain_p"
  "art\030\010 \001(\010B&\232\204\236\003!bson:\"main_part\" json:\"m"
  "ain_part\"R\010mainPart\022\022\n\004fqdn\030\t \001(\tR\004fqdn\022"
  "\035\n\nlocal_fqdn\030\013 \001(\tR\tlocalFqdn\022Q\n\ncreate"
  "d_on\030\r \001(\0132\032.google.protobuf.TimestampB\026"
  "\232\204\236\003\021bson:\"created_on\"R\tcreatedOn\022H\n\007sec"
  "rets\030\016 \003(\0132\031.viam.app.v1.SharedSecretB\023\232"
  "\204\236\003\016bson:\"secrets\"R\007secrets\"\223\002\n\025RobotPar"
  "tHistoryEntry\0220\n\004part\030\001 \001(\tB\034\232\204\236\003\027bson:\""
  "part\" json:\"part\"R\004part\0224\n\005robot\030\002 \001(\tB\036"
  "\232\204\236\003\031bson:\"robot\" json:\"robot\"R\005robot\022L\n"
  "\004when\030\003 \001(\0132\032.google.protobuf.TimestampB"
  "\034\232\204\236\003\027bson:\"when\" json:\"when\"R\004when\022D\n\003o"
  "ld\030\004 \001(\0132\026.viam.app.v1.RobotPartB\032\232\204\236\003\025b"
  "son:\"old\" json:\"old\"R\003old\"\032\n\030ListOrganiz"
  "ationsRequest\"\277\001\n\014Organization\022\016\n\002id\030\001 \001"
  "(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\0229\n\ncreated_on"
  "\030\003 \001(\0132\032.google.protobuf.TimestampR\tcrea"
  "tedOn\022)\n\020public_namespace\030\004 \001(\tR\017publicN"
  "amespace\022%\n\016default_region\030\005 \001(\tR\rdefaul"
  "tRegion\"\200\001\n\022OrganizationMember\022\027\n\007user_i"
  "d\030\001 \001(\tR\006userId\022\026\n\006emails\030\002 \003(\tR\006emails\022"
  "9\n\ndate_added\030\003 \001(\0132\032.google.protobuf.Ti"
  "mestampR\tdateAdded\"\\\n\031ListOrganizationsR"
  "esponse\022\?\n\rorganizations\030\001 \003(\0132\031.viam.ap"
  "p.v1.OrganizationR\rorganizations\"\257\001\n\022Org"
  "anizationInvite\022\'\n\017organization_id\030\001 \001(\t"
  "R\016organizationId\022\024\n\005email\030\002 \001(\tR\005email\0229"
  "\n\ncreated_on\030\003 \001(\0132\032.google.protobuf.Tim"
  "estampR\tcreatedOn\022\037\n\013robot_count\030\004 \001(\003R\n"
  "robotCount\"/\n\031CreateOrganizationRequest\022"
  "\022\n\004name\030\001 \001(\tR\004name\"[\n\032CreateOrganizatio"
  "nResponse\022=\n\014organization\030\001 \001(\0132\031.viam.a"
  "pp.v1.OrganizationR\014organization\"A\n\026GetO"
  "rganizationRequest\022\'\n\017organization_id\030\001 "
  "\001(\tR\016organizationId\"X\n\027GetOrganizationRe"
  "sponse\022=\n\014organization\030\001 \001(\0132\031.viam.app."
  "v1.OrganizationR\014organization\"X\n+GetOrga"
  "nizationNamespaceAvailabilityRequest\022)\n\020"
  "public_namespace\030\001 \001(\tR\017publicNamespace\""
  "L\n,GetOrganizationNamespaceAvailabilityR"
  "esponse\022\034\n\tavailable\030\001 \001(\010R\tavailable\"\323\001"
  "\n\031UpdateOrganizationRequest\022\'\n\017organizat"
  "ion_id\030\001 \001(\tR\016organizationId\022\027\n\004name\030\002 \001"
  "(\tH\000R\004name\210\001\001\022.\n\020public_namespace\030\003 \001(\tH"
  "\001R\017publicNamespace\210\001\001\022\033\n\006region\030\004 \001(\tH\002R"
  "\006region\210\001\001B\007\n\005_nameB\023\n\021_public_namespace"
  "B\t\n\007_region\"[\n\032UpdateOrganizationRespons"
  "e\022=\n\014organization\030\001 \001(\0132\031.viam.app.v1.Or"
  "ganizationR\014organization\"D\n\031DeleteOrgani"
  "zationRequest\022\'\n\017organization_id\030\001 \001(\tR\016"
  "organizationId\"\034\n\032DeleteOrganizationResp"
  "onse\"I\n\036ListOrganizationMembersRequest\022\'"
  "\n\017organization_id\030\001 \001(\tR\016organizationId\""
  "\300\001\n\037ListOrganizationMembersResponse\022\'\n\017o"
  "rganization_id\030\001 \001(\tR\016organizationId\0229\n\007"
  "members\030\002 \003(\0132\037.viam.app.v1.Organization"
  "MemberR\007members\0229\n\007invites\030\003 \003(\0132\037.viam."
  "app.v1.OrganizationInviteR\007invites\"\244\001\n\037C"
  "reateOrganizationInviteRequest\022\'\n\017organi"
  "zation_id\030\001 \001(\tR\016organizationId\022\024\n\005email"
  "\030\002 \001(\tR\005email\022B\n\016authorizations\030\003 \003(\0132\032."
  "viam.app.v1.AuthorizationR\016authorization"
  "s\"[\n CreateOrganizationInviteResponse\0227\n"
  "\006invite\030\001 \001(\0132\037.viam.app.v1.Organization"
  "InviteR\006invite\"\212\002\n-UpdateOrganizationInv"
  "iteAuthorizationsRequest\022\'\n\017organization"
  "_id\030\001 \001(\tR\016organizationId\022\024\n\005email\030\002 \001(\t"
  "R\005email\022I\n\022add_authorizations\030\003 \003(\0132\032.vi"
  "am.app.v1.AuthorizationR\021addAuthorizatio"
  "ns\022O\n\025remove_authorizations\030\004 \003(\0132\032.viam"
  ".app.v1.AuthorizationR\024removeAuthorizati"
  "ons\"i\n.UpdateOrganizationInviteAuthoriza"
  "tionsResponse\0227\n\006invite\030\001 \001(\0132\037.viam.app"
  ".v1.OrganizationInviteR\006invite\"`\n\037Delete"
  "OrganizationInviteRequest\022\'\n\017organizatio"
  "n_id\030\001 \001(\tR\016organizationId\022\024\n\005email\030\002 \001("
  "\tR\005email\"\"\n DeleteOrganizationInviteResp"
  "onse\"`\n\037ResendOrganizationInviteRequest\022"
  "\'\n\017organization_id\030\001 \001(\tR\016organizationId"
  "\022\024\n\005email\030\002 \001(\tR\005email\"[\n ResendOrganiza"
  "tionInviteResponse\0227\n\006invite\030\001 \001(\0132\037.via"
  "m.app.v1.OrganizationInviteR\006invite\"c\n\037D"
  "eleteOrganizationMemberRequest\022\'\n\017organi"
  "zation_id\030\001 \001(\tR\016organizationId\022\027\n\007user_"
  "id\030\002 \001(\tR\006userId\"\"\n DeleteOrganizationMe"
  "mberResponse\"Y\n\024LocationOrganization\022\'\n\017"
  "organization_id\030\001 \001(\tR\016organizationId\022\030\n"
  "\007primary\030\002 \001(\010R\007primary\"\200\001\n\014LocationAuth"
  "\022\032\n\006secret\030\001 \001(\tB\002\030\001R\006secret\022\037\n\013location"
  "_id\030\002 \001(\tR\nlocationId\0223\n\007secrets\030\003 \003(\0132\031"
  ".viam.app.v1.SharedSecretR\007secrets\"\'\n\rSt"
  "orageConfig\022\026\n\006region\030\001 \001(\tR\006region\"\344\002\n\010"
  "Location\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004"
  "name\022,\n\022parent_location_id\030\004 \001(\tR\020parent"
  "LocationId\022-\n\004auth\030\005 \001(\0132\031.viam.app.v1.L"
  "ocationAuthR\004auth\022G\n\rorganizations\030\006 \003(\013"
  "2!.viam.app.v1.LocationOrganizationR\rorg"
  "anizations\0229\n\ncreated_on\030\003 \001(\0132\032.google."
  "protobuf.TimestampR\tcreatedOn\022\037\n\013robot_c"
  "ount\030\007 \001(\005R\nrobotCount\0222\n\006config\030\010 \001(\0132\032"
  ".viam.app.v1.StorageConfigR\006config\"\320\002\n\014S"
  "haredSecret\022\036\n\002id\030\001 \001(\tB\016\232\204\236\003\tbson:\"id\"R"
  "\002id\022*\n\006secret\030\002 \001(\tB\022\232\204\236\003\rbson:\"secret\"R"
  "\006secret\022c\n\ncreated_on\030\003 \001(\0132\032.google.pro"
  "tobuf.TimestampB(\232\204\236\003#bson:\"created_on\" "
  "json:\"created_on\"R\tcreatedOn\022H\n\005state\030\004 "
  "\001(\0162\037.viam.app.v1.SharedSecret.StateB\021\232\204"
  "\236\003\014bson:\"state\"R\005state\"E\n\005State\022\025\n\021STATE"
  "_UNSPECIFIED\020\000\022\021\n\rSTATE_ENABLED\020\001\022\022\n\016STA"
  "TE_DISABLED\020\002\"\236\001\n\025CreateLocationRequest\022"
  "\'\n\017organization_id\030\001 \001(\tR\016organizationId"
  "\022\022\n\004name\030\002 \001(\tR\004name\0221\n\022parent_location_"
  "id\030\003 \001(\tH\000R\020parentLocationId\210\001\001B\025\n\023_pare"
  "nt_location_id\"K\n\026CreateLocationResponse"
  "\0221\n\010location\030\001 \001(\0132\025.viam.app.v1.Locatio"
  "nR\010location\"5\n\022GetLocationRequest\022\037\n\013loc"
  "ation_id\030\001 \001(\tR\nlocationId\"H\n\023GetLocatio"
  "nResponse\0221\n\010location\030\001 \001(\0132\025.viam.app.v"
  "1.LocationR\010location\"\314\001\n\025UpdateLocationR"
  "equest\022\037\n\013location_id\030\001 \001(\tR\nlocationId\022"
  "\027\n\004name\030\002 \001(\tH\000R\004name\210\001\001\0221\n\022parent_locat"
  "ion_id\030\003 \001(\tH\001R\020parentLocationId\210\001\001\022\033\n\006r"
  "egion\030\004 \001(\tH\002R\006region\210\001\001B\007\n\005_nameB\025\n\023_pa"
  "rent_location_idB\t\n\007_region\"K\n\026UpdateLoc"
  "ationResponse\0221\n\010location\030\001 \001(\0132\025.viam.a"
  "pp.v1.LocationR\010location\"8\n\025DeleteLocati"
  "onRequest\022\037\n\013location_id\030\001 \001(\tR\nlocation"
  "Id\"\030\n\026DeleteLocationResponse\"\?\n\024ListLoca"
  "tionsRequest\022\'\n\017organization_id\030\001 \001(\tR\016o"
  "rganizationId\"`\n\024ShareLocationRequest\022\037\n"
  "\013location_id\030\001 \001(\tR\nlocationId\022\'\n\017organi"
  "zation_id\030\002 \001(\tR\016organizationId\"\027\n\025Share"
  "LocationResponse\"b\n\026UnshareLocationReque"
  "st\022\037\n\013location_id\030\001 \001(\tR\nlocationId\022\'\n\017o"
  "rganization_id\030\002 \001(\tR\016organizationId\"\031\n\027"
  "UnshareLocationResponse\"L\n\025ListLocations"
  "Response\0223\n\tlocations\030\001 \003(\0132\025.viam.app.v"
  "1.LocationR\tlocations\">\n\033CreateLocationS"
  "ecretRequest\022\037\n\013location_id\030\001 \001(\tR\nlocat"
  "ionId\"M\n\034CreateLocationSecretResponse\022-\n"
  "\004auth\030\001 \001(\0132\031.viam.app.v1.LocationAuthR\004"
  "auth\"[\n\033DeleteLocationSecretRequest\022\037\n\013l"
  "ocation_id\030\001 \001(\tR\nlocationId\022\033\n\tsecret_i"
  "d\030\002 \001(\tR\010secretId\"\036\n\034DeleteLocationSecre"
  "tResponse\"6\n\023LocationAuthRequest\022\037\n\013loca"
  "tion_id\030\001 \001(\tR\nlocationId\"E\n\024LocationAut"
  "hResponse\022-\n\004auth\030\001 \001(\0132\031.viam.app.v1.Lo"
  "cationAuthR\004auth\"!\n\017GetRobotRequest\022\016\n\002i"
  "d\030\001 \001(\tR\002id\"4\n\033GetRoverRentalRobotsReque"
  "st\022\025\n\006org_id\030\001 \001(\tR\005orgId\"\232\001\n\020RoverRenta"
  "lRobot\022\031\n\010robot_id\030\001 \001(\tR\007robotId\022\037\n\013loc"
  "ation_id\030\002 \001(\tR\nlocationId\022\035\n\nrobot_name"
  "\030\003 \001(\tR\trobotName\022+\n\022robot_main_part_id\030"
  "\004 \001(\tR\017robotMainPartId\"U\n\034GetRoverRental"
  "RobotsResponse\0225\n\006robots\030\001 \003(\0132\035.viam.ap"
  "p.v1.RoverRentalRobotR\006robots\"<\n\020GetRobo"
  "tResponse\022(\n\005robot\030\001 \001(\0132\022.viam.app.v1.R"
  "obotR\005robot\"1\n\024GetRobotPartsRequest\022\031\n\010r"
  "obot_id\030\001 \001(\tR\007robotId\"E\n\025GetRobotPartsR"
  "esponse\022,\n\005parts\030\001 \003(\0132\026.viam.app.v1.Rob"
  "otPartR\005parts\"%\n\023GetRobotPartRequest\022\016\n\002"
  "id\030\001 \001(\tR\002id\"c\n\024GetRobotPartResponse\022*\n\004"
  "part\030\001 \001(\0132\026.viam.app.v1.RobotPartR\004part"
  "\022\037\n\013config_json\030\002 \001(\tR\nconfigJson\"\245\001\n\027Ge"
  "tRobotPartLogsRequest\022\016\n\002id\030\001 \001(\tR\002id\022\037\n"
  "\013errors_only\030\002 \001(\010R\nerrorsOnly\022\033\n\006filter"
  "\030\003 \001(\tH\000R\006filter\210\001\001\022\"\n\npage_token\030\004 \001(\tH"
  "\001R\tpageToken\210\001\001B\t\n\007_filterB\r\n\013_page_toke"
  "n\"\227\002\n\010LogEntry\022\022\n\004host\030\001 \001(\tR\004host\022\024\n\005le"
  "vel\030\002 \001(\tR\005level\022.\n\004time\030\003 \001(\0132\032.google."
  "protobuf.TimestampR\004time\022\037\n\013logger_name\030"
  "\004 \001(\tR\nloggerName\022\030\n\007message\030\005 \001(\tR\007mess"
  "age\022/\n\006caller\030\006 \001(\0132\027.google.protobuf.St"
  "ructR\006caller\022\024\n\005stack\030\007 \001(\tR\005stack\022/\n\006fi"
  "elds\030\010 \003(\0132\027.google.protobuf.StructR\006fie"
  "lds\"m\n\030GetRobotPartLogsResponse\022)\n\004logs\030"
  "\001 \003(\0132\025.viam.app.v1.LogEntryR\004logs\022&\n\017ne"
  "xt_page_token\030\002 \001(\tR\rnextPageToken\"s\n\030Ta"
  "ilRobotPartLogsRequest\022\016\n\002id\030\001 \001(\tR\002id\022\037"
  "\n\013errors_only\030\002 \001(\010R\nerrorsOnly\022\033\n\006filte"
  "r\030\003 \001(\tH\000R\006filter\210\001\001B\t\n\007_filter\"F\n\031TailR"
  "obotPartLogsResponse\022)\n\004logs\030\001 \003(\0132\025.via"
  "m.app.v1.LogEntryR\004logs\",\n\032GetRobotPartH"
  "istoryRequest\022\016\n\002id\030\001 \001(\tR\002id\"[\n\033GetRobo"
  "tPartHistoryResponse\022<\n\007history\030\001 \003(\0132\"."
  "viam.app.v1.RobotPartHistoryEntryR\007histo"
  "ry\"x\n\026UpdateRobotPartRequest\022\016\n\002id\030\001 \001(\t"
  "R\002id\022\022\n\004name\030\002 \001(\tR\004name\022:\n\014robot_config"
  "\030\003 \001(\0132\027.google.protobuf.StructR\013robotCo"
  "nfig\"E\n\027UpdateRobotPartResponse\022*\n\004part\030"
  "\001 \001(\0132\026.viam.app.v1.RobotPartR\004part\"M\n\023N"
  "ewRobotPartRequest\022\031\n\010robot_id\030\001 \001(\tR\007ro"
  "botId\022\033\n\tpart_name\030\002 \001(\tR\010partName\"/\n\024Ne"
  "wRobotPartResponse\022\027\n\007part_id\030\001 \001(\tR\006par"
  "tId\"1\n\026DeleteRobotPartRequest\022\027\n\007part_id"
  "\030\001 \001(\tR\006partId\"\031\n\027DeleteRobotPartRespons"
  "e\"\350\004\n\010Fragment\0223\n\002id\030\001 \001(\tB#\232\204\236\003\036bson:\"_"
  "id\" json:\"id,omitempty\"R\002id\0220\n\004name\030\002 \001("
  "\tB\034\232\204\236\003\027bson:\"name\" json:\"name\"R\004name\022Y\n"
  "\010fragment\030\003 \001(\0132\027.google.protobuf.Struct"
  "B$\232\204\236\003\037bson:\"fragment\" json:\"fragment\"R\010"
  "fragment\022Z\n\022organization_owner\030\004 \001(\tB+\232\204"
  "\236\003&bson:\"organization_owner\" json:\"owner"
  "\"R\021organizationOwner\0228\n\006public\030\005 \001(\010B \232\204"
  "\236\003\033bson:\"public\" json:\"public\"R\006public\022Q"
  "\n\ncreated_on\030\006 \001(\0132\032.google.protobuf.Tim"
  "estampB\026\232\204\236\003\021bson:\"created_on\"R\tcreatedO"
  "n\022+\n\021organization_name\030\007 \001(\tR\020organizati"
  "onName\022(\n\020robot_part_count\030\t \001(\005R\016robotP"
  "artCount\022-\n\022organization_count\030\n \001(\005R\021or"
  "ganizationCount\022+\n\022only_used_by_owner\030\013 "
  "\001(\010R\017onlyUsedByOwner\"`\n\024ListFragmentsReq"
  "uest\022\'\n\017organization_id\030\001 \001(\tR\016organizat"
  "ionId\022\037\n\013show_public\030\002 \001(\010R\nshowPublic\"L"
  "\n\025ListFragmentsResponse\0223\n\tfragments\030\001 \003"
  "(\0132\025.viam.app.v1.FragmentR\tfragments\"$\n\022"
  "GetFragmentRequest\022\016\n\002id\030\001 \001(\tR\002id\"H\n\023Ge"
  "tFragmentResponse\0221\n\010fragment\030\001 \001(\0132\025.vi"
  "am.app.v1.FragmentR\010fragment\"\205\001\n\025CreateF"
  "ragmentRequest\022\022\n\004name\030\001 \001(\tR\004name\022/\n\006co"
  "nfig\030\002 \001(\0132\027.google.protobuf.StructR\006con"
  "fig\022\'\n\017organization_id\030\003 \001(\tR\016organizati"
  "onId\"K\n\026CreateFragmentResponse\0221\n\010fragme"
  "nt\030\001 \001(\0132\025.viam.app.v1.FragmentR\010fragmen"
  "t\"\224\001\n\025UpdateFragmentRequest\022\016\n\002id\030\001 \001(\tR"
  "\002id\022\022\n\004name\030\002 \001(\tR\004name\022/\n\006config\030\003 \001(\0132"
  "\027.google.protobuf.StructR\006config\022\033\n\006publ"
  "ic\030\004 \001(\010H\000R\006public\210\001\001B\t\n\007_public\"K\n\026Upda"
  "teFragmentResponse\0221\n\010fragment\030\001 \001(\0132\025.v"
  "iam.app.v1.FragmentR\010fragment\"\'\n\025DeleteF"
  "ragmentRequest\022\016\n\002id\030\001 \001(\tR\002id\"\030\n\026Delete"
  "FragmentResponse\"4\n\021ListRobotsRequest\022\037\n"
  "\013location_id\030\001 \001(\tR\nlocationId\"@\n\022ListRo"
  "botsResponse\022*\n\006robots\030\001 \003(\0132\022.viam.app."
  "v1.RobotR\006robots\"A\n\017NewRobotRequest\022\022\n\004n"
  "ame\030\001 \001(\tR\004name\022\032\n\010location\030\002 \001(\tR\010locat"
  "ion\"\"\n\020NewRobotResponse\022\016\n\002id\030\001 \001(\tR\002id\""
  "T\n\022UpdateRobotRequest\022\016\n\002id\030\001 \001(\tR\002id\022\022\n"
  "\004name\030\002 \001(\tR\004name\022\032\n\010location\030\003 \001(\tR\010loc"
  "ation\"\?\n\023UpdateRobotResponse\022(\n\005robot\030\001 "
  "\001(\0132\022.viam.app.v1.RobotR\005robot\"$\n\022Delete"
  "RobotRequest\022\016\n\002id\030\001 \001(\tR\002id\"\025\n\023DeleteRo"
  "botResponse\"0\n\025MarkPartAsMainRequest\022\027\n\007"
  "part_id\030\001 \001(\tR\006partId\"\030\n\026MarkPartAsMainR"
  "esponse\"4\n\031MarkPartForRestartRequest\022\027\n\007"
  "part_id\030\001 \001(\tR\006partId\"\034\n\032MarkPartForRest"
  "artResponse\"7\n\034CreateRobotPartSecretRequ"
  "est\022\027\n\007part_id\030\001 \001(\tR\006partId\"K\n\035CreateRo"
  "botPartSecretResponse\022*\n\004part\030\001 \001(\0132\026.vi"
  "am.app.v1.RobotPartR\004part\"T\n\034DeleteRobot"
  "PartSecretRequest\022\027\n\007part_id\030\001 \001(\tR\006part"
  "Id\022\033\n\tsecret_id\030\002 \001(\tR\010secretId\"\037\n\035Delet"
  "eRobotPartSecretResponse\"\371\001\n\rAuthorizati"
  "on\022-\n\022authorization_type\030\001 \001(\tR\021authoriz"
  "ationType\022)\n\020authorization_id\030\002 \001(\tR\017aut"
  "horizationId\022#\n\rresource_type\030\003 \001(\tR\014res"
  "ourceType\022\037\n\013resource_id\030\004 \001(\tR\nresource"
  "Id\022\037\n\013identity_id\030\005 \001(\tR\nidentityId\022\'\n\017o"
  "rganization_id\030\006 \001(\tR\016organizationId\"R\n\016"
  "AddRoleRequest\022@\n\rauthorization\030\001 \001(\0132\032."
  "viam.app.v1.AuthorizationR\rauthorization"
  "\"\021\n\017AddRoleResponse\"U\n\021RemoveRoleRequest"
  "\022@\n\rauthorization\030\001 \001(\0132\032.viam.app.v1.Au"
  "thorizationR\rauthorization\"\024\n\022RemoveRole"
  "Response\"g\n\031ListAuthorizationsRequest\022\'\n"
  "\017organization_id\030\001 \001(\tR\016organizationId\022!"
  "\n\014resource_ids\030\002 \003(\tR\013resourceIds\"`\n\032Lis"
  "tAuthorizationsResponse\022B\n\016authorization"
  "s\030\001 \003(\0132\032.viam.app.v1.AuthorizationR\016aut"
  "horizations\"_\n\027CheckPermissionsRequest\022D"
  "\n\013permissions\030\001 \003(\0132\".viam.app.v1.Author"
  "izedPermissionsR\013permissions\"\177\n\025Authoriz"
  "edPermissions\022#\n\rresource_type\030\001 \001(\tR\014re"
  "sourceType\022\037\n\013resource_id\030\002 \001(\tR\nresourc"
  "eId\022 \n\013permissions\030\003 \003(\tR\013permissions\"u\n"
  "\030CheckPermissionsResponse\022Y\n\026authorized_"
  "permissions\030\001 \003(\0132\".viam.app.v1.Authoriz"
  "edPermissionsR\025authorizedPermissions\"R\n\023"
  "CreateModuleRequest\022\'\n\017organization_id\030\001"
  " \001(\tR\016organizationId\022\022\n\004name\030\002 \001(\tR\004name"
  "\"E\n\024CreateModuleResponse\022\033\n\tmodule_id\030\001 "
  "\001(\tR\010moduleId\022\020\n\003url\030\002 \001(\tR\003url\"\255\002\n\023Upda"
  "teModuleRequest\022\033\n\tmodule_id\030\001 \001(\tR\010modu"
  "leId\022,\n\017organization_id\030\007 \001(\tH\000R\016organiz"
  "ationId\210\001\001\0227\n\nvisibility\030\002 \001(\0162\027.viam.ap"
  "p.v1.VisibilityR\nvisibility\022\020\n\003url\030\003 \001(\t"
  "R\003url\022 \n\013description\030\004 \001(\tR\013description\022"
  "*\n\006models\030\005 \003(\0132\022.viam.app.v1.ModelR\006mod"
  "els\022\036\n\nentrypoint\030\006 \001(\tR\nentrypointB\022\n\020_"
  "organization_id\"(\n\024UpdateModuleResponse\022"
  "\020\n\003url\030\001 \001(\tR\003url\"/\n\005Model\022\020\n\003api\030\001 \001(\tR"
  "\003api\022\024\n\005model\030\002 \001(\tR\005model\"\245\001\n\016ModuleFil"
  "eInfo\022\033\n\tmodule_id\030\001 \001(\tR\010moduleId\022,\n\017or"
  "ganization_id\030\004 \001(\tH\000R\016organizationId\210\001\001"
  "\022\030\n\007version\030\002 \001(\tR\007version\022\032\n\010platform\030\003"
  " \001(\tR\010platformB\022\n\020_organization_id\"\207\001\n\027U"
  "ploadModuleFileRequest\022G\n\020module_file_in"
  "fo\030\001 \001(\0132\033.viam.app.v1.ModuleFileInfoH\000R"
  "\016moduleFileInfo\022\024\n\004file\030\002 \001(\014H\000R\004fileB\r\n"
  "\013module_file\",\n\030UploadModuleFileResponse"
  "\022\020\n\003url\030\001 \001(\tR\003url\"q\n\020GetModuleRequest\022\033"
  "\n\tmodule_id\030\001 \001(\tR\010moduleId\022,\n\017organizat"
  "ion_id\030\002 \001(\tH\000R\016organizationId\210\001\001B\022\n\020_or"
  "ganization_id\"@\n\021GetModuleResponse\022+\n\006mo"
  "dule\030\001 \001(\0132\023.viam.app.v1.ModuleR\006module\""
  "\272\003\n\006Module\022\033\n\tmodule_id\030\001 \001(\tR\010moduleId\022"
  "\'\n\017organization_id\030\n \001(\tR\016organizationId"
  "\022\022\n\004name\030\002 \001(\tR\004name\0227\n\nvisibility\030\003 \001(\016"
  "2\027.viam.app.v1.VisibilityR\nvisibility\0227\n"
  "\010versions\030\004 \003(\0132\033.viam.app.v1.VersionHis"
  "toryR\010versions\022\020\n\003url\030\005 \001(\tR\003url\022 \n\013desc"
  "ription\030\006 \001(\tR\013description\022*\n\006models\030\007 \003"
  "(\0132\022.viam.app.v1.ModelR\006models\022\036\n\nentryp"
  "oint\030\013 \001(\tR\nentrypoint\022*\n\021total_robot_us"
  "age\030\010 \001(\003R\017totalRobotUsage\0228\n\030total_orga"
  "nization_usage\030\t \001(\003R\026totalOrganizationU"
  "sage\"V\n\016VersionHistory\022\030\n\007version\030\001 \001(\tR"
  "\007version\022*\n\005files\030\002 \003(\0132\024.viam.app.v1.Up"
  "loadsR\005files\"b\n\007Uploads\022\032\n\010platform\030\001 \001("
  "\tR\010platform\022;\n\013uploaded_at\030\002 \001(\0132\032.googl"
  "e.protobuf.TimestampR\nuploadedAt\"V\n\022List"
  "ModulesRequest\022,\n\017organization_id\030\001 \001(\tH"
  "\000R\016organizationId\210\001\001B\022\n\020_organization_id"
  "\"D\n\023ListModulesResponse\022-\n\007modules\030\001 \003(\013"
  "2\023.viam.app.v1.ModuleR\007modules\"/\n\027GetUse"
  "rIDByEmailRequest\022\024\n\005email\030\001 \001(\tR\005email\""
  "3\n\030GetUserIDByEmailResponse\022\027\n\007user_id\030\001"
  " \001(\tR\006userId\"9\n\036ListOrganizationsByUserR"
  "equest\022\027\n\007user_id\030\001 \001(\tR\006userId\">\n\nOrgDe"
  "tails\022\025\n\006org_id\030\001 \001(\tR\005orgId\022\031\n\010org_name"
  "\030\002 \001(\tR\007orgName\"N\n\037ListOrganizationsByUs"
  "erResponse\022+\n\004orgs\030\001 \003(\0132\027.viam.app.v1.O"
  "rgDetailsR\004orgs*W\n\nVisibility\022\032\n\026VISIBIL"
  "ITY_UNSPECIFIED\020\000\022\026\n\022VISIBILITY_PRIVATE\020"
  "\001\022\025\n\021VISIBILITY_PUBLIC\020\0022\334*\n\nAppService\022"
  "_\n\020GetUserIDByEmail\022$.viam.app.v1.GetUse"
  "rIDByEmailRequest\032%.viam.app.v1.GetUserI"
  "DByEmailResponse\022e\n\022CreateOrganization\022&"
  ".viam.app.v1.CreateOrganizationRequest\032\'"
  ".viam.app.v1.CreateOrganizationResponse\022"
  "b\n\021ListOrganizations\022%.viam.app.v1.ListO"
  "rganizationsRequest\032&.viam.app.v1.ListOr"
  "ganizationsResponse\022t\n\027ListOrganizations"
  "ByUser\022+.viam.app.v1.ListOrganizationsBy"
  "UserRequest\032,.viam.app.v1.ListOrganizati"
  "onsByUserResponse\022\\\n\017GetOrganization\022#.v"
  "iam.app.v1.GetOrganizationRequest\032$.viam"
  ".app.v1.GetOrganizationResponse\022\233\001\n$GetO"
  "rganizationNamespaceAvailability\0228.viam."
  "app.v1.GetOrganizationNamespaceAvailabil"
  "ityRequest\0329.viam.app.v1.GetOrganization"
  "NamespaceAvailabilityResponse\022e\n\022UpdateO"
  "rganization\022&.viam.app.v1.UpdateOrganiza"
  "tionRequest\032\'.viam.app.v1.UpdateOrganiza"
  "tionResponse\022e\n\022DeleteOrganization\022&.via"
  "m.app.v1.DeleteOrganizationRequest\032\'.via"
  "m.app.v1.DeleteOrganizationResponse\022t\n\027L"
  "istOrganizationMembers\022+.viam.app.v1.Lis"
  "tOrganizationMembersRequest\032,.viam.app.v"
  "1.ListOrganizationMembersResponse\022w\n\030Cre"
  "ateOrganizationInvite\022,.viam.app.v1.Crea"
  "teOrganizationInviteRequest\032-.viam.app.v"
  "1.CreateOrganizationInviteResponse\022\241\001\n&U"
  "pdateOrganizationInviteAuthorizations\022:."
  "viam.app.v1.UpdateOrganizationInviteAuth"
  "orizationsRequest\032;.viam.app.v1.UpdateOr"
  "ganizationInviteAuthorizationsResponse\022w"
  "\n\030DeleteOrganizationMember\022,.viam.app.v1"
  ".DeleteOrganizationMemberRequest\032-.viam."
  "app.v1.DeleteOrganizationMemberResponse\022"
  "w\n\030DeleteOrganizationInvite\022,.viam.app.v"
  "1.DeleteOrganizationInviteRequest\032-.viam"
  ".app.v1.DeleteOrganizationInviteResponse"
  "\022w\n\030ResendOrganizationInvite\022,.viam.app."
  "v1.ResendOrganizationInviteRequest\032-.via"
  "m.app.v1.ResendOrganizationInviteRespons"
  "e\022Y\n\016CreateLocation\022\".viam.app.v1.Create"
  "LocationRequest\032#.viam.app.v1.CreateLoca"
  "tionResponse\022P\n\013GetLocation\022\037.viam.app.v"
  "1.GetLocationRequest\032 .viam.app.v1.GetLo"
  "cationResponse\022Y\n\016UpdateLocation\022\".viam."
  "app.v1.UpdateLocationRequest\032#.viam.app."
  "v1.UpdateLocationResponse\022Y\n\016DeleteLocat"
  "ion\022\".viam.app.v1.DeleteLocationRequest\032"
  "#.viam.app.v1.DeleteLocationResponse\022V\n\r"
  "ListLocations\022!.viam.app.v1.ListLocation"
  "sRequest\032\".viam.app.v1.ListLocationsResp"
  "onse\022V\n\rShareLocation\022!.viam.app.v1.Shar"
  "eLocationRequest\032\".viam.app.v1.ShareLoca"
  "tionResponse\022\\\n\017UnshareLocation\022#.viam.a"
  "pp.v1.UnshareLocationRequest\032$.viam.app."
  "v1.UnshareLocationResponse\022S\n\014LocationAu"
  "th\022 .viam.app.v1.LocationAuthRequest\032!.v"
  "iam.app.v1.LocationAuthResponse\022k\n\024Creat"
  "eLocationSecret\022(.viam.app.v1.CreateLoca"
  "tionSecretRequest\032).viam.app.v1.CreateLo"
  "cationSecretResponse\022k\n\024DeleteLocationSe"
  "cret\022(.viam.app.v1.DeleteLocationSecretR"
  "equest\032).viam.app.v1.DeleteLocationSecre"
  "tResponse\022G\n\010GetRobot\022\034.viam.app.v1.GetR"
  "obotRequest\032\035.viam.app.v1.GetRobotRespon"
  "se\022k\n\024GetRoverRentalRobots\022(.viam.app.v1"
  ".GetRoverRentalRobotsRequest\032).viam.app."
  "v1.GetRoverRentalRobotsResponse\022V\n\rGetRo"
  "botParts\022!.viam.app.v1.GetRobotPartsRequ"
  "est\032\".viam.app.v1.GetRobotPartsResponse\022"
  "S\n\014GetRobotPart\022 .viam.app.v1.GetRobotPa"
  "rtRequest\032!.viam.app.v1.GetRobotPartResp"
  "onse\022_\n\020GetRobotPartLogs\022$.viam.app.v1.G"
  "etRobotPartLogsRequest\032%.viam.app.v1.Get"
  "RobotPartLogsResponse\022d\n\021TailRobotPartLo"
  "gs\022%.viam.app.v1.TailRobotPartLogsReques"
  "t\032&.viam.app.v1.TailRobotPartLogsRespons"
  "e0\001\022h\n\023GetRobotPartHistory\022\'.viam.app.v1"
  ".GetRobotPartHistoryRequest\032(.viam.app.v"
  "1.GetRobotPartHistoryResponse\022\\\n\017UpdateR"
  "obotPart\022#.viam.app.v1.UpdateRobotPartRe"
  "quest\032$.viam.app.v1.UpdateRobotPartRespo"
  "nse\022S\n\014NewRobotPart\022 .viam.app.v1.NewRob"
  "otPartRequest\032!.viam.app.v1.NewRobotPart"
  "Response\022\\\n\017DeleteRobotPart\022#.viam.app.v"
  "1.DeleteRobotPartRequest\032$.viam.app.v1.D"
  "eleteRobotPartResponse\022Y\n\016MarkPartAsMain"
  "\022\".viam.app.v1.MarkPartAsMainRequest\032#.v"
  "iam.app.v1.MarkPartAsMainResponse\022e\n\022Mar"
  "kPartForRestart\022&.viam.app.v1.MarkPartFo"
  "rRestartRequest\032\'.viam.app.v1.MarkPartFo"
  "rRestartResponse\022n\n\025CreateRobotPartSecre"
  "t\022).viam.app.v1.CreateRobotPartSecretReq"
  "uest\032*.viam.app.v1.CreateRobotPartSecret"
  "Response\022n\n\025DeleteRobotPartSecret\022).viam"
  ".app.v1.DeleteRobotPartSecretRequest\032*.v"
  "iam.app.v1.DeleteRobotPartSecretResponse"
  "\022M\n\nListRobots\022\036.viam.app.v1.ListRobotsR"
  "equest\032\037.viam.app.v1.ListRobotsResponse\022"
  "G\n\010NewRobot\022\034.viam.app.v1.NewRobotReques"
  "t\032\035.viam.app.v1.NewRobotResponse\022P\n\013Upda"
  "teRobot\022\037.viam.app.v1.UpdateRobotRequest"
  "\032 .viam.app.v1.UpdateRobotResponse\022P\n\013De"
  "leteRobot\022\037.viam.app.v1.DeleteRobotReque"
  "st\032 .viam.app.v1.DeleteRobotResponse\022V\n\r"
  "ListFragments\022!.viam.app.v1.ListFragment"
  "sRequest\032\".viam.app.v1.ListFragmentsResp"
  "onse\022P\n\013GetFragment\022\037.viam.app.v1.GetFra"
  "gmentRequest\032 .viam.app.v1.GetFragmentRe"
  "sponse\022Y\n\016CreateFragment\022\".viam.app.v1.C"
  "reateFragmentRequest\032#.viam.app.v1.Creat"
  "eFragmentResponse\022Y\n\016UpdateFragment\022\".vi"
  "am.app.v1.UpdateFragmentRequest\032#.viam.a"
  "pp.v1.UpdateFragmentResponse\022Y\n\016DeleteFr"
  "agment\022\".viam.app.v1.DeleteFragmentReque"
  "st\032#.viam.app.v1.DeleteFragmentResponse\022"
  "D\n\007AddRole\022\033.viam.app.v1.AddRoleRequest\032"
  "\034.viam.app.v1.AddRoleResponse\022M\n\nRemoveR"
  "ole\022\036.viam.app.v1.RemoveRoleRequest\032\037.vi"
  "am.app.v1.RemoveRoleResponse\022e\n\022ListAuth"
  "orizations\022&.viam.app.v1.ListAuthorizati"
  "onsRequest\032\'.viam.app.v1.ListAuthorizati"
  "onsResponse\022_\n\020CheckPermissions\022$.viam.a"
  "pp.v1.CheckPermissionsRequest\032%.viam.app"
  ".v1.CheckPermissionsResponse\022S\n\014CreateMo"
  "dule\022 .viam.app.v1.CreateModuleRequest\032!"
  ".viam.app.v1.CreateModuleResponse\022S\n\014Upd"
  "ateModule\022 .viam.app.v1.UpdateModuleRequ"
  "est\032!.viam.app.v1.UpdateModuleResponse\022a"
  "\n\020UploadModuleFile\022$.viam.app.v1.UploadM"
  "oduleFileRequest\032%.viam.app.v1.UploadMod"
  "uleFileResponse(\001\022J\n\tGetModule\022\035.viam.ap"
  "p.v1.GetModuleRequest\032\036.viam.app.v1.GetM"
  "oduleResponse\022P\n\013ListModules\022\037.viam.app."
  "v1.ListModulesRequest\032 .viam.app.v1.List"
  "ModulesResponseB\030Z\026go.viam.com/api/app/v"
  "1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_app_2fv1_2fapp_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_tagger_2fv1_2ftagger_2eproto,
};
static ::_pbi::once_flag descriptor_table_app_2fv1_2fapp_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_app_2fv1_2fapp_2eproto = {
    false, false, 20089, descriptor_table_protodef_app_2fv1_2fapp_2eproto,
    "app/v1/app.proto",
    &descriptor_table_app_2fv1_2fapp_2eproto_once, descriptor_table_app_2fv1_2fapp_2eproto_deps, 3, 134,
    schemas, file_default_instances, TableStruct_app_2fv1_2fapp_2eproto::offsets,
    file_level_metadata_app_2fv1_2fapp_2eproto, file_level_enum_descriptors_app_2fv1_2fapp_2eproto,
    file_level_service_descriptors_app_2fv1_2fapp_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_app_2fv1_2fapp_2eproto_getter() {
  return &descriptor_table_app_2fv1_2fapp_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_app_2fv1_2fapp_2eproto(&descriptor_table_app_2fv1_2fapp_2eproto);
namespace viam {
namespace app {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SharedSecret_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fv1_2fapp_2eproto);
  return file_level_enum_descriptors_app_2fv1_2fapp_2eproto[0];
}
bool SharedSecret_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr SharedSecret_State SharedSecret::STATE_UNSPECIFIED;
constexpr SharedSecret_State SharedSecret::STATE_ENABLED;
constexpr SharedSecret_State SharedSecret::STATE_DISABLED;
constexpr SharedSecret_State SharedSecret::State_MIN;
constexpr SharedSecret_State SharedSecret::State_MAX;
constexpr int SharedSecret::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Visibility_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fv1_2fapp_2eproto);
  return file_level_enum_descriptors_app_2fv1_2fapp_2eproto[1];
}
bool Visibility_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Robot::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_access(const Robot* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const Robot* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Robot::_Internal::last_access(const Robot* msg) {
  return *msg->last_access_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Robot::_Internal::created_on(const Robot* msg) {
  return *msg->created_on_;
}
void Robot::clear_last_access() {
  if (GetArenaForAllocation() == nullptr && last_access_ != nullptr) {
    delete last_access_;
  }
  last_access_ = nullptr;
}
void Robot::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
Robot::Robot(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Robot)
}
Robot::Robot(const Robot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    location_.Set(from._internal_location(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_last_access()) {
    last_access_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_access_);
  } else {
    last_access_ = nullptr;
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Robot)
}

inline void Robot::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&last_access_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&created_on_) -
    reinterpret_cast<char*>(&last_access_)) + sizeof(created_on_));
}

Robot::~Robot() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Robot)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Robot::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  location_.Destroy();
  if (this != internal_default_instance()) delete last_access_;
  if (this != internal_default_instance()) delete created_on_;
}

void Robot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Robot::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Robot)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  location_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && last_access_ != nullptr) {
    delete last_access_;
  }
  last_access_ = nullptr;
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Robot::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Robot.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Robot.name"));
        } else
          goto handle_unusual;
        continue;
      // string location = 3 [json_name = "location", (.tagger.v1.tags) = "bson:\"location\" json:\"location\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Robot.location"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_access = 4 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_access(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 5 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Robot::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Robot)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Robot.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Robot.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string location = 3 [json_name = "location", (.tagger.v1.tags) = "bson:\"location\" json:\"location\""];
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Robot.location");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_location(), target);
  }

  // .google.protobuf.Timestamp last_access = 4 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
  if (this->_internal_has_last_access()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::last_access(this),
        _Internal::last_access(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp created_on = 5 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Robot)
  return target;
}

size_t Robot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Robot)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string location = 3 [json_name = "location", (.tagger.v1.tags) = "bson:\"location\" json:\"location\""];
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // .google.protobuf.Timestamp last_access = 4 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
  if (this->_internal_has_last_access()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_access_);
  }

  // .google.protobuf.Timestamp created_on = 5 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Robot::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Robot::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Robot::GetClassData() const { return &_class_data_; }

void Robot::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Robot *>(to)->MergeFrom(
      static_cast<const Robot &>(from));
}


void Robot::MergeFrom(const Robot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Robot)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_location().empty()) {
    _internal_set_location(from._internal_location());
  }
  if (from._internal_has_last_access()) {
    _internal_mutable_last_access()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_access());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Robot::CopyFrom(const Robot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Robot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Robot::IsInitialized() const {
  return true;
}

void Robot::InternalSwap(Robot* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_, lhs_arena,
      &other->location_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Robot, created_on_)
      + sizeof(Robot::created_on_)
      - PROTOBUF_FIELD_OFFSET(Robot, last_access_)>(
          reinterpret_cast<char*>(&last_access_),
          reinterpret_cast<char*>(&other->last_access_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Robot::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[0]);
}

// ===================================================================

class RobotPart::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& robot_config(const RobotPart* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_access(const RobotPart* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& user_supplied_info(const RobotPart* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const RobotPart* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
RobotPart::_Internal::robot_config(const RobotPart* msg) {
  return *msg->robot_config_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RobotPart::_Internal::last_access(const RobotPart* msg) {
  return *msg->last_access_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
RobotPart::_Internal::user_supplied_info(const RobotPart* msg) {
  return *msg->user_supplied_info_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RobotPart::_Internal::created_on(const RobotPart* msg) {
  return *msg->created_on_;
}
void RobotPart::clear_robot_config() {
  if (GetArenaForAllocation() == nullptr && robot_config_ != nullptr) {
    delete robot_config_;
  }
  robot_config_ = nullptr;
}
void RobotPart::clear_last_access() {
  if (GetArenaForAllocation() == nullptr && last_access_ != nullptr) {
    delete last_access_;
  }
  last_access_ = nullptr;
}
void RobotPart::clear_user_supplied_info() {
  if (GetArenaForAllocation() == nullptr && user_supplied_info_ != nullptr) {
    delete user_supplied_info_;
  }
  user_supplied_info_ = nullptr;
}
void RobotPart::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
RobotPart::RobotPart(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  secrets_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RobotPart)
}
RobotPart::RobotPart(const RobotPart& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      secrets_(from.secrets_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  secret_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret().empty()) {
    secret_.Set(from._internal_secret(), 
      GetArenaForAllocation());
  }
  robot_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot().empty()) {
    robot_.Set(from._internal_robot(), 
      GetArenaForAllocation());
  }
  fqdn_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    fqdn_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fqdn().empty()) {
    fqdn_.Set(from._internal_fqdn(), 
      GetArenaForAllocation());
  }
  dns_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dns_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dns_name().empty()) {
    dns_name_.Set(from._internal_dns_name(), 
      GetArenaForAllocation());
  }
  local_fqdn_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    local_fqdn_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_local_fqdn().empty()) {
    local_fqdn_.Set(from._internal_local_fqdn(), 
      GetArenaForAllocation());
  }
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_robot_config()) {
    robot_config_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.robot_config_);
  } else {
    robot_config_ = nullptr;
  }
  if (from._internal_has_last_access()) {
    last_access_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_access_);
  } else {
    last_access_ = nullptr;
  }
  if (from._internal_has_user_supplied_info()) {
    user_supplied_info_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.user_supplied_info_);
  } else {
    user_supplied_info_ = nullptr;
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  main_part_ = from.main_part_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RobotPart)
}

inline void RobotPart::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
secret_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
robot_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
fqdn_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  fqdn_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
dns_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dns_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
local_fqdn_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  local_fqdn_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&robot_config_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&main_part_) -
    reinterpret_cast<char*>(&robot_config_)) + sizeof(main_part_));
}

RobotPart::~RobotPart() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RobotPart)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RobotPart::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  secret_.Destroy();
  robot_.Destroy();
  fqdn_.Destroy();
  dns_name_.Destroy();
  local_fqdn_.Destroy();
  location_id_.Destroy();
  if (this != internal_default_instance()) delete robot_config_;
  if (this != internal_default_instance()) delete last_access_;
  if (this != internal_default_instance()) delete user_supplied_info_;
  if (this != internal_default_instance()) delete created_on_;
}

void RobotPart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RobotPart::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RobotPart)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secrets_.Clear();
  id_.ClearToEmpty();
  name_.ClearToEmpty();
  secret_.ClearToEmpty();
  robot_.ClearToEmpty();
  fqdn_.ClearToEmpty();
  dns_name_.ClearToEmpty();
  local_fqdn_.ClearToEmpty();
  location_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && robot_config_ != nullptr) {
    delete robot_config_;
  }
  robot_config_ = nullptr;
  if (GetArenaForAllocation() == nullptr && last_access_ != nullptr) {
    delete last_access_;
  }
  last_access_ = nullptr;
  if (GetArenaForAllocation() == nullptr && user_supplied_info_ != nullptr) {
    delete user_supplied_info_;
  }
  user_supplied_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  main_part_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RobotPart::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.name"));
        } else
          goto handle_unusual;
        continue;
      // string secret = 3 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\" json:\"secret,omitempty\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_secret();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.secret"));
        } else
          goto handle_unusual;
        continue;
      // string robot = 4 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_robot();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.robot"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct robot_config = 5 [json_name = "robotConfig", (.tagger.v1.tags) = "bson:\"config\" json:\"robot_config\""];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_access = 6 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_access(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct user_supplied_info = 7 [json_name = "userSuppliedInfo", (.tagger.v1.tags) = "bson:\"user_supplied_info\" json:\"user_supplied_info\""];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_supplied_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool main_part = 8 [json_name = "mainPart", (.tagger.v1.tags) = "bson:\"main_part\" json:\"main_part\""];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          main_part_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string fqdn = 9 [json_name = "fqdn"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_fqdn();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.fqdn"));
        } else
          goto handle_unusual;
        continue;
      // string dns_name = 10 [json_name = "dnsName", (.tagger.v1.tags) = "bson:\"dns_name\" json:\"dns_name\""];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_dns_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.dns_name"));
        } else
          goto handle_unusual;
        continue;
      // string local_fqdn = 11 [json_name = "localFqdn"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_local_fqdn();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.local_fqdn"));
        } else
          goto handle_unusual;
        continue;
      // string location_id = 12 [json_name = "locationId", (.tagger.v1.tags) = "bson:\"location_id\" json:\"-\""];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.location_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 13 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.SharedSecret secrets = 14 [json_name = "secrets", (.tagger.v1.tags) = "bson:\"secrets\""];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_secrets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RobotPart::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RobotPart)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string secret = 3 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\" json:\"secret,omitempty\""];
  if (!this->_internal_secret().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret().data(), static_cast<int>(this->_internal_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.secret");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_secret(), target);
  }

  // string robot = 4 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
  if (!this->_internal_robot().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot().data(), static_cast<int>(this->_internal_robot().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.robot");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_robot(), target);
  }

  // .google.protobuf.Struct robot_config = 5 [json_name = "robotConfig", (.tagger.v1.tags) = "bson:\"config\" json:\"robot_config\""];
  if (this->_internal_has_robot_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::robot_config(this),
        _Internal::robot_config(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp last_access = 6 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
  if (this->_internal_has_last_access()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::last_access(this),
        _Internal::last_access(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct user_supplied_info = 7 [json_name = "userSuppliedInfo", (.tagger.v1.tags) = "bson:\"user_supplied_info\" json:\"user_supplied_info\""];
  if (this->_internal_has_user_supplied_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::user_supplied_info(this),
        _Internal::user_supplied_info(this).GetCachedSize(), target, stream);
  }

  // bool main_part = 8 [json_name = "mainPart", (.tagger.v1.tags) = "bson:\"main_part\" json:\"main_part\""];
  if (this->_internal_main_part() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_main_part(), target);
  }

  // string fqdn = 9 [json_name = "fqdn"];
  if (!this->_internal_fqdn().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fqdn().data(), static_cast<int>(this->_internal_fqdn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.fqdn");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_fqdn(), target);
  }

  // string dns_name = 10 [json_name = "dnsName", (.tagger.v1.tags) = "bson:\"dns_name\" json:\"dns_name\""];
  if (!this->_internal_dns_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dns_name().data(), static_cast<int>(this->_internal_dns_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.dns_name");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_dns_name(), target);
  }

  // string local_fqdn = 11 [json_name = "localFqdn"];
  if (!this->_internal_local_fqdn().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_local_fqdn().data(), static_cast<int>(this->_internal_local_fqdn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.local_fqdn");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_local_fqdn(), target);
  }

  // string location_id = 12 [json_name = "locationId", (.tagger.v1.tags) = "bson:\"location_id\" json:\"-\""];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.location_id");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_location_id(), target);
  }

  // .google.protobuf.Timestamp created_on = 13 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.SharedSecret secrets = 14 [json_name = "secrets", (.tagger.v1.tags) = "bson:\"secrets\""];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_secrets_size()); i < n; i++) {
    const auto& repfield = this->_internal_secrets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(14, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RobotPart)
  return target;
}

size_t RobotPart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RobotPart)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.SharedSecret secrets = 14 [json_name = "secrets", (.tagger.v1.tags) = "bson:\"secrets\""];
  total_size += 1UL * this->_internal_secrets_size();
  for (const auto& msg : this->secrets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string secret = 3 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\" json:\"secret,omitempty\""];
  if (!this->_internal_secret().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret());
  }

  // string robot = 4 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
  if (!this->_internal_robot().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot());
  }

  // string fqdn = 9 [json_name = "fqdn"];
  if (!this->_internal_fqdn().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fqdn());
  }

  // string dns_name = 10 [json_name = "dnsName", (.tagger.v1.tags) = "bson:\"dns_name\" json:\"dns_name\""];
  if (!this->_internal_dns_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dns_name());
  }

  // string local_fqdn = 11 [json_name = "localFqdn"];
  if (!this->_internal_local_fqdn().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_local_fqdn());
  }

  // string location_id = 12 [json_name = "locationId", (.tagger.v1.tags) = "bson:\"location_id\" json:\"-\""];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // .google.protobuf.Struct robot_config = 5 [json_name = "robotConfig", (.tagger.v1.tags) = "bson:\"config\" json:\"robot_config\""];
  if (this->_internal_has_robot_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_config_);
  }

  // .google.protobuf.Timestamp last_access = 6 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
  if (this->_internal_has_last_access()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_access_);
  }

  // .google.protobuf.Struct user_supplied_info = 7 [json_name = "userSuppliedInfo", (.tagger.v1.tags) = "bson:\"user_supplied_info\" json:\"user_supplied_info\""];
  if (this->_internal_has_user_supplied_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *user_supplied_info_);
  }

  // .google.protobuf.Timestamp created_on = 13 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // bool main_part = 8 [json_name = "mainPart", (.tagger.v1.tags) = "bson:\"main_part\" json:\"main_part\""];
  if (this->_internal_main_part() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RobotPart::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RobotPart::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RobotPart::GetClassData() const { return &_class_data_; }

void RobotPart::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RobotPart *>(to)->MergeFrom(
      static_cast<const RobotPart &>(from));
}


void RobotPart::MergeFrom(const RobotPart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RobotPart)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  secrets_.MergeFrom(from.secrets_);
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_secret().empty()) {
    _internal_set_secret(from._internal_secret());
  }
  if (!from._internal_robot().empty()) {
    _internal_set_robot(from._internal_robot());
  }
  if (!from._internal_fqdn().empty()) {
    _internal_set_fqdn(from._internal_fqdn());
  }
  if (!from._internal_dns_name().empty()) {
    _internal_set_dns_name(from._internal_dns_name());
  }
  if (!from._internal_local_fqdn().empty()) {
    _internal_set_local_fqdn(from._internal_local_fqdn());
  }
  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (from._internal_has_robot_config()) {
    _internal_mutable_robot_config()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_robot_config());
  }
  if (from._internal_has_last_access()) {
    _internal_mutable_last_access()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_access());
  }
  if (from._internal_has_user_supplied_info()) {
    _internal_mutable_user_supplied_info()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_user_supplied_info());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_main_part() != 0) {
    _internal_set_main_part(from._internal_main_part());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RobotPart::CopyFrom(const RobotPart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RobotPart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotPart::IsInitialized() const {
  return true;
}

void RobotPart::InternalSwap(RobotPart* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  secrets_.InternalSwap(&other->secrets_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_, lhs_arena,
      &other->secret_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_, lhs_arena,
      &other->robot_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &fqdn_, lhs_arena,
      &other->fqdn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &dns_name_, lhs_arena,
      &other->dns_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &local_fqdn_, lhs_arena,
      &other->local_fqdn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RobotPart, main_part_)
      + sizeof(RobotPart::main_part_)
      - PROTOBUF_FIELD_OFFSET(RobotPart, robot_config_)>(
          reinterpret_cast<char*>(&robot_config_),
          reinterpret_cast<char*>(&other->robot_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RobotPart::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[1]);
}

// ===================================================================

class RobotPartHistoryEntry::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& when(const RobotPartHistoryEntry* msg);
  static const ::viam::app::v1::RobotPart& old(const RobotPartHistoryEntry* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RobotPartHistoryEntry::_Internal::when(const RobotPartHistoryEntry* msg) {
  return *msg->when_;
}
const ::viam::app::v1::RobotPart&
RobotPartHistoryEntry::_Internal::old(const RobotPartHistoryEntry* msg) {
  return *msg->old_;
}
void RobotPartHistoryEntry::clear_when() {
  if (GetArenaForAllocation() == nullptr && when_ != nullptr) {
    delete when_;
  }
  when_ = nullptr;
}
RobotPartHistoryEntry::RobotPartHistoryEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RobotPartHistoryEntry)
}
RobotPartHistoryEntry::RobotPartHistoryEntry(const RobotPartHistoryEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part().empty()) {
    part_.Set(from._internal_part(), 
      GetArenaForAllocation());
  }
  robot_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot().empty()) {
    robot_.Set(from._internal_robot(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_when()) {
    when_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.when_);
  } else {
    when_ = nullptr;
  }
  if (from._internal_has_old()) {
    old_ = new ::viam::app::v1::RobotPart(*from.old_);
  } else {
    old_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RobotPartHistoryEntry)
}

inline void RobotPartHistoryEntry::SharedCtor() {
part_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
robot_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&when_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&old_) -
    reinterpret_cast<char*>(&when_)) + sizeof(old_));
}

RobotPartHistoryEntry::~RobotPartHistoryEntry() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RobotPartHistoryEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RobotPartHistoryEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_.Destroy();
  robot_.Destroy();
  if (this != internal_default_instance()) delete when_;
  if (this != internal_default_instance()) delete old_;
}

void RobotPartHistoryEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RobotPartHistoryEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RobotPartHistoryEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_.ClearToEmpty();
  robot_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && when_ != nullptr) {
    delete when_;
  }
  when_ = nullptr;
  if (GetArenaForAllocation() == nullptr && old_ != nullptr) {
    delete old_;
  }
  old_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RobotPartHistoryEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part = 1 [json_name = "part", (.tagger.v1.tags) = "bson:\"part\" json:\"part\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPartHistoryEntry.part"));
        } else
          goto handle_unusual;
        continue;
      // string robot = 2 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_robot();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPartHistoryEntry.robot"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp when = 3 [json_name = "when", (.tagger.v1.tags) = "bson:\"when\" json:\"when\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_when(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.RobotPart old = 4 [json_name = "old", (.tagger.v1.tags) = "bson:\"old\" json:\"old\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_old(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RobotPartHistoryEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RobotPartHistoryEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part = 1 [json_name = "part", (.tagger.v1.tags) = "bson:\"part\" json:\"part\""];
  if (!this->_internal_part().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part().data(), static_cast<int>(this->_internal_part().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPartHistoryEntry.part");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part(), target);
  }

  // string robot = 2 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
  if (!this->_internal_robot().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot().data(), static_cast<int>(this->_internal_robot().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPartHistoryEntry.robot");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_robot(), target);
  }

  // .google.protobuf.Timestamp when = 3 [json_name = "when", (.tagger.v1.tags) = "bson:\"when\" json:\"when\""];
  if (this->_internal_has_when()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::when(this),
        _Internal::when(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.RobotPart old = 4 [json_name = "old", (.tagger.v1.tags) = "bson:\"old\" json:\"old\""];
  if (this->_internal_has_old()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::old(this),
        _Internal::old(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RobotPartHistoryEntry)
  return target;
}

size_t RobotPartHistoryEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RobotPartHistoryEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part = 1 [json_name = "part", (.tagger.v1.tags) = "bson:\"part\" json:\"part\""];
  if (!this->_internal_part().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part());
  }

  // string robot = 2 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
  if (!this->_internal_robot().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot());
  }

  // .google.protobuf.Timestamp when = 3 [json_name = "when", (.tagger.v1.tags) = "bson:\"when\" json:\"when\""];
  if (this->_internal_has_when()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *when_);
  }

  // .viam.app.v1.RobotPart old = 4 [json_name = "old", (.tagger.v1.tags) = "bson:\"old\" json:\"old\""];
  if (this->_internal_has_old()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *old_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RobotPartHistoryEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RobotPartHistoryEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RobotPartHistoryEntry::GetClassData() const { return &_class_data_; }

void RobotPartHistoryEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RobotPartHistoryEntry *>(to)->MergeFrom(
      static_cast<const RobotPartHistoryEntry &>(from));
}


void RobotPartHistoryEntry::MergeFrom(const RobotPartHistoryEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RobotPartHistoryEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part().empty()) {
    _internal_set_part(from._internal_part());
  }
  if (!from._internal_robot().empty()) {
    _internal_set_robot(from._internal_robot());
  }
  if (from._internal_has_when()) {
    _internal_mutable_when()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_when());
  }
  if (from._internal_has_old()) {
    _internal_mutable_old()->::viam::app::v1::RobotPart::MergeFrom(from._internal_old());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RobotPartHistoryEntry::CopyFrom(const RobotPartHistoryEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RobotPartHistoryEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotPartHistoryEntry::IsInitialized() const {
  return true;
}

void RobotPartHistoryEntry::InternalSwap(RobotPartHistoryEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_, lhs_arena,
      &other->part_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_, lhs_arena,
      &other->robot_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RobotPartHistoryEntry, old_)
      + sizeof(RobotPartHistoryEntry::old_)
      - PROTOBUF_FIELD_OFFSET(RobotPartHistoryEntry, when_)>(
          reinterpret_cast<char*>(&when_),
          reinterpret_cast<char*>(&other->when_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RobotPartHistoryEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[2]);
}

// ===================================================================

class ListOrganizationsRequest::_Internal {
 public:
};

ListOrganizationsRequest::ListOrganizationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationsRequest)
}
ListOrganizationsRequest::ListOrganizationsRequest(const ListOrganizationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[3]);
}

// ===================================================================

class Organization::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const Organization* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Organization::_Internal::created_on(const Organization* msg) {
  return *msg->created_on_;
}
void Organization::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
Organization::Organization(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Organization)
}
Organization::Organization(const Organization& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  public_namespace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    public_namespace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_public_namespace().empty()) {
    public_namespace_.Set(from._internal_public_namespace(), 
      GetArenaForAllocation());
  }
  default_region_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    default_region_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_default_region().empty()) {
    default_region_.Set(from._internal_default_region(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Organization)
}

inline void Organization::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
public_namespace_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  public_namespace_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
default_region_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  default_region_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
created_on_ = nullptr;
}

Organization::~Organization() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Organization)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Organization::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  public_namespace_.Destroy();
  default_region_.Destroy();
  if (this != internal_default_instance()) delete created_on_;
}

void Organization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Organization::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Organization)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  public_namespace_.ClearToEmpty();
  default_region_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Organization::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Organization.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Organization.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string public_namespace = 4 [json_name = "publicNamespace"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_public_namespace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Organization.public_namespace"));
        } else
          goto handle_unusual;
        continue;
      // string default_region = 5 [json_name = "defaultRegion"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_default_region();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Organization.default_region"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Organization::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Organization)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Organization.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Organization.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // string public_namespace = 4 [json_name = "publicNamespace"];
  if (!this->_internal_public_namespace().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_namespace().data(), static_cast<int>(this->_internal_public_namespace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Organization.public_namespace");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_public_namespace(), target);
  }

  // string default_region = 5 [json_name = "defaultRegion"];
  if (!this->_internal_default_region().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_region().data(), static_cast<int>(this->_internal_default_region().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Organization.default_region");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_default_region(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Organization)
  return target;
}

size_t Organization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Organization)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string public_namespace = 4 [json_name = "publicNamespace"];
  if (!this->_internal_public_namespace().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_namespace());
  }

  // string default_region = 5 [json_name = "defaultRegion"];
  if (!this->_internal_default_region().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_region());
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Organization::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Organization::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Organization::GetClassData() const { return &_class_data_; }

void Organization::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Organization *>(to)->MergeFrom(
      static_cast<const Organization &>(from));
}


void Organization::MergeFrom(const Organization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Organization)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_public_namespace().empty()) {
    _internal_set_public_namespace(from._internal_public_namespace());
  }
  if (!from._internal_default_region().empty()) {
    _internal_set_default_region(from._internal_default_region());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Organization::CopyFrom(const Organization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Organization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Organization::IsInitialized() const {
  return true;
}

void Organization::InternalSwap(Organization* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &public_namespace_, lhs_arena,
      &other->public_namespace_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &default_region_, lhs_arena,
      &other->default_region_, rhs_arena
  );
  swap(created_on_, other->created_on_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Organization::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[4]);
}

// ===================================================================

class OrganizationMember::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& date_added(const OrganizationMember* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
OrganizationMember::_Internal::date_added(const OrganizationMember* msg) {
  return *msg->date_added_;
}
void OrganizationMember::clear_date_added() {
  if (GetArenaForAllocation() == nullptr && date_added_ != nullptr) {
    delete date_added_;
  }
  date_added_ = nullptr;
}
OrganizationMember::OrganizationMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  emails_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrganizationMember)
}
OrganizationMember::OrganizationMember(const OrganizationMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      emails_(from.emails_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    user_id_.Set(from._internal_user_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_date_added()) {
    date_added_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.date_added_);
  } else {
    date_added_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrganizationMember)
}

inline void OrganizationMember::SharedCtor() {
user_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  user_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
date_added_ = nullptr;
}

OrganizationMember::~OrganizationMember() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OrganizationMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrganizationMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  user_id_.Destroy();
  if (this != internal_default_instance()) delete date_added_;
}

void OrganizationMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrganizationMember::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OrganizationMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  emails_.Clear();
  user_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && date_added_ != nullptr) {
    delete date_added_;
  }
  date_added_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrganizationMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1 [json_name = "userId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationMember.user_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated string emails = 2 [json_name = "emails"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_emails();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationMember.emails"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp date_added = 3 [json_name = "dateAdded"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_date_added(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrganizationMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OrganizationMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationMember.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // repeated string emails = 2 [json_name = "emails"];
  for (int i = 0, n = this->_internal_emails_size(); i < n; i++) {
    const auto& s = this->_internal_emails(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationMember.emails");
    target = stream->WriteString(2, s, target);
  }

  // .google.protobuf.Timestamp date_added = 3 [json_name = "dateAdded"];
  if (this->_internal_has_date_added()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::date_added(this),
        _Internal::date_added(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OrganizationMember)
  return target;
}

size_t OrganizationMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OrganizationMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string emails = 2 [json_name = "emails"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(emails_.size());
  for (int i = 0, n = emails_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      emails_.Get(i));
  }

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // .google.protobuf.Timestamp date_added = 3 [json_name = "dateAdded"];
  if (this->_internal_has_date_added()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *date_added_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrganizationMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationMember::GetClassData() const { return &_class_data_; }

void OrganizationMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrganizationMember *>(to)->MergeFrom(
      static_cast<const OrganizationMember &>(from));
}


void OrganizationMember::MergeFrom(const OrganizationMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OrganizationMember)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  emails_.MergeFrom(from.emails_);
  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_has_date_added()) {
    _internal_mutable_date_added()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_date_added());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrganizationMember::CopyFrom(const OrganizationMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OrganizationMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationMember::IsInitialized() const {
  return true;
}

void OrganizationMember::InternalSwap(OrganizationMember* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  emails_.InternalSwap(&other->emails_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &user_id_, lhs_arena,
      &other->user_id_, rhs_arena
  );
  swap(date_added_, other->date_added_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OrganizationMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[5]);
}

// ===================================================================

class ListOrganizationsResponse::_Internal {
 public:
};

ListOrganizationsResponse::ListOrganizationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  organizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationsResponse)
}
ListOrganizationsResponse::ListOrganizationsResponse(const ListOrganizationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationsResponse)
}

inline void ListOrganizationsResponse::SharedCtor() {
}

ListOrganizationsResponse::~ListOrganizationsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListOrganizationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListOrganizationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListOrganizationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListOrganizationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListOrganizationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListOrganizationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Organization organizations = 1 [json_name = "organizations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_organizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListOrganizationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListOrganizationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Organization organizations = 1 [json_name = "organizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_organizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_organizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListOrganizationsResponse)
  return target;
}

size_t ListOrganizationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListOrganizationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Organization organizations = 1 [json_name = "organizations"];
  total_size += 1UL * this->_internal_organizations_size();
  for (const auto& msg : this->organizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListOrganizationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationsResponse::GetClassData() const { return &_class_data_; }

void ListOrganizationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListOrganizationsResponse *>(to)->MergeFrom(
      static_cast<const ListOrganizationsResponse &>(from));
}


void ListOrganizationsResponse::MergeFrom(const ListOrganizationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListOrganizationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  organizations_.MergeFrom(from.organizations_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListOrganizationsResponse::CopyFrom(const ListOrganizationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListOrganizationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOrganizationsResponse::IsInitialized() const {
  return true;
}

void ListOrganizationsResponse::InternalSwap(ListOrganizationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  organizations_.InternalSwap(&other->organizations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[6]);
}

// ===================================================================

class OrganizationInvite::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const OrganizationInvite* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
OrganizationInvite::_Internal::created_on(const OrganizationInvite* msg) {
  return *msg->created_on_;
}
void OrganizationInvite::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
OrganizationInvite::OrganizationInvite(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrganizationInvite)
}
OrganizationInvite::OrganizationInvite(const OrganizationInvite& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  robot_count_ = from.robot_count_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrganizationInvite)
}

inline void OrganizationInvite::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&created_on_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&robot_count_) -
    reinterpret_cast<char*>(&created_on_)) + sizeof(robot_count_));
}

OrganizationInvite::~OrganizationInvite() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OrganizationInvite)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrganizationInvite::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  email_.Destroy();
  if (this != internal_default_instance()) delete created_on_;
}

void OrganizationInvite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrganizationInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OrganizationInvite)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  email_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  robot_count_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrganizationInvite::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationInvite.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationInvite.email"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 robot_count = 4 [json_name = "robotCount"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          robot_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrganizationInvite::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OrganizationInvite)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationInvite.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationInvite.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // int64 robot_count = 4 [json_name = "robotCount"];
  if (this->_internal_robot_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_robot_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OrganizationInvite)
  return target;
}

size_t OrganizationInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OrganizationInvite)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // int64 robot_count = 4 [json_name = "robotCount"];
  if (this->_internal_robot_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_robot_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationInvite::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrganizationInvite::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationInvite::GetClassData() const { return &_class_data_; }

void OrganizationInvite::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrganizationInvite *>(to)->MergeFrom(
      static_cast<const OrganizationInvite &>(from));
}


void OrganizationInvite::MergeFrom(const OrganizationInvite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OrganizationInvite)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_robot_count() != 0) {
    _internal_set_robot_count(from._internal_robot_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrganizationInvite::CopyFrom(const OrganizationInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OrganizationInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationInvite::IsInitialized() const {
  return true;
}

void OrganizationInvite::InternalSwap(OrganizationInvite* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrganizationInvite, robot_count_)
      + sizeof(OrganizationInvite::robot_count_)
      - PROTOBUF_FIELD_OFFSET(OrganizationInvite, created_on_)>(
          reinterpret_cast<char*>(&created_on_),
          reinterpret_cast<char*>(&other->created_on_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OrganizationInvite::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[7]);
}

// ===================================================================

class CreateOrganizationRequest::_Internal {
 public:
};

CreateOrganizationRequest::CreateOrganizationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateOrganizationRequest)
}
CreateOrganizationRequest::CreateOrganizationRequest(const CreateOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateOrganizationRequest)
}

inline void CreateOrganizationRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateOrganizationRequest::~CreateOrganizationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateOrganizationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateOrganizationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void CreateOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateOrganizationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateOrganizationRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateOrganizationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateOrganizationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateOrganizationRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateOrganizationRequest)
  return target;
}

size_t CreateOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateOrganizationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateOrganizationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateOrganizationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateOrganizationRequest::GetClassData() const { return &_class_data_; }

void CreateOrganizationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateOrganizationRequest *>(to)->MergeFrom(
      static_cast<const CreateOrganizationRequest &>(from));
}


void CreateOrganizationRequest::MergeFrom(const CreateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateOrganizationRequest::CopyFrom(const CreateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationRequest::IsInitialized() const {
  return true;
}

void CreateOrganizationRequest::InternalSwap(CreateOrganizationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[8]);
}

// ===================================================================

class CreateOrganizationResponse::_Internal {
 public:
  static const ::viam::app::v1::Organization& organization(const CreateOrganizationResponse* msg);
};

const ::viam::app::v1::Organization&
CreateOrganizationResponse::_Internal::organization(const CreateOrganizationResponse* msg) {
  return *msg->organization_;
}
CreateOrganizationResponse::CreateOrganizationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateOrganizationResponse)
}
CreateOrganizationResponse::CreateOrganizationResponse(const CreateOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_organization()) {
    organization_ = new ::viam::app::v1::Organization(*from.organization_);
  } else {
    organization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateOrganizationResponse)
}

inline void CreateOrganizationResponse::SharedCtor() {
organization_ = nullptr;
}

CreateOrganizationResponse::~CreateOrganizationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateOrganizationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateOrganizationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete organization_;
}

void CreateOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateOrganizationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && organization_ != nullptr) {
    delete organization_;
  }
  organization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_organization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateOrganizationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateOrganizationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::organization(this),
        _Internal::organization(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateOrganizationResponse)
  return target;
}

size_t CreateOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateOrganizationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *organization_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateOrganizationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateOrganizationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateOrganizationResponse::GetClassData() const { return &_class_data_; }

void CreateOrganizationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateOrganizationResponse *>(to)->MergeFrom(
      static_cast<const CreateOrganizationResponse &>(from));
}


void CreateOrganizationResponse::MergeFrom(const CreateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_organization()) {
    _internal_mutable_organization()->::viam::app::v1::Organization::MergeFrom(from._internal_organization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateOrganizationResponse::CopyFrom(const CreateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationResponse::IsInitialized() const {
  return true;
}

void CreateOrganizationResponse::InternalSwap(CreateOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(organization_, other->organization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[9]);
}

// ===================================================================

class GetOrganizationRequest::_Internal {
 public:
};

GetOrganizationRequest::GetOrganizationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetOrganizationRequest)
}
GetOrganizationRequest::GetOrganizationRequest(const GetOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetOrganizationRequest)
}

inline void GetOrganizationRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetOrganizationRequest::~GetOrganizationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetOrganizationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrganizationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void GetOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetOrganizationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetOrganizationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrganizationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetOrganizationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetOrganizationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetOrganizationRequest)
  return target;
}

size_t GetOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetOrganizationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrganizationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrganizationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrganizationRequest::GetClassData() const { return &_class_data_; }

void GetOrganizationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOrganizationRequest *>(to)->MergeFrom(
      static_cast<const GetOrganizationRequest &>(from));
}


void GetOrganizationRequest::MergeFrom(const GetOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrganizationRequest::CopyFrom(const GetOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationRequest::IsInitialized() const {
  return true;
}

void GetOrganizationRequest::InternalSwap(GetOrganizationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[10]);
}

// ===================================================================

class GetOrganizationResponse::_Internal {
 public:
  static const ::viam::app::v1::Organization& organization(const GetOrganizationResponse* msg);
};

const ::viam::app::v1::Organization&
GetOrganizationResponse::_Internal::organization(const GetOrganizationResponse* msg) {
  return *msg->organization_;
}
GetOrganizationResponse::GetOrganizationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetOrganizationResponse)
}
GetOrganizationResponse::GetOrganizationResponse(const GetOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_organization()) {
    organization_ = new ::viam::app::v1::Organization(*from.organization_);
  } else {
    organization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetOrganizationResponse)
}

inline void GetOrganizationResponse::SharedCtor() {
organization_ = nullptr;
}

GetOrganizationResponse::~GetOrganizationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetOrganizationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrganizationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete organization_;
}

void GetOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetOrganizationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && organization_ != nullptr) {
    delete organization_;
  }
  organization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_organization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrganizationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetOrganizationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::organization(this),
        _Internal::organization(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetOrganizationResponse)
  return target;
}

size_t GetOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetOrganizationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *organization_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrganizationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrganizationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrganizationResponse::GetClassData() const { return &_class_data_; }

void GetOrganizationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOrganizationResponse *>(to)->MergeFrom(
      static_cast<const GetOrganizationResponse &>(from));
}


void GetOrganizationResponse::MergeFrom(const GetOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_organization()) {
    _internal_mutable_organization()->::viam::app::v1::Organization::MergeFrom(from._internal_organization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrganizationResponse::CopyFrom(const GetOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationResponse::IsInitialized() const {
  return true;
}

void GetOrganizationResponse::InternalSwap(GetOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(organization_, other->organization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[11]);
}

// ===================================================================

class GetOrganizationNamespaceAvailabilityRequest::_Internal {
 public:
};

GetOrganizationNamespaceAvailabilityRequest::GetOrganizationNamespaceAvailabilityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
}
GetOrganizationNamespaceAvailabilityRequest::GetOrganizationNamespaceAvailabilityRequest(const GetOrganizationNamespaceAvailabilityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  public_namespace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    public_namespace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_public_namespace().empty()) {
    public_namespace_.Set(from._internal_public_namespace(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
}

inline void GetOrganizationNamespaceAvailabilityRequest::SharedCtor() {
public_namespace_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  public_namespace_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetOrganizationNamespaceAvailabilityRequest::~GetOrganizationNamespaceAvailabilityRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrganizationNamespaceAvailabilityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  public_namespace_.Destroy();
}

void GetOrganizationNamespaceAvailabilityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationNamespaceAvailabilityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_namespace_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationNamespaceAvailabilityRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string public_namespace = 1 [json_name = "publicNamespace"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_public_namespace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetOrganizationNamespaceAvailabilityRequest.public_namespace"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrganizationNamespaceAvailabilityRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_namespace = 1 [json_name = "publicNamespace"];
  if (!this->_internal_public_namespace().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_namespace().data(), static_cast<int>(this->_internal_public_namespace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetOrganizationNamespaceAvailabilityRequest.public_namespace");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_public_namespace(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  return target;
}

size_t GetOrganizationNamespaceAvailabilityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string public_namespace = 1 [json_name = "publicNamespace"];
  if (!this->_internal_public_namespace().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_namespace());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrganizationNamespaceAvailabilityRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrganizationNamespaceAvailabilityRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrganizationNamespaceAvailabilityRequest::GetClassData() const { return &_class_data_; }

void GetOrganizationNamespaceAvailabilityRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOrganizationNamespaceAvailabilityRequest *>(to)->MergeFrom(
      static_cast<const GetOrganizationNamespaceAvailabilityRequest &>(from));
}


void GetOrganizationNamespaceAvailabilityRequest::MergeFrom(const GetOrganizationNamespaceAvailabilityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_public_namespace().empty()) {
    _internal_set_public_namespace(from._internal_public_namespace());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrganizationNamespaceAvailabilityRequest::CopyFrom(const GetOrganizationNamespaceAvailabilityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationNamespaceAvailabilityRequest::IsInitialized() const {
  return true;
}

void GetOrganizationNamespaceAvailabilityRequest::InternalSwap(GetOrganizationNamespaceAvailabilityRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &public_namespace_, lhs_arena,
      &other->public_namespace_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationNamespaceAvailabilityRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[12]);
}

// ===================================================================

class GetOrganizationNamespaceAvailabilityResponse::_Internal {
 public:
};

GetOrganizationNamespaceAvailabilityResponse::GetOrganizationNamespaceAvailabilityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
}
GetOrganizationNamespaceAvailabilityResponse::GetOrganizationNamespaceAvailabilityResponse(const GetOrganizationNamespaceAvailabilityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  available_ = from.available_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
}

inline void GetOrganizationNamespaceAvailabilityResponse::SharedCtor() {
available_ = false;
}

GetOrganizationNamespaceAvailabilityResponse::~GetOrganizationNamespaceAvailabilityResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrganizationNamespaceAvailabilityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetOrganizationNamespaceAvailabilityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationNamespaceAvailabilityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  available_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationNamespaceAvailabilityResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool available = 1 [json_name = "available"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          available_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrganizationNamespaceAvailabilityResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool available = 1 [json_name = "available"];
  if (this->_internal_available() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_available(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  return target;
}

size_t GetOrganizationNamespaceAvailabilityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool available = 1 [json_name = "available"];
  if (this->_internal_available() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrganizationNamespaceAvailabilityResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrganizationNamespaceAvailabilityResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrganizationNamespaceAvailabilityResponse::GetClassData() const { return &_class_data_; }

void GetOrganizationNamespaceAvailabilityResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOrganizationNamespaceAvailabilityResponse *>(to)->MergeFrom(
      static_cast<const GetOrganizationNamespaceAvailabilityResponse &>(from));
}


void GetOrganizationNamespaceAvailabilityResponse::MergeFrom(const GetOrganizationNamespaceAvailabilityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_available() != 0) {
    _internal_set_available(from._internal_available());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrganizationNamespaceAvailabilityResponse::CopyFrom(const GetOrganizationNamespaceAvailabilityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationNamespaceAvailabilityResponse::IsInitialized() const {
  return true;
}

void GetOrganizationNamespaceAvailabilityResponse::InternalSwap(GetOrganizationNamespaceAvailabilityResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(available_, other->available_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationNamespaceAvailabilityResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[13]);
}

// ===================================================================

class UpdateOrganizationRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateOrganizationRequest>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_public_namespace(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_region(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

UpdateOrganizationRequest::UpdateOrganizationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateOrganizationRequest)
}
UpdateOrganizationRequest::UpdateOrganizationRequest(const UpdateOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  public_namespace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    public_namespace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_public_namespace()) {
    public_namespace_.Set(from._internal_public_namespace(), 
      GetArenaForAllocation());
  }
  region_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    region_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_region()) {
    region_.Set(from._internal_region(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateOrganizationRequest)
}

inline void UpdateOrganizationRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
public_namespace_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  public_namespace_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
region_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  region_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateOrganizationRequest::~UpdateOrganizationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateOrganizationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateOrganizationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  name_.Destroy();
  public_namespace_.Destroy();
  region_.Destroy();
}

void UpdateOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateOrganizationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      public_namespace_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      region_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOrganizationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOrganizationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // optional string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOrganizationRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string public_namespace = 3 [json_name = "publicNamespace"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_public_namespace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOrganizationRequest.public_namespace"));
        } else
          goto handle_unusual;
        continue;
      // optional string region = 4 [json_name = "region"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_region();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOrganizationRequest.region"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateOrganizationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateOrganizationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOrganizationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // optional string name = 2 [json_name = "name"];
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOrganizationRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string public_namespace = 3 [json_name = "publicNamespace"];
  if (_internal_has_public_namespace()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_namespace().data(), static_cast<int>(this->_internal_public_namespace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOrganizationRequest.public_namespace");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_public_namespace(), target);
  }

  // optional string region = 4 [json_name = "region"];
  if (_internal_has_region()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_region().data(), static_cast<int>(this->_internal_region().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOrganizationRequest.region");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_region(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateOrganizationRequest)
  return target;
}

size_t UpdateOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateOrganizationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string name = 2 [json_name = "name"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string public_namespace = 3 [json_name = "publicNamespace"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_public_namespace());
    }

    // optional string region = 4 [json_name = "region"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_region());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateOrganizationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateOrganizationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateOrganizationRequest::GetClassData() const { return &_class_data_; }

void UpdateOrganizationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateOrganizationRequest *>(to)->MergeFrom(
      static_cast<const UpdateOrganizationRequest &>(from));
}


void UpdateOrganizationRequest::MergeFrom(const UpdateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_public_namespace(from._internal_public_namespace());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_region(from._internal_region());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateOrganizationRequest::CopyFrom(const UpdateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrganizationRequest::IsInitialized() const {
  return true;
}

void UpdateOrganizationRequest::InternalSwap(UpdateOrganizationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &public_namespace_, lhs_arena,
      &other->public_namespace_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &region_, lhs_arena,
      &other->region_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrganizationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[14]);
}

// ===================================================================

class UpdateOrganizationResponse::_Internal {
 public:
  static const ::viam::app::v1::Organization& organization(const UpdateOrganizationResponse* msg);
};

const ::viam::app::v1::Organization&
UpdateOrganizationResponse::_Internal::organization(const UpdateOrganizationResponse* msg) {
  return *msg->organization_;
}
UpdateOrganizationResponse::UpdateOrganizationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateOrganizationResponse)
}
UpdateOrganizationResponse::UpdateOrganizationResponse(const UpdateOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_organization()) {
    organization_ = new ::viam::app::v1::Organization(*from.organization_);
  } else {
    organization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateOrganizationResponse)
}

inline void UpdateOrganizationResponse::SharedCtor() {
organization_ = nullptr;
}

UpdateOrganizationResponse::~UpdateOrganizationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateOrganizationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateOrganizationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete organization_;
}

void UpdateOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateOrganizationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && organization_ != nullptr) {
    delete organization_;
  }
  organization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOrganizationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_organization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateOrganizationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateOrganizationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::organization(this),
        _Internal::organization(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateOrganizationResponse)
  return target;
}

size_t UpdateOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateOrganizationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *organization_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateOrganizationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateOrganizationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateOrganizationResponse::GetClassData() const { return &_class_data_; }

void UpdateOrganizationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateOrganizationResponse *>(to)->MergeFrom(
      static_cast<const UpdateOrganizationResponse &>(from));
}


void UpdateOrganizationResponse::MergeFrom(const UpdateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_organization()) {
    _internal_mutable_organization()->::viam::app::v1::Organization::MergeFrom(from._internal_organization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateOrganizationResponse::CopyFrom(const UpdateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrganizationResponse::IsInitialized() const {
  return true;
}

void UpdateOrganizationResponse::InternalSwap(UpdateOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(organization_, other->organization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrganizationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[15]);
}

// ===================================================================

class DeleteOrganizationRequest::_Internal {
 public:
};

DeleteOrganizationRequest::DeleteOrganizationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOrganizationRequest)
}
DeleteOrganizationRequest::DeleteOrganizationRequest(const DeleteOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOrganizationRequest)
}

inline void DeleteOrganizationRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteOrganizationRequest::~DeleteOrganizationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteOrganizationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteOrganizationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void DeleteOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteOrganizationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOrganizationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteOrganizationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteOrganizationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteOrganizationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteOrganizationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteOrganizationRequest)
  return target;
}

size_t DeleteOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteOrganizationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOrganizationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteOrganizationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOrganizationRequest::GetClassData() const { return &_class_data_; }

void DeleteOrganizationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteOrganizationRequest *>(to)->MergeFrom(
      static_cast<const DeleteOrganizationRequest &>(from));
}


void DeleteOrganizationRequest::MergeFrom(const DeleteOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteOrganizationRequest::CopyFrom(const DeleteOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationRequest::IsInitialized() const {
  return true;
}

void DeleteOrganizationRequest::InternalSwap(DeleteOrganizationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[16]);
}

// ===================================================================

class DeleteOrganizationResponse::_Internal {
 public:
};

DeleteOrganizationResponse::DeleteOrganizationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOrganizationResponse)
}
DeleteOrganizationResponse::DeleteOrganizationResponse(const DeleteOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOrganizationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOrganizationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOrganizationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[17]);
}

// ===================================================================

class ListOrganizationMembersRequest::_Internal {
 public:
};

ListOrganizationMembersRequest::ListOrganizationMembersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationMembersRequest)
}
ListOrganizationMembersRequest::ListOrganizationMembersRequest(const ListOrganizationMembersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationMembersRequest)
}

inline void ListOrganizationMembersRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListOrganizationMembersRequest::~ListOrganizationMembersRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListOrganizationMembersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListOrganizationMembersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void ListOrganizationMembersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListOrganizationMembersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListOrganizationMembersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListOrganizationMembersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListOrganizationMembersRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListOrganizationMembersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListOrganizationMembersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListOrganizationMembersRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListOrganizationMembersRequest)
  return target;
}

size_t ListOrganizationMembersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListOrganizationMembersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationMembersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListOrganizationMembersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationMembersRequest::GetClassData() const { return &_class_data_; }

void ListOrganizationMembersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListOrganizationMembersRequest *>(to)->MergeFrom(
      static_cast<const ListOrganizationMembersRequest &>(from));
}


void ListOrganizationMembersRequest::MergeFrom(const ListOrganizationMembersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListOrganizationMembersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListOrganizationMembersRequest::CopyFrom(const ListOrganizationMembersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListOrganizationMembersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOrganizationMembersRequest::IsInitialized() const {
  return true;
}

void ListOrganizationMembersRequest::InternalSwap(ListOrganizationMembersRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationMembersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[18]);
}

// ===================================================================

class ListOrganizationMembersResponse::_Internal {
 public:
};

ListOrganizationMembersResponse::ListOrganizationMembersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  members_(arena),
  invites_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationMembersResponse)
}
ListOrganizationMembersResponse::ListOrganizationMembersResponse(const ListOrganizationMembersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      members_(from.members_),
      invites_(from.invites_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationMembersResponse)
}

inline void ListOrganizationMembersResponse::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListOrganizationMembersResponse::~ListOrganizationMembersResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListOrganizationMembersResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListOrganizationMembersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void ListOrganizationMembersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListOrganizationMembersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListOrganizationMembersResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  invites_.Clear();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListOrganizationMembersResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListOrganizationMembersResponse.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.OrganizationMember members = 2 [json_name = "members"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.OrganizationInvite invites = 3 [json_name = "invites"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_invites(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListOrganizationMembersResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListOrganizationMembersResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListOrganizationMembersResponse.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // repeated .viam.app.v1.OrganizationMember members = 2 [json_name = "members"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_members_size()); i < n; i++) {
    const auto& repfield = this->_internal_members(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.OrganizationInvite invites = 3 [json_name = "invites"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_invites_size()); i < n; i++) {
    const auto& repfield = this->_internal_invites(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListOrganizationMembersResponse)
  return target;
}

size_t ListOrganizationMembersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListOrganizationMembersResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.OrganizationMember members = 2 [json_name = "members"];
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .viam.app.v1.OrganizationInvite invites = 3 [json_name = "invites"];
  total_size += 1UL * this->_internal_invites_size();
  for (const auto& msg : this->invites_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationMembersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListOrganizationMembersResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationMembersResponse::GetClassData() const { return &_class_data_; }

void ListOrganizationMembersResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListOrganizationMembersResponse *>(to)->MergeFrom(
      static_cast<const ListOrganizationMembersResponse &>(from));
}


void ListOrganizationMembersResponse::MergeFrom(const ListOrganizationMembersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListOrganizationMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  invites_.MergeFrom(from.invites_);
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListOrganizationMembersResponse::CopyFrom(const ListOrganizationMembersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListOrganizationMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOrganizationMembersResponse::IsInitialized() const {
  return true;
}

void ListOrganizationMembersResponse::InternalSwap(ListOrganizationMembersResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  members_.InternalSwap(&other->members_);
  invites_.InternalSwap(&other->invites_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationMembersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[19]);
}

// ===================================================================

class CreateOrganizationInviteRequest::_Internal {
 public:
};

CreateOrganizationInviteRequest::CreateOrganizationInviteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  authorizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateOrganizationInviteRequest)
}
CreateOrganizationInviteRequest::CreateOrganizationInviteRequest(const CreateOrganizationInviteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      authorizations_(from.authorizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateOrganizationInviteRequest)
}

inline void CreateOrganizationInviteRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateOrganizationInviteRequest::~CreateOrganizationInviteRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateOrganizationInviteRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateOrganizationInviteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  email_.Destroy();
}

void CreateOrganizationInviteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOrganizationInviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateOrganizationInviteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorizations_.Clear();
  organization_id_.ClearToEmpty();
  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationInviteRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateOrganizationInviteRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateOrganizationInviteRequest.email"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Authorization authorizations = 3 [json_name = "authorizations"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_authorizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateOrganizationInviteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateOrganizationInviteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateOrganizationInviteRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateOrganizationInviteRequest.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  // repeated .viam.app.v1.Authorization authorizations = 3 [json_name = "authorizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_authorizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_authorizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateOrganizationInviteRequest)
  return target;
}

size_t CreateOrganizationInviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateOrganizationInviteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Authorization authorizations = 3 [json_name = "authorizations"];
  total_size += 1UL * this->_internal_authorizations_size();
  for (const auto& msg : this->authorizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateOrganizationInviteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateOrganizationInviteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateOrganizationInviteRequest::GetClassData() const { return &_class_data_; }

void CreateOrganizationInviteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateOrganizationInviteRequest *>(to)->MergeFrom(
      static_cast<const CreateOrganizationInviteRequest &>(from));
}


void CreateOrganizationInviteRequest::MergeFrom(const CreateOrganizationInviteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateOrganizationInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  authorizations_.MergeFrom(from.authorizations_);
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateOrganizationInviteRequest::CopyFrom(const CreateOrganizationInviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateOrganizationInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationInviteRequest::IsInitialized() const {
  return true;
}

void CreateOrganizationInviteRequest::InternalSwap(CreateOrganizationInviteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  authorizations_.InternalSwap(&other->authorizations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationInviteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[20]);
}

// ===================================================================

class CreateOrganizationInviteResponse::_Internal {
 public:
  static const ::viam::app::v1::OrganizationInvite& invite(const CreateOrganizationInviteResponse* msg);
};

const ::viam::app::v1::OrganizationInvite&
CreateOrganizationInviteResponse::_Internal::invite(const CreateOrganizationInviteResponse* msg) {
  return *msg->invite_;
}
CreateOrganizationInviteResponse::CreateOrganizationInviteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateOrganizationInviteResponse)
}
CreateOrganizationInviteResponse::CreateOrganizationInviteResponse(const CreateOrganizationInviteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_invite()) {
    invite_ = new ::viam::app::v1::OrganizationInvite(*from.invite_);
  } else {
    invite_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateOrganizationInviteResponse)
}

inline void CreateOrganizationInviteResponse::SharedCtor() {
invite_ = nullptr;
}

CreateOrganizationInviteResponse::~CreateOrganizationInviteResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateOrganizationInviteResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateOrganizationInviteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete invite_;
}

void CreateOrganizationInviteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOrganizationInviteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateOrganizationInviteResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && invite_ != nullptr) {
    delete invite_;
  }
  invite_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationInviteResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invite(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateOrganizationInviteResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateOrganizationInviteResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
  if (this->_internal_has_invite()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::invite(this),
        _Internal::invite(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateOrganizationInviteResponse)
  return target;
}

size_t CreateOrganizationInviteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateOrganizationInviteResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
  if (this->_internal_has_invite()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *invite_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateOrganizationInviteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateOrganizationInviteResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateOrganizationInviteResponse::GetClassData() const { return &_class_data_; }

void CreateOrganizationInviteResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateOrganizationInviteResponse *>(to)->MergeFrom(
      static_cast<const CreateOrganizationInviteResponse &>(from));
}


void CreateOrganizationInviteResponse::MergeFrom(const CreateOrganizationInviteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateOrganizationInviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_invite()) {
    _internal_mutable_invite()->::viam::app::v1::OrganizationInvite::MergeFrom(from._internal_invite());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateOrganizationInviteResponse::CopyFrom(const CreateOrganizationInviteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateOrganizationInviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationInviteResponse::IsInitialized() const {
  return true;
}

void CreateOrganizationInviteResponse::InternalSwap(CreateOrganizationInviteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(invite_, other->invite_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationInviteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[21]);
}

// ===================================================================

class UpdateOrganizationInviteAuthorizationsRequest::_Internal {
 public:
};

UpdateOrganizationInviteAuthorizationsRequest::UpdateOrganizationInviteAuthorizationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  add_authorizations_(arena),
  remove_authorizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
}
UpdateOrganizationInviteAuthorizationsRequest::UpdateOrganizationInviteAuthorizationsRequest(const UpdateOrganizationInviteAuthorizationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      add_authorizations_(from.add_authorizations_),
      remove_authorizations_(from.remove_authorizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
}

inline void UpdateOrganizationInviteAuthorizationsRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateOrganizationInviteAuthorizationsRequest::~UpdateOrganizationInviteAuthorizationsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateOrganizationInviteAuthorizationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  email_.Destroy();
}

void UpdateOrganizationInviteAuthorizationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateOrganizationInviteAuthorizationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  add_authorizations_.Clear();
  remove_authorizations_.Clear();
  organization_id_.ClearToEmpty();
  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOrganizationInviteAuthorizationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest.email"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Authorization add_authorizations = 3 [json_name = "addAuthorizations"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_add_authorizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Authorization remove_authorizations = 4 [json_name = "removeAuthorizations"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_remove_authorizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateOrganizationInviteAuthorizationsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  // repeated .viam.app.v1.Authorization add_authorizations = 3 [json_name = "addAuthorizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_add_authorizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_add_authorizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.Authorization remove_authorizations = 4 [json_name = "removeAuthorizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_remove_authorizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_remove_authorizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  return target;
}

size_t UpdateOrganizationInviteAuthorizationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Authorization add_authorizations = 3 [json_name = "addAuthorizations"];
  total_size += 1UL * this->_internal_add_authorizations_size();
  for (const auto& msg : this->add_authorizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .viam.app.v1.Authorization remove_authorizations = 4 [json_name = "removeAuthorizations"];
  total_size += 1UL * this->_internal_remove_authorizations_size();
  for (const auto& msg : this->remove_authorizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateOrganizationInviteAuthorizationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateOrganizationInviteAuthorizationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateOrganizationInviteAuthorizationsRequest::GetClassData() const { return &_class_data_; }

void UpdateOrganizationInviteAuthorizationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateOrganizationInviteAuthorizationsRequest *>(to)->MergeFrom(
      static_cast<const UpdateOrganizationInviteAuthorizationsRequest &>(from));
}


void UpdateOrganizationInviteAuthorizationsRequest::MergeFrom(const UpdateOrganizationInviteAuthorizationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  add_authorizations_.MergeFrom(from.add_authorizations_);
  remove_authorizations_.MergeFrom(from.remove_authorizations_);
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateOrganizationInviteAuthorizationsRequest::CopyFrom(const UpdateOrganizationInviteAuthorizationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrganizationInviteAuthorizationsRequest::IsInitialized() const {
  return true;
}

void UpdateOrganizationInviteAuthorizationsRequest::InternalSwap(UpdateOrganizationInviteAuthorizationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  add_authorizations_.InternalSwap(&other->add_authorizations_);
  remove_authorizations_.InternalSwap(&other->remove_authorizations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrganizationInviteAuthorizationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[22]);
}

// ===================================================================

class UpdateOrganizationInviteAuthorizationsResponse::_Internal {
 public:
  static const ::viam::app::v1::OrganizationInvite& invite(const UpdateOrganizationInviteAuthorizationsResponse* msg);
};

const ::viam::app::v1::OrganizationInvite&
UpdateOrganizationInviteAuthorizationsResponse::_Internal::invite(const UpdateOrganizationInviteAuthorizationsResponse* msg) {
  return *msg->invite_;
}
UpdateOrganizationInviteAuthorizationsResponse::UpdateOrganizationInviteAuthorizationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
}
UpdateOrganizationInviteAuthorizationsResponse::UpdateOrganizationInviteAuthorizationsResponse(const UpdateOrganizationInviteAuthorizationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_invite()) {
    invite_ = new ::viam::app::v1::OrganizationInvite(*from.invite_);
  } else {
    invite_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
}

inline void UpdateOrganizationInviteAuthorizationsResponse::SharedCtor() {
invite_ = nullptr;
}

UpdateOrganizationInviteAuthorizationsResponse::~UpdateOrganizationInviteAuthorizationsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateOrganizationInviteAuthorizationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete invite_;
}

void UpdateOrganizationInviteAuthorizationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateOrganizationInviteAuthorizationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && invite_ != nullptr) {
    delete invite_;
  }
  invite_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOrganizationInviteAuthorizationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invite(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateOrganizationInviteAuthorizationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
  if (this->_internal_has_invite()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::invite(this),
        _Internal::invite(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  return target;
}

size_t UpdateOrganizationInviteAuthorizationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
  if (this->_internal_has_invite()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *invite_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateOrganizationInviteAuthorizationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateOrganizationInviteAuthorizationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateOrganizationInviteAuthorizationsResponse::GetClassData() const { return &_class_data_; }

void UpdateOrganizationInviteAuthorizationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateOrganizationInviteAuthorizationsResponse *>(to)->MergeFrom(
      static_cast<const UpdateOrganizationInviteAuthorizationsResponse &>(from));
}


void UpdateOrganizationInviteAuthorizationsResponse::MergeFrom(const UpdateOrganizationInviteAuthorizationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_invite()) {
    _internal_mutable_invite()->::viam::app::v1::OrganizationInvite::MergeFrom(from._internal_invite());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateOrganizationInviteAuthorizationsResponse::CopyFrom(const UpdateOrganizationInviteAuthorizationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrganizationInviteAuthorizationsResponse::IsInitialized() const {
  return true;
}

void UpdateOrganizationInviteAuthorizationsResponse::InternalSwap(UpdateOrganizationInviteAuthorizationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(invite_, other->invite_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrganizationInviteAuthorizationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[23]);
}

// ===================================================================

class DeleteOrganizationInviteRequest::_Internal {
 public:
};

DeleteOrganizationInviteRequest::DeleteOrganizationInviteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOrganizationInviteRequest)
}
DeleteOrganizationInviteRequest::DeleteOrganizationInviteRequest(const DeleteOrganizationInviteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOrganizationInviteRequest)
}

inline void DeleteOrganizationInviteRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteOrganizationInviteRequest::~DeleteOrganizationInviteRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteOrganizationInviteRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteOrganizationInviteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  email_.Destroy();
}

void DeleteOrganizationInviteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteOrganizationInviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteOrganizationInviteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOrganizationInviteRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteOrganizationInviteRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteOrganizationInviteRequest.email"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteOrganizationInviteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteOrganizationInviteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteOrganizationInviteRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteOrganizationInviteRequest.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteOrganizationInviteRequest)
  return target;
}

size_t DeleteOrganizationInviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteOrganizationInviteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOrganizationInviteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteOrganizationInviteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOrganizationInviteRequest::GetClassData() const { return &_class_data_; }

void DeleteOrganizationInviteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteOrganizationInviteRequest *>(to)->MergeFrom(
      static_cast<const DeleteOrganizationInviteRequest &>(from));
}


void DeleteOrganizationInviteRequest::MergeFrom(const DeleteOrganizationInviteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteOrganizationInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteOrganizationInviteRequest::CopyFrom(const DeleteOrganizationInviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteOrganizationInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationInviteRequest::IsInitialized() const {
  return true;
}

void DeleteOrganizationInviteRequest::InternalSwap(DeleteOrganizationInviteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationInviteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[24]);
}

// ===================================================================

class DeleteOrganizationInviteResponse::_Internal {
 public:
};

DeleteOrganizationInviteResponse::DeleteOrganizationInviteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOrganizationInviteResponse)
}
DeleteOrganizationInviteResponse::DeleteOrganizationInviteResponse(const DeleteOrganizationInviteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOrganizationInviteResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOrganizationInviteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOrganizationInviteResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationInviteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[25]);
}

// ===================================================================

class ResendOrganizationInviteRequest::_Internal {
 public:
};

ResendOrganizationInviteRequest::ResendOrganizationInviteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ResendOrganizationInviteRequest)
}
ResendOrganizationInviteRequest::ResendOrganizationInviteRequest(const ResendOrganizationInviteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ResendOrganizationInviteRequest)
}

inline void ResendOrganizationInviteRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResendOrganizationInviteRequest::~ResendOrganizationInviteRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ResendOrganizationInviteRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResendOrganizationInviteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  email_.Destroy();
}

void ResendOrganizationInviteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResendOrganizationInviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ResendOrganizationInviteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResendOrganizationInviteRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ResendOrganizationInviteRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ResendOrganizationInviteRequest.email"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResendOrganizationInviteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ResendOrganizationInviteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ResendOrganizationInviteRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ResendOrganizationInviteRequest.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ResendOrganizationInviteRequest)
  return target;
}

size_t ResendOrganizationInviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ResendOrganizationInviteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResendOrganizationInviteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResendOrganizationInviteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResendOrganizationInviteRequest::GetClassData() const { return &_class_data_; }

void ResendOrganizationInviteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResendOrganizationInviteRequest *>(to)->MergeFrom(
      static_cast<const ResendOrganizationInviteRequest &>(from));
}


void ResendOrganizationInviteRequest::MergeFrom(const ResendOrganizationInviteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ResendOrganizationInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResendOrganizationInviteRequest::CopyFrom(const ResendOrganizationInviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ResendOrganizationInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResendOrganizationInviteRequest::IsInitialized() const {
  return true;
}

void ResendOrganizationInviteRequest::InternalSwap(ResendOrganizationInviteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ResendOrganizationInviteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[26]);
}

// ===================================================================

class ResendOrganizationInviteResponse::_Internal {
 public:
  static const ::viam::app::v1::OrganizationInvite& invite(const ResendOrganizationInviteResponse* msg);
};

const ::viam::app::v1::OrganizationInvite&
ResendOrganizationInviteResponse::_Internal::invite(const ResendOrganizationInviteResponse* msg) {
  return *msg->invite_;
}
ResendOrganizationInviteResponse::ResendOrganizationInviteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ResendOrganizationInviteResponse)
}
ResendOrganizationInviteResponse::ResendOrganizationInviteResponse(const ResendOrganizationInviteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_invite()) {
    invite_ = new ::viam::app::v1::OrganizationInvite(*from.invite_);
  } else {
    invite_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ResendOrganizationInviteResponse)
}

inline void ResendOrganizationInviteResponse::SharedCtor() {
invite_ = nullptr;
}

ResendOrganizationInviteResponse::~ResendOrganizationInviteResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ResendOrganizationInviteResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResendOrganizationInviteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete invite_;
}

void ResendOrganizationInviteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResendOrganizationInviteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ResendOrganizationInviteResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && invite_ != nullptr) {
    delete invite_;
  }
  invite_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResendOrganizationInviteResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invite(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResendOrganizationInviteResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ResendOrganizationInviteResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
  if (this->_internal_has_invite()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::invite(this),
        _Internal::invite(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ResendOrganizationInviteResponse)
  return target;
}

size_t ResendOrganizationInviteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ResendOrganizationInviteResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
  if (this->_internal_has_invite()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *invite_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResendOrganizationInviteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResendOrganizationInviteResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResendOrganizationInviteResponse::GetClassData() const { return &_class_data_; }

void ResendOrganizationInviteResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResendOrganizationInviteResponse *>(to)->MergeFrom(
      static_cast<const ResendOrganizationInviteResponse &>(from));
}


void ResendOrganizationInviteResponse::MergeFrom(const ResendOrganizationInviteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ResendOrganizationInviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_invite()) {
    _internal_mutable_invite()->::viam::app::v1::OrganizationInvite::MergeFrom(from._internal_invite());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResendOrganizationInviteResponse::CopyFrom(const ResendOrganizationInviteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ResendOrganizationInviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResendOrganizationInviteResponse::IsInitialized() const {
  return true;
}

void ResendOrganizationInviteResponse::InternalSwap(ResendOrganizationInviteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(invite_, other->invite_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResendOrganizationInviteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[27]);
}

// ===================================================================

class DeleteOrganizationMemberRequest::_Internal {
 public:
};

DeleteOrganizationMemberRequest::DeleteOrganizationMemberRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOrganizationMemberRequest)
}
DeleteOrganizationMemberRequest::DeleteOrganizationMemberRequest(const DeleteOrganizationMemberRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    user_id_.Set(from._internal_user_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOrganizationMemberRequest)
}

inline void DeleteOrganizationMemberRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
user_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  user_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteOrganizationMemberRequest::~DeleteOrganizationMemberRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteOrganizationMemberRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteOrganizationMemberRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  user_id_.Destroy();
}

void DeleteOrganizationMemberRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteOrganizationMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteOrganizationMemberRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOrganizationMemberRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteOrganizationMemberRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string user_id = 2 [json_name = "userId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteOrganizationMemberRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteOrganizationMemberRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteOrganizationMemberRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteOrganizationMemberRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteOrganizationMemberRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteOrganizationMemberRequest)
  return target;
}

size_t DeleteOrganizationMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteOrganizationMemberRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOrganizationMemberRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteOrganizationMemberRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOrganizationMemberRequest::GetClassData() const { return &_class_data_; }

void DeleteOrganizationMemberRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteOrganizationMemberRequest *>(to)->MergeFrom(
      static_cast<const DeleteOrganizationMemberRequest &>(from));
}


void DeleteOrganizationMemberRequest::MergeFrom(const DeleteOrganizationMemberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteOrganizationMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteOrganizationMemberRequest::CopyFrom(const DeleteOrganizationMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteOrganizationMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationMemberRequest::IsInitialized() const {
  return true;
}

void DeleteOrganizationMemberRequest::InternalSwap(DeleteOrganizationMemberRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &user_id_, lhs_arena,
      &other->user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationMemberRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[28]);
}

// ===================================================================

class DeleteOrganizationMemberResponse::_Internal {
 public:
};

DeleteOrganizationMemberResponse::DeleteOrganizationMemberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOrganizationMemberResponse)
}
DeleteOrganizationMemberResponse::DeleteOrganizationMemberResponse(const DeleteOrganizationMemberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOrganizationMemberResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOrganizationMemberResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOrganizationMemberResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationMemberResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[29]);
}

// ===================================================================

class LocationOrganization::_Internal {
 public:
};

LocationOrganization::LocationOrganization(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.LocationOrganization)
}
LocationOrganization::LocationOrganization(const LocationOrganization& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  primary_ = from.primary_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.LocationOrganization)
}

inline void LocationOrganization::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
primary_ = false;
}

LocationOrganization::~LocationOrganization() {
  // @@protoc_insertion_point(destructor:viam.app.v1.LocationOrganization)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocationOrganization::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void LocationOrganization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocationOrganization::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.LocationOrganization)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  primary_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationOrganization::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LocationOrganization.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // bool primary = 2 [json_name = "primary"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          primary_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocationOrganization::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.LocationOrganization)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LocationOrganization.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // bool primary = 2 [json_name = "primary"];
  if (this->_internal_primary() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_primary(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.LocationOrganization)
  return target;
}

size_t LocationOrganization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.LocationOrganization)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // bool primary = 2 [json_name = "primary"];
  if (this->_internal_primary() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocationOrganization::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocationOrganization::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocationOrganization::GetClassData() const { return &_class_data_; }

void LocationOrganization::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocationOrganization *>(to)->MergeFrom(
      static_cast<const LocationOrganization &>(from));
}


void LocationOrganization::MergeFrom(const LocationOrganization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.LocationOrganization)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (from._internal_primary() != 0) {
    _internal_set_primary(from._internal_primary());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocationOrganization::CopyFrom(const LocationOrganization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.LocationOrganization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationOrganization::IsInitialized() const {
  return true;
}

void LocationOrganization::InternalSwap(LocationOrganization* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  swap(primary_, other->primary_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationOrganization::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[30]);
}

// ===================================================================

class LocationAuth::_Internal {
 public:
};

LocationAuth::LocationAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  secrets_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.LocationAuth)
}
LocationAuth::LocationAuth(const LocationAuth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      secrets_(from.secrets_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  secret_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret().empty()) {
    secret_.Set(from._internal_secret(), 
      GetArenaForAllocation());
  }
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.LocationAuth)
}

inline void LocationAuth::SharedCtor() {
secret_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LocationAuth::~LocationAuth() {
  // @@protoc_insertion_point(destructor:viam.app.v1.LocationAuth)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocationAuth::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  secret_.Destroy();
  location_id_.Destroy();
}

void LocationAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocationAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.LocationAuth)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secrets_.Clear();
  secret_.ClearToEmpty();
  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationAuth::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string secret = 1 [json_name = "secret", deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_secret();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LocationAuth.secret"));
        } else
          goto handle_unusual;
        continue;
      // string location_id = 2 [json_name = "locationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LocationAuth.location_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.SharedSecret secrets = 3 [json_name = "secrets"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_secrets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocationAuth::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.LocationAuth)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string secret = 1 [json_name = "secret", deprecated = true];
  if (!this->_internal_secret().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret().data(), static_cast<int>(this->_internal_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LocationAuth.secret");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_secret(), target);
  }

  // string location_id = 2 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LocationAuth.location_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_location_id(), target);
  }

  // repeated .viam.app.v1.SharedSecret secrets = 3 [json_name = "secrets"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_secrets_size()); i < n; i++) {
    const auto& repfield = this->_internal_secrets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.LocationAuth)
  return target;
}

size_t LocationAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.LocationAuth)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.SharedSecret secrets = 3 [json_name = "secrets"];
  total_size += 1UL * this->_internal_secrets_size();
  for (const auto& msg : this->secrets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string secret = 1 [json_name = "secret", deprecated = true];
  if (!this->_internal_secret().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret());
  }

  // string location_id = 2 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocationAuth::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocationAuth::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocationAuth::GetClassData() const { return &_class_data_; }

void LocationAuth::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocationAuth *>(to)->MergeFrom(
      static_cast<const LocationAuth &>(from));
}


void LocationAuth::MergeFrom(const LocationAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.LocationAuth)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  secrets_.MergeFrom(from.secrets_);
  if (!from._internal_secret().empty()) {
    _internal_set_secret(from._internal_secret());
  }
  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocationAuth::CopyFrom(const LocationAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.LocationAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationAuth::IsInitialized() const {
  return true;
}

void LocationAuth::InternalSwap(LocationAuth* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  secrets_.InternalSwap(&other->secrets_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_, lhs_arena,
      &other->secret_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationAuth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[31]);
}

// ===================================================================

class StorageConfig::_Internal {
 public:
};

StorageConfig::StorageConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.StorageConfig)
}
StorageConfig::StorageConfig(const StorageConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  region_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    region_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_region().empty()) {
    region_.Set(from._internal_region(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.StorageConfig)
}

inline void StorageConfig::SharedCtor() {
region_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  region_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StorageConfig::~StorageConfig() {
  // @@protoc_insertion_point(destructor:viam.app.v1.StorageConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StorageConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  region_.Destroy();
}

void StorageConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StorageConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.StorageConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  region_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StorageConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string region = 1 [json_name = "region"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_region();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.StorageConfig.region"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StorageConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.StorageConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string region = 1 [json_name = "region"];
  if (!this->_internal_region().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_region().data(), static_cast<int>(this->_internal_region().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.StorageConfig.region");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_region(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.StorageConfig)
  return target;
}

size_t StorageConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.StorageConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string region = 1 [json_name = "region"];
  if (!this->_internal_region().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_region());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StorageConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StorageConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StorageConfig::GetClassData() const { return &_class_data_; }

void StorageConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StorageConfig *>(to)->MergeFrom(
      static_cast<const StorageConfig &>(from));
}


void StorageConfig::MergeFrom(const StorageConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.StorageConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_region().empty()) {
    _internal_set_region(from._internal_region());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StorageConfig::CopyFrom(const StorageConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.StorageConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageConfig::IsInitialized() const {
  return true;
}

void StorageConfig::InternalSwap(StorageConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &region_, lhs_arena,
      &other->region_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StorageConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[32]);
}

// ===================================================================

class Location::_Internal {
 public:
  static const ::viam::app::v1::LocationAuth& auth(const Location* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const Location* msg);
  static const ::viam::app::v1::StorageConfig& config(const Location* msg);
};

const ::viam::app::v1::LocationAuth&
Location::_Internal::auth(const Location* msg) {
  return *msg->auth_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Location::_Internal::created_on(const Location* msg) {
  return *msg->created_on_;
}
const ::viam::app::v1::StorageConfig&
Location::_Internal::config(const Location* msg) {
  return *msg->config_;
}
void Location::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
Location::Location(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  organizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Location)
}
Location::Location(const Location& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  parent_location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent_location_id().empty()) {
    parent_location_id_.Set(from._internal_parent_location_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  if (from._internal_has_auth()) {
    auth_ = new ::viam::app::v1::LocationAuth(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  if (from._internal_has_config()) {
    config_ = new ::viam::app::v1::StorageConfig(*from.config_);
  } else {
    config_ = nullptr;
  }
  robot_count_ = from.robot_count_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Location)
}

inline void Location::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
parent_location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&created_on_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&robot_count_) -
    reinterpret_cast<char*>(&created_on_)) + sizeof(robot_count_));
}

Location::~Location() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Location)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Location::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  parent_location_id_.Destroy();
  if (this != internal_default_instance()) delete created_on_;
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete config_;
}

void Location::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Location)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizations_.Clear();
  id_.ClearToEmpty();
  name_.ClearToEmpty();
  parent_location_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  if (GetArenaForAllocation() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  robot_count_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Location::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Location.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Location.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string parent_location_id = 4 [json_name = "parentLocationId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_parent_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Location.parent_location_id"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.LocationAuth auth = 5 [json_name = "auth"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.LocationOrganization organizations = 6 [json_name = "organizations"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_organizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 robot_count = 7 [json_name = "robotCount"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          robot_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.StorageConfig config = 8 [json_name = "config"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Location::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Location)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Location.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Location.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // string parent_location_id = 4 [json_name = "parentLocationId"];
  if (!this->_internal_parent_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_location_id().data(), static_cast<int>(this->_internal_parent_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Location.parent_location_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_parent_location_id(), target);
  }

  // .viam.app.v1.LocationAuth auth = 5 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::auth(this),
        _Internal::auth(this).GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.LocationOrganization organizations = 6 [json_name = "organizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_organizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_organizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 robot_count = 7 [json_name = "robotCount"];
  if (this->_internal_robot_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_robot_count(), target);
  }

  // .viam.app.v1.StorageConfig config = 8 [json_name = "config"];
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Location)
  return target;
}

size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Location)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.LocationOrganization organizations = 6 [json_name = "organizations"];
  total_size += 1UL * this->_internal_organizations_size();
  for (const auto& msg : this->organizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string parent_location_id = 4 [json_name = "parentLocationId"];
  if (!this->_internal_parent_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_location_id());
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // .viam.app.v1.LocationAuth auth = 5 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  // .viam.app.v1.StorageConfig config = 8 [json_name = "config"];
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // int32 robot_count = 7 [json_name = "robotCount"];
  if (this->_internal_robot_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_robot_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Location::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Location::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Location::GetClassData() const { return &_class_data_; }

void Location::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Location *>(to)->MergeFrom(
      static_cast<const Location &>(from));
}


void Location::MergeFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Location)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  organizations_.MergeFrom(from.organizations_);
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_parent_location_id().empty()) {
    _internal_set_parent_location_id(from._internal_parent_location_id());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_has_auth()) {
    _internal_mutable_auth()->::viam::app::v1::LocationAuth::MergeFrom(from._internal_auth());
  }
  if (from._internal_has_config()) {
    _internal_mutable_config()->::viam::app::v1::StorageConfig::MergeFrom(from._internal_config());
  }
  if (from._internal_robot_count() != 0) {
    _internal_set_robot_count(from._internal_robot_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location::IsInitialized() const {
  return true;
}

void Location::InternalSwap(Location* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  organizations_.InternalSwap(&other->organizations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &parent_location_id_, lhs_arena,
      &other->parent_location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Location, robot_count_)
      + sizeof(Location::robot_count_)
      - PROTOBUF_FIELD_OFFSET(Location, created_on_)>(
          reinterpret_cast<char*>(&created_on_),
          reinterpret_cast<char*>(&other->created_on_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Location::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[33]);
}

// ===================================================================

class SharedSecret::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const SharedSecret* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SharedSecret::_Internal::created_on(const SharedSecret* msg) {
  return *msg->created_on_;
}
void SharedSecret::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
SharedSecret::SharedSecret(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.SharedSecret)
}
SharedSecret::SharedSecret(const SharedSecret& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  secret_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret().empty()) {
    secret_.Set(from._internal_secret(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.SharedSecret)
}

inline void SharedSecret::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
secret_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&created_on_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&created_on_)) + sizeof(state_));
}

SharedSecret::~SharedSecret() {
  // @@protoc_insertion_point(destructor:viam.app.v1.SharedSecret)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SharedSecret::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  secret_.Destroy();
  if (this != internal_default_instance()) delete created_on_;
}

void SharedSecret::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SharedSecret::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.SharedSecret)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  secret_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SharedSecret::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"id\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.SharedSecret.id"));
        } else
          goto handle_unusual;
        continue;
      // string secret = 2 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_secret();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.SharedSecret.secret"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\" json:\"created_on\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.SharedSecret.State state = 4 [json_name = "state", (.tagger.v1.tags) = "bson:\"state\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::viam::app::v1::SharedSecret_State>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SharedSecret::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.SharedSecret)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"id\""];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.SharedSecret.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string secret = 2 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\""];
  if (!this->_internal_secret().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret().data(), static_cast<int>(this->_internal_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.SharedSecret.secret");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_secret(), target);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\" json:\"created_on\""];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.SharedSecret.State state = 4 [json_name = "state", (.tagger.v1.tags) = "bson:\"state\""];
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.SharedSecret)
  return target;
}

size_t SharedSecret::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.SharedSecret)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"id\""];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string secret = 2 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\""];
  if (!this->_internal_secret().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret());
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\" json:\"created_on\""];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // .viam.app.v1.SharedSecret.State state = 4 [json_name = "state", (.tagger.v1.tags) = "bson:\"state\""];
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SharedSecret::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SharedSecret::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SharedSecret::GetClassData() const { return &_class_data_; }

void SharedSecret::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SharedSecret *>(to)->MergeFrom(
      static_cast<const SharedSecret &>(from));
}


void SharedSecret::MergeFrom(const SharedSecret& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.SharedSecret)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_secret().empty()) {
    _internal_set_secret(from._internal_secret());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SharedSecret::CopyFrom(const SharedSecret& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.SharedSecret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SharedSecret::IsInitialized() const {
  return true;
}

void SharedSecret::InternalSwap(SharedSecret* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_, lhs_arena,
      &other->secret_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SharedSecret, state_)
      + sizeof(SharedSecret::state_)
      - PROTOBUF_FIELD_OFFSET(SharedSecret, created_on_)>(
          reinterpret_cast<char*>(&created_on_),
          reinterpret_cast<char*>(&other->created_on_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SharedSecret::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[34]);
}

// ===================================================================

class CreateLocationRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateLocationRequest>()._has_bits_);
  static void set_has_parent_location_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CreateLocationRequest::CreateLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateLocationRequest)
}
CreateLocationRequest::CreateLocationRequest(const CreateLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  parent_location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_parent_location_id()) {
    parent_location_id_.Set(from._internal_parent_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateLocationRequest)
}

inline void CreateLocationRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
parent_location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateLocationRequest::~CreateLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  name_.Destroy();
  parent_location_id_.Destroy();
}

void CreateLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  name_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    parent_location_id_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateLocationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateLocationRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string parent_location_id = 3 [json_name = "parentLocationId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_parent_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateLocationRequest.parent_location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateLocationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateLocationRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string parent_location_id = 3 [json_name = "parentLocationId"];
  if (_internal_has_parent_location_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_location_id().data(), static_cast<int>(this->_internal_parent_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateLocationRequest.parent_location_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_parent_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateLocationRequest)
  return target;
}

size_t CreateLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // optional string parent_location_id = 3 [json_name = "parentLocationId"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLocationRequest::GetClassData() const { return &_class_data_; }

void CreateLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateLocationRequest *>(to)->MergeFrom(
      static_cast<const CreateLocationRequest &>(from));
}


void CreateLocationRequest::MergeFrom(const CreateLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_parent_location_id()) {
    _internal_set_parent_location_id(from._internal_parent_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLocationRequest::CopyFrom(const CreateLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLocationRequest::IsInitialized() const {
  return true;
}

void CreateLocationRequest::InternalSwap(CreateLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &parent_location_id_, lhs_arena,
      &other->parent_location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[35]);
}

// ===================================================================

class CreateLocationResponse::_Internal {
 public:
  static const ::viam::app::v1::Location& location(const CreateLocationResponse* msg);
};

const ::viam::app::v1::Location&
CreateLocationResponse::_Internal::location(const CreateLocationResponse* msg) {
  return *msg->location_;
}
CreateLocationResponse::CreateLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateLocationResponse)
}
CreateLocationResponse::CreateLocationResponse(const CreateLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_location()) {
    location_ = new ::viam::app::v1::Location(*from.location_);
  } else {
    location_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateLocationResponse)
}

inline void CreateLocationResponse::SharedCtor() {
location_ = nullptr;
}

CreateLocationResponse::~CreateLocationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateLocationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLocationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete location_;
}

void CreateLocationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateLocationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLocationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Location location = 1 [json_name = "location"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLocationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateLocationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateLocationResponse)
  return target;
}

size_t CreateLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateLocationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *location_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateLocationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLocationResponse::GetClassData() const { return &_class_data_; }

void CreateLocationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateLocationResponse *>(to)->MergeFrom(
      static_cast<const CreateLocationResponse &>(from));
}


void CreateLocationResponse::MergeFrom(const CreateLocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_location()) {
    _internal_mutable_location()->::viam::app::v1::Location::MergeFrom(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLocationResponse::CopyFrom(const CreateLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLocationResponse::IsInitialized() const {
  return true;
}

void CreateLocationResponse::InternalSwap(CreateLocationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(location_, other->location_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[36]);
}

// ===================================================================

class GetLocationRequest::_Internal {
 public:
};

GetLocationRequest::GetLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetLocationRequest)
}
GetLocationRequest::GetLocationRequest(const GetLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetLocationRequest)
}

inline void GetLocationRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetLocationRequest::~GetLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void GetLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetLocationRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetLocationRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetLocationRequest)
  return target;
}

size_t GetLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLocationRequest::GetClassData() const { return &_class_data_; }

void GetLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetLocationRequest *>(to)->MergeFrom(
      static_cast<const GetLocationRequest &>(from));
}


void GetLocationRequest::MergeFrom(const GetLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLocationRequest::CopyFrom(const GetLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLocationRequest::IsInitialized() const {
  return true;
}

void GetLocationRequest::InternalSwap(GetLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[37]);
}

// ===================================================================

class GetLocationResponse::_Internal {
 public:
  static const ::viam::app::v1::Location& location(const GetLocationResponse* msg);
};

const ::viam::app::v1::Location&
GetLocationResponse::_Internal::location(const GetLocationResponse* msg) {
  return *msg->location_;
}
GetLocationResponse::GetLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetLocationResponse)
}
GetLocationResponse::GetLocationResponse(const GetLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_location()) {
    location_ = new ::viam::app::v1::Location(*from.location_);
  } else {
    location_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetLocationResponse)
}

inline void GetLocationResponse::SharedCtor() {
location_ = nullptr;
}

GetLocationResponse::~GetLocationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetLocationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLocationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete location_;
}

void GetLocationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetLocationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLocationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Location location = 1 [json_name = "location"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLocationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetLocationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetLocationResponse)
  return target;
}

size_t GetLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetLocationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *location_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetLocationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLocationResponse::GetClassData() const { return &_class_data_; }

void GetLocationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetLocationResponse *>(to)->MergeFrom(
      static_cast<const GetLocationResponse &>(from));
}


void GetLocationResponse::MergeFrom(const GetLocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_location()) {
    _internal_mutable_location()->::viam::app::v1::Location::MergeFrom(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLocationResponse::CopyFrom(const GetLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLocationResponse::IsInitialized() const {
  return true;
}

void GetLocationResponse::InternalSwap(GetLocationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(location_, other->location_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[38]);
}

// ===================================================================

class UpdateLocationRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateLocationRequest>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_parent_location_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_region(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

UpdateLocationRequest::UpdateLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateLocationRequest)
}
UpdateLocationRequest::UpdateLocationRequest(const UpdateLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  parent_location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_parent_location_id()) {
    parent_location_id_.Set(from._internal_parent_location_id(), 
      GetArenaForAllocation());
  }
  region_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    region_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_region()) {
    region_.Set(from._internal_region(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateLocationRequest)
}

inline void UpdateLocationRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
parent_location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
region_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  region_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateLocationRequest::~UpdateLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
  name_.Destroy();
  parent_location_id_.Destroy();
  region_.Destroy();
}

void UpdateLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      parent_location_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      region_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateLocationRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      // optional string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateLocationRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string parent_location_id = 3 [json_name = "parentLocationId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_parent_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateLocationRequest.parent_location_id"));
        } else
          goto handle_unusual;
        continue;
      // optional string region = 4 [json_name = "region"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_region();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateLocationRequest.region"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateLocationRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  // optional string name = 2 [json_name = "name"];
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateLocationRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string parent_location_id = 3 [json_name = "parentLocationId"];
  if (_internal_has_parent_location_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_location_id().data(), static_cast<int>(this->_internal_parent_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateLocationRequest.parent_location_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_parent_location_id(), target);
  }

  // optional string region = 4 [json_name = "region"];
  if (_internal_has_region()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_region().data(), static_cast<int>(this->_internal_region().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateLocationRequest.region");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_region(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateLocationRequest)
  return target;
}

size_t UpdateLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string name = 2 [json_name = "name"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string parent_location_id = 3 [json_name = "parentLocationId"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_parent_location_id());
    }

    // optional string region = 4 [json_name = "region"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_region());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateLocationRequest::GetClassData() const { return &_class_data_; }

void UpdateLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateLocationRequest *>(to)->MergeFrom(
      static_cast<const UpdateLocationRequest &>(from));
}


void UpdateLocationRequest::MergeFrom(const UpdateLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_parent_location_id(from._internal_parent_location_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_region(from._internal_region());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateLocationRequest::CopyFrom(const UpdateLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateLocationRequest::IsInitialized() const {
  return true;
}

void UpdateLocationRequest::InternalSwap(UpdateLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &parent_location_id_, lhs_arena,
      &other->parent_location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &region_, lhs_arena,
      &other->region_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[39]);
}

// ===================================================================

class UpdateLocationResponse::_Internal {
 public:
  static const ::viam::app::v1::Location& location(const UpdateLocationResponse* msg);
};

const ::viam::app::v1::Location&
UpdateLocationResponse::_Internal::location(const UpdateLocationResponse* msg) {
  return *msg->location_;
}
UpdateLocationResponse::UpdateLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateLocationResponse)
}
UpdateLocationResponse::UpdateLocationResponse(const UpdateLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_location()) {
    location_ = new ::viam::app::v1::Location(*from.location_);
  } else {
    location_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateLocationResponse)
}

inline void UpdateLocationResponse::SharedCtor() {
location_ = nullptr;
}

UpdateLocationResponse::~UpdateLocationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateLocationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateLocationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete location_;
}

void UpdateLocationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateLocationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateLocationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Location location = 1 [json_name = "location"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateLocationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateLocationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateLocationResponse)
  return target;
}

size_t UpdateLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateLocationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *location_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateLocationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateLocationResponse::GetClassData() const { return &_class_data_; }

void UpdateLocationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateLocationResponse *>(to)->MergeFrom(
      static_cast<const UpdateLocationResponse &>(from));
}


void UpdateLocationResponse::MergeFrom(const UpdateLocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_location()) {
    _internal_mutable_location()->::viam::app::v1::Location::MergeFrom(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateLocationResponse::CopyFrom(const UpdateLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateLocationResponse::IsInitialized() const {
  return true;
}

void UpdateLocationResponse::InternalSwap(UpdateLocationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(location_, other->location_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[40]);
}

// ===================================================================

class DeleteLocationRequest::_Internal {
 public:
};

DeleteLocationRequest::DeleteLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteLocationRequest)
}
DeleteLocationRequest::DeleteLocationRequest(const DeleteLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteLocationRequest)
}

inline void DeleteLocationRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteLocationRequest::~DeleteLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void DeleteLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteLocationRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteLocationRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteLocationRequest)
  return target;
}

size_t DeleteLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteLocationRequest::GetClassData() const { return &_class_data_; }

void DeleteLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteLocationRequest *>(to)->MergeFrom(
      static_cast<const DeleteLocationRequest &>(from));
}


void DeleteLocationRequest::MergeFrom(const DeleteLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteLocationRequest::CopyFrom(const DeleteLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLocationRequest::IsInitialized() const {
  return true;
}

void DeleteLocationRequest::InternalSwap(DeleteLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[41]);
}

// ===================================================================

class DeleteLocationResponse::_Internal {
 public:
};

DeleteLocationResponse::DeleteLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteLocationResponse)
}
DeleteLocationResponse::DeleteLocationResponse(const DeleteLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteLocationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteLocationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[42]);
}

// ===================================================================

class ListLocationsRequest::_Internal {
 public:
};

ListLocationsRequest::ListLocationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListLocationsRequest)
}
ListLocationsRequest::ListLocationsRequest(const ListLocationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListLocationsRequest)
}

inline void ListLocationsRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListLocationsRequest::~ListLocationsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListLocationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListLocationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void ListLocationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListLocationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListLocationsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListLocationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListLocationsRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListLocationsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListLocationsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListLocationsRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListLocationsRequest)
  return target;
}

size_t ListLocationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListLocationsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListLocationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListLocationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListLocationsRequest::GetClassData() const { return &_class_data_; }

void ListLocationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListLocationsRequest *>(to)->MergeFrom(
      static_cast<const ListLocationsRequest &>(from));
}


void ListLocationsRequest::MergeFrom(const ListLocationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListLocationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListLocationsRequest::CopyFrom(const ListLocationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListLocationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLocationsRequest::IsInitialized() const {
  return true;
}

void ListLocationsRequest::InternalSwap(ListLocationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListLocationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[43]);
}

// ===================================================================

class ShareLocationRequest::_Internal {
 public:
};

ShareLocationRequest::ShareLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ShareLocationRequest)
}
ShareLocationRequest::ShareLocationRequest(const ShareLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ShareLocationRequest)
}

inline void ShareLocationRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ShareLocationRequest::~ShareLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ShareLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShareLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
  organization_id_.Destroy();
}

void ShareLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ShareLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ShareLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ShareLocationRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 2 [json_name = "organizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ShareLocationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShareLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ShareLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ShareLocationRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ShareLocationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ShareLocationRequest)
  return target;
}

size_t ShareLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ShareLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ShareLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareLocationRequest::GetClassData() const { return &_class_data_; }

void ShareLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ShareLocationRequest *>(to)->MergeFrom(
      static_cast<const ShareLocationRequest &>(from));
}


void ShareLocationRequest::MergeFrom(const ShareLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ShareLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShareLocationRequest::CopyFrom(const ShareLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ShareLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareLocationRequest::IsInitialized() const {
  return true;
}

void ShareLocationRequest::InternalSwap(ShareLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[44]);
}

// ===================================================================

class ShareLocationResponse::_Internal {
 public:
};

ShareLocationResponse::ShareLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ShareLocationResponse)
}
ShareLocationResponse::ShareLocationResponse(const ShareLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ShareLocationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareLocationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ShareLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[45]);
}

// ===================================================================

class UnshareLocationRequest::_Internal {
 public:
};

UnshareLocationRequest::UnshareLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UnshareLocationRequest)
}
UnshareLocationRequest::UnshareLocationRequest(const UnshareLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UnshareLocationRequest)
}

inline void UnshareLocationRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UnshareLocationRequest::~UnshareLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UnshareLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnshareLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
  organization_id_.Destroy();
}

void UnshareLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnshareLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UnshareLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnshareLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UnshareLocationRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 2 [json_name = "organizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UnshareLocationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnshareLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UnshareLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UnshareLocationRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UnshareLocationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UnshareLocationRequest)
  return target;
}

size_t UnshareLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UnshareLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnshareLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UnshareLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnshareLocationRequest::GetClassData() const { return &_class_data_; }

void UnshareLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UnshareLocationRequest *>(to)->MergeFrom(
      static_cast<const UnshareLocationRequest &>(from));
}


void UnshareLocationRequest::MergeFrom(const UnshareLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UnshareLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnshareLocationRequest::CopyFrom(const UnshareLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UnshareLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnshareLocationRequest::IsInitialized() const {
  return true;
}

void UnshareLocationRequest::InternalSwap(UnshareLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UnshareLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[46]);
}

// ===================================================================

class UnshareLocationResponse::_Internal {
 public:
};

UnshareLocationResponse::UnshareLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UnshareLocationResponse)
}
UnshareLocationResponse::UnshareLocationResponse(const UnshareLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UnshareLocationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnshareLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnshareLocationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UnshareLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[47]);
}

// ===================================================================

class ListLocationsResponse::_Internal {
 public:
};

ListLocationsResponse::ListLocationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  locations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListLocationsResponse)
}
ListLocationsResponse::ListLocationsResponse(const ListLocationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      locations_(from.locations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListLocationsResponse)
}

inline void ListLocationsResponse::SharedCtor() {
}

ListLocationsResponse::~ListLocationsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListLocationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListLocationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListLocationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListLocationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListLocationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListLocationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Location locations = 1 [json_name = "locations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_locations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListLocationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListLocationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Location locations = 1 [json_name = "locations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_locations_size()); i < n; i++) {
    const auto& repfield = this->_internal_locations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListLocationsResponse)
  return target;
}

size_t ListLocationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListLocationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Location locations = 1 [json_name = "locations"];
  total_size += 1UL * this->_internal_locations_size();
  for (const auto& msg : this->locations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListLocationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListLocationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListLocationsResponse::GetClassData() const { return &_class_data_; }

void ListLocationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListLocationsResponse *>(to)->MergeFrom(
      static_cast<const ListLocationsResponse &>(from));
}


void ListLocationsResponse::MergeFrom(const ListLocationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListLocationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListLocationsResponse::CopyFrom(const ListLocationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListLocationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLocationsResponse::IsInitialized() const {
  return true;
}

void ListLocationsResponse::InternalSwap(ListLocationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  locations_.InternalSwap(&other->locations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListLocationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[48]);
}

// ===================================================================

class CreateLocationSecretRequest::_Internal {
 public:
};

CreateLocationSecretRequest::CreateLocationSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateLocationSecretRequest)
}
CreateLocationSecretRequest::CreateLocationSecretRequest(const CreateLocationSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateLocationSecretRequest)
}

inline void CreateLocationSecretRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateLocationSecretRequest::~CreateLocationSecretRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateLocationSecretRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLocationSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void CreateLocationSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateLocationSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateLocationSecretRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLocationSecretRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateLocationSecretRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLocationSecretRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateLocationSecretRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateLocationSecretRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateLocationSecretRequest)
  return target;
}

size_t CreateLocationSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateLocationSecretRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLocationSecretRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateLocationSecretRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLocationSecretRequest::GetClassData() const { return &_class_data_; }

void CreateLocationSecretRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateLocationSecretRequest *>(to)->MergeFrom(
      static_cast<const CreateLocationSecretRequest &>(from));
}


void CreateLocationSecretRequest::MergeFrom(const CreateLocationSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateLocationSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLocationSecretRequest::CopyFrom(const CreateLocationSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateLocationSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLocationSecretRequest::IsInitialized() const {
  return true;
}

void CreateLocationSecretRequest::InternalSwap(CreateLocationSecretRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLocationSecretRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[49]);
}

// ===================================================================

class CreateLocationSecretResponse::_Internal {
 public:
  static const ::viam::app::v1::LocationAuth& auth(const CreateLocationSecretResponse* msg);
};

const ::viam::app::v1::LocationAuth&
CreateLocationSecretResponse::_Internal::auth(const CreateLocationSecretResponse* msg) {
  return *msg->auth_;
}
CreateLocationSecretResponse::CreateLocationSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateLocationSecretResponse)
}
CreateLocationSecretResponse::CreateLocationSecretResponse(const CreateLocationSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_auth()) {
    auth_ = new ::viam::app::v1::LocationAuth(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateLocationSecretResponse)
}

inline void CreateLocationSecretResponse::SharedCtor() {
auth_ = nullptr;
}

CreateLocationSecretResponse::~CreateLocationSecretResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateLocationSecretResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLocationSecretResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete auth_;
}

void CreateLocationSecretResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateLocationSecretResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateLocationSecretResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLocationSecretResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLocationSecretResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateLocationSecretResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::auth(this),
        _Internal::auth(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateLocationSecretResponse)
  return target;
}

size_t CreateLocationSecretResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateLocationSecretResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLocationSecretResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateLocationSecretResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLocationSecretResponse::GetClassData() const { return &_class_data_; }

void CreateLocationSecretResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateLocationSecretResponse *>(to)->MergeFrom(
      static_cast<const CreateLocationSecretResponse &>(from));
}


void CreateLocationSecretResponse::MergeFrom(const CreateLocationSecretResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateLocationSecretResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_auth()) {
    _internal_mutable_auth()->::viam::app::v1::LocationAuth::MergeFrom(from._internal_auth());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLocationSecretResponse::CopyFrom(const CreateLocationSecretResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateLocationSecretResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLocationSecretResponse::IsInitialized() const {
  return true;
}

void CreateLocationSecretResponse::InternalSwap(CreateLocationSecretResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(auth_, other->auth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLocationSecretResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[50]);
}

// ===================================================================

class DeleteLocationSecretRequest::_Internal {
 public:
};

DeleteLocationSecretRequest::DeleteLocationSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteLocationSecretRequest)
}
DeleteLocationSecretRequest::DeleteLocationSecretRequest(const DeleteLocationSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  secret_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret_id().empty()) {
    secret_id_.Set(from._internal_secret_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteLocationSecretRequest)
}

inline void DeleteLocationSecretRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
secret_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteLocationSecretRequest::~DeleteLocationSecretRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteLocationSecretRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteLocationSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
  secret_id_.Destroy();
}

void DeleteLocationSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteLocationSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteLocationSecretRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  secret_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteLocationSecretRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteLocationSecretRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      // string secret_id = 2 [json_name = "secretId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_secret_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteLocationSecretRequest.secret_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteLocationSecretRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteLocationSecretRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteLocationSecretRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  // string secret_id = 2 [json_name = "secretId"];
  if (!this->_internal_secret_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret_id().data(), static_cast<int>(this->_internal_secret_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteLocationSecretRequest.secret_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_secret_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteLocationSecretRequest)
  return target;
}

size_t DeleteLocationSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteLocationSecretRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // string secret_id = 2 [json_name = "secretId"];
  if (!this->_internal_secret_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteLocationSecretRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteLocationSecretRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteLocationSecretRequest::GetClassData() const { return &_class_data_; }

void DeleteLocationSecretRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteLocationSecretRequest *>(to)->MergeFrom(
      static_cast<const DeleteLocationSecretRequest &>(from));
}


void DeleteLocationSecretRequest::MergeFrom(const DeleteLocationSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteLocationSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (!from._internal_secret_id().empty()) {
    _internal_set_secret_id(from._internal_secret_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteLocationSecretRequest::CopyFrom(const DeleteLocationSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteLocationSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLocationSecretRequest::IsInitialized() const {
  return true;
}

void DeleteLocationSecretRequest::InternalSwap(DeleteLocationSecretRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_id_, lhs_arena,
      &other->secret_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteLocationSecretRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[51]);
}

// ===================================================================

class DeleteLocationSecretResponse::_Internal {
 public:
};

DeleteLocationSecretResponse::DeleteLocationSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteLocationSecretResponse)
}
DeleteLocationSecretResponse::DeleteLocationSecretResponse(const DeleteLocationSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteLocationSecretResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteLocationSecretResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteLocationSecretResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteLocationSecretResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[52]);
}

// ===================================================================

class LocationAuthRequest::_Internal {
 public:
};

LocationAuthRequest::LocationAuthRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.LocationAuthRequest)
}
LocationAuthRequest::LocationAuthRequest(const LocationAuthRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.LocationAuthRequest)
}

inline void LocationAuthRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LocationAuthRequest::~LocationAuthRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.LocationAuthRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocationAuthRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void LocationAuthRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocationAuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.LocationAuthRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationAuthRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LocationAuthRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocationAuthRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.LocationAuthRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LocationAuthRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.LocationAuthRequest)
  return target;
}

size_t LocationAuthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.LocationAuthRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocationAuthRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocationAuthRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocationAuthRequest::GetClassData() const { return &_class_data_; }

void LocationAuthRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocationAuthRequest *>(to)->MergeFrom(
      static_cast<const LocationAuthRequest &>(from));
}


void LocationAuthRequest::MergeFrom(const LocationAuthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.LocationAuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocationAuthRequest::CopyFrom(const LocationAuthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.LocationAuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationAuthRequest::IsInitialized() const {
  return true;
}

void LocationAuthRequest::InternalSwap(LocationAuthRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationAuthRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[53]);
}

// ===================================================================

class LocationAuthResponse::_Internal {
 public:
  static const ::viam::app::v1::LocationAuth& auth(const LocationAuthResponse* msg);
};

const ::viam::app::v1::LocationAuth&
LocationAuthResponse::_Internal::auth(const LocationAuthResponse* msg) {
  return *msg->auth_;
}
LocationAuthResponse::LocationAuthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.LocationAuthResponse)
}
LocationAuthResponse::LocationAuthResponse(const LocationAuthResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_auth()) {
    auth_ = new ::viam::app::v1::LocationAuth(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.LocationAuthResponse)
}

inline void LocationAuthResponse::SharedCtor() {
auth_ = nullptr;
}

LocationAuthResponse::~LocationAuthResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.LocationAuthResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocationAuthResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete auth_;
}

void LocationAuthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocationAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.LocationAuthResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationAuthResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocationAuthResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.LocationAuthResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::auth(this),
        _Internal::auth(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.LocationAuthResponse)
  return target;
}

size_t LocationAuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.LocationAuthResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocationAuthResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocationAuthResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocationAuthResponse::GetClassData() const { return &_class_data_; }

void LocationAuthResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocationAuthResponse *>(to)->MergeFrom(
      static_cast<const LocationAuthResponse &>(from));
}


void LocationAuthResponse::MergeFrom(const LocationAuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.LocationAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_auth()) {
    _internal_mutable_auth()->::viam::app::v1::LocationAuth::MergeFrom(from._internal_auth());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocationAuthResponse::CopyFrom(const LocationAuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.LocationAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationAuthResponse::IsInitialized() const {
  return true;
}

void LocationAuthResponse::InternalSwap(LocationAuthResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(auth_, other->auth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationAuthResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[54]);
}

// ===================================================================

class GetRobotRequest::_Internal {
 public:
};

GetRobotRequest::GetRobotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotRequest)
}
GetRobotRequest::GetRobotRequest(const GetRobotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotRequest)
}

inline void GetRobotRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotRequest::~GetRobotRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void GetRobotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotRequest)
  return target;
}

size_t GetRobotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotRequest::GetClassData() const { return &_class_data_; }

void GetRobotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotRequest *>(to)->MergeFrom(
      static_cast<const GetRobotRequest &>(from));
}


void GetRobotRequest::MergeFrom(const GetRobotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotRequest::CopyFrom(const GetRobotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotRequest::IsInitialized() const {
  return true;
}

void GetRobotRequest::InternalSwap(GetRobotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[55]);
}

// ===================================================================

class GetRoverRentalRobotsRequest::_Internal {
 public:
};

GetRoverRentalRobotsRequest::GetRoverRentalRobotsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRoverRentalRobotsRequest)
}
GetRoverRentalRobotsRequest::GetRoverRentalRobotsRequest(const GetRoverRentalRobotsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRoverRentalRobotsRequest)
}

inline void GetRoverRentalRobotsRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRoverRentalRobotsRequest::~GetRoverRentalRobotsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRoverRentalRobotsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoverRentalRobotsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
}

void GetRoverRentalRobotsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRoverRentalRobotsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRoverRentalRobotsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoverRentalRobotsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRoverRentalRobotsRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoverRentalRobotsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRoverRentalRobotsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRoverRentalRobotsRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRoverRentalRobotsRequest)
  return target;
}

size_t GetRoverRentalRobotsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRoverRentalRobotsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoverRentalRobotsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRoverRentalRobotsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoverRentalRobotsRequest::GetClassData() const { return &_class_data_; }

void GetRoverRentalRobotsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRoverRentalRobotsRequest *>(to)->MergeFrom(
      static_cast<const GetRoverRentalRobotsRequest &>(from));
}


void GetRoverRentalRobotsRequest::MergeFrom(const GetRoverRentalRobotsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRoverRentalRobotsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoverRentalRobotsRequest::CopyFrom(const GetRoverRentalRobotsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRoverRentalRobotsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoverRentalRobotsRequest::IsInitialized() const {
  return true;
}

void GetRoverRentalRobotsRequest::InternalSwap(GetRoverRentalRobotsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoverRentalRobotsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[56]);
}

// ===================================================================

class RoverRentalRobot::_Internal {
 public:
};

RoverRentalRobot::RoverRentalRobot(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RoverRentalRobot)
}
RoverRentalRobot::RoverRentalRobot(const RoverRentalRobot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  robot_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_id().empty()) {
    robot_id_.Set(from._internal_robot_id(), 
      GetArenaForAllocation());
  }
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  robot_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_name().empty()) {
    robot_name_.Set(from._internal_robot_name(), 
      GetArenaForAllocation());
  }
  robot_main_part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_main_part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_main_part_id().empty()) {
    robot_main_part_id_.Set(from._internal_robot_main_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RoverRentalRobot)
}

inline void RoverRentalRobot::SharedCtor() {
robot_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
robot_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
robot_main_part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_main_part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RoverRentalRobot::~RoverRentalRobot() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RoverRentalRobot)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoverRentalRobot::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  robot_id_.Destroy();
  location_id_.Destroy();
  robot_name_.Destroy();
  robot_main_part_id_.Destroy();
}

void RoverRentalRobot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoverRentalRobot::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RoverRentalRobot)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robot_id_.ClearToEmpty();
  location_id_.ClearToEmpty();
  robot_name_.ClearToEmpty();
  robot_main_part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoverRentalRobot::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string robot_id = 1 [json_name = "robotId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_robot_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RoverRentalRobot.robot_id"));
        } else
          goto handle_unusual;
        continue;
      // string location_id = 2 [json_name = "locationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RoverRentalRobot.location_id"));
        } else
          goto handle_unusual;
        continue;
      // string robot_name = 3 [json_name = "robotName"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_robot_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RoverRentalRobot.robot_name"));
        } else
          goto handle_unusual;
        continue;
      // string robot_main_part_id = 4 [json_name = "robotMainPartId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_robot_main_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RoverRentalRobot.robot_main_part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoverRentalRobot::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RoverRentalRobot)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_id().data(), static_cast<int>(this->_internal_robot_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RoverRentalRobot.robot_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_robot_id(), target);
  }

  // string location_id = 2 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RoverRentalRobot.location_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_location_id(), target);
  }

  // string robot_name = 3 [json_name = "robotName"];
  if (!this->_internal_robot_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_name().data(), static_cast<int>(this->_internal_robot_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RoverRentalRobot.robot_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_robot_name(), target);
  }

  // string robot_main_part_id = 4 [json_name = "robotMainPartId"];
  if (!this->_internal_robot_main_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_main_part_id().data(), static_cast<int>(this->_internal_robot_main_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RoverRentalRobot.robot_main_part_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_robot_main_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RoverRentalRobot)
  return target;
}

size_t RoverRentalRobot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RoverRentalRobot)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_id());
  }

  // string location_id = 2 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // string robot_name = 3 [json_name = "robotName"];
  if (!this->_internal_robot_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_name());
  }

  // string robot_main_part_id = 4 [json_name = "robotMainPartId"];
  if (!this->_internal_robot_main_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_main_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoverRentalRobot::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RoverRentalRobot::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoverRentalRobot::GetClassData() const { return &_class_data_; }

void RoverRentalRobot::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RoverRentalRobot *>(to)->MergeFrom(
      static_cast<const RoverRentalRobot &>(from));
}


void RoverRentalRobot::MergeFrom(const RoverRentalRobot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RoverRentalRobot)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_robot_id().empty()) {
    _internal_set_robot_id(from._internal_robot_id());
  }
  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (!from._internal_robot_name().empty()) {
    _internal_set_robot_name(from._internal_robot_name());
  }
  if (!from._internal_robot_main_part_id().empty()) {
    _internal_set_robot_main_part_id(from._internal_robot_main_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoverRentalRobot::CopyFrom(const RoverRentalRobot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RoverRentalRobot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoverRentalRobot::IsInitialized() const {
  return true;
}

void RoverRentalRobot::InternalSwap(RoverRentalRobot* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_id_, lhs_arena,
      &other->robot_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_name_, lhs_arena,
      &other->robot_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_main_part_id_, lhs_arena,
      &other->robot_main_part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RoverRentalRobot::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[57]);
}

// ===================================================================

class GetRoverRentalRobotsResponse::_Internal {
 public:
};

GetRoverRentalRobotsResponse::GetRoverRentalRobotsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  robots_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRoverRentalRobotsResponse)
}
GetRoverRentalRobotsResponse::GetRoverRentalRobotsResponse(const GetRoverRentalRobotsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      robots_(from.robots_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRoverRentalRobotsResponse)
}

inline void GetRoverRentalRobotsResponse::SharedCtor() {
}

GetRoverRentalRobotsResponse::~GetRoverRentalRobotsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRoverRentalRobotsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoverRentalRobotsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRoverRentalRobotsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRoverRentalRobotsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRoverRentalRobotsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robots_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoverRentalRobotsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.RoverRentalRobot robots = 1 [json_name = "robots"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_robots(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoverRentalRobotsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRoverRentalRobotsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.RoverRentalRobot robots = 1 [json_name = "robots"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_robots_size()); i < n; i++) {
    const auto& repfield = this->_internal_robots(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRoverRentalRobotsResponse)
  return target;
}

size_t GetRoverRentalRobotsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRoverRentalRobotsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.RoverRentalRobot robots = 1 [json_name = "robots"];
  total_size += 1UL * this->_internal_robots_size();
  for (const auto& msg : this->robots_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoverRentalRobotsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRoverRentalRobotsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoverRentalRobotsResponse::GetClassData() const { return &_class_data_; }

void GetRoverRentalRobotsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRoverRentalRobotsResponse *>(to)->MergeFrom(
      static_cast<const GetRoverRentalRobotsResponse &>(from));
}


void GetRoverRentalRobotsResponse::MergeFrom(const GetRoverRentalRobotsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRoverRentalRobotsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  robots_.MergeFrom(from.robots_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoverRentalRobotsResponse::CopyFrom(const GetRoverRentalRobotsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRoverRentalRobotsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoverRentalRobotsResponse::IsInitialized() const {
  return true;
}

void GetRoverRentalRobotsResponse::InternalSwap(GetRoverRentalRobotsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  robots_.InternalSwap(&other->robots_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoverRentalRobotsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[58]);
}

// ===================================================================

class GetRobotResponse::_Internal {
 public:
  static const ::viam::app::v1::Robot& robot(const GetRobotResponse* msg);
};

const ::viam::app::v1::Robot&
GetRobotResponse::_Internal::robot(const GetRobotResponse* msg) {
  return *msg->robot_;
}
GetRobotResponse::GetRobotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotResponse)
}
GetRobotResponse::GetRobotResponse(const GetRobotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_robot()) {
    robot_ = new ::viam::app::v1::Robot(*from.robot_);
  } else {
    robot_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotResponse)
}

inline void GetRobotResponse::SharedCtor() {
robot_ = nullptr;
}

GetRobotResponse::~GetRobotResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete robot_;
}

void GetRobotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && robot_ != nullptr) {
    delete robot_;
  }
  robot_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
  if (this->_internal_has_robot()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::robot(this),
        _Internal::robot(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotResponse)
  return target;
}

size_t GetRobotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
  if (this->_internal_has_robot()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotResponse::GetClassData() const { return &_class_data_; }

void GetRobotResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotResponse *>(to)->MergeFrom(
      static_cast<const GetRobotResponse &>(from));
}


void GetRobotResponse::MergeFrom(const GetRobotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_robot()) {
    _internal_mutable_robot()->::viam::app::v1::Robot::MergeFrom(from._internal_robot());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotResponse::CopyFrom(const GetRobotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotResponse::IsInitialized() const {
  return true;
}

void GetRobotResponse::InternalSwap(GetRobotResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(robot_, other->robot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[59]);
}

// ===================================================================

class GetRobotPartsRequest::_Internal {
 public:
};

GetRobotPartsRequest::GetRobotPartsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartsRequest)
}
GetRobotPartsRequest::GetRobotPartsRequest(const GetRobotPartsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  robot_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_id().empty()) {
    robot_id_.Set(from._internal_robot_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartsRequest)
}

inline void GetRobotPartsRequest::SharedCtor() {
robot_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotPartsRequest::~GetRobotPartsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  robot_id_.Destroy();
}

void GetRobotPartsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robot_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string robot_id = 1 [json_name = "robotId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_robot_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartsRequest.robot_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_id().data(), static_cast<int>(this->_internal_robot_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartsRequest.robot_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_robot_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartsRequest)
  return target;
}

size_t GetRobotPartsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartsRequest::GetClassData() const { return &_class_data_; }

void GetRobotPartsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartsRequest *>(to)->MergeFrom(
      static_cast<const GetRobotPartsRequest &>(from));
}


void GetRobotPartsRequest::MergeFrom(const GetRobotPartsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_robot_id().empty()) {
    _internal_set_robot_id(from._internal_robot_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartsRequest::CopyFrom(const GetRobotPartsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartsRequest::IsInitialized() const {
  return true;
}

void GetRobotPartsRequest::InternalSwap(GetRobotPartsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_id_, lhs_arena,
      &other->robot_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[60]);
}

// ===================================================================

class GetRobotPartsResponse::_Internal {
 public:
};

GetRobotPartsResponse::GetRobotPartsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  parts_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartsResponse)
}
GetRobotPartsResponse::GetRobotPartsResponse(const GetRobotPartsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      parts_(from.parts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartsResponse)
}

inline void GetRobotPartsResponse::SharedCtor() {
}

GetRobotPartsResponse::~GetRobotPartsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRobotPartsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.RobotPart parts = 1 [json_name = "parts"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_parts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.RobotPart parts = 1 [json_name = "parts"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_parts_size()); i < n; i++) {
    const auto& repfield = this->_internal_parts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartsResponse)
  return target;
}

size_t GetRobotPartsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.RobotPart parts = 1 [json_name = "parts"];
  total_size += 1UL * this->_internal_parts_size();
  for (const auto& msg : this->parts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartsResponse::GetClassData() const { return &_class_data_; }

void GetRobotPartsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartsResponse *>(to)->MergeFrom(
      static_cast<const GetRobotPartsResponse &>(from));
}


void GetRobotPartsResponse::MergeFrom(const GetRobotPartsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  parts_.MergeFrom(from.parts_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartsResponse::CopyFrom(const GetRobotPartsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartsResponse::IsInitialized() const {
  return true;
}

void GetRobotPartsResponse::InternalSwap(GetRobotPartsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  parts_.InternalSwap(&other->parts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[61]);
}

// ===================================================================

class GetRobotPartRequest::_Internal {
 public:
};

GetRobotPartRequest::GetRobotPartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartRequest)
}
GetRobotPartRequest::GetRobotPartRequest(const GetRobotPartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartRequest)
}

inline void GetRobotPartRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotPartRequest::~GetRobotPartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void GetRobotPartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartRequest)
  return target;
}

size_t GetRobotPartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartRequest::GetClassData() const { return &_class_data_; }

void GetRobotPartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartRequest *>(to)->MergeFrom(
      static_cast<const GetRobotPartRequest &>(from));
}


void GetRobotPartRequest::MergeFrom(const GetRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartRequest::CopyFrom(const GetRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartRequest::IsInitialized() const {
  return true;
}

void GetRobotPartRequest::InternalSwap(GetRobotPartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[62]);
}

// ===================================================================

class GetRobotPartResponse::_Internal {
 public:
  static const ::viam::app::v1::RobotPart& part(const GetRobotPartResponse* msg);
};

const ::viam::app::v1::RobotPart&
GetRobotPartResponse::_Internal::part(const GetRobotPartResponse* msg) {
  return *msg->part_;
}
GetRobotPartResponse::GetRobotPartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartResponse)
}
GetRobotPartResponse::GetRobotPartResponse(const GetRobotPartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  config_json_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    config_json_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_json().empty()) {
    config_json_.Set(from._internal_config_json(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_part()) {
    part_ = new ::viam::app::v1::RobotPart(*from.part_);
  } else {
    part_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartResponse)
}

inline void GetRobotPartResponse::SharedCtor() {
config_json_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  config_json_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
part_ = nullptr;
}

GetRobotPartResponse::~GetRobotPartResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  config_json_.Destroy();
  if (this != internal_default_instance()) delete part_;
}

void GetRobotPartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_json_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && part_ != nullptr) {
    delete part_;
  }
  part_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_part(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string config_json = 2 [json_name = "configJson"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_config_json();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartResponse.config_json"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::part(this),
        _Internal::part(this).GetCachedSize(), target, stream);
  }

  // string config_json = 2 [json_name = "configJson"];
  if (!this->_internal_config_json().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_json().data(), static_cast<int>(this->_internal_config_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartResponse.config_json");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_config_json(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartResponse)
  return target;
}

size_t GetRobotPartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string config_json = 2 [json_name = "configJson"];
  if (!this->_internal_config_json().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_json());
  }

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *part_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartResponse::GetClassData() const { return &_class_data_; }

void GetRobotPartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartResponse *>(to)->MergeFrom(
      static_cast<const GetRobotPartResponse &>(from));
}


void GetRobotPartResponse::MergeFrom(const GetRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_config_json().empty()) {
    _internal_set_config_json(from._internal_config_json());
  }
  if (from._internal_has_part()) {
    _internal_mutable_part()->::viam::app::v1::RobotPart::MergeFrom(from._internal_part());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartResponse::CopyFrom(const GetRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartResponse::IsInitialized() const {
  return true;
}

void GetRobotPartResponse::InternalSwap(GetRobotPartResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &config_json_, lhs_arena,
      &other->config_json_, rhs_arena
  );
  swap(part_, other->part_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[63]);
}

// ===================================================================

class GetRobotPartLogsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetRobotPartLogsRequest>()._has_bits_);
  static void set_has_filter(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_page_token(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GetRobotPartLogsRequest::GetRobotPartLogsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartLogsRequest)
}
GetRobotPartLogsRequest::GetRobotPartLogsRequest(const GetRobotPartLogsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_filter()) {
    filter_.Set(from._internal_filter(), 
      GetArenaForAllocation());
  }
  page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_page_token()) {
    page_token_.Set(from._internal_page_token(), 
      GetArenaForAllocation());
  }
  errors_only_ = from.errors_only_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartLogsRequest)
}

inline void GetRobotPartLogsRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
filter_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  filter_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
errors_only_ = false;
}

GetRobotPartLogsRequest::~GetRobotPartLogsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartLogsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartLogsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  filter_.Destroy();
  page_token_.Destroy();
}

void GetRobotPartLogsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartLogsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartLogsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      filter_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      page_token_.ClearNonDefaultToEmpty();
    }
  }
  errors_only_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartLogsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartLogsRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // bool errors_only = 2 [json_name = "errorsOnly"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          errors_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string filter = 3 [json_name = "filter"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_filter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartLogsRequest.filter"));
        } else
          goto handle_unusual;
        continue;
      // optional string page_token = 4 [json_name = "pageToken"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartLogsRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartLogsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartLogsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartLogsRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bool errors_only = 2 [json_name = "errorsOnly"];
  if (this->_internal_errors_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_errors_only(), target);
  }

  // optional string filter = 3 [json_name = "filter"];
  if (_internal_has_filter()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartLogsRequest.filter");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_filter(), target);
  }

  // optional string page_token = 4 [json_name = "pageToken"];
  if (_internal_has_page_token()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartLogsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartLogsRequest)
  return target;
}

size_t GetRobotPartLogsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartLogsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string filter = 3 [json_name = "filter"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_filter());
    }

    // optional string page_token = 4 [json_name = "pageToken"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_page_token());
    }

  }
  // bool errors_only = 2 [json_name = "errorsOnly"];
  if (this->_internal_errors_only() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartLogsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartLogsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartLogsRequest::GetClassData() const { return &_class_data_; }

void GetRobotPartLogsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartLogsRequest *>(to)->MergeFrom(
      static_cast<const GetRobotPartLogsRequest &>(from));
}


void GetRobotPartLogsRequest::MergeFrom(const GetRobotPartLogsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartLogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_filter(from._internal_filter());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_page_token(from._internal_page_token());
    }
  }
  if (from._internal_errors_only() != 0) {
    _internal_set_errors_only(from._internal_errors_only());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartLogsRequest::CopyFrom(const GetRobotPartLogsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartLogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartLogsRequest::IsInitialized() const {
  return true;
}

void GetRobotPartLogsRequest::InternalSwap(GetRobotPartLogsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &filter_, lhs_arena,
      &other->filter_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(errors_only_, other->errors_only_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartLogsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[64]);
}

// ===================================================================

class LogEntry::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& time(const LogEntry* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& caller(const LogEntry* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
LogEntry::_Internal::time(const LogEntry* msg) {
  return *msg->time_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
LogEntry::_Internal::caller(const LogEntry* msg) {
  return *msg->caller_;
}
void LogEntry::clear_time() {
  if (GetArenaForAllocation() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
}
void LogEntry::clear_caller() {
  if (GetArenaForAllocation() == nullptr && caller_ != nullptr) {
    delete caller_;
  }
  caller_ = nullptr;
}
void LogEntry::clear_fields() {
  fields_.Clear();
}
LogEntry::LogEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  fields_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.LogEntry)
}
LogEntry::LogEntry(const LogEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_host().empty()) {
    host_.Set(from._internal_host(), 
      GetArenaForAllocation());
  }
  level_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    level_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_level().empty()) {
    level_.Set(from._internal_level(), 
      GetArenaForAllocation());
  }
  logger_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    logger_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_logger_name().empty()) {
    logger_name_.Set(from._internal_logger_name(), 
      GetArenaForAllocation());
  }
  message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(from._internal_message(), 
      GetArenaForAllocation());
  }
  stack_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    stack_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stack().empty()) {
    stack_.Set(from._internal_stack(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_time()) {
    time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.time_);
  } else {
    time_ = nullptr;
  }
  if (from._internal_has_caller()) {
    caller_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.caller_);
  } else {
    caller_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.LogEntry)
}

inline void LogEntry::SharedCtor() {
host_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  host_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
level_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  level_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
logger_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  logger_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
message_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
stack_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  stack_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&time_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&caller_) -
    reinterpret_cast<char*>(&time_)) + sizeof(caller_));
}

LogEntry::~LogEntry() {
  // @@protoc_insertion_point(destructor:viam.app.v1.LogEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  host_.Destroy();
  level_.Destroy();
  logger_name_.Destroy();
  message_.Destroy();
  stack_.Destroy();
  if (this != internal_default_instance()) delete time_;
  if (this != internal_default_instance()) delete caller_;
}

void LogEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.LogEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  host_.ClearToEmpty();
  level_.ClearToEmpty();
  logger_name_.ClearToEmpty();
  message_.ClearToEmpty();
  stack_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
  if (GetArenaForAllocation() == nullptr && caller_ != nullptr) {
    delete caller_;
  }
  caller_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string host = 1 [json_name = "host"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_host();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LogEntry.host"));
        } else
          goto handle_unusual;
        continue;
      // string level = 2 [json_name = "level"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_level();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LogEntry.level"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp time = 3 [json_name = "time"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string logger_name = 4 [json_name = "loggerName"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_logger_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LogEntry.logger_name"));
        } else
          goto handle_unusual;
        continue;
      // string message = 5 [json_name = "message"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LogEntry.message"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct caller = 6 [json_name = "caller"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_caller(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string stack = 7 [json_name = "stack"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_stack();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LogEntry.stack"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.protobuf.Struct fields = 8 [json_name = "fields"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fields(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.LogEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1 [json_name = "host"];
  if (!this->_internal_host().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LogEntry.host");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_host(), target);
  }

  // string level = 2 [json_name = "level"];
  if (!this->_internal_level().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_level().data(), static_cast<int>(this->_internal_level().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LogEntry.level");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_level(), target);
  }

  // .google.protobuf.Timestamp time = 3 [json_name = "time"];
  if (this->_internal_has_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::time(this),
        _Internal::time(this).GetCachedSize(), target, stream);
  }

  // string logger_name = 4 [json_name = "loggerName"];
  if (!this->_internal_logger_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_logger_name().data(), static_cast<int>(this->_internal_logger_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LogEntry.logger_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_logger_name(), target);
  }

  // string message = 5 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LogEntry.message");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_message(), target);
  }

  // .google.protobuf.Struct caller = 6 [json_name = "caller"];
  if (this->_internal_has_caller()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::caller(this),
        _Internal::caller(this).GetCachedSize(), target, stream);
  }

  // string stack = 7 [json_name = "stack"];
  if (!this->_internal_stack().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stack().data(), static_cast<int>(this->_internal_stack().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LogEntry.stack");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_stack(), target);
  }

  // repeated .google.protobuf.Struct fields = 8 [json_name = "fields"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fields_size()); i < n; i++) {
    const auto& repfield = this->_internal_fields(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.LogEntry)
  return target;
}

size_t LogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.LogEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Struct fields = 8 [json_name = "fields"];
  total_size += 1UL * this->_internal_fields_size();
  for (const auto& msg : this->fields_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string host = 1 [json_name = "host"];
  if (!this->_internal_host().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  // string level = 2 [json_name = "level"];
  if (!this->_internal_level().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_level());
  }

  // string logger_name = 4 [json_name = "loggerName"];
  if (!this->_internal_logger_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_logger_name());
  }

  // string message = 5 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // string stack = 7 [json_name = "stack"];
  if (!this->_internal_stack().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stack());
  }

  // .google.protobuf.Timestamp time = 3 [json_name = "time"];
  if (this->_internal_has_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // .google.protobuf.Struct caller = 6 [json_name = "caller"];
  if (this->_internal_has_caller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *caller_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LogEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogEntry::GetClassData() const { return &_class_data_; }

void LogEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LogEntry *>(to)->MergeFrom(
      static_cast<const LogEntry &>(from));
}


void LogEntry::MergeFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  if (!from._internal_host().empty()) {
    _internal_set_host(from._internal_host());
  }
  if (!from._internal_level().empty()) {
    _internal_set_level(from._internal_level());
  }
  if (!from._internal_logger_name().empty()) {
    _internal_set_logger_name(from._internal_logger_name());
  }
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (!from._internal_stack().empty()) {
    _internal_set_stack(from._internal_stack());
  }
  if (from._internal_has_time()) {
    _internal_mutable_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_time());
  }
  if (from._internal_has_caller()) {
    _internal_mutable_caller()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_caller());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogEntry::CopyFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogEntry::IsInitialized() const {
  return true;
}

void LogEntry::InternalSwap(LogEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  fields_.InternalSwap(&other->fields_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &host_, lhs_arena,
      &other->host_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &level_, lhs_arena,
      &other->level_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &logger_name_, lhs_arena,
      &other->logger_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &stack_, lhs_arena,
      &other->stack_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LogEntry, caller_)
      + sizeof(LogEntry::caller_)
      - PROTOBUF_FIELD_OFFSET(LogEntry, time_)>(
          reinterpret_cast<char*>(&time_),
          reinterpret_cast<char*>(&other->time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LogEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[65]);
}

// ===================================================================

class GetRobotPartLogsResponse::_Internal {
 public:
};

GetRobotPartLogsResponse::GetRobotPartLogsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  logs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartLogsResponse)
}
GetRobotPartLogsResponse::GetRobotPartLogsResponse(const GetRobotPartLogsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      logs_(from.logs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartLogsResponse)
}

inline void GetRobotPartLogsResponse::SharedCtor() {
next_page_token_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotPartLogsResponse::~GetRobotPartLogsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartLogsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartLogsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.Destroy();
}

void GetRobotPartLogsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartLogsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartLogsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logs_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartLogsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.LogEntry logs = 1 [json_name = "logs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_logs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2 [json_name = "nextPageToken"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartLogsResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartLogsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartLogsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.LogEntry logs = 1 [json_name = "logs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_logs_size()); i < n; i++) {
    const auto& repfield = this->_internal_logs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartLogsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartLogsResponse)
  return target;
}

size_t GetRobotPartLogsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartLogsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.LogEntry logs = 1 [json_name = "logs"];
  total_size += 1UL * this->_internal_logs_size();
  for (const auto& msg : this->logs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartLogsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartLogsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartLogsResponse::GetClassData() const { return &_class_data_; }

void GetRobotPartLogsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartLogsResponse *>(to)->MergeFrom(
      static_cast<const GetRobotPartLogsResponse &>(from));
}


void GetRobotPartLogsResponse::MergeFrom(const GetRobotPartLogsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartLogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  logs_.MergeFrom(from.logs_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartLogsResponse::CopyFrom(const GetRobotPartLogsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartLogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartLogsResponse::IsInitialized() const {
  return true;
}

void GetRobotPartLogsResponse::InternalSwap(GetRobotPartLogsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  logs_.InternalSwap(&other->logs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartLogsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[66]);
}

// ===================================================================

class TailRobotPartLogsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<TailRobotPartLogsRequest>()._has_bits_);
  static void set_has_filter(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TailRobotPartLogsRequest::TailRobotPartLogsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.TailRobotPartLogsRequest)
}
TailRobotPartLogsRequest::TailRobotPartLogsRequest(const TailRobotPartLogsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_filter()) {
    filter_.Set(from._internal_filter(), 
      GetArenaForAllocation());
  }
  errors_only_ = from.errors_only_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.TailRobotPartLogsRequest)
}

inline void TailRobotPartLogsRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
filter_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  filter_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
errors_only_ = false;
}

TailRobotPartLogsRequest::~TailRobotPartLogsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.TailRobotPartLogsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TailRobotPartLogsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  filter_.Destroy();
}

void TailRobotPartLogsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TailRobotPartLogsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.TailRobotPartLogsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    filter_.ClearNonDefaultToEmpty();
  }
  errors_only_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TailRobotPartLogsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.TailRobotPartLogsRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // bool errors_only = 2 [json_name = "errorsOnly"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          errors_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string filter = 3 [json_name = "filter"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_filter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.TailRobotPartLogsRequest.filter"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TailRobotPartLogsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.TailRobotPartLogsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.TailRobotPartLogsRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bool errors_only = 2 [json_name = "errorsOnly"];
  if (this->_internal_errors_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_errors_only(), target);
  }

  // optional string filter = 3 [json_name = "filter"];
  if (_internal_has_filter()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.TailRobotPartLogsRequest.filter");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_filter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.TailRobotPartLogsRequest)
  return target;
}

size_t TailRobotPartLogsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.TailRobotPartLogsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // optional string filter = 3 [json_name = "filter"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // bool errors_only = 2 [json_name = "errorsOnly"];
  if (this->_internal_errors_only() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TailRobotPartLogsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TailRobotPartLogsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TailRobotPartLogsRequest::GetClassData() const { return &_class_data_; }

void TailRobotPartLogsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TailRobotPartLogsRequest *>(to)->MergeFrom(
      static_cast<const TailRobotPartLogsRequest &>(from));
}


void TailRobotPartLogsRequest::MergeFrom(const TailRobotPartLogsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.TailRobotPartLogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_has_filter()) {
    _internal_set_filter(from._internal_filter());
  }
  if (from._internal_errors_only() != 0) {
    _internal_set_errors_only(from._internal_errors_only());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TailRobotPartLogsRequest::CopyFrom(const TailRobotPartLogsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.TailRobotPartLogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TailRobotPartLogsRequest::IsInitialized() const {
  return true;
}

void TailRobotPartLogsRequest::InternalSwap(TailRobotPartLogsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &filter_, lhs_arena,
      &other->filter_, rhs_arena
  );
  swap(errors_only_, other->errors_only_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TailRobotPartLogsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[67]);
}

// ===================================================================

class TailRobotPartLogsResponse::_Internal {
 public:
};

TailRobotPartLogsResponse::TailRobotPartLogsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  logs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.TailRobotPartLogsResponse)
}
TailRobotPartLogsResponse::TailRobotPartLogsResponse(const TailRobotPartLogsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      logs_(from.logs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.TailRobotPartLogsResponse)
}

inline void TailRobotPartLogsResponse::SharedCtor() {
}

TailRobotPartLogsResponse::~TailRobotPartLogsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.TailRobotPartLogsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TailRobotPartLogsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TailRobotPartLogsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TailRobotPartLogsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.TailRobotPartLogsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TailRobotPartLogsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.LogEntry logs = 1 [json_name = "logs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_logs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TailRobotPartLogsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.TailRobotPartLogsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.LogEntry logs = 1 [json_name = "logs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_logs_size()); i < n; i++) {
    const auto& repfield = this->_internal_logs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.TailRobotPartLogsResponse)
  return target;
}

size_t TailRobotPartLogsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.TailRobotPartLogsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.LogEntry logs = 1 [json_name = "logs"];
  total_size += 1UL * this->_internal_logs_size();
  for (const auto& msg : this->logs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TailRobotPartLogsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TailRobotPartLogsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TailRobotPartLogsResponse::GetClassData() const { return &_class_data_; }

void TailRobotPartLogsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TailRobotPartLogsResponse *>(to)->MergeFrom(
      static_cast<const TailRobotPartLogsResponse &>(from));
}


void TailRobotPartLogsResponse::MergeFrom(const TailRobotPartLogsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.TailRobotPartLogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  logs_.MergeFrom(from.logs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TailRobotPartLogsResponse::CopyFrom(const TailRobotPartLogsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.TailRobotPartLogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TailRobotPartLogsResponse::IsInitialized() const {
  return true;
}

void TailRobotPartLogsResponse::InternalSwap(TailRobotPartLogsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  logs_.InternalSwap(&other->logs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TailRobotPartLogsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[68]);
}

// ===================================================================

class GetRobotPartHistoryRequest::_Internal {
 public:
};

GetRobotPartHistoryRequest::GetRobotPartHistoryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartHistoryRequest)
}
GetRobotPartHistoryRequest::GetRobotPartHistoryRequest(const GetRobotPartHistoryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartHistoryRequest)
}

inline void GetRobotPartHistoryRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotPartHistoryRequest::~GetRobotPartHistoryRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartHistoryRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartHistoryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void GetRobotPartHistoryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartHistoryRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartHistoryRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartHistoryRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartHistoryRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartHistoryRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartHistoryRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartHistoryRequest)
  return target;
}

size_t GetRobotPartHistoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartHistoryRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartHistoryRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartHistoryRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartHistoryRequest::GetClassData() const { return &_class_data_; }

void GetRobotPartHistoryRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartHistoryRequest *>(to)->MergeFrom(
      static_cast<const GetRobotPartHistoryRequest &>(from));
}


void GetRobotPartHistoryRequest::MergeFrom(const GetRobotPartHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartHistoryRequest::CopyFrom(const GetRobotPartHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartHistoryRequest::IsInitialized() const {
  return true;
}

void GetRobotPartHistoryRequest::InternalSwap(GetRobotPartHistoryRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartHistoryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[69]);
}

// ===================================================================

class GetRobotPartHistoryResponse::_Internal {
 public:
};

GetRobotPartHistoryResponse::GetRobotPartHistoryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  history_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartHistoryResponse)
}
GetRobotPartHistoryResponse::GetRobotPartHistoryResponse(const GetRobotPartHistoryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      history_(from.history_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartHistoryResponse)
}

inline void GetRobotPartHistoryResponse::SharedCtor() {
}

GetRobotPartHistoryResponse::~GetRobotPartHistoryResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartHistoryResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartHistoryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRobotPartHistoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartHistoryResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  history_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartHistoryResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.RobotPartHistoryEntry history = 1 [json_name = "history"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_history(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartHistoryResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartHistoryResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.RobotPartHistoryEntry history = 1 [json_name = "history"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_history_size()); i < n; i++) {
    const auto& repfield = this->_internal_history(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartHistoryResponse)
  return target;
}

size_t GetRobotPartHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartHistoryResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.RobotPartHistoryEntry history = 1 [json_name = "history"];
  total_size += 1UL * this->_internal_history_size();
  for (const auto& msg : this->history_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartHistoryResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartHistoryResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartHistoryResponse::GetClassData() const { return &_class_data_; }

void GetRobotPartHistoryResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartHistoryResponse *>(to)->MergeFrom(
      static_cast<const GetRobotPartHistoryResponse &>(from));
}


void GetRobotPartHistoryResponse::MergeFrom(const GetRobotPartHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  history_.MergeFrom(from.history_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartHistoryResponse::CopyFrom(const GetRobotPartHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartHistoryResponse::IsInitialized() const {
  return true;
}

void GetRobotPartHistoryResponse::InternalSwap(GetRobotPartHistoryResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  history_.InternalSwap(&other->history_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartHistoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[70]);
}

// ===================================================================

class UpdateRobotPartRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& robot_config(const UpdateRobotPartRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
UpdateRobotPartRequest::_Internal::robot_config(const UpdateRobotPartRequest* msg) {
  return *msg->robot_config_;
}
void UpdateRobotPartRequest::clear_robot_config() {
  if (GetArenaForAllocation() == nullptr && robot_config_ != nullptr) {
    delete robot_config_;
  }
  robot_config_ = nullptr;
}
UpdateRobotPartRequest::UpdateRobotPartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRobotPartRequest)
}
UpdateRobotPartRequest::UpdateRobotPartRequest(const UpdateRobotPartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_robot_config()) {
    robot_config_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.robot_config_);
  } else {
    robot_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRobotPartRequest)
}

inline void UpdateRobotPartRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
robot_config_ = nullptr;
}

UpdateRobotPartRequest::~UpdateRobotPartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateRobotPartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRobotPartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  if (this != internal_default_instance()) delete robot_config_;
}

void UpdateRobotPartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRobotPartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateRobotPartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && robot_config_ != nullptr) {
    delete robot_config_;
  }
  robot_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRobotPartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotPartRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotPartRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct robot_config = 3 [json_name = "robotConfig"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRobotPartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateRobotPartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotPartRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotPartRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Struct robot_config = 3 [json_name = "robotConfig"];
  if (this->_internal_has_robot_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::robot_config(this),
        _Internal::robot_config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateRobotPartRequest)
  return target;
}

size_t UpdateRobotPartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateRobotPartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct robot_config = 3 [json_name = "robotConfig"];
  if (this->_internal_has_robot_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRobotPartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRobotPartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRobotPartRequest::GetClassData() const { return &_class_data_; }

void UpdateRobotPartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRobotPartRequest *>(to)->MergeFrom(
      static_cast<const UpdateRobotPartRequest &>(from));
}


void UpdateRobotPartRequest::MergeFrom(const UpdateRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateRobotPartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_robot_config()) {
    _internal_mutable_robot_config()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_robot_config());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRobotPartRequest::CopyFrom(const UpdateRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateRobotPartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRobotPartRequest::IsInitialized() const {
  return true;
}

void UpdateRobotPartRequest::InternalSwap(UpdateRobotPartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(robot_config_, other->robot_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRobotPartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[71]);
}

// ===================================================================

class UpdateRobotPartResponse::_Internal {
 public:
  static const ::viam::app::v1::RobotPart& part(const UpdateRobotPartResponse* msg);
};

const ::viam::app::v1::RobotPart&
UpdateRobotPartResponse::_Internal::part(const UpdateRobotPartResponse* msg) {
  return *msg->part_;
}
UpdateRobotPartResponse::UpdateRobotPartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRobotPartResponse)
}
UpdateRobotPartResponse::UpdateRobotPartResponse(const UpdateRobotPartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_part()) {
    part_ = new ::viam::app::v1::RobotPart(*from.part_);
  } else {
    part_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRobotPartResponse)
}

inline void UpdateRobotPartResponse::SharedCtor() {
part_ = nullptr;
}

UpdateRobotPartResponse::~UpdateRobotPartResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateRobotPartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRobotPartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete part_;
}

void UpdateRobotPartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRobotPartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateRobotPartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && part_ != nullptr) {
    delete part_;
  }
  part_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRobotPartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_part(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRobotPartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateRobotPartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::part(this),
        _Internal::part(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateRobotPartResponse)
  return target;
}

size_t UpdateRobotPartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateRobotPartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *part_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRobotPartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRobotPartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRobotPartResponse::GetClassData() const { return &_class_data_; }

void UpdateRobotPartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRobotPartResponse *>(to)->MergeFrom(
      static_cast<const UpdateRobotPartResponse &>(from));
}


void UpdateRobotPartResponse::MergeFrom(const UpdateRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateRobotPartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_part()) {
    _internal_mutable_part()->::viam::app::v1::RobotPart::MergeFrom(from._internal_part());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRobotPartResponse::CopyFrom(const UpdateRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateRobotPartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRobotPartResponse::IsInitialized() const {
  return true;
}

void UpdateRobotPartResponse::InternalSwap(UpdateRobotPartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(part_, other->part_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRobotPartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[72]);
}

// ===================================================================

class NewRobotPartRequest::_Internal {
 public:
};

NewRobotPartRequest::NewRobotPartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.NewRobotPartRequest)
}
NewRobotPartRequest::NewRobotPartRequest(const NewRobotPartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  robot_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_id().empty()) {
    robot_id_.Set(from._internal_robot_id(), 
      GetArenaForAllocation());
  }
  part_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_name().empty()) {
    part_name_.Set(from._internal_part_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.NewRobotPartRequest)
}

inline void NewRobotPartRequest::SharedCtor() {
robot_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
part_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewRobotPartRequest::~NewRobotPartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.NewRobotPartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewRobotPartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  robot_id_.Destroy();
  part_name_.Destroy();
}

void NewRobotPartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewRobotPartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.NewRobotPartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robot_id_.ClearToEmpty();
  part_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewRobotPartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string robot_id = 1 [json_name = "robotId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_robot_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotPartRequest.robot_id"));
        } else
          goto handle_unusual;
        continue;
      // string part_name = 2 [json_name = "partName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_part_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotPartRequest.part_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewRobotPartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.NewRobotPartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_id().data(), static_cast<int>(this->_internal_robot_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotPartRequest.robot_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_robot_id(), target);
  }

  // string part_name = 2 [json_name = "partName"];
  if (!this->_internal_part_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_name().data(), static_cast<int>(this->_internal_part_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotPartRequest.part_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_part_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.NewRobotPartRequest)
  return target;
}

size_t NewRobotPartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.NewRobotPartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_id());
  }

  // string part_name = 2 [json_name = "partName"];
  if (!this->_internal_part_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewRobotPartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NewRobotPartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewRobotPartRequest::GetClassData() const { return &_class_data_; }

void NewRobotPartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NewRobotPartRequest *>(to)->MergeFrom(
      static_cast<const NewRobotPartRequest &>(from));
}


void NewRobotPartRequest::MergeFrom(const NewRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.NewRobotPartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_robot_id().empty()) {
    _internal_set_robot_id(from._internal_robot_id());
  }
  if (!from._internal_part_name().empty()) {
    _internal_set_part_name(from._internal_part_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewRobotPartRequest::CopyFrom(const NewRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.NewRobotPartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewRobotPartRequest::IsInitialized() const {
  return true;
}

void NewRobotPartRequest::InternalSwap(NewRobotPartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_id_, lhs_arena,
      &other->robot_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_name_, lhs_arena,
      &other->part_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NewRobotPartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[73]);
}

// ===================================================================

class NewRobotPartResponse::_Internal {
 public:
};

NewRobotPartResponse::NewRobotPartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.NewRobotPartResponse)
}
NewRobotPartResponse::NewRobotPartResponse(const NewRobotPartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.NewRobotPartResponse)
}

inline void NewRobotPartResponse::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewRobotPartResponse::~NewRobotPartResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.NewRobotPartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewRobotPartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void NewRobotPartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewRobotPartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.NewRobotPartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewRobotPartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotPartResponse.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewRobotPartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.NewRobotPartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotPartResponse.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.NewRobotPartResponse)
  return target;
}

size_t NewRobotPartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.NewRobotPartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewRobotPartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NewRobotPartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewRobotPartResponse::GetClassData() const { return &_class_data_; }

void NewRobotPartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NewRobotPartResponse *>(to)->MergeFrom(
      static_cast<const NewRobotPartResponse &>(from));
}


void NewRobotPartResponse::MergeFrom(const NewRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.NewRobotPartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewRobotPartResponse::CopyFrom(const NewRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.NewRobotPartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewRobotPartResponse::IsInitialized() const {
  return true;
}

void NewRobotPartResponse::InternalSwap(NewRobotPartResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NewRobotPartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[74]);
}

// ===================================================================

class DeleteRobotPartRequest::_Internal {
 public:
};

DeleteRobotPartRequest::DeleteRobotPartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotPartRequest)
}
DeleteRobotPartRequest::DeleteRobotPartRequest(const DeleteRobotPartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotPartRequest)
}

inline void DeleteRobotPartRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRobotPartRequest::~DeleteRobotPartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteRobotPartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRobotPartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void DeleteRobotPartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRobotPartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteRobotPartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRobotPartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteRobotPartRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRobotPartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteRobotPartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteRobotPartRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteRobotPartRequest)
  return target;
}

size_t DeleteRobotPartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteRobotPartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotPartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRobotPartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotPartRequest::GetClassData() const { return &_class_data_; }

void DeleteRobotPartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteRobotPartRequest *>(to)->MergeFrom(
      static_cast<const DeleteRobotPartRequest &>(from));
}


void DeleteRobotPartRequest::MergeFrom(const DeleteRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteRobotPartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRobotPartRequest::CopyFrom(const DeleteRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteRobotPartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRobotPartRequest::IsInitialized() const {
  return true;
}

void DeleteRobotPartRequest::InternalSwap(DeleteRobotPartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotPartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[75]);
}

// ===================================================================

class DeleteRobotPartResponse::_Internal {
 public:
};

DeleteRobotPartResponse::DeleteRobotPartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotPartResponse)
}
DeleteRobotPartResponse::DeleteRobotPartResponse(const DeleteRobotPartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotPartResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotPartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotPartResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotPartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[76]);
}

// ===================================================================

class Fragment::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& fragment(const Fragment* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const Fragment* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
Fragment::_Internal::fragment(const Fragment* msg) {
  return *msg->fragment_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Fragment::_Internal::created_on(const Fragment* msg) {
  return *msg->created_on_;
}
void Fragment::clear_fragment() {
  if (GetArenaForAllocation() == nullptr && fragment_ != nullptr) {
    delete fragment_;
  }
  fragment_ = nullptr;
}
void Fragment::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
Fragment::Fragment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Fragment)
}
Fragment::Fragment(const Fragment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  organization_owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_owner_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_owner().empty()) {
    organization_owner_.Set(from._internal_organization_owner(), 
      GetArenaForAllocation());
  }
  organization_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_name().empty()) {
    organization_name_.Set(from._internal_organization_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_fragment()) {
    fragment_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.fragment_);
  } else {
    fragment_ = nullptr;
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  ::memcpy(&public__, &from.public__,
    static_cast<size_t>(reinterpret_cast<char*>(&organization_count_) -
    reinterpret_cast<char*>(&public__)) + sizeof(organization_count_));
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Fragment)
}

inline void Fragment::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_owner_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_owner_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&fragment_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&organization_count_) -
    reinterpret_cast<char*>(&fragment_)) + sizeof(organization_count_));
}

Fragment::~Fragment() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Fragment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Fragment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  organization_owner_.Destroy();
  organization_name_.Destroy();
  if (this != internal_default_instance()) delete fragment_;
  if (this != internal_default_instance()) delete created_on_;
}

void Fragment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Fragment::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Fragment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  organization_owner_.ClearToEmpty();
  organization_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && fragment_ != nullptr) {
    delete fragment_;
  }
  fragment_ = nullptr;
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  ::memset(&public__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&organization_count_) -
      reinterpret_cast<char*>(&public__)) + sizeof(organization_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Fragment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Fragment.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Fragment.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct fragment = 3 [json_name = "fragment", (.tagger.v1.tags) = "bson:\"fragment\" json:\"fragment\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_fragment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string organization_owner = 4 [json_name = "organizationOwner", (.tagger.v1.tags) = "bson:\"organization_owner\" json:\"owner\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_organization_owner();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Fragment.organization_owner"));
        } else
          goto handle_unusual;
        continue;
      // bool public = 5 [json_name = "public", (.tagger.v1.tags) = "bson:\"public\" json:\"public\""];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          public__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 6 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string organization_name = 7 [json_name = "organizationName"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_organization_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Fragment.organization_name"));
        } else
          goto handle_unusual;
        continue;
      // int32 robot_part_count = 9 [json_name = "robotPartCount"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          robot_part_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 organization_count = 10 [json_name = "organizationCount"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          organization_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool only_used_by_owner = 11 [json_name = "onlyUsedByOwner"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          only_used_by_owner_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Fragment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Fragment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Fragment.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Fragment.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Struct fragment = 3 [json_name = "fragment", (.tagger.v1.tags) = "bson:\"fragment\" json:\"fragment\""];
  if (this->_internal_has_fragment()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::fragment(this),
        _Internal::fragment(this).GetCachedSize(), target, stream);
  }

  // string organization_owner = 4 [json_name = "organizationOwner", (.tagger.v1.tags) = "bson:\"organization_owner\" json:\"owner\""];
  if (!this->_internal_organization_owner().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_owner().data(), static_cast<int>(this->_internal_organization_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Fragment.organization_owner");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_organization_owner(), target);
  }

  // bool public = 5 [json_name = "public", (.tagger.v1.tags) = "bson:\"public\" json:\"public\""];
  if (this->_internal_public_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_public_(), target);
  }

  // .google.protobuf.Timestamp created_on = 6 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // string organization_name = 7 [json_name = "organizationName"];
  if (!this->_internal_organization_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_name().data(), static_cast<int>(this->_internal_organization_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Fragment.organization_name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_organization_name(), target);
  }

  // int32 robot_part_count = 9 [json_name = "robotPartCount"];
  if (this->_internal_robot_part_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_robot_part_count(), target);
  }

  // int32 organization_count = 10 [json_name = "organizationCount"];
  if (this->_internal_organization_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(10, this->_internal_organization_count(), target);
  }

  // bool only_used_by_owner = 11 [json_name = "onlyUsedByOwner"];
  if (this->_internal_only_used_by_owner() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(11, this->_internal_only_used_by_owner(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Fragment)
  return target;
}

size_t Fragment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Fragment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string organization_owner = 4 [json_name = "organizationOwner", (.tagger.v1.tags) = "bson:\"organization_owner\" json:\"owner\""];
  if (!this->_internal_organization_owner().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_owner());
  }

  // string organization_name = 7 [json_name = "organizationName"];
  if (!this->_internal_organization_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_name());
  }

  // .google.protobuf.Struct fragment = 3 [json_name = "fragment", (.tagger.v1.tags) = "bson:\"fragment\" json:\"fragment\""];
  if (this->_internal_has_fragment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fragment_);
  }

  // .google.protobuf.Timestamp created_on = 6 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // bool public = 5 [json_name = "public", (.tagger.v1.tags) = "bson:\"public\" json:\"public\""];
  if (this->_internal_public_() != 0) {
    total_size += 1 + 1;
  }

  // bool only_used_by_owner = 11 [json_name = "onlyUsedByOwner"];
  if (this->_internal_only_used_by_owner() != 0) {
    total_size += 1 + 1;
  }

  // int32 robot_part_count = 9 [json_name = "robotPartCount"];
  if (this->_internal_robot_part_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_robot_part_count());
  }

  // int32 organization_count = 10 [json_name = "organizationCount"];
  if (this->_internal_organization_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_organization_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Fragment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Fragment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Fragment::GetClassData() const { return &_class_data_; }

void Fragment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Fragment *>(to)->MergeFrom(
      static_cast<const Fragment &>(from));
}


void Fragment::MergeFrom(const Fragment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Fragment)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_organization_owner().empty()) {
    _internal_set_organization_owner(from._internal_organization_owner());
  }
  if (!from._internal_organization_name().empty()) {
    _internal_set_organization_name(from._internal_organization_name());
  }
  if (from._internal_has_fragment()) {
    _internal_mutable_fragment()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_fragment());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_public_() != 0) {
    _internal_set_public_(from._internal_public_());
  }
  if (from._internal_only_used_by_owner() != 0) {
    _internal_set_only_used_by_owner(from._internal_only_used_by_owner());
  }
  if (from._internal_robot_part_count() != 0) {
    _internal_set_robot_part_count(from._internal_robot_part_count());
  }
  if (from._internal_organization_count() != 0) {
    _internal_set_organization_count(from._internal_organization_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Fragment::CopyFrom(const Fragment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Fragment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fragment::IsInitialized() const {
  return true;
}

void Fragment::InternalSwap(Fragment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_owner_, lhs_arena,
      &other->organization_owner_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_name_, lhs_arena,
      &other->organization_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Fragment, organization_count_)
      + sizeof(Fragment::organization_count_)
      - PROTOBUF_FIELD_OFFSET(Fragment, fragment_)>(
          reinterpret_cast<char*>(&fragment_),
          reinterpret_cast<char*>(&other->fragment_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Fragment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[77]);
}

// ===================================================================

class ListFragmentsRequest::_Internal {
 public:
};

ListFragmentsRequest::ListFragmentsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListFragmentsRequest)
}
ListFragmentsRequest::ListFragmentsRequest(const ListFragmentsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  show_public_ = from.show_public_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListFragmentsRequest)
}

inline void ListFragmentsRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
show_public_ = false;
}

ListFragmentsRequest::~ListFragmentsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListFragmentsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListFragmentsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void ListFragmentsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListFragmentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListFragmentsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  show_public_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListFragmentsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListFragmentsRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // bool show_public = 2 [json_name = "showPublic"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          show_public_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListFragmentsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListFragmentsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListFragmentsRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // bool show_public = 2 [json_name = "showPublic"];
  if (this->_internal_show_public() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_show_public(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListFragmentsRequest)
  return target;
}

size_t ListFragmentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListFragmentsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // bool show_public = 2 [json_name = "showPublic"];
  if (this->_internal_show_public() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListFragmentsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListFragmentsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListFragmentsRequest::GetClassData() const { return &_class_data_; }

void ListFragmentsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListFragmentsRequest *>(to)->MergeFrom(
      static_cast<const ListFragmentsRequest &>(from));
}


void ListFragmentsRequest::MergeFrom(const ListFragmentsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListFragmentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (from._internal_show_public() != 0) {
    _internal_set_show_public(from._internal_show_public());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListFragmentsRequest::CopyFrom(const ListFragmentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListFragmentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFragmentsRequest::IsInitialized() const {
  return true;
}

void ListFragmentsRequest::InternalSwap(ListFragmentsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  swap(show_public_, other->show_public_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListFragmentsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[78]);
}

// ===================================================================

class ListFragmentsResponse::_Internal {
 public:
};

ListFragmentsResponse::ListFragmentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  fragments_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListFragmentsResponse)
}
ListFragmentsResponse::ListFragmentsResponse(const ListFragmentsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      fragments_(from.fragments_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListFragmentsResponse)
}

inline void ListFragmentsResponse::SharedCtor() {
}

ListFragmentsResponse::~ListFragmentsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListFragmentsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListFragmentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListFragmentsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListFragmentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListFragmentsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fragments_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListFragmentsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Fragment fragments = 1 [json_name = "fragments"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fragments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListFragmentsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListFragmentsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Fragment fragments = 1 [json_name = "fragments"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fragments_size()); i < n; i++) {
    const auto& repfield = this->_internal_fragments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListFragmentsResponse)
  return target;
}

size_t ListFragmentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListFragmentsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Fragment fragments = 1 [json_name = "fragments"];
  total_size += 1UL * this->_internal_fragments_size();
  for (const auto& msg : this->fragments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListFragmentsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListFragmentsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListFragmentsResponse::GetClassData() const { return &_class_data_; }

void ListFragmentsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListFragmentsResponse *>(to)->MergeFrom(
      static_cast<const ListFragmentsResponse &>(from));
}


void ListFragmentsResponse::MergeFrom(const ListFragmentsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListFragmentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  fragments_.MergeFrom(from.fragments_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListFragmentsResponse::CopyFrom(const ListFragmentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListFragmentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFragmentsResponse::IsInitialized() const {
  return true;
}

void ListFragmentsResponse::InternalSwap(ListFragmentsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  fragments_.InternalSwap(&other->fragments_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListFragmentsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[79]);
}

// ===================================================================

class GetFragmentRequest::_Internal {
 public:
};

GetFragmentRequest::GetFragmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetFragmentRequest)
}
GetFragmentRequest::GetFragmentRequest(const GetFragmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetFragmentRequest)
}

inline void GetFragmentRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetFragmentRequest::~GetFragmentRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetFragmentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFragmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void GetFragmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetFragmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetFragmentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFragmentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetFragmentRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFragmentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetFragmentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetFragmentRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetFragmentRequest)
  return target;
}

size_t GetFragmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetFragmentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFragmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetFragmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFragmentRequest::GetClassData() const { return &_class_data_; }

void GetFragmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetFragmentRequest *>(to)->MergeFrom(
      static_cast<const GetFragmentRequest &>(from));
}


void GetFragmentRequest::MergeFrom(const GetFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetFragmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFragmentRequest::CopyFrom(const GetFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetFragmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFragmentRequest::IsInitialized() const {
  return true;
}

void GetFragmentRequest::InternalSwap(GetFragmentRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFragmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[80]);
}

// ===================================================================

class GetFragmentResponse::_Internal {
 public:
  static const ::viam::app::v1::Fragment& fragment(const GetFragmentResponse* msg);
};

const ::viam::app::v1::Fragment&
GetFragmentResponse::_Internal::fragment(const GetFragmentResponse* msg) {
  return *msg->fragment_;
}
GetFragmentResponse::GetFragmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetFragmentResponse)
}
GetFragmentResponse::GetFragmentResponse(const GetFragmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_fragment()) {
    fragment_ = new ::viam::app::v1::Fragment(*from.fragment_);
  } else {
    fragment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetFragmentResponse)
}

inline void GetFragmentResponse::SharedCtor() {
fragment_ = nullptr;
}

GetFragmentResponse::~GetFragmentResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetFragmentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFragmentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete fragment_;
}

void GetFragmentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetFragmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetFragmentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && fragment_ != nullptr) {
    delete fragment_;
  }
  fragment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFragmentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fragment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFragmentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetFragmentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
  if (this->_internal_has_fragment()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::fragment(this),
        _Internal::fragment(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetFragmentResponse)
  return target;
}

size_t GetFragmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetFragmentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
  if (this->_internal_has_fragment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fragment_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFragmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetFragmentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFragmentResponse::GetClassData() const { return &_class_data_; }

void GetFragmentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetFragmentResponse *>(to)->MergeFrom(
      static_cast<const GetFragmentResponse &>(from));
}


void GetFragmentResponse::MergeFrom(const GetFragmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetFragmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_fragment()) {
    _internal_mutable_fragment()->::viam::app::v1::Fragment::MergeFrom(from._internal_fragment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFragmentResponse::CopyFrom(const GetFragmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetFragmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFragmentResponse::IsInitialized() const {
  return true;
}

void GetFragmentResponse::InternalSwap(GetFragmentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(fragment_, other->fragment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFragmentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[81]);
}

// ===================================================================

class CreateFragmentRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& config(const CreateFragmentRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
CreateFragmentRequest::_Internal::config(const CreateFragmentRequest* msg) {
  return *msg->config_;
}
void CreateFragmentRequest::clear_config() {
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
CreateFragmentRequest::CreateFragmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateFragmentRequest)
}
CreateFragmentRequest::CreateFragmentRequest(const CreateFragmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_config()) {
    config_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.config_);
  } else {
    config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateFragmentRequest)
}

inline void CreateFragmentRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
config_ = nullptr;
}

CreateFragmentRequest::~CreateFragmentRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateFragmentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateFragmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  organization_id_.Destroy();
  if (this != internal_default_instance()) delete config_;
}

void CreateFragmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateFragmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateFragmentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateFragmentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateFragmentRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct config = 2 [json_name = "config"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 3 [json_name = "organizationId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateFragmentRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateFragmentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateFragmentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateFragmentRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct config = 2 [json_name = "config"];
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  // string organization_id = 3 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateFragmentRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateFragmentRequest)
  return target;
}

size_t CreateFragmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateFragmentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string organization_id = 3 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // .google.protobuf.Struct config = 2 [json_name = "config"];
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateFragmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateFragmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateFragmentRequest::GetClassData() const { return &_class_data_; }

void CreateFragmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateFragmentRequest *>(to)->MergeFrom(
      static_cast<const CreateFragmentRequest &>(from));
}


void CreateFragmentRequest::MergeFrom(const CreateFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateFragmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (from._internal_has_config()) {
    _internal_mutable_config()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_config());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateFragmentRequest::CopyFrom(const CreateFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateFragmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFragmentRequest::IsInitialized() const {
  return true;
}

void CreateFragmentRequest::InternalSwap(CreateFragmentRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  swap(config_, other->config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateFragmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[82]);
}

// ===================================================================

class CreateFragmentResponse::_Internal {
 public:
  static const ::viam::app::v1::Fragment& fragment(const CreateFragmentResponse* msg);
};

const ::viam::app::v1::Fragment&
CreateFragmentResponse::_Internal::fragment(const CreateFragmentResponse* msg) {
  return *msg->fragment_;
}
CreateFragmentResponse::CreateFragmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateFragmentResponse)
}
CreateFragmentResponse::CreateFragmentResponse(const CreateFragmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_fragment()) {
    fragment_ = new ::viam::app::v1::Fragment(*from.fragment_);
  } else {
    fragment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateFragmentResponse)
}

inline void CreateFragmentResponse::SharedCtor() {
fragment_ = nullptr;
}

CreateFragmentResponse::~CreateFragmentResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateFragmentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateFragmentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete fragment_;
}

void CreateFragmentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateFragmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateFragmentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && fragment_ != nullptr) {
    delete fragment_;
  }
  fragment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateFragmentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fragment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateFragmentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateFragmentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
  if (this->_internal_has_fragment()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::fragment(this),
        _Internal::fragment(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateFragmentResponse)
  return target;
}

size_t CreateFragmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateFragmentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
  if (this->_internal_has_fragment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fragment_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateFragmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateFragmentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateFragmentResponse::GetClassData() const { return &_class_data_; }

void CreateFragmentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateFragmentResponse *>(to)->MergeFrom(
      static_cast<const CreateFragmentResponse &>(from));
}


void CreateFragmentResponse::MergeFrom(const CreateFragmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateFragmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_fragment()) {
    _internal_mutable_fragment()->::viam::app::v1::Fragment::MergeFrom(from._internal_fragment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateFragmentResponse::CopyFrom(const CreateFragmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateFragmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFragmentResponse::IsInitialized() const {
  return true;
}

void CreateFragmentResponse::InternalSwap(CreateFragmentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(fragment_, other->fragment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateFragmentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[83]);
}

// ===================================================================

class UpdateFragmentRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateFragmentRequest>()._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& config(const UpdateFragmentRequest* msg);
  static void set_has_public_(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
UpdateFragmentRequest::_Internal::config(const UpdateFragmentRequest* msg) {
  return *msg->config_;
}
void UpdateFragmentRequest::clear_config() {
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
UpdateFragmentRequest::UpdateFragmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateFragmentRequest)
}
UpdateFragmentRequest::UpdateFragmentRequest(const UpdateFragmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_config()) {
    config_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.config_);
  } else {
    config_ = nullptr;
  }
  public__ = from.public__;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateFragmentRequest)
}

inline void UpdateFragmentRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&config_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&public__) -
    reinterpret_cast<char*>(&config_)) + sizeof(public__));
}

UpdateFragmentRequest::~UpdateFragmentRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateFragmentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateFragmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  if (this != internal_default_instance()) delete config_;
}

void UpdateFragmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateFragmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateFragmentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  public__ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateFragmentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateFragmentRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateFragmentRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct config = 3 [json_name = "config"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool public = 4 [json_name = "public"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_public_(&has_bits);
          public__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateFragmentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateFragmentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateFragmentRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateFragmentRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Struct config = 3 [json_name = "config"];
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  // optional bool public = 4 [json_name = "public"];
  if (_internal_has_public_()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_public_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateFragmentRequest)
  return target;
}

size_t UpdateFragmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateFragmentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct config = 3 [json_name = "config"];
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // optional bool public = 4 [json_name = "public"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateFragmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateFragmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateFragmentRequest::GetClassData() const { return &_class_data_; }

void UpdateFragmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateFragmentRequest *>(to)->MergeFrom(
      static_cast<const UpdateFragmentRequest &>(from));
}


void UpdateFragmentRequest::MergeFrom(const UpdateFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateFragmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_config()) {
    _internal_mutable_config()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_config());
  }
  if (from._internal_has_public_()) {
    _internal_set_public_(from._internal_public_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateFragmentRequest::CopyFrom(const UpdateFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateFragmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFragmentRequest::IsInitialized() const {
  return true;
}

void UpdateFragmentRequest::InternalSwap(UpdateFragmentRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateFragmentRequest, public__)
      + sizeof(UpdateFragmentRequest::public__)
      - PROTOBUF_FIELD_OFFSET(UpdateFragmentRequest, config_)>(
          reinterpret_cast<char*>(&config_),
          reinterpret_cast<char*>(&other->config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateFragmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[84]);
}

// ===================================================================

class UpdateFragmentResponse::_Internal {
 public:
  static const ::viam::app::v1::Fragment& fragment(const UpdateFragmentResponse* msg);
};

const ::viam::app::v1::Fragment&
UpdateFragmentResponse::_Internal::fragment(const UpdateFragmentResponse* msg) {
  return *msg->fragment_;
}
UpdateFragmentResponse::UpdateFragmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateFragmentResponse)
}
UpdateFragmentResponse::UpdateFragmentResponse(const UpdateFragmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_fragment()) {
    fragment_ = new ::viam::app::v1::Fragment(*from.fragment_);
  } else {
    fragment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateFragmentResponse)
}

inline void UpdateFragmentResponse::SharedCtor() {
fragment_ = nullptr;
}

UpdateFragmentResponse::~UpdateFragmentResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateFragmentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateFragmentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete fragment_;
}

void UpdateFragmentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateFragmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateFragmentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && fragment_ != nullptr) {
    delete fragment_;
  }
  fragment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateFragmentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fragment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateFragmentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateFragmentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
  if (this->_internal_has_fragment()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::fragment(this),
        _Internal::fragment(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateFragmentResponse)
  return target;
}

size_t UpdateFragmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateFragmentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
  if (this->_internal_has_fragment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fragment_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateFragmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateFragmentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateFragmentResponse::GetClassData() const { return &_class_data_; }

void UpdateFragmentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateFragmentResponse *>(to)->MergeFrom(
      static_cast<const UpdateFragmentResponse &>(from));
}


void UpdateFragmentResponse::MergeFrom(const UpdateFragmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateFragmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_fragment()) {
    _internal_mutable_fragment()->::viam::app::v1::Fragment::MergeFrom(from._internal_fragment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateFragmentResponse::CopyFrom(const UpdateFragmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateFragmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFragmentResponse::IsInitialized() const {
  return true;
}

void UpdateFragmentResponse::InternalSwap(UpdateFragmentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(fragment_, other->fragment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateFragmentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[85]);
}

// ===================================================================

class DeleteFragmentRequest::_Internal {
 public:
};

DeleteFragmentRequest::DeleteFragmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteFragmentRequest)
}
DeleteFragmentRequest::DeleteFragmentRequest(const DeleteFragmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteFragmentRequest)
}

inline void DeleteFragmentRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteFragmentRequest::~DeleteFragmentRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteFragmentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteFragmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void DeleteFragmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteFragmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteFragmentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteFragmentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteFragmentRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteFragmentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteFragmentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteFragmentRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteFragmentRequest)
  return target;
}

size_t DeleteFragmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteFragmentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteFragmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteFragmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteFragmentRequest::GetClassData() const { return &_class_data_; }

void DeleteFragmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteFragmentRequest *>(to)->MergeFrom(
      static_cast<const DeleteFragmentRequest &>(from));
}


void DeleteFragmentRequest::MergeFrom(const DeleteFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteFragmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteFragmentRequest::CopyFrom(const DeleteFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteFragmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFragmentRequest::IsInitialized() const {
  return true;
}

void DeleteFragmentRequest::InternalSwap(DeleteFragmentRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteFragmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[86]);
}

// ===================================================================

class DeleteFragmentResponse::_Internal {
 public:
};

DeleteFragmentResponse::DeleteFragmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteFragmentResponse)
}
DeleteFragmentResponse::DeleteFragmentResponse(const DeleteFragmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteFragmentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteFragmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteFragmentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteFragmentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[87]);
}

// ===================================================================

class ListRobotsRequest::_Internal {
 public:
};

ListRobotsRequest::ListRobotsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListRobotsRequest)
}
ListRobotsRequest::ListRobotsRequest(const ListRobotsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListRobotsRequest)
}

inline void ListRobotsRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListRobotsRequest::~ListRobotsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListRobotsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListRobotsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void ListRobotsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRobotsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListRobotsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRobotsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListRobotsRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRobotsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListRobotsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListRobotsRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListRobotsRequest)
  return target;
}

size_t ListRobotsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListRobotsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRobotsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRobotsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRobotsRequest::GetClassData() const { return &_class_data_; }

void ListRobotsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRobotsRequest *>(to)->MergeFrom(
      static_cast<const ListRobotsRequest &>(from));
}


void ListRobotsRequest::MergeFrom(const ListRobotsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListRobotsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRobotsRequest::CopyFrom(const ListRobotsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListRobotsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRobotsRequest::IsInitialized() const {
  return true;
}

void ListRobotsRequest::InternalSwap(ListRobotsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRobotsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[88]);
}

// ===================================================================

class ListRobotsResponse::_Internal {
 public:
};

ListRobotsResponse::ListRobotsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  robots_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListRobotsResponse)
}
ListRobotsResponse::ListRobotsResponse(const ListRobotsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      robots_(from.robots_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListRobotsResponse)
}

inline void ListRobotsResponse::SharedCtor() {
}

ListRobotsResponse::~ListRobotsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListRobotsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListRobotsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListRobotsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRobotsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListRobotsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robots_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRobotsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Robot robots = 1 [json_name = "robots"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_robots(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRobotsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListRobotsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Robot robots = 1 [json_name = "robots"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_robots_size()); i < n; i++) {
    const auto& repfield = this->_internal_robots(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListRobotsResponse)
  return target;
}

size_t ListRobotsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListRobotsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Robot robots = 1 [json_name = "robots"];
  total_size += 1UL * this->_internal_robots_size();
  for (const auto& msg : this->robots_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRobotsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRobotsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRobotsResponse::GetClassData() const { return &_class_data_; }

void ListRobotsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRobotsResponse *>(to)->MergeFrom(
      static_cast<const ListRobotsResponse &>(from));
}


void ListRobotsResponse::MergeFrom(const ListRobotsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListRobotsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  robots_.MergeFrom(from.robots_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRobotsResponse::CopyFrom(const ListRobotsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListRobotsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRobotsResponse::IsInitialized() const {
  return true;
}

void ListRobotsResponse::InternalSwap(ListRobotsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  robots_.InternalSwap(&other->robots_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRobotsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[89]);
}

// ===================================================================

class NewRobotRequest::_Internal {
 public:
};

NewRobotRequest::NewRobotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.NewRobotRequest)
}
NewRobotRequest::NewRobotRequest(const NewRobotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    location_.Set(from._internal_location(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.NewRobotRequest)
}

inline void NewRobotRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewRobotRequest::~NewRobotRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.NewRobotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewRobotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  location_.Destroy();
}

void NewRobotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewRobotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.NewRobotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  location_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewRobotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string location = 2 [json_name = "location"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotRequest.location"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewRobotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.NewRobotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string location = 2 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotRequest.location");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_location(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.NewRobotRequest)
  return target;
}

size_t NewRobotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.NewRobotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string location = 2 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewRobotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NewRobotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewRobotRequest::GetClassData() const { return &_class_data_; }

void NewRobotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NewRobotRequest *>(to)->MergeFrom(
      static_cast<const NewRobotRequest &>(from));
}


void NewRobotRequest::MergeFrom(const NewRobotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.NewRobotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_location().empty()) {
    _internal_set_location(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewRobotRequest::CopyFrom(const NewRobotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.NewRobotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewRobotRequest::IsInitialized() const {
  return true;
}

void NewRobotRequest::InternalSwap(NewRobotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_, lhs_arena,
      &other->location_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NewRobotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[90]);
}

// ===================================================================

class NewRobotResponse::_Internal {
 public:
};

NewRobotResponse::NewRobotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.NewRobotResponse)
}
NewRobotResponse::NewRobotResponse(const NewRobotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.NewRobotResponse)
}

inline void NewRobotResponse::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewRobotResponse::~NewRobotResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.NewRobotResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewRobotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void NewRobotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewRobotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.NewRobotResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewRobotResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotResponse.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewRobotResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.NewRobotResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.NewRobotResponse)
  return target;
}

size_t NewRobotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.NewRobotResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewRobotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NewRobotResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewRobotResponse::GetClassData() const { return &_class_data_; }

void NewRobotResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NewRobotResponse *>(to)->MergeFrom(
      static_cast<const NewRobotResponse &>(from));
}


void NewRobotResponse::MergeFrom(const NewRobotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.NewRobotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewRobotResponse::CopyFrom(const NewRobotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.NewRobotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewRobotResponse::IsInitialized() const {
  return true;
}

void NewRobotResponse::InternalSwap(NewRobotResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NewRobotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[91]);
}

// ===================================================================

class UpdateRobotRequest::_Internal {
 public:
};

UpdateRobotRequest::UpdateRobotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRobotRequest)
}
UpdateRobotRequest::UpdateRobotRequest(const UpdateRobotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    location_.Set(from._internal_location(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRobotRequest)
}

inline void UpdateRobotRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateRobotRequest::~UpdateRobotRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateRobotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRobotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  location_.Destroy();
}

void UpdateRobotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRobotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateRobotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  location_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRobotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string location = 3 [json_name = "location"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotRequest.location"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRobotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateRobotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string location = 3 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotRequest.location");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_location(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateRobotRequest)
  return target;
}

size_t UpdateRobotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateRobotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string location = 3 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRobotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRobotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRobotRequest::GetClassData() const { return &_class_data_; }

void UpdateRobotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRobotRequest *>(to)->MergeFrom(
      static_cast<const UpdateRobotRequest &>(from));
}


void UpdateRobotRequest::MergeFrom(const UpdateRobotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateRobotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_location().empty()) {
    _internal_set_location(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRobotRequest::CopyFrom(const UpdateRobotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateRobotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRobotRequest::IsInitialized() const {
  return true;
}

void UpdateRobotRequest::InternalSwap(UpdateRobotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_, lhs_arena,
      &other->location_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRobotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[92]);
}

// ===================================================================

class UpdateRobotResponse::_Internal {
 public:
  static const ::viam::app::v1::Robot& robot(const UpdateRobotResponse* msg);
};

const ::viam::app::v1::Robot&
UpdateRobotResponse::_Internal::robot(const UpdateRobotResponse* msg) {
  return *msg->robot_;
}
UpdateRobotResponse::UpdateRobotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRobotResponse)
}
UpdateRobotResponse::UpdateRobotResponse(const UpdateRobotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_robot()) {
    robot_ = new ::viam::app::v1::Robot(*from.robot_);
  } else {
    robot_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRobotResponse)
}

inline void UpdateRobotResponse::SharedCtor() {
robot_ = nullptr;
}

UpdateRobotResponse::~UpdateRobotResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateRobotResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRobotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete robot_;
}

void UpdateRobotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRobotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateRobotResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && robot_ != nullptr) {
    delete robot_;
  }
  robot_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRobotResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRobotResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateRobotResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
  if (this->_internal_has_robot()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::robot(this),
        _Internal::robot(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateRobotResponse)
  return target;
}

size_t UpdateRobotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateRobotResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
  if (this->_internal_has_robot()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRobotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRobotResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRobotResponse::GetClassData() const { return &_class_data_; }

void UpdateRobotResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRobotResponse *>(to)->MergeFrom(
      static_cast<const UpdateRobotResponse &>(from));
}


void UpdateRobotResponse::MergeFrom(const UpdateRobotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateRobotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_robot()) {
    _internal_mutable_robot()->::viam::app::v1::Robot::MergeFrom(from._internal_robot());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRobotResponse::CopyFrom(const UpdateRobotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateRobotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRobotResponse::IsInitialized() const {
  return true;
}

void UpdateRobotResponse::InternalSwap(UpdateRobotResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(robot_, other->robot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRobotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[93]);
}

// ===================================================================

class DeleteRobotRequest::_Internal {
 public:
};

DeleteRobotRequest::DeleteRobotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotRequest)
}
DeleteRobotRequest::DeleteRobotRequest(const DeleteRobotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotRequest)
}

inline void DeleteRobotRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRobotRequest::~DeleteRobotRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteRobotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRobotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void DeleteRobotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRobotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteRobotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRobotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteRobotRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRobotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteRobotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteRobotRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteRobotRequest)
  return target;
}

size_t DeleteRobotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteRobotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRobotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotRequest::GetClassData() const { return &_class_data_; }

void DeleteRobotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteRobotRequest *>(to)->MergeFrom(
      static_cast<const DeleteRobotRequest &>(from));
}


void DeleteRobotRequest::MergeFrom(const DeleteRobotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteRobotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRobotRequest::CopyFrom(const DeleteRobotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteRobotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRobotRequest::IsInitialized() const {
  return true;
}

void DeleteRobotRequest::InternalSwap(DeleteRobotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[94]);
}

// ===================================================================

class DeleteRobotResponse::_Internal {
 public:
};

DeleteRobotResponse::DeleteRobotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotResponse)
}
DeleteRobotResponse::DeleteRobotResponse(const DeleteRobotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[95]);
}

// ===================================================================

class MarkPartAsMainRequest::_Internal {
 public:
};

MarkPartAsMainRequest::MarkPartAsMainRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.MarkPartAsMainRequest)
}
MarkPartAsMainRequest::MarkPartAsMainRequest(const MarkPartAsMainRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.MarkPartAsMainRequest)
}

inline void MarkPartAsMainRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MarkPartAsMainRequest::~MarkPartAsMainRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.MarkPartAsMainRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MarkPartAsMainRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void MarkPartAsMainRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MarkPartAsMainRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.MarkPartAsMainRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MarkPartAsMainRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.MarkPartAsMainRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MarkPartAsMainRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.MarkPartAsMainRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.MarkPartAsMainRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.MarkPartAsMainRequest)
  return target;
}

size_t MarkPartAsMainRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.MarkPartAsMainRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MarkPartAsMainRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MarkPartAsMainRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MarkPartAsMainRequest::GetClassData() const { return &_class_data_; }

void MarkPartAsMainRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MarkPartAsMainRequest *>(to)->MergeFrom(
      static_cast<const MarkPartAsMainRequest &>(from));
}


void MarkPartAsMainRequest::MergeFrom(const MarkPartAsMainRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.MarkPartAsMainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MarkPartAsMainRequest::CopyFrom(const MarkPartAsMainRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.MarkPartAsMainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkPartAsMainRequest::IsInitialized() const {
  return true;
}

void MarkPartAsMainRequest::InternalSwap(MarkPartAsMainRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MarkPartAsMainRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[96]);
}

// ===================================================================

class MarkPartAsMainResponse::_Internal {
 public:
};

MarkPartAsMainResponse::MarkPartAsMainResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.MarkPartAsMainResponse)
}
MarkPartAsMainResponse::MarkPartAsMainResponse(const MarkPartAsMainResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.MarkPartAsMainResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MarkPartAsMainResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MarkPartAsMainResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MarkPartAsMainResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[97]);
}

// ===================================================================

class MarkPartForRestartRequest::_Internal {
 public:
};

MarkPartForRestartRequest::MarkPartForRestartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.MarkPartForRestartRequest)
}
MarkPartForRestartRequest::MarkPartForRestartRequest(const MarkPartForRestartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.MarkPartForRestartRequest)
}

inline void MarkPartForRestartRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MarkPartForRestartRequest::~MarkPartForRestartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.MarkPartForRestartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MarkPartForRestartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void MarkPartForRestartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MarkPartForRestartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.MarkPartForRestartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MarkPartForRestartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.MarkPartForRestartRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MarkPartForRestartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.MarkPartForRestartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.MarkPartForRestartRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.MarkPartForRestartRequest)
  return target;
}

size_t MarkPartForRestartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.MarkPartForRestartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MarkPartForRestartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MarkPartForRestartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MarkPartForRestartRequest::GetClassData() const { return &_class_data_; }

void MarkPartForRestartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MarkPartForRestartRequest *>(to)->MergeFrom(
      static_cast<const MarkPartForRestartRequest &>(from));
}


void MarkPartForRestartRequest::MergeFrom(const MarkPartForRestartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.MarkPartForRestartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MarkPartForRestartRequest::CopyFrom(const MarkPartForRestartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.MarkPartForRestartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkPartForRestartRequest::IsInitialized() const {
  return true;
}

void MarkPartForRestartRequest::InternalSwap(MarkPartForRestartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MarkPartForRestartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[98]);
}

// ===================================================================

class MarkPartForRestartResponse::_Internal {
 public:
};

MarkPartForRestartResponse::MarkPartForRestartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.MarkPartForRestartResponse)
}
MarkPartForRestartResponse::MarkPartForRestartResponse(const MarkPartForRestartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.MarkPartForRestartResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MarkPartForRestartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MarkPartForRestartResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MarkPartForRestartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[99]);
}

// ===================================================================

class CreateRobotPartSecretRequest::_Internal {
 public:
};

CreateRobotPartSecretRequest::CreateRobotPartSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateRobotPartSecretRequest)
}
CreateRobotPartSecretRequest::CreateRobotPartSecretRequest(const CreateRobotPartSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateRobotPartSecretRequest)
}

inline void CreateRobotPartSecretRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateRobotPartSecretRequest::~CreateRobotPartSecretRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateRobotPartSecretRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateRobotPartSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void CreateRobotPartSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRobotPartSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateRobotPartSecretRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRobotPartSecretRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateRobotPartSecretRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateRobotPartSecretRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateRobotPartSecretRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateRobotPartSecretRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateRobotPartSecretRequest)
  return target;
}

size_t CreateRobotPartSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateRobotPartSecretRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRobotPartSecretRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateRobotPartSecretRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRobotPartSecretRequest::GetClassData() const { return &_class_data_; }

void CreateRobotPartSecretRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateRobotPartSecretRequest *>(to)->MergeFrom(
      static_cast<const CreateRobotPartSecretRequest &>(from));
}


void CreateRobotPartSecretRequest::MergeFrom(const CreateRobotPartSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateRobotPartSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRobotPartSecretRequest::CopyFrom(const CreateRobotPartSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateRobotPartSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRobotPartSecretRequest::IsInitialized() const {
  return true;
}

void CreateRobotPartSecretRequest::InternalSwap(CreateRobotPartSecretRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRobotPartSecretRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[100]);
}

// ===================================================================

class CreateRobotPartSecretResponse::_Internal {
 public:
  static const ::viam::app::v1::RobotPart& part(const CreateRobotPartSecretResponse* msg);
};

const ::viam::app::v1::RobotPart&
CreateRobotPartSecretResponse::_Internal::part(const CreateRobotPartSecretResponse* msg) {
  return *msg->part_;
}
CreateRobotPartSecretResponse::CreateRobotPartSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateRobotPartSecretResponse)
}
CreateRobotPartSecretResponse::CreateRobotPartSecretResponse(const CreateRobotPartSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_part()) {
    part_ = new ::viam::app::v1::RobotPart(*from.part_);
  } else {
    part_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateRobotPartSecretResponse)
}

inline void CreateRobotPartSecretResponse::SharedCtor() {
part_ = nullptr;
}

CreateRobotPartSecretResponse::~CreateRobotPartSecretResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateRobotPartSecretResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateRobotPartSecretResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete part_;
}

void CreateRobotPartSecretResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRobotPartSecretResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateRobotPartSecretResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && part_ != nullptr) {
    delete part_;
  }
  part_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRobotPartSecretResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_part(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateRobotPartSecretResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateRobotPartSecretResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::part(this),
        _Internal::part(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateRobotPartSecretResponse)
  return target;
}

size_t CreateRobotPartSecretResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateRobotPartSecretResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *part_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRobotPartSecretResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateRobotPartSecretResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRobotPartSecretResponse::GetClassData() const { return &_class_data_; }

void CreateRobotPartSecretResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateRobotPartSecretResponse *>(to)->MergeFrom(
      static_cast<const CreateRobotPartSecretResponse &>(from));
}


void CreateRobotPartSecretResponse::MergeFrom(const CreateRobotPartSecretResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateRobotPartSecretResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_part()) {
    _internal_mutable_part()->::viam::app::v1::RobotPart::MergeFrom(from._internal_part());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRobotPartSecretResponse::CopyFrom(const CreateRobotPartSecretResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateRobotPartSecretResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRobotPartSecretResponse::IsInitialized() const {
  return true;
}

void CreateRobotPartSecretResponse::InternalSwap(CreateRobotPartSecretResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(part_, other->part_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRobotPartSecretResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[101]);
}

// ===================================================================

class DeleteRobotPartSecretRequest::_Internal {
 public:
};

DeleteRobotPartSecretRequest::DeleteRobotPartSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotPartSecretRequest)
}
DeleteRobotPartSecretRequest::DeleteRobotPartSecretRequest(const DeleteRobotPartSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  secret_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret_id().empty()) {
    secret_id_.Set(from._internal_secret_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotPartSecretRequest)
}

inline void DeleteRobotPartSecretRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
secret_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRobotPartSecretRequest::~DeleteRobotPartSecretRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteRobotPartSecretRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRobotPartSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
  secret_id_.Destroy();
}

void DeleteRobotPartSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRobotPartSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteRobotPartSecretRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  secret_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRobotPartSecretRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteRobotPartSecretRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      // string secret_id = 2 [json_name = "secretId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_secret_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteRobotPartSecretRequest.secret_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRobotPartSecretRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteRobotPartSecretRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteRobotPartSecretRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  // string secret_id = 2 [json_name = "secretId"];
  if (!this->_internal_secret_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret_id().data(), static_cast<int>(this->_internal_secret_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteRobotPartSecretRequest.secret_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_secret_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteRobotPartSecretRequest)
  return target;
}

size_t DeleteRobotPartSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteRobotPartSecretRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  // string secret_id = 2 [json_name = "secretId"];
  if (!this->_internal_secret_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotPartSecretRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRobotPartSecretRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotPartSecretRequest::GetClassData() const { return &_class_data_; }

void DeleteRobotPartSecretRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteRobotPartSecretRequest *>(to)->MergeFrom(
      static_cast<const DeleteRobotPartSecretRequest &>(from));
}


void DeleteRobotPartSecretRequest::MergeFrom(const DeleteRobotPartSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteRobotPartSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  if (!from._internal_secret_id().empty()) {
    _internal_set_secret_id(from._internal_secret_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRobotPartSecretRequest::CopyFrom(const DeleteRobotPartSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteRobotPartSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRobotPartSecretRequest::IsInitialized() const {
  return true;
}

void DeleteRobotPartSecretRequest::InternalSwap(DeleteRobotPartSecretRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_id_, lhs_arena,
      &other->secret_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotPartSecretRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[102]);
}

// ===================================================================

class DeleteRobotPartSecretResponse::_Internal {
 public:
};

DeleteRobotPartSecretResponse::DeleteRobotPartSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotPartSecretResponse)
}
DeleteRobotPartSecretResponse::DeleteRobotPartSecretResponse(const DeleteRobotPartSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotPartSecretResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotPartSecretResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotPartSecretResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotPartSecretResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[103]);
}

// ===================================================================

class Authorization::_Internal {
 public:
};

Authorization::Authorization(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Authorization)
}
Authorization::Authorization(const Authorization& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  authorization_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    authorization_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authorization_type().empty()) {
    authorization_type_.Set(from._internal_authorization_type(), 
      GetArenaForAllocation());
  }
  authorization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    authorization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authorization_id().empty()) {
    authorization_id_.Set(from._internal_authorization_id(), 
      GetArenaForAllocation());
  }
  resource_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_type().empty()) {
    resource_type_.Set(from._internal_resource_type(), 
      GetArenaForAllocation());
  }
  resource_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_id().empty()) {
    resource_id_.Set(from._internal_resource_id(), 
      GetArenaForAllocation());
  }
  identity_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    identity_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(from._internal_identity_id(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Authorization)
}

inline void Authorization::SharedCtor() {
authorization_type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  authorization_type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
authorization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  authorization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resource_type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resource_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
identity_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  identity_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Authorization::~Authorization() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Authorization)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Authorization::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  authorization_type_.Destroy();
  authorization_id_.Destroy();
  resource_type_.Destroy();
  resource_id_.Destroy();
  identity_id_.Destroy();
  organization_id_.Destroy();
}

void Authorization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Authorization::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Authorization)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorization_type_.ClearToEmpty();
  authorization_id_.ClearToEmpty();
  resource_type_.ClearToEmpty();
  resource_id_.ClearToEmpty();
  identity_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Authorization::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authorization_type = 1 [json_name = "authorizationType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authorization_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Authorization.authorization_type"));
        } else
          goto handle_unusual;
        continue;
      // string authorization_id = 2 [json_name = "authorizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_authorization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Authorization.authorization_id"));
        } else
          goto handle_unusual;
        continue;
      // string resource_type = 3 [json_name = "resourceType"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_resource_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Authorization.resource_type"));
        } else
          goto handle_unusual;
        continue;
      // string resource_id = 4 [json_name = "resourceId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_resource_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Authorization.resource_id"));
        } else
          goto handle_unusual;
        continue;
      // string identity_id = 5 [json_name = "identityId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Authorization.identity_id"));
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 6 [json_name = "organizationId"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Authorization.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Authorization::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Authorization)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authorization_type = 1 [json_name = "authorizationType"];
  if (!this->_internal_authorization_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_authorization_type().data(), static_cast<int>(this->_internal_authorization_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Authorization.authorization_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_authorization_type(), target);
  }

  // string authorization_id = 2 [json_name = "authorizationId"];
  if (!this->_internal_authorization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_authorization_id().data(), static_cast<int>(this->_internal_authorization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Authorization.authorization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_authorization_id(), target);
  }

  // string resource_type = 3 [json_name = "resourceType"];
  if (!this->_internal_resource_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_type().data(), static_cast<int>(this->_internal_resource_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Authorization.resource_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_resource_type(), target);
  }

  // string resource_id = 4 [json_name = "resourceId"];
  if (!this->_internal_resource_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_id().data(), static_cast<int>(this->_internal_resource_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Authorization.resource_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_resource_id(), target);
  }

  // string identity_id = 5 [json_name = "identityId"];
  if (!this->_internal_identity_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Authorization.identity_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_identity_id(), target);
  }

  // string organization_id = 6 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Authorization.organization_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Authorization)
  return target;
}

size_t Authorization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Authorization)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authorization_type = 1 [json_name = "authorizationType"];
  if (!this->_internal_authorization_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_authorization_type());
  }

  // string authorization_id = 2 [json_name = "authorizationId"];
  if (!this->_internal_authorization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_authorization_id());
  }

  // string resource_type = 3 [json_name = "resourceType"];
  if (!this->_internal_resource_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_type());
  }

  // string resource_id = 4 [json_name = "resourceId"];
  if (!this->_internal_resource_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_id());
  }

  // string identity_id = 5 [json_name = "identityId"];
  if (!this->_internal_identity_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  // string organization_id = 6 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Authorization::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Authorization::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Authorization::GetClassData() const { return &_class_data_; }

void Authorization::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Authorization *>(to)->MergeFrom(
      static_cast<const Authorization &>(from));
}


void Authorization::MergeFrom(const Authorization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Authorization)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authorization_type().empty()) {
    _internal_set_authorization_type(from._internal_authorization_type());
  }
  if (!from._internal_authorization_id().empty()) {
    _internal_set_authorization_id(from._internal_authorization_id());
  }
  if (!from._internal_resource_type().empty()) {
    _internal_set_resource_type(from._internal_resource_type());
  }
  if (!from._internal_resource_id().empty()) {
    _internal_set_resource_id(from._internal_resource_id());
  }
  if (!from._internal_identity_id().empty()) {
    _internal_set_identity_id(from._internal_identity_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Authorization::CopyFrom(const Authorization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Authorization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Authorization::IsInitialized() const {
  return true;
}

void Authorization::InternalSwap(Authorization* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &authorization_type_, lhs_arena,
      &other->authorization_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &authorization_id_, lhs_arena,
      &other->authorization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &resource_type_, lhs_arena,
      &other->resource_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &resource_id_, lhs_arena,
      &other->resource_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &identity_id_, lhs_arena,
      &other->identity_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Authorization::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[104]);
}

// ===================================================================

class AddRoleRequest::_Internal {
 public:
  static const ::viam::app::v1::Authorization& authorization(const AddRoleRequest* msg);
};

const ::viam::app::v1::Authorization&
AddRoleRequest::_Internal::authorization(const AddRoleRequest* msg) {
  return *msg->authorization_;
}
AddRoleRequest::AddRoleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.AddRoleRequest)
}
AddRoleRequest::AddRoleRequest(const AddRoleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_authorization()) {
    authorization_ = new ::viam::app::v1::Authorization(*from.authorization_);
  } else {
    authorization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.AddRoleRequest)
}

inline void AddRoleRequest::SharedCtor() {
authorization_ = nullptr;
}

AddRoleRequest::~AddRoleRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.AddRoleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddRoleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete authorization_;
}

void AddRoleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.AddRoleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && authorization_ != nullptr) {
    delete authorization_;
  }
  authorization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRoleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Authorization authorization = 1 [json_name = "authorization"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authorization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddRoleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.AddRoleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Authorization authorization = 1 [json_name = "authorization"];
  if (this->_internal_has_authorization()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::authorization(this),
        _Internal::authorization(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.AddRoleRequest)
  return target;
}

size_t AddRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.AddRoleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Authorization authorization = 1 [json_name = "authorization"];
  if (this->_internal_has_authorization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authorization_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddRoleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AddRoleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddRoleRequest::GetClassData() const { return &_class_data_; }

void AddRoleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AddRoleRequest *>(to)->MergeFrom(
      static_cast<const AddRoleRequest &>(from));
}


void AddRoleRequest::MergeFrom(const AddRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.AddRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_authorization()) {
    _internal_mutable_authorization()->::viam::app::v1::Authorization::MergeFrom(from._internal_authorization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddRoleRequest::CopyFrom(const AddRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.AddRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRoleRequest::IsInitialized() const {
  return true;
}

void AddRoleRequest::InternalSwap(AddRoleRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(authorization_, other->authorization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRoleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[105]);
}

// ===================================================================

class AddRoleResponse::_Internal {
 public:
};

AddRoleResponse::AddRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.AddRoleResponse)
}
AddRoleResponse::AddRoleResponse(const AddRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.AddRoleResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddRoleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddRoleResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AddRoleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[106]);
}

// ===================================================================

class RemoveRoleRequest::_Internal {
 public:
  static const ::viam::app::v1::Authorization& authorization(const RemoveRoleRequest* msg);
};

const ::viam::app::v1::Authorization&
RemoveRoleRequest::_Internal::authorization(const RemoveRoleRequest* msg) {
  return *msg->authorization_;
}
RemoveRoleRequest::RemoveRoleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RemoveRoleRequest)
}
RemoveRoleRequest::RemoveRoleRequest(const RemoveRoleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_authorization()) {
    authorization_ = new ::viam::app::v1::Authorization(*from.authorization_);
  } else {
    authorization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RemoveRoleRequest)
}

inline void RemoveRoleRequest::SharedCtor() {
authorization_ = nullptr;
}

RemoveRoleRequest::~RemoveRoleRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RemoveRoleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveRoleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete authorization_;
}

void RemoveRoleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RemoveRoleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && authorization_ != nullptr) {
    delete authorization_;
  }
  authorization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRoleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Authorization authorization = 1 [json_name = "authorization"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authorization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveRoleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RemoveRoleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Authorization authorization = 1 [json_name = "authorization"];
  if (this->_internal_has_authorization()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::authorization(this),
        _Internal::authorization(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RemoveRoleRequest)
  return target;
}

size_t RemoveRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RemoveRoleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Authorization authorization = 1 [json_name = "authorization"];
  if (this->_internal_has_authorization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authorization_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveRoleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RemoveRoleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveRoleRequest::GetClassData() const { return &_class_data_; }

void RemoveRoleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RemoveRoleRequest *>(to)->MergeFrom(
      static_cast<const RemoveRoleRequest &>(from));
}


void RemoveRoleRequest::MergeFrom(const RemoveRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RemoveRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_authorization()) {
    _internal_mutable_authorization()->::viam::app::v1::Authorization::MergeFrom(from._internal_authorization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveRoleRequest::CopyFrom(const RemoveRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RemoveRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRoleRequest::IsInitialized() const {
  return true;
}

void RemoveRoleRequest::InternalSwap(RemoveRoleRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(authorization_, other->authorization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRoleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[107]);
}

// ===================================================================

class RemoveRoleResponse::_Internal {
 public:
};

RemoveRoleResponse::RemoveRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RemoveRoleResponse)
}
RemoveRoleResponse::RemoveRoleResponse(const RemoveRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RemoveRoleResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveRoleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveRoleResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveRoleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[108]);
}

// ===================================================================

class ListAuthorizationsRequest::_Internal {
 public:
};

ListAuthorizationsRequest::ListAuthorizationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  resource_ids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListAuthorizationsRequest)
}
ListAuthorizationsRequest::ListAuthorizationsRequest(const ListAuthorizationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      resource_ids_(from.resource_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListAuthorizationsRequest)
}

inline void ListAuthorizationsRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListAuthorizationsRequest::~ListAuthorizationsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListAuthorizationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListAuthorizationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void ListAuthorizationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListAuthorizationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListAuthorizationsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_ids_.Clear();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListAuthorizationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListAuthorizationsRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated string resource_ids = 2 [json_name = "resourceIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_resource_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListAuthorizationsRequest.resource_ids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListAuthorizationsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListAuthorizationsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListAuthorizationsRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // repeated string resource_ids = 2 [json_name = "resourceIds"];
  for (int i = 0, n = this->_internal_resource_ids_size(); i < n; i++) {
    const auto& s = this->_internal_resource_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListAuthorizationsRequest.resource_ids");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListAuthorizationsRequest)
  return target;
}

size_t ListAuthorizationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListAuthorizationsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string resource_ids = 2 [json_name = "resourceIds"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(resource_ids_.size());
  for (int i = 0, n = resource_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      resource_ids_.Get(i));
  }

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListAuthorizationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListAuthorizationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListAuthorizationsRequest::GetClassData() const { return &_class_data_; }

void ListAuthorizationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListAuthorizationsRequest *>(to)->MergeFrom(
      static_cast<const ListAuthorizationsRequest &>(from));
}


void ListAuthorizationsRequest::MergeFrom(const ListAuthorizationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListAuthorizationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  resource_ids_.MergeFrom(from.resource_ids_);
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListAuthorizationsRequest::CopyFrom(const ListAuthorizationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListAuthorizationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAuthorizationsRequest::IsInitialized() const {
  return true;
}

void ListAuthorizationsRequest::InternalSwap(ListAuthorizationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  resource_ids_.InternalSwap(&other->resource_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListAuthorizationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[109]);
}

// ===================================================================

class ListAuthorizationsResponse::_Internal {
 public:
};

ListAuthorizationsResponse::ListAuthorizationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  authorizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListAuthorizationsResponse)
}
ListAuthorizationsResponse::ListAuthorizationsResponse(const ListAuthorizationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      authorizations_(from.authorizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListAuthorizationsResponse)
}

inline void ListAuthorizationsResponse::SharedCtor() {
}

ListAuthorizationsResponse::~ListAuthorizationsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListAuthorizationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListAuthorizationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListAuthorizationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListAuthorizationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListAuthorizationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorizations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListAuthorizationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Authorization authorizations = 1 [json_name = "authorizations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_authorizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListAuthorizationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListAuthorizationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Authorization authorizations = 1 [json_name = "authorizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_authorizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_authorizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListAuthorizationsResponse)
  return target;
}

size_t ListAuthorizationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListAuthorizationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Authorization authorizations = 1 [json_name = "authorizations"];
  total_size += 1UL * this->_internal_authorizations_size();
  for (const auto& msg : this->authorizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListAuthorizationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListAuthorizationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListAuthorizationsResponse::GetClassData() const { return &_class_data_; }

void ListAuthorizationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListAuthorizationsResponse *>(to)->MergeFrom(
      static_cast<const ListAuthorizationsResponse &>(from));
}


void ListAuthorizationsResponse::MergeFrom(const ListAuthorizationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListAuthorizationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  authorizations_.MergeFrom(from.authorizations_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListAuthorizationsResponse::CopyFrom(const ListAuthorizationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListAuthorizationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAuthorizationsResponse::IsInitialized() const {
  return true;
}

void ListAuthorizationsResponse::InternalSwap(ListAuthorizationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  authorizations_.InternalSwap(&other->authorizations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListAuthorizationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[110]);
}

// ===================================================================

class CheckPermissionsRequest::_Internal {
 public:
};

CheckPermissionsRequest::CheckPermissionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  permissions_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CheckPermissionsRequest)
}
CheckPermissionsRequest::CheckPermissionsRequest(const CheckPermissionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      permissions_(from.permissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CheckPermissionsRequest)
}

inline void CheckPermissionsRequest::SharedCtor() {
}

CheckPermissionsRequest::~CheckPermissionsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CheckPermissionsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckPermissionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CheckPermissionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CheckPermissionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CheckPermissionsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permissions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckPermissionsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.AuthorizedPermissions permissions = 1 [json_name = "permissions"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_permissions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckPermissionsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CheckPermissionsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.AuthorizedPermissions permissions = 1 [json_name = "permissions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_permissions_size()); i < n; i++) {
    const auto& repfield = this->_internal_permissions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CheckPermissionsRequest)
  return target;
}

size_t CheckPermissionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CheckPermissionsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.AuthorizedPermissions permissions = 1 [json_name = "permissions"];
  total_size += 1UL * this->_internal_permissions_size();
  for (const auto& msg : this->permissions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckPermissionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CheckPermissionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckPermissionsRequest::GetClassData() const { return &_class_data_; }

void CheckPermissionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CheckPermissionsRequest *>(to)->MergeFrom(
      static_cast<const CheckPermissionsRequest &>(from));
}


void CheckPermissionsRequest::MergeFrom(const CheckPermissionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CheckPermissionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  permissions_.MergeFrom(from.permissions_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckPermissionsRequest::CopyFrom(const CheckPermissionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CheckPermissionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckPermissionsRequest::IsInitialized() const {
  return true;
}

void CheckPermissionsRequest::InternalSwap(CheckPermissionsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  permissions_.InternalSwap(&other->permissions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckPermissionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[111]);
}

// ===================================================================

class AuthorizedPermissions::_Internal {
 public:
};

AuthorizedPermissions::AuthorizedPermissions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  permissions_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.AuthorizedPermissions)
}
AuthorizedPermissions::AuthorizedPermissions(const AuthorizedPermissions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      permissions_(from.permissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resource_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_type().empty()) {
    resource_type_.Set(from._internal_resource_type(), 
      GetArenaForAllocation());
  }
  resource_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_id().empty()) {
    resource_id_.Set(from._internal_resource_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.AuthorizedPermissions)
}

inline void AuthorizedPermissions::SharedCtor() {
resource_type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resource_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthorizedPermissions::~AuthorizedPermissions() {
  // @@protoc_insertion_point(destructor:viam.app.v1.AuthorizedPermissions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthorizedPermissions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  resource_type_.Destroy();
  resource_id_.Destroy();
}

void AuthorizedPermissions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AuthorizedPermissions::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.AuthorizedPermissions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permissions_.Clear();
  resource_type_.ClearToEmpty();
  resource_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthorizedPermissions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string resource_type = 1 [json_name = "resourceType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_resource_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.AuthorizedPermissions.resource_type"));
        } else
          goto handle_unusual;
        continue;
      // string resource_id = 2 [json_name = "resourceId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_resource_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.AuthorizedPermissions.resource_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated string permissions = 3 [json_name = "permissions"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_permissions();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.AuthorizedPermissions.permissions"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthorizedPermissions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.AuthorizedPermissions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_type = 1 [json_name = "resourceType"];
  if (!this->_internal_resource_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_type().data(), static_cast<int>(this->_internal_resource_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.AuthorizedPermissions.resource_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_resource_type(), target);
  }

  // string resource_id = 2 [json_name = "resourceId"];
  if (!this->_internal_resource_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_id().data(), static_cast<int>(this->_internal_resource_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.AuthorizedPermissions.resource_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_resource_id(), target);
  }

  // repeated string permissions = 3 [json_name = "permissions"];
  for (int i = 0, n = this->_internal_permissions_size(); i < n; i++) {
    const auto& s = this->_internal_permissions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.AuthorizedPermissions.permissions");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.AuthorizedPermissions)
  return target;
}

size_t AuthorizedPermissions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.AuthorizedPermissions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string permissions = 3 [json_name = "permissions"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(permissions_.size());
  for (int i = 0, n = permissions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      permissions_.Get(i));
  }

  // string resource_type = 1 [json_name = "resourceType"];
  if (!this->_internal_resource_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_type());
  }

  // string resource_id = 2 [json_name = "resourceId"];
  if (!this->_internal_resource_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthorizedPermissions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AuthorizedPermissions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthorizedPermissions::GetClassData() const { return &_class_data_; }

void AuthorizedPermissions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AuthorizedPermissions *>(to)->MergeFrom(
      static_cast<const AuthorizedPermissions &>(from));
}


void AuthorizedPermissions::MergeFrom(const AuthorizedPermissions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.AuthorizedPermissions)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  permissions_.MergeFrom(from.permissions_);
  if (!from._internal_resource_type().empty()) {
    _internal_set_resource_type(from._internal_resource_type());
  }
  if (!from._internal_resource_id().empty()) {
    _internal_set_resource_id(from._internal_resource_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthorizedPermissions::CopyFrom(const AuthorizedPermissions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.AuthorizedPermissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthorizedPermissions::IsInitialized() const {
  return true;
}

void AuthorizedPermissions::InternalSwap(AuthorizedPermissions* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  permissions_.InternalSwap(&other->permissions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &resource_type_, lhs_arena,
      &other->resource_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &resource_id_, lhs_arena,
      &other->resource_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthorizedPermissions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[112]);
}

// ===================================================================

class CheckPermissionsResponse::_Internal {
 public:
};

CheckPermissionsResponse::CheckPermissionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  authorized_permissions_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CheckPermissionsResponse)
}
CheckPermissionsResponse::CheckPermissionsResponse(const CheckPermissionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      authorized_permissions_(from.authorized_permissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CheckPermissionsResponse)
}

inline void CheckPermissionsResponse::SharedCtor() {
}

CheckPermissionsResponse::~CheckPermissionsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CheckPermissionsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckPermissionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CheckPermissionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CheckPermissionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CheckPermissionsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorized_permissions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckPermissionsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.AuthorizedPermissions authorized_permissions = 1 [json_name = "authorizedPermissions"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_authorized_permissions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckPermissionsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CheckPermissionsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.AuthorizedPermissions authorized_permissions = 1 [json_name = "authorizedPermissions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_authorized_permissions_size()); i < n; i++) {
    const auto& repfield = this->_internal_authorized_permissions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CheckPermissionsResponse)
  return target;
}

size_t CheckPermissionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CheckPermissionsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.AuthorizedPermissions authorized_permissions = 1 [json_name = "authorizedPermissions"];
  total_size += 1UL * this->_internal_authorized_permissions_size();
  for (const auto& msg : this->authorized_permissions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckPermissionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CheckPermissionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckPermissionsResponse::GetClassData() const { return &_class_data_; }

void CheckPermissionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CheckPermissionsResponse *>(to)->MergeFrom(
      static_cast<const CheckPermissionsResponse &>(from));
}


void CheckPermissionsResponse::MergeFrom(const CheckPermissionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CheckPermissionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  authorized_permissions_.MergeFrom(from.authorized_permissions_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckPermissionsResponse::CopyFrom(const CheckPermissionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CheckPermissionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckPermissionsResponse::IsInitialized() const {
  return true;
}

void CheckPermissionsResponse::InternalSwap(CheckPermissionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  authorized_permissions_.InternalSwap(&other->authorized_permissions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckPermissionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[113]);
}

// ===================================================================

class CreateModuleRequest::_Internal {
 public:
};

CreateModuleRequest::CreateModuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateModuleRequest)
}
CreateModuleRequest::CreateModuleRequest(const CreateModuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateModuleRequest)
}

inline void CreateModuleRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateModuleRequest::~CreateModuleRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateModuleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateModuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  name_.Destroy();
}

void CreateModuleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateModuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateModuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateModuleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateModuleRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateModuleRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateModuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateModuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateModuleRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateModuleRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateModuleRequest)
  return target;
}

size_t CreateModuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateModuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateModuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateModuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateModuleRequest::GetClassData() const { return &_class_data_; }

void CreateModuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateModuleRequest *>(to)->MergeFrom(
      static_cast<const CreateModuleRequest &>(from));
}


void CreateModuleRequest::MergeFrom(const CreateModuleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateModuleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateModuleRequest::CopyFrom(const CreateModuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateModuleRequest::IsInitialized() const {
  return true;
}

void CreateModuleRequest::InternalSwap(CreateModuleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateModuleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[114]);
}

// ===================================================================

class CreateModuleResponse::_Internal {
 public:
};

CreateModuleResponse::CreateModuleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateModuleResponse)
}
CreateModuleResponse::CreateModuleResponse(const CreateModuleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  module_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    module_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_id().empty()) {
    module_id_.Set(from._internal_module_id(), 
      GetArenaForAllocation());
  }
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateModuleResponse)
}

inline void CreateModuleResponse::SharedCtor() {
module_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  module_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateModuleResponse::~CreateModuleResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateModuleResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateModuleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  module_id_.Destroy();
  url_.Destroy();
}

void CreateModuleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateModuleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateModuleResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_id_.ClearToEmpty();
  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateModuleResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_id = 1 [json_name = "moduleId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateModuleResponse.module_id"));
        } else
          goto handle_unusual;
        continue;
      // string url = 2 [json_name = "url"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateModuleResponse.url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateModuleResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateModuleResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_id().data(), static_cast<int>(this->_internal_module_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateModuleResponse.module_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_id(), target);
  }

  // string url = 2 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateModuleResponse.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateModuleResponse)
  return target;
}

size_t CreateModuleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateModuleResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_id());
  }

  // string url = 2 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateModuleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateModuleResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateModuleResponse::GetClassData() const { return &_class_data_; }

void CreateModuleResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateModuleResponse *>(to)->MergeFrom(
      static_cast<const CreateModuleResponse &>(from));
}


void CreateModuleResponse::MergeFrom(const CreateModuleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateModuleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_module_id().empty()) {
    _internal_set_module_id(from._internal_module_id());
  }
  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateModuleResponse::CopyFrom(const CreateModuleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateModuleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateModuleResponse::IsInitialized() const {
  return true;
}

void CreateModuleResponse::InternalSwap(CreateModuleResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &module_id_, lhs_arena,
      &other->module_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateModuleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[115]);
}

// ===================================================================

class UpdateModuleRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateModuleRequest>()._has_bits_);
  static void set_has_organization_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

UpdateModuleRequest::UpdateModuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  models_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateModuleRequest)
}
UpdateModuleRequest::UpdateModuleRequest(const UpdateModuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      models_(from.models_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  module_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    module_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_id().empty()) {
    module_id_.Set(from._internal_module_id(), 
      GetArenaForAllocation());
  }
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  entrypoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    entrypoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entrypoint().empty()) {
    entrypoint_.Set(from._internal_entrypoint(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_organization_id()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  visibility_ = from.visibility_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateModuleRequest)
}

inline void UpdateModuleRequest::SharedCtor() {
module_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  module_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
entrypoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  entrypoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
visibility_ = 0;
}

UpdateModuleRequest::~UpdateModuleRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateModuleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateModuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  module_id_.Destroy();
  url_.Destroy();
  description_.Destroy();
  entrypoint_.Destroy();
  organization_id_.Destroy();
}

void UpdateModuleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateModuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateModuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  models_.Clear();
  module_id_.ClearToEmpty();
  url_.ClearToEmpty();
  description_.ClearToEmpty();
  entrypoint_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    organization_id_.ClearNonDefaultToEmpty();
  }
  visibility_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateModuleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_id = 1 [json_name = "moduleId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateModuleRequest.module_id"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.Visibility visibility = 2 [json_name = "visibility"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_visibility(static_cast<::viam::app::v1::Visibility>(val));
        } else
          goto handle_unusual;
        continue;
      // string url = 3 [json_name = "url"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateModuleRequest.url"));
        } else
          goto handle_unusual;
        continue;
      // string description = 4 [json_name = "description"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateModuleRequest.description"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Model models = 5 [json_name = "models"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string entrypoint = 6 [json_name = "entrypoint"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_entrypoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateModuleRequest.entrypoint"));
        } else
          goto handle_unusual;
        continue;
      // optional string organization_id = 7 [json_name = "organizationId"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateModuleRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateModuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateModuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_id().data(), static_cast<int>(this->_internal_module_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateModuleRequest.module_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_id(), target);
  }

  // .viam.app.v1.Visibility visibility = 2 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_visibility(), target);
  }

  // string url = 3 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateModuleRequest.url");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_url(), target);
  }

  // string description = 4 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateModuleRequest.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // repeated .viam.app.v1.Model models = 5 [json_name = "models"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_models_size()); i < n; i++) {
    const auto& repfield = this->_internal_models(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string entrypoint = 6 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entrypoint().data(), static_cast<int>(this->_internal_entrypoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateModuleRequest.entrypoint");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_entrypoint(), target);
  }

  // optional string organization_id = 7 [json_name = "organizationId"];
  if (_internal_has_organization_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateModuleRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateModuleRequest)
  return target;
}

size_t UpdateModuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateModuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Model models = 5 [json_name = "models"];
  total_size += 1UL * this->_internal_models_size();
  for (const auto& msg : this->models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_id());
  }

  // string url = 3 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string description = 4 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string entrypoint = 6 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entrypoint());
  }

  // optional string organization_id = 7 [json_name = "organizationId"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // .viam.app.v1.Visibility visibility = 2 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_visibility());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateModuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateModuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateModuleRequest::GetClassData() const { return &_class_data_; }

void UpdateModuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateModuleRequest *>(to)->MergeFrom(
      static_cast<const UpdateModuleRequest &>(from));
}


void UpdateModuleRequest::MergeFrom(const UpdateModuleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateModuleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  models_.MergeFrom(from.models_);
  if (!from._internal_module_id().empty()) {
    _internal_set_module_id(from._internal_module_id());
  }
  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_entrypoint().empty()) {
    _internal_set_entrypoint(from._internal_entrypoint());
  }
  if (from._internal_has_organization_id()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (from._internal_visibility() != 0) {
    _internal_set_visibility(from._internal_visibility());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateModuleRequest::CopyFrom(const UpdateModuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateModuleRequest::IsInitialized() const {
  return true;
}

void UpdateModuleRequest::InternalSwap(UpdateModuleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  models_.InternalSwap(&other->models_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &module_id_, lhs_arena,
      &other->module_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &entrypoint_, lhs_arena,
      &other->entrypoint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  swap(visibility_, other->visibility_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateModuleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[116]);
}

// ===================================================================

class UpdateModuleResponse::_Internal {
 public:
};

UpdateModuleResponse::UpdateModuleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateModuleResponse)
}
UpdateModuleResponse::UpdateModuleResponse(const UpdateModuleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateModuleResponse)
}

inline void UpdateModuleResponse::SharedCtor() {
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateModuleResponse::~UpdateModuleResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateModuleResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateModuleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  url_.Destroy();
}

void UpdateModuleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateModuleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateModuleResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateModuleResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1 [json_name = "url"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateModuleResponse.url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateModuleResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateModuleResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateModuleResponse.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateModuleResponse)
  return target;
}

size_t UpdateModuleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateModuleResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateModuleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateModuleResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateModuleResponse::GetClassData() const { return &_class_data_; }

void UpdateModuleResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateModuleResponse *>(to)->MergeFrom(
      static_cast<const UpdateModuleResponse &>(from));
}


void UpdateModuleResponse::MergeFrom(const UpdateModuleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateModuleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateModuleResponse::CopyFrom(const UpdateModuleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateModuleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateModuleResponse::IsInitialized() const {
  return true;
}

void UpdateModuleResponse::InternalSwap(UpdateModuleResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateModuleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[117]);
}

// ===================================================================

class Model::_Internal {
 public:
};

Model::Model(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Model)
}
Model::Model(const Model& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  api_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    api_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_api().empty()) {
    api_.Set(from._internal_api(), 
      GetArenaForAllocation());
  }
  model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model().empty()) {
    model_.Set(from._internal_model(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Model)
}

inline void Model::SharedCtor() {
api_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  api_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
model_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Model::~Model() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Model)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Model::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  api_.Destroy();
  model_.Destroy();
}

void Model::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Model::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Model)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  api_.ClearToEmpty();
  model_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Model::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string api = 1 [json_name = "api"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_api();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Model.api"));
        } else
          goto handle_unusual;
        continue;
      // string model = 2 [json_name = "model"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Model.model"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Model::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Model)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string api = 1 [json_name = "api"];
  if (!this->_internal_api().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_api().data(), static_cast<int>(this->_internal_api().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Model.api");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_api(), target);
  }

  // string model = 2 [json_name = "model"];
  if (!this->_internal_model().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model().data(), static_cast<int>(this->_internal_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Model.model");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Model)
  return target;
}

size_t Model::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Model)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string api = 1 [json_name = "api"];
  if (!this->_internal_api().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_api());
  }

  // string model = 2 [json_name = "model"];
  if (!this->_internal_model().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Model::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Model::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Model::GetClassData() const { return &_class_data_; }

void Model::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Model *>(to)->MergeFrom(
      static_cast<const Model &>(from));
}


void Model::MergeFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Model)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_api().empty()) {
    _internal_set_api(from._internal_api());
  }
  if (!from._internal_model().empty()) {
    _internal_set_model(from._internal_model());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Model::CopyFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Model::IsInitialized() const {
  return true;
}

void Model::InternalSwap(Model* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &api_, lhs_arena,
      &other->api_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &model_, lhs_arena,
      &other->model_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Model::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[118]);
}

// ===================================================================

class ModuleFileInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<ModuleFileInfo>()._has_bits_);
  static void set_has_organization_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ModuleFileInfo::ModuleFileInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ModuleFileInfo)
}
ModuleFileInfo::ModuleFileInfo(const ModuleFileInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  module_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    module_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_id().empty()) {
    module_id_.Set(from._internal_module_id(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  platform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    platform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_platform().empty()) {
    platform_.Set(from._internal_platform(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_organization_id()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ModuleFileInfo)
}

inline void ModuleFileInfo::SharedCtor() {
module_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  module_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
platform_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  platform_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModuleFileInfo::~ModuleFileInfo() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ModuleFileInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleFileInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  module_id_.Destroy();
  version_.Destroy();
  platform_.Destroy();
  organization_id_.Destroy();
}

void ModuleFileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ModuleFileInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_id_.ClearToEmpty();
  version_.ClearToEmpty();
  platform_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    organization_id_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleFileInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_id = 1 [json_name = "moduleId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ModuleFileInfo.module_id"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2 [json_name = "version"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ModuleFileInfo.version"));
        } else
          goto handle_unusual;
        continue;
      // string platform = 3 [json_name = "platform"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_platform();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ModuleFileInfo.platform"));
        } else
          goto handle_unusual;
        continue;
      // optional string organization_id = 4 [json_name = "organizationId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ModuleFileInfo.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleFileInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ModuleFileInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_id().data(), static_cast<int>(this->_internal_module_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ModuleFileInfo.module_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_id(), target);
  }

  // string version = 2 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ModuleFileInfo.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // string platform = 3 [json_name = "platform"];
  if (!this->_internal_platform().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_platform().data(), static_cast<int>(this->_internal_platform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ModuleFileInfo.platform");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_platform(), target);
  }

  // optional string organization_id = 4 [json_name = "organizationId"];
  if (_internal_has_organization_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ModuleFileInfo.organization_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ModuleFileInfo)
  return target;
}

size_t ModuleFileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ModuleFileInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_id());
  }

  // string version = 2 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string platform = 3 [json_name = "platform"];
  if (!this->_internal_platform().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_platform());
  }

  // optional string organization_id = 4 [json_name = "organizationId"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleFileInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleFileInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleFileInfo::GetClassData() const { return &_class_data_; }

void ModuleFileInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleFileInfo *>(to)->MergeFrom(
      static_cast<const ModuleFileInfo &>(from));
}


void ModuleFileInfo::MergeFrom(const ModuleFileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ModuleFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_module_id().empty()) {
    _internal_set_module_id(from._internal_module_id());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  if (!from._internal_platform().empty()) {
    _internal_set_platform(from._internal_platform());
  }
  if (from._internal_has_organization_id()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleFileInfo::CopyFrom(const ModuleFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ModuleFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleFileInfo::IsInitialized() const {
  return true;
}

void ModuleFileInfo::InternalSwap(ModuleFileInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &module_id_, lhs_arena,
      &other->module_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &platform_, lhs_arena,
      &other->platform_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleFileInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[119]);
}

// ===================================================================

class UploadModuleFileRequest::_Internal {
 public:
  static const ::viam::app::v1::ModuleFileInfo& module_file_info(const UploadModuleFileRequest* msg);
};

const ::viam::app::v1::ModuleFileInfo&
UploadModuleFileRequest::_Internal::module_file_info(const UploadModuleFileRequest* msg) {
  return *msg->module_file_.module_file_info_;
}
void UploadModuleFileRequest::set_allocated_module_file_info(::viam::app::v1::ModuleFileInfo* module_file_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_module_file();
  if (module_file_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(module_file_info);
    if (message_arena != submessage_arena) {
      module_file_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, module_file_info, submessage_arena);
    }
    set_has_module_file_info();
    module_file_.module_file_info_ = module_file_info;
  }
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.UploadModuleFileRequest.module_file_info)
}
UploadModuleFileRequest::UploadModuleFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UploadModuleFileRequest)
}
UploadModuleFileRequest::UploadModuleFileRequest(const UploadModuleFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_module_file();
  switch (from.module_file_case()) {
    case kModuleFileInfo: {
      _internal_mutable_module_file_info()->::viam::app::v1::ModuleFileInfo::MergeFrom(from._internal_module_file_info());
      break;
    }
    case kFile: {
      _internal_set_file(from._internal_file());
      break;
    }
    case MODULE_FILE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UploadModuleFileRequest)
}

inline void UploadModuleFileRequest::SharedCtor() {
clear_has_module_file();
}

UploadModuleFileRequest::~UploadModuleFileRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UploadModuleFileRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UploadModuleFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_module_file()) {
    clear_module_file();
  }
}

void UploadModuleFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UploadModuleFileRequest::clear_module_file() {
// @@protoc_insertion_point(one_of_clear_start:viam.app.v1.UploadModuleFileRequest)
  switch (module_file_case()) {
    case kModuleFileInfo: {
      if (GetArenaForAllocation() == nullptr) {
        delete module_file_.module_file_info_;
      }
      break;
    }
    case kFile: {
      module_file_.file_.Destroy();
      break;
    }
    case MODULE_FILE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MODULE_FILE_NOT_SET;
}


void UploadModuleFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UploadModuleFileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_module_file();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadModuleFileRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.ModuleFileInfo module_file_info = 1 [json_name = "moduleFileInfo"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_module_file_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes file = 2 [json_name = "file"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadModuleFileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UploadModuleFileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.ModuleFileInfo module_file_info = 1 [json_name = "moduleFileInfo"];
  if (_internal_has_module_file_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::module_file_info(this),
        _Internal::module_file_info(this).GetCachedSize(), target, stream);
  }

  // bytes file = 2 [json_name = "file"];
  if (_internal_has_file()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UploadModuleFileRequest)
  return target;
}

size_t UploadModuleFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UploadModuleFileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (module_file_case()) {
    // .viam.app.v1.ModuleFileInfo module_file_info = 1 [json_name = "moduleFileInfo"];
    case kModuleFileInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *module_file_.module_file_info_);
      break;
    }
    // bytes file = 2 [json_name = "file"];
    case kFile: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_file());
      break;
    }
    case MODULE_FILE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadModuleFileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UploadModuleFileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadModuleFileRequest::GetClassData() const { return &_class_data_; }

void UploadModuleFileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UploadModuleFileRequest *>(to)->MergeFrom(
      static_cast<const UploadModuleFileRequest &>(from));
}


void UploadModuleFileRequest::MergeFrom(const UploadModuleFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UploadModuleFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.module_file_case()) {
    case kModuleFileInfo: {
      _internal_mutable_module_file_info()->::viam::app::v1::ModuleFileInfo::MergeFrom(from._internal_module_file_info());
      break;
    }
    case kFile: {
      _internal_set_file(from._internal_file());
      break;
    }
    case MODULE_FILE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadModuleFileRequest::CopyFrom(const UploadModuleFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UploadModuleFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadModuleFileRequest::IsInitialized() const {
  return true;
}

void UploadModuleFileRequest::InternalSwap(UploadModuleFileRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(module_file_, other->module_file_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadModuleFileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[120]);
}

// ===================================================================

class UploadModuleFileResponse::_Internal {
 public:
};

UploadModuleFileResponse::UploadModuleFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UploadModuleFileResponse)
}
UploadModuleFileResponse::UploadModuleFileResponse(const UploadModuleFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UploadModuleFileResponse)
}

inline void UploadModuleFileResponse::SharedCtor() {
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UploadModuleFileResponse::~UploadModuleFileResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UploadModuleFileResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UploadModuleFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  url_.Destroy();
}

void UploadModuleFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UploadModuleFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UploadModuleFileResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadModuleFileResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1 [json_name = "url"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UploadModuleFileResponse.url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadModuleFileResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UploadModuleFileResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UploadModuleFileResponse.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UploadModuleFileResponse)
  return target;
}

size_t UploadModuleFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UploadModuleFileResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadModuleFileResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UploadModuleFileResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadModuleFileResponse::GetClassData() const { return &_class_data_; }

void UploadModuleFileResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UploadModuleFileResponse *>(to)->MergeFrom(
      static_cast<const UploadModuleFileResponse &>(from));
}


void UploadModuleFileResponse::MergeFrom(const UploadModuleFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UploadModuleFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadModuleFileResponse::CopyFrom(const UploadModuleFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UploadModuleFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadModuleFileResponse::IsInitialized() const {
  return true;
}

void UploadModuleFileResponse::InternalSwap(UploadModuleFileResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadModuleFileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[121]);
}

// ===================================================================

class GetModuleRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetModuleRequest>()._has_bits_);
  static void set_has_organization_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

GetModuleRequest::GetModuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetModuleRequest)
}
GetModuleRequest::GetModuleRequest(const GetModuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  module_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    module_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_id().empty()) {
    module_id_.Set(from._internal_module_id(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_organization_id()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetModuleRequest)
}

inline void GetModuleRequest::SharedCtor() {
module_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  module_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetModuleRequest::~GetModuleRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetModuleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetModuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  module_id_.Destroy();
  organization_id_.Destroy();
}

void GetModuleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetModuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetModuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_id_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    organization_id_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetModuleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_id = 1 [json_name = "moduleId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetModuleRequest.module_id"));
        } else
          goto handle_unusual;
        continue;
      // optional string organization_id = 2 [json_name = "organizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetModuleRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetModuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetModuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_id().data(), static_cast<int>(this->_internal_module_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetModuleRequest.module_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_id(), target);
  }

  // optional string organization_id = 2 [json_name = "organizationId"];
  if (_internal_has_organization_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetModuleRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetModuleRequest)
  return target;
}

size_t GetModuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetModuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_id());
  }

  // optional string organization_id = 2 [json_name = "organizationId"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetModuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetModuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetModuleRequest::GetClassData() const { return &_class_data_; }

void GetModuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetModuleRequest *>(to)->MergeFrom(
      static_cast<const GetModuleRequest &>(from));
}


void GetModuleRequest::MergeFrom(const GetModuleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetModuleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_module_id().empty()) {
    _internal_set_module_id(from._internal_module_id());
  }
  if (from._internal_has_organization_id()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetModuleRequest::CopyFrom(const GetModuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModuleRequest::IsInitialized() const {
  return true;
}

void GetModuleRequest::InternalSwap(GetModuleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &module_id_, lhs_arena,
      &other->module_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetModuleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[122]);
}

// ===================================================================

class GetModuleResponse::_Internal {
 public:
  static const ::viam::app::v1::Module& module(const GetModuleResponse* msg);
};

const ::viam::app::v1::Module&
GetModuleResponse::_Internal::module(const GetModuleResponse* msg) {
  return *msg->module_;
}
GetModuleResponse::GetModuleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetModuleResponse)
}
GetModuleResponse::GetModuleResponse(const GetModuleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_module()) {
    module_ = new ::viam::app::v1::Module(*from.module_);
  } else {
    module_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetModuleResponse)
}

inline void GetModuleResponse::SharedCtor() {
module_ = nullptr;
}

GetModuleResponse::~GetModuleResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetModuleResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetModuleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete module_;
}

void GetModuleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetModuleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetModuleResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && module_ != nullptr) {
    delete module_;
  }
  module_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetModuleResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Module module = 1 [json_name = "module"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_module(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetModuleResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetModuleResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Module module = 1 [json_name = "module"];
  if (this->_internal_has_module()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::module(this),
        _Internal::module(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetModuleResponse)
  return target;
}

size_t GetModuleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetModuleResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Module module = 1 [json_name = "module"];
  if (this->_internal_has_module()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *module_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetModuleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetModuleResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetModuleResponse::GetClassData() const { return &_class_data_; }

void GetModuleResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetModuleResponse *>(to)->MergeFrom(
      static_cast<const GetModuleResponse &>(from));
}


void GetModuleResponse::MergeFrom(const GetModuleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetModuleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_module()) {
    _internal_mutable_module()->::viam::app::v1::Module::MergeFrom(from._internal_module());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetModuleResponse::CopyFrom(const GetModuleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetModuleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModuleResponse::IsInitialized() const {
  return true;
}

void GetModuleResponse::InternalSwap(GetModuleResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(module_, other->module_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetModuleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[123]);
}

// ===================================================================

class Module::_Internal {
 public:
};

Module::Module(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  versions_(arena),
  models_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Module)
}
Module::Module(const Module& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      versions_(from.versions_),
      models_(from.models_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  module_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    module_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_id().empty()) {
    module_id_.Set(from._internal_module_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  entrypoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    entrypoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entrypoint().empty()) {
    entrypoint_.Set(from._internal_entrypoint(), 
      GetArenaForAllocation());
  }
  ::memcpy(&total_robot_usage_, &from.total_robot_usage_,
    static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&total_robot_usage_)) + sizeof(visibility_));
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Module)
}

inline void Module::SharedCtor() {
module_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  module_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
entrypoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  entrypoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&total_robot_usage_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&total_robot_usage_)) + sizeof(visibility_));
}

Module::~Module() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Module)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Module::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  module_id_.Destroy();
  name_.Destroy();
  url_.Destroy();
  description_.Destroy();
  organization_id_.Destroy();
  entrypoint_.Destroy();
}

void Module::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Module::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Module)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  versions_.Clear();
  models_.Clear();
  module_id_.ClearToEmpty();
  name_.ClearToEmpty();
  url_.ClearToEmpty();
  description_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  entrypoint_.ClearToEmpty();
  ::memset(&total_robot_usage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visibility_) -
      reinterpret_cast<char*>(&total_robot_usage_)) + sizeof(visibility_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Module::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_id = 1 [json_name = "moduleId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.module_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.name"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.Visibility visibility = 3 [json_name = "visibility"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_visibility(static_cast<::viam::app::v1::Visibility>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.VersionHistory versions = 4 [json_name = "versions"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_versions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string url = 5 [json_name = "url"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.url"));
        } else
          goto handle_unusual;
        continue;
      // string description = 6 [json_name = "description"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.description"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Model models = 7 [json_name = "models"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 total_robot_usage = 8 [json_name = "totalRobotUsage"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          total_robot_usage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 total_organization_usage = 9 [json_name = "totalOrganizationUsage"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          total_organization_usage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 10 [json_name = "organizationId"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string entrypoint = 11 [json_name = "entrypoint"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_entrypoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.entrypoint"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Module::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Module)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_id().data(), static_cast<int>(this->_internal_module_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.module_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .viam.app.v1.Visibility visibility = 3 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_visibility(), target);
  }

  // repeated .viam.app.v1.VersionHistory versions = 4 [json_name = "versions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_versions_size()); i < n; i++) {
    const auto& repfield = this->_internal_versions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string url = 5 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.url");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_url(), target);
  }

  // string description = 6 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.description");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_description(), target);
  }

  // repeated .viam.app.v1.Model models = 7 [json_name = "models"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_models_size()); i < n; i++) {
    const auto& repfield = this->_internal_models(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int64 total_robot_usage = 8 [json_name = "totalRobotUsage"];
  if (this->_internal_total_robot_usage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_total_robot_usage(), target);
  }

  // int64 total_organization_usage = 9 [json_name = "totalOrganizationUsage"];
  if (this->_internal_total_organization_usage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(9, this->_internal_total_organization_usage(), target);
  }

  // string organization_id = 10 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.organization_id");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_organization_id(), target);
  }

  // string entrypoint = 11 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entrypoint().data(), static_cast<int>(this->_internal_entrypoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.entrypoint");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_entrypoint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Module)
  return target;
}

size_t Module::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Module)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.VersionHistory versions = 4 [json_name = "versions"];
  total_size += 1UL * this->_internal_versions_size();
  for (const auto& msg : this->versions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .viam.app.v1.Model models = 7 [json_name = "models"];
  total_size += 1UL * this->_internal_models_size();
  for (const auto& msg : this->models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string url = 5 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string description = 6 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string organization_id = 10 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string entrypoint = 11 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entrypoint());
  }

  // int64 total_robot_usage = 8 [json_name = "totalRobotUsage"];
  if (this->_internal_total_robot_usage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_total_robot_usage());
  }

  // int64 total_organization_usage = 9 [json_name = "totalOrganizationUsage"];
  if (this->_internal_total_organization_usage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_total_organization_usage());
  }

  // .viam.app.v1.Visibility visibility = 3 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_visibility());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Module::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Module::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Module::GetClassData() const { return &_class_data_; }

void Module::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Module *>(to)->MergeFrom(
      static_cast<const Module &>(from));
}


void Module::MergeFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Module)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  versions_.MergeFrom(from.versions_);
  models_.MergeFrom(from.models_);
  if (!from._internal_module_id().empty()) {
    _internal_set_module_id(from._internal_module_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_entrypoint().empty()) {
    _internal_set_entrypoint(from._internal_entrypoint());
  }
  if (from._internal_total_robot_usage() != 0) {
    _internal_set_total_robot_usage(from._internal_total_robot_usage());
  }
  if (from._internal_total_organization_usage() != 0) {
    _internal_set_total_organization_usage(from._internal_total_organization_usage());
  }
  if (from._internal_visibility() != 0) {
    _internal_set_visibility(from._internal_visibility());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Module::CopyFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Module::IsInitialized() const {
  return true;
}

void Module::InternalSwap(Module* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  versions_.InternalSwap(&other->versions_);
  models_.InternalSwap(&other->models_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &module_id_, lhs_arena,
      &other->module_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &entrypoint_, lhs_arena,
      &other->entrypoint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Module, visibility_)
      + sizeof(Module::visibility_)
      - PROTOBUF_FIELD_OFFSET(Module, total_robot_usage_)>(
          reinterpret_cast<char*>(&total_robot_usage_),
          reinterpret_cast<char*>(&other->total_robot_usage_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Module::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[124]);
}

// ===================================================================

class VersionHistory::_Internal {
 public:
};

VersionHistory::VersionHistory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  files_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.VersionHistory)
}
VersionHistory::VersionHistory(const VersionHistory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      files_(from.files_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.VersionHistory)
}

inline void VersionHistory::SharedCtor() {
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VersionHistory::~VersionHistory() {
  // @@protoc_insertion_point(destructor:viam.app.v1.VersionHistory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VersionHistory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  version_.Destroy();
}

void VersionHistory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VersionHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.VersionHistory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VersionHistory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string version = 1 [json_name = "version"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.VersionHistory.version"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Uploads files = 2 [json_name = "files"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VersionHistory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.VersionHistory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.VersionHistory.version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_version(), target);
  }

  // repeated .viam.app.v1.Uploads files = 2 [json_name = "files"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_files_size()); i < n; i++) {
    const auto& repfield = this->_internal_files(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.VersionHistory)
  return target;
}

size_t VersionHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.VersionHistory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Uploads files = 2 [json_name = "files"];
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string version = 1 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VersionHistory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    VersionHistory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VersionHistory::GetClassData() const { return &_class_data_; }

void VersionHistory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<VersionHistory *>(to)->MergeFrom(
      static_cast<const VersionHistory &>(from));
}


void VersionHistory::MergeFrom(const VersionHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.VersionHistory)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VersionHistory::CopyFrom(const VersionHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.VersionHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionHistory::IsInitialized() const {
  return true;
}

void VersionHistory::InternalSwap(VersionHistory* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  files_.InternalSwap(&other->files_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata VersionHistory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[125]);
}

// ===================================================================

class Uploads::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& uploaded_at(const Uploads* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Uploads::_Internal::uploaded_at(const Uploads* msg) {
  return *msg->uploaded_at_;
}
void Uploads::clear_uploaded_at() {
  if (GetArenaForAllocation() == nullptr && uploaded_at_ != nullptr) {
    delete uploaded_at_;
  }
  uploaded_at_ = nullptr;
}
Uploads::Uploads(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Uploads)
}
Uploads::Uploads(const Uploads& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  platform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    platform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_platform().empty()) {
    platform_.Set(from._internal_platform(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_uploaded_at()) {
    uploaded_at_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.uploaded_at_);
  } else {
    uploaded_at_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Uploads)
}

inline void Uploads::SharedCtor() {
platform_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  platform_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
uploaded_at_ = nullptr;
}

Uploads::~Uploads() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Uploads)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Uploads::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  platform_.Destroy();
  if (this != internal_default_instance()) delete uploaded_at_;
}

void Uploads::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Uploads::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Uploads)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  platform_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && uploaded_at_ != nullptr) {
    delete uploaded_at_;
  }
  uploaded_at_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Uploads::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string platform = 1 [json_name = "platform"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_platform();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Uploads.platform"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp uploaded_at = 2 [json_name = "uploadedAt"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_uploaded_at(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Uploads::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Uploads)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string platform = 1 [json_name = "platform"];
  if (!this->_internal_platform().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_platform().data(), static_cast<int>(this->_internal_platform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Uploads.platform");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_platform(), target);
  }

  // .google.protobuf.Timestamp uploaded_at = 2 [json_name = "uploadedAt"];
  if (this->_internal_has_uploaded_at()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::uploaded_at(this),
        _Internal::uploaded_at(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Uploads)
  return target;
}

size_t Uploads::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Uploads)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string platform = 1 [json_name = "platform"];
  if (!this->_internal_platform().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_platform());
  }

  // .google.protobuf.Timestamp uploaded_at = 2 [json_name = "uploadedAt"];
  if (this->_internal_has_uploaded_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *uploaded_at_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Uploads::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Uploads::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Uploads::GetClassData() const { return &_class_data_; }

void Uploads::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Uploads *>(to)->MergeFrom(
      static_cast<const Uploads &>(from));
}


void Uploads::MergeFrom(const Uploads& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Uploads)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_platform().empty()) {
    _internal_set_platform(from._internal_platform());
  }
  if (from._internal_has_uploaded_at()) {
    _internal_mutable_uploaded_at()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_uploaded_at());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Uploads::CopyFrom(const Uploads& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Uploads)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uploads::IsInitialized() const {
  return true;
}

void Uploads::InternalSwap(Uploads* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &platform_, lhs_arena,
      &other->platform_, rhs_arena
  );
  swap(uploaded_at_, other->uploaded_at_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Uploads::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[126]);
}

// ===================================================================

class ListModulesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ListModulesRequest>()._has_bits_);
  static void set_has_organization_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ListModulesRequest::ListModulesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListModulesRequest)
}
ListModulesRequest::ListModulesRequest(const ListModulesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_organization_id()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListModulesRequest)
}

inline void ListModulesRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListModulesRequest::~ListModulesRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListModulesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListModulesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void ListModulesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListModulesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListModulesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    organization_id_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListModulesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListModulesRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListModulesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListModulesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string organization_id = 1 [json_name = "organizationId"];
  if (_internal_has_organization_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListModulesRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListModulesRequest)
  return target;
}

size_t ListModulesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListModulesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string organization_id = 1 [json_name = "organizationId"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListModulesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListModulesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListModulesRequest::GetClassData() const { return &_class_data_; }

void ListModulesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListModulesRequest *>(to)->MergeFrom(
      static_cast<const ListModulesRequest &>(from));
}


void ListModulesRequest::MergeFrom(const ListModulesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListModulesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_organization_id()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListModulesRequest::CopyFrom(const ListModulesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListModulesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListModulesRequest::IsInitialized() const {
  return true;
}

void ListModulesRequest::InternalSwap(ListModulesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListModulesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[127]);
}

// ===================================================================

class ListModulesResponse::_Internal {
 public:
};

ListModulesResponse::ListModulesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  modules_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListModulesResponse)
}
ListModulesResponse::ListModulesResponse(const ListModulesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      modules_(from.modules_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListModulesResponse)
}

inline void ListModulesResponse::SharedCtor() {
}

ListModulesResponse::~ListModulesResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListModulesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListModulesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListModulesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListModulesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListModulesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  modules_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListModulesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Module modules = 1 [json_name = "modules"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_modules(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListModulesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListModulesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Module modules = 1 [json_name = "modules"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_modules_size()); i < n; i++) {
    const auto& repfield = this->_internal_modules(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListModulesResponse)
  return target;
}

size_t ListModulesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListModulesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Module modules = 1 [json_name = "modules"];
  total_size += 1UL * this->_internal_modules_size();
  for (const auto& msg : this->modules_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListModulesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListModulesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListModulesResponse::GetClassData() const { return &_class_data_; }

void ListModulesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListModulesResponse *>(to)->MergeFrom(
      static_cast<const ListModulesResponse &>(from));
}


void ListModulesResponse::MergeFrom(const ListModulesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListModulesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  modules_.MergeFrom(from.modules_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListModulesResponse::CopyFrom(const ListModulesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListModulesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListModulesResponse::IsInitialized() const {
  return true;
}

void ListModulesResponse::InternalSwap(ListModulesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  modules_.InternalSwap(&other->modules_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListModulesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[128]);
}

// ===================================================================

class GetUserIDByEmailRequest::_Internal {
 public:
};

GetUserIDByEmailRequest::GetUserIDByEmailRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetUserIDByEmailRequest)
}
GetUserIDByEmailRequest::GetUserIDByEmailRequest(const GetUserIDByEmailRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetUserIDByEmailRequest)
}

inline void GetUserIDByEmailRequest::SharedCtor() {
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUserIDByEmailRequest::~GetUserIDByEmailRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetUserIDByEmailRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserIDByEmailRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  email_.Destroy();
}

void GetUserIDByEmailRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetUserIDByEmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetUserIDByEmailRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserIDByEmailRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string email = 1 [json_name = "email"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetUserIDByEmailRequest.email"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserIDByEmailRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetUserIDByEmailRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetUserIDByEmailRequest.email");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetUserIDByEmailRequest)
  return target;
}

size_t GetUserIDByEmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetUserIDByEmailRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email = 1 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserIDByEmailRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetUserIDByEmailRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserIDByEmailRequest::GetClassData() const { return &_class_data_; }

void GetUserIDByEmailRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetUserIDByEmailRequest *>(to)->MergeFrom(
      static_cast<const GetUserIDByEmailRequest &>(from));
}


void GetUserIDByEmailRequest::MergeFrom(const GetUserIDByEmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetUserIDByEmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserIDByEmailRequest::CopyFrom(const GetUserIDByEmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetUserIDByEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserIDByEmailRequest::IsInitialized() const {
  return true;
}

void GetUserIDByEmailRequest::InternalSwap(GetUserIDByEmailRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserIDByEmailRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[129]);
}

// ===================================================================

class GetUserIDByEmailResponse::_Internal {
 public:
};

GetUserIDByEmailResponse::GetUserIDByEmailResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetUserIDByEmailResponse)
}
GetUserIDByEmailResponse::GetUserIDByEmailResponse(const GetUserIDByEmailResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    user_id_.Set(from._internal_user_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetUserIDByEmailResponse)
}

inline void GetUserIDByEmailResponse::SharedCtor() {
user_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  user_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUserIDByEmailResponse::~GetUserIDByEmailResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetUserIDByEmailResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserIDByEmailResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  user_id_.Destroy();
}

void GetUserIDByEmailResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetUserIDByEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetUserIDByEmailResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserIDByEmailResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1 [json_name = "userId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetUserIDByEmailResponse.user_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserIDByEmailResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetUserIDByEmailResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetUserIDByEmailResponse.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetUserIDByEmailResponse)
  return target;
}

size_t GetUserIDByEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetUserIDByEmailResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserIDByEmailResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetUserIDByEmailResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserIDByEmailResponse::GetClassData() const { return &_class_data_; }

void GetUserIDByEmailResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetUserIDByEmailResponse *>(to)->MergeFrom(
      static_cast<const GetUserIDByEmailResponse &>(from));
}


void GetUserIDByEmailResponse::MergeFrom(const GetUserIDByEmailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetUserIDByEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserIDByEmailResponse::CopyFrom(const GetUserIDByEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetUserIDByEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserIDByEmailResponse::IsInitialized() const {
  return true;
}

void GetUserIDByEmailResponse::InternalSwap(GetUserIDByEmailResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &user_id_, lhs_arena,
      &other->user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserIDByEmailResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[130]);
}

// ===================================================================

class ListOrganizationsByUserRequest::_Internal {
 public:
};

ListOrganizationsByUserRequest::ListOrganizationsByUserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationsByUserRequest)
}
ListOrganizationsByUserRequest::ListOrganizationsByUserRequest(const ListOrganizationsByUserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    user_id_.Set(from._internal_user_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationsByUserRequest)
}

inline void ListOrganizationsByUserRequest::SharedCtor() {
user_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  user_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListOrganizationsByUserRequest::~ListOrganizationsByUserRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListOrganizationsByUserRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListOrganizationsByUserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  user_id_.Destroy();
}

void ListOrganizationsByUserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListOrganizationsByUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListOrganizationsByUserRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListOrganizationsByUserRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1 [json_name = "userId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListOrganizationsByUserRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListOrganizationsByUserRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListOrganizationsByUserRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListOrganizationsByUserRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListOrganizationsByUserRequest)
  return target;
}

size_t ListOrganizationsByUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListOrganizationsByUserRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationsByUserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListOrganizationsByUserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationsByUserRequest::GetClassData() const { return &_class_data_; }

void ListOrganizationsByUserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListOrganizationsByUserRequest *>(to)->MergeFrom(
      static_cast<const ListOrganizationsByUserRequest &>(from));
}


void ListOrganizationsByUserRequest::MergeFrom(const ListOrganizationsByUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListOrganizationsByUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListOrganizationsByUserRequest::CopyFrom(const ListOrganizationsByUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListOrganizationsByUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOrganizationsByUserRequest::IsInitialized() const {
  return true;
}

void ListOrganizationsByUserRequest::InternalSwap(ListOrganizationsByUserRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &user_id_, lhs_arena,
      &other->user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationsByUserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[131]);
}

// ===================================================================

class OrgDetails::_Internal {
 public:
};

OrgDetails::OrgDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrgDetails)
}
OrgDetails::OrgDetails(const OrgDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  org_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_name().empty()) {
    org_name_.Set(from._internal_org_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrgDetails)
}

inline void OrgDetails::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
org_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrgDetails::~OrgDetails() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OrgDetails)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrgDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
  org_name_.Destroy();
}

void OrgDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrgDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OrgDetails)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  org_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrgDetails::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrgDetails.org_id"));
        } else
          goto handle_unusual;
        continue;
      // string org_name = 2 [json_name = "orgName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_org_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrgDetails.org_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrgDetails::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OrgDetails)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrgDetails.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string org_name = 2 [json_name = "orgName"];
  if (!this->_internal_org_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_name().data(), static_cast<int>(this->_internal_org_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrgDetails.org_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_org_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OrgDetails)
  return target;
}

size_t OrgDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OrgDetails)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string org_name = 2 [json_name = "orgName"];
  if (!this->_internal_org_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrgDetails::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrgDetails::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrgDetails::GetClassData() const { return &_class_data_; }

void OrgDetails::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrgDetails *>(to)->MergeFrom(
      static_cast<const OrgDetails &>(from));
}


void OrgDetails::MergeFrom(const OrgDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OrgDetails)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (!from._internal_org_name().empty()) {
    _internal_set_org_name(from._internal_org_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrgDetails::CopyFrom(const OrgDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OrgDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrgDetails::IsInitialized() const {
  return true;
}

void OrgDetails::InternalSwap(OrgDetails* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_name_, lhs_arena,
      &other->org_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrgDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[132]);
}

// ===================================================================

class ListOrganizationsByUserResponse::_Internal {
 public:
};

ListOrganizationsByUserResponse::ListOrganizationsByUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  orgs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationsByUserResponse)
}
ListOrganizationsByUserResponse::ListOrganizationsByUserResponse(const ListOrganizationsByUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      orgs_(from.orgs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationsByUserResponse)
}

inline void ListOrganizationsByUserResponse::SharedCtor() {
}

ListOrganizationsByUserResponse::~ListOrganizationsByUserResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListOrganizationsByUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListOrganizationsByUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListOrganizationsByUserResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListOrganizationsByUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListOrganizationsByUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  orgs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListOrganizationsByUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.OrgDetails orgs = 1 [json_name = "orgs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_orgs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListOrganizationsByUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListOrganizationsByUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.OrgDetails orgs = 1 [json_name = "orgs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_orgs_size()); i < n; i++) {
    const auto& repfield = this->_internal_orgs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListOrganizationsByUserResponse)
  return target;
}

size_t ListOrganizationsByUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListOrganizationsByUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.OrgDetails orgs = 1 [json_name = "orgs"];
  total_size += 1UL * this->_internal_orgs_size();
  for (const auto& msg : this->orgs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationsByUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListOrganizationsByUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationsByUserResponse::GetClassData() const { return &_class_data_; }

void ListOrganizationsByUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListOrganizationsByUserResponse *>(to)->MergeFrom(
      static_cast<const ListOrganizationsByUserResponse &>(from));
}


void ListOrganizationsByUserResponse::MergeFrom(const ListOrganizationsByUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListOrganizationsByUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  orgs_.MergeFrom(from.orgs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListOrganizationsByUserResponse::CopyFrom(const ListOrganizationsByUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListOrganizationsByUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOrganizationsByUserResponse::IsInitialized() const {
  return true;
}

void ListOrganizationsByUserResponse::InternalSwap(ListOrganizationsByUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  orgs_.InternalSwap(&other->orgs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationsByUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[133]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace app
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::app::v1::Robot*
Arena::CreateMaybeMessage< ::viam::app::v1::Robot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Robot >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RobotPart*
Arena::CreateMaybeMessage< ::viam::app::v1::RobotPart >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RobotPart >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RobotPartHistoryEntry*
Arena::CreateMaybeMessage< ::viam::app::v1::RobotPartHistoryEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RobotPartHistoryEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Organization*
Arena::CreateMaybeMessage< ::viam::app::v1::Organization >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Organization >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrganizationMember*
Arena::CreateMaybeMessage< ::viam::app::v1::OrganizationMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrganizationMember >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrganizationInvite*
Arena::CreateMaybeMessage< ::viam::app::v1::OrganizationInvite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrganizationInvite >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateOrganizationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateOrganizationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateOrganizationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateOrganizationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetOrganizationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetOrganizationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetOrganizationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetOrganizationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetOrganizationNamespaceAvailabilityRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetOrganizationNamespaceAvailabilityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetOrganizationNamespaceAvailabilityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetOrganizationNamespaceAvailabilityResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetOrganizationNamespaceAvailabilityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetOrganizationNamespaceAvailabilityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateOrganizationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateOrganizationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateOrganizationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateOrganizationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOrganizationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOrganizationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOrganizationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOrganizationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationMembersRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationMembersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationMembersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationMembersResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationMembersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationMembersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateOrganizationInviteRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateOrganizationInviteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateOrganizationInviteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateOrganizationInviteResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateOrganizationInviteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateOrganizationInviteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateOrganizationInviteAuthorizationsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateOrganizationInviteAuthorizationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateOrganizationInviteAuthorizationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOrganizationInviteRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOrganizationInviteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOrganizationInviteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOrganizationInviteResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOrganizationInviteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOrganizationInviteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ResendOrganizationInviteRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ResendOrganizationInviteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ResendOrganizationInviteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ResendOrganizationInviteResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ResendOrganizationInviteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ResendOrganizationInviteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOrganizationMemberRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOrganizationMemberRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOrganizationMemberRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOrganizationMemberResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOrganizationMemberResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOrganizationMemberResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::LocationOrganization*
Arena::CreateMaybeMessage< ::viam::app::v1::LocationOrganization >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::LocationOrganization >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::LocationAuth*
Arena::CreateMaybeMessage< ::viam::app::v1::LocationAuth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::LocationAuth >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::StorageConfig*
Arena::CreateMaybeMessage< ::viam::app::v1::StorageConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::StorageConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Location*
Arena::CreateMaybeMessage< ::viam::app::v1::Location >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Location >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::SharedSecret*
Arena::CreateMaybeMessage< ::viam::app::v1::SharedSecret >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::SharedSecret >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListLocationsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListLocationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListLocationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ShareLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ShareLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ShareLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ShareLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ShareLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ShareLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UnshareLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UnshareLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UnshareLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UnshareLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UnshareLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UnshareLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListLocationsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListLocationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListLocationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateLocationSecretRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateLocationSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateLocationSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateLocationSecretResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateLocationSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateLocationSecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteLocationSecretRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteLocationSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteLocationSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteLocationSecretResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteLocationSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteLocationSecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::LocationAuthRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::LocationAuthRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::LocationAuthRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::LocationAuthResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::LocationAuthResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::LocationAuthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRoverRentalRobotsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRoverRentalRobotsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRoverRentalRobotsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RoverRentalRobot*
Arena::CreateMaybeMessage< ::viam::app::v1::RoverRentalRobot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RoverRentalRobot >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRoverRentalRobotsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRoverRentalRobotsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRoverRentalRobotsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartLogsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartLogsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartLogsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::LogEntry*
Arena::CreateMaybeMessage< ::viam::app::v1::LogEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::LogEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartLogsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartLogsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartLogsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::TailRobotPartLogsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::TailRobotPartLogsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::TailRobotPartLogsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::TailRobotPartLogsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::TailRobotPartLogsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::TailRobotPartLogsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartHistoryRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartHistoryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartHistoryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartHistoryResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartHistoryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartHistoryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRobotPartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRobotPartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRobotPartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRobotPartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRobotPartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRobotPartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::NewRobotPartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::NewRobotPartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::NewRobotPartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::NewRobotPartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::NewRobotPartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::NewRobotPartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotPartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotPartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotPartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotPartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotPartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotPartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Fragment*
Arena::CreateMaybeMessage< ::viam::app::v1::Fragment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Fragment >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListFragmentsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListFragmentsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListFragmentsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListFragmentsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListFragmentsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListFragmentsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetFragmentRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetFragmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetFragmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetFragmentResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetFragmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetFragmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateFragmentRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateFragmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateFragmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateFragmentResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateFragmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateFragmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateFragmentRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateFragmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateFragmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateFragmentResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateFragmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateFragmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteFragmentRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteFragmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteFragmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteFragmentResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteFragmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteFragmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListRobotsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListRobotsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListRobotsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListRobotsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListRobotsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListRobotsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::NewRobotRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::NewRobotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::NewRobotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::NewRobotResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::NewRobotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::NewRobotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRobotRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRobotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRobotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRobotResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRobotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRobotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::MarkPartAsMainRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::MarkPartAsMainRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::MarkPartAsMainRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::MarkPartAsMainResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::MarkPartAsMainResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::MarkPartAsMainResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::MarkPartForRestartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::MarkPartForRestartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::MarkPartForRestartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::MarkPartForRestartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::MarkPartForRestartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::MarkPartForRestartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateRobotPartSecretRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateRobotPartSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateRobotPartSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateRobotPartSecretResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateRobotPartSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateRobotPartSecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotPartSecretRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotPartSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotPartSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotPartSecretResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotPartSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotPartSecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Authorization*
Arena::CreateMaybeMessage< ::viam::app::v1::Authorization >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Authorization >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::AddRoleRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::AddRoleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::AddRoleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::AddRoleResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::AddRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::AddRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RemoveRoleRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::RemoveRoleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RemoveRoleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RemoveRoleResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::RemoveRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RemoveRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListAuthorizationsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListAuthorizationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListAuthorizationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListAuthorizationsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListAuthorizationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListAuthorizationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CheckPermissionsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CheckPermissionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CheckPermissionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::AuthorizedPermissions*
Arena::CreateMaybeMessage< ::viam::app::v1::AuthorizedPermissions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::AuthorizedPermissions >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CheckPermissionsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CheckPermissionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CheckPermissionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateModuleRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateModuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateModuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateModuleResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateModuleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateModuleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateModuleRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateModuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateModuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateModuleResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateModuleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateModuleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Model*
Arena::CreateMaybeMessage< ::viam::app::v1::Model >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Model >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ModuleFileInfo*
Arena::CreateMaybeMessage< ::viam::app::v1::ModuleFileInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ModuleFileInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UploadModuleFileRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UploadModuleFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UploadModuleFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UploadModuleFileResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UploadModuleFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UploadModuleFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetModuleRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetModuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetModuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetModuleResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetModuleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetModuleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Module*
Arena::CreateMaybeMessage< ::viam::app::v1::Module >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Module >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::VersionHistory*
Arena::CreateMaybeMessage< ::viam::app::v1::VersionHistory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::VersionHistory >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Uploads*
Arena::CreateMaybeMessage< ::viam::app::v1::Uploads >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Uploads >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListModulesRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListModulesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListModulesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListModulesResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListModulesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListModulesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetUserIDByEmailRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetUserIDByEmailRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetUserIDByEmailRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetUserIDByEmailResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetUserIDByEmailResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetUserIDByEmailResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationsByUserRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationsByUserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationsByUserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrgDetails*
Arena::CreateMaybeMessage< ::viam::app::v1::OrgDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrgDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationsByUserResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationsByUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationsByUserResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
