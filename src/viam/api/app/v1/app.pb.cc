// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/v1/app.proto

#include "app/v1/app.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace app {
namespace v1 {
PROTOBUF_CONSTEXPR Robot::Robot(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , last_access_(nullptr)
  , created_on_(nullptr){}
struct RobotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RobotDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RobotDefaultTypeInternal() {}
  union {
    Robot _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RobotDefaultTypeInternal _Robot_default_instance_;
PROTOBUF_CONSTEXPR RobotPart::RobotPart(
    ::_pbi::ConstantInitialized)
  : secrets_()
  , id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , secret_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , fqdn_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , dns_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , local_fqdn_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_config_(nullptr)
  , last_access_(nullptr)
  , user_supplied_info_(nullptr)
  , created_on_(nullptr)
  , last_updated_(nullptr)
  , main_part_(false){}
struct RobotPartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RobotPartDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RobotPartDefaultTypeInternal() {}
  union {
    RobotPart _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RobotPartDefaultTypeInternal _RobotPart_default_instance_;
PROTOBUF_CONSTEXPR RobotPartHistoryEntry::RobotPartHistoryEntry(
    ::_pbi::ConstantInitialized)
  : part_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , when_(nullptr)
  , old_(nullptr)
  , edited_by_(nullptr){}
struct RobotPartHistoryEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RobotPartHistoryEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RobotPartHistoryEntryDefaultTypeInternal() {}
  union {
    RobotPartHistoryEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RobotPartHistoryEntryDefaultTypeInternal _RobotPartHistoryEntry_default_instance_;
PROTOBUF_CONSTEXPR AuthenticatorInfo::AuthenticatorInfo(
    ::_pbi::ConstantInitialized)
  : value_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , type_(0)

  , is_deactivated_(false){}
struct AuthenticatorInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticatorInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticatorInfoDefaultTypeInternal() {}
  union {
    AuthenticatorInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticatorInfoDefaultTypeInternal _AuthenticatorInfo_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationsRequest::ListOrganizationsRequest(
    ::_pbi::ConstantInitialized){}
struct ListOrganizationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationsRequestDefaultTypeInternal() {}
  union {
    ListOrganizationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationsRequestDefaultTypeInternal _ListOrganizationsRequest_default_instance_;
PROTOBUF_CONSTEXPR Organization::Organization(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , public_namespace_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , default_region_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , cid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_on_(nullptr){}
struct OrganizationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationDefaultTypeInternal() {}
  union {
    Organization _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationDefaultTypeInternal _Organization_default_instance_;
PROTOBUF_CONSTEXPR OrganizationMember::OrganizationMember(
    ::_pbi::ConstantInitialized)
  : emails_()
  , user_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , date_added_(nullptr)
  , last_login_(nullptr){}
struct OrganizationMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationMemberDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationMemberDefaultTypeInternal() {}
  union {
    OrganizationMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationMemberDefaultTypeInternal _OrganizationMember_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationsResponse::ListOrganizationsResponse(
    ::_pbi::ConstantInitialized)
  : organizations_(){}
struct ListOrganizationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationsResponseDefaultTypeInternal() {}
  union {
    ListOrganizationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationsResponseDefaultTypeInternal _ListOrganizationsResponse_default_instance_;
PROTOBUF_CONSTEXPR OrganizationInvite::OrganizationInvite(
    ::_pbi::ConstantInitialized)
  : authorizations_()
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_on_(nullptr){}
struct OrganizationInviteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationInviteDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationInviteDefaultTypeInternal() {}
  union {
    OrganizationInvite _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationInviteDefaultTypeInternal _OrganizationInvite_default_instance_;
PROTOBUF_CONSTEXPR CreateOrganizationRequest::CreateOrganizationRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateOrganizationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateOrganizationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateOrganizationRequestDefaultTypeInternal() {}
  union {
    CreateOrganizationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateOrganizationRequestDefaultTypeInternal _CreateOrganizationRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateOrganizationResponse::CreateOrganizationResponse(
    ::_pbi::ConstantInitialized)
  : organization_(nullptr){}
struct CreateOrganizationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateOrganizationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateOrganizationResponseDefaultTypeInternal() {}
  union {
    CreateOrganizationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateOrganizationResponseDefaultTypeInternal _CreateOrganizationResponse_default_instance_;
PROTOBUF_CONSTEXPR GetOrganizationRequest::GetOrganizationRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetOrganizationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrganizationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrganizationRequestDefaultTypeInternal() {}
  union {
    GetOrganizationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrganizationRequestDefaultTypeInternal _GetOrganizationRequest_default_instance_;
PROTOBUF_CONSTEXPR GetOrganizationResponse::GetOrganizationResponse(
    ::_pbi::ConstantInitialized)
  : organization_(nullptr){}
struct GetOrganizationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrganizationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrganizationResponseDefaultTypeInternal() {}
  union {
    GetOrganizationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrganizationResponseDefaultTypeInternal _GetOrganizationResponse_default_instance_;
PROTOBUF_CONSTEXPR GetOrganizationNamespaceAvailabilityRequest::GetOrganizationNamespaceAvailabilityRequest(
    ::_pbi::ConstantInitialized)
  : public_namespace_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetOrganizationNamespaceAvailabilityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrganizationNamespaceAvailabilityRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrganizationNamespaceAvailabilityRequestDefaultTypeInternal() {}
  union {
    GetOrganizationNamespaceAvailabilityRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrganizationNamespaceAvailabilityRequestDefaultTypeInternal _GetOrganizationNamespaceAvailabilityRequest_default_instance_;
PROTOBUF_CONSTEXPR GetOrganizationNamespaceAvailabilityResponse::GetOrganizationNamespaceAvailabilityResponse(
    ::_pbi::ConstantInitialized)
  : available_(false){}
struct GetOrganizationNamespaceAvailabilityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrganizationNamespaceAvailabilityResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrganizationNamespaceAvailabilityResponseDefaultTypeInternal() {}
  union {
    GetOrganizationNamespaceAvailabilityResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrganizationNamespaceAvailabilityResponseDefaultTypeInternal _GetOrganizationNamespaceAvailabilityResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateOrganizationRequest::UpdateOrganizationRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , public_namespace_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , region_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , cid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UpdateOrganizationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateOrganizationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateOrganizationRequestDefaultTypeInternal() {}
  union {
    UpdateOrganizationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateOrganizationRequestDefaultTypeInternal _UpdateOrganizationRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateOrganizationResponse::UpdateOrganizationResponse(
    ::_pbi::ConstantInitialized)
  : organization_(nullptr){}
struct UpdateOrganizationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateOrganizationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateOrganizationResponseDefaultTypeInternal() {}
  union {
    UpdateOrganizationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateOrganizationResponseDefaultTypeInternal _UpdateOrganizationResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteOrganizationRequest::DeleteOrganizationRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteOrganizationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOrganizationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOrganizationRequestDefaultTypeInternal() {}
  union {
    DeleteOrganizationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOrganizationRequestDefaultTypeInternal _DeleteOrganizationRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteOrganizationResponse::DeleteOrganizationResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteOrganizationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOrganizationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOrganizationResponseDefaultTypeInternal() {}
  union {
    DeleteOrganizationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOrganizationResponseDefaultTypeInternal _DeleteOrganizationResponse_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationMembersRequest::ListOrganizationMembersRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListOrganizationMembersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationMembersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationMembersRequestDefaultTypeInternal() {}
  union {
    ListOrganizationMembersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationMembersRequestDefaultTypeInternal _ListOrganizationMembersRequest_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationMembersResponse::ListOrganizationMembersResponse(
    ::_pbi::ConstantInitialized)
  : members_()
  , invites_()
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListOrganizationMembersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationMembersResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationMembersResponseDefaultTypeInternal() {}
  union {
    ListOrganizationMembersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationMembersResponseDefaultTypeInternal _ListOrganizationMembersResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateOrganizationInviteRequest::CreateOrganizationInviteRequest(
    ::_pbi::ConstantInitialized)
  : authorizations_()
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , send_email_invite_(false){}
struct CreateOrganizationInviteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateOrganizationInviteRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateOrganizationInviteRequestDefaultTypeInternal() {}
  union {
    CreateOrganizationInviteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateOrganizationInviteRequestDefaultTypeInternal _CreateOrganizationInviteRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateOrganizationInviteResponse::CreateOrganizationInviteResponse(
    ::_pbi::ConstantInitialized)
  : invite_(nullptr){}
struct CreateOrganizationInviteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateOrganizationInviteResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateOrganizationInviteResponseDefaultTypeInternal() {}
  union {
    CreateOrganizationInviteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateOrganizationInviteResponseDefaultTypeInternal _CreateOrganizationInviteResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateOrganizationInviteAuthorizationsRequest::UpdateOrganizationInviteAuthorizationsRequest(
    ::_pbi::ConstantInitialized)
  : add_authorizations_()
  , remove_authorizations_()
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UpdateOrganizationInviteAuthorizationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateOrganizationInviteAuthorizationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateOrganizationInviteAuthorizationsRequestDefaultTypeInternal() {}
  union {
    UpdateOrganizationInviteAuthorizationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateOrganizationInviteAuthorizationsRequestDefaultTypeInternal _UpdateOrganizationInviteAuthorizationsRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateOrganizationInviteAuthorizationsResponse::UpdateOrganizationInviteAuthorizationsResponse(
    ::_pbi::ConstantInitialized)
  : invite_(nullptr){}
struct UpdateOrganizationInviteAuthorizationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateOrganizationInviteAuthorizationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateOrganizationInviteAuthorizationsResponseDefaultTypeInternal() {}
  union {
    UpdateOrganizationInviteAuthorizationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateOrganizationInviteAuthorizationsResponseDefaultTypeInternal _UpdateOrganizationInviteAuthorizationsResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteOrganizationInviteRequest::DeleteOrganizationInviteRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteOrganizationInviteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOrganizationInviteRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOrganizationInviteRequestDefaultTypeInternal() {}
  union {
    DeleteOrganizationInviteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOrganizationInviteRequestDefaultTypeInternal _DeleteOrganizationInviteRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteOrganizationInviteResponse::DeleteOrganizationInviteResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteOrganizationInviteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOrganizationInviteResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOrganizationInviteResponseDefaultTypeInternal() {}
  union {
    DeleteOrganizationInviteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOrganizationInviteResponseDefaultTypeInternal _DeleteOrganizationInviteResponse_default_instance_;
PROTOBUF_CONSTEXPR ResendOrganizationInviteRequest::ResendOrganizationInviteRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ResendOrganizationInviteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResendOrganizationInviteRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResendOrganizationInviteRequestDefaultTypeInternal() {}
  union {
    ResendOrganizationInviteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResendOrganizationInviteRequestDefaultTypeInternal _ResendOrganizationInviteRequest_default_instance_;
PROTOBUF_CONSTEXPR ResendOrganizationInviteResponse::ResendOrganizationInviteResponse(
    ::_pbi::ConstantInitialized)
  : invite_(nullptr){}
struct ResendOrganizationInviteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResendOrganizationInviteResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResendOrganizationInviteResponseDefaultTypeInternal() {}
  union {
    ResendOrganizationInviteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResendOrganizationInviteResponseDefaultTypeInternal _ResendOrganizationInviteResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteOrganizationMemberRequest::DeleteOrganizationMemberRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , user_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteOrganizationMemberRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOrganizationMemberRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOrganizationMemberRequestDefaultTypeInternal() {}
  union {
    DeleteOrganizationMemberRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOrganizationMemberRequestDefaultTypeInternal _DeleteOrganizationMemberRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteOrganizationMemberResponse::DeleteOrganizationMemberResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteOrganizationMemberResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOrganizationMemberResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOrganizationMemberResponseDefaultTypeInternal() {}
  union {
    DeleteOrganizationMemberResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOrganizationMemberResponseDefaultTypeInternal _DeleteOrganizationMemberResponse_default_instance_;
PROTOBUF_CONSTEXPR BillingAddress::BillingAddress(
    ::_pbi::ConstantInitialized)
  : address_line_1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , address_line_2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , city_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , state_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , zipcode_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , country_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct BillingAddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BillingAddressDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BillingAddressDefaultTypeInternal() {}
  union {
    BillingAddress _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BillingAddressDefaultTypeInternal _BillingAddress_default_instance_;
PROTOBUF_CONSTEXPR EnableBillingServiceRequest::EnableBillingServiceRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , billing_address_(nullptr){}
struct EnableBillingServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnableBillingServiceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnableBillingServiceRequestDefaultTypeInternal() {}
  union {
    EnableBillingServiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnableBillingServiceRequestDefaultTypeInternal _EnableBillingServiceRequest_default_instance_;
PROTOBUF_CONSTEXPR EnableBillingServiceResponse::EnableBillingServiceResponse(
    ::_pbi::ConstantInitialized){}
struct EnableBillingServiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnableBillingServiceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnableBillingServiceResponseDefaultTypeInternal() {}
  union {
    EnableBillingServiceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnableBillingServiceResponseDefaultTypeInternal _EnableBillingServiceResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateBillingServiceRequest::UpdateBillingServiceRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , billing_address_(nullptr){}
struct UpdateBillingServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateBillingServiceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateBillingServiceRequestDefaultTypeInternal() {}
  union {
    UpdateBillingServiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateBillingServiceRequestDefaultTypeInternal _UpdateBillingServiceRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateBillingServiceResponse::UpdateBillingServiceResponse(
    ::_pbi::ConstantInitialized){}
struct UpdateBillingServiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateBillingServiceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateBillingServiceResponseDefaultTypeInternal() {}
  union {
    UpdateBillingServiceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateBillingServiceResponseDefaultTypeInternal _UpdateBillingServiceResponse_default_instance_;
PROTOBUF_CONSTEXPR GetBillingServiceConfigRequest::GetBillingServiceConfigRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetBillingServiceConfigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBillingServiceConfigRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBillingServiceConfigRequestDefaultTypeInternal() {}
  union {
    GetBillingServiceConfigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBillingServiceConfigRequestDefaultTypeInternal _GetBillingServiceConfigRequest_default_instance_;
PROTOBUF_CONSTEXPR GetBillingServiceConfigResponse::GetBillingServiceConfigResponse(
    ::_pbi::ConstantInitialized)
  : support_email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , logo_url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , billing_dashboard_url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , billing_address_(nullptr){}
struct GetBillingServiceConfigResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBillingServiceConfigResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBillingServiceConfigResponseDefaultTypeInternal() {}
  union {
    GetBillingServiceConfigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBillingServiceConfigResponseDefaultTypeInternal _GetBillingServiceConfigResponse_default_instance_;
PROTOBUF_CONSTEXPR DisableBillingServiceRequest::DisableBillingServiceRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DisableBillingServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisableBillingServiceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisableBillingServiceRequestDefaultTypeInternal() {}
  union {
    DisableBillingServiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisableBillingServiceRequestDefaultTypeInternal _DisableBillingServiceRequest_default_instance_;
PROTOBUF_CONSTEXPR DisableBillingServiceResponse::DisableBillingServiceResponse(
    ::_pbi::ConstantInitialized){}
struct DisableBillingServiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisableBillingServiceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisableBillingServiceResponseDefaultTypeInternal() {}
  union {
    DisableBillingServiceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisableBillingServiceResponseDefaultTypeInternal _DisableBillingServiceResponse_default_instance_;
PROTOBUF_CONSTEXPR OrganizationSetSupportEmailRequest::OrganizationSetSupportEmailRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct OrganizationSetSupportEmailRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationSetSupportEmailRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationSetSupportEmailRequestDefaultTypeInternal() {}
  union {
    OrganizationSetSupportEmailRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationSetSupportEmailRequestDefaultTypeInternal _OrganizationSetSupportEmailRequest_default_instance_;
PROTOBUF_CONSTEXPR OrganizationSetSupportEmailResponse::OrganizationSetSupportEmailResponse(
    ::_pbi::ConstantInitialized){}
struct OrganizationSetSupportEmailResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationSetSupportEmailResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationSetSupportEmailResponseDefaultTypeInternal() {}
  union {
    OrganizationSetSupportEmailResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationSetSupportEmailResponseDefaultTypeInternal _OrganizationSetSupportEmailResponse_default_instance_;
PROTOBUF_CONSTEXPR OrganizationGetSupportEmailRequest::OrganizationGetSupportEmailRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct OrganizationGetSupportEmailRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationGetSupportEmailRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationGetSupportEmailRequestDefaultTypeInternal() {}
  union {
    OrganizationGetSupportEmailRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationGetSupportEmailRequestDefaultTypeInternal _OrganizationGetSupportEmailRequest_default_instance_;
PROTOBUF_CONSTEXPR OrganizationGetSupportEmailResponse::OrganizationGetSupportEmailResponse(
    ::_pbi::ConstantInitialized)
  : email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct OrganizationGetSupportEmailResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationGetSupportEmailResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationGetSupportEmailResponseDefaultTypeInternal() {}
  union {
    OrganizationGetSupportEmailResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationGetSupportEmailResponseDefaultTypeInternal _OrganizationGetSupportEmailResponse_default_instance_;
PROTOBUF_CONSTEXPR OrganizationIdentity::OrganizationIdentity(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct OrganizationIdentityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationIdentityDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationIdentityDefaultTypeInternal() {}
  union {
    OrganizationIdentity _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationIdentityDefaultTypeInternal _OrganizationIdentity_default_instance_;
PROTOBUF_CONSTEXPR LocationOrganization::LocationOrganization(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , primary_(false){}
struct LocationOrganizationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationOrganizationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationOrganizationDefaultTypeInternal() {}
  union {
    LocationOrganization _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationOrganizationDefaultTypeInternal _LocationOrganization_default_instance_;
PROTOBUF_CONSTEXPR LocationAuth::LocationAuth(
    ::_pbi::ConstantInitialized)
  : secrets_()
  , secret_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct LocationAuthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationAuthDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationAuthDefaultTypeInternal() {}
  union {
    LocationAuth _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationAuthDefaultTypeInternal _LocationAuth_default_instance_;
PROTOBUF_CONSTEXPR StorageConfig::StorageConfig(
    ::_pbi::ConstantInitialized)
  : region_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct StorageConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageConfigDefaultTypeInternal() {}
  union {
    StorageConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageConfigDefaultTypeInternal _StorageConfig_default_instance_;
PROTOBUF_CONSTEXPR Location::Location(
    ::_pbi::ConstantInitialized)
  : organizations_()
  , id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , parent_location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_on_(nullptr)
  , auth_(nullptr)
  , config_(nullptr)
  , robot_count_(0){}
struct LocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationDefaultTypeInternal() {}
  union {
    Location _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationDefaultTypeInternal _Location_default_instance_;
PROTOBUF_CONSTEXPR SharedSecret::SharedSecret(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , secret_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_on_(nullptr)
  , state_(0)
{}
struct SharedSecretDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SharedSecretDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SharedSecretDefaultTypeInternal() {}
  union {
    SharedSecret _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SharedSecretDefaultTypeInternal _SharedSecret_default_instance_;
PROTOBUF_CONSTEXPR CreateLocationRequest::CreateLocationRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , parent_location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLocationRequestDefaultTypeInternal() {}
  union {
    CreateLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLocationRequestDefaultTypeInternal _CreateLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateLocationResponse::CreateLocationResponse(
    ::_pbi::ConstantInitialized)
  : location_(nullptr){}
struct CreateLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLocationResponseDefaultTypeInternal() {}
  union {
    CreateLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLocationResponseDefaultTypeInternal _CreateLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR GetLocationRequest::GetLocationRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLocationRequestDefaultTypeInternal() {}
  union {
    GetLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR GetLocationResponse::GetLocationResponse(
    ::_pbi::ConstantInitialized)
  : location_(nullptr){}
struct GetLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLocationResponseDefaultTypeInternal() {}
  union {
    GetLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateLocationRequest::UpdateLocationRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , parent_location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , region_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UpdateLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateLocationRequestDefaultTypeInternal() {}
  union {
    UpdateLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateLocationRequestDefaultTypeInternal _UpdateLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateLocationResponse::UpdateLocationResponse(
    ::_pbi::ConstantInitialized)
  : location_(nullptr){}
struct UpdateLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateLocationResponseDefaultTypeInternal() {}
  union {
    UpdateLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateLocationResponseDefaultTypeInternal _UpdateLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteLocationRequest::DeleteLocationRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteLocationRequestDefaultTypeInternal() {}
  union {
    DeleteLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteLocationRequestDefaultTypeInternal _DeleteLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteLocationResponse::DeleteLocationResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteLocationResponseDefaultTypeInternal() {}
  union {
    DeleteLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteLocationResponseDefaultTypeInternal _DeleteLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR GetOrganizationsWithAccessToLocationRequest::GetOrganizationsWithAccessToLocationRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetOrganizationsWithAccessToLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrganizationsWithAccessToLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrganizationsWithAccessToLocationRequestDefaultTypeInternal() {}
  union {
    GetOrganizationsWithAccessToLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrganizationsWithAccessToLocationRequestDefaultTypeInternal _GetOrganizationsWithAccessToLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR GetOrganizationsWithAccessToLocationResponse::GetOrganizationsWithAccessToLocationResponse(
    ::_pbi::ConstantInitialized)
  : organization_identities_(){}
struct GetOrganizationsWithAccessToLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrganizationsWithAccessToLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrganizationsWithAccessToLocationResponseDefaultTypeInternal() {}
  union {
    GetOrganizationsWithAccessToLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrganizationsWithAccessToLocationResponseDefaultTypeInternal _GetOrganizationsWithAccessToLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR ListLocationsRequest::ListLocationsRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListLocationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListLocationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListLocationsRequestDefaultTypeInternal() {}
  union {
    ListLocationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListLocationsRequestDefaultTypeInternal _ListLocationsRequest_default_instance_;
PROTOBUF_CONSTEXPR ShareLocationRequest::ShareLocationRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ShareLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareLocationRequestDefaultTypeInternal() {}
  union {
    ShareLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareLocationRequestDefaultTypeInternal _ShareLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR ShareLocationResponse::ShareLocationResponse(
    ::_pbi::ConstantInitialized){}
struct ShareLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareLocationResponseDefaultTypeInternal() {}
  union {
    ShareLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareLocationResponseDefaultTypeInternal _ShareLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR UnshareLocationRequest::UnshareLocationRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UnshareLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnshareLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnshareLocationRequestDefaultTypeInternal() {}
  union {
    UnshareLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnshareLocationRequestDefaultTypeInternal _UnshareLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR UnshareLocationResponse::UnshareLocationResponse(
    ::_pbi::ConstantInitialized){}
struct UnshareLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnshareLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnshareLocationResponseDefaultTypeInternal() {}
  union {
    UnshareLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnshareLocationResponseDefaultTypeInternal _UnshareLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR ListLocationsResponse::ListLocationsResponse(
    ::_pbi::ConstantInitialized)
  : locations_(){}
struct ListLocationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListLocationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListLocationsResponseDefaultTypeInternal() {}
  union {
    ListLocationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListLocationsResponseDefaultTypeInternal _ListLocationsResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateLocationSecretRequest::CreateLocationSecretRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateLocationSecretRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLocationSecretRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLocationSecretRequestDefaultTypeInternal() {}
  union {
    CreateLocationSecretRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLocationSecretRequestDefaultTypeInternal _CreateLocationSecretRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateLocationSecretResponse::CreateLocationSecretResponse(
    ::_pbi::ConstantInitialized)
  : auth_(nullptr){}
struct CreateLocationSecretResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLocationSecretResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLocationSecretResponseDefaultTypeInternal() {}
  union {
    CreateLocationSecretResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLocationSecretResponseDefaultTypeInternal _CreateLocationSecretResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteLocationSecretRequest::DeleteLocationSecretRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , secret_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteLocationSecretRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteLocationSecretRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteLocationSecretRequestDefaultTypeInternal() {}
  union {
    DeleteLocationSecretRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteLocationSecretRequestDefaultTypeInternal _DeleteLocationSecretRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteLocationSecretResponse::DeleteLocationSecretResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteLocationSecretResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteLocationSecretResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteLocationSecretResponseDefaultTypeInternal() {}
  union {
    DeleteLocationSecretResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteLocationSecretResponseDefaultTypeInternal _DeleteLocationSecretResponse_default_instance_;
PROTOBUF_CONSTEXPR LocationAuthRequest::LocationAuthRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct LocationAuthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationAuthRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationAuthRequestDefaultTypeInternal() {}
  union {
    LocationAuthRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationAuthRequestDefaultTypeInternal _LocationAuthRequest_default_instance_;
PROTOBUF_CONSTEXPR LocationAuthResponse::LocationAuthResponse(
    ::_pbi::ConstantInitialized)
  : auth_(nullptr){}
struct LocationAuthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationAuthResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationAuthResponseDefaultTypeInternal() {}
  union {
    LocationAuthResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationAuthResponseDefaultTypeInternal _LocationAuthResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotRequest::GetRobotRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotRequestDefaultTypeInternal() {}
  union {
    GetRobotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotRequestDefaultTypeInternal _GetRobotRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRoverRentalRobotsRequest::GetRoverRentalRobotsRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRoverRentalRobotsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoverRentalRobotsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoverRentalRobotsRequestDefaultTypeInternal() {}
  union {
    GetRoverRentalRobotsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoverRentalRobotsRequestDefaultTypeInternal _GetRoverRentalRobotsRequest_default_instance_;
PROTOBUF_CONSTEXPR RoverRentalRobot::RoverRentalRobot(
    ::_pbi::ConstantInitialized)
  : robot_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_main_part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct RoverRentalRobotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoverRentalRobotDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoverRentalRobotDefaultTypeInternal() {}
  union {
    RoverRentalRobot _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoverRentalRobotDefaultTypeInternal _RoverRentalRobot_default_instance_;
PROTOBUF_CONSTEXPR GetRoverRentalRobotsResponse::GetRoverRentalRobotsResponse(
    ::_pbi::ConstantInitialized)
  : robots_(){}
struct GetRoverRentalRobotsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRoverRentalRobotsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRoverRentalRobotsResponseDefaultTypeInternal() {}
  union {
    GetRoverRentalRobotsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRoverRentalRobotsResponseDefaultTypeInternal _GetRoverRentalRobotsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotResponse::GetRobotResponse(
    ::_pbi::ConstantInitialized)
  : robot_(nullptr){}
struct GetRobotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotResponseDefaultTypeInternal() {}
  union {
    GetRobotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotResponseDefaultTypeInternal _GetRobotResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartsRequest::GetRobotPartsRequest(
    ::_pbi::ConstantInitialized)
  : robot_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotPartsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartsRequestDefaultTypeInternal() {}
  union {
    GetRobotPartsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartsRequestDefaultTypeInternal _GetRobotPartsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartsResponse::GetRobotPartsResponse(
    ::_pbi::ConstantInitialized)
  : parts_(){}
struct GetRobotPartsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartsResponseDefaultTypeInternal() {}
  union {
    GetRobotPartsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartsResponseDefaultTypeInternal _GetRobotPartsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartRequest::GetRobotPartRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotPartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartRequestDefaultTypeInternal() {}
  union {
    GetRobotPartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartRequestDefaultTypeInternal _GetRobotPartRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartResponse::GetRobotPartResponse(
    ::_pbi::ConstantInitialized)
  : config_json_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , part_(nullptr){}
struct GetRobotPartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartResponseDefaultTypeInternal() {}
  union {
    GetRobotPartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartResponseDefaultTypeInternal _GetRobotPartResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartLogsRequest::GetRobotPartLogsRequest(
    ::_pbi::ConstantInitialized)
  : levels_()
  , id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , filter_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , page_token_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , source_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , start_(nullptr)
  , end_(nullptr)
  , limit_(int64_t{0})
  , errors_only_(false){}
struct GetRobotPartLogsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartLogsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartLogsRequestDefaultTypeInternal() {}
  union {
    GetRobotPartLogsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartLogsRequestDefaultTypeInternal _GetRobotPartLogsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartLogsResponse::GetRobotPartLogsResponse(
    ::_pbi::ConstantInitialized)
  : logs_()
  , next_page_token_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotPartLogsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartLogsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartLogsResponseDefaultTypeInternal() {}
  union {
    GetRobotPartLogsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartLogsResponseDefaultTypeInternal _GetRobotPartLogsResponse_default_instance_;
PROTOBUF_CONSTEXPR TailRobotPartLogsRequest::TailRobotPartLogsRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , filter_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , errors_only_(false){}
struct TailRobotPartLogsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TailRobotPartLogsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TailRobotPartLogsRequestDefaultTypeInternal() {}
  union {
    TailRobotPartLogsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TailRobotPartLogsRequestDefaultTypeInternal _TailRobotPartLogsRequest_default_instance_;
PROTOBUF_CONSTEXPR TailRobotPartLogsResponse::TailRobotPartLogsResponse(
    ::_pbi::ConstantInitialized)
  : logs_(){}
struct TailRobotPartLogsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TailRobotPartLogsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TailRobotPartLogsResponseDefaultTypeInternal() {}
  union {
    TailRobotPartLogsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TailRobotPartLogsResponseDefaultTypeInternal _TailRobotPartLogsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartHistoryRequest::GetRobotPartHistoryRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotPartHistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartHistoryRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartHistoryRequestDefaultTypeInternal() {}
  union {
    GetRobotPartHistoryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartHistoryRequestDefaultTypeInternal _GetRobotPartHistoryRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartHistoryResponse::GetRobotPartHistoryResponse(
    ::_pbi::ConstantInitialized)
  : history_(){}
struct GetRobotPartHistoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartHistoryResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartHistoryResponseDefaultTypeInternal() {}
  union {
    GetRobotPartHistoryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartHistoryResponseDefaultTypeInternal _GetRobotPartHistoryResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateRobotPartRequest::UpdateRobotPartRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_config_(nullptr){}
struct UpdateRobotPartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRobotPartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRobotPartRequestDefaultTypeInternal() {}
  union {
    UpdateRobotPartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRobotPartRequestDefaultTypeInternal _UpdateRobotPartRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateRobotPartResponse::UpdateRobotPartResponse(
    ::_pbi::ConstantInitialized)
  : part_(nullptr){}
struct UpdateRobotPartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRobotPartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRobotPartResponseDefaultTypeInternal() {}
  union {
    UpdateRobotPartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRobotPartResponseDefaultTypeInternal _UpdateRobotPartResponse_default_instance_;
PROTOBUF_CONSTEXPR NewRobotPartRequest::NewRobotPartRequest(
    ::_pbi::ConstantInitialized)
  : robot_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , part_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct NewRobotPartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewRobotPartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewRobotPartRequestDefaultTypeInternal() {}
  union {
    NewRobotPartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewRobotPartRequestDefaultTypeInternal _NewRobotPartRequest_default_instance_;
PROTOBUF_CONSTEXPR NewRobotPartResponse::NewRobotPartResponse(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct NewRobotPartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewRobotPartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewRobotPartResponseDefaultTypeInternal() {}
  union {
    NewRobotPartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewRobotPartResponseDefaultTypeInternal _NewRobotPartResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotPartRequest::DeleteRobotPartRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteRobotPartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotPartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotPartRequestDefaultTypeInternal() {}
  union {
    DeleteRobotPartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotPartRequestDefaultTypeInternal _DeleteRobotPartRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRobotAPIKeysRequest::GetRobotAPIKeysRequest(
    ::_pbi::ConstantInitialized)
  : robot_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotAPIKeysRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotAPIKeysRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotAPIKeysRequestDefaultTypeInternal() {}
  union {
    GetRobotAPIKeysRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotAPIKeysRequestDefaultTypeInternal _GetRobotAPIKeysRequest_default_instance_;
PROTOBUF_CONSTEXPR APIKey::APIKey(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , key_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_on_(nullptr){}
struct APIKeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR APIKeyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~APIKeyDefaultTypeInternal() {}
  union {
    APIKey _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 APIKeyDefaultTypeInternal _APIKey_default_instance_;
PROTOBUF_CONSTEXPR GetRobotAPIKeysResponse::GetRobotAPIKeysResponse(
    ::_pbi::ConstantInitialized)
  : api_keys_(){}
struct GetRobotAPIKeysResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotAPIKeysResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotAPIKeysResponseDefaultTypeInternal() {}
  union {
    GetRobotAPIKeysResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotAPIKeysResponseDefaultTypeInternal _GetRobotAPIKeysResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotPartResponse::DeleteRobotPartResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteRobotPartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotPartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotPartResponseDefaultTypeInternal() {}
  union {
    DeleteRobotPartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotPartResponseDefaultTypeInternal _DeleteRobotPartResponse_default_instance_;
PROTOBUF_CONSTEXPR Fragment::Fragment(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_owner_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , fragment_(nullptr)
  , created_on_(nullptr)
  , last_updated_(nullptr)
  , public__(false)
  , only_used_by_owner_(false)
  , robot_part_count_(0)
  , organization_count_(0)
  , visibility_(0)
{}
struct FragmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FragmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FragmentDefaultTypeInternal() {}
  union {
    Fragment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FragmentDefaultTypeInternal _Fragment_default_instance_;
PROTOBUF_CONSTEXPR FragmentHistoryEntry::FragmentHistoryEntry(
    ::_pbi::ConstantInitialized)
  : fragment_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , revision_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , edited_on_(nullptr)
  , old_(nullptr)
  , edited_by_(nullptr)
  , config_(nullptr){}
struct FragmentHistoryEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FragmentHistoryEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FragmentHistoryEntryDefaultTypeInternal() {}
  union {
    FragmentHistoryEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FragmentHistoryEntryDefaultTypeInternal _FragmentHistoryEntry_default_instance_;
PROTOBUF_CONSTEXPR FragmentError::FragmentError(
    ::_pbi::ConstantInitialized)
  : fragment_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , detail_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , error_type_(0)
{}
struct FragmentErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FragmentErrorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FragmentErrorDefaultTypeInternal() {}
  union {
    FragmentError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FragmentErrorDefaultTypeInternal _FragmentError_default_instance_;
PROTOBUF_CONSTEXPR FragmentUsage::FragmentUsage(
    ::_pbi::ConstantInitialized)
  : fragment_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organizations_(0)
  , machines_(0)
  , machines_in_current_org_(0){}
struct FragmentUsageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FragmentUsageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FragmentUsageDefaultTypeInternal() {}
  union {
    FragmentUsage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FragmentUsageDefaultTypeInternal _FragmentUsage_default_instance_;
PROTOBUF_CONSTEXPR ResolvedFragment::ResolvedFragment(
    ::_pbi::ConstantInitialized)
  : fragment_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , resolved_config_(nullptr)
  , error_(nullptr){}
struct ResolvedFragmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResolvedFragmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResolvedFragmentDefaultTypeInternal() {}
  union {
    ResolvedFragment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResolvedFragmentDefaultTypeInternal _ResolvedFragment_default_instance_;
PROTOBUF_CONSTEXPR ListFragmentsRequest::ListFragmentsRequest(
    ::_pbi::ConstantInitialized)
  : fragment_visibility_()
  , _fragment_visibility_cached_byte_size_(0)
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , show_public_(false){}
struct ListFragmentsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListFragmentsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListFragmentsRequestDefaultTypeInternal() {}
  union {
    ListFragmentsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListFragmentsRequestDefaultTypeInternal _ListFragmentsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListFragmentsResponse::ListFragmentsResponse(
    ::_pbi::ConstantInitialized)
  : fragments_()
  , fragment_usages_(){}
struct ListFragmentsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListFragmentsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListFragmentsResponseDefaultTypeInternal() {}
  union {
    ListFragmentsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListFragmentsResponseDefaultTypeInternal _ListFragmentsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetFragmentRequest::GetFragmentRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , current_organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetFragmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFragmentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFragmentRequestDefaultTypeInternal() {}
  union {
    GetFragmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFragmentRequestDefaultTypeInternal _GetFragmentRequest_default_instance_;
PROTOBUF_CONSTEXPR GetFragmentResponse::GetFragmentResponse(
    ::_pbi::ConstantInitialized)
  : fragment_(nullptr)
  , fragment_usage_(nullptr){}
struct GetFragmentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFragmentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFragmentResponseDefaultTypeInternal() {}
  union {
    GetFragmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFragmentResponseDefaultTypeInternal _GetFragmentResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateFragmentRequest::CreateFragmentRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , config_(nullptr)
  , visibility_(0)
{}
struct CreateFragmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateFragmentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateFragmentRequestDefaultTypeInternal() {}
  union {
    CreateFragmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateFragmentRequestDefaultTypeInternal _CreateFragmentRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateFragmentResponse::CreateFragmentResponse(
    ::_pbi::ConstantInitialized)
  : fragment_(nullptr){}
struct CreateFragmentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateFragmentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateFragmentResponseDefaultTypeInternal() {}
  union {
    CreateFragmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateFragmentResponseDefaultTypeInternal _CreateFragmentResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateFragmentRequest::UpdateFragmentRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , config_(nullptr)
  , public__(false)
  , visibility_(0)
{}
struct UpdateFragmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateFragmentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateFragmentRequestDefaultTypeInternal() {}
  union {
    UpdateFragmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateFragmentRequestDefaultTypeInternal _UpdateFragmentRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateFragmentResponse::UpdateFragmentResponse(
    ::_pbi::ConstantInitialized)
  : fragment_(nullptr){}
struct UpdateFragmentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateFragmentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateFragmentResponseDefaultTypeInternal() {}
  union {
    UpdateFragmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateFragmentResponseDefaultTypeInternal _UpdateFragmentResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteFragmentRequest::DeleteFragmentRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteFragmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteFragmentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteFragmentRequestDefaultTypeInternal() {}
  union {
    DeleteFragmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteFragmentRequestDefaultTypeInternal _DeleteFragmentRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteFragmentResponse::DeleteFragmentResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteFragmentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteFragmentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteFragmentResponseDefaultTypeInternal() {}
  union {
    DeleteFragmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteFragmentResponseDefaultTypeInternal _DeleteFragmentResponse_default_instance_;
PROTOBUF_CONSTEXPR GetFragmentHistoryRequest::GetFragmentHistoryRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , page_token_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , page_limit_(int64_t{0}){}
struct GetFragmentHistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFragmentHistoryRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFragmentHistoryRequestDefaultTypeInternal() {}
  union {
    GetFragmentHistoryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFragmentHistoryRequestDefaultTypeInternal _GetFragmentHistoryRequest_default_instance_;
PROTOBUF_CONSTEXPR GetFragmentHistoryResponse::GetFragmentHistoryResponse(
    ::_pbi::ConstantInitialized)
  : history_()
  , next_page_token_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetFragmentHistoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFragmentHistoryResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFragmentHistoryResponseDefaultTypeInternal() {}
  union {
    GetFragmentHistoryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFragmentHistoryResponseDefaultTypeInternal _GetFragmentHistoryResponse_default_instance_;
PROTOBUF_CONSTEXPR ListRobotsRequest::ListRobotsRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListRobotsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListRobotsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListRobotsRequestDefaultTypeInternal() {}
  union {
    ListRobotsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListRobotsRequestDefaultTypeInternal _ListRobotsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListMachineFragmentsRequest::ListMachineFragmentsRequest(
    ::_pbi::ConstantInitialized)
  : additional_fragment_ids_()
  , machine_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListMachineFragmentsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListMachineFragmentsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListMachineFragmentsRequestDefaultTypeInternal() {}
  union {
    ListMachineFragmentsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListMachineFragmentsRequestDefaultTypeInternal _ListMachineFragmentsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListMachineFragmentsResponse::ListMachineFragmentsResponse(
    ::_pbi::ConstantInitialized)
  : fragments_()
  , resolved_fragments_(){}
struct ListMachineFragmentsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListMachineFragmentsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListMachineFragmentsResponseDefaultTypeInternal() {}
  union {
    ListMachineFragmentsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListMachineFragmentsResponseDefaultTypeInternal _ListMachineFragmentsResponse_default_instance_;
PROTOBUF_CONSTEXPR ListRobotsResponse::ListRobotsResponse(
    ::_pbi::ConstantInitialized)
  : robots_(){}
struct ListRobotsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListRobotsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListRobotsResponseDefaultTypeInternal() {}
  union {
    ListRobotsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListRobotsResponseDefaultTypeInternal _ListRobotsResponse_default_instance_;
PROTOBUF_CONSTEXPR NewRobotRequest::NewRobotRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct NewRobotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewRobotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewRobotRequestDefaultTypeInternal() {}
  union {
    NewRobotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewRobotRequestDefaultTypeInternal _NewRobotRequest_default_instance_;
PROTOBUF_CONSTEXPR NewRobotResponse::NewRobotResponse(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct NewRobotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewRobotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewRobotResponseDefaultTypeInternal() {}
  union {
    NewRobotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewRobotResponseDefaultTypeInternal _NewRobotResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateRobotRequest::UpdateRobotRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UpdateRobotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRobotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRobotRequestDefaultTypeInternal() {}
  union {
    UpdateRobotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRobotRequestDefaultTypeInternal _UpdateRobotRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateRobotResponse::UpdateRobotResponse(
    ::_pbi::ConstantInitialized)
  : robot_(nullptr){}
struct UpdateRobotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRobotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRobotResponseDefaultTypeInternal() {}
  union {
    UpdateRobotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRobotResponseDefaultTypeInternal _UpdateRobotResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotRequest::DeleteRobotRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteRobotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotRequestDefaultTypeInternal() {}
  union {
    DeleteRobotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotRequestDefaultTypeInternal _DeleteRobotRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotResponse::DeleteRobotResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteRobotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotResponseDefaultTypeInternal() {}
  union {
    DeleteRobotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotResponseDefaultTypeInternal _DeleteRobotResponse_default_instance_;
PROTOBUF_CONSTEXPR MarkPartAsMainRequest::MarkPartAsMainRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct MarkPartAsMainRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkPartAsMainRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkPartAsMainRequestDefaultTypeInternal() {}
  union {
    MarkPartAsMainRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkPartAsMainRequestDefaultTypeInternal _MarkPartAsMainRequest_default_instance_;
PROTOBUF_CONSTEXPR MarkPartAsMainResponse::MarkPartAsMainResponse(
    ::_pbi::ConstantInitialized){}
struct MarkPartAsMainResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkPartAsMainResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkPartAsMainResponseDefaultTypeInternal() {}
  union {
    MarkPartAsMainResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkPartAsMainResponseDefaultTypeInternal _MarkPartAsMainResponse_default_instance_;
PROTOBUF_CONSTEXPR MarkPartForRestartRequest::MarkPartForRestartRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct MarkPartForRestartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkPartForRestartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkPartForRestartRequestDefaultTypeInternal() {}
  union {
    MarkPartForRestartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkPartForRestartRequestDefaultTypeInternal _MarkPartForRestartRequest_default_instance_;
PROTOBUF_CONSTEXPR MarkPartForRestartResponse::MarkPartForRestartResponse(
    ::_pbi::ConstantInitialized){}
struct MarkPartForRestartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkPartForRestartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkPartForRestartResponseDefaultTypeInternal() {}
  union {
    MarkPartForRestartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkPartForRestartResponseDefaultTypeInternal _MarkPartForRestartResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateRobotPartSecretRequest::CreateRobotPartSecretRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateRobotPartSecretRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateRobotPartSecretRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateRobotPartSecretRequestDefaultTypeInternal() {}
  union {
    CreateRobotPartSecretRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateRobotPartSecretRequestDefaultTypeInternal _CreateRobotPartSecretRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateRobotPartSecretResponse::CreateRobotPartSecretResponse(
    ::_pbi::ConstantInitialized)
  : part_(nullptr){}
struct CreateRobotPartSecretResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateRobotPartSecretResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateRobotPartSecretResponseDefaultTypeInternal() {}
  union {
    CreateRobotPartSecretResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateRobotPartSecretResponseDefaultTypeInternal _CreateRobotPartSecretResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotPartSecretRequest::DeleteRobotPartSecretRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , secret_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteRobotPartSecretRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotPartSecretRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotPartSecretRequestDefaultTypeInternal() {}
  union {
    DeleteRobotPartSecretRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotPartSecretRequestDefaultTypeInternal _DeleteRobotPartSecretRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotPartSecretResponse::DeleteRobotPartSecretResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteRobotPartSecretResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotPartSecretResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotPartSecretResponseDefaultTypeInternal() {}
  union {
    DeleteRobotPartSecretResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotPartSecretResponseDefaultTypeInternal _DeleteRobotPartSecretResponse_default_instance_;
PROTOBUF_CONSTEXPR Authorization::Authorization(
    ::_pbi::ConstantInitialized)
  : authorization_type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , authorization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , resource_type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , resource_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , identity_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , identity_type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct AuthorizationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthorizationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthorizationDefaultTypeInternal() {}
  union {
    Authorization _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthorizationDefaultTypeInternal _Authorization_default_instance_;
PROTOBUF_CONSTEXPR AddRoleRequest::AddRoleRequest(
    ::_pbi::ConstantInitialized)
  : authorization_(nullptr){}
struct AddRoleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddRoleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddRoleRequestDefaultTypeInternal() {}
  union {
    AddRoleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddRoleRequestDefaultTypeInternal _AddRoleRequest_default_instance_;
PROTOBUF_CONSTEXPR AddRoleResponse::AddRoleResponse(
    ::_pbi::ConstantInitialized){}
struct AddRoleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddRoleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddRoleResponseDefaultTypeInternal() {}
  union {
    AddRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddRoleResponseDefaultTypeInternal _AddRoleResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveRoleRequest::RemoveRoleRequest(
    ::_pbi::ConstantInitialized)
  : authorization_(nullptr){}
struct RemoveRoleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveRoleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveRoleRequestDefaultTypeInternal() {}
  union {
    RemoveRoleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveRoleRequestDefaultTypeInternal _RemoveRoleRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveRoleResponse::RemoveRoleResponse(
    ::_pbi::ConstantInitialized){}
struct RemoveRoleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveRoleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveRoleResponseDefaultTypeInternal() {}
  union {
    RemoveRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveRoleResponseDefaultTypeInternal _RemoveRoleResponse_default_instance_;
PROTOBUF_CONSTEXPR ChangeRoleRequest::ChangeRoleRequest(
    ::_pbi::ConstantInitialized)
  : old_authorization_(nullptr)
  , new_authorization_(nullptr){}
struct ChangeRoleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangeRoleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangeRoleRequestDefaultTypeInternal() {}
  union {
    ChangeRoleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangeRoleRequestDefaultTypeInternal _ChangeRoleRequest_default_instance_;
PROTOBUF_CONSTEXPR ChangeRoleResponse::ChangeRoleResponse(
    ::_pbi::ConstantInitialized){}
struct ChangeRoleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangeRoleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangeRoleResponseDefaultTypeInternal() {}
  union {
    ChangeRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangeRoleResponseDefaultTypeInternal _ChangeRoleResponse_default_instance_;
PROTOBUF_CONSTEXPR ListAuthorizationsRequest::ListAuthorizationsRequest(
    ::_pbi::ConstantInitialized)
  : resource_ids_()
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListAuthorizationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListAuthorizationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListAuthorizationsRequestDefaultTypeInternal() {}
  union {
    ListAuthorizationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListAuthorizationsRequestDefaultTypeInternal _ListAuthorizationsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListAuthorizationsResponse::ListAuthorizationsResponse(
    ::_pbi::ConstantInitialized)
  : authorizations_(){}
struct ListAuthorizationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListAuthorizationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListAuthorizationsResponseDefaultTypeInternal() {}
  union {
    ListAuthorizationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListAuthorizationsResponseDefaultTypeInternal _ListAuthorizationsResponse_default_instance_;
PROTOBUF_CONSTEXPR CheckPermissionsRequest::CheckPermissionsRequest(
    ::_pbi::ConstantInitialized)
  : permissions_(){}
struct CheckPermissionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckPermissionsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckPermissionsRequestDefaultTypeInternal() {}
  union {
    CheckPermissionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckPermissionsRequestDefaultTypeInternal _CheckPermissionsRequest_default_instance_;
PROTOBUF_CONSTEXPR AuthorizedPermissions::AuthorizedPermissions(
    ::_pbi::ConstantInitialized)
  : permissions_()
  , resource_type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , resource_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct AuthorizedPermissionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthorizedPermissionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthorizedPermissionsDefaultTypeInternal() {}
  union {
    AuthorizedPermissions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthorizedPermissionsDefaultTypeInternal _AuthorizedPermissions_default_instance_;
PROTOBUF_CONSTEXPR CheckPermissionsResponse::CheckPermissionsResponse(
    ::_pbi::ConstantInitialized)
  : authorized_permissions_(){}
struct CheckPermissionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckPermissionsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckPermissionsResponseDefaultTypeInternal() {}
  union {
    CheckPermissionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckPermissionsResponseDefaultTypeInternal _CheckPermissionsResponse_default_instance_;
PROTOBUF_CONSTEXPR ModuleVersion::ModuleVersion(
    ::_pbi::ConstantInitialized)
  : files_()
  , models_()
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , entrypoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , first_run_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModuleVersionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleVersionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleVersionDefaultTypeInternal() {}
  union {
    ModuleVersion _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleVersionDefaultTypeInternal _ModuleVersion_default_instance_;
PROTOBUF_CONSTEXPR ModuleMetadata::ModuleMetadata(
    ::_pbi::ConstantInitialized)
  : models_()
  , versions_()
  , entrypoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , first_run_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModuleMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleMetadataDefaultTypeInternal() {}
  union {
    ModuleMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleMetadataDefaultTypeInternal _ModuleMetadata_default_instance_;
PROTOBUF_CONSTEXPR MLModelMetadata::MLModelMetadata(
    ::_pbi::ConstantInitialized)
  : versions_()
  , model_type_(0)

  , model_framework_(0)
{}
struct MLModelMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MLModelMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MLModelMetadataDefaultTypeInternal() {}
  union {
    MLModelMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MLModelMetadataDefaultTypeInternal _MLModelMetadata_default_instance_;
PROTOBUF_CONSTEXPR MLTrainingVersion::MLTrainingVersion(
    ::_pbi::ConstantInitialized)
  : version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_on_(nullptr){}
struct MLTrainingVersionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MLTrainingVersionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MLTrainingVersionDefaultTypeInternal() {}
  union {
    MLTrainingVersion _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MLTrainingVersionDefaultTypeInternal _MLTrainingVersion_default_instance_;
PROTOBUF_CONSTEXPR MLTrainingMetadata::MLTrainingMetadata(
    ::_pbi::ConstantInitialized)
  : versions_()
  , model_type_(0)

  , model_framework_(0)

  , draft_(false){}
struct MLTrainingMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MLTrainingMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MLTrainingMetadataDefaultTypeInternal() {}
  union {
    MLTrainingMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MLTrainingMetadataDefaultTypeInternal _MLTrainingMetadata_default_instance_;
PROTOBUF_CONSTEXPR RegistryItem::RegistryItem(
    ::_pbi::ConstantInitialized)
  : item_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , public_namespace_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_at_(nullptr)
  , updated_at_(nullptr)
  , type_(0)

  , visibility_(0)

  , total_robot_usage_(int64_t{0})
  , total_organization_usage_(int64_t{0})
  , total_external_robot_usage_(int64_t{0})
  , total_external_organization_usage_(int64_t{0})
  , _oneof_case_{}{}
struct RegistryItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegistryItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegistryItemDefaultTypeInternal() {}
  union {
    RegistryItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegistryItemDefaultTypeInternal _RegistryItem_default_instance_;
PROTOBUF_CONSTEXPR GetRegistryItemRequest::GetRegistryItemRequest(
    ::_pbi::ConstantInitialized)
  : item_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , include_markdown_documentation_(false){}
struct GetRegistryItemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRegistryItemRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRegistryItemRequestDefaultTypeInternal() {}
  union {
    GetRegistryItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRegistryItemRequestDefaultTypeInternal _GetRegistryItemRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRegistryItemResponse::GetRegistryItemResponse(
    ::_pbi::ConstantInitialized)
  : item_(nullptr){}
struct GetRegistryItemResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRegistryItemResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRegistryItemResponseDefaultTypeInternal() {}
  union {
    GetRegistryItemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRegistryItemResponseDefaultTypeInternal _GetRegistryItemResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateRegistryItemRequest::CreateRegistryItemRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , type_(0)
{}
struct CreateRegistryItemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateRegistryItemRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateRegistryItemRequestDefaultTypeInternal() {}
  union {
    CreateRegistryItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateRegistryItemRequestDefaultTypeInternal _CreateRegistryItemRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateRegistryItemResponse::CreateRegistryItemResponse(
    ::_pbi::ConstantInitialized){}
struct CreateRegistryItemResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateRegistryItemResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateRegistryItemResponseDefaultTypeInternal() {}
  union {
    CreateRegistryItemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateRegistryItemResponseDefaultTypeInternal _CreateRegistryItemResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateRegistryItemRequest::UpdateRegistryItemRequest(
    ::_pbi::ConstantInitialized)
  : item_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , type_(0)

  , visibility_(0)

  , _oneof_case_{}{}
struct UpdateRegistryItemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRegistryItemRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRegistryItemRequestDefaultTypeInternal() {}
  union {
    UpdateRegistryItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRegistryItemRequestDefaultTypeInternal _UpdateRegistryItemRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateRegistryItemResponse::UpdateRegistryItemResponse(
    ::_pbi::ConstantInitialized){}
struct UpdateRegistryItemResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRegistryItemResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRegistryItemResponseDefaultTypeInternal() {}
  union {
    UpdateRegistryItemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRegistryItemResponseDefaultTypeInternal _UpdateRegistryItemResponse_default_instance_;
PROTOBUF_CONSTEXPR ListRegistryItemsRequest::ListRegistryItemsRequest(
    ::_pbi::ConstantInitialized)
  : types_()
  , _types_cached_byte_size_(0)
  , visibilities_()
  , _visibilities_cached_byte_size_(0)
  , platforms_()
  , statuses_()
  , _statuses_cached_byte_size_(0)
  , public_namespaces_()
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , search_term_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , page_token_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , include_markdown_documentation_(false){}
struct ListRegistryItemsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListRegistryItemsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListRegistryItemsRequestDefaultTypeInternal() {}
  union {
    ListRegistryItemsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListRegistryItemsRequestDefaultTypeInternal _ListRegistryItemsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListRegistryItemsResponse::ListRegistryItemsResponse(
    ::_pbi::ConstantInitialized)
  : items_(){}
struct ListRegistryItemsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListRegistryItemsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListRegistryItemsResponseDefaultTypeInternal() {}
  union {
    ListRegistryItemsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListRegistryItemsResponseDefaultTypeInternal _ListRegistryItemsResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteRegistryItemRequest::DeleteRegistryItemRequest(
    ::_pbi::ConstantInitialized)
  : item_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteRegistryItemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRegistryItemRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRegistryItemRequestDefaultTypeInternal() {}
  union {
    DeleteRegistryItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRegistryItemRequestDefaultTypeInternal _DeleteRegistryItemRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteRegistryItemResponse::DeleteRegistryItemResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteRegistryItemResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRegistryItemResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRegistryItemResponseDefaultTypeInternal() {}
  union {
    DeleteRegistryItemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRegistryItemResponseDefaultTypeInternal _DeleteRegistryItemResponse_default_instance_;
PROTOBUF_CONSTEXPR TransferRegistryItemRequest::TransferRegistryItemRequest(
    ::_pbi::ConstantInitialized)
  : item_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , new_public_namespace_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct TransferRegistryItemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransferRegistryItemRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransferRegistryItemRequestDefaultTypeInternal() {}
  union {
    TransferRegistryItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransferRegistryItemRequestDefaultTypeInternal _TransferRegistryItemRequest_default_instance_;
PROTOBUF_CONSTEXPR TransferRegistryItemResponse::TransferRegistryItemResponse(
    ::_pbi::ConstantInitialized){}
struct TransferRegistryItemResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransferRegistryItemResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransferRegistryItemResponseDefaultTypeInternal() {}
  union {
    TransferRegistryItemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransferRegistryItemResponseDefaultTypeInternal _TransferRegistryItemResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateModuleRequest::CreateModuleRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateModuleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateModuleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateModuleRequestDefaultTypeInternal() {}
  union {
    CreateModuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateModuleRequestDefaultTypeInternal _CreateModuleRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateModuleResponse::CreateModuleResponse(
    ::_pbi::ConstantInitialized)
  : module_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateModuleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateModuleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateModuleResponseDefaultTypeInternal() {}
  union {
    CreateModuleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateModuleResponseDefaultTypeInternal _CreateModuleResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateModuleRequest::UpdateModuleRequest(
    ::_pbi::ConstantInitialized)
  : models_()
  , module_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , entrypoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , first_run_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , visibility_(0)
{}
struct UpdateModuleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateModuleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateModuleRequestDefaultTypeInternal() {}
  union {
    UpdateModuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateModuleRequestDefaultTypeInternal _UpdateModuleRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateModuleResponse::UpdateModuleResponse(
    ::_pbi::ConstantInitialized)
  : url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UpdateModuleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateModuleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateModuleResponseDefaultTypeInternal() {}
  union {
    UpdateModuleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateModuleResponseDefaultTypeInternal _UpdateModuleResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateModuleMetadata::UpdateModuleMetadata(
    ::_pbi::ConstantInitialized)
  : models_()
  , entrypoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UpdateModuleMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateModuleMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateModuleMetadataDefaultTypeInternal() {}
  union {
    UpdateModuleMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateModuleMetadataDefaultTypeInternal _UpdateModuleMetadata_default_instance_;
PROTOBUF_CONSTEXPR UpdateMLModelMetadata::UpdateMLModelMetadata(
    ::_pbi::ConstantInitialized)
  : model_type_(0)

  , model_framework_(0)
{}
struct UpdateMLModelMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateMLModelMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateMLModelMetadataDefaultTypeInternal() {}
  union {
    UpdateMLModelMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateMLModelMetadataDefaultTypeInternal _UpdateMLModelMetadata_default_instance_;
PROTOBUF_CONSTEXPR UpdateMLTrainingMetadata::UpdateMLTrainingMetadata(
    ::_pbi::ConstantInitialized)
  : model_type_(0)

  , model_framework_(0)

  , draft_(false){}
struct UpdateMLTrainingMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateMLTrainingMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateMLTrainingMetadataDefaultTypeInternal() {}
  union {
    UpdateMLTrainingMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateMLTrainingMetadataDefaultTypeInternal _UpdateMLTrainingMetadata_default_instance_;
PROTOBUF_CONSTEXPR Model::Model(
    ::_pbi::ConstantInitialized)
  : api_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , model_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , markdown_documentation_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelDefaultTypeInternal() {}
  union {
    Model _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelDefaultTypeInternal _Model_default_instance_;
PROTOBUF_CONSTEXPR ModuleFileInfo::ModuleFileInfo(
    ::_pbi::ConstantInitialized)
  : platform_tags_()
  , module_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , platform_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ModuleFileInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleFileInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleFileInfoDefaultTypeInternal() {}
  union {
    ModuleFileInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleFileInfoDefaultTypeInternal _ModuleFileInfo_default_instance_;
PROTOBUF_CONSTEXPR UploadModuleFileRequest::UploadModuleFileRequest(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct UploadModuleFileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadModuleFileRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadModuleFileRequestDefaultTypeInternal() {}
  union {
    UploadModuleFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadModuleFileRequestDefaultTypeInternal _UploadModuleFileRequest_default_instance_;
PROTOBUF_CONSTEXPR UploadModuleFileResponse::UploadModuleFileResponse(
    ::_pbi::ConstantInitialized)
  : url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UploadModuleFileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadModuleFileResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadModuleFileResponseDefaultTypeInternal() {}
  union {
    UploadModuleFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadModuleFileResponseDefaultTypeInternal _UploadModuleFileResponse_default_instance_;
PROTOBUF_CONSTEXPR GetModuleRequest::GetModuleRequest(
    ::_pbi::ConstantInitialized)
  : module_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , include_markdown_documentation_(false){}
struct GetModuleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModuleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModuleRequestDefaultTypeInternal() {}
  union {
    GetModuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModuleRequestDefaultTypeInternal _GetModuleRequest_default_instance_;
PROTOBUF_CONSTEXPR GetModuleResponse::GetModuleResponse(
    ::_pbi::ConstantInitialized)
  : module_(nullptr){}
struct GetModuleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModuleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModuleResponseDefaultTypeInternal() {}
  union {
    GetModuleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModuleResponseDefaultTypeInternal _GetModuleResponse_default_instance_;
PROTOBUF_CONSTEXPR Module::Module(
    ::_pbi::ConstantInitialized)
  : versions_()
  , models_()
  , module_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , entrypoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , public_namespace_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , first_run_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , total_robot_usage_(int64_t{0})
  , total_organization_usage_(int64_t{0})
  , visibility_(0)
{}
struct ModuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleDefaultTypeInternal() {}
  union {
    Module _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleDefaultTypeInternal _Module_default_instance_;
PROTOBUF_CONSTEXPR VersionHistory::VersionHistory(
    ::_pbi::ConstantInitialized)
  : files_()
  , models_()
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , entrypoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , first_run_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct VersionHistoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionHistoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionHistoryDefaultTypeInternal() {}
  union {
    VersionHistory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionHistoryDefaultTypeInternal _VersionHistory_default_instance_;
PROTOBUF_CONSTEXPR Uploads::Uploads(
    ::_pbi::ConstantInitialized)
  : platform_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , uploaded_at_(nullptr){}
struct UploadsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadsDefaultTypeInternal() {}
  union {
    Uploads _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadsDefaultTypeInternal _Uploads_default_instance_;
PROTOBUF_CONSTEXPR ListModulesRequest::ListModulesRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , include_markdown_documentation_(false){}
struct ListModulesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListModulesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListModulesRequestDefaultTypeInternal() {}
  union {
    ListModulesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListModulesRequestDefaultTypeInternal _ListModulesRequest_default_instance_;
PROTOBUF_CONSTEXPR ListModulesResponse::ListModulesResponse(
    ::_pbi::ConstantInitialized)
  : modules_(){}
struct ListModulesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListModulesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListModulesResponseDefaultTypeInternal() {}
  union {
    ListModulesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListModulesResponseDefaultTypeInternal _ListModulesResponse_default_instance_;
PROTOBUF_CONSTEXPR GetUserIDByEmailRequest::GetUserIDByEmailRequest(
    ::_pbi::ConstantInitialized)
  : email_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetUserIDByEmailRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserIDByEmailRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserIDByEmailRequestDefaultTypeInternal() {}
  union {
    GetUserIDByEmailRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserIDByEmailRequestDefaultTypeInternal _GetUserIDByEmailRequest_default_instance_;
PROTOBUF_CONSTEXPR GetUserIDByEmailResponse::GetUserIDByEmailResponse(
    ::_pbi::ConstantInitialized)
  : user_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetUserIDByEmailResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserIDByEmailResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserIDByEmailResponseDefaultTypeInternal() {}
  union {
    GetUserIDByEmailResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserIDByEmailResponseDefaultTypeInternal _GetUserIDByEmailResponse_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationsByUserRequest::ListOrganizationsByUserRequest(
    ::_pbi::ConstantInitialized)
  : user_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListOrganizationsByUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationsByUserRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationsByUserRequestDefaultTypeInternal() {}
  union {
    ListOrganizationsByUserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationsByUserRequestDefaultTypeInternal _ListOrganizationsByUserRequest_default_instance_;
PROTOBUF_CONSTEXPR OrgDetails::OrgDetails(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , org_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , org_cid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , public_namespace_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct OrgDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrgDetailsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrgDetailsDefaultTypeInternal() {}
  union {
    OrgDetails _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrgDetailsDefaultTypeInternal _OrgDetails_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationsByUserResponse::ListOrganizationsByUserResponse(
    ::_pbi::ConstantInitialized)
  : orgs_(){}
struct ListOrganizationsByUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationsByUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationsByUserResponseDefaultTypeInternal() {}
  union {
    ListOrganizationsByUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationsByUserResponseDefaultTypeInternal _ListOrganizationsByUserResponse_default_instance_;
PROTOBUF_CONSTEXPR SearchOrganizationsRequest::SearchOrganizationsRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , org_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , cid_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , public_namespace_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct SearchOrganizationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchOrganizationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchOrganizationsRequestDefaultTypeInternal() {}
  union {
    SearchOrganizationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchOrganizationsRequestDefaultTypeInternal _SearchOrganizationsRequest_default_instance_;
PROTOBUF_CONSTEXPR SearchOrganizationsResponse::SearchOrganizationsResponse(
    ::_pbi::ConstantInitialized)
  : organizations_(){}
struct SearchOrganizationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchOrganizationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchOrganizationsResponseDefaultTypeInternal() {}
  union {
    SearchOrganizationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchOrganizationsResponseDefaultTypeInternal _SearchOrganizationsResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateKeyRequest::CreateKeyRequest(
    ::_pbi::ConstantInitialized)
  : authorizations_()
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateKeyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateKeyRequestDefaultTypeInternal() {}
  union {
    CreateKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateKeyRequestDefaultTypeInternal _CreateKeyRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateKeyResponse::CreateKeyResponse(
    ::_pbi::ConstantInitialized)
  : key_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateKeyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateKeyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateKeyResponseDefaultTypeInternal() {}
  union {
    CreateKeyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateKeyResponseDefaultTypeInternal _CreateKeyResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteKeyRequest::DeleteKeyRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteKeyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteKeyRequestDefaultTypeInternal() {}
  union {
    DeleteKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteKeyRequestDefaultTypeInternal _DeleteKeyRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteKeyResponse::DeleteKeyResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteKeyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteKeyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteKeyResponseDefaultTypeInternal() {}
  union {
    DeleteKeyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteKeyResponseDefaultTypeInternal _DeleteKeyResponse_default_instance_;
PROTOBUF_CONSTEXPR RenameKeyRequest::RenameKeyRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct RenameKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RenameKeyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RenameKeyRequestDefaultTypeInternal() {}
  union {
    RenameKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RenameKeyRequestDefaultTypeInternal _RenameKeyRequest_default_instance_;
PROTOBUF_CONSTEXPR RenameKeyResponse::RenameKeyResponse(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct RenameKeyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RenameKeyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RenameKeyResponseDefaultTypeInternal() {}
  union {
    RenameKeyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RenameKeyResponseDefaultTypeInternal _RenameKeyResponse_default_instance_;
PROTOBUF_CONSTEXPR AuthorizationDetails::AuthorizationDetails(
    ::_pbi::ConstantInitialized)
  : authorization_type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , authorization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , resource_type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , resource_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct AuthorizationDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthorizationDetailsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthorizationDetailsDefaultTypeInternal() {}
  union {
    AuthorizationDetails _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthorizationDetailsDefaultTypeInternal _AuthorizationDetails_default_instance_;
PROTOBUF_CONSTEXPR APIKeyWithAuthorizations::APIKeyWithAuthorizations(
    ::_pbi::ConstantInitialized)
  : authorizations_()
  , api_key_(nullptr){}
struct APIKeyWithAuthorizationsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR APIKeyWithAuthorizationsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~APIKeyWithAuthorizationsDefaultTypeInternal() {}
  union {
    APIKeyWithAuthorizations _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 APIKeyWithAuthorizationsDefaultTypeInternal _APIKeyWithAuthorizations_default_instance_;
PROTOBUF_CONSTEXPR ListKeysRequest::ListKeysRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListKeysRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListKeysRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListKeysRequestDefaultTypeInternal() {}
  union {
    ListKeysRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListKeysRequestDefaultTypeInternal _ListKeysRequest_default_instance_;
PROTOBUF_CONSTEXPR ListKeysResponse::ListKeysResponse(
    ::_pbi::ConstantInitialized)
  : api_keys_(){}
struct ListKeysResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListKeysResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListKeysResponseDefaultTypeInternal() {}
  union {
    ListKeysResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListKeysResponseDefaultTypeInternal _ListKeysResponse_default_instance_;
PROTOBUF_CONSTEXPR RotateKeyRequest::RotateKeyRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct RotateKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotateKeyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotateKeyRequestDefaultTypeInternal() {}
  union {
    RotateKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotateKeyRequestDefaultTypeInternal _RotateKeyRequest_default_instance_;
PROTOBUF_CONSTEXPR RotateKeyResponse::RotateKeyResponse(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , key_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct RotateKeyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotateKeyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotateKeyResponseDefaultTypeInternal() {}
  union {
    RotateKeyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotateKeyResponseDefaultTypeInternal _RotateKeyResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateKeyFromExistingKeyAuthorizationsRequest::CreateKeyFromExistingKeyAuthorizationsRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateKeyFromExistingKeyAuthorizationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateKeyFromExistingKeyAuthorizationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateKeyFromExistingKeyAuthorizationsRequestDefaultTypeInternal() {}
  union {
    CreateKeyFromExistingKeyAuthorizationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateKeyFromExistingKeyAuthorizationsRequestDefaultTypeInternal _CreateKeyFromExistingKeyAuthorizationsRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateKeyFromExistingKeyAuthorizationsResponse::CreateKeyFromExistingKeyAuthorizationsResponse(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , key_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateKeyFromExistingKeyAuthorizationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateKeyFromExistingKeyAuthorizationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateKeyFromExistingKeyAuthorizationsResponseDefaultTypeInternal() {}
  union {
    CreateKeyFromExistingKeyAuthorizationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateKeyFromExistingKeyAuthorizationsResponseDefaultTypeInternal _CreateKeyFromExistingKeyAuthorizationsResponse_default_instance_;
PROTOBUF_CONSTEXPR OrganizationSetLogoRequest::OrganizationSetLogoRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , logo_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct OrganizationSetLogoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationSetLogoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationSetLogoRequestDefaultTypeInternal() {}
  union {
    OrganizationSetLogoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationSetLogoRequestDefaultTypeInternal _OrganizationSetLogoRequest_default_instance_;
PROTOBUF_CONSTEXPR OrganizationSetLogoResponse::OrganizationSetLogoResponse(
    ::_pbi::ConstantInitialized){}
struct OrganizationSetLogoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationSetLogoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationSetLogoResponseDefaultTypeInternal() {}
  union {
    OrganizationSetLogoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationSetLogoResponseDefaultTypeInternal _OrganizationSetLogoResponse_default_instance_;
PROTOBUF_CONSTEXPR OrganizationGetLogoRequest::OrganizationGetLogoRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct OrganizationGetLogoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationGetLogoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationGetLogoRequestDefaultTypeInternal() {}
  union {
    OrganizationGetLogoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationGetLogoRequestDefaultTypeInternal _OrganizationGetLogoRequest_default_instance_;
PROTOBUF_CONSTEXPR OrganizationGetLogoResponse::OrganizationGetLogoResponse(
    ::_pbi::ConstantInitialized)
  : url_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct OrganizationGetLogoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationGetLogoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationGetLogoResponseDefaultTypeInternal() {}
  union {
    OrganizationGetLogoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationGetLogoResponseDefaultTypeInternal _OrganizationGetLogoResponse_default_instance_;
PROTOBUF_CONSTEXPR EnableAuthServiceRequest::EnableAuthServiceRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct EnableAuthServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnableAuthServiceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnableAuthServiceRequestDefaultTypeInternal() {}
  union {
    EnableAuthServiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnableAuthServiceRequestDefaultTypeInternal _EnableAuthServiceRequest_default_instance_;
PROTOBUF_CONSTEXPR EnableAuthServiceResponse::EnableAuthServiceResponse(
    ::_pbi::ConstantInitialized){}
struct EnableAuthServiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnableAuthServiceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnableAuthServiceResponseDefaultTypeInternal() {}
  union {
    EnableAuthServiceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnableAuthServiceResponseDefaultTypeInternal _EnableAuthServiceResponse_default_instance_;
PROTOBUF_CONSTEXPR DisableAuthServiceRequest::DisableAuthServiceRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DisableAuthServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisableAuthServiceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisableAuthServiceRequestDefaultTypeInternal() {}
  union {
    DisableAuthServiceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisableAuthServiceRequestDefaultTypeInternal _DisableAuthServiceRequest_default_instance_;
PROTOBUF_CONSTEXPR DisableAuthServiceResponse::DisableAuthServiceResponse(
    ::_pbi::ConstantInitialized){}
struct DisableAuthServiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisableAuthServiceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisableAuthServiceResponseDefaultTypeInternal() {}
  union {
    DisableAuthServiceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisableAuthServiceResponseDefaultTypeInternal _DisableAuthServiceResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateOAuthAppRequest::CreateOAuthAppRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , client_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , oauth_config_(nullptr){}
struct CreateOAuthAppRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateOAuthAppRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateOAuthAppRequestDefaultTypeInternal() {}
  union {
    CreateOAuthAppRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateOAuthAppRequestDefaultTypeInternal _CreateOAuthAppRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateOAuthAppResponse::CreateOAuthAppResponse(
    ::_pbi::ConstantInitialized)
  : client_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , client_secret_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateOAuthAppResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateOAuthAppResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateOAuthAppResponseDefaultTypeInternal() {}
  union {
    CreateOAuthAppResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateOAuthAppResponseDefaultTypeInternal _CreateOAuthAppResponse_default_instance_;
PROTOBUF_CONSTEXPR ReadOAuthAppRequest::ReadOAuthAppRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , client_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ReadOAuthAppRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadOAuthAppRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadOAuthAppRequestDefaultTypeInternal() {}
  union {
    ReadOAuthAppRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadOAuthAppRequestDefaultTypeInternal _ReadOAuthAppRequest_default_instance_;
PROTOBUF_CONSTEXPR ReadOAuthAppResponse::ReadOAuthAppResponse(
    ::_pbi::ConstantInitialized)
  : client_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , client_secret_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , oauth_config_(nullptr){}
struct ReadOAuthAppResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadOAuthAppResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadOAuthAppResponseDefaultTypeInternal() {}
  union {
    ReadOAuthAppResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadOAuthAppResponseDefaultTypeInternal _ReadOAuthAppResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateOAuthAppRequest::UpdateOAuthAppRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , client_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , client_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , oauth_config_(nullptr){}
struct UpdateOAuthAppRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateOAuthAppRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateOAuthAppRequestDefaultTypeInternal() {}
  union {
    UpdateOAuthAppRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateOAuthAppRequestDefaultTypeInternal _UpdateOAuthAppRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateOAuthAppResponse::UpdateOAuthAppResponse(
    ::_pbi::ConstantInitialized){}
struct UpdateOAuthAppResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateOAuthAppResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateOAuthAppResponseDefaultTypeInternal() {}
  union {
    UpdateOAuthAppResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateOAuthAppResponseDefaultTypeInternal _UpdateOAuthAppResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteOAuthAppRequest::DeleteOAuthAppRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , client_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteOAuthAppRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOAuthAppRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOAuthAppRequestDefaultTypeInternal() {}
  union {
    DeleteOAuthAppRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOAuthAppRequestDefaultTypeInternal _DeleteOAuthAppRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteOAuthAppResponse::DeleteOAuthAppResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteOAuthAppResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteOAuthAppResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteOAuthAppResponseDefaultTypeInternal() {}
  union {
    DeleteOAuthAppResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteOAuthAppResponseDefaultTypeInternal _DeleteOAuthAppResponse_default_instance_;
PROTOBUF_CONSTEXPR ListOAuthAppsRequest::ListOAuthAppsRequest(
    ::_pbi::ConstantInitialized)
  : org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListOAuthAppsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOAuthAppsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOAuthAppsRequestDefaultTypeInternal() {}
  union {
    ListOAuthAppsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOAuthAppsRequestDefaultTypeInternal _ListOAuthAppsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListOAuthAppsResponse::ListOAuthAppsResponse(
    ::_pbi::ConstantInitialized)
  : client_ids_(){}
struct ListOAuthAppsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOAuthAppsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOAuthAppsResponseDefaultTypeInternal() {}
  union {
    ListOAuthAppsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOAuthAppsResponseDefaultTypeInternal _ListOAuthAppsResponse_default_instance_;
PROTOBUF_CONSTEXPR OAuthConfig::OAuthConfig(
    ::_pbi::ConstantInitialized)
  : origin_uris_()
  , redirect_uris_()
  , enabled_grants_()
  , _enabled_grants_cached_byte_size_(0)
  , logout_uri_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , client_authentication_(0)

  , pkce_(0)

  , url_validation_(0)
{}
struct OAuthConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OAuthConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OAuthConfigDefaultTypeInternal() {}
  union {
    OAuthConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OAuthConfigDefaultTypeInternal _OAuthConfig_default_instance_;
}  // namespace v1
}  // namespace app
}  // namespace viam
static ::_pb::Metadata file_level_metadata_app_2fv1_2fapp_2eproto[219];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_app_2fv1_2fapp_2eproto[10];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_app_2fv1_2fapp_2eproto = nullptr;

const uint32_t TableStruct_app_2fv1_2fapp_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, location_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, last_access_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, created_on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, dns_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, secret_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, robot_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, robot_config_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, last_access_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, user_supplied_info_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, main_part_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, fqdn_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, local_fqdn_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, secrets_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, last_updated_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, part_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, robot_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, when_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, old_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, edited_by_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthenticatorInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthenticatorInfo, type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthenticatorInfo, value_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthenticatorInfo, is_deactivated_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, public_namespace_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, default_region_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, cid_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationMember, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationMember, user_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationMember, emails_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationMember, date_added_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationMember, last_login_),
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsResponse, organizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationInvite, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationInvite, email_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationInvite, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationInvite, authorizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationResponse, organization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationResponse, organization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationNamespaceAvailabilityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationNamespaceAvailabilityRequest, public_namespace_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationNamespaceAvailabilityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationNamespaceAvailabilityResponse, available_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationRequest, public_namespace_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationRequest, region_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationRequest, cid_),
  ~0u,
  0,
  1,
  2,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationResponse, organization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationMembersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationMembersRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationMembersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationMembersResponse, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationMembersResponse, members_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationMembersResponse, invites_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteRequest, email_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteRequest, authorizations_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteRequest, send_email_invite_),
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOrganizationInviteResponse, invite_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest, email_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest, add_authorizations_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest, remove_authorizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOrganizationInviteAuthorizationsResponse, invite_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationInviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationInviteRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationInviteRequest, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationInviteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResendOrganizationInviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResendOrganizationInviteRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResendOrganizationInviteRequest, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResendOrganizationInviteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResendOrganizationInviteResponse, invite_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationMemberRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationMemberRequest, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOrganizationMemberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::BillingAddress, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::BillingAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::BillingAddress, address_line_1_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::BillingAddress, address_line_2_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::BillingAddress, city_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::BillingAddress, state_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::BillingAddress, zipcode_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::BillingAddress, country_),
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::EnableBillingServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::EnableBillingServiceRequest, org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::EnableBillingServiceRequest, billing_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::EnableBillingServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateBillingServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateBillingServiceRequest, org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateBillingServiceRequest, billing_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateBillingServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetBillingServiceConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetBillingServiceConfigRequest, org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetBillingServiceConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetBillingServiceConfigResponse, billing_address_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetBillingServiceConfigResponse, support_email_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetBillingServiceConfigResponse, logo_url_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetBillingServiceConfigResponse, billing_dashboard_url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DisableBillingServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DisableBillingServiceRequest, org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DisableBillingServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationSetSupportEmailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationSetSupportEmailRequest, org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationSetSupportEmailRequest, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationSetSupportEmailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationGetSupportEmailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationGetSupportEmailRequest, org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationGetSupportEmailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationGetSupportEmailResponse, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationIdentity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationIdentity, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationIdentity, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationOrganization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationOrganization, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationOrganization, primary_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuth, secret_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuth, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuth, secrets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::StorageConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::StorageConfig, region_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, parent_location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, auth_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, organizations_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, robot_count_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, secret_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, state_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationRequest, parent_location_id_),
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationResponse, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetLocationRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetLocationResponse, location_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationRequest, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationRequest, parent_location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationRequest, region_),
  ~0u,
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateLocationResponse, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationsWithAccessToLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationsWithAccessToLocationRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationsWithAccessToLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetOrganizationsWithAccessToLocationResponse, organization_identities_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListLocationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListLocationsRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ShareLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ShareLocationRequest, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ShareLocationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ShareLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UnshareLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UnshareLocationRequest, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UnshareLocationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UnshareLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListLocationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListLocationsResponse, locations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationSecretRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationSecretResponse, auth_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationSecretRequest, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationSecretRequest, secret_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuthRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuthResponse, auth_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRoverRentalRobotsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRoverRentalRobotsRequest, org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RoverRentalRobot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RoverRentalRobot, robot_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RoverRentalRobot, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RoverRentalRobot, robot_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RoverRentalRobot, robot_main_part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRoverRentalRobotsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRoverRentalRobotsResponse, robots_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotResponse, robot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartsRequest, robot_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartsResponse, parts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartResponse, part_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartResponse, config_json_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, errors_only_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, filter_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, levels_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, start_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, end_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, limit_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, source_),
  ~0u,
  ~0u,
  0,
  1,
  ~0u,
  3,
  4,
  5,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsResponse, logs_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsResponse, next_page_token_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsRequest, errors_only_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsRequest, filter_),
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsResponse, logs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartHistoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartHistoryRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartHistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartHistoryResponse, history_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartRequest, robot_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartResponse, part_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartRequest, robot_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartRequest, part_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartResponse, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartRequest, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotAPIKeysRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotAPIKeysRequest, robot_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::APIKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::APIKey, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::APIKey, key_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::APIKey, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::APIKey, created_on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotAPIKeysResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotAPIKeysResponse, api_keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, fragment_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, organization_owner_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, public__),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, organization_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, robot_part_count_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, organization_count_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, only_used_by_owner_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, visibility_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, last_updated_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentHistoryEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentHistoryEntry, fragment_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentHistoryEntry, edited_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentHistoryEntry, old_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentHistoryEntry, edited_by_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentHistoryEntry, revision_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentHistoryEntry, config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentError, error_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentError, fragment_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentError, detail_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentUsage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentUsage, fragment_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentUsage, organizations_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentUsage, machines_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FragmentUsage, machines_in_current_org_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResolvedFragment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResolvedFragment, fragment_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResolvedFragment, resolved_config_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ResolvedFragment, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListFragmentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListFragmentsRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListFragmentsRequest, show_public_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListFragmentsRequest, fragment_visibility_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListFragmentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListFragmentsResponse, fragments_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListFragmentsResponse, fragment_usages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentRequest, current_organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentResponse, fragment_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentResponse, fragment_usage_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentRequest, config_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentRequest, visibility_),
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateFragmentResponse, fragment_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentRequest, config_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentRequest, public__),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentRequest, visibility_),
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateFragmentResponse, fragment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteFragmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteFragmentRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteFragmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentHistoryRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentHistoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentHistoryRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentHistoryRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentHistoryRequest, page_limit_),
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentHistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentHistoryResponse, history_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetFragmentHistoryResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRobotsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRobotsRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListMachineFragmentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListMachineFragmentsRequest, machine_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListMachineFragmentsRequest, additional_fragment_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListMachineFragmentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListMachineFragmentsResponse, fragments_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListMachineFragmentsResponse, resolved_fragments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRobotsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRobotsResponse, robots_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotRequest, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotRequest, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotResponse, robot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartAsMainRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartAsMainRequest, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartAsMainResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartForRestartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartForRestartRequest, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartForRestartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRobotPartSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRobotPartSecretRequest, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRobotPartSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRobotPartSecretResponse, part_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartSecretRequest, part_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartSecretRequest, secret_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, authorization_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, authorization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, resource_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, resource_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, identity_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Authorization, identity_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AddRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AddRoleRequest, authorization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AddRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RemoveRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RemoveRoleRequest, authorization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RemoveRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ChangeRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ChangeRoleRequest, old_authorization_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ChangeRoleRequest, new_authorization_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ChangeRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListAuthorizationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListAuthorizationsRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListAuthorizationsRequest, resource_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListAuthorizationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListAuthorizationsResponse, authorizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CheckPermissionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CheckPermissionsRequest, permissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizedPermissions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizedPermissions, resource_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizedPermissions, resource_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizedPermissions, permissions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CheckPermissionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CheckPermissionsResponse, authorized_permissions_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleVersion, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleVersion, version_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleVersion, files_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleVersion, models_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleVersion, entrypoint_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleVersion, first_run_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleMetadata, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleMetadata, models_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleMetadata, versions_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleMetadata, entrypoint_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleMetadata, first_run_),
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MLModelMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MLModelMetadata, versions_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MLModelMetadata, model_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MLModelMetadata, model_framework_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MLTrainingVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MLTrainingVersion, version_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MLTrainingVersion, created_on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MLTrainingMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MLTrainingMetadata, versions_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MLTrainingMetadata, model_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MLTrainingMetadata, model_framework_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MLTrainingMetadata, draft_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, item_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, public_namespace_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, visibility_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, url_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, description_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, total_robot_usage_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, total_external_robot_usage_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, total_organization_usage_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, total_external_organization_usage_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, created_at_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, updated_at_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RegistryItem, metadata_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRegistryItemRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRegistryItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRegistryItemRequest, item_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRegistryItemRequest, include_markdown_documentation_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRegistryItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRegistryItemResponse, item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRegistryItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRegistryItemRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRegistryItemRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRegistryItemRequest, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRegistryItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRegistryItemRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRegistryItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRegistryItemRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRegistryItemRequest, item_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRegistryItemRequest, type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRegistryItemRequest, description_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRegistryItemRequest, visibility_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRegistryItemRequest, url_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRegistryItemRequest, metadata_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRegistryItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRegistryItemsRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRegistryItemsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRegistryItemsRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRegistryItemsRequest, types_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRegistryItemsRequest, visibilities_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRegistryItemsRequest, platforms_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRegistryItemsRequest, statuses_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRegistryItemsRequest, search_term_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRegistryItemsRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRegistryItemsRequest, public_namespaces_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRegistryItemsRequest, include_markdown_documentation_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  1,
  2,
  ~0u,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRegistryItemsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListRegistryItemsResponse, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRegistryItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRegistryItemRequest, item_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRegistryItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TransferRegistryItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TransferRegistryItemRequest, item_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TransferRegistryItemRequest, new_public_namespace_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TransferRegistryItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateModuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateModuleRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateModuleRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateModuleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateModuleResponse, module_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateModuleResponse, url_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, module_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, visibility_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, url_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, description_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, models_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, entrypoint_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleRequest, first_run_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleResponse, url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleMetadata, models_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateModuleMetadata, entrypoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateMLModelMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateMLModelMetadata, model_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateMLModelMetadata, model_framework_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateMLTrainingMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateMLTrainingMetadata, model_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateMLTrainingMetadata, model_framework_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateMLTrainingMetadata, draft_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Model, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Model, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Model, api_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Model, model_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Model, markdown_documentation_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Model, description_),
  ~0u,
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleFileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleFileInfo, module_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleFileInfo, version_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleFileInfo, platform_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ModuleFileInfo, platform_tags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UploadModuleFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UploadModuleFileRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UploadModuleFileRequest, module_file_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UploadModuleFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UploadModuleFileResponse, url_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetModuleRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetModuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetModuleRequest, module_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetModuleRequest, include_markdown_documentation_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetModuleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetModuleResponse, module_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, module_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, visibility_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, versions_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, url_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, description_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, models_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, total_robot_usage_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, total_organization_usage_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, entrypoint_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, public_namespace_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Module, first_run_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::VersionHistory, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::VersionHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::VersionHistory, version_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::VersionHistory, files_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::VersionHistory, models_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::VersionHistory, entrypoint_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::VersionHistory, first_run_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Uploads, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Uploads, platform_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Uploads, uploaded_at_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListModulesRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListModulesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListModulesRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListModulesRequest, include_markdown_documentation_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListModulesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListModulesResponse, modules_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetUserIDByEmailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetUserIDByEmailRequest, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetUserIDByEmailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetUserIDByEmailResponse, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsByUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsByUserRequest, user_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrgDetails, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrgDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrgDetails, org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrgDetails, org_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrgDetails, org_cid_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrgDetails, public_namespace_),
  ~0u,
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsByUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsByUserResponse, orgs_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SearchOrganizationsRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SearchOrganizationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SearchOrganizationsRequest, org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SearchOrganizationsRequest, org_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SearchOrganizationsRequest, cid_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SearchOrganizationsRequest, public_namespace_),
  0,
  1,
  2,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SearchOrganizationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SearchOrganizationsResponse, organizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateKeyRequest, authorizations_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateKeyRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateKeyResponse, key_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateKeyResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteKeyRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RenameKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RenameKeyRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RenameKeyRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RenameKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RenameKeyResponse, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RenameKeyResponse, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizationDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizationDetails, authorization_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizationDetails, authorization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizationDetails, resource_type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizationDetails, resource_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::AuthorizationDetails, org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::APIKeyWithAuthorizations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::APIKeyWithAuthorizations, api_key_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::APIKeyWithAuthorizations, authorizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListKeysRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListKeysRequest, org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListKeysResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListKeysResponse, api_keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RotateKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RotateKeyRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RotateKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RotateKeyResponse, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RotateKeyResponse, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateKeyFromExistingKeyAuthorizationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateKeyFromExistingKeyAuthorizationsRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateKeyFromExistingKeyAuthorizationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateKeyFromExistingKeyAuthorizationsResponse, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateKeyFromExistingKeyAuthorizationsResponse, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationSetLogoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationSetLogoRequest, org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationSetLogoRequest, logo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationSetLogoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationGetLogoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationGetLogoRequest, org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationGetLogoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OrganizationGetLogoResponse, url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::EnableAuthServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::EnableAuthServiceRequest, org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::EnableAuthServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DisableAuthServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DisableAuthServiceRequest, org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DisableAuthServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOAuthAppRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOAuthAppRequest, org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOAuthAppRequest, client_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOAuthAppRequest, oauth_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOAuthAppResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOAuthAppResponse, client_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateOAuthAppResponse, client_secret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ReadOAuthAppRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ReadOAuthAppRequest, org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ReadOAuthAppRequest, client_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ReadOAuthAppResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ReadOAuthAppResponse, client_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ReadOAuthAppResponse, client_secret_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ReadOAuthAppResponse, oauth_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOAuthAppRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOAuthAppRequest, org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOAuthAppRequest, client_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOAuthAppRequest, client_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOAuthAppRequest, oauth_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateOAuthAppResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOAuthAppRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOAuthAppRequest, org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOAuthAppRequest, client_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteOAuthAppResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOAuthAppsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOAuthAppsRequest, org_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOAuthAppsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOAuthAppsResponse, client_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OAuthConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OAuthConfig, client_authentication_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OAuthConfig, pkce_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OAuthConfig, url_validation_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OAuthConfig, origin_uris_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OAuthConfig, redirect_uris_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OAuthConfig, logout_uri_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::OAuthConfig, enabled_grants_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::app::v1::Robot)},
  { 11, -1, -1, sizeof(::viam::app::v1::RobotPart)},
  { 32, -1, -1, sizeof(::viam::app::v1::RobotPartHistoryEntry)},
  { 43, -1, -1, sizeof(::viam::app::v1::AuthenticatorInfo)},
  { 52, -1, -1, sizeof(::viam::app::v1::ListOrganizationsRequest)},
  { 58, 70, -1, sizeof(::viam::app::v1::Organization)},
  { 76, 86, -1, sizeof(::viam::app::v1::OrganizationMember)},
  { 90, -1, -1, sizeof(::viam::app::v1::ListOrganizationsResponse)},
  { 97, -1, -1, sizeof(::viam::app::v1::OrganizationInvite)},
  { 107, -1, -1, sizeof(::viam::app::v1::CreateOrganizationRequest)},
  { 114, -1, -1, sizeof(::viam::app::v1::CreateOrganizationResponse)},
  { 121, -1, -1, sizeof(::viam::app::v1::GetOrganizationRequest)},
  { 128, -1, -1, sizeof(::viam::app::v1::GetOrganizationResponse)},
  { 135, -1, -1, sizeof(::viam::app::v1::GetOrganizationNamespaceAvailabilityRequest)},
  { 142, -1, -1, sizeof(::viam::app::v1::GetOrganizationNamespaceAvailabilityResponse)},
  { 149, 160, -1, sizeof(::viam::app::v1::UpdateOrganizationRequest)},
  { 165, -1, -1, sizeof(::viam::app::v1::UpdateOrganizationResponse)},
  { 172, -1, -1, sizeof(::viam::app::v1::DeleteOrganizationRequest)},
  { 179, -1, -1, sizeof(::viam::app::v1::DeleteOrganizationResponse)},
  { 185, -1, -1, sizeof(::viam::app::v1::ListOrganizationMembersRequest)},
  { 192, -1, -1, sizeof(::viam::app::v1::ListOrganizationMembersResponse)},
  { 201, 211, -1, sizeof(::viam::app::v1::CreateOrganizationInviteRequest)},
  { 215, -1, -1, sizeof(::viam::app::v1::CreateOrganizationInviteResponse)},
  { 222, -1, -1, sizeof(::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest)},
  { 232, -1, -1, sizeof(::viam::app::v1::UpdateOrganizationInviteAuthorizationsResponse)},
  { 239, -1, -1, sizeof(::viam::app::v1::DeleteOrganizationInviteRequest)},
  { 247, -1, -1, sizeof(::viam::app::v1::DeleteOrganizationInviteResponse)},
  { 253, -1, -1, sizeof(::viam::app::v1::ResendOrganizationInviteRequest)},
  { 261, -1, -1, sizeof(::viam::app::v1::ResendOrganizationInviteResponse)},
  { 268, -1, -1, sizeof(::viam::app::v1::DeleteOrganizationMemberRequest)},
  { 276, -1, -1, sizeof(::viam::app::v1::DeleteOrganizationMemberResponse)},
  { 282, 294, -1, sizeof(::viam::app::v1::BillingAddress)},
  { 300, -1, -1, sizeof(::viam::app::v1::EnableBillingServiceRequest)},
  { 308, -1, -1, sizeof(::viam::app::v1::EnableBillingServiceResponse)},
  { 314, -1, -1, sizeof(::viam::app::v1::UpdateBillingServiceRequest)},
  { 322, -1, -1, sizeof(::viam::app::v1::UpdateBillingServiceResponse)},
  { 328, -1, -1, sizeof(::viam::app::v1::GetBillingServiceConfigRequest)},
  { 335, -1, -1, sizeof(::viam::app::v1::GetBillingServiceConfigResponse)},
  { 345, -1, -1, sizeof(::viam::app::v1::DisableBillingServiceRequest)},
  { 352, -1, -1, sizeof(::viam::app::v1::DisableBillingServiceResponse)},
  { 358, -1, -1, sizeof(::viam::app::v1::OrganizationSetSupportEmailRequest)},
  { 366, -1, -1, sizeof(::viam::app::v1::OrganizationSetSupportEmailResponse)},
  { 372, -1, -1, sizeof(::viam::app::v1::OrganizationGetSupportEmailRequest)},
  { 379, -1, -1, sizeof(::viam::app::v1::OrganizationGetSupportEmailResponse)},
  { 386, -1, -1, sizeof(::viam::app::v1::OrganizationIdentity)},
  { 394, -1, -1, sizeof(::viam::app::v1::LocationOrganization)},
  { 402, -1, -1, sizeof(::viam::app::v1::LocationAuth)},
  { 411, -1, -1, sizeof(::viam::app::v1::StorageConfig)},
  { 418, -1, -1, sizeof(::viam::app::v1::Location)},
  { 432, -1, -1, sizeof(::viam::app::v1::SharedSecret)},
  { 442, 451, -1, sizeof(::viam::app::v1::CreateLocationRequest)},
  { 454, -1, -1, sizeof(::viam::app::v1::CreateLocationResponse)},
  { 461, -1, -1, sizeof(::viam::app::v1::GetLocationRequest)},
  { 468, -1, -1, sizeof(::viam::app::v1::GetLocationResponse)},
  { 475, 485, -1, sizeof(::viam::app::v1::UpdateLocationRequest)},
  { 489, -1, -1, sizeof(::viam::app::v1::UpdateLocationResponse)},
  { 496, -1, -1, sizeof(::viam::app::v1::DeleteLocationRequest)},
  { 503, -1, -1, sizeof(::viam::app::v1::DeleteLocationResponse)},
  { 509, -1, -1, sizeof(::viam::app::v1::GetOrganizationsWithAccessToLocationRequest)},
  { 516, -1, -1, sizeof(::viam::app::v1::GetOrganizationsWithAccessToLocationResponse)},
  { 523, -1, -1, sizeof(::viam::app::v1::ListLocationsRequest)},
  { 530, -1, -1, sizeof(::viam::app::v1::ShareLocationRequest)},
  { 538, -1, -1, sizeof(::viam::app::v1::ShareLocationResponse)},
  { 544, -1, -1, sizeof(::viam::app::v1::UnshareLocationRequest)},
  { 552, -1, -1, sizeof(::viam::app::v1::UnshareLocationResponse)},
  { 558, -1, -1, sizeof(::viam::app::v1::ListLocationsResponse)},
  { 565, -1, -1, sizeof(::viam::app::v1::CreateLocationSecretRequest)},
  { 572, -1, -1, sizeof(::viam::app::v1::CreateLocationSecretResponse)},
  { 579, -1, -1, sizeof(::viam::app::v1::DeleteLocationSecretRequest)},
  { 587, -1, -1, sizeof(::viam::app::v1::DeleteLocationSecretResponse)},
  { 593, -1, -1, sizeof(::viam::app::v1::LocationAuthRequest)},
  { 600, -1, -1, sizeof(::viam::app::v1::LocationAuthResponse)},
  { 607, -1, -1, sizeof(::viam::app::v1::GetRobotRequest)},
  { 614, -1, -1, sizeof(::viam::app::v1::GetRoverRentalRobotsRequest)},
  { 621, -1, -1, sizeof(::viam::app::v1::RoverRentalRobot)},
  { 631, -1, -1, sizeof(::viam::app::v1::GetRoverRentalRobotsResponse)},
  { 638, -1, -1, sizeof(::viam::app::v1::GetRobotResponse)},
  { 645, -1, -1, sizeof(::viam::app::v1::GetRobotPartsRequest)},
  { 652, -1, -1, sizeof(::viam::app::v1::GetRobotPartsResponse)},
  { 659, -1, -1, sizeof(::viam::app::v1::GetRobotPartRequest)},
  { 666, -1, -1, sizeof(::viam::app::v1::GetRobotPartResponse)},
  { 674, 689, -1, sizeof(::viam::app::v1::GetRobotPartLogsRequest)},
  { 698, -1, -1, sizeof(::viam::app::v1::GetRobotPartLogsResponse)},
  { 706, 715, -1, sizeof(::viam::app::v1::TailRobotPartLogsRequest)},
  { 718, -1, -1, sizeof(::viam::app::v1::TailRobotPartLogsResponse)},
  { 725, -1, -1, sizeof(::viam::app::v1::GetRobotPartHistoryRequest)},
  { 732, -1, -1, sizeof(::viam::app::v1::GetRobotPartHistoryResponse)},
  { 739, -1, -1, sizeof(::viam::app::v1::UpdateRobotPartRequest)},
  { 748, -1, -1, sizeof(::viam::app::v1::UpdateRobotPartResponse)},
  { 755, -1, -1, sizeof(::viam::app::v1::NewRobotPartRequest)},
  { 763, -1, -1, sizeof(::viam::app::v1::NewRobotPartResponse)},
  { 770, -1, -1, sizeof(::viam::app::v1::DeleteRobotPartRequest)},
  { 777, -1, -1, sizeof(::viam::app::v1::GetRobotAPIKeysRequest)},
  { 784, -1, -1, sizeof(::viam::app::v1::APIKey)},
  { 794, -1, -1, sizeof(::viam::app::v1::GetRobotAPIKeysResponse)},
  { 801, -1, -1, sizeof(::viam::app::v1::DeleteRobotPartResponse)},
  { 807, -1, -1, sizeof(::viam::app::v1::Fragment)},
  { 825, -1, -1, sizeof(::viam::app::v1::FragmentHistoryEntry)},
  { 837, -1, -1, sizeof(::viam::app::v1::FragmentError)},
  { 846, -1, -1, sizeof(::viam::app::v1::FragmentUsage)},
  { 856, -1, -1, sizeof(::viam::app::v1::ResolvedFragment)},
  { 865, -1, -1, sizeof(::viam::app::v1::ListFragmentsRequest)},
  { 874, -1, -1, sizeof(::viam::app::v1::ListFragmentsResponse)},
  { 882, -1, -1, sizeof(::viam::app::v1::GetFragmentRequest)},
  { 890, -1, -1, sizeof(::viam::app::v1::GetFragmentResponse)},
  { 898, 908, -1, sizeof(::viam::app::v1::CreateFragmentRequest)},
  { 912, -1, -1, sizeof(::viam::app::v1::CreateFragmentResponse)},
  { 919, 930, -1, sizeof(::viam::app::v1::UpdateFragmentRequest)},
  { 935, -1, -1, sizeof(::viam::app::v1::UpdateFragmentResponse)},
  { 942, -1, -1, sizeof(::viam::app::v1::DeleteFragmentRequest)},
  { 949, -1, -1, sizeof(::viam::app::v1::DeleteFragmentResponse)},
  { 955, 964, -1, sizeof(::viam::app::v1::GetFragmentHistoryRequest)},
  { 967, -1, -1, sizeof(::viam::app::v1::GetFragmentHistoryResponse)},
  { 975, -1, -1, sizeof(::viam::app::v1::ListRobotsRequest)},
  { 982, -1, -1, sizeof(::viam::app::v1::ListMachineFragmentsRequest)},
  { 990, -1, -1, sizeof(::viam::app::v1::ListMachineFragmentsResponse)},
  { 998, -1, -1, sizeof(::viam::app::v1::ListRobotsResponse)},
  { 1005, -1, -1, sizeof(::viam::app::v1::NewRobotRequest)},
  { 1013, -1, -1, sizeof(::viam::app::v1::NewRobotResponse)},
  { 1020, -1, -1, sizeof(::viam::app::v1::UpdateRobotRequest)},
  { 1029, -1, -1, sizeof(::viam::app::v1::UpdateRobotResponse)},
  { 1036, -1, -1, sizeof(::viam::app::v1::DeleteRobotRequest)},
  { 1043, -1, -1, sizeof(::viam::app::v1::DeleteRobotResponse)},
  { 1049, -1, -1, sizeof(::viam::app::v1::MarkPartAsMainRequest)},
  { 1056, -1, -1, sizeof(::viam::app::v1::MarkPartAsMainResponse)},
  { 1062, -1, -1, sizeof(::viam::app::v1::MarkPartForRestartRequest)},
  { 1069, -1, -1, sizeof(::viam::app::v1::MarkPartForRestartResponse)},
  { 1075, -1, -1, sizeof(::viam::app::v1::CreateRobotPartSecretRequest)},
  { 1082, -1, -1, sizeof(::viam::app::v1::CreateRobotPartSecretResponse)},
  { 1089, -1, -1, sizeof(::viam::app::v1::DeleteRobotPartSecretRequest)},
  { 1097, -1, -1, sizeof(::viam::app::v1::DeleteRobotPartSecretResponse)},
  { 1103, -1, -1, sizeof(::viam::app::v1::Authorization)},
  { 1116, -1, -1, sizeof(::viam::app::v1::AddRoleRequest)},
  { 1123, -1, -1, sizeof(::viam::app::v1::AddRoleResponse)},
  { 1129, -1, -1, sizeof(::viam::app::v1::RemoveRoleRequest)},
  { 1136, -1, -1, sizeof(::viam::app::v1::RemoveRoleResponse)},
  { 1142, -1, -1, sizeof(::viam::app::v1::ChangeRoleRequest)},
  { 1150, -1, -1, sizeof(::viam::app::v1::ChangeRoleResponse)},
  { 1156, -1, -1, sizeof(::viam::app::v1::ListAuthorizationsRequest)},
  { 1164, -1, -1, sizeof(::viam::app::v1::ListAuthorizationsResponse)},
  { 1171, -1, -1, sizeof(::viam::app::v1::CheckPermissionsRequest)},
  { 1178, -1, -1, sizeof(::viam::app::v1::AuthorizedPermissions)},
  { 1187, -1, -1, sizeof(::viam::app::v1::CheckPermissionsResponse)},
  { 1194, 1205, -1, sizeof(::viam::app::v1::ModuleVersion)},
  { 1210, 1220, -1, sizeof(::viam::app::v1::ModuleMetadata)},
  { 1224, -1, -1, sizeof(::viam::app::v1::MLModelMetadata)},
  { 1233, -1, -1, sizeof(::viam::app::v1::MLTrainingVersion)},
  { 1241, -1, -1, sizeof(::viam::app::v1::MLTrainingMetadata)},
  { 1251, -1, -1, sizeof(::viam::app::v1::RegistryItem)},
  { 1275, 1283, -1, sizeof(::viam::app::v1::GetRegistryItemRequest)},
  { 1285, -1, -1, sizeof(::viam::app::v1::GetRegistryItemResponse)},
  { 1292, -1, -1, sizeof(::viam::app::v1::CreateRegistryItemRequest)},
  { 1301, -1, -1, sizeof(::viam::app::v1::CreateRegistryItemResponse)},
  { 1307, 1322, -1, sizeof(::viam::app::v1::UpdateRegistryItemRequest)},
  { 1330, -1, -1, sizeof(::viam::app::v1::UpdateRegistryItemResponse)},
  { 1336, 1351, -1, sizeof(::viam::app::v1::ListRegistryItemsRequest)},
  { 1360, -1, -1, sizeof(::viam::app::v1::ListRegistryItemsResponse)},
  { 1367, -1, -1, sizeof(::viam::app::v1::DeleteRegistryItemRequest)},
  { 1374, -1, -1, sizeof(::viam::app::v1::DeleteRegistryItemResponse)},
  { 1380, -1, -1, sizeof(::viam::app::v1::TransferRegistryItemRequest)},
  { 1388, -1, -1, sizeof(::viam::app::v1::TransferRegistryItemResponse)},
  { 1394, -1, -1, sizeof(::viam::app::v1::CreateModuleRequest)},
  { 1402, -1, -1, sizeof(::viam::app::v1::CreateModuleResponse)},
  { 1410, 1423, -1, sizeof(::viam::app::v1::UpdateModuleRequest)},
  { 1430, -1, -1, sizeof(::viam::app::v1::UpdateModuleResponse)},
  { 1437, -1, -1, sizeof(::viam::app::v1::UpdateModuleMetadata)},
  { 1445, -1, -1, sizeof(::viam::app::v1::UpdateMLModelMetadata)},
  { 1453, -1, -1, sizeof(::viam::app::v1::UpdateMLTrainingMetadata)},
  { 1462, 1472, -1, sizeof(::viam::app::v1::Model)},
  { 1476, -1, -1, sizeof(::viam::app::v1::ModuleFileInfo)},
  { 1486, -1, -1, sizeof(::viam::app::v1::UploadModuleFileRequest)},
  { 1495, -1, -1, sizeof(::viam::app::v1::UploadModuleFileResponse)},
  { 1502, 1510, -1, sizeof(::viam::app::v1::GetModuleRequest)},
  { 1512, -1, -1, sizeof(::viam::app::v1::GetModuleResponse)},
  { 1519, 1538, -1, sizeof(::viam::app::v1::Module)},
  { 1551, 1562, -1, sizeof(::viam::app::v1::VersionHistory)},
  { 1567, -1, -1, sizeof(::viam::app::v1::Uploads)},
  { 1575, 1583, -1, sizeof(::viam::app::v1::ListModulesRequest)},
  { 1585, -1, -1, sizeof(::viam::app::v1::ListModulesResponse)},
  { 1592, -1, -1, sizeof(::viam::app::v1::GetUserIDByEmailRequest)},
  { 1599, -1, -1, sizeof(::viam::app::v1::GetUserIDByEmailResponse)},
  { 1606, -1, -1, sizeof(::viam::app::v1::ListOrganizationsByUserRequest)},
  { 1613, 1623, -1, sizeof(::viam::app::v1::OrgDetails)},
  { 1627, -1, -1, sizeof(::viam::app::v1::ListOrganizationsByUserResponse)},
  { 1634, 1644, -1, sizeof(::viam::app::v1::SearchOrganizationsRequest)},
  { 1648, -1, -1, sizeof(::viam::app::v1::SearchOrganizationsResponse)},
  { 1655, -1, -1, sizeof(::viam::app::v1::CreateKeyRequest)},
  { 1663, -1, -1, sizeof(::viam::app::v1::CreateKeyResponse)},
  { 1671, -1, -1, sizeof(::viam::app::v1::DeleteKeyRequest)},
  { 1678, -1, -1, sizeof(::viam::app::v1::DeleteKeyResponse)},
  { 1684, -1, -1, sizeof(::viam::app::v1::RenameKeyRequest)},
  { 1692, -1, -1, sizeof(::viam::app::v1::RenameKeyResponse)},
  { 1700, -1, -1, sizeof(::viam::app::v1::AuthorizationDetails)},
  { 1711, -1, -1, sizeof(::viam::app::v1::APIKeyWithAuthorizations)},
  { 1719, -1, -1, sizeof(::viam::app::v1::ListKeysRequest)},
  { 1726, -1, -1, sizeof(::viam::app::v1::ListKeysResponse)},
  { 1733, -1, -1, sizeof(::viam::app::v1::RotateKeyRequest)},
  { 1740, -1, -1, sizeof(::viam::app::v1::RotateKeyResponse)},
  { 1748, -1, -1, sizeof(::viam::app::v1::CreateKeyFromExistingKeyAuthorizationsRequest)},
  { 1755, -1, -1, sizeof(::viam::app::v1::CreateKeyFromExistingKeyAuthorizationsResponse)},
  { 1763, -1, -1, sizeof(::viam::app::v1::OrganizationSetLogoRequest)},
  { 1771, -1, -1, sizeof(::viam::app::v1::OrganizationSetLogoResponse)},
  { 1777, -1, -1, sizeof(::viam::app::v1::OrganizationGetLogoRequest)},
  { 1784, -1, -1, sizeof(::viam::app::v1::OrganizationGetLogoResponse)},
  { 1791, -1, -1, sizeof(::viam::app::v1::EnableAuthServiceRequest)},
  { 1798, -1, -1, sizeof(::viam::app::v1::EnableAuthServiceResponse)},
  { 1804, -1, -1, sizeof(::viam::app::v1::DisableAuthServiceRequest)},
  { 1811, -1, -1, sizeof(::viam::app::v1::DisableAuthServiceResponse)},
  { 1817, -1, -1, sizeof(::viam::app::v1::CreateOAuthAppRequest)},
  { 1826, -1, -1, sizeof(::viam::app::v1::CreateOAuthAppResponse)},
  { 1834, -1, -1, sizeof(::viam::app::v1::ReadOAuthAppRequest)},
  { 1842, -1, -1, sizeof(::viam::app::v1::ReadOAuthAppResponse)},
  { 1851, -1, -1, sizeof(::viam::app::v1::UpdateOAuthAppRequest)},
  { 1861, -1, -1, sizeof(::viam::app::v1::UpdateOAuthAppResponse)},
  { 1867, -1, -1, sizeof(::viam::app::v1::DeleteOAuthAppRequest)},
  { 1875, -1, -1, sizeof(::viam::app::v1::DeleteOAuthAppResponse)},
  { 1881, -1, -1, sizeof(::viam::app::v1::ListOAuthAppsRequest)},
  { 1888, -1, -1, sizeof(::viam::app::v1::ListOAuthAppsResponse)},
  { 1895, -1, -1, sizeof(::viam::app::v1::OAuthConfig)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::app::v1::_Robot_default_instance_._instance,
  &::viam::app::v1::_RobotPart_default_instance_._instance,
  &::viam::app::v1::_RobotPartHistoryEntry_default_instance_._instance,
  &::viam::app::v1::_AuthenticatorInfo_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationsRequest_default_instance_._instance,
  &::viam::app::v1::_Organization_default_instance_._instance,
  &::viam::app::v1::_OrganizationMember_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationsResponse_default_instance_._instance,
  &::viam::app::v1::_OrganizationInvite_default_instance_._instance,
  &::viam::app::v1::_CreateOrganizationRequest_default_instance_._instance,
  &::viam::app::v1::_CreateOrganizationResponse_default_instance_._instance,
  &::viam::app::v1::_GetOrganizationRequest_default_instance_._instance,
  &::viam::app::v1::_GetOrganizationResponse_default_instance_._instance,
  &::viam::app::v1::_GetOrganizationNamespaceAvailabilityRequest_default_instance_._instance,
  &::viam::app::v1::_GetOrganizationNamespaceAvailabilityResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateOrganizationRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateOrganizationResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteOrganizationRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteOrganizationResponse_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationMembersRequest_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationMembersResponse_default_instance_._instance,
  &::viam::app::v1::_CreateOrganizationInviteRequest_default_instance_._instance,
  &::viam::app::v1::_CreateOrganizationInviteResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateOrganizationInviteAuthorizationsRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateOrganizationInviteAuthorizationsResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteOrganizationInviteRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteOrganizationInviteResponse_default_instance_._instance,
  &::viam::app::v1::_ResendOrganizationInviteRequest_default_instance_._instance,
  &::viam::app::v1::_ResendOrganizationInviteResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteOrganizationMemberRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteOrganizationMemberResponse_default_instance_._instance,
  &::viam::app::v1::_BillingAddress_default_instance_._instance,
  &::viam::app::v1::_EnableBillingServiceRequest_default_instance_._instance,
  &::viam::app::v1::_EnableBillingServiceResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateBillingServiceRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateBillingServiceResponse_default_instance_._instance,
  &::viam::app::v1::_GetBillingServiceConfigRequest_default_instance_._instance,
  &::viam::app::v1::_GetBillingServiceConfigResponse_default_instance_._instance,
  &::viam::app::v1::_DisableBillingServiceRequest_default_instance_._instance,
  &::viam::app::v1::_DisableBillingServiceResponse_default_instance_._instance,
  &::viam::app::v1::_OrganizationSetSupportEmailRequest_default_instance_._instance,
  &::viam::app::v1::_OrganizationSetSupportEmailResponse_default_instance_._instance,
  &::viam::app::v1::_OrganizationGetSupportEmailRequest_default_instance_._instance,
  &::viam::app::v1::_OrganizationGetSupportEmailResponse_default_instance_._instance,
  &::viam::app::v1::_OrganizationIdentity_default_instance_._instance,
  &::viam::app::v1::_LocationOrganization_default_instance_._instance,
  &::viam::app::v1::_LocationAuth_default_instance_._instance,
  &::viam::app::v1::_StorageConfig_default_instance_._instance,
  &::viam::app::v1::_Location_default_instance_._instance,
  &::viam::app::v1::_SharedSecret_default_instance_._instance,
  &::viam::app::v1::_CreateLocationRequest_default_instance_._instance,
  &::viam::app::v1::_CreateLocationResponse_default_instance_._instance,
  &::viam::app::v1::_GetLocationRequest_default_instance_._instance,
  &::viam::app::v1::_GetLocationResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateLocationRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateLocationResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteLocationRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteLocationResponse_default_instance_._instance,
  &::viam::app::v1::_GetOrganizationsWithAccessToLocationRequest_default_instance_._instance,
  &::viam::app::v1::_GetOrganizationsWithAccessToLocationResponse_default_instance_._instance,
  &::viam::app::v1::_ListLocationsRequest_default_instance_._instance,
  &::viam::app::v1::_ShareLocationRequest_default_instance_._instance,
  &::viam::app::v1::_ShareLocationResponse_default_instance_._instance,
  &::viam::app::v1::_UnshareLocationRequest_default_instance_._instance,
  &::viam::app::v1::_UnshareLocationResponse_default_instance_._instance,
  &::viam::app::v1::_ListLocationsResponse_default_instance_._instance,
  &::viam::app::v1::_CreateLocationSecretRequest_default_instance_._instance,
  &::viam::app::v1::_CreateLocationSecretResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteLocationSecretRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteLocationSecretResponse_default_instance_._instance,
  &::viam::app::v1::_LocationAuthRequest_default_instance_._instance,
  &::viam::app::v1::_LocationAuthResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotRequest_default_instance_._instance,
  &::viam::app::v1::_GetRoverRentalRobotsRequest_default_instance_._instance,
  &::viam::app::v1::_RoverRentalRobot_default_instance_._instance,
  &::viam::app::v1::_GetRoverRentalRobotsResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartsRequest_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartsResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartRequest_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartLogsRequest_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartLogsResponse_default_instance_._instance,
  &::viam::app::v1::_TailRobotPartLogsRequest_default_instance_._instance,
  &::viam::app::v1::_TailRobotPartLogsResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartHistoryRequest_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartHistoryResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateRobotPartRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateRobotPartResponse_default_instance_._instance,
  &::viam::app::v1::_NewRobotPartRequest_default_instance_._instance,
  &::viam::app::v1::_NewRobotPartResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotPartRequest_default_instance_._instance,
  &::viam::app::v1::_GetRobotAPIKeysRequest_default_instance_._instance,
  &::viam::app::v1::_APIKey_default_instance_._instance,
  &::viam::app::v1::_GetRobotAPIKeysResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotPartResponse_default_instance_._instance,
  &::viam::app::v1::_Fragment_default_instance_._instance,
  &::viam::app::v1::_FragmentHistoryEntry_default_instance_._instance,
  &::viam::app::v1::_FragmentError_default_instance_._instance,
  &::viam::app::v1::_FragmentUsage_default_instance_._instance,
  &::viam::app::v1::_ResolvedFragment_default_instance_._instance,
  &::viam::app::v1::_ListFragmentsRequest_default_instance_._instance,
  &::viam::app::v1::_ListFragmentsResponse_default_instance_._instance,
  &::viam::app::v1::_GetFragmentRequest_default_instance_._instance,
  &::viam::app::v1::_GetFragmentResponse_default_instance_._instance,
  &::viam::app::v1::_CreateFragmentRequest_default_instance_._instance,
  &::viam::app::v1::_CreateFragmentResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateFragmentRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateFragmentResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteFragmentRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteFragmentResponse_default_instance_._instance,
  &::viam::app::v1::_GetFragmentHistoryRequest_default_instance_._instance,
  &::viam::app::v1::_GetFragmentHistoryResponse_default_instance_._instance,
  &::viam::app::v1::_ListRobotsRequest_default_instance_._instance,
  &::viam::app::v1::_ListMachineFragmentsRequest_default_instance_._instance,
  &::viam::app::v1::_ListMachineFragmentsResponse_default_instance_._instance,
  &::viam::app::v1::_ListRobotsResponse_default_instance_._instance,
  &::viam::app::v1::_NewRobotRequest_default_instance_._instance,
  &::viam::app::v1::_NewRobotResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateRobotRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateRobotResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotResponse_default_instance_._instance,
  &::viam::app::v1::_MarkPartAsMainRequest_default_instance_._instance,
  &::viam::app::v1::_MarkPartAsMainResponse_default_instance_._instance,
  &::viam::app::v1::_MarkPartForRestartRequest_default_instance_._instance,
  &::viam::app::v1::_MarkPartForRestartResponse_default_instance_._instance,
  &::viam::app::v1::_CreateRobotPartSecretRequest_default_instance_._instance,
  &::viam::app::v1::_CreateRobotPartSecretResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotPartSecretRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotPartSecretResponse_default_instance_._instance,
  &::viam::app::v1::_Authorization_default_instance_._instance,
  &::viam::app::v1::_AddRoleRequest_default_instance_._instance,
  &::viam::app::v1::_AddRoleResponse_default_instance_._instance,
  &::viam::app::v1::_RemoveRoleRequest_default_instance_._instance,
  &::viam::app::v1::_RemoveRoleResponse_default_instance_._instance,
  &::viam::app::v1::_ChangeRoleRequest_default_instance_._instance,
  &::viam::app::v1::_ChangeRoleResponse_default_instance_._instance,
  &::viam::app::v1::_ListAuthorizationsRequest_default_instance_._instance,
  &::viam::app::v1::_ListAuthorizationsResponse_default_instance_._instance,
  &::viam::app::v1::_CheckPermissionsRequest_default_instance_._instance,
  &::viam::app::v1::_AuthorizedPermissions_default_instance_._instance,
  &::viam::app::v1::_CheckPermissionsResponse_default_instance_._instance,
  &::viam::app::v1::_ModuleVersion_default_instance_._instance,
  &::viam::app::v1::_ModuleMetadata_default_instance_._instance,
  &::viam::app::v1::_MLModelMetadata_default_instance_._instance,
  &::viam::app::v1::_MLTrainingVersion_default_instance_._instance,
  &::viam::app::v1::_MLTrainingMetadata_default_instance_._instance,
  &::viam::app::v1::_RegistryItem_default_instance_._instance,
  &::viam::app::v1::_GetRegistryItemRequest_default_instance_._instance,
  &::viam::app::v1::_GetRegistryItemResponse_default_instance_._instance,
  &::viam::app::v1::_CreateRegistryItemRequest_default_instance_._instance,
  &::viam::app::v1::_CreateRegistryItemResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateRegistryItemRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateRegistryItemResponse_default_instance_._instance,
  &::viam::app::v1::_ListRegistryItemsRequest_default_instance_._instance,
  &::viam::app::v1::_ListRegistryItemsResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteRegistryItemRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteRegistryItemResponse_default_instance_._instance,
  &::viam::app::v1::_TransferRegistryItemRequest_default_instance_._instance,
  &::viam::app::v1::_TransferRegistryItemResponse_default_instance_._instance,
  &::viam::app::v1::_CreateModuleRequest_default_instance_._instance,
  &::viam::app::v1::_CreateModuleResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateModuleRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateModuleResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateModuleMetadata_default_instance_._instance,
  &::viam::app::v1::_UpdateMLModelMetadata_default_instance_._instance,
  &::viam::app::v1::_UpdateMLTrainingMetadata_default_instance_._instance,
  &::viam::app::v1::_Model_default_instance_._instance,
  &::viam::app::v1::_ModuleFileInfo_default_instance_._instance,
  &::viam::app::v1::_UploadModuleFileRequest_default_instance_._instance,
  &::viam::app::v1::_UploadModuleFileResponse_default_instance_._instance,
  &::viam::app::v1::_GetModuleRequest_default_instance_._instance,
  &::viam::app::v1::_GetModuleResponse_default_instance_._instance,
  &::viam::app::v1::_Module_default_instance_._instance,
  &::viam::app::v1::_VersionHistory_default_instance_._instance,
  &::viam::app::v1::_Uploads_default_instance_._instance,
  &::viam::app::v1::_ListModulesRequest_default_instance_._instance,
  &::viam::app::v1::_ListModulesResponse_default_instance_._instance,
  &::viam::app::v1::_GetUserIDByEmailRequest_default_instance_._instance,
  &::viam::app::v1::_GetUserIDByEmailResponse_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationsByUserRequest_default_instance_._instance,
  &::viam::app::v1::_OrgDetails_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationsByUserResponse_default_instance_._instance,
  &::viam::app::v1::_SearchOrganizationsRequest_default_instance_._instance,
  &::viam::app::v1::_SearchOrganizationsResponse_default_instance_._instance,
  &::viam::app::v1::_CreateKeyRequest_default_instance_._instance,
  &::viam::app::v1::_CreateKeyResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteKeyRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteKeyResponse_default_instance_._instance,
  &::viam::app::v1::_RenameKeyRequest_default_instance_._instance,
  &::viam::app::v1::_RenameKeyResponse_default_instance_._instance,
  &::viam::app::v1::_AuthorizationDetails_default_instance_._instance,
  &::viam::app::v1::_APIKeyWithAuthorizations_default_instance_._instance,
  &::viam::app::v1::_ListKeysRequest_default_instance_._instance,
  &::viam::app::v1::_ListKeysResponse_default_instance_._instance,
  &::viam::app::v1::_RotateKeyRequest_default_instance_._instance,
  &::viam::app::v1::_RotateKeyResponse_default_instance_._instance,
  &::viam::app::v1::_CreateKeyFromExistingKeyAuthorizationsRequest_default_instance_._instance,
  &::viam::app::v1::_CreateKeyFromExistingKeyAuthorizationsResponse_default_instance_._instance,
  &::viam::app::v1::_OrganizationSetLogoRequest_default_instance_._instance,
  &::viam::app::v1::_OrganizationSetLogoResponse_default_instance_._instance,
  &::viam::app::v1::_OrganizationGetLogoRequest_default_instance_._instance,
  &::viam::app::v1::_OrganizationGetLogoResponse_default_instance_._instance,
  &::viam::app::v1::_EnableAuthServiceRequest_default_instance_._instance,
  &::viam::app::v1::_EnableAuthServiceResponse_default_instance_._instance,
  &::viam::app::v1::_DisableAuthServiceRequest_default_instance_._instance,
  &::viam::app::v1::_DisableAuthServiceResponse_default_instance_._instance,
  &::viam::app::v1::_CreateOAuthAppRequest_default_instance_._instance,
  &::viam::app::v1::_CreateOAuthAppResponse_default_instance_._instance,
  &::viam::app::v1::_ReadOAuthAppRequest_default_instance_._instance,
  &::viam::app::v1::_ReadOAuthAppResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateOAuthAppRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateOAuthAppResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteOAuthAppRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteOAuthAppResponse_default_instance_._instance,
  &::viam::app::v1::_ListOAuthAppsRequest_default_instance_._instance,
  &::viam::app::v1::_ListOAuthAppsResponse_default_instance_._instance,
  &::viam::app::v1::_OAuthConfig_default_instance_._instance,
};

const char descriptor_table_protodef_app_2fv1_2fapp_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020app/v1/app.proto\022\013viam.app.v1\032#app/mlt"
  "raining/v1/ml_training.proto\032\036app/packag"
  "es/v1/packages.proto\032\026common/v1/common.p"
  "roto\032\034google/protobuf/struct.proto\032\037goog"
  "le/protobuf/timestamp.proto\032\026tagger/v1/t"
  "agger.proto\"\354\002\n\005Robot\0223\n\002id\030\001 \001(\tB#\232\204\236\003\036"
  "bson:\"_id\" json:\"id,omitempty\"R\002id\0220\n\004na"
  "me\030\002 \001(\tB\034\232\204\236\003\027bson:\"name\" json:\"name\"R\004"
  "name\022@\n\010location\030\003 \001(\tB$\232\204\236\003\037bson:\"locat"
  "ion\" json:\"location\"R\010location\022g\n\013last_a"
  "ccess\030\004 \001(\0132\032.google.protobuf.TimestampB"
  "*\232\204\236\003%bson:\"last_access\" json:\"last_acce"
  "ss\"R\nlastAccess\022Q\n\ncreated_on\030\005 \001(\0132\032.go"
  "ogle.protobuf.TimestampB\026\232\204\236\003\021bson:\"crea"
  "ted_on\"R\tcreatedOn\"\257\010\n\tRobotPart\0223\n\002id\030\001"
  " \001(\tB#\232\204\236\003\036bson:\"_id\" json:\"id,omitempty"
  "\"R\002id\0220\n\004name\030\002 \001(\tB\034\232\204\236\003\027bson:\"name\" js"
  "on:\"name\"R\004name\022\?\n\010dns_name\030\n \001(\tB$\232\204\236\003\037"
  "bson:\"dns_name\" json:\"dns_name\"R\007dnsName"
  "\022B\n\006secret\030\003 \001(\tB*\232\204\236\003%bson:\"secret\" jso"
  "n:\"secret,omitempty\"R\006secret\0224\n\005robot\030\004 "
  "\001(\tB\036\232\204\236\003\031bson:\"robot\" json:\"robot\"R\005rob"
  "ot\022A\n\013location_id\030\014 \001(\tB \232\204\236\003\033bson:\"loca"
  "tion_id\" json:\"-\"R\nlocationId\022b\n\014robot_c"
  "onfig\030\005 \001(\0132\027.google.protobuf.StructB&\232\204"
  "\236\003!bson:\"config\" json:\"robot_config\"R\013ro"
  "botConfig\022g\n\013last_access\030\006 \001(\0132\032.google."
  "protobuf.TimestampB*\232\204\236\003%bson:\"last_acce"
  "ss\" json:\"last_access\"R\nlastAccess\022\177\n\022us"
  "er_supplied_info\030\007 \001(\0132\027.google.protobuf"
  ".StructB8\232\204\236\0033bson:\"user_supplied_info\" "
  "json:\"user_supplied_info\"R\020userSuppliedI"
  "nfo\022C\n\tmain_part\030\010 \001(\010B&\232\204\236\003!bson:\"main_"
  "part\" json:\"main_part\"R\010mainPart\022\022\n\004fqdn"
  "\030\t \001(\tR\004fqdn\022\035\n\nlocal_fqdn\030\013 \001(\tR\tlocalF"
  "qdn\022Q\n\ncreated_on\030\r \001(\0132\032.google.protobu"
  "f.TimestampB\026\232\204\236\003\021bson:\"created_on\"R\tcre"
  "atedOn\022H\n\007secrets\030\016 \003(\0132\031.viam.app.v1.Sh"
  "aredSecretB\023\232\204\236\003\016bson:\"secrets\"R\007secrets"
  "\022Z\n\014last_updated\030\017 \001(\0132\032.google.protobuf"
  ".TimestampB\033\232\204\236\003\026bson:\"last_updated_at\"R"
  "\013lastUpdated\"\370\002\n\025RobotPartHistoryEntry\0220"
  "\n\004part\030\001 \001(\tB\034\232\204\236\003\027bson:\"part\" json:\"par"
  "t\"R\004part\0224\n\005robot\030\002 \001(\tB\036\232\204\236\003\031bson:\"robo"
  "t\" json:\"robot\"R\005robot\022L\n\004when\030\003 \001(\0132\032.g"
  "oogle.protobuf.TimestampB\034\232\204\236\003\027bson:\"whe"
  "n\" json:\"when\"R\004when\022D\n\003old\030\004 \001(\0132\026.viam"
  ".app.v1.RobotPartB\032\232\204\236\003\025bson:\"old\" json:"
  "\"old\"R\003old\022c\n\tedited_by\030\005 \001(\0132\036.viam.app"
  ".v1.AuthenticatorInfoB&\232\204\236\003!bson:\"edited"
  "_by\" json:\"edited_by\"R\010editedBy\"\205\001\n\021Auth"
  "enticatorInfo\0223\n\004type\030\001 \001(\0162\037.viam.app.v"
  "1.AuthenticationTypeR\004type\022\024\n\005value\030\002 \001("
  "\tR\005value\022%\n\016is_deactivated\030\003 \001(\010R\risDeac"
  "tivated\"\032\n\030ListOrganizationsRequest\"\336\001\n\014"
  "Organization\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001"
  "(\tR\004name\0229\n\ncreated_on\030\003 \001(\0132\032.google.pr"
  "otobuf.TimestampR\tcreatedOn\022)\n\020public_na"
  "mespace\030\004 \001(\tR\017publicNamespace\022%\n\016defaul"
  "t_region\030\005 \001(\tR\rdefaultRegion\022\025\n\003cid\030\006 \001"
  "(\tH\000R\003cid\210\001\001B\006\n\004_cid\"\317\001\n\022OrganizationMem"
  "ber\022\027\n\007user_id\030\001 \001(\tR\006userId\022\026\n\006emails\030\002"
  " \003(\tR\006emails\0229\n\ndate_added\030\003 \001(\0132\032.googl"
  "e.protobuf.TimestampR\tdateAdded\022>\n\nlast_"
  "login\030\004 \001(\0132\032.google.protobuf.TimestampH"
  "\000R\tlastLogin\210\001\001B\r\n\013_last_login\"\\\n\031ListOr"
  "ganizationsResponse\022\?\n\rorganizations\030\001 \003"
  "(\0132\031.viam.app.v1.OrganizationR\rorganizat"
  "ions\"\322\001\n\022OrganizationInvite\022\'\n\017organizat"
  "ion_id\030\001 \001(\tR\016organizationId\022\024\n\005email\030\002 "
  "\001(\tR\005email\0229\n\ncreated_on\030\003 \001(\0132\032.google."
  "protobuf.TimestampR\tcreatedOn\022B\n\016authori"
  "zations\030\004 \003(\0132\032.viam.app.v1.Authorizatio"
  "nR\016authorizations\"/\n\031CreateOrganizationR"
  "equest\022\022\n\004name\030\001 \001(\tR\004name\"[\n\032CreateOrga"
  "nizationResponse\022=\n\014organization\030\001 \001(\0132\031"
  ".viam.app.v1.OrganizationR\014organization\""
  "A\n\026GetOrganizationRequest\022\'\n\017organizatio"
  "n_id\030\001 \001(\tR\016organizationId\"X\n\027GetOrganiz"
  "ationResponse\022=\n\014organization\030\001 \001(\0132\031.vi"
  "am.app.v1.OrganizationR\014organization\"X\n+"
  "GetOrganizationNamespaceAvailabilityRequ"
  "est\022)\n\020public_namespace\030\001 \001(\tR\017publicNam"
  "espace\"L\n,GetOrganizationNamespaceAvaila"
  "bilityResponse\022\034\n\tavailable\030\001 \001(\010R\tavail"
  "able\"\362\001\n\031UpdateOrganizationRequest\022\'\n\017or"
  "ganization_id\030\001 \001(\tR\016organizationId\022\027\n\004n"
  "ame\030\002 \001(\tH\000R\004name\210\001\001\022.\n\020public_namespace"
  "\030\003 \001(\tH\001R\017publicNamespace\210\001\001\022\033\n\006region\030\004"
  " \001(\tH\002R\006region\210\001\001\022\025\n\003cid\030\005 \001(\tH\003R\003cid\210\001\001"
  "B\007\n\005_nameB\023\n\021_public_namespaceB\t\n\007_regio"
  "nB\006\n\004_cid\"[\n\032UpdateOrganizationResponse\022"
  "=\n\014organization\030\001 \001(\0132\031.viam.app.v1.Orga"
  "nizationR\014organization\"D\n\031DeleteOrganiza"
  "tionRequest\022\'\n\017organization_id\030\001 \001(\tR\016or"
  "ganizationId\"\034\n\032DeleteOrganizationRespon"
  "se\"I\n\036ListOrganizationMembersRequest\022\'\n\017"
  "organization_id\030\001 \001(\tR\016organizationId\"\300\001"
  "\n\037ListOrganizationMembersResponse\022\'\n\017org"
  "anization_id\030\001 \001(\tR\016organizationId\0229\n\007me"
  "mbers\030\002 \003(\0132\037.viam.app.v1.OrganizationMe"
  "mberR\007members\0229\n\007invites\030\003 \003(\0132\037.viam.ap"
  "p.v1.OrganizationInviteR\007invites\"\353\001\n\037Cre"
  "ateOrganizationInviteRequest\022\'\n\017organiza"
  "tion_id\030\001 \001(\tR\016organizationId\022\024\n\005email\030\002"
  " \001(\tR\005email\022B\n\016authorizations\030\003 \003(\0132\032.vi"
  "am.app.v1.AuthorizationR\016authorizations\022"
  "/\n\021send_email_invite\030\004 \001(\010H\000R\017sendEmailI"
  "nvite\210\001\001B\024\n\022_send_email_invite\"[\n Create"
  "OrganizationInviteResponse\0227\n\006invite\030\001 \001"
  "(\0132\037.viam.app.v1.OrganizationInviteR\006inv"
  "ite\"\212\002\n-UpdateOrganizationInviteAuthoriz"
  "ationsRequest\022\'\n\017organization_id\030\001 \001(\tR\016"
  "organizationId\022\024\n\005email\030\002 \001(\tR\005email\022I\n\022"
  "add_authorizations\030\003 \003(\0132\032.viam.app.v1.A"
  "uthorizationR\021addAuthorizations\022O\n\025remov"
  "e_authorizations\030\004 \003(\0132\032.viam.app.v1.Aut"
  "horizationR\024removeAuthorizations\"i\n.Upda"
  "teOrganizationInviteAuthorizationsRespon"
  "se\0227\n\006invite\030\001 \001(\0132\037.viam.app.v1.Organiz"
  "ationInviteR\006invite\"`\n\037DeleteOrganizatio"
  "nInviteRequest\022\'\n\017organization_id\030\001 \001(\tR"
  "\016organizationId\022\024\n\005email\030\002 \001(\tR\005email\"\"\n"
  " DeleteOrganizationInviteResponse\"`\n\037Res"
  "endOrganizationInviteRequest\022\'\n\017organiza"
  "tion_id\030\001 \001(\tR\016organizationId\022\024\n\005email\030\002"
  " \001(\tR\005email\"[\n ResendOrganizationInviteR"
  "esponse\0227\n\006invite\030\001 \001(\0132\037.viam.app.v1.Or"
  "ganizationInviteR\006invite\"c\n\037DeleteOrgani"
  "zationMemberRequest\022\'\n\017organization_id\030\001"
  " \001(\tR\016organizationId\022\027\n\007user_id\030\002 \001(\tR\006u"
  "serId\"\"\n DeleteOrganizationMemberRespons"
  "e\"\322\001\n\016BillingAddress\022$\n\016address_line_1\030\001"
  " \001(\tR\014addressLine1\022)\n\016address_line_2\030\002 \001"
  "(\tH\000R\014addressLine2\210\001\001\022\022\n\004city\030\003 \001(\tR\004cit"
  "y\022\024\n\005state\030\004 \001(\tR\005state\022\030\n\007zipcode\030\005 \001(\t"
  "R\007zipcode\022\030\n\007country\030\006 \001(\tR\007countryB\021\n\017_"
  "address_line_2\"z\n\033EnableBillingServiceRe"
  "quest\022\025\n\006org_id\030\001 \001(\tR\005orgId\022D\n\017billing_"
  "address\030\002 \001(\0132\033.viam.app.v1.BillingAddre"
  "ssR\016billingAddress\"\036\n\034EnableBillingServi"
  "ceResponse\"z\n\033UpdateBillingServiceReques"
  "t\022\025\n\006org_id\030\001 \001(\tR\005orgId\022D\n\017billing_addr"
  "ess\030\002 \001(\0132\033.viam.app.v1.BillingAddressR\016"
  "billingAddress\"\036\n\034UpdateBillingServiceRe"
  "sponse\"7\n\036GetBillingServiceConfigRequest"
  "\022\025\n\006org_id\030\001 \001(\tR\005orgId\"\333\001\n\037GetBillingSe"
  "rviceConfigResponse\022D\n\017billing_address\030\001"
  " \001(\0132\033.viam.app.v1.BillingAddressR\016billi"
  "ngAddress\022#\n\rsupport_email\030\002 \001(\tR\014suppor"
  "tEmail\022\031\n\010logo_url\030\003 \001(\tR\007logoUrl\0222\n\025bil"
  "ling_dashboard_url\030\004 \001(\tR\023billingDashboa"
  "rdUrl\"5\n\034DisableBillingServiceRequest\022\025\n"
  "\006org_id\030\001 \001(\tR\005orgId\"\037\n\035DisableBillingSe"
  "rviceResponse\"Q\n\"OrganizationSetSupportE"
  "mailRequest\022\025\n\006org_id\030\001 \001(\tR\005orgId\022\024\n\005em"
  "ail\030\002 \001(\tR\005email\"%\n#OrganizationSetSuppo"
  "rtEmailResponse\";\n\"OrganizationGetSuppor"
  "tEmailRequest\022\025\n\006org_id\030\001 \001(\tR\005orgId\";\n#"
  "OrganizationGetSupportEmailResponse\022\024\n\005e"
  "mail\030\001 \001(\tR\005email\":\n\024OrganizationIdentit"
  "y\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\"Y\n"
  "\024LocationOrganization\022\'\n\017organization_id"
  "\030\001 \001(\tR\016organizationId\022\030\n\007primary\030\002 \001(\010R"
  "\007primary\"\200\001\n\014LocationAuth\022\032\n\006secret\030\001 \001("
  "\tB\002\030\001R\006secret\022\037\n\013location_id\030\002 \001(\tR\nloca"
  "tionId\0223\n\007secrets\030\003 \003(\0132\031.viam.app.v1.Sh"
  "aredSecretR\007secrets\"\'\n\rStorageConfig\022\026\n\006"
  "region\030\001 \001(\tR\006region\"\344\002\n\010Location\022\016\n\002id\030"
  "\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\022,\n\022parent_"
  "location_id\030\004 \001(\tR\020parentLocationId\022-\n\004a"
  "uth\030\005 \001(\0132\031.viam.app.v1.LocationAuthR\004au"
  "th\022G\n\rorganizations\030\006 \003(\0132!.viam.app.v1."
  "LocationOrganizationR\rorganizations\0229\n\nc"
  "reated_on\030\003 \001(\0132\032.google.protobuf.Timest"
  "ampR\tcreatedOn\022\037\n\013robot_count\030\007 \001(\005R\nrob"
  "otCount\0222\n\006config\030\010 \001(\0132\032.viam.app.v1.St"
  "orageConfigR\006config\"\320\002\n\014SharedSecret\022\036\n\002"
  "id\030\001 \001(\tB\016\232\204\236\003\tbson:\"id\"R\002id\022*\n\006secret\030\002"
  " \001(\tB\022\232\204\236\003\rbson:\"secret\"R\006secret\022c\n\ncrea"
  "ted_on\030\003 \001(\0132\032.google.protobuf.Timestamp"
  "B(\232\204\236\003#bson:\"created_on\" json:\"created_o"
  "n\"R\tcreatedOn\022H\n\005state\030\004 \001(\0162\037.viam.app."
  "v1.SharedSecret.StateB\021\232\204\236\003\014bson:\"state\""
  "R\005state\"E\n\005State\022\025\n\021STATE_UNSPECIFIED\020\000\022"
  "\021\n\rSTATE_ENABLED\020\001\022\022\n\016STATE_DISABLED\020\002\"\236"
  "\001\n\025CreateLocationRequest\022\'\n\017organization"
  "_id\030\001 \001(\tR\016organizationId\022\022\n\004name\030\002 \001(\tR"
  "\004name\0221\n\022parent_location_id\030\003 \001(\tH\000R\020par"
  "entLocationId\210\001\001B\025\n\023_parent_location_id\""
  "K\n\026CreateLocationResponse\0221\n\010location\030\001 "
  "\001(\0132\025.viam.app.v1.LocationR\010location\"5\n\022"
  "GetLocationRequest\022\037\n\013location_id\030\001 \001(\tR"
  "\nlocationId\"H\n\023GetLocationResponse\0221\n\010lo"
  "cation\030\001 \001(\0132\025.viam.app.v1.LocationR\010loc"
  "ation\"\314\001\n\025UpdateLocationRequest\022\037\n\013locat"
  "ion_id\030\001 \001(\tR\nlocationId\022\027\n\004name\030\002 \001(\tH\000"
  "R\004name\210\001\001\0221\n\022parent_location_id\030\003 \001(\tH\001R"
  "\020parentLocationId\210\001\001\022\033\n\006region\030\004 \001(\tH\002R\006"
  "region\210\001\001B\007\n\005_nameB\025\n\023_parent_location_i"
  "dB\t\n\007_region\"K\n\026UpdateLocationResponse\0221"
  "\n\010location\030\001 \001(\0132\025.viam.app.v1.LocationR"
  "\010location\"8\n\025DeleteLocationRequest\022\037\n\013lo"
  "cation_id\030\001 \001(\tR\nlocationId\"\030\n\026DeleteLoc"
  "ationResponse\"N\n+GetOrganizationsWithAcc"
  "essToLocationRequest\022\037\n\013location_id\030\001 \001("
  "\tR\nlocationId\"\212\001\n,GetOrganizationsWithAc"
  "cessToLocationResponse\022Z\n\027organization_i"
  "dentities\030\001 \003(\0132!.viam.app.v1.Organizati"
  "onIdentityR\026organizationIdentities\"\?\n\024Li"
  "stLocationsRequest\022\'\n\017organization_id\030\001 "
  "\001(\tR\016organizationId\"`\n\024ShareLocationRequ"
  "est\022\037\n\013location_id\030\001 \001(\tR\nlocationId\022\'\n\017"
  "organization_id\030\002 \001(\tR\016organizationId\"\027\n"
  "\025ShareLocationResponse\"b\n\026UnshareLocatio"
  "nRequest\022\037\n\013location_id\030\001 \001(\tR\nlocationI"
  "d\022\'\n\017organization_id\030\002 \001(\tR\016organization"
  "Id\"\031\n\027UnshareLocationResponse\"L\n\025ListLoc"
  "ationsResponse\0223\n\tlocations\030\001 \003(\0132\025.viam"
  ".app.v1.LocationR\tlocations\">\n\033CreateLoc"
  "ationSecretRequest\022\037\n\013location_id\030\001 \001(\tR"
  "\nlocationId\"M\n\034CreateLocationSecretRespo"
  "nse\022-\n\004auth\030\001 \001(\0132\031.viam.app.v1.Location"
  "AuthR\004auth\"[\n\033DeleteLocationSecretReques"
  "t\022\037\n\013location_id\030\001 \001(\tR\nlocationId\022\033\n\tse"
  "cret_id\030\002 \001(\tR\010secretId\"\036\n\034DeleteLocatio"
  "nSecretResponse\"6\n\023LocationAuthRequest\022\037"
  "\n\013location_id\030\001 \001(\tR\nlocationId\"E\n\024Locat"
  "ionAuthResponse\022-\n\004auth\030\001 \001(\0132\031.viam.app"
  ".v1.LocationAuthR\004auth\"!\n\017GetRobotReques"
  "t\022\016\n\002id\030\001 \001(\tR\002id\"4\n\033GetRoverRentalRobot"
  "sRequest\022\025\n\006org_id\030\001 \001(\tR\005orgId\"\232\001\n\020Rove"
  "rRentalRobot\022\031\n\010robot_id\030\001 \001(\tR\007robotId\022"
  "\037\n\013location_id\030\002 \001(\tR\nlocationId\022\035\n\nrobo"
  "t_name\030\003 \001(\tR\trobotName\022+\n\022robot_main_pa"
  "rt_id\030\004 \001(\tR\017robotMainPartId\"U\n\034GetRover"
  "RentalRobotsResponse\0225\n\006robots\030\001 \003(\0132\035.v"
  "iam.app.v1.RoverRentalRobotR\006robots\"<\n\020G"
  "etRobotResponse\022(\n\005robot\030\001 \001(\0132\022.viam.ap"
  "p.v1.RobotR\005robot\"1\n\024GetRobotPartsReques"
  "t\022\031\n\010robot_id\030\001 \001(\tR\007robotId\"E\n\025GetRobot"
  "PartsResponse\022,\n\005parts\030\001 \003(\0132\026.viam.app."
  "v1.RobotPartR\005parts\"%\n\023GetRobotPartReque"
  "st\022\016\n\002id\030\001 \001(\tR\002id\"c\n\024GetRobotPartRespon"
  "se\022*\n\004part\030\001 \001(\0132\026.viam.app.v1.RobotPart"
  "R\004part\022\037\n\013config_json\030\002 \001(\tR\nconfigJson\""
  "\212\003\n\027GetRobotPartLogsRequest\022\016\n\002id\030\001 \001(\tR"
  "\002id\022#\n\013errors_only\030\002 \001(\010B\002\030\001R\nerrorsOnly"
  "\022\033\n\006filter\030\003 \001(\tH\000R\006filter\210\001\001\022\"\n\npage_to"
  "ken\030\004 \001(\tH\001R\tpageToken\210\001\001\022\026\n\006levels\030\005 \003("
  "\tR\006levels\0225\n\005start\030\006 \001(\0132\032.google.protob"
  "uf.TimestampH\002R\005start\210\001\001\0221\n\003end\030\007 \001(\0132\032."
  "google.protobuf.TimestampH\003R\003end\210\001\001\022\031\n\005l"
  "imit\030\010 \001(\003H\004R\005limit\210\001\001\022\033\n\006source\030\t \001(\tH\005"
  "R\006source\210\001\001B\t\n\007_filterB\r\n\013_page_tokenB\010\n"
  "\006_startB\006\n\004_endB\010\n\006_limitB\t\n\007_source\"p\n\030"
  "GetRobotPartLogsResponse\022,\n\004logs\030\001 \003(\0132\030"
  ".viam.common.v1.LogEntryR\004logs\022&\n\017next_p"
  "age_token\030\002 \001(\tR\rnextPageToken\"s\n\030TailRo"
  "botPartLogsRequest\022\016\n\002id\030\001 \001(\tR\002id\022\037\n\013er"
  "rors_only\030\002 \001(\010R\nerrorsOnly\022\033\n\006filter\030\003 "
  "\001(\tH\000R\006filter\210\001\001B\t\n\007_filter\"I\n\031TailRobot"
  "PartLogsResponse\022,\n\004logs\030\001 \003(\0132\030.viam.co"
  "mmon.v1.LogEntryR\004logs\",\n\032GetRobotPartHi"
  "storyRequest\022\016\n\002id\030\001 \001(\tR\002id\"[\n\033GetRobot"
  "PartHistoryResponse\022<\n\007history\030\001 \003(\0132\".v"
  "iam.app.v1.RobotPartHistoryEntryR\007histor"
  "y\"x\n\026UpdateRobotPartRequest\022\016\n\002id\030\001 \001(\tR"
  "\002id\022\022\n\004name\030\002 \001(\tR\004name\022:\n\014robot_config\030"
  "\003 \001(\0132\027.google.protobuf.StructR\013robotCon"
  "fig\"E\n\027UpdateRobotPartResponse\022*\n\004part\030\001"
  " \001(\0132\026.viam.app.v1.RobotPartR\004part\"M\n\023Ne"
  "wRobotPartRequest\022\031\n\010robot_id\030\001 \001(\tR\007rob"
  "otId\022\033\n\tpart_name\030\002 \001(\tR\010partName\"/\n\024New"
  "RobotPartResponse\022\027\n\007part_id\030\001 \001(\tR\006part"
  "Id\"1\n\026DeleteRobotPartRequest\022\027\n\007part_id\030"
  "\001 \001(\tR\006partId\"3\n\026GetRobotAPIKeysRequest\022"
  "\031\n\010robot_id\030\001 \001(\tR\007robotId\"y\n\006APIKey\022\016\n\002"
  "id\030\001 \001(\tR\002id\022\020\n\003key\030\002 \001(\tR\003key\022\022\n\004name\030\003"
  " \001(\tR\004name\0229\n\ncreated_on\030\004 \001(\0132\032.google."
  "protobuf.TimestampR\tcreatedOn\"[\n\027GetRobo"
  "tAPIKeysResponse\022@\n\010api_keys\030\001 \003(\0132%.via"
  "m.app.v1.APIKeyWithAuthorizationsR\007apiKe"
  "ys\"\031\n\027DeleteRobotPartResponse\"\205\006\n\010Fragme"
  "nt\0223\n\002id\030\001 \001(\tB#\232\204\236\003\036bson:\"_id\" json:\"id"
  ",omitempty\"R\002id\0220\n\004name\030\002 \001(\tB\034\232\204\236\003\027bson"
  ":\"name\" json:\"name\"R\004name\022Y\n\010fragment\030\003 "
  "\001(\0132\027.google.protobuf.StructB$\232\204\236\003\037bson:"
  "\"fragment\" json:\"fragment\"R\010fragment\022Z\n\022"
  "organization_owner\030\004 \001(\tB+\232\204\236\003&bson:\"org"
  "anization_owner\" json:\"owner\"R\021organizat"
  "ionOwner\0228\n\006public\030\005 \001(\010B \232\204\236\003\033bson:\"pub"
  "lic\" json:\"public\"R\006public\022Q\n\ncreated_on"
  "\030\006 \001(\0132\032.google.protobuf.TimestampB\026\232\204\236\003"
  "\021bson:\"created_on\"R\tcreatedOn\022+\n\021organiz"
  "ation_name\030\007 \001(\tR\020organizationName\022(\n\020ro"
  "bot_part_count\030\t \001(\005R\016robotPartCount\022-\n\022"
  "organization_count\030\n \001(\005R\021organizationCo"
  "unt\022+\n\022only_used_by_owner\030\013 \001(\010R\017onlyUse"
  "dByOwner\022\?\n\nvisibility\030\014 \001(\0162\037.viam.app."
  "v1.FragmentVisibilityR\nvisibility\022Z\n\014las"
  "t_updated\030\r \001(\0132\032.google.protobuf.Timest"
  "ampB\033\232\204\236\003\026bson:\"last_updated_at\"R\013lastUp"
  "dated\"\370\003\n\024FragmentHistoryEntry\022@\n\010fragme"
  "nt\030\001 \001(\tB$\232\204\236\003\037bson:\"fragment\" json:\"fra"
  "gment\"R\010fragment\022_\n\tedited_on\030\002 \001(\0132\032.go"
  "ogle.protobuf.TimestampB&\232\204\236\003!bson:\"edit"
  "ed_on\" json:\"edited_on\"R\010editedOn\022C\n\003old"
  "\030\003 \001(\0132\025.viam.app.v1.FragmentB\032\232\204\236\003\025bson"
  ":\"old\" json:\"old\"R\003old\022c\n\tedited_by\030\004 \001("
  "\0132\036.viam.app.v1.AuthenticatorInfoB&\232\204\236\003!"
  "bson:\"edited_by\" json:\"edited_by\"R\010edite"
  "dBy\022@\n\010revision\030\005 \001(\tB$\232\204\236\003\037bson:\"revisi"
  "on\" json:\"revision\"R\010revision\022Q\n\006config\030"
  "\006 \001(\0132\027.google.protobuf.StructB \232\204\236\003\033bso"
  "n:\"config\" json:\"config\"R\006config\"\207\001\n\rFra"
  "gmentError\022=\n\nerror_type\030\001 \001(\0162\036.viam.ap"
  "p.v1.FragmentErrorTypeR\terrorType\022\037\n\013fra"
  "gment_id\030\002 \001(\tR\nfragmentId\022\026\n\006detail\030\003 \001"
  "(\tR\006detail\"\251\001\n\rFragmentUsage\022\037\n\013fragment"
  "_id\030\001 \001(\tR\nfragmentId\022$\n\rorganizations\030\002"
  " \001(\005R\rorganizations\022\032\n\010machines\030\003 \001(\005R\010m"
  "achines\0225\n\027machines_in_current_org\030\004 \001(\005"
  "R\024machinesInCurrentOrg\"\247\001\n\020ResolvedFragm"
  "ent\022\037\n\013fragment_id\030\001 \001(\tR\nfragmentId\022@\n\017"
  "resolved_config\030\002 \001(\0132\027.google.protobuf."
  "StructR\016resolvedConfig\0220\n\005error\030\003 \001(\0132\032."
  "viam.app.v1.FragmentErrorR\005error\"\262\001\n\024Lis"
  "tFragmentsRequest\022\'\n\017organization_id\030\001 \001"
  "(\tR\016organizationId\022\037\n\013show_public\030\002 \001(\010R"
  "\nshowPublic\022P\n\023fragment_visibility\030\003 \003(\016"
  "2\037.viam.app.v1.FragmentVisibilityR\022fragm"
  "entVisibility\"\221\001\n\025ListFragmentsResponse\022"
  "3\n\tfragments\030\001 \003(\0132\025.viam.app.v1.Fragmen"
  "tR\tfragments\022C\n\017fragment_usages\030\002 \003(\0132\032."
  "viam.app.v1.FragmentUsageR\016fragmentUsage"
  "s\"\\\n\022GetFragmentRequest\022\016\n\002id\030\001 \001(\tR\002id\022"
  "6\n\027current_organization_id\030\002 \001(\tR\025curren"
  "tOrganizationId\"\213\001\n\023GetFragmentResponse\022"
  "1\n\010fragment\030\001 \001(\0132\025.viam.app.v1.Fragment"
  "R\010fragment\022A\n\016fragment_usage\030\002 \001(\0132\032.via"
  "m.app.v1.FragmentUsageR\rfragmentUsage\"\332\001"
  "\n\025CreateFragmentRequest\022\022\n\004name\030\001 \001(\tR\004n"
  "ame\022/\n\006config\030\002 \001(\0132\027.google.protobuf.St"
  "ructR\006config\022\'\n\017organization_id\030\003 \001(\tR\016o"
  "rganizationId\022D\n\nvisibility\030\004 \001(\0162\037.viam"
  ".app.v1.FragmentVisibilityH\000R\nvisibility"
  "\210\001\001B\r\n\013_visibility\"K\n\026CreateFragmentResp"
  "onse\0221\n\010fragment\030\001 \001(\0132\025.viam.app.v1.Fra"
  "gmentR\010fragment\"\351\001\n\025UpdateFragmentReques"
  "t\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\022/\n"
  "\006config\030\003 \001(\0132\027.google.protobuf.StructR\006"
  "config\022\033\n\006public\030\004 \001(\010H\000R\006public\210\001\001\022D\n\nv"
  "isibility\030\005 \001(\0162\037.viam.app.v1.FragmentVi"
  "sibilityH\001R\nvisibility\210\001\001B\t\n\007_publicB\r\n\013"
  "_visibility\"K\n\026UpdateFragmentResponse\0221\n"
  "\010fragment\030\001 \001(\0132\025.viam.app.v1.FragmentR\010"
  "fragment\"\'\n\025DeleteFragmentRequest\022\016\n\002id\030"
  "\001 \001(\tR\002id\"\030\n\026DeleteFragmentResponse\"\221\001\n\031"
  "GetFragmentHistoryRequest\022\016\n\002id\030\001 \001(\tR\002i"
  "d\022\"\n\npage_token\030\002 \001(\tH\000R\tpageToken\210\001\001\022\"\n"
  "\npage_limit\030\003 \001(\003H\001R\tpageLimit\210\001\001B\r\n\013_pa"
  "ge_tokenB\r\n\013_page_limit\"\201\001\n\032GetFragmentH"
  "istoryResponse\022;\n\007history\030\001 \003(\0132!.viam.a"
  "pp.v1.FragmentHistoryEntryR\007history\022&\n\017n"
  "ext_page_token\030\002 \001(\tR\rnextPageToken\"4\n\021L"
  "istRobotsRequest\022\037\n\013location_id\030\001 \001(\tR\nl"
  "ocationId\"t\n\033ListMachineFragmentsRequest"
  "\022\035\n\nmachine_id\030\001 \001(\tR\tmachineId\0226\n\027addit"
  "ional_fragment_ids\030\002 \003(\tR\025additionalFrag"
  "mentIds\"\241\001\n\034ListMachineFragmentsResponse"
  "\0223\n\tfragments\030\001 \003(\0132\025.viam.app.v1.Fragme"
  "ntR\tfragments\022L\n\022resolved_fragments\030\002 \003("
  "\0132\035.viam.app.v1.ResolvedFragmentR\021resolv"
  "edFragments\"@\n\022ListRobotsResponse\022*\n\006rob"
  "ots\030\001 \003(\0132\022.viam.app.v1.RobotR\006robots\"A\n"
  "\017NewRobotRequest\022\022\n\004name\030\001 \001(\tR\004name\022\032\n\010"
  "location\030\002 \001(\tR\010location\"\"\n\020NewRobotResp"
  "onse\022\016\n\002id\030\001 \001(\tR\002id\"T\n\022UpdateRobotReque"
  "st\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\022\032"
  "\n\010location\030\003 \001(\tR\010location\"\?\n\023UpdateRobo"
  "tResponse\022(\n\005robot\030\001 \001(\0132\022.viam.app.v1.R"
  "obotR\005robot\"$\n\022DeleteRobotRequest\022\016\n\002id\030"
  "\001 \001(\tR\002id\"\025\n\023DeleteRobotResponse\"0\n\025Mark"
  "PartAsMainRequest\022\027\n\007part_id\030\001 \001(\tR\006part"
  "Id\"\030\n\026MarkPartAsMainResponse\"4\n\031MarkPart"
  "ForRestartRequest\022\027\n\007part_id\030\001 \001(\tR\006part"
  "Id\"\034\n\032MarkPartForRestartResponse\"7\n\034Crea"
  "teRobotPartSecretRequest\022\027\n\007part_id\030\001 \001("
  "\tR\006partId\"K\n\035CreateRobotPartSecretRespon"
  "se\022*\n\004part\030\001 \001(\0132\026.viam.app.v1.RobotPart"
  "R\004part\"T\n\034DeleteRobotPartSecretRequest\022\027"
  "\n\007part_id\030\001 \001(\tR\006partId\022\033\n\tsecret_id\030\002 \001"
  "(\tR\010secretId\"\037\n\035DeleteRobotPartSecretRes"
  "ponse\"\236\002\n\rAuthorization\022-\n\022authorization"
  "_type\030\001 \001(\tR\021authorizationType\022)\n\020author"
  "ization_id\030\002 \001(\tR\017authorizationId\022#\n\rres"
  "ource_type\030\003 \001(\tR\014resourceType\022\037\n\013resour"
  "ce_id\030\004 \001(\tR\nresourceId\022\037\n\013identity_id\030\005"
  " \001(\tR\nidentityId\022\'\n\017organization_id\030\006 \001("
  "\tR\016organizationId\022#\n\ridentity_type\030\007 \001(\t"
  "R\014identityType\"R\n\016AddRoleRequest\022@\n\rauth"
  "orization\030\001 \001(\0132\032.viam.app.v1.Authorizat"
  "ionR\rauthorization\"\021\n\017AddRoleResponse\"U\n"
  "\021RemoveRoleRequest\022@\n\rauthorization\030\001 \001("
  "\0132\032.viam.app.v1.AuthorizationR\rauthoriza"
  "tion\"\024\n\022RemoveRoleResponse\"\245\001\n\021ChangeRol"
  "eRequest\022G\n\021old_authorization\030\001 \001(\0132\032.vi"
  "am.app.v1.AuthorizationR\020oldAuthorizatio"
  "n\022G\n\021new_authorization\030\002 \001(\0132\032.viam.app."
  "v1.AuthorizationR\020newAuthorization\"\024\n\022Ch"
  "angeRoleResponse\"g\n\031ListAuthorizationsRe"
  "quest\022\'\n\017organization_id\030\001 \001(\tR\016organiza"
  "tionId\022!\n\014resource_ids\030\002 \003(\tR\013resourceId"
  "s\"`\n\032ListAuthorizationsResponse\022B\n\016autho"
  "rizations\030\001 \003(\0132\032.viam.app.v1.Authorizat"
  "ionR\016authorizations\"_\n\027CheckPermissionsR"
  "equest\022D\n\013permissions\030\001 \003(\0132\".viam.app.v"
  "1.AuthorizedPermissionsR\013permissions\"\177\n\025"
  "AuthorizedPermissions\022#\n\rresource_type\030\001"
  " \001(\tR\014resourceType\022\037\n\013resource_id\030\002 \001(\tR"
  "\nresourceId\022 \n\013permissions\030\003 \003(\tR\013permis"
  "sions\"u\n\030CheckPermissionsResponse\022Y\n\026aut"
  "horized_permissions\030\001 \003(\0132\".viam.app.v1."
  "AuthorizedPermissionsR\025authorizedPermiss"
  "ions\"\321\001\n\rModuleVersion\022\030\n\007version\030\001 \001(\tR"
  "\007version\022*\n\005files\030\002 \003(\0132\024.viam.app.v1.Up"
  "loadsR\005files\022*\n\006models\030\003 \003(\0132\022.viam.app."
  "v1.ModelR\006models\022\036\n\nentrypoint\030\004 \001(\tR\nen"
  "trypoint\022 \n\tfirst_run\030\005 \001(\tH\000R\010firstRun\210"
  "\001\001B\014\n\n_first_run\"\304\001\n\016ModuleMetadata\022*\n\006m"
  "odels\030\001 \003(\0132\022.viam.app.v1.ModelR\006models\022"
  "6\n\010versions\030\002 \003(\0132\032.viam.app.v1.ModuleVe"
  "rsionR\010versions\022\036\n\nentrypoint\030\003 \001(\tR\nent"
  "rypoint\022 \n\tfirst_run\030\004 \001(\tH\000R\010firstRun\210\001"
  "\001B\014\n\n_first_run\"\300\001\n\017MLModelMetadata\022\032\n\010v"
  "ersions\030\001 \003(\tR\010versions\022@\n\nmodel_type\030\002 "
  "\001(\0162!.viam.app.mltraining.v1.ModelTypeR\t"
  "modelType\022O\n\017model_framework\030\003 \001(\0162&.via"
  "m.app.mltraining.v1.ModelFrameworkR\016mode"
  "lFramework\"h\n\021MLTrainingVersion\022\030\n\007versi"
  "on\030\001 \001(\tR\007version\0229\n\ncreated_on\030\002 \001(\0132\032."
  "google.protobuf.TimestampR\tcreatedOn\"\377\001\n"
  "\022MLTrainingMetadata\022:\n\010versions\030\005 \003(\0132\036."
  "viam.app.v1.MLTrainingVersionR\010versions\022"
  "@\n\nmodel_type\030\002 \001(\0162!.viam.app.mltrainin"
  "g.v1.ModelTypeR\tmodelType\022O\n\017model_frame"
  "work\030\003 \001(\0162&.viam.app.mltraining.v1.Mode"
  "lFrameworkR\016modelFramework\022\024\n\005draft\030\004 \001("
  "\010R\005draftJ\004\010\001\020\002\"\214\007\n\014RegistryItem\022\027\n\007item_"
  "id\030\001 \001(\tR\006itemId\022\'\n\017organization_id\030\002 \001("
  "\tR\016organizationId\022)\n\020public_namespace\030\003 "
  "\001(\tR\017publicNamespace\022\022\n\004name\030\004 \001(\tR\004name"
  "\0225\n\004type\030\005 \001(\0162!.viam.app.packages.v1.Pa"
  "ckageTypeR\004type\0227\n\nvisibility\030\006 \001(\0162\027.vi"
  "am.app.v1.VisibilityR\nvisibility\022\020\n\003url\030"
  "\007 \001(\tR\003url\022 \n\013description\030\010 \001(\tR\013descrip"
  "tion\022*\n\021total_robot_usage\030\t \001(\003R\017totalRo"
  "botUsage\022;\n\032total_external_robot_usage\030\r"
  " \001(\003R\027totalExternalRobotUsage\0228\n\030total_o"
  "rganization_usage\030\n \001(\003R\026totalOrganizati"
  "onUsage\022I\n!total_external_organization_u"
  "sage\030\016 \001(\003R\036totalExternalOrganizationUsa"
  "ge\022F\n\017module_metadata\030\013 \001(\0132\033.viam.app.v"
  "1.ModuleMetadataH\000R\016moduleMetadata\022J\n\021ml"
  "_model_metadata\030\014 \001(\0132\034.viam.app.v1.MLMo"
  "delMetadataH\000R\017mlModelMetadata\022S\n\024ml_tra"
  "ining_metadata\030\022 \001(\0132\037.viam.app.v1.MLTra"
  "iningMetadataH\000R\022mlTrainingMetadata\0229\n\nc"
  "reated_at\030\017 \001(\0132\032.google.protobuf.Timest"
  "ampR\tcreatedAt\0229\n\nupdated_at\030\020 \001(\0132\032.goo"
  "gle.protobuf.TimestampR\tupdatedAtB\n\n\010met"
  "adata\"\237\001\n\026GetRegistryItemRequest\022\027\n\007item"
  "_id\030\001 \001(\tR\006itemId\022I\n\036include_markdown_do"
  "cumentation\030\002 \001(\010H\000R\034includeMarkdownDocu"
  "mentation\210\001\001B!\n\037_include_markdown_docume"
  "ntation\"H\n\027GetRegistryItemResponse\022-\n\004it"
  "em\030\001 \001(\0132\031.viam.app.v1.RegistryItemR\004ite"
  "m\"\217\001\n\031CreateRegistryItemRequest\022\'\n\017organ"
  "ization_id\030\001 \001(\tR\016organizationId\022\022\n\004name"
  "\030\002 \001(\tR\004name\0225\n\004type\030\003 \001(\0162!.viam.app.pa"
  "ckages.v1.PackageTypeR\004type\"\034\n\032CreateReg"
  "istryItemResponse\"\223\004\n\031UpdateRegistryItem"
  "Request\022\027\n\007item_id\030\001 \001(\tR\006itemId\0225\n\004type"
  "\030\002 \001(\0162!.viam.app.packages.v1.PackageTyp"
  "eR\004type\022 \n\013description\030\003 \001(\tR\013descriptio"
  "n\0227\n\nvisibility\030\004 \001(\0162\027.viam.app.v1.Visi"
  "bilityR\nvisibility\022\025\n\003url\030\005 \001(\tH\001R\003url\210\001"
  "\001\022Y\n\026module_update_metadata\030\006 \001(\0132!.viam"
  ".app.v1.UpdateModuleMetadataH\000R\024moduleUp"
  "dateMetadata\022]\n\030ml_model_update_metadata"
  "\030\007 \001(\0132\".viam.app.v1.UpdateMLModelMetada"
  "taH\000R\025mlModelUpdateMetadata\022f\n\033ml_traini"
  "ng_update_metadata\030\010 \001(\0132%.viam.app.v1.U"
  "pdateMLTrainingMetadataH\000R\030mlTrainingUpd"
  "ateMetadataB\n\n\010metadataB\006\n\004_url\"\034\n\032Updat"
  "eRegistryItemResponse\"\261\004\n\030ListRegistryIt"
  "emsRequest\022,\n\017organization_id\030\001 \001(\tH\000R\016o"
  "rganizationId\210\001\001\0227\n\005types\030\002 \003(\0162!.viam.a"
  "pp.packages.v1.PackageTypeR\005types\022;\n\014vis"
  "ibilities\030\003 \003(\0162\027.viam.app.v1.Visibility"
  "R\014visibilities\022\034\n\tplatforms\030\004 \003(\tR\tplatf"
  "orms\022;\n\010statuses\030\005 \003(\0162\037.viam.app.v1.Reg"
  "istryItemStatusR\010statuses\022$\n\013search_term"
  "\030\006 \001(\tH\001R\nsearchTerm\210\001\001\022\"\n\npage_token\030\007 "
  "\001(\tH\002R\tpageToken\210\001\001\022+\n\021public_namespaces"
  "\030\010 \003(\tR\020publicNamespaces\022I\n\036include_mark"
  "down_documentation\030\t \001(\010H\003R\034includeMarkd"
  "ownDocumentation\210\001\001B\022\n\020_organization_idB"
  "\016\n\014_search_termB\r\n\013_page_tokenB!\n\037_inclu"
  "de_markdown_documentation\"L\n\031ListRegistr"
  "yItemsResponse\022/\n\005items\030\001 \003(\0132\031.viam.app"
  ".v1.RegistryItemR\005items\"4\n\031DeleteRegistr"
  "yItemRequest\022\027\n\007item_id\030\001 \001(\tR\006itemId\"\034\n"
  "\032DeleteRegistryItemResponse\"h\n\033TransferR"
  "egistryItemRequest\022\027\n\007item_id\030\001 \001(\tR\006ite"
  "mId\0220\n\024new_public_namespace\030\002 \001(\tR\022newPu"
  "blicNamespace\"\036\n\034TransferRegistryItemRes"
  "ponse\"R\n\023CreateModuleRequest\022\'\n\017organiza"
  "tion_id\030\001 \001(\tR\016organizationId\022\022\n\004name\030\002 "
  "\001(\tR\004name\"E\n\024CreateModuleResponse\022\033\n\tmod"
  "ule_id\030\001 \001(\tR\010moduleId\022\020\n\003url\030\002 \001(\tR\003url"
  "\"\233\002\n\023UpdateModuleRequest\022\033\n\tmodule_id\030\001 "
  "\001(\tR\010moduleId\0227\n\nvisibility\030\002 \001(\0162\027.viam"
  ".app.v1.VisibilityR\nvisibility\022\020\n\003url\030\003 "
  "\001(\tR\003url\022 \n\013description\030\004 \001(\tR\013descripti"
  "on\022*\n\006models\030\005 \003(\0132\022.viam.app.v1.ModelR\006"
  "models\022\036\n\nentrypoint\030\006 \001(\tR\nentrypoint\022 "
  "\n\tfirst_run\030\007 \001(\tH\000R\010firstRun\210\001\001B\014\n\n_fir"
  "st_run\"(\n\024UpdateModuleResponse\022\020\n\003url\030\001 "
  "\001(\tR\003url\"b\n\024UpdateModuleMetadata\022*\n\006mode"
  "ls\030\001 \003(\0132\022.viam.app.v1.ModelR\006models\022\036\n\n"
  "entrypoint\030\002 \001(\tR\nentrypoint\"\252\001\n\025UpdateM"
  "LModelMetadata\022@\n\nmodel_type\030\001 \001(\0162!.via"
  "m.app.mltraining.v1.ModelTypeR\tmodelType"
  "\022O\n\017model_framework\030\002 \001(\0162&.viam.app.mlt"
  "raining.v1.ModelFrameworkR\016modelFramewor"
  "k\"\303\001\n\030UpdateMLTrainingMetadata\022@\n\nmodel_"
  "type\030\001 \001(\0162!.viam.app.mltraining.v1.Mode"
  "lTypeR\tmodelType\022O\n\017model_framework\030\002 \001("
  "\0162&.viam.app.mltraining.v1.ModelFramewor"
  "kR\016modelFramework\022\024\n\005draft\030\003 \001(\010R\005draft\""
  "\275\001\n\005Model\022\020\n\003api\030\001 \001(\tR\003api\022\024\n\005model\030\002 \001"
  "(\tR\005model\022:\n\026markdown_documentation\030\003 \001("
  "\tH\000R\025markdownDocumentation\210\001\001\022%\n\013descrip"
  "tion\030\004 \001(\tH\001R\013description\210\001\001B\031\n\027_markdow"
  "n_documentationB\016\n\014_description\"\210\001\n\016Modu"
  "leFileInfo\022\033\n\tmodule_id\030\001 \001(\tR\010moduleId\022"
  "\030\n\007version\030\002 \001(\tR\007version\022\032\n\010platform\030\003 "
  "\001(\tR\010platform\022#\n\rplatform_tags\030\005 \003(\tR\014pl"
  "atformTags\"\207\001\n\027UploadModuleFileRequest\022G"
  "\n\020module_file_info\030\001 \001(\0132\033.viam.app.v1.M"
  "oduleFileInfoH\000R\016moduleFileInfo\022\024\n\004file\030"
  "\002 \001(\014H\000R\004fileB\r\n\013module_file\",\n\030UploadMo"
  "duleFileResponse\022\020\n\003url\030\001 \001(\tR\003url\"\235\001\n\020G"
  "etModuleRequest\022\033\n\tmodule_id\030\001 \001(\tR\010modu"
  "leId\022I\n\036include_markdown_documentation\030\002"
  " \001(\010H\000R\034includeMarkdownDocumentation\210\001\001B"
  "!\n\037_include_markdown_documentation\"@\n\021Ge"
  "tModuleResponse\022+\n\006module\030\001 \001(\0132\023.viam.a"
  "pp.v1.ModuleR\006module\"\225\004\n\006Module\022\033\n\tmodul"
  "e_id\030\001 \001(\tR\010moduleId\022\022\n\004name\030\002 \001(\tR\004name"
  "\0227\n\nvisibility\030\003 \001(\0162\027.viam.app.v1.Visib"
  "ilityR\nvisibility\0227\n\010versions\030\004 \003(\0132\033.vi"
  "am.app.v1.VersionHistoryR\010versions\022\020\n\003ur"
  "l\030\005 \001(\tR\003url\022 \n\013description\030\006 \001(\tR\013descr"
  "iption\022*\n\006models\030\007 \003(\0132\022.viam.app.v1.Mod"
  "elR\006models\022*\n\021total_robot_usage\030\010 \001(\003R\017t"
  "otalRobotUsage\0228\n\030total_organization_usa"
  "ge\030\t \001(\003R\026totalOrganizationUsage\022\'\n\017orga"
  "nization_id\030\n \001(\tR\016organizationId\022\036\n\nent"
  "rypoint\030\013 \001(\tR\nentrypoint\022)\n\020public_name"
  "space\030\014 \001(\tR\017publicNamespace\022 \n\tfirst_ru"
  "n\030\r \001(\tH\000R\010firstRun\210\001\001B\014\n\n_first_run\"\322\001\n"
  "\016VersionHistory\022\030\n\007version\030\001 \001(\tR\007versio"
  "n\022*\n\005files\030\002 \003(\0132\024.viam.app.v1.UploadsR\005"
  "files\022*\n\006models\030\003 \003(\0132\022.viam.app.v1.Mode"
  "lR\006models\022\036\n\nentrypoint\030\004 \001(\tR\nentrypoin"
  "t\022 \n\tfirst_run\030\005 \001(\tH\000R\010firstRun\210\001\001B\014\n\n_"
  "first_run\"b\n\007Uploads\022\032\n\010platform\030\001 \001(\tR\010"
  "platform\022;\n\013uploaded_at\030\002 \001(\0132\032.google.p"
  "rotobuf.TimestampR\nuploadedAt\"\304\001\n\022ListMo"
  "dulesRequest\022,\n\017organization_id\030\001 \001(\tH\000R"
  "\016organizationId\210\001\001\022I\n\036include_markdown_d"
  "ocumentation\030\002 \001(\010H\001R\034includeMarkdownDoc"
  "umentation\210\001\001B\022\n\020_organization_idB!\n\037_in"
  "clude_markdown_documentation\"D\n\023ListModu"
  "lesResponse\022-\n\007modules\030\001 \003(\0132\023.viam.app."
  "v1.ModuleR\007modules\"/\n\027GetUserIDByEmailRe"
  "quest\022\024\n\005email\030\001 \001(\tR\005email\"3\n\030GetUserID"
  "ByEmailResponse\022\027\n\007user_id\030\001 \001(\tR\006userId"
  "\"9\n\036ListOrganizationsByUserRequest\022\027\n\007us"
  "er_id\030\001 \001(\tR\006userId\"\255\001\n\nOrgDetails\022\025\n\006or"
  "g_id\030\001 \001(\tR\005orgId\022\031\n\010org_name\030\002 \001(\tR\007org"
  "Name\022\034\n\007org_cid\030\003 \001(\tH\000R\006orgCid\210\001\001\022.\n\020pu"
  "blic_namespace\030\004 \001(\tH\001R\017publicNamespace\210"
  "\001\001B\n\n\010_org_cidB\023\n\021_public_namespace\"N\n\037L"
  "istOrganizationsByUserResponse\022+\n\004orgs\030\001"
  " \003(\0132\027.viam.app.v1.OrgDetailsR\004orgs\"\324\001\n\032"
  "SearchOrganizationsRequest\022\032\n\006org_id\030\001 \001"
  "(\tH\000R\005orgId\210\001\001\022\036\n\010org_name\030\002 \001(\tH\001R\007orgN"
  "ame\210\001\001\022\025\n\003cid\030\003 \001(\tH\002R\003cid\210\001\001\022.\n\020public_"
  "namespace\030\004 \001(\tH\003R\017publicNamespace\210\001\001B\t\n"
  "\007_org_idB\013\n\t_org_nameB\006\n\004_cidB\023\n\021_public"
  "_namespace\"\\\n\033SearchOrganizationsRespons"
  "e\022=\n\rorganizations\030\001 \003(\0132\027.viam.app.v1.O"
  "rgDetailsR\rorganizations\"j\n\020CreateKeyReq"
  "uest\022B\n\016authorizations\030\001 \003(\0132\032.viam.app."
  "v1.AuthorizationR\016authorizations\022\022\n\004name"
  "\030\002 \001(\tR\004name\"5\n\021CreateKeyResponse\022\020\n\003key"
  "\030\001 \001(\tR\003key\022\016\n\002id\030\002 \001(\tR\002id\"\"\n\020DeleteKey"
  "Request\022\016\n\002id\030\001 \001(\tR\002id\"\023\n\021DeleteKeyResp"
  "onse\"6\n\020RenameKeyRequest\022\016\n\002id\030\001 \001(\tR\002id"
  "\022\022\n\004name\030\002 \001(\tR\004name\"7\n\021RenameKeyRespons"
  "e\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\"\315\001"
  "\n\024AuthorizationDetails\022-\n\022authorization_"
  "type\030\001 \001(\tR\021authorizationType\022)\n\020authori"
  "zation_id\030\002 \001(\tR\017authorizationId\022#\n\rreso"
  "urce_type\030\003 \001(\tR\014resourceType\022\037\n\013resourc"
  "e_id\030\004 \001(\tR\nresourceId\022\025\n\006org_id\030\005 \001(\tR\005"
  "orgId\"\223\001\n\030APIKeyWithAuthorizations\022,\n\007ap"
  "i_key\030\001 \001(\0132\023.viam.app.v1.APIKeyR\006apiKey"
  "\022I\n\016authorizations\030\002 \003(\0132!.viam.app.v1.A"
  "uthorizationDetailsR\016authorizations\"(\n\017L"
  "istKeysRequest\022\025\n\006org_id\030\001 \001(\tR\005orgId\"T\n"
  "\020ListKeysResponse\022@\n\010api_keys\030\001 \003(\0132%.vi"
  "am.app.v1.APIKeyWithAuthorizationsR\007apiK"
  "eys\"\"\n\020RotateKeyRequest\022\016\n\002id\030\001 \001(\tR\002id\""
  "5\n\021RotateKeyResponse\022\016\n\002id\030\001 \001(\tR\002id\022\020\n\003"
  "key\030\002 \001(\tR\003key\"\?\n-CreateKeyFromExistingK"
  "eyAuthorizationsRequest\022\016\n\002id\030\001 \001(\tR\002id\""
  "R\n.CreateKeyFromExistingKeyAuthorization"
  "sResponse\022\016\n\002id\030\001 \001(\tR\002id\022\020\n\003key\030\002 \001(\tR\003"
  "key\"G\n\032OrganizationSetLogoRequest\022\025\n\006org"
  "_id\030\001 \001(\tR\005orgId\022\022\n\004logo\030\002 \001(\014R\004logo\"\035\n\033"
  "OrganizationSetLogoResponse\"3\n\032Organizat"
  "ionGetLogoRequest\022\025\n\006org_id\030\001 \001(\tR\005orgId"
  "\"/\n\033OrganizationGetLogoResponse\022\020\n\003url\030\001"
  " \001(\tR\003url\"1\n\030EnableAuthServiceRequest\022\025\n"
  "\006org_id\030\001 \001(\tR\005orgId\"\033\n\031EnableAuthServic"
  "eResponse\"2\n\031DisableAuthServiceRequest\022\025"
  "\n\006org_id\030\001 \001(\tR\005orgId\"\034\n\032DisableAuthServ"
  "iceResponse\"\214\001\n\025CreateOAuthAppRequest\022\025\n"
  "\006org_id\030\001 \001(\tR\005orgId\022\037\n\013client_name\030\002 \001("
  "\tR\nclientName\022;\n\014oauth_config\030\003 \001(\0132\030.vi"
  "am.app.v1.OAuthConfigR\013oauthConfig\"Z\n\026Cr"
  "eateOAuthAppResponse\022\033\n\tclient_id\030\001 \001(\tR"
  "\010clientId\022#\n\rclient_secret\030\002 \001(\tR\014client"
  "Secret\"I\n\023ReadOAuthAppRequest\022\025\n\006org_id\030"
  "\001 \001(\tR\005orgId\022\033\n\tclient_id\030\002 \001(\tR\010clientI"
  "d\"\231\001\n\024ReadOAuthAppResponse\022\037\n\013client_nam"
  "e\030\001 \001(\tR\nclientName\022#\n\rclient_secret\030\002 \001"
  "(\tR\014clientSecret\022;\n\014oauth_config\030\003 \001(\0132\030"
  ".viam.app.v1.OAuthConfigR\013oauthConfig\"\251\001"
  "\n\025UpdateOAuthAppRequest\022\025\n\006org_id\030\001 \001(\tR"
  "\005orgId\022\033\n\tclient_id\030\002 \001(\tR\010clientId\022\037\n\013c"
  "lient_name\030\003 \001(\tR\nclientName\022;\n\014oauth_co"
  "nfig\030\004 \001(\0132\030.viam.app.v1.OAuthConfigR\013oa"
  "uthConfig\"\030\n\026UpdateOAuthAppResponse\"K\n\025D"
  "eleteOAuthAppRequest\022\025\n\006org_id\030\001 \001(\tR\005or"
  "gId\022\033\n\tclient_id\030\002 \001(\tR\010clientId\"\030\n\026Dele"
  "teOAuthAppResponse\"-\n\024ListOAuthAppsReque"
  "st\022\025\n\006org_id\030\001 \001(\tR\005orgId\"6\n\025ListOAuthAp"
  "psResponse\022\035\n\nclient_ids\030\001 \003(\tR\tclientId"
  "s\"\366\002\n\013OAuthConfig\022V\n\025client_authenticati"
  "on\030\001 \001(\0162!.viam.app.v1.ClientAuthenticat"
  "ionR\024clientAuthentication\022%\n\004pkce\030\002 \001(\0162"
  "\021.viam.app.v1.PKCER\004pkce\022A\n\016url_validati"
  "on\030\003 \001(\0162\032.viam.app.v1.URLValidationR\rur"
  "lValidation\022\037\n\013origin_uris\030\004 \003(\tR\norigin"
  "Uris\022#\n\rredirect_uris\030\005 \003(\tR\014redirectUri"
  "s\022\035\n\nlogout_uri\030\006 \001(\tR\tlogoutUri\022@\n\016enab"
  "led_grants\030\007 \003(\0162\031.viam.app.v1.EnabledGr"
  "antR\renabledGrants*\321\001\n\022AuthenticationTyp"
  "e\022#\n\037AUTHENTICATION_TYPE_UNSPECIFIED\020\000\022!"
  "\n\035AUTHENTICATION_TYPE_WEB_OAUTH\020\001\022\037\n\033AUT"
  "HENTICATION_TYPE_API_KEY\020\002\022)\n%AUTHENTICA"
  "TION_TYPE_ROBOT_PART_SECRET\020\003\022\'\n#AUTHENT"
  "ICATION_TYPE_LOCATION_SECRET\020\004*\243\001\n\022Fragm"
  "entVisibility\022#\n\037FRAGMENT_VISIBILITY_UNS"
  "PECIFIED\020\000\022\037\n\033FRAGMENT_VISIBILITY_PRIVAT"
  "E\020\001\022\036\n\032FRAGMENT_VISIBILITY_PUBLIC\020\002\022\'\n#F"
  "RAGMENT_VISIBILITY_PUBLIC_UNLISTED\020\003*\335\001\n"
  "\021FragmentErrorType\022#\n\037FRAGMENT_ERROR_TYP"
  "E_UNSPECIFIED\020\000\022!\n\035FRAGMENT_ERROR_TYPE_N"
  "O_ACCESS\020\001\022.\n*FRAGMENT_ERROR_TYPE_NESTIN"
  "G_LIMIT_EXCEEDED\020\002\022(\n$FRAGMENT_ERROR_TYP"
  "E_CHILD_ID_INVALID\020\003\022&\n\"FRAGMENT_ERROR_T"
  "YPE_CYCLE_DETECTED\020\004*\207\001\n\022RegistryItemSta"
  "tus\022$\n REGISTRY_ITEM_STATUS_UNSPECIFIED\020"
  "\000\022\"\n\036REGISTRY_ITEM_STATUS_PUBLISHED\020\001\022\'\n"
  "#REGISTRY_ITEM_STATUS_IN_DEVELOPMENT\020\002*w"
  "\n\nVisibility\022\032\n\026VISIBILITY_UNSPECIFIED\020\000"
  "\022\026\n\022VISIBILITY_PRIVATE\020\001\022\025\n\021VISIBILITY_P"
  "UBLIC\020\002\022\036\n\032VISIBILITY_PUBLIC_UNLISTED\020\003*"
  "\301\001\n\024ClientAuthentication\022%\n!CLIENT_AUTHE"
  "NTICATION_UNSPECIFIED\020\000\022\"\n\036CLIENT_AUTHEN"
  "TICATION_REQUIRED\020\001\022&\n\"CLIENT_AUTHENTICA"
  "TION_NOT_REQUIRED\020\002\0226\n2CLIENT_AUTHENTICA"
  "TION_NOT_REQUIRED_WHEN_USING_PKCE\020\003*~\n\004P"
  "KCE\022\024\n\020PKCE_UNSPECIFIED\020\000\022\021\n\rPKCE_REQUIR"
  "ED\020\001\022\025\n\021PKCE_NOT_REQUIRED\020\002\0226\n2PKCE_NOT_"
  "REQUIRED_WHEN_USING_CLIENT_AUTHENTICATIO"
  "N\020\003*s\n\rURLValidation\022\036\n\032URL_VALIDATION_U"
  "NSPECIFIED\020\000\022\036\n\032URL_VALIDATION_EXACT_MAT"
  "CH\020\001\022\"\n\036URL_VALIDATION_ALLOW_WILDCARDS\020\002"
  "*\313\001\n\014EnabledGrant\022\035\n\031ENABLED_GRANT_UNSPE"
  "CIFIED\020\000\022$\n ENABLED_GRANT_AUTHORIZATION_"
  "CODE\020\001\022\032\n\026ENABLED_GRANT_IMPLICIT\020\002\022\032\n\026EN"
  "ABLED_GRANT_PASSWORD\020\003\022\037\n\033ENABLED_GRANT_"
  "REFRESH_TOKEN\020\004\022\035\n\031ENABLED_GRANT_DEVICE_"
  "CODE\020\0052\211E\n\nAppService\022_\n\020GetUserIDByEmai"
  "l\022$.viam.app.v1.GetUserIDByEmailRequest\032"
  "%.viam.app.v1.GetUserIDByEmailResponse\022e"
  "\n\022CreateOrganization\022&.viam.app.v1.Creat"
  "eOrganizationRequest\032\'.viam.app.v1.Creat"
  "eOrganizationResponse\022b\n\021ListOrganizatio"
  "ns\022%.viam.app.v1.ListOrganizationsReques"
  "t\032&.viam.app.v1.ListOrganizationsRespons"
  "e\022\233\001\n$GetOrganizationsWithAccessToLocati"
  "on\0228.viam.app.v1.GetOrganizationsWithAcc"
  "essToLocationRequest\0329.viam.app.v1.GetOr"
  "ganizationsWithAccessToLocationResponse\022"
  "t\n\027ListOrganizationsByUser\022+.viam.app.v1"
  ".ListOrganizationsByUserRequest\032,.viam.a"
  "pp.v1.ListOrganizationsByUserResponse\022h\n"
  "\023SearchOrganizations\022\'.viam.app.v1.Searc"
  "hOrganizationsRequest\032(.viam.app.v1.Sear"
  "chOrganizationsResponse\022\\\n\017GetOrganizati"
  "on\022#.viam.app.v1.GetOrganizationRequest\032"
  "$.viam.app.v1.GetOrganizationResponse\022\233\001"
  "\n$GetOrganizationNamespaceAvailability\0228"
  ".viam.app.v1.GetOrganizationNamespaceAva"
  "ilabilityRequest\0329.viam.app.v1.GetOrgani"
  "zationNamespaceAvailabilityResponse\022e\n\022U"
  "pdateOrganization\022&.viam.app.v1.UpdateOr"
  "ganizationRequest\032\'.viam.app.v1.UpdateOr"
  "ganizationResponse\022e\n\022DeleteOrganization"
  "\022&.viam.app.v1.DeleteOrganizationRequest"
  "\032\'.viam.app.v1.DeleteOrganizationRespons"
  "e\022t\n\027ListOrganizationMembers\022+.viam.app."
  "v1.ListOrganizationMembersRequest\032,.viam"
  ".app.v1.ListOrganizationMembersResponse\022"
  "w\n\030CreateOrganizationInvite\022,.viam.app.v"
  "1.CreateOrganizationInviteRequest\032-.viam"
  ".app.v1.CreateOrganizationInviteResponse"
  "\022\241\001\n&UpdateOrganizationInviteAuthorizati"
  "ons\022:.viam.app.v1.UpdateOrganizationInvi"
  "teAuthorizationsRequest\032;.viam.app.v1.Up"
  "dateOrganizationInviteAuthorizationsResp"
  "onse\022w\n\030DeleteOrganizationMember\022,.viam."
  "app.v1.DeleteOrganizationMemberRequest\032-"
  ".viam.app.v1.DeleteOrganizationMemberRes"
  "ponse\022w\n\030DeleteOrganizationInvite\022,.viam"
  ".app.v1.DeleteOrganizationInviteRequest\032"
  "-.viam.app.v1.DeleteOrganizationInviteRe"
  "sponse\022w\n\030ResendOrganizationInvite\022,.via"
  "m.app.v1.ResendOrganizationInviteRequest"
  "\032-.viam.app.v1.ResendOrganizationInviteR"
  "esponse\022k\n\024EnableBillingService\022(.viam.a"
  "pp.v1.EnableBillingServiceRequest\032).viam"
  ".app.v1.EnableBillingServiceResponse\022n\n\025"
  "DisableBillingService\022).viam.app.v1.Disa"
  "bleBillingServiceRequest\032*.viam.app.v1.D"
  "isableBillingServiceResponse\022k\n\024UpdateBi"
  "llingService\022(.viam.app.v1.UpdateBilling"
  "ServiceRequest\032).viam.app.v1.UpdateBilli"
  "ngServiceResponse\022t\n\027GetBillingServiceCo"
  "nfig\022+.viam.app.v1.GetBillingServiceConf"
  "igRequest\032,.viam.app.v1.GetBillingServic"
  "eConfigResponse\022\200\001\n\033OrganizationSetSuppo"
  "rtEmail\022/.viam.app.v1.OrganizationSetSup"
  "portEmailRequest\0320.viam.app.v1.Organizat"
  "ionSetSupportEmailResponse\022\200\001\n\033Organizat"
  "ionGetSupportEmail\022/.viam.app.v1.Organiz"
  "ationGetSupportEmailRequest\0320.viam.app.v"
  "1.OrganizationGetSupportEmailResponse\022h\n"
  "\023OrganizationSetLogo\022\'.viam.app.v1.Organ"
  "izationSetLogoRequest\032(.viam.app.v1.Orga"
  "nizationSetLogoResponse\022h\n\023OrganizationG"
  "etLogo\022\'.viam.app.v1.OrganizationGetLogo"
  "Request\032(.viam.app.v1.OrganizationGetLog"
  "oResponse\022b\n\021EnableAuthService\022%.viam.ap"
  "p.v1.EnableAuthServiceRequest\032&.viam.app"
  ".v1.EnableAuthServiceResponse\022e\n\022Disable"
  "AuthService\022&.viam.app.v1.DisableAuthSer"
  "viceRequest\032\'.viam.app.v1.DisableAuthSer"
  "viceResponse\022Y\n\016CreateOAuthApp\022\".viam.ap"
  "p.v1.CreateOAuthAppRequest\032#.viam.app.v1"
  ".CreateOAuthAppResponse\022S\n\014ReadOAuthApp\022"
  " .viam.app.v1.ReadOAuthAppRequest\032!.viam"
  ".app.v1.ReadOAuthAppResponse\022Y\n\016UpdateOA"
  "uthApp\022\".viam.app.v1.UpdateOAuthAppReque"
  "st\032#.viam.app.v1.UpdateOAuthAppResponse\022"
  "Y\n\016DeleteOAuthApp\022\".viam.app.v1.DeleteOA"
  "uthAppRequest\032#.viam.app.v1.DeleteOAuthA"
  "ppResponse\022V\n\rListOAuthApps\022!.viam.app.v"
  "1.ListOAuthAppsRequest\032\".viam.app.v1.Lis"
  "tOAuthAppsResponse\022Y\n\016CreateLocation\022\".v"
  "iam.app.v1.CreateLocationRequest\032#.viam."
  "app.v1.CreateLocationResponse\022P\n\013GetLoca"
  "tion\022\037.viam.app.v1.GetLocationRequest\032 ."
  "viam.app.v1.GetLocationResponse\022Y\n\016Updat"
  "eLocation\022\".viam.app.v1.UpdateLocationRe"
  "quest\032#.viam.app.v1.UpdateLocationRespon"
  "se\022Y\n\016DeleteLocation\022\".viam.app.v1.Delet"
  "eLocationRequest\032#.viam.app.v1.DeleteLoc"
  "ationResponse\022V\n\rListLocations\022!.viam.ap"
  "p.v1.ListLocationsRequest\032\".viam.app.v1."
  "ListLocationsResponse\022V\n\rShareLocation\022!"
  ".viam.app.v1.ShareLocationRequest\032\".viam"
  ".app.v1.ShareLocationResponse\022\\\n\017Unshare"
  "Location\022#.viam.app.v1.UnshareLocationRe"
  "quest\032$.viam.app.v1.UnshareLocationRespo"
  "nse\022S\n\014LocationAuth\022 .viam.app.v1.Locati"
  "onAuthRequest\032!.viam.app.v1.LocationAuth"
  "Response\022k\n\024CreateLocationSecret\022(.viam."
  "app.v1.CreateLocationSecretRequest\032).via"
  "m.app.v1.CreateLocationSecretResponse\022k\n"
  "\024DeleteLocationSecret\022(.viam.app.v1.Dele"
  "teLocationSecretRequest\032).viam.app.v1.De"
  "leteLocationSecretResponse\022G\n\010GetRobot\022\034"
  ".viam.app.v1.GetRobotRequest\032\035.viam.app."
  "v1.GetRobotResponse\022k\n\024GetRoverRentalRob"
  "ots\022(.viam.app.v1.GetRoverRentalRobotsRe"
  "quest\032).viam.app.v1.GetRoverRentalRobots"
  "Response\022V\n\rGetRobotParts\022!.viam.app.v1."
  "GetRobotPartsRequest\032\".viam.app.v1.GetRo"
  "botPartsResponse\022S\n\014GetRobotPart\022 .viam."
  "app.v1.GetRobotPartRequest\032!.viam.app.v1"
  ".GetRobotPartResponse\022_\n\020GetRobotPartLog"
  "s\022$.viam.app.v1.GetRobotPartLogsRequest\032"
  "%.viam.app.v1.GetRobotPartLogsResponse\022d"
  "\n\021TailRobotPartLogs\022%.viam.app.v1.TailRo"
  "botPartLogsRequest\032&.viam.app.v1.TailRob"
  "otPartLogsResponse0\001\022h\n\023GetRobotPartHist"
  "ory\022\'.viam.app.v1.GetRobotPartHistoryReq"
  "uest\032(.viam.app.v1.GetRobotPartHistoryRe"
  "sponse\022\\\n\017UpdateRobotPart\022#.viam.app.v1."
  "UpdateRobotPartRequest\032$.viam.app.v1.Upd"
  "ateRobotPartResponse\022S\n\014NewRobotPart\022 .v"
  "iam.app.v1.NewRobotPartRequest\032!.viam.ap"
  "p.v1.NewRobotPartResponse\022\\\n\017DeleteRobot"
  "Part\022#.viam.app.v1.DeleteRobotPartReques"
  "t\032$.viam.app.v1.DeleteRobotPartResponse\022"
  "\\\n\017GetRobotAPIKeys\022#.viam.app.v1.GetRobo"
  "tAPIKeysRequest\032$.viam.app.v1.GetRobotAP"
  "IKeysResponse\022Y\n\016MarkPartAsMain\022\".viam.a"
  "pp.v1.MarkPartAsMainRequest\032#.viam.app.v"
  "1.MarkPartAsMainResponse\022e\n\022MarkPartForR"
  "estart\022&.viam.app.v1.MarkPartForRestartR"
  "equest\032\'.viam.app.v1.MarkPartForRestartR"
  "esponse\022n\n\025CreateRobotPartSecret\022).viam."
  "app.v1.CreateRobotPartSecretRequest\032*.vi"
  "am.app.v1.CreateRobotPartSecretResponse\022"
  "n\n\025DeleteRobotPartSecret\022).viam.app.v1.D"
  "eleteRobotPartSecretRequest\032*.viam.app.v"
  "1.DeleteRobotPartSecretResponse\022M\n\nListR"
  "obots\022\036.viam.app.v1.ListRobotsRequest\032\037."
  "viam.app.v1.ListRobotsResponse\022G\n\010NewRob"
  "ot\022\034.viam.app.v1.NewRobotRequest\032\035.viam."
  "app.v1.NewRobotResponse\022P\n\013UpdateRobot\022\037"
  ".viam.app.v1.UpdateRobotRequest\032 .viam.a"
  "pp.v1.UpdateRobotResponse\022P\n\013DeleteRobot"
  "\022\037.viam.app.v1.DeleteRobotRequest\032 .viam"
  ".app.v1.DeleteRobotResponse\022V\n\rListFragm"
  "ents\022!.viam.app.v1.ListFragmentsRequest\032"
  "\".viam.app.v1.ListFragmentsResponse\022P\n\013G"
  "etFragment\022\037.viam.app.v1.GetFragmentRequ"
  "est\032 .viam.app.v1.GetFragmentResponse\022Y\n"
  "\016CreateFragment\022\".viam.app.v1.CreateFrag"
  "mentRequest\032#.viam.app.v1.CreateFragment"
  "Response\022Y\n\016UpdateFragment\022\".viam.app.v1"
  ".UpdateFragmentRequest\032#.viam.app.v1.Upd"
  "ateFragmentResponse\022Y\n\016DeleteFragment\022\"."
  "viam.app.v1.DeleteFragmentRequest\032#.viam"
  ".app.v1.DeleteFragmentResponse\022k\n\024ListMa"
  "chineFragments\022(.viam.app.v1.ListMachine"
  "FragmentsRequest\032).viam.app.v1.ListMachi"
  "neFragmentsResponse\022e\n\022GetFragmentHistor"
  "y\022&.viam.app.v1.GetFragmentHistoryReques"
  "t\032\'.viam.app.v1.GetFragmentHistoryRespon"
  "se\022D\n\007AddRole\022\033.viam.app.v1.AddRoleReque"
  "st\032\034.viam.app.v1.AddRoleResponse\022M\n\nRemo"
  "veRole\022\036.viam.app.v1.RemoveRoleRequest\032\037"
  ".viam.app.v1.RemoveRoleResponse\022M\n\nChang"
  "eRole\022\036.viam.app.v1.ChangeRoleRequest\032\037."
  "viam.app.v1.ChangeRoleResponse\022e\n\022ListAu"
  "thorizations\022&.viam.app.v1.ListAuthoriza"
  "tionsRequest\032\'.viam.app.v1.ListAuthoriza"
  "tionsResponse\022_\n\020CheckPermissions\022$.viam"
  ".app.v1.CheckPermissionsRequest\032%.viam.a"
  "pp.v1.CheckPermissionsResponse\022\\\n\017GetReg"
  "istryItem\022#.viam.app.v1.GetRegistryItemR"
  "equest\032$.viam.app.v1.GetRegistryItemResp"
  "onse\022e\n\022CreateRegistryItem\022&.viam.app.v1"
  ".CreateRegistryItemRequest\032\'.viam.app.v1"
  ".CreateRegistryItemResponse\022e\n\022UpdateReg"
  "istryItem\022&.viam.app.v1.UpdateRegistryIt"
  "emRequest\032\'.viam.app.v1.UpdateRegistryIt"
  "emResponse\022b\n\021ListRegistryItems\022%.viam.a"
  "pp.v1.ListRegistryItemsRequest\032&.viam.ap"
  "p.v1.ListRegistryItemsResponse\022e\n\022Delete"
  "RegistryItem\022&.viam.app.v1.DeleteRegistr"
  "yItemRequest\032\'.viam.app.v1.DeleteRegistr"
  "yItemResponse\022k\n\024TransferRegistryItem\022(."
  "viam.app.v1.TransferRegistryItemRequest\032"
  ").viam.app.v1.TransferRegistryItemRespon"
  "se\022S\n\014CreateModule\022 .viam.app.v1.CreateM"
  "oduleRequest\032!.viam.app.v1.CreateModuleR"
  "esponse\022S\n\014UpdateModule\022 .viam.app.v1.Up"
  "dateModuleRequest\032!.viam.app.v1.UpdateMo"
  "duleResponse\022a\n\020UploadModuleFile\022$.viam."
  "app.v1.UploadModuleFileRequest\032%.viam.ap"
  "p.v1.UploadModuleFileResponse(\001\022J\n\tGetMo"
  "dule\022\035.viam.app.v1.GetModuleRequest\032\036.vi"
  "am.app.v1.GetModuleResponse\022P\n\013ListModul"
  "es\022\037.viam.app.v1.ListModulesRequest\032 .vi"
  "am.app.v1.ListModulesResponse\022J\n\tCreateK"
  "ey\022\035.viam.app.v1.CreateKeyRequest\032\036.viam"
  ".app.v1.CreateKeyResponse\022J\n\tDeleteKey\022\035"
  ".viam.app.v1.DeleteKeyRequest\032\036.viam.app"
  ".v1.DeleteKeyResponse\022G\n\010ListKeys\022\034.viam"
  ".app.v1.ListKeysRequest\032\035.viam.app.v1.Li"
  "stKeysResponse\022J\n\tRenameKey\022\035.viam.app.v"
  "1.RenameKeyRequest\032\036.viam.app.v1.RenameK"
  "eyResponse\022J\n\tRotateKey\022\035.viam.app.v1.Ro"
  "tateKeyRequest\032\036.viam.app.v1.RotateKeyRe"
  "sponse\022\241\001\n&CreateKeyFromExistingKeyAutho"
  "rizations\022:.viam.app.v1.CreateKeyFromExi"
  "stingKeyAuthorizationsRequest\032;.viam.app"
  ".v1.CreateKeyFromExistingKeyAuthorizatio"
  "nsResponseB\030Z\026go.viam.com/api/app/v1b\006pr"
  "oto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_app_2fv1_2fapp_2eproto_deps[6] = {
  &::descriptor_table_app_2fmltraining_2fv1_2fml_5ftraining_2eproto,
  &::descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto,
  &::descriptor_table_common_2fv1_2fcommon_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_tagger_2fv1_2ftagger_2eproto,
};
static ::_pbi::once_flag descriptor_table_app_2fv1_2fapp_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_app_2fv1_2fapp_2eproto = {
    false, false, 37324, descriptor_table_protodef_app_2fv1_2fapp_2eproto,
    "app/v1/app.proto",
    &descriptor_table_app_2fv1_2fapp_2eproto_once, descriptor_table_app_2fv1_2fapp_2eproto_deps, 6, 219,
    schemas, file_default_instances, TableStruct_app_2fv1_2fapp_2eproto::offsets,
    file_level_metadata_app_2fv1_2fapp_2eproto, file_level_enum_descriptors_app_2fv1_2fapp_2eproto,
    file_level_service_descriptors_app_2fv1_2fapp_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_app_2fv1_2fapp_2eproto_getter() {
  return &descriptor_table_app_2fv1_2fapp_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_app_2fv1_2fapp_2eproto(&descriptor_table_app_2fv1_2fapp_2eproto);
namespace viam {
namespace app {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SharedSecret_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fv1_2fapp_2eproto);
  return file_level_enum_descriptors_app_2fv1_2fapp_2eproto[0];
}
bool SharedSecret_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr SharedSecret_State SharedSecret::STATE_UNSPECIFIED;
constexpr SharedSecret_State SharedSecret::STATE_ENABLED;
constexpr SharedSecret_State SharedSecret::STATE_DISABLED;
constexpr SharedSecret_State SharedSecret::State_MIN;
constexpr SharedSecret_State SharedSecret::State_MAX;
constexpr int SharedSecret::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AuthenticationType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fv1_2fapp_2eproto);
  return file_level_enum_descriptors_app_2fv1_2fapp_2eproto[1];
}
bool AuthenticationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FragmentVisibility_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fv1_2fapp_2eproto);
  return file_level_enum_descriptors_app_2fv1_2fapp_2eproto[2];
}
bool FragmentVisibility_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FragmentErrorType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fv1_2fapp_2eproto);
  return file_level_enum_descriptors_app_2fv1_2fapp_2eproto[3];
}
bool FragmentErrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RegistryItemStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fv1_2fapp_2eproto);
  return file_level_enum_descriptors_app_2fv1_2fapp_2eproto[4];
}
bool RegistryItemStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Visibility_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fv1_2fapp_2eproto);
  return file_level_enum_descriptors_app_2fv1_2fapp_2eproto[5];
}
bool Visibility_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ClientAuthentication_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fv1_2fapp_2eproto);
  return file_level_enum_descriptors_app_2fv1_2fapp_2eproto[6];
}
bool ClientAuthentication_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PKCE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fv1_2fapp_2eproto);
  return file_level_enum_descriptors_app_2fv1_2fapp_2eproto[7];
}
bool PKCE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* URLValidation_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fv1_2fapp_2eproto);
  return file_level_enum_descriptors_app_2fv1_2fapp_2eproto[8];
}
bool URLValidation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EnabledGrant_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fv1_2fapp_2eproto);
  return file_level_enum_descriptors_app_2fv1_2fapp_2eproto[9];
}
bool EnabledGrant_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Robot::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_access(const Robot* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const Robot* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Robot::_Internal::last_access(const Robot* msg) {
  return *msg->last_access_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Robot::_Internal::created_on(const Robot* msg) {
  return *msg->created_on_;
}
void Robot::clear_last_access() {
  if (GetArenaForAllocation() == nullptr && last_access_ != nullptr) {
    delete last_access_;
  }
  last_access_ = nullptr;
}
void Robot::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
Robot::Robot(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Robot)
}
Robot::Robot(const Robot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    location_.Set(from._internal_location(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_last_access()) {
    last_access_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_access_);
  } else {
    last_access_ = nullptr;
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Robot)
}

inline void Robot::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&last_access_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&created_on_) -
    reinterpret_cast<char*>(&last_access_)) + sizeof(created_on_));
}

Robot::~Robot() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Robot)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Robot::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  location_.Destroy();
  if (this != internal_default_instance()) delete last_access_;
  if (this != internal_default_instance()) delete created_on_;
}

void Robot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Robot::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Robot)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  location_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && last_access_ != nullptr) {
    delete last_access_;
  }
  last_access_ = nullptr;
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Robot::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Robot.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Robot.name"));
        } else
          goto handle_unusual;
        continue;
      // string location = 3 [json_name = "location", (.tagger.v1.tags) = "bson:\"location\" json:\"location\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Robot.location"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_access = 4 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_access(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 5 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Robot::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Robot)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Robot.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Robot.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string location = 3 [json_name = "location", (.tagger.v1.tags) = "bson:\"location\" json:\"location\""];
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Robot.location");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_location(), target);
  }

  // .google.protobuf.Timestamp last_access = 4 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
  if (this->_internal_has_last_access()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::last_access(this),
        _Internal::last_access(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp created_on = 5 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Robot)
  return target;
}

size_t Robot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Robot)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string location = 3 [json_name = "location", (.tagger.v1.tags) = "bson:\"location\" json:\"location\""];
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // .google.protobuf.Timestamp last_access = 4 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
  if (this->_internal_has_last_access()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_access_);
  }

  // .google.protobuf.Timestamp created_on = 5 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Robot::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Robot::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Robot::GetClassData() const { return &_class_data_; }

void Robot::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Robot *>(to)->MergeFrom(
      static_cast<const Robot &>(from));
}


void Robot::MergeFrom(const Robot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Robot)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_location().empty()) {
    _internal_set_location(from._internal_location());
  }
  if (from._internal_has_last_access()) {
    _internal_mutable_last_access()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_access());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Robot::CopyFrom(const Robot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Robot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Robot::IsInitialized() const {
  return true;
}

void Robot::InternalSwap(Robot* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_, lhs_arena,
      &other->location_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Robot, created_on_)
      + sizeof(Robot::created_on_)
      - PROTOBUF_FIELD_OFFSET(Robot, last_access_)>(
          reinterpret_cast<char*>(&last_access_),
          reinterpret_cast<char*>(&other->last_access_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Robot::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[0]);
}

// ===================================================================

class RobotPart::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& robot_config(const RobotPart* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_access(const RobotPart* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& user_supplied_info(const RobotPart* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const RobotPart* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_updated(const RobotPart* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
RobotPart::_Internal::robot_config(const RobotPart* msg) {
  return *msg->robot_config_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RobotPart::_Internal::last_access(const RobotPart* msg) {
  return *msg->last_access_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
RobotPart::_Internal::user_supplied_info(const RobotPart* msg) {
  return *msg->user_supplied_info_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RobotPart::_Internal::created_on(const RobotPart* msg) {
  return *msg->created_on_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RobotPart::_Internal::last_updated(const RobotPart* msg) {
  return *msg->last_updated_;
}
void RobotPart::clear_robot_config() {
  if (GetArenaForAllocation() == nullptr && robot_config_ != nullptr) {
    delete robot_config_;
  }
  robot_config_ = nullptr;
}
void RobotPart::clear_last_access() {
  if (GetArenaForAllocation() == nullptr && last_access_ != nullptr) {
    delete last_access_;
  }
  last_access_ = nullptr;
}
void RobotPart::clear_user_supplied_info() {
  if (GetArenaForAllocation() == nullptr && user_supplied_info_ != nullptr) {
    delete user_supplied_info_;
  }
  user_supplied_info_ = nullptr;
}
void RobotPart::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
void RobotPart::clear_last_updated() {
  if (GetArenaForAllocation() == nullptr && last_updated_ != nullptr) {
    delete last_updated_;
  }
  last_updated_ = nullptr;
}
RobotPart::RobotPart(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  secrets_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RobotPart)
}
RobotPart::RobotPart(const RobotPart& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      secrets_(from.secrets_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  secret_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret().empty()) {
    secret_.Set(from._internal_secret(), 
      GetArenaForAllocation());
  }
  robot_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot().empty()) {
    robot_.Set(from._internal_robot(), 
      GetArenaForAllocation());
  }
  fqdn_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    fqdn_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fqdn().empty()) {
    fqdn_.Set(from._internal_fqdn(), 
      GetArenaForAllocation());
  }
  dns_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dns_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dns_name().empty()) {
    dns_name_.Set(from._internal_dns_name(), 
      GetArenaForAllocation());
  }
  local_fqdn_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    local_fqdn_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_local_fqdn().empty()) {
    local_fqdn_.Set(from._internal_local_fqdn(), 
      GetArenaForAllocation());
  }
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_robot_config()) {
    robot_config_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.robot_config_);
  } else {
    robot_config_ = nullptr;
  }
  if (from._internal_has_last_access()) {
    last_access_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_access_);
  } else {
    last_access_ = nullptr;
  }
  if (from._internal_has_user_supplied_info()) {
    user_supplied_info_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.user_supplied_info_);
  } else {
    user_supplied_info_ = nullptr;
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  if (from._internal_has_last_updated()) {
    last_updated_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_updated_);
  } else {
    last_updated_ = nullptr;
  }
  main_part_ = from.main_part_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RobotPart)
}

inline void RobotPart::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
secret_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
robot_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
fqdn_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  fqdn_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
dns_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dns_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
local_fqdn_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  local_fqdn_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&robot_config_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&main_part_) -
    reinterpret_cast<char*>(&robot_config_)) + sizeof(main_part_));
}

RobotPart::~RobotPart() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RobotPart)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RobotPart::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  secret_.Destroy();
  robot_.Destroy();
  fqdn_.Destroy();
  dns_name_.Destroy();
  local_fqdn_.Destroy();
  location_id_.Destroy();
  if (this != internal_default_instance()) delete robot_config_;
  if (this != internal_default_instance()) delete last_access_;
  if (this != internal_default_instance()) delete user_supplied_info_;
  if (this != internal_default_instance()) delete created_on_;
  if (this != internal_default_instance()) delete last_updated_;
}

void RobotPart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RobotPart::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RobotPart)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secrets_.Clear();
  id_.ClearToEmpty();
  name_.ClearToEmpty();
  secret_.ClearToEmpty();
  robot_.ClearToEmpty();
  fqdn_.ClearToEmpty();
  dns_name_.ClearToEmpty();
  local_fqdn_.ClearToEmpty();
  location_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && robot_config_ != nullptr) {
    delete robot_config_;
  }
  robot_config_ = nullptr;
  if (GetArenaForAllocation() == nullptr && last_access_ != nullptr) {
    delete last_access_;
  }
  last_access_ = nullptr;
  if (GetArenaForAllocation() == nullptr && user_supplied_info_ != nullptr) {
    delete user_supplied_info_;
  }
  user_supplied_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  if (GetArenaForAllocation() == nullptr && last_updated_ != nullptr) {
    delete last_updated_;
  }
  last_updated_ = nullptr;
  main_part_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RobotPart::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.name"));
        } else
          goto handle_unusual;
        continue;
      // string secret = 3 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\" json:\"secret,omitempty\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_secret();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.secret"));
        } else
          goto handle_unusual;
        continue;
      // string robot = 4 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_robot();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.robot"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct robot_config = 5 [json_name = "robotConfig", (.tagger.v1.tags) = "bson:\"config\" json:\"robot_config\""];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_access = 6 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_access(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct user_supplied_info = 7 [json_name = "userSuppliedInfo", (.tagger.v1.tags) = "bson:\"user_supplied_info\" json:\"user_supplied_info\""];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_supplied_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool main_part = 8 [json_name = "mainPart", (.tagger.v1.tags) = "bson:\"main_part\" json:\"main_part\""];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          main_part_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string fqdn = 9 [json_name = "fqdn"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_fqdn();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.fqdn"));
        } else
          goto handle_unusual;
        continue;
      // string dns_name = 10 [json_name = "dnsName", (.tagger.v1.tags) = "bson:\"dns_name\" json:\"dns_name\""];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_dns_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.dns_name"));
        } else
          goto handle_unusual;
        continue;
      // string local_fqdn = 11 [json_name = "localFqdn"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_local_fqdn();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.local_fqdn"));
        } else
          goto handle_unusual;
        continue;
      // string location_id = 12 [json_name = "locationId", (.tagger.v1.tags) = "bson:\"location_id\" json:\"-\""];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.location_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 13 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.SharedSecret secrets = 14 [json_name = "secrets", (.tagger.v1.tags) = "bson:\"secrets\""];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_secrets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_updated = 15 [json_name = "lastUpdated", (.tagger.v1.tags) = "bson:\"last_updated_at\""];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_updated(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RobotPart::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RobotPart)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string secret = 3 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\" json:\"secret,omitempty\""];
  if (!this->_internal_secret().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret().data(), static_cast<int>(this->_internal_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.secret");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_secret(), target);
  }

  // string robot = 4 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
  if (!this->_internal_robot().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot().data(), static_cast<int>(this->_internal_robot().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.robot");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_robot(), target);
  }

  // .google.protobuf.Struct robot_config = 5 [json_name = "robotConfig", (.tagger.v1.tags) = "bson:\"config\" json:\"robot_config\""];
  if (this->_internal_has_robot_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::robot_config(this),
        _Internal::robot_config(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp last_access = 6 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
  if (this->_internal_has_last_access()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::last_access(this),
        _Internal::last_access(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct user_supplied_info = 7 [json_name = "userSuppliedInfo", (.tagger.v1.tags) = "bson:\"user_supplied_info\" json:\"user_supplied_info\""];
  if (this->_internal_has_user_supplied_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::user_supplied_info(this),
        _Internal::user_supplied_info(this).GetCachedSize(), target, stream);
  }

  // bool main_part = 8 [json_name = "mainPart", (.tagger.v1.tags) = "bson:\"main_part\" json:\"main_part\""];
  if (this->_internal_main_part() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_main_part(), target);
  }

  // string fqdn = 9 [json_name = "fqdn"];
  if (!this->_internal_fqdn().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fqdn().data(), static_cast<int>(this->_internal_fqdn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.fqdn");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_fqdn(), target);
  }

  // string dns_name = 10 [json_name = "dnsName", (.tagger.v1.tags) = "bson:\"dns_name\" json:\"dns_name\""];
  if (!this->_internal_dns_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dns_name().data(), static_cast<int>(this->_internal_dns_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.dns_name");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_dns_name(), target);
  }

  // string local_fqdn = 11 [json_name = "localFqdn"];
  if (!this->_internal_local_fqdn().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_local_fqdn().data(), static_cast<int>(this->_internal_local_fqdn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.local_fqdn");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_local_fqdn(), target);
  }

  // string location_id = 12 [json_name = "locationId", (.tagger.v1.tags) = "bson:\"location_id\" json:\"-\""];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.location_id");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_location_id(), target);
  }

  // .google.protobuf.Timestamp created_on = 13 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.SharedSecret secrets = 14 [json_name = "secrets", (.tagger.v1.tags) = "bson:\"secrets\""];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_secrets_size()); i < n; i++) {
    const auto& repfield = this->_internal_secrets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(14, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp last_updated = 15 [json_name = "lastUpdated", (.tagger.v1.tags) = "bson:\"last_updated_at\""];
  if (this->_internal_has_last_updated()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::last_updated(this),
        _Internal::last_updated(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RobotPart)
  return target;
}

size_t RobotPart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RobotPart)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.SharedSecret secrets = 14 [json_name = "secrets", (.tagger.v1.tags) = "bson:\"secrets\""];
  total_size += 1UL * this->_internal_secrets_size();
  for (const auto& msg : this->secrets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string secret = 3 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\" json:\"secret,omitempty\""];
  if (!this->_internal_secret().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret());
  }

  // string robot = 4 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
  if (!this->_internal_robot().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot());
  }

  // string fqdn = 9 [json_name = "fqdn"];
  if (!this->_internal_fqdn().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fqdn());
  }

  // string dns_name = 10 [json_name = "dnsName", (.tagger.v1.tags) = "bson:\"dns_name\" json:\"dns_name\""];
  if (!this->_internal_dns_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dns_name());
  }

  // string local_fqdn = 11 [json_name = "localFqdn"];
  if (!this->_internal_local_fqdn().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_local_fqdn());
  }

  // string location_id = 12 [json_name = "locationId", (.tagger.v1.tags) = "bson:\"location_id\" json:\"-\""];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // .google.protobuf.Struct robot_config = 5 [json_name = "robotConfig", (.tagger.v1.tags) = "bson:\"config\" json:\"robot_config\""];
  if (this->_internal_has_robot_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_config_);
  }

  // .google.protobuf.Timestamp last_access = 6 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
  if (this->_internal_has_last_access()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_access_);
  }

  // .google.protobuf.Struct user_supplied_info = 7 [json_name = "userSuppliedInfo", (.tagger.v1.tags) = "bson:\"user_supplied_info\" json:\"user_supplied_info\""];
  if (this->_internal_has_user_supplied_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *user_supplied_info_);
  }

  // .google.protobuf.Timestamp created_on = 13 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // .google.protobuf.Timestamp last_updated = 15 [json_name = "lastUpdated", (.tagger.v1.tags) = "bson:\"last_updated_at\""];
  if (this->_internal_has_last_updated()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_updated_);
  }

  // bool main_part = 8 [json_name = "mainPart", (.tagger.v1.tags) = "bson:\"main_part\" json:\"main_part\""];
  if (this->_internal_main_part() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RobotPart::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RobotPart::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RobotPart::GetClassData() const { return &_class_data_; }

void RobotPart::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RobotPart *>(to)->MergeFrom(
      static_cast<const RobotPart &>(from));
}


void RobotPart::MergeFrom(const RobotPart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RobotPart)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  secrets_.MergeFrom(from.secrets_);
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_secret().empty()) {
    _internal_set_secret(from._internal_secret());
  }
  if (!from._internal_robot().empty()) {
    _internal_set_robot(from._internal_robot());
  }
  if (!from._internal_fqdn().empty()) {
    _internal_set_fqdn(from._internal_fqdn());
  }
  if (!from._internal_dns_name().empty()) {
    _internal_set_dns_name(from._internal_dns_name());
  }
  if (!from._internal_local_fqdn().empty()) {
    _internal_set_local_fqdn(from._internal_local_fqdn());
  }
  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (from._internal_has_robot_config()) {
    _internal_mutable_robot_config()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_robot_config());
  }
  if (from._internal_has_last_access()) {
    _internal_mutable_last_access()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_access());
  }
  if (from._internal_has_user_supplied_info()) {
    _internal_mutable_user_supplied_info()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_user_supplied_info());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_has_last_updated()) {
    _internal_mutable_last_updated()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_updated());
  }
  if (from._internal_main_part() != 0) {
    _internal_set_main_part(from._internal_main_part());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RobotPart::CopyFrom(const RobotPart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RobotPart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotPart::IsInitialized() const {
  return true;
}

void RobotPart::InternalSwap(RobotPart* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  secrets_.InternalSwap(&other->secrets_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_, lhs_arena,
      &other->secret_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_, lhs_arena,
      &other->robot_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &fqdn_, lhs_arena,
      &other->fqdn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &dns_name_, lhs_arena,
      &other->dns_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &local_fqdn_, lhs_arena,
      &other->local_fqdn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RobotPart, main_part_)
      + sizeof(RobotPart::main_part_)
      - PROTOBUF_FIELD_OFFSET(RobotPart, robot_config_)>(
          reinterpret_cast<char*>(&robot_config_),
          reinterpret_cast<char*>(&other->robot_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RobotPart::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[1]);
}

// ===================================================================

class RobotPartHistoryEntry::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& when(const RobotPartHistoryEntry* msg);
  static const ::viam::app::v1::RobotPart& old(const RobotPartHistoryEntry* msg);
  static const ::viam::app::v1::AuthenticatorInfo& edited_by(const RobotPartHistoryEntry* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RobotPartHistoryEntry::_Internal::when(const RobotPartHistoryEntry* msg) {
  return *msg->when_;
}
const ::viam::app::v1::RobotPart&
RobotPartHistoryEntry::_Internal::old(const RobotPartHistoryEntry* msg) {
  return *msg->old_;
}
const ::viam::app::v1::AuthenticatorInfo&
RobotPartHistoryEntry::_Internal::edited_by(const RobotPartHistoryEntry* msg) {
  return *msg->edited_by_;
}
void RobotPartHistoryEntry::clear_when() {
  if (GetArenaForAllocation() == nullptr && when_ != nullptr) {
    delete when_;
  }
  when_ = nullptr;
}
RobotPartHistoryEntry::RobotPartHistoryEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RobotPartHistoryEntry)
}
RobotPartHistoryEntry::RobotPartHistoryEntry(const RobotPartHistoryEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part().empty()) {
    part_.Set(from._internal_part(), 
      GetArenaForAllocation());
  }
  robot_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot().empty()) {
    robot_.Set(from._internal_robot(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_when()) {
    when_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.when_);
  } else {
    when_ = nullptr;
  }
  if (from._internal_has_old()) {
    old_ = new ::viam::app::v1::RobotPart(*from.old_);
  } else {
    old_ = nullptr;
  }
  if (from._internal_has_edited_by()) {
    edited_by_ = new ::viam::app::v1::AuthenticatorInfo(*from.edited_by_);
  } else {
    edited_by_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RobotPartHistoryEntry)
}

inline void RobotPartHistoryEntry::SharedCtor() {
part_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
robot_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&when_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&edited_by_) -
    reinterpret_cast<char*>(&when_)) + sizeof(edited_by_));
}

RobotPartHistoryEntry::~RobotPartHistoryEntry() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RobotPartHistoryEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RobotPartHistoryEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_.Destroy();
  robot_.Destroy();
  if (this != internal_default_instance()) delete when_;
  if (this != internal_default_instance()) delete old_;
  if (this != internal_default_instance()) delete edited_by_;
}

void RobotPartHistoryEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RobotPartHistoryEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RobotPartHistoryEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_.ClearToEmpty();
  robot_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && when_ != nullptr) {
    delete when_;
  }
  when_ = nullptr;
  if (GetArenaForAllocation() == nullptr && old_ != nullptr) {
    delete old_;
  }
  old_ = nullptr;
  if (GetArenaForAllocation() == nullptr && edited_by_ != nullptr) {
    delete edited_by_;
  }
  edited_by_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RobotPartHistoryEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part = 1 [json_name = "part", (.tagger.v1.tags) = "bson:\"part\" json:\"part\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPartHistoryEntry.part"));
        } else
          goto handle_unusual;
        continue;
      // string robot = 2 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_robot();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPartHistoryEntry.robot"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp when = 3 [json_name = "when", (.tagger.v1.tags) = "bson:\"when\" json:\"when\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_when(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.RobotPart old = 4 [json_name = "old", (.tagger.v1.tags) = "bson:\"old\" json:\"old\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_old(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.AuthenticatorInfo edited_by = 5 [json_name = "editedBy", (.tagger.v1.tags) = "bson:\"edited_by\" json:\"edited_by\""];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_edited_by(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RobotPartHistoryEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RobotPartHistoryEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part = 1 [json_name = "part", (.tagger.v1.tags) = "bson:\"part\" json:\"part\""];
  if (!this->_internal_part().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part().data(), static_cast<int>(this->_internal_part().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPartHistoryEntry.part");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part(), target);
  }

  // string robot = 2 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
  if (!this->_internal_robot().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot().data(), static_cast<int>(this->_internal_robot().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPartHistoryEntry.robot");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_robot(), target);
  }

  // .google.protobuf.Timestamp when = 3 [json_name = "when", (.tagger.v1.tags) = "bson:\"when\" json:\"when\""];
  if (this->_internal_has_when()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::when(this),
        _Internal::when(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.RobotPart old = 4 [json_name = "old", (.tagger.v1.tags) = "bson:\"old\" json:\"old\""];
  if (this->_internal_has_old()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::old(this),
        _Internal::old(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.AuthenticatorInfo edited_by = 5 [json_name = "editedBy", (.tagger.v1.tags) = "bson:\"edited_by\" json:\"edited_by\""];
  if (this->_internal_has_edited_by()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::edited_by(this),
        _Internal::edited_by(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RobotPartHistoryEntry)
  return target;
}

size_t RobotPartHistoryEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RobotPartHistoryEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part = 1 [json_name = "part", (.tagger.v1.tags) = "bson:\"part\" json:\"part\""];
  if (!this->_internal_part().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part());
  }

  // string robot = 2 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
  if (!this->_internal_robot().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot());
  }

  // .google.protobuf.Timestamp when = 3 [json_name = "when", (.tagger.v1.tags) = "bson:\"when\" json:\"when\""];
  if (this->_internal_has_when()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *when_);
  }

  // .viam.app.v1.RobotPart old = 4 [json_name = "old", (.tagger.v1.tags) = "bson:\"old\" json:\"old\""];
  if (this->_internal_has_old()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *old_);
  }

  // .viam.app.v1.AuthenticatorInfo edited_by = 5 [json_name = "editedBy", (.tagger.v1.tags) = "bson:\"edited_by\" json:\"edited_by\""];
  if (this->_internal_has_edited_by()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *edited_by_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RobotPartHistoryEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RobotPartHistoryEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RobotPartHistoryEntry::GetClassData() const { return &_class_data_; }

void RobotPartHistoryEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RobotPartHistoryEntry *>(to)->MergeFrom(
      static_cast<const RobotPartHistoryEntry &>(from));
}


void RobotPartHistoryEntry::MergeFrom(const RobotPartHistoryEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RobotPartHistoryEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part().empty()) {
    _internal_set_part(from._internal_part());
  }
  if (!from._internal_robot().empty()) {
    _internal_set_robot(from._internal_robot());
  }
  if (from._internal_has_when()) {
    _internal_mutable_when()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_when());
  }
  if (from._internal_has_old()) {
    _internal_mutable_old()->::viam::app::v1::RobotPart::MergeFrom(from._internal_old());
  }
  if (from._internal_has_edited_by()) {
    _internal_mutable_edited_by()->::viam::app::v1::AuthenticatorInfo::MergeFrom(from._internal_edited_by());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RobotPartHistoryEntry::CopyFrom(const RobotPartHistoryEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RobotPartHistoryEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotPartHistoryEntry::IsInitialized() const {
  return true;
}

void RobotPartHistoryEntry::InternalSwap(RobotPartHistoryEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_, lhs_arena,
      &other->part_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_, lhs_arena,
      &other->robot_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RobotPartHistoryEntry, edited_by_)
      + sizeof(RobotPartHistoryEntry::edited_by_)
      - PROTOBUF_FIELD_OFFSET(RobotPartHistoryEntry, when_)>(
          reinterpret_cast<char*>(&when_),
          reinterpret_cast<char*>(&other->when_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RobotPartHistoryEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[2]);
}

// ===================================================================

class AuthenticatorInfo::_Internal {
 public:
};

AuthenticatorInfo::AuthenticatorInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.AuthenticatorInfo)
}
AuthenticatorInfo::AuthenticatorInfo(const AuthenticatorInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    value_.Set(from._internal_value(), 
      GetArenaForAllocation());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_deactivated_) -
    reinterpret_cast<char*>(&type_)) + sizeof(is_deactivated_));
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.AuthenticatorInfo)
}

inline void AuthenticatorInfo::SharedCtor() {
value_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  value_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_deactivated_) -
    reinterpret_cast<char*>(&type_)) + sizeof(is_deactivated_));
}

AuthenticatorInfo::~AuthenticatorInfo() {
  // @@protoc_insertion_point(destructor:viam.app.v1.AuthenticatorInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthenticatorInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  value_.Destroy();
}

void AuthenticatorInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AuthenticatorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.AuthenticatorInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty();
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_deactivated_) -
      reinterpret_cast<char*>(&type_)) + sizeof(is_deactivated_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticatorInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.AuthenticationType type = 1 [json_name = "type"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::viam::app::v1::AuthenticationType>(val));
        } else
          goto handle_unusual;
        continue;
      // string value = 2 [json_name = "value"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.AuthenticatorInfo.value"));
        } else
          goto handle_unusual;
        continue;
      // bool is_deactivated = 3 [json_name = "isDeactivated"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          is_deactivated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticatorInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.AuthenticatorInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.AuthenticationType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // string value = 2 [json_name = "value"];
  if (!this->_internal_value().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.AuthenticatorInfo.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  // bool is_deactivated = 3 [json_name = "isDeactivated"];
  if (this->_internal_is_deactivated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_is_deactivated(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.AuthenticatorInfo)
  return target;
}

size_t AuthenticatorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.AuthenticatorInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 2 [json_name = "value"];
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // .viam.app.v1.AuthenticationType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // bool is_deactivated = 3 [json_name = "isDeactivated"];
  if (this->_internal_is_deactivated() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticatorInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AuthenticatorInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticatorInfo::GetClassData() const { return &_class_data_; }

void AuthenticatorInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AuthenticatorInfo *>(to)->MergeFrom(
      static_cast<const AuthenticatorInfo &>(from));
}


void AuthenticatorInfo::MergeFrom(const AuthenticatorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.AuthenticatorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _internal_set_value(from._internal_value());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_is_deactivated() != 0) {
    _internal_set_is_deactivated(from._internal_is_deactivated());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticatorInfo::CopyFrom(const AuthenticatorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.AuthenticatorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticatorInfo::IsInitialized() const {
  return true;
}

void AuthenticatorInfo::InternalSwap(AuthenticatorInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &value_, lhs_arena,
      &other->value_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AuthenticatorInfo, is_deactivated_)
      + sizeof(AuthenticatorInfo::is_deactivated_)
      - PROTOBUF_FIELD_OFFSET(AuthenticatorInfo, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticatorInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[3]);
}

// ===================================================================

class ListOrganizationsRequest::_Internal {
 public:
};

ListOrganizationsRequest::ListOrganizationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationsRequest)
}
ListOrganizationsRequest::ListOrganizationsRequest(const ListOrganizationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[4]);
}

// ===================================================================

class Organization::_Internal {
 public:
  using HasBits = decltype(std::declval<Organization>()._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const Organization* msg);
  static void set_has_cid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Organization::_Internal::created_on(const Organization* msg) {
  return *msg->created_on_;
}
void Organization::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
Organization::Organization(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Organization)
}
Organization::Organization(const Organization& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  public_namespace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    public_namespace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_public_namespace().empty()) {
    public_namespace_.Set(from._internal_public_namespace(), 
      GetArenaForAllocation());
  }
  default_region_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    default_region_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_default_region().empty()) {
    default_region_.Set(from._internal_default_region(), 
      GetArenaForAllocation());
  }
  cid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_cid()) {
    cid_.Set(from._internal_cid(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Organization)
}

inline void Organization::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
public_namespace_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  public_namespace_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
default_region_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  default_region_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
cid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
created_on_ = nullptr;
}

Organization::~Organization() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Organization)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Organization::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  public_namespace_.Destroy();
  default_region_.Destroy();
  cid_.Destroy();
  if (this != internal_default_instance()) delete created_on_;
}

void Organization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Organization::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Organization)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  public_namespace_.ClearToEmpty();
  default_region_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    cid_.ClearNonDefaultToEmpty();
  }
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Organization::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Organization.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Organization.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string public_namespace = 4 [json_name = "publicNamespace"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_public_namespace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Organization.public_namespace"));
        } else
          goto handle_unusual;
        continue;
      // string default_region = 5 [json_name = "defaultRegion"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_default_region();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Organization.default_region"));
        } else
          goto handle_unusual;
        continue;
      // optional string cid = 6 [json_name = "cid"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_cid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Organization.cid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Organization::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Organization)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Organization.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Organization.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // string public_namespace = 4 [json_name = "publicNamespace"];
  if (!this->_internal_public_namespace().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_namespace().data(), static_cast<int>(this->_internal_public_namespace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Organization.public_namespace");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_public_namespace(), target);
  }

  // string default_region = 5 [json_name = "defaultRegion"];
  if (!this->_internal_default_region().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_region().data(), static_cast<int>(this->_internal_default_region().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Organization.default_region");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_default_region(), target);
  }

  // optional string cid = 6 [json_name = "cid"];
  if (_internal_has_cid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cid().data(), static_cast<int>(this->_internal_cid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Organization.cid");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_cid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Organization)
  return target;
}

size_t Organization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Organization)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string public_namespace = 4 [json_name = "publicNamespace"];
  if (!this->_internal_public_namespace().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_namespace());
  }

  // string default_region = 5 [json_name = "defaultRegion"];
  if (!this->_internal_default_region().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_region());
  }

  // optional string cid = 6 [json_name = "cid"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cid());
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Organization::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Organization::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Organization::GetClassData() const { return &_class_data_; }

void Organization::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Organization *>(to)->MergeFrom(
      static_cast<const Organization &>(from));
}


void Organization::MergeFrom(const Organization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Organization)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_public_namespace().empty()) {
    _internal_set_public_namespace(from._internal_public_namespace());
  }
  if (!from._internal_default_region().empty()) {
    _internal_set_default_region(from._internal_default_region());
  }
  if (from._internal_has_cid()) {
    _internal_set_cid(from._internal_cid());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Organization::CopyFrom(const Organization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Organization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Organization::IsInitialized() const {
  return true;
}

void Organization::InternalSwap(Organization* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &public_namespace_, lhs_arena,
      &other->public_namespace_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &default_region_, lhs_arena,
      &other->default_region_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &cid_, lhs_arena,
      &other->cid_, rhs_arena
  );
  swap(created_on_, other->created_on_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Organization::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[5]);
}

// ===================================================================

class OrganizationMember::_Internal {
 public:
  using HasBits = decltype(std::declval<OrganizationMember>()._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& date_added(const OrganizationMember* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_login(const OrganizationMember* msg);
  static void set_has_last_login(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
OrganizationMember::_Internal::date_added(const OrganizationMember* msg) {
  return *msg->date_added_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
OrganizationMember::_Internal::last_login(const OrganizationMember* msg) {
  return *msg->last_login_;
}
void OrganizationMember::clear_date_added() {
  if (GetArenaForAllocation() == nullptr && date_added_ != nullptr) {
    delete date_added_;
  }
  date_added_ = nullptr;
}
void OrganizationMember::clear_last_login() {
  if (last_login_ != nullptr) last_login_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
OrganizationMember::OrganizationMember(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  emails_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrganizationMember)
}
OrganizationMember::OrganizationMember(const OrganizationMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      emails_(from.emails_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    user_id_.Set(from._internal_user_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_date_added()) {
    date_added_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.date_added_);
  } else {
    date_added_ = nullptr;
  }
  if (from._internal_has_last_login()) {
    last_login_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_login_);
  } else {
    last_login_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrganizationMember)
}

inline void OrganizationMember::SharedCtor() {
user_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  user_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&date_added_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&last_login_) -
    reinterpret_cast<char*>(&date_added_)) + sizeof(last_login_));
}

OrganizationMember::~OrganizationMember() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OrganizationMember)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrganizationMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  user_id_.Destroy();
  if (this != internal_default_instance()) delete date_added_;
  if (this != internal_default_instance()) delete last_login_;
}

void OrganizationMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrganizationMember::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OrganizationMember)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  emails_.Clear();
  user_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && date_added_ != nullptr) {
    delete date_added_;
  }
  date_added_ = nullptr;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(last_login_ != nullptr);
    last_login_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrganizationMember::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1 [json_name = "userId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationMember.user_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated string emails = 2 [json_name = "emails"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_emails();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationMember.emails"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp date_added = 3 [json_name = "dateAdded"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_date_added(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.Timestamp last_login = 4 [json_name = "lastLogin"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_login(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrganizationMember::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OrganizationMember)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationMember.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // repeated string emails = 2 [json_name = "emails"];
  for (int i = 0, n = this->_internal_emails_size(); i < n; i++) {
    const auto& s = this->_internal_emails(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationMember.emails");
    target = stream->WriteString(2, s, target);
  }

  // .google.protobuf.Timestamp date_added = 3 [json_name = "dateAdded"];
  if (this->_internal_has_date_added()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::date_added(this),
        _Internal::date_added(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.Timestamp last_login = 4 [json_name = "lastLogin"];
  if (_internal_has_last_login()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::last_login(this),
        _Internal::last_login(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OrganizationMember)
  return target;
}

size_t OrganizationMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OrganizationMember)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string emails = 2 [json_name = "emails"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(emails_.size());
  for (int i = 0, n = emails_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      emails_.Get(i));
  }

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // .google.protobuf.Timestamp date_added = 3 [json_name = "dateAdded"];
  if (this->_internal_has_date_added()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *date_added_);
  }

  // optional .google.protobuf.Timestamp last_login = 4 [json_name = "lastLogin"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_login_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationMember::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrganizationMember::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationMember::GetClassData() const { return &_class_data_; }

void OrganizationMember::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrganizationMember *>(to)->MergeFrom(
      static_cast<const OrganizationMember &>(from));
}


void OrganizationMember::MergeFrom(const OrganizationMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OrganizationMember)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  emails_.MergeFrom(from.emails_);
  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_has_date_added()) {
    _internal_mutable_date_added()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_date_added());
  }
  if (from._internal_has_last_login()) {
    _internal_mutable_last_login()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_login());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrganizationMember::CopyFrom(const OrganizationMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OrganizationMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationMember::IsInitialized() const {
  return true;
}

void OrganizationMember::InternalSwap(OrganizationMember* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  emails_.InternalSwap(&other->emails_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &user_id_, lhs_arena,
      &other->user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrganizationMember, last_login_)
      + sizeof(OrganizationMember::last_login_)
      - PROTOBUF_FIELD_OFFSET(OrganizationMember, date_added_)>(
          reinterpret_cast<char*>(&date_added_),
          reinterpret_cast<char*>(&other->date_added_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OrganizationMember::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[6]);
}

// ===================================================================

class ListOrganizationsResponse::_Internal {
 public:
};

ListOrganizationsResponse::ListOrganizationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  organizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationsResponse)
}
ListOrganizationsResponse::ListOrganizationsResponse(const ListOrganizationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationsResponse)
}

inline void ListOrganizationsResponse::SharedCtor() {
}

ListOrganizationsResponse::~ListOrganizationsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListOrganizationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListOrganizationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListOrganizationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListOrganizationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListOrganizationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListOrganizationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Organization organizations = 1 [json_name = "organizations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_organizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListOrganizationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListOrganizationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Organization organizations = 1 [json_name = "organizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_organizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_organizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListOrganizationsResponse)
  return target;
}

size_t ListOrganizationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListOrganizationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Organization organizations = 1 [json_name = "organizations"];
  total_size += 1UL * this->_internal_organizations_size();
  for (const auto& msg : this->organizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListOrganizationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationsResponse::GetClassData() const { return &_class_data_; }

void ListOrganizationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListOrganizationsResponse *>(to)->MergeFrom(
      static_cast<const ListOrganizationsResponse &>(from));
}


void ListOrganizationsResponse::MergeFrom(const ListOrganizationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListOrganizationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  organizations_.MergeFrom(from.organizations_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListOrganizationsResponse::CopyFrom(const ListOrganizationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListOrganizationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOrganizationsResponse::IsInitialized() const {
  return true;
}

void ListOrganizationsResponse::InternalSwap(ListOrganizationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  organizations_.InternalSwap(&other->organizations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[7]);
}

// ===================================================================

class OrganizationInvite::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const OrganizationInvite* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
OrganizationInvite::_Internal::created_on(const OrganizationInvite* msg) {
  return *msg->created_on_;
}
void OrganizationInvite::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
OrganizationInvite::OrganizationInvite(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  authorizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrganizationInvite)
}
OrganizationInvite::OrganizationInvite(const OrganizationInvite& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      authorizations_(from.authorizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrganizationInvite)
}

inline void OrganizationInvite::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
created_on_ = nullptr;
}

OrganizationInvite::~OrganizationInvite() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OrganizationInvite)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrganizationInvite::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  email_.Destroy();
  if (this != internal_default_instance()) delete created_on_;
}

void OrganizationInvite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrganizationInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OrganizationInvite)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorizations_.Clear();
  organization_id_.ClearToEmpty();
  email_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrganizationInvite::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationInvite.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationInvite.email"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Authorization authorizations = 4 [json_name = "authorizations"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_authorizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrganizationInvite::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OrganizationInvite)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationInvite.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationInvite.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.Authorization authorizations = 4 [json_name = "authorizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_authorizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_authorizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OrganizationInvite)
  return target;
}

size_t OrganizationInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OrganizationInvite)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Authorization authorizations = 4 [json_name = "authorizations"];
  total_size += 1UL * this->_internal_authorizations_size();
  for (const auto& msg : this->authorizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationInvite::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrganizationInvite::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationInvite::GetClassData() const { return &_class_data_; }

void OrganizationInvite::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrganizationInvite *>(to)->MergeFrom(
      static_cast<const OrganizationInvite &>(from));
}


void OrganizationInvite::MergeFrom(const OrganizationInvite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OrganizationInvite)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  authorizations_.MergeFrom(from.authorizations_);
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrganizationInvite::CopyFrom(const OrganizationInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OrganizationInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationInvite::IsInitialized() const {
  return true;
}

void OrganizationInvite::InternalSwap(OrganizationInvite* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  authorizations_.InternalSwap(&other->authorizations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
  swap(created_on_, other->created_on_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OrganizationInvite::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[8]);
}

// ===================================================================

class CreateOrganizationRequest::_Internal {
 public:
};

CreateOrganizationRequest::CreateOrganizationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateOrganizationRequest)
}
CreateOrganizationRequest::CreateOrganizationRequest(const CreateOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateOrganizationRequest)
}

inline void CreateOrganizationRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateOrganizationRequest::~CreateOrganizationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateOrganizationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateOrganizationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void CreateOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateOrganizationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateOrganizationRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateOrganizationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateOrganizationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateOrganizationRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateOrganizationRequest)
  return target;
}

size_t CreateOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateOrganizationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateOrganizationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateOrganizationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateOrganizationRequest::GetClassData() const { return &_class_data_; }

void CreateOrganizationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateOrganizationRequest *>(to)->MergeFrom(
      static_cast<const CreateOrganizationRequest &>(from));
}


void CreateOrganizationRequest::MergeFrom(const CreateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateOrganizationRequest::CopyFrom(const CreateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationRequest::IsInitialized() const {
  return true;
}

void CreateOrganizationRequest::InternalSwap(CreateOrganizationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[9]);
}

// ===================================================================

class CreateOrganizationResponse::_Internal {
 public:
  static const ::viam::app::v1::Organization& organization(const CreateOrganizationResponse* msg);
};

const ::viam::app::v1::Organization&
CreateOrganizationResponse::_Internal::organization(const CreateOrganizationResponse* msg) {
  return *msg->organization_;
}
CreateOrganizationResponse::CreateOrganizationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateOrganizationResponse)
}
CreateOrganizationResponse::CreateOrganizationResponse(const CreateOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_organization()) {
    organization_ = new ::viam::app::v1::Organization(*from.organization_);
  } else {
    organization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateOrganizationResponse)
}

inline void CreateOrganizationResponse::SharedCtor() {
organization_ = nullptr;
}

CreateOrganizationResponse::~CreateOrganizationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateOrganizationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateOrganizationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete organization_;
}

void CreateOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateOrganizationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && organization_ != nullptr) {
    delete organization_;
  }
  organization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_organization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateOrganizationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateOrganizationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::organization(this),
        _Internal::organization(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateOrganizationResponse)
  return target;
}

size_t CreateOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateOrganizationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *organization_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateOrganizationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateOrganizationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateOrganizationResponse::GetClassData() const { return &_class_data_; }

void CreateOrganizationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateOrganizationResponse *>(to)->MergeFrom(
      static_cast<const CreateOrganizationResponse &>(from));
}


void CreateOrganizationResponse::MergeFrom(const CreateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_organization()) {
    _internal_mutable_organization()->::viam::app::v1::Organization::MergeFrom(from._internal_organization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateOrganizationResponse::CopyFrom(const CreateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationResponse::IsInitialized() const {
  return true;
}

void CreateOrganizationResponse::InternalSwap(CreateOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(organization_, other->organization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[10]);
}

// ===================================================================

class GetOrganizationRequest::_Internal {
 public:
};

GetOrganizationRequest::GetOrganizationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetOrganizationRequest)
}
GetOrganizationRequest::GetOrganizationRequest(const GetOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetOrganizationRequest)
}

inline void GetOrganizationRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetOrganizationRequest::~GetOrganizationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetOrganizationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrganizationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void GetOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetOrganizationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetOrganizationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrganizationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetOrganizationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetOrganizationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetOrganizationRequest)
  return target;
}

size_t GetOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetOrganizationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrganizationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrganizationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrganizationRequest::GetClassData() const { return &_class_data_; }

void GetOrganizationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOrganizationRequest *>(to)->MergeFrom(
      static_cast<const GetOrganizationRequest &>(from));
}


void GetOrganizationRequest::MergeFrom(const GetOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrganizationRequest::CopyFrom(const GetOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationRequest::IsInitialized() const {
  return true;
}

void GetOrganizationRequest::InternalSwap(GetOrganizationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[11]);
}

// ===================================================================

class GetOrganizationResponse::_Internal {
 public:
  static const ::viam::app::v1::Organization& organization(const GetOrganizationResponse* msg);
};

const ::viam::app::v1::Organization&
GetOrganizationResponse::_Internal::organization(const GetOrganizationResponse* msg) {
  return *msg->organization_;
}
GetOrganizationResponse::GetOrganizationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetOrganizationResponse)
}
GetOrganizationResponse::GetOrganizationResponse(const GetOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_organization()) {
    organization_ = new ::viam::app::v1::Organization(*from.organization_);
  } else {
    organization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetOrganizationResponse)
}

inline void GetOrganizationResponse::SharedCtor() {
organization_ = nullptr;
}

GetOrganizationResponse::~GetOrganizationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetOrganizationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrganizationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete organization_;
}

void GetOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetOrganizationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && organization_ != nullptr) {
    delete organization_;
  }
  organization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_organization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrganizationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetOrganizationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::organization(this),
        _Internal::organization(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetOrganizationResponse)
  return target;
}

size_t GetOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetOrganizationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *organization_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrganizationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrganizationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrganizationResponse::GetClassData() const { return &_class_data_; }

void GetOrganizationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOrganizationResponse *>(to)->MergeFrom(
      static_cast<const GetOrganizationResponse &>(from));
}


void GetOrganizationResponse::MergeFrom(const GetOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_organization()) {
    _internal_mutable_organization()->::viam::app::v1::Organization::MergeFrom(from._internal_organization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrganizationResponse::CopyFrom(const GetOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationResponse::IsInitialized() const {
  return true;
}

void GetOrganizationResponse::InternalSwap(GetOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(organization_, other->organization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[12]);
}

// ===================================================================

class GetOrganizationNamespaceAvailabilityRequest::_Internal {
 public:
};

GetOrganizationNamespaceAvailabilityRequest::GetOrganizationNamespaceAvailabilityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
}
GetOrganizationNamespaceAvailabilityRequest::GetOrganizationNamespaceAvailabilityRequest(const GetOrganizationNamespaceAvailabilityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  public_namespace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    public_namespace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_public_namespace().empty()) {
    public_namespace_.Set(from._internal_public_namespace(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
}

inline void GetOrganizationNamespaceAvailabilityRequest::SharedCtor() {
public_namespace_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  public_namespace_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetOrganizationNamespaceAvailabilityRequest::~GetOrganizationNamespaceAvailabilityRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrganizationNamespaceAvailabilityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  public_namespace_.Destroy();
}

void GetOrganizationNamespaceAvailabilityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationNamespaceAvailabilityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  public_namespace_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationNamespaceAvailabilityRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string public_namespace = 1 [json_name = "publicNamespace"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_public_namespace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetOrganizationNamespaceAvailabilityRequest.public_namespace"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrganizationNamespaceAvailabilityRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string public_namespace = 1 [json_name = "publicNamespace"];
  if (!this->_internal_public_namespace().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_namespace().data(), static_cast<int>(this->_internal_public_namespace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetOrganizationNamespaceAvailabilityRequest.public_namespace");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_public_namespace(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  return target;
}

size_t GetOrganizationNamespaceAvailabilityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string public_namespace = 1 [json_name = "publicNamespace"];
  if (!this->_internal_public_namespace().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_namespace());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrganizationNamespaceAvailabilityRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrganizationNamespaceAvailabilityRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrganizationNamespaceAvailabilityRequest::GetClassData() const { return &_class_data_; }

void GetOrganizationNamespaceAvailabilityRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOrganizationNamespaceAvailabilityRequest *>(to)->MergeFrom(
      static_cast<const GetOrganizationNamespaceAvailabilityRequest &>(from));
}


void GetOrganizationNamespaceAvailabilityRequest::MergeFrom(const GetOrganizationNamespaceAvailabilityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_public_namespace().empty()) {
    _internal_set_public_namespace(from._internal_public_namespace());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrganizationNamespaceAvailabilityRequest::CopyFrom(const GetOrganizationNamespaceAvailabilityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetOrganizationNamespaceAvailabilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationNamespaceAvailabilityRequest::IsInitialized() const {
  return true;
}

void GetOrganizationNamespaceAvailabilityRequest::InternalSwap(GetOrganizationNamespaceAvailabilityRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &public_namespace_, lhs_arena,
      &other->public_namespace_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationNamespaceAvailabilityRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[13]);
}

// ===================================================================

class GetOrganizationNamespaceAvailabilityResponse::_Internal {
 public:
};

GetOrganizationNamespaceAvailabilityResponse::GetOrganizationNamespaceAvailabilityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
}
GetOrganizationNamespaceAvailabilityResponse::GetOrganizationNamespaceAvailabilityResponse(const GetOrganizationNamespaceAvailabilityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  available_ = from.available_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
}

inline void GetOrganizationNamespaceAvailabilityResponse::SharedCtor() {
available_ = false;
}

GetOrganizationNamespaceAvailabilityResponse::~GetOrganizationNamespaceAvailabilityResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrganizationNamespaceAvailabilityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetOrganizationNamespaceAvailabilityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationNamespaceAvailabilityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  available_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationNamespaceAvailabilityResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool available = 1 [json_name = "available"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          available_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrganizationNamespaceAvailabilityResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool available = 1 [json_name = "available"];
  if (this->_internal_available() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_available(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  return target;
}

size_t GetOrganizationNamespaceAvailabilityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool available = 1 [json_name = "available"];
  if (this->_internal_available() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrganizationNamespaceAvailabilityResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrganizationNamespaceAvailabilityResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrganizationNamespaceAvailabilityResponse::GetClassData() const { return &_class_data_; }

void GetOrganizationNamespaceAvailabilityResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOrganizationNamespaceAvailabilityResponse *>(to)->MergeFrom(
      static_cast<const GetOrganizationNamespaceAvailabilityResponse &>(from));
}


void GetOrganizationNamespaceAvailabilityResponse::MergeFrom(const GetOrganizationNamespaceAvailabilityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_available() != 0) {
    _internal_set_available(from._internal_available());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrganizationNamespaceAvailabilityResponse::CopyFrom(const GetOrganizationNamespaceAvailabilityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetOrganizationNamespaceAvailabilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationNamespaceAvailabilityResponse::IsInitialized() const {
  return true;
}

void GetOrganizationNamespaceAvailabilityResponse::InternalSwap(GetOrganizationNamespaceAvailabilityResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(available_, other->available_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationNamespaceAvailabilityResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[14]);
}

// ===================================================================

class UpdateOrganizationRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateOrganizationRequest>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_public_namespace(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_region(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_cid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

UpdateOrganizationRequest::UpdateOrganizationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateOrganizationRequest)
}
UpdateOrganizationRequest::UpdateOrganizationRequest(const UpdateOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  public_namespace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    public_namespace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_public_namespace()) {
    public_namespace_.Set(from._internal_public_namespace(), 
      GetArenaForAllocation());
  }
  region_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    region_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_region()) {
    region_.Set(from._internal_region(), 
      GetArenaForAllocation());
  }
  cid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_cid()) {
    cid_.Set(from._internal_cid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateOrganizationRequest)
}

inline void UpdateOrganizationRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
public_namespace_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  public_namespace_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
region_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  region_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
cid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateOrganizationRequest::~UpdateOrganizationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateOrganizationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateOrganizationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  name_.Destroy();
  public_namespace_.Destroy();
  region_.Destroy();
  cid_.Destroy();
}

void UpdateOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateOrganizationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      public_namespace_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      region_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      cid_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOrganizationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOrganizationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // optional string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOrganizationRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string public_namespace = 3 [json_name = "publicNamespace"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_public_namespace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOrganizationRequest.public_namespace"));
        } else
          goto handle_unusual;
        continue;
      // optional string region = 4 [json_name = "region"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_region();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOrganizationRequest.region"));
        } else
          goto handle_unusual;
        continue;
      // optional string cid = 5 [json_name = "cid"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_cid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOrganizationRequest.cid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateOrganizationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateOrganizationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOrganizationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // optional string name = 2 [json_name = "name"];
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOrganizationRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string public_namespace = 3 [json_name = "publicNamespace"];
  if (_internal_has_public_namespace()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_namespace().data(), static_cast<int>(this->_internal_public_namespace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOrganizationRequest.public_namespace");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_public_namespace(), target);
  }

  // optional string region = 4 [json_name = "region"];
  if (_internal_has_region()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_region().data(), static_cast<int>(this->_internal_region().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOrganizationRequest.region");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_region(), target);
  }

  // optional string cid = 5 [json_name = "cid"];
  if (_internal_has_cid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cid().data(), static_cast<int>(this->_internal_cid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOrganizationRequest.cid");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_cid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateOrganizationRequest)
  return target;
}

size_t UpdateOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateOrganizationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 2 [json_name = "name"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string public_namespace = 3 [json_name = "publicNamespace"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_public_namespace());
    }

    // optional string region = 4 [json_name = "region"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_region());
    }

    // optional string cid = 5 [json_name = "cid"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_cid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateOrganizationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateOrganizationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateOrganizationRequest::GetClassData() const { return &_class_data_; }

void UpdateOrganizationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateOrganizationRequest *>(to)->MergeFrom(
      static_cast<const UpdateOrganizationRequest &>(from));
}


void UpdateOrganizationRequest::MergeFrom(const UpdateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_public_namespace(from._internal_public_namespace());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_region(from._internal_region());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_cid(from._internal_cid());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateOrganizationRequest::CopyFrom(const UpdateOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrganizationRequest::IsInitialized() const {
  return true;
}

void UpdateOrganizationRequest::InternalSwap(UpdateOrganizationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &public_namespace_, lhs_arena,
      &other->public_namespace_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &region_, lhs_arena,
      &other->region_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &cid_, lhs_arena,
      &other->cid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrganizationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[15]);
}

// ===================================================================

class UpdateOrganizationResponse::_Internal {
 public:
  static const ::viam::app::v1::Organization& organization(const UpdateOrganizationResponse* msg);
};

const ::viam::app::v1::Organization&
UpdateOrganizationResponse::_Internal::organization(const UpdateOrganizationResponse* msg) {
  return *msg->organization_;
}
UpdateOrganizationResponse::UpdateOrganizationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateOrganizationResponse)
}
UpdateOrganizationResponse::UpdateOrganizationResponse(const UpdateOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_organization()) {
    organization_ = new ::viam::app::v1::Organization(*from.organization_);
  } else {
    organization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateOrganizationResponse)
}

inline void UpdateOrganizationResponse::SharedCtor() {
organization_ = nullptr;
}

UpdateOrganizationResponse::~UpdateOrganizationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateOrganizationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateOrganizationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete organization_;
}

void UpdateOrganizationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateOrganizationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateOrganizationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && organization_ != nullptr) {
    delete organization_;
  }
  organization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOrganizationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_organization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateOrganizationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateOrganizationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::organization(this),
        _Internal::organization(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateOrganizationResponse)
  return target;
}

size_t UpdateOrganizationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateOrganizationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Organization organization = 1 [json_name = "organization"];
  if (this->_internal_has_organization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *organization_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateOrganizationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateOrganizationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateOrganizationResponse::GetClassData() const { return &_class_data_; }

void UpdateOrganizationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateOrganizationResponse *>(to)->MergeFrom(
      static_cast<const UpdateOrganizationResponse &>(from));
}


void UpdateOrganizationResponse::MergeFrom(const UpdateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateOrganizationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_organization()) {
    _internal_mutable_organization()->::viam::app::v1::Organization::MergeFrom(from._internal_organization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateOrganizationResponse::CopyFrom(const UpdateOrganizationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateOrganizationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrganizationResponse::IsInitialized() const {
  return true;
}

void UpdateOrganizationResponse::InternalSwap(UpdateOrganizationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(organization_, other->organization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrganizationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[16]);
}

// ===================================================================

class DeleteOrganizationRequest::_Internal {
 public:
};

DeleteOrganizationRequest::DeleteOrganizationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOrganizationRequest)
}
DeleteOrganizationRequest::DeleteOrganizationRequest(const DeleteOrganizationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOrganizationRequest)
}

inline void DeleteOrganizationRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteOrganizationRequest::~DeleteOrganizationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteOrganizationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteOrganizationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void DeleteOrganizationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteOrganizationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteOrganizationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOrganizationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteOrganizationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteOrganizationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteOrganizationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteOrganizationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteOrganizationRequest)
  return target;
}

size_t DeleteOrganizationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteOrganizationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOrganizationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteOrganizationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOrganizationRequest::GetClassData() const { return &_class_data_; }

void DeleteOrganizationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteOrganizationRequest *>(to)->MergeFrom(
      static_cast<const DeleteOrganizationRequest &>(from));
}


void DeleteOrganizationRequest::MergeFrom(const DeleteOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteOrganizationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteOrganizationRequest::CopyFrom(const DeleteOrganizationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteOrganizationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationRequest::IsInitialized() const {
  return true;
}

void DeleteOrganizationRequest::InternalSwap(DeleteOrganizationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[17]);
}

// ===================================================================

class DeleteOrganizationResponse::_Internal {
 public:
};

DeleteOrganizationResponse::DeleteOrganizationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOrganizationResponse)
}
DeleteOrganizationResponse::DeleteOrganizationResponse(const DeleteOrganizationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOrganizationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOrganizationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOrganizationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[18]);
}

// ===================================================================

class ListOrganizationMembersRequest::_Internal {
 public:
};

ListOrganizationMembersRequest::ListOrganizationMembersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationMembersRequest)
}
ListOrganizationMembersRequest::ListOrganizationMembersRequest(const ListOrganizationMembersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationMembersRequest)
}

inline void ListOrganizationMembersRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListOrganizationMembersRequest::~ListOrganizationMembersRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListOrganizationMembersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListOrganizationMembersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void ListOrganizationMembersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListOrganizationMembersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListOrganizationMembersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListOrganizationMembersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListOrganizationMembersRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListOrganizationMembersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListOrganizationMembersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListOrganizationMembersRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListOrganizationMembersRequest)
  return target;
}

size_t ListOrganizationMembersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListOrganizationMembersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationMembersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListOrganizationMembersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationMembersRequest::GetClassData() const { return &_class_data_; }

void ListOrganizationMembersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListOrganizationMembersRequest *>(to)->MergeFrom(
      static_cast<const ListOrganizationMembersRequest &>(from));
}


void ListOrganizationMembersRequest::MergeFrom(const ListOrganizationMembersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListOrganizationMembersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListOrganizationMembersRequest::CopyFrom(const ListOrganizationMembersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListOrganizationMembersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOrganizationMembersRequest::IsInitialized() const {
  return true;
}

void ListOrganizationMembersRequest::InternalSwap(ListOrganizationMembersRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationMembersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[19]);
}

// ===================================================================

class ListOrganizationMembersResponse::_Internal {
 public:
};

ListOrganizationMembersResponse::ListOrganizationMembersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  members_(arena),
  invites_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationMembersResponse)
}
ListOrganizationMembersResponse::ListOrganizationMembersResponse(const ListOrganizationMembersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      members_(from.members_),
      invites_(from.invites_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationMembersResponse)
}

inline void ListOrganizationMembersResponse::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListOrganizationMembersResponse::~ListOrganizationMembersResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListOrganizationMembersResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListOrganizationMembersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void ListOrganizationMembersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListOrganizationMembersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListOrganizationMembersResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  invites_.Clear();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListOrganizationMembersResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListOrganizationMembersResponse.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.OrganizationMember members = 2 [json_name = "members"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.OrganizationInvite invites = 3 [json_name = "invites"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_invites(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListOrganizationMembersResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListOrganizationMembersResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListOrganizationMembersResponse.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // repeated .viam.app.v1.OrganizationMember members = 2 [json_name = "members"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_members_size()); i < n; i++) {
    const auto& repfield = this->_internal_members(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.OrganizationInvite invites = 3 [json_name = "invites"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_invites_size()); i < n; i++) {
    const auto& repfield = this->_internal_invites(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListOrganizationMembersResponse)
  return target;
}

size_t ListOrganizationMembersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListOrganizationMembersResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.OrganizationMember members = 2 [json_name = "members"];
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .viam.app.v1.OrganizationInvite invites = 3 [json_name = "invites"];
  total_size += 1UL * this->_internal_invites_size();
  for (const auto& msg : this->invites_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationMembersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListOrganizationMembersResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationMembersResponse::GetClassData() const { return &_class_data_; }

void ListOrganizationMembersResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListOrganizationMembersResponse *>(to)->MergeFrom(
      static_cast<const ListOrganizationMembersResponse &>(from));
}


void ListOrganizationMembersResponse::MergeFrom(const ListOrganizationMembersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListOrganizationMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  invites_.MergeFrom(from.invites_);
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListOrganizationMembersResponse::CopyFrom(const ListOrganizationMembersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListOrganizationMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOrganizationMembersResponse::IsInitialized() const {
  return true;
}

void ListOrganizationMembersResponse::InternalSwap(ListOrganizationMembersResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  members_.InternalSwap(&other->members_);
  invites_.InternalSwap(&other->invites_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationMembersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[20]);
}

// ===================================================================

class CreateOrganizationInviteRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateOrganizationInviteRequest>()._has_bits_);
  static void set_has_send_email_invite(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CreateOrganizationInviteRequest::CreateOrganizationInviteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  authorizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateOrganizationInviteRequest)
}
CreateOrganizationInviteRequest::CreateOrganizationInviteRequest(const CreateOrganizationInviteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      authorizations_(from.authorizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  send_email_invite_ = from.send_email_invite_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateOrganizationInviteRequest)
}

inline void CreateOrganizationInviteRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
send_email_invite_ = false;
}

CreateOrganizationInviteRequest::~CreateOrganizationInviteRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateOrganizationInviteRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateOrganizationInviteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  email_.Destroy();
}

void CreateOrganizationInviteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOrganizationInviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateOrganizationInviteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorizations_.Clear();
  organization_id_.ClearToEmpty();
  email_.ClearToEmpty();
  send_email_invite_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationInviteRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateOrganizationInviteRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateOrganizationInviteRequest.email"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Authorization authorizations = 3 [json_name = "authorizations"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_authorizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool send_email_invite = 4 [json_name = "sendEmailInvite"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_send_email_invite(&has_bits);
          send_email_invite_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateOrganizationInviteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateOrganizationInviteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateOrganizationInviteRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateOrganizationInviteRequest.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  // repeated .viam.app.v1.Authorization authorizations = 3 [json_name = "authorizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_authorizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_authorizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bool send_email_invite = 4 [json_name = "sendEmailInvite"];
  if (_internal_has_send_email_invite()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_send_email_invite(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateOrganizationInviteRequest)
  return target;
}

size_t CreateOrganizationInviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateOrganizationInviteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Authorization authorizations = 3 [json_name = "authorizations"];
  total_size += 1UL * this->_internal_authorizations_size();
  for (const auto& msg : this->authorizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // optional bool send_email_invite = 4 [json_name = "sendEmailInvite"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateOrganizationInviteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateOrganizationInviteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateOrganizationInviteRequest::GetClassData() const { return &_class_data_; }

void CreateOrganizationInviteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateOrganizationInviteRequest *>(to)->MergeFrom(
      static_cast<const CreateOrganizationInviteRequest &>(from));
}


void CreateOrganizationInviteRequest::MergeFrom(const CreateOrganizationInviteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateOrganizationInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  authorizations_.MergeFrom(from.authorizations_);
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  if (from._internal_has_send_email_invite()) {
    _internal_set_send_email_invite(from._internal_send_email_invite());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateOrganizationInviteRequest::CopyFrom(const CreateOrganizationInviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateOrganizationInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationInviteRequest::IsInitialized() const {
  return true;
}

void CreateOrganizationInviteRequest::InternalSwap(CreateOrganizationInviteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  authorizations_.InternalSwap(&other->authorizations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
  swap(send_email_invite_, other->send_email_invite_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationInviteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[21]);
}

// ===================================================================

class CreateOrganizationInviteResponse::_Internal {
 public:
  static const ::viam::app::v1::OrganizationInvite& invite(const CreateOrganizationInviteResponse* msg);
};

const ::viam::app::v1::OrganizationInvite&
CreateOrganizationInviteResponse::_Internal::invite(const CreateOrganizationInviteResponse* msg) {
  return *msg->invite_;
}
CreateOrganizationInviteResponse::CreateOrganizationInviteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateOrganizationInviteResponse)
}
CreateOrganizationInviteResponse::CreateOrganizationInviteResponse(const CreateOrganizationInviteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_invite()) {
    invite_ = new ::viam::app::v1::OrganizationInvite(*from.invite_);
  } else {
    invite_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateOrganizationInviteResponse)
}

inline void CreateOrganizationInviteResponse::SharedCtor() {
invite_ = nullptr;
}

CreateOrganizationInviteResponse::~CreateOrganizationInviteResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateOrganizationInviteResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateOrganizationInviteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete invite_;
}

void CreateOrganizationInviteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOrganizationInviteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateOrganizationInviteResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && invite_ != nullptr) {
    delete invite_;
  }
  invite_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrganizationInviteResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invite(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateOrganizationInviteResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateOrganizationInviteResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
  if (this->_internal_has_invite()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::invite(this),
        _Internal::invite(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateOrganizationInviteResponse)
  return target;
}

size_t CreateOrganizationInviteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateOrganizationInviteResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
  if (this->_internal_has_invite()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *invite_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateOrganizationInviteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateOrganizationInviteResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateOrganizationInviteResponse::GetClassData() const { return &_class_data_; }

void CreateOrganizationInviteResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateOrganizationInviteResponse *>(to)->MergeFrom(
      static_cast<const CreateOrganizationInviteResponse &>(from));
}


void CreateOrganizationInviteResponse::MergeFrom(const CreateOrganizationInviteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateOrganizationInviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_invite()) {
    _internal_mutable_invite()->::viam::app::v1::OrganizationInvite::MergeFrom(from._internal_invite());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateOrganizationInviteResponse::CopyFrom(const CreateOrganizationInviteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateOrganizationInviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrganizationInviteResponse::IsInitialized() const {
  return true;
}

void CreateOrganizationInviteResponse::InternalSwap(CreateOrganizationInviteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(invite_, other->invite_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrganizationInviteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[22]);
}

// ===================================================================

class UpdateOrganizationInviteAuthorizationsRequest::_Internal {
 public:
};

UpdateOrganizationInviteAuthorizationsRequest::UpdateOrganizationInviteAuthorizationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  add_authorizations_(arena),
  remove_authorizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
}
UpdateOrganizationInviteAuthorizationsRequest::UpdateOrganizationInviteAuthorizationsRequest(const UpdateOrganizationInviteAuthorizationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      add_authorizations_(from.add_authorizations_),
      remove_authorizations_(from.remove_authorizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
}

inline void UpdateOrganizationInviteAuthorizationsRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateOrganizationInviteAuthorizationsRequest::~UpdateOrganizationInviteAuthorizationsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateOrganizationInviteAuthorizationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  email_.Destroy();
}

void UpdateOrganizationInviteAuthorizationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateOrganizationInviteAuthorizationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  add_authorizations_.Clear();
  remove_authorizations_.Clear();
  organization_id_.ClearToEmpty();
  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOrganizationInviteAuthorizationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest.email"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Authorization add_authorizations = 3 [json_name = "addAuthorizations"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_add_authorizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Authorization remove_authorizations = 4 [json_name = "removeAuthorizations"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_remove_authorizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateOrganizationInviteAuthorizationsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  // repeated .viam.app.v1.Authorization add_authorizations = 3 [json_name = "addAuthorizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_add_authorizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_add_authorizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.Authorization remove_authorizations = 4 [json_name = "removeAuthorizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_remove_authorizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_remove_authorizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  return target;
}

size_t UpdateOrganizationInviteAuthorizationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Authorization add_authorizations = 3 [json_name = "addAuthorizations"];
  total_size += 1UL * this->_internal_add_authorizations_size();
  for (const auto& msg : this->add_authorizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .viam.app.v1.Authorization remove_authorizations = 4 [json_name = "removeAuthorizations"];
  total_size += 1UL * this->_internal_remove_authorizations_size();
  for (const auto& msg : this->remove_authorizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateOrganizationInviteAuthorizationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateOrganizationInviteAuthorizationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateOrganizationInviteAuthorizationsRequest::GetClassData() const { return &_class_data_; }

void UpdateOrganizationInviteAuthorizationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateOrganizationInviteAuthorizationsRequest *>(to)->MergeFrom(
      static_cast<const UpdateOrganizationInviteAuthorizationsRequest &>(from));
}


void UpdateOrganizationInviteAuthorizationsRequest::MergeFrom(const UpdateOrganizationInviteAuthorizationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  add_authorizations_.MergeFrom(from.add_authorizations_);
  remove_authorizations_.MergeFrom(from.remove_authorizations_);
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateOrganizationInviteAuthorizationsRequest::CopyFrom(const UpdateOrganizationInviteAuthorizationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrganizationInviteAuthorizationsRequest::IsInitialized() const {
  return true;
}

void UpdateOrganizationInviteAuthorizationsRequest::InternalSwap(UpdateOrganizationInviteAuthorizationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  add_authorizations_.InternalSwap(&other->add_authorizations_);
  remove_authorizations_.InternalSwap(&other->remove_authorizations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrganizationInviteAuthorizationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[23]);
}

// ===================================================================

class UpdateOrganizationInviteAuthorizationsResponse::_Internal {
 public:
  static const ::viam::app::v1::OrganizationInvite& invite(const UpdateOrganizationInviteAuthorizationsResponse* msg);
};

const ::viam::app::v1::OrganizationInvite&
UpdateOrganizationInviteAuthorizationsResponse::_Internal::invite(const UpdateOrganizationInviteAuthorizationsResponse* msg) {
  return *msg->invite_;
}
UpdateOrganizationInviteAuthorizationsResponse::UpdateOrganizationInviteAuthorizationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
}
UpdateOrganizationInviteAuthorizationsResponse::UpdateOrganizationInviteAuthorizationsResponse(const UpdateOrganizationInviteAuthorizationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_invite()) {
    invite_ = new ::viam::app::v1::OrganizationInvite(*from.invite_);
  } else {
    invite_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
}

inline void UpdateOrganizationInviteAuthorizationsResponse::SharedCtor() {
invite_ = nullptr;
}

UpdateOrganizationInviteAuthorizationsResponse::~UpdateOrganizationInviteAuthorizationsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateOrganizationInviteAuthorizationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete invite_;
}

void UpdateOrganizationInviteAuthorizationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateOrganizationInviteAuthorizationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && invite_ != nullptr) {
    delete invite_;
  }
  invite_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOrganizationInviteAuthorizationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invite(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateOrganizationInviteAuthorizationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
  if (this->_internal_has_invite()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::invite(this),
        _Internal::invite(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  return target;
}

size_t UpdateOrganizationInviteAuthorizationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
  if (this->_internal_has_invite()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *invite_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateOrganizationInviteAuthorizationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateOrganizationInviteAuthorizationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateOrganizationInviteAuthorizationsResponse::GetClassData() const { return &_class_data_; }

void UpdateOrganizationInviteAuthorizationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateOrganizationInviteAuthorizationsResponse *>(to)->MergeFrom(
      static_cast<const UpdateOrganizationInviteAuthorizationsResponse &>(from));
}


void UpdateOrganizationInviteAuthorizationsResponse::MergeFrom(const UpdateOrganizationInviteAuthorizationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_invite()) {
    _internal_mutable_invite()->::viam::app::v1::OrganizationInvite::MergeFrom(from._internal_invite());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateOrganizationInviteAuthorizationsResponse::CopyFrom(const UpdateOrganizationInviteAuthorizationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateOrganizationInviteAuthorizationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOrganizationInviteAuthorizationsResponse::IsInitialized() const {
  return true;
}

void UpdateOrganizationInviteAuthorizationsResponse::InternalSwap(UpdateOrganizationInviteAuthorizationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(invite_, other->invite_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOrganizationInviteAuthorizationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[24]);
}

// ===================================================================

class DeleteOrganizationInviteRequest::_Internal {
 public:
};

DeleteOrganizationInviteRequest::DeleteOrganizationInviteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOrganizationInviteRequest)
}
DeleteOrganizationInviteRequest::DeleteOrganizationInviteRequest(const DeleteOrganizationInviteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOrganizationInviteRequest)
}

inline void DeleteOrganizationInviteRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteOrganizationInviteRequest::~DeleteOrganizationInviteRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteOrganizationInviteRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteOrganizationInviteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  email_.Destroy();
}

void DeleteOrganizationInviteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteOrganizationInviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteOrganizationInviteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOrganizationInviteRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteOrganizationInviteRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteOrganizationInviteRequest.email"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteOrganizationInviteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteOrganizationInviteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteOrganizationInviteRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteOrganizationInviteRequest.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteOrganizationInviteRequest)
  return target;
}

size_t DeleteOrganizationInviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteOrganizationInviteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOrganizationInviteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteOrganizationInviteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOrganizationInviteRequest::GetClassData() const { return &_class_data_; }

void DeleteOrganizationInviteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteOrganizationInviteRequest *>(to)->MergeFrom(
      static_cast<const DeleteOrganizationInviteRequest &>(from));
}


void DeleteOrganizationInviteRequest::MergeFrom(const DeleteOrganizationInviteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteOrganizationInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteOrganizationInviteRequest::CopyFrom(const DeleteOrganizationInviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteOrganizationInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationInviteRequest::IsInitialized() const {
  return true;
}

void DeleteOrganizationInviteRequest::InternalSwap(DeleteOrganizationInviteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationInviteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[25]);
}

// ===================================================================

class DeleteOrganizationInviteResponse::_Internal {
 public:
};

DeleteOrganizationInviteResponse::DeleteOrganizationInviteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOrganizationInviteResponse)
}
DeleteOrganizationInviteResponse::DeleteOrganizationInviteResponse(const DeleteOrganizationInviteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOrganizationInviteResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOrganizationInviteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOrganizationInviteResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationInviteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[26]);
}

// ===================================================================

class ResendOrganizationInviteRequest::_Internal {
 public:
};

ResendOrganizationInviteRequest::ResendOrganizationInviteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ResendOrganizationInviteRequest)
}
ResendOrganizationInviteRequest::ResendOrganizationInviteRequest(const ResendOrganizationInviteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ResendOrganizationInviteRequest)
}

inline void ResendOrganizationInviteRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResendOrganizationInviteRequest::~ResendOrganizationInviteRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ResendOrganizationInviteRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResendOrganizationInviteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  email_.Destroy();
}

void ResendOrganizationInviteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResendOrganizationInviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ResendOrganizationInviteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResendOrganizationInviteRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ResendOrganizationInviteRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ResendOrganizationInviteRequest.email"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResendOrganizationInviteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ResendOrganizationInviteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ResendOrganizationInviteRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ResendOrganizationInviteRequest.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ResendOrganizationInviteRequest)
  return target;
}

size_t ResendOrganizationInviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ResendOrganizationInviteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResendOrganizationInviteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResendOrganizationInviteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResendOrganizationInviteRequest::GetClassData() const { return &_class_data_; }

void ResendOrganizationInviteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResendOrganizationInviteRequest *>(to)->MergeFrom(
      static_cast<const ResendOrganizationInviteRequest &>(from));
}


void ResendOrganizationInviteRequest::MergeFrom(const ResendOrganizationInviteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ResendOrganizationInviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResendOrganizationInviteRequest::CopyFrom(const ResendOrganizationInviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ResendOrganizationInviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResendOrganizationInviteRequest::IsInitialized() const {
  return true;
}

void ResendOrganizationInviteRequest::InternalSwap(ResendOrganizationInviteRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ResendOrganizationInviteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[27]);
}

// ===================================================================

class ResendOrganizationInviteResponse::_Internal {
 public:
  static const ::viam::app::v1::OrganizationInvite& invite(const ResendOrganizationInviteResponse* msg);
};

const ::viam::app::v1::OrganizationInvite&
ResendOrganizationInviteResponse::_Internal::invite(const ResendOrganizationInviteResponse* msg) {
  return *msg->invite_;
}
ResendOrganizationInviteResponse::ResendOrganizationInviteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ResendOrganizationInviteResponse)
}
ResendOrganizationInviteResponse::ResendOrganizationInviteResponse(const ResendOrganizationInviteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_invite()) {
    invite_ = new ::viam::app::v1::OrganizationInvite(*from.invite_);
  } else {
    invite_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ResendOrganizationInviteResponse)
}

inline void ResendOrganizationInviteResponse::SharedCtor() {
invite_ = nullptr;
}

ResendOrganizationInviteResponse::~ResendOrganizationInviteResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ResendOrganizationInviteResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResendOrganizationInviteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete invite_;
}

void ResendOrganizationInviteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResendOrganizationInviteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ResendOrganizationInviteResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && invite_ != nullptr) {
    delete invite_;
  }
  invite_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResendOrganizationInviteResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invite(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResendOrganizationInviteResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ResendOrganizationInviteResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
  if (this->_internal_has_invite()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::invite(this),
        _Internal::invite(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ResendOrganizationInviteResponse)
  return target;
}

size_t ResendOrganizationInviteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ResendOrganizationInviteResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.OrganizationInvite invite = 1 [json_name = "invite"];
  if (this->_internal_has_invite()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *invite_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResendOrganizationInviteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResendOrganizationInviteResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResendOrganizationInviteResponse::GetClassData() const { return &_class_data_; }

void ResendOrganizationInviteResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResendOrganizationInviteResponse *>(to)->MergeFrom(
      static_cast<const ResendOrganizationInviteResponse &>(from));
}


void ResendOrganizationInviteResponse::MergeFrom(const ResendOrganizationInviteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ResendOrganizationInviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_invite()) {
    _internal_mutable_invite()->::viam::app::v1::OrganizationInvite::MergeFrom(from._internal_invite());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResendOrganizationInviteResponse::CopyFrom(const ResendOrganizationInviteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ResendOrganizationInviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResendOrganizationInviteResponse::IsInitialized() const {
  return true;
}

void ResendOrganizationInviteResponse::InternalSwap(ResendOrganizationInviteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(invite_, other->invite_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResendOrganizationInviteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[28]);
}

// ===================================================================

class DeleteOrganizationMemberRequest::_Internal {
 public:
};

DeleteOrganizationMemberRequest::DeleteOrganizationMemberRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOrganizationMemberRequest)
}
DeleteOrganizationMemberRequest::DeleteOrganizationMemberRequest(const DeleteOrganizationMemberRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    user_id_.Set(from._internal_user_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOrganizationMemberRequest)
}

inline void DeleteOrganizationMemberRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
user_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  user_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteOrganizationMemberRequest::~DeleteOrganizationMemberRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteOrganizationMemberRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteOrganizationMemberRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  user_id_.Destroy();
}

void DeleteOrganizationMemberRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteOrganizationMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteOrganizationMemberRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOrganizationMemberRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteOrganizationMemberRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string user_id = 2 [json_name = "userId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteOrganizationMemberRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteOrganizationMemberRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteOrganizationMemberRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteOrganizationMemberRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteOrganizationMemberRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteOrganizationMemberRequest)
  return target;
}

size_t DeleteOrganizationMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteOrganizationMemberRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOrganizationMemberRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteOrganizationMemberRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOrganizationMemberRequest::GetClassData() const { return &_class_data_; }

void DeleteOrganizationMemberRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteOrganizationMemberRequest *>(to)->MergeFrom(
      static_cast<const DeleteOrganizationMemberRequest &>(from));
}


void DeleteOrganizationMemberRequest::MergeFrom(const DeleteOrganizationMemberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteOrganizationMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteOrganizationMemberRequest::CopyFrom(const DeleteOrganizationMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteOrganizationMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOrganizationMemberRequest::IsInitialized() const {
  return true;
}

void DeleteOrganizationMemberRequest::InternalSwap(DeleteOrganizationMemberRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &user_id_, lhs_arena,
      &other->user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationMemberRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[29]);
}

// ===================================================================

class DeleteOrganizationMemberResponse::_Internal {
 public:
};

DeleteOrganizationMemberResponse::DeleteOrganizationMemberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOrganizationMemberResponse)
}
DeleteOrganizationMemberResponse::DeleteOrganizationMemberResponse(const DeleteOrganizationMemberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOrganizationMemberResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOrganizationMemberResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOrganizationMemberResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteOrganizationMemberResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[30]);
}

// ===================================================================

class BillingAddress::_Internal {
 public:
  using HasBits = decltype(std::declval<BillingAddress>()._has_bits_);
  static void set_has_address_line_2(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

BillingAddress::BillingAddress(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.BillingAddress)
}
BillingAddress::BillingAddress(const BillingAddress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  address_line_1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    address_line_1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address_line_1().empty()) {
    address_line_1_.Set(from._internal_address_line_1(), 
      GetArenaForAllocation());
  }
  address_line_2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    address_line_2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_address_line_2()) {
    address_line_2_.Set(from._internal_address_line_2(), 
      GetArenaForAllocation());
  }
  city_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    city_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_city().empty()) {
    city_.Set(from._internal_city(), 
      GetArenaForAllocation());
  }
  state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    state_.Set(from._internal_state(), 
      GetArenaForAllocation());
  }
  zipcode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    zipcode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_zipcode().empty()) {
    zipcode_.Set(from._internal_zipcode(), 
      GetArenaForAllocation());
  }
  country_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    country_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_country().empty()) {
    country_.Set(from._internal_country(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.BillingAddress)
}

inline void BillingAddress::SharedCtor() {
address_line_1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  address_line_1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
address_line_2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  address_line_2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
city_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  city_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
state_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  state_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
zipcode_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  zipcode_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
country_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  country_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BillingAddress::~BillingAddress() {
  // @@protoc_insertion_point(destructor:viam.app.v1.BillingAddress)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BillingAddress::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  address_line_1_.Destroy();
  address_line_2_.Destroy();
  city_.Destroy();
  state_.Destroy();
  zipcode_.Destroy();
  country_.Destroy();
}

void BillingAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BillingAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.BillingAddress)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_line_1_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    address_line_2_.ClearNonDefaultToEmpty();
  }
  city_.ClearToEmpty();
  state_.ClearToEmpty();
  zipcode_.ClearToEmpty();
  country_.ClearToEmpty();
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BillingAddress::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address_line_1 = 1 [json_name = "addressLine1"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address_line_1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.BillingAddress.address_line_1"));
        } else
          goto handle_unusual;
        continue;
      // optional string address_line_2 = 2 [json_name = "addressLine2"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_address_line_2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.BillingAddress.address_line_2"));
        } else
          goto handle_unusual;
        continue;
      // string city = 3 [json_name = "city"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_city();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.BillingAddress.city"));
        } else
          goto handle_unusual;
        continue;
      // string state = 4 [json_name = "state"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_state();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.BillingAddress.state"));
        } else
          goto handle_unusual;
        continue;
      // string zipcode = 5 [json_name = "zipcode"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_zipcode();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.BillingAddress.zipcode"));
        } else
          goto handle_unusual;
        continue;
      // string country = 6 [json_name = "country"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_country();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.BillingAddress.country"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BillingAddress::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.BillingAddress)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address_line_1 = 1 [json_name = "addressLine1"];
  if (!this->_internal_address_line_1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address_line_1().data(), static_cast<int>(this->_internal_address_line_1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.BillingAddress.address_line_1");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address_line_1(), target);
  }

  // optional string address_line_2 = 2 [json_name = "addressLine2"];
  if (_internal_has_address_line_2()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address_line_2().data(), static_cast<int>(this->_internal_address_line_2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.BillingAddress.address_line_2");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_address_line_2(), target);
  }

  // string city = 3 [json_name = "city"];
  if (!this->_internal_city().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_city().data(), static_cast<int>(this->_internal_city().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.BillingAddress.city");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_city(), target);
  }

  // string state = 4 [json_name = "state"];
  if (!this->_internal_state().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.BillingAddress.state");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_state(), target);
  }

  // string zipcode = 5 [json_name = "zipcode"];
  if (!this->_internal_zipcode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_zipcode().data(), static_cast<int>(this->_internal_zipcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.BillingAddress.zipcode");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_zipcode(), target);
  }

  // string country = 6 [json_name = "country"];
  if (!this->_internal_country().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_country().data(), static_cast<int>(this->_internal_country().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.BillingAddress.country");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_country(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.BillingAddress)
  return target;
}

size_t BillingAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.BillingAddress)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address_line_1 = 1 [json_name = "addressLine1"];
  if (!this->_internal_address_line_1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address_line_1());
  }

  // optional string address_line_2 = 2 [json_name = "addressLine2"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address_line_2());
  }

  // string city = 3 [json_name = "city"];
  if (!this->_internal_city().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_city());
  }

  // string state = 4 [json_name = "state"];
  if (!this->_internal_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // string zipcode = 5 [json_name = "zipcode"];
  if (!this->_internal_zipcode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_zipcode());
  }

  // string country = 6 [json_name = "country"];
  if (!this->_internal_country().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_country());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BillingAddress::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BillingAddress::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BillingAddress::GetClassData() const { return &_class_data_; }

void BillingAddress::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BillingAddress *>(to)->MergeFrom(
      static_cast<const BillingAddress &>(from));
}


void BillingAddress::MergeFrom(const BillingAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.BillingAddress)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address_line_1().empty()) {
    _internal_set_address_line_1(from._internal_address_line_1());
  }
  if (from._internal_has_address_line_2()) {
    _internal_set_address_line_2(from._internal_address_line_2());
  }
  if (!from._internal_city().empty()) {
    _internal_set_city(from._internal_city());
  }
  if (!from._internal_state().empty()) {
    _internal_set_state(from._internal_state());
  }
  if (!from._internal_zipcode().empty()) {
    _internal_set_zipcode(from._internal_zipcode());
  }
  if (!from._internal_country().empty()) {
    _internal_set_country(from._internal_country());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BillingAddress::CopyFrom(const BillingAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.BillingAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BillingAddress::IsInitialized() const {
  return true;
}

void BillingAddress::InternalSwap(BillingAddress* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &address_line_1_, lhs_arena,
      &other->address_line_1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &address_line_2_, lhs_arena,
      &other->address_line_2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &city_, lhs_arena,
      &other->city_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &state_, lhs_arena,
      &other->state_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &zipcode_, lhs_arena,
      &other->zipcode_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &country_, lhs_arena,
      &other->country_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BillingAddress::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[31]);
}

// ===================================================================

class EnableBillingServiceRequest::_Internal {
 public:
  static const ::viam::app::v1::BillingAddress& billing_address(const EnableBillingServiceRequest* msg);
};

const ::viam::app::v1::BillingAddress&
EnableBillingServiceRequest::_Internal::billing_address(const EnableBillingServiceRequest* msg) {
  return *msg->billing_address_;
}
EnableBillingServiceRequest::EnableBillingServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.EnableBillingServiceRequest)
}
EnableBillingServiceRequest::EnableBillingServiceRequest(const EnableBillingServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_billing_address()) {
    billing_address_ = new ::viam::app::v1::BillingAddress(*from.billing_address_);
  } else {
    billing_address_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.EnableBillingServiceRequest)
}

inline void EnableBillingServiceRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
billing_address_ = nullptr;
}

EnableBillingServiceRequest::~EnableBillingServiceRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.EnableBillingServiceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnableBillingServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
  if (this != internal_default_instance()) delete billing_address_;
}

void EnableBillingServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EnableBillingServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.EnableBillingServiceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && billing_address_ != nullptr) {
    delete billing_address_;
  }
  billing_address_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableBillingServiceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.EnableBillingServiceRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.BillingAddress billing_address = 2 [json_name = "billingAddress"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_billing_address(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnableBillingServiceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.EnableBillingServiceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.EnableBillingServiceRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // .viam.app.v1.BillingAddress billing_address = 2 [json_name = "billingAddress"];
  if (this->_internal_has_billing_address()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::billing_address(this),
        _Internal::billing_address(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.EnableBillingServiceRequest)
  return target;
}

size_t EnableBillingServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.EnableBillingServiceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // .viam.app.v1.BillingAddress billing_address = 2 [json_name = "billingAddress"];
  if (this->_internal_has_billing_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *billing_address_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnableBillingServiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EnableBillingServiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnableBillingServiceRequest::GetClassData() const { return &_class_data_; }

void EnableBillingServiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<EnableBillingServiceRequest *>(to)->MergeFrom(
      static_cast<const EnableBillingServiceRequest &>(from));
}


void EnableBillingServiceRequest::MergeFrom(const EnableBillingServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.EnableBillingServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (from._internal_has_billing_address()) {
    _internal_mutable_billing_address()->::viam::app::v1::BillingAddress::MergeFrom(from._internal_billing_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnableBillingServiceRequest::CopyFrom(const EnableBillingServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.EnableBillingServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableBillingServiceRequest::IsInitialized() const {
  return true;
}

void EnableBillingServiceRequest::InternalSwap(EnableBillingServiceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
  swap(billing_address_, other->billing_address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableBillingServiceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[32]);
}

// ===================================================================

class EnableBillingServiceResponse::_Internal {
 public:
};

EnableBillingServiceResponse::EnableBillingServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.EnableBillingServiceResponse)
}
EnableBillingServiceResponse::EnableBillingServiceResponse(const EnableBillingServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.EnableBillingServiceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnableBillingServiceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnableBillingServiceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata EnableBillingServiceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[33]);
}

// ===================================================================

class UpdateBillingServiceRequest::_Internal {
 public:
  static const ::viam::app::v1::BillingAddress& billing_address(const UpdateBillingServiceRequest* msg);
};

const ::viam::app::v1::BillingAddress&
UpdateBillingServiceRequest::_Internal::billing_address(const UpdateBillingServiceRequest* msg) {
  return *msg->billing_address_;
}
UpdateBillingServiceRequest::UpdateBillingServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateBillingServiceRequest)
}
UpdateBillingServiceRequest::UpdateBillingServiceRequest(const UpdateBillingServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_billing_address()) {
    billing_address_ = new ::viam::app::v1::BillingAddress(*from.billing_address_);
  } else {
    billing_address_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateBillingServiceRequest)
}

inline void UpdateBillingServiceRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
billing_address_ = nullptr;
}

UpdateBillingServiceRequest::~UpdateBillingServiceRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateBillingServiceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateBillingServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
  if (this != internal_default_instance()) delete billing_address_;
}

void UpdateBillingServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateBillingServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateBillingServiceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && billing_address_ != nullptr) {
    delete billing_address_;
  }
  billing_address_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateBillingServiceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateBillingServiceRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.BillingAddress billing_address = 2 [json_name = "billingAddress"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_billing_address(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateBillingServiceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateBillingServiceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateBillingServiceRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // .viam.app.v1.BillingAddress billing_address = 2 [json_name = "billingAddress"];
  if (this->_internal_has_billing_address()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::billing_address(this),
        _Internal::billing_address(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateBillingServiceRequest)
  return target;
}

size_t UpdateBillingServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateBillingServiceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // .viam.app.v1.BillingAddress billing_address = 2 [json_name = "billingAddress"];
  if (this->_internal_has_billing_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *billing_address_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateBillingServiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateBillingServiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateBillingServiceRequest::GetClassData() const { return &_class_data_; }

void UpdateBillingServiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateBillingServiceRequest *>(to)->MergeFrom(
      static_cast<const UpdateBillingServiceRequest &>(from));
}


void UpdateBillingServiceRequest::MergeFrom(const UpdateBillingServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateBillingServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (from._internal_has_billing_address()) {
    _internal_mutable_billing_address()->::viam::app::v1::BillingAddress::MergeFrom(from._internal_billing_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateBillingServiceRequest::CopyFrom(const UpdateBillingServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateBillingServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBillingServiceRequest::IsInitialized() const {
  return true;
}

void UpdateBillingServiceRequest::InternalSwap(UpdateBillingServiceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
  swap(billing_address_, other->billing_address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateBillingServiceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[34]);
}

// ===================================================================

class UpdateBillingServiceResponse::_Internal {
 public:
};

UpdateBillingServiceResponse::UpdateBillingServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateBillingServiceResponse)
}
UpdateBillingServiceResponse::UpdateBillingServiceResponse(const UpdateBillingServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateBillingServiceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateBillingServiceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateBillingServiceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateBillingServiceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[35]);
}

// ===================================================================

class GetBillingServiceConfigRequest::_Internal {
 public:
};

GetBillingServiceConfigRequest::GetBillingServiceConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetBillingServiceConfigRequest)
}
GetBillingServiceConfigRequest::GetBillingServiceConfigRequest(const GetBillingServiceConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetBillingServiceConfigRequest)
}

inline void GetBillingServiceConfigRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBillingServiceConfigRequest::~GetBillingServiceConfigRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetBillingServiceConfigRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBillingServiceConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
}

void GetBillingServiceConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBillingServiceConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetBillingServiceConfigRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBillingServiceConfigRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetBillingServiceConfigRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBillingServiceConfigRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetBillingServiceConfigRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetBillingServiceConfigRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetBillingServiceConfigRequest)
  return target;
}

size_t GetBillingServiceConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetBillingServiceConfigRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBillingServiceConfigRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBillingServiceConfigRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBillingServiceConfigRequest::GetClassData() const { return &_class_data_; }

void GetBillingServiceConfigRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBillingServiceConfigRequest *>(to)->MergeFrom(
      static_cast<const GetBillingServiceConfigRequest &>(from));
}


void GetBillingServiceConfigRequest::MergeFrom(const GetBillingServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetBillingServiceConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBillingServiceConfigRequest::CopyFrom(const GetBillingServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetBillingServiceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBillingServiceConfigRequest::IsInitialized() const {
  return true;
}

void GetBillingServiceConfigRequest::InternalSwap(GetBillingServiceConfigRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBillingServiceConfigRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[36]);
}

// ===================================================================

class GetBillingServiceConfigResponse::_Internal {
 public:
  static const ::viam::app::v1::BillingAddress& billing_address(const GetBillingServiceConfigResponse* msg);
};

const ::viam::app::v1::BillingAddress&
GetBillingServiceConfigResponse::_Internal::billing_address(const GetBillingServiceConfigResponse* msg) {
  return *msg->billing_address_;
}
GetBillingServiceConfigResponse::GetBillingServiceConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetBillingServiceConfigResponse)
}
GetBillingServiceConfigResponse::GetBillingServiceConfigResponse(const GetBillingServiceConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  support_email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    support_email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_support_email().empty()) {
    support_email_.Set(from._internal_support_email(), 
      GetArenaForAllocation());
  }
  logo_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    logo_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_logo_url().empty()) {
    logo_url_.Set(from._internal_logo_url(), 
      GetArenaForAllocation());
  }
  billing_dashboard_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    billing_dashboard_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_billing_dashboard_url().empty()) {
    billing_dashboard_url_.Set(from._internal_billing_dashboard_url(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_billing_address()) {
    billing_address_ = new ::viam::app::v1::BillingAddress(*from.billing_address_);
  } else {
    billing_address_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetBillingServiceConfigResponse)
}

inline void GetBillingServiceConfigResponse::SharedCtor() {
support_email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  support_email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
logo_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  logo_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
billing_dashboard_url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  billing_dashboard_url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
billing_address_ = nullptr;
}

GetBillingServiceConfigResponse::~GetBillingServiceConfigResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetBillingServiceConfigResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBillingServiceConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  support_email_.Destroy();
  logo_url_.Destroy();
  billing_dashboard_url_.Destroy();
  if (this != internal_default_instance()) delete billing_address_;
}

void GetBillingServiceConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetBillingServiceConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetBillingServiceConfigResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  support_email_.ClearToEmpty();
  logo_url_.ClearToEmpty();
  billing_dashboard_url_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && billing_address_ != nullptr) {
    delete billing_address_;
  }
  billing_address_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBillingServiceConfigResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.BillingAddress billing_address = 1 [json_name = "billingAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_billing_address(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string support_email = 2 [json_name = "supportEmail"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_support_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetBillingServiceConfigResponse.support_email"));
        } else
          goto handle_unusual;
        continue;
      // string logo_url = 3 [json_name = "logoUrl"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_logo_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetBillingServiceConfigResponse.logo_url"));
        } else
          goto handle_unusual;
        continue;
      // string billing_dashboard_url = 4 [json_name = "billingDashboardUrl"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_billing_dashboard_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetBillingServiceConfigResponse.billing_dashboard_url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBillingServiceConfigResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetBillingServiceConfigResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.BillingAddress billing_address = 1 [json_name = "billingAddress"];
  if (this->_internal_has_billing_address()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::billing_address(this),
        _Internal::billing_address(this).GetCachedSize(), target, stream);
  }

  // string support_email = 2 [json_name = "supportEmail"];
  if (!this->_internal_support_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_support_email().data(), static_cast<int>(this->_internal_support_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetBillingServiceConfigResponse.support_email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_support_email(), target);
  }

  // string logo_url = 3 [json_name = "logoUrl"];
  if (!this->_internal_logo_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_logo_url().data(), static_cast<int>(this->_internal_logo_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetBillingServiceConfigResponse.logo_url");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_logo_url(), target);
  }

  // string billing_dashboard_url = 4 [json_name = "billingDashboardUrl"];
  if (!this->_internal_billing_dashboard_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_billing_dashboard_url().data(), static_cast<int>(this->_internal_billing_dashboard_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetBillingServiceConfigResponse.billing_dashboard_url");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_billing_dashboard_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetBillingServiceConfigResponse)
  return target;
}

size_t GetBillingServiceConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetBillingServiceConfigResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string support_email = 2 [json_name = "supportEmail"];
  if (!this->_internal_support_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_support_email());
  }

  // string logo_url = 3 [json_name = "logoUrl"];
  if (!this->_internal_logo_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_logo_url());
  }

  // string billing_dashboard_url = 4 [json_name = "billingDashboardUrl"];
  if (!this->_internal_billing_dashboard_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_billing_dashboard_url());
  }

  // .viam.app.v1.BillingAddress billing_address = 1 [json_name = "billingAddress"];
  if (this->_internal_has_billing_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *billing_address_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBillingServiceConfigResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetBillingServiceConfigResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBillingServiceConfigResponse::GetClassData() const { return &_class_data_; }

void GetBillingServiceConfigResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetBillingServiceConfigResponse *>(to)->MergeFrom(
      static_cast<const GetBillingServiceConfigResponse &>(from));
}


void GetBillingServiceConfigResponse::MergeFrom(const GetBillingServiceConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetBillingServiceConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_support_email().empty()) {
    _internal_set_support_email(from._internal_support_email());
  }
  if (!from._internal_logo_url().empty()) {
    _internal_set_logo_url(from._internal_logo_url());
  }
  if (!from._internal_billing_dashboard_url().empty()) {
    _internal_set_billing_dashboard_url(from._internal_billing_dashboard_url());
  }
  if (from._internal_has_billing_address()) {
    _internal_mutable_billing_address()->::viam::app::v1::BillingAddress::MergeFrom(from._internal_billing_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBillingServiceConfigResponse::CopyFrom(const GetBillingServiceConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetBillingServiceConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBillingServiceConfigResponse::IsInitialized() const {
  return true;
}

void GetBillingServiceConfigResponse::InternalSwap(GetBillingServiceConfigResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &support_email_, lhs_arena,
      &other->support_email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &logo_url_, lhs_arena,
      &other->logo_url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &billing_dashboard_url_, lhs_arena,
      &other->billing_dashboard_url_, rhs_arena
  );
  swap(billing_address_, other->billing_address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBillingServiceConfigResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[37]);
}

// ===================================================================

class DisableBillingServiceRequest::_Internal {
 public:
};

DisableBillingServiceRequest::DisableBillingServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DisableBillingServiceRequest)
}
DisableBillingServiceRequest::DisableBillingServiceRequest(const DisableBillingServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DisableBillingServiceRequest)
}

inline void DisableBillingServiceRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DisableBillingServiceRequest::~DisableBillingServiceRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DisableBillingServiceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DisableBillingServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
}

void DisableBillingServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DisableBillingServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DisableBillingServiceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableBillingServiceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DisableBillingServiceRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DisableBillingServiceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DisableBillingServiceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DisableBillingServiceRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DisableBillingServiceRequest)
  return target;
}

size_t DisableBillingServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DisableBillingServiceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisableBillingServiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DisableBillingServiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisableBillingServiceRequest::GetClassData() const { return &_class_data_; }

void DisableBillingServiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DisableBillingServiceRequest *>(to)->MergeFrom(
      static_cast<const DisableBillingServiceRequest &>(from));
}


void DisableBillingServiceRequest::MergeFrom(const DisableBillingServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DisableBillingServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DisableBillingServiceRequest::CopyFrom(const DisableBillingServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DisableBillingServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableBillingServiceRequest::IsInitialized() const {
  return true;
}

void DisableBillingServiceRequest::InternalSwap(DisableBillingServiceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableBillingServiceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[38]);
}

// ===================================================================

class DisableBillingServiceResponse::_Internal {
 public:
};

DisableBillingServiceResponse::DisableBillingServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DisableBillingServiceResponse)
}
DisableBillingServiceResponse::DisableBillingServiceResponse(const DisableBillingServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DisableBillingServiceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisableBillingServiceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisableBillingServiceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DisableBillingServiceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[39]);
}

// ===================================================================

class OrganizationSetSupportEmailRequest::_Internal {
 public:
};

OrganizationSetSupportEmailRequest::OrganizationSetSupportEmailRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrganizationSetSupportEmailRequest)
}
OrganizationSetSupportEmailRequest::OrganizationSetSupportEmailRequest(const OrganizationSetSupportEmailRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrganizationSetSupportEmailRequest)
}

inline void OrganizationSetSupportEmailRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrganizationSetSupportEmailRequest::~OrganizationSetSupportEmailRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OrganizationSetSupportEmailRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrganizationSetSupportEmailRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
  email_.Destroy();
}

void OrganizationSetSupportEmailRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrganizationSetSupportEmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OrganizationSetSupportEmailRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrganizationSetSupportEmailRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationSetSupportEmailRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      // string email = 2 [json_name = "email"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationSetSupportEmailRequest.email"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrganizationSetSupportEmailRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OrganizationSetSupportEmailRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationSetSupportEmailRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationSetSupportEmailRequest.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OrganizationSetSupportEmailRequest)
  return target;
}

size_t OrganizationSetSupportEmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OrganizationSetSupportEmailRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string email = 2 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationSetSupportEmailRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrganizationSetSupportEmailRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationSetSupportEmailRequest::GetClassData() const { return &_class_data_; }

void OrganizationSetSupportEmailRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrganizationSetSupportEmailRequest *>(to)->MergeFrom(
      static_cast<const OrganizationSetSupportEmailRequest &>(from));
}


void OrganizationSetSupportEmailRequest::MergeFrom(const OrganizationSetSupportEmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OrganizationSetSupportEmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrganizationSetSupportEmailRequest::CopyFrom(const OrganizationSetSupportEmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OrganizationSetSupportEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationSetSupportEmailRequest::IsInitialized() const {
  return true;
}

void OrganizationSetSupportEmailRequest::InternalSwap(OrganizationSetSupportEmailRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrganizationSetSupportEmailRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[40]);
}

// ===================================================================

class OrganizationSetSupportEmailResponse::_Internal {
 public:
};

OrganizationSetSupportEmailResponse::OrganizationSetSupportEmailResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrganizationSetSupportEmailResponse)
}
OrganizationSetSupportEmailResponse::OrganizationSetSupportEmailResponse(const OrganizationSetSupportEmailResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrganizationSetSupportEmailResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationSetSupportEmailResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationSetSupportEmailResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata OrganizationSetSupportEmailResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[41]);
}

// ===================================================================

class OrganizationGetSupportEmailRequest::_Internal {
 public:
};

OrganizationGetSupportEmailRequest::OrganizationGetSupportEmailRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrganizationGetSupportEmailRequest)
}
OrganizationGetSupportEmailRequest::OrganizationGetSupportEmailRequest(const OrganizationGetSupportEmailRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrganizationGetSupportEmailRequest)
}

inline void OrganizationGetSupportEmailRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrganizationGetSupportEmailRequest::~OrganizationGetSupportEmailRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OrganizationGetSupportEmailRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrganizationGetSupportEmailRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
}

void OrganizationGetSupportEmailRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrganizationGetSupportEmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OrganizationGetSupportEmailRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrganizationGetSupportEmailRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationGetSupportEmailRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrganizationGetSupportEmailRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OrganizationGetSupportEmailRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationGetSupportEmailRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OrganizationGetSupportEmailRequest)
  return target;
}

size_t OrganizationGetSupportEmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OrganizationGetSupportEmailRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationGetSupportEmailRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrganizationGetSupportEmailRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationGetSupportEmailRequest::GetClassData() const { return &_class_data_; }

void OrganizationGetSupportEmailRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrganizationGetSupportEmailRequest *>(to)->MergeFrom(
      static_cast<const OrganizationGetSupportEmailRequest &>(from));
}


void OrganizationGetSupportEmailRequest::MergeFrom(const OrganizationGetSupportEmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OrganizationGetSupportEmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrganizationGetSupportEmailRequest::CopyFrom(const OrganizationGetSupportEmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OrganizationGetSupportEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationGetSupportEmailRequest::IsInitialized() const {
  return true;
}

void OrganizationGetSupportEmailRequest::InternalSwap(OrganizationGetSupportEmailRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrganizationGetSupportEmailRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[42]);
}

// ===================================================================

class OrganizationGetSupportEmailResponse::_Internal {
 public:
};

OrganizationGetSupportEmailResponse::OrganizationGetSupportEmailResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrganizationGetSupportEmailResponse)
}
OrganizationGetSupportEmailResponse::OrganizationGetSupportEmailResponse(const OrganizationGetSupportEmailResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrganizationGetSupportEmailResponse)
}

inline void OrganizationGetSupportEmailResponse::SharedCtor() {
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrganizationGetSupportEmailResponse::~OrganizationGetSupportEmailResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OrganizationGetSupportEmailResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrganizationGetSupportEmailResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  email_.Destroy();
}

void OrganizationGetSupportEmailResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrganizationGetSupportEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OrganizationGetSupportEmailResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrganizationGetSupportEmailResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string email = 1 [json_name = "email"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationGetSupportEmailResponse.email"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrganizationGetSupportEmailResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OrganizationGetSupportEmailResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationGetSupportEmailResponse.email");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OrganizationGetSupportEmailResponse)
  return target;
}

size_t OrganizationGetSupportEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OrganizationGetSupportEmailResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email = 1 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationGetSupportEmailResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrganizationGetSupportEmailResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationGetSupportEmailResponse::GetClassData() const { return &_class_data_; }

void OrganizationGetSupportEmailResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrganizationGetSupportEmailResponse *>(to)->MergeFrom(
      static_cast<const OrganizationGetSupportEmailResponse &>(from));
}


void OrganizationGetSupportEmailResponse::MergeFrom(const OrganizationGetSupportEmailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OrganizationGetSupportEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrganizationGetSupportEmailResponse::CopyFrom(const OrganizationGetSupportEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OrganizationGetSupportEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationGetSupportEmailResponse::IsInitialized() const {
  return true;
}

void OrganizationGetSupportEmailResponse::InternalSwap(OrganizationGetSupportEmailResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrganizationGetSupportEmailResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[43]);
}

// ===================================================================

class OrganizationIdentity::_Internal {
 public:
};

OrganizationIdentity::OrganizationIdentity(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrganizationIdentity)
}
OrganizationIdentity::OrganizationIdentity(const OrganizationIdentity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrganizationIdentity)
}

inline void OrganizationIdentity::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrganizationIdentity::~OrganizationIdentity() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OrganizationIdentity)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrganizationIdentity::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
}

void OrganizationIdentity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrganizationIdentity::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OrganizationIdentity)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrganizationIdentity::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationIdentity.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationIdentity.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrganizationIdentity::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OrganizationIdentity)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationIdentity.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationIdentity.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OrganizationIdentity)
  return target;
}

size_t OrganizationIdentity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OrganizationIdentity)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationIdentity::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrganizationIdentity::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationIdentity::GetClassData() const { return &_class_data_; }

void OrganizationIdentity::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrganizationIdentity *>(to)->MergeFrom(
      static_cast<const OrganizationIdentity &>(from));
}


void OrganizationIdentity::MergeFrom(const OrganizationIdentity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OrganizationIdentity)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrganizationIdentity::CopyFrom(const OrganizationIdentity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OrganizationIdentity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationIdentity::IsInitialized() const {
  return true;
}

void OrganizationIdentity::InternalSwap(OrganizationIdentity* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrganizationIdentity::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[44]);
}

// ===================================================================

class LocationOrganization::_Internal {
 public:
};

LocationOrganization::LocationOrganization(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.LocationOrganization)
}
LocationOrganization::LocationOrganization(const LocationOrganization& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  primary_ = from.primary_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.LocationOrganization)
}

inline void LocationOrganization::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
primary_ = false;
}

LocationOrganization::~LocationOrganization() {
  // @@protoc_insertion_point(destructor:viam.app.v1.LocationOrganization)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocationOrganization::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void LocationOrganization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocationOrganization::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.LocationOrganization)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  primary_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationOrganization::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LocationOrganization.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // bool primary = 2 [json_name = "primary"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          primary_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocationOrganization::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.LocationOrganization)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LocationOrganization.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // bool primary = 2 [json_name = "primary"];
  if (this->_internal_primary() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_primary(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.LocationOrganization)
  return target;
}

size_t LocationOrganization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.LocationOrganization)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // bool primary = 2 [json_name = "primary"];
  if (this->_internal_primary() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocationOrganization::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocationOrganization::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocationOrganization::GetClassData() const { return &_class_data_; }

void LocationOrganization::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocationOrganization *>(to)->MergeFrom(
      static_cast<const LocationOrganization &>(from));
}


void LocationOrganization::MergeFrom(const LocationOrganization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.LocationOrganization)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (from._internal_primary() != 0) {
    _internal_set_primary(from._internal_primary());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocationOrganization::CopyFrom(const LocationOrganization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.LocationOrganization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationOrganization::IsInitialized() const {
  return true;
}

void LocationOrganization::InternalSwap(LocationOrganization* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  swap(primary_, other->primary_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationOrganization::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[45]);
}

// ===================================================================

class LocationAuth::_Internal {
 public:
};

LocationAuth::LocationAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  secrets_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.LocationAuth)
}
LocationAuth::LocationAuth(const LocationAuth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      secrets_(from.secrets_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  secret_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret().empty()) {
    secret_.Set(from._internal_secret(), 
      GetArenaForAllocation());
  }
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.LocationAuth)
}

inline void LocationAuth::SharedCtor() {
secret_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LocationAuth::~LocationAuth() {
  // @@protoc_insertion_point(destructor:viam.app.v1.LocationAuth)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocationAuth::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  secret_.Destroy();
  location_id_.Destroy();
}

void LocationAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocationAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.LocationAuth)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secrets_.Clear();
  secret_.ClearToEmpty();
  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationAuth::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string secret = 1 [json_name = "secret", deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_secret();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LocationAuth.secret"));
        } else
          goto handle_unusual;
        continue;
      // string location_id = 2 [json_name = "locationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LocationAuth.location_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.SharedSecret secrets = 3 [json_name = "secrets"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_secrets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocationAuth::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.LocationAuth)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string secret = 1 [json_name = "secret", deprecated = true];
  if (!this->_internal_secret().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret().data(), static_cast<int>(this->_internal_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LocationAuth.secret");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_secret(), target);
  }

  // string location_id = 2 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LocationAuth.location_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_location_id(), target);
  }

  // repeated .viam.app.v1.SharedSecret secrets = 3 [json_name = "secrets"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_secrets_size()); i < n; i++) {
    const auto& repfield = this->_internal_secrets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.LocationAuth)
  return target;
}

size_t LocationAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.LocationAuth)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.SharedSecret secrets = 3 [json_name = "secrets"];
  total_size += 1UL * this->_internal_secrets_size();
  for (const auto& msg : this->secrets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string secret = 1 [json_name = "secret", deprecated = true];
  if (!this->_internal_secret().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret());
  }

  // string location_id = 2 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocationAuth::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocationAuth::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocationAuth::GetClassData() const { return &_class_data_; }

void LocationAuth::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocationAuth *>(to)->MergeFrom(
      static_cast<const LocationAuth &>(from));
}


void LocationAuth::MergeFrom(const LocationAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.LocationAuth)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  secrets_.MergeFrom(from.secrets_);
  if (!from._internal_secret().empty()) {
    _internal_set_secret(from._internal_secret());
  }
  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocationAuth::CopyFrom(const LocationAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.LocationAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationAuth::IsInitialized() const {
  return true;
}

void LocationAuth::InternalSwap(LocationAuth* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  secrets_.InternalSwap(&other->secrets_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_, lhs_arena,
      &other->secret_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationAuth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[46]);
}

// ===================================================================

class StorageConfig::_Internal {
 public:
};

StorageConfig::StorageConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.StorageConfig)
}
StorageConfig::StorageConfig(const StorageConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  region_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    region_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_region().empty()) {
    region_.Set(from._internal_region(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.StorageConfig)
}

inline void StorageConfig::SharedCtor() {
region_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  region_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StorageConfig::~StorageConfig() {
  // @@protoc_insertion_point(destructor:viam.app.v1.StorageConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StorageConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  region_.Destroy();
}

void StorageConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StorageConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.StorageConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  region_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StorageConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string region = 1 [json_name = "region"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_region();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.StorageConfig.region"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StorageConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.StorageConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string region = 1 [json_name = "region"];
  if (!this->_internal_region().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_region().data(), static_cast<int>(this->_internal_region().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.StorageConfig.region");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_region(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.StorageConfig)
  return target;
}

size_t StorageConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.StorageConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string region = 1 [json_name = "region"];
  if (!this->_internal_region().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_region());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StorageConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StorageConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StorageConfig::GetClassData() const { return &_class_data_; }

void StorageConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StorageConfig *>(to)->MergeFrom(
      static_cast<const StorageConfig &>(from));
}


void StorageConfig::MergeFrom(const StorageConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.StorageConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_region().empty()) {
    _internal_set_region(from._internal_region());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StorageConfig::CopyFrom(const StorageConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.StorageConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageConfig::IsInitialized() const {
  return true;
}

void StorageConfig::InternalSwap(StorageConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &region_, lhs_arena,
      &other->region_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StorageConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[47]);
}

// ===================================================================

class Location::_Internal {
 public:
  static const ::viam::app::v1::LocationAuth& auth(const Location* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const Location* msg);
  static const ::viam::app::v1::StorageConfig& config(const Location* msg);
};

const ::viam::app::v1::LocationAuth&
Location::_Internal::auth(const Location* msg) {
  return *msg->auth_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Location::_Internal::created_on(const Location* msg) {
  return *msg->created_on_;
}
const ::viam::app::v1::StorageConfig&
Location::_Internal::config(const Location* msg) {
  return *msg->config_;
}
void Location::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
Location::Location(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  organizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Location)
}
Location::Location(const Location& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  parent_location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent_location_id().empty()) {
    parent_location_id_.Set(from._internal_parent_location_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  if (from._internal_has_auth()) {
    auth_ = new ::viam::app::v1::LocationAuth(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  if (from._internal_has_config()) {
    config_ = new ::viam::app::v1::StorageConfig(*from.config_);
  } else {
    config_ = nullptr;
  }
  robot_count_ = from.robot_count_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Location)
}

inline void Location::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
parent_location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&created_on_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&robot_count_) -
    reinterpret_cast<char*>(&created_on_)) + sizeof(robot_count_));
}

Location::~Location() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Location)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Location::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  parent_location_id_.Destroy();
  if (this != internal_default_instance()) delete created_on_;
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete config_;
}

void Location::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Location)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizations_.Clear();
  id_.ClearToEmpty();
  name_.ClearToEmpty();
  parent_location_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  if (GetArenaForAllocation() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  robot_count_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Location::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Location.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Location.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string parent_location_id = 4 [json_name = "parentLocationId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_parent_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Location.parent_location_id"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.LocationAuth auth = 5 [json_name = "auth"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.LocationOrganization organizations = 6 [json_name = "organizations"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_organizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 robot_count = 7 [json_name = "robotCount"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          robot_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.StorageConfig config = 8 [json_name = "config"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Location::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Location)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Location.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Location.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // string parent_location_id = 4 [json_name = "parentLocationId"];
  if (!this->_internal_parent_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_location_id().data(), static_cast<int>(this->_internal_parent_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Location.parent_location_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_parent_location_id(), target);
  }

  // .viam.app.v1.LocationAuth auth = 5 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::auth(this),
        _Internal::auth(this).GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.LocationOrganization organizations = 6 [json_name = "organizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_organizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_organizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 robot_count = 7 [json_name = "robotCount"];
  if (this->_internal_robot_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_robot_count(), target);
  }

  // .viam.app.v1.StorageConfig config = 8 [json_name = "config"];
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Location)
  return target;
}

size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Location)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.LocationOrganization organizations = 6 [json_name = "organizations"];
  total_size += 1UL * this->_internal_organizations_size();
  for (const auto& msg : this->organizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string parent_location_id = 4 [json_name = "parentLocationId"];
  if (!this->_internal_parent_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_location_id());
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // .viam.app.v1.LocationAuth auth = 5 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  // .viam.app.v1.StorageConfig config = 8 [json_name = "config"];
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // int32 robot_count = 7 [json_name = "robotCount"];
  if (this->_internal_robot_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_robot_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Location::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Location::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Location::GetClassData() const { return &_class_data_; }

void Location::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Location *>(to)->MergeFrom(
      static_cast<const Location &>(from));
}


void Location::MergeFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Location)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  organizations_.MergeFrom(from.organizations_);
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_parent_location_id().empty()) {
    _internal_set_parent_location_id(from._internal_parent_location_id());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_has_auth()) {
    _internal_mutable_auth()->::viam::app::v1::LocationAuth::MergeFrom(from._internal_auth());
  }
  if (from._internal_has_config()) {
    _internal_mutable_config()->::viam::app::v1::StorageConfig::MergeFrom(from._internal_config());
  }
  if (from._internal_robot_count() != 0) {
    _internal_set_robot_count(from._internal_robot_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location::IsInitialized() const {
  return true;
}

void Location::InternalSwap(Location* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  organizations_.InternalSwap(&other->organizations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &parent_location_id_, lhs_arena,
      &other->parent_location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Location, robot_count_)
      + sizeof(Location::robot_count_)
      - PROTOBUF_FIELD_OFFSET(Location, created_on_)>(
          reinterpret_cast<char*>(&created_on_),
          reinterpret_cast<char*>(&other->created_on_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Location::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[48]);
}

// ===================================================================

class SharedSecret::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const SharedSecret* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SharedSecret::_Internal::created_on(const SharedSecret* msg) {
  return *msg->created_on_;
}
void SharedSecret::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
SharedSecret::SharedSecret(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.SharedSecret)
}
SharedSecret::SharedSecret(const SharedSecret& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  secret_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret().empty()) {
    secret_.Set(from._internal_secret(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.SharedSecret)
}

inline void SharedSecret::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
secret_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&created_on_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&created_on_)) + sizeof(state_));
}

SharedSecret::~SharedSecret() {
  // @@protoc_insertion_point(destructor:viam.app.v1.SharedSecret)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SharedSecret::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  secret_.Destroy();
  if (this != internal_default_instance()) delete created_on_;
}

void SharedSecret::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SharedSecret::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.SharedSecret)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  secret_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SharedSecret::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"id\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.SharedSecret.id"));
        } else
          goto handle_unusual;
        continue;
      // string secret = 2 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_secret();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.SharedSecret.secret"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\" json:\"created_on\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.SharedSecret.State state = 4 [json_name = "state", (.tagger.v1.tags) = "bson:\"state\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::viam::app::v1::SharedSecret_State>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SharedSecret::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.SharedSecret)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"id\""];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.SharedSecret.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string secret = 2 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\""];
  if (!this->_internal_secret().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret().data(), static_cast<int>(this->_internal_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.SharedSecret.secret");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_secret(), target);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\" json:\"created_on\""];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.SharedSecret.State state = 4 [json_name = "state", (.tagger.v1.tags) = "bson:\"state\""];
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.SharedSecret)
  return target;
}

size_t SharedSecret::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.SharedSecret)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"id\""];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string secret = 2 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\""];
  if (!this->_internal_secret().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret());
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\" json:\"created_on\""];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // .viam.app.v1.SharedSecret.State state = 4 [json_name = "state", (.tagger.v1.tags) = "bson:\"state\""];
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SharedSecret::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SharedSecret::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SharedSecret::GetClassData() const { return &_class_data_; }

void SharedSecret::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SharedSecret *>(to)->MergeFrom(
      static_cast<const SharedSecret &>(from));
}


void SharedSecret::MergeFrom(const SharedSecret& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.SharedSecret)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_secret().empty()) {
    _internal_set_secret(from._internal_secret());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SharedSecret::CopyFrom(const SharedSecret& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.SharedSecret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SharedSecret::IsInitialized() const {
  return true;
}

void SharedSecret::InternalSwap(SharedSecret* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_, lhs_arena,
      &other->secret_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SharedSecret, state_)
      + sizeof(SharedSecret::state_)
      - PROTOBUF_FIELD_OFFSET(SharedSecret, created_on_)>(
          reinterpret_cast<char*>(&created_on_),
          reinterpret_cast<char*>(&other->created_on_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SharedSecret::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[49]);
}

// ===================================================================

class CreateLocationRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateLocationRequest>()._has_bits_);
  static void set_has_parent_location_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CreateLocationRequest::CreateLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateLocationRequest)
}
CreateLocationRequest::CreateLocationRequest(const CreateLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  parent_location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_parent_location_id()) {
    parent_location_id_.Set(from._internal_parent_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateLocationRequest)
}

inline void CreateLocationRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
parent_location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateLocationRequest::~CreateLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  name_.Destroy();
  parent_location_id_.Destroy();
}

void CreateLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  name_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    parent_location_id_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateLocationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateLocationRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string parent_location_id = 3 [json_name = "parentLocationId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_parent_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateLocationRequest.parent_location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateLocationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateLocationRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string parent_location_id = 3 [json_name = "parentLocationId"];
  if (_internal_has_parent_location_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_location_id().data(), static_cast<int>(this->_internal_parent_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateLocationRequest.parent_location_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_parent_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateLocationRequest)
  return target;
}

size_t CreateLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // optional string parent_location_id = 3 [json_name = "parentLocationId"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLocationRequest::GetClassData() const { return &_class_data_; }

void CreateLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateLocationRequest *>(to)->MergeFrom(
      static_cast<const CreateLocationRequest &>(from));
}


void CreateLocationRequest::MergeFrom(const CreateLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_parent_location_id()) {
    _internal_set_parent_location_id(from._internal_parent_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLocationRequest::CopyFrom(const CreateLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLocationRequest::IsInitialized() const {
  return true;
}

void CreateLocationRequest::InternalSwap(CreateLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &parent_location_id_, lhs_arena,
      &other->parent_location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[50]);
}

// ===================================================================

class CreateLocationResponse::_Internal {
 public:
  static const ::viam::app::v1::Location& location(const CreateLocationResponse* msg);
};

const ::viam::app::v1::Location&
CreateLocationResponse::_Internal::location(const CreateLocationResponse* msg) {
  return *msg->location_;
}
CreateLocationResponse::CreateLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateLocationResponse)
}
CreateLocationResponse::CreateLocationResponse(const CreateLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_location()) {
    location_ = new ::viam::app::v1::Location(*from.location_);
  } else {
    location_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateLocationResponse)
}

inline void CreateLocationResponse::SharedCtor() {
location_ = nullptr;
}

CreateLocationResponse::~CreateLocationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateLocationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLocationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete location_;
}

void CreateLocationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateLocationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLocationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Location location = 1 [json_name = "location"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLocationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateLocationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateLocationResponse)
  return target;
}

size_t CreateLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateLocationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *location_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateLocationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLocationResponse::GetClassData() const { return &_class_data_; }

void CreateLocationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateLocationResponse *>(to)->MergeFrom(
      static_cast<const CreateLocationResponse &>(from));
}


void CreateLocationResponse::MergeFrom(const CreateLocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_location()) {
    _internal_mutable_location()->::viam::app::v1::Location::MergeFrom(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLocationResponse::CopyFrom(const CreateLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLocationResponse::IsInitialized() const {
  return true;
}

void CreateLocationResponse::InternalSwap(CreateLocationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(location_, other->location_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[51]);
}

// ===================================================================

class GetLocationRequest::_Internal {
 public:
};

GetLocationRequest::GetLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetLocationRequest)
}
GetLocationRequest::GetLocationRequest(const GetLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetLocationRequest)
}

inline void GetLocationRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetLocationRequest::~GetLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void GetLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetLocationRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetLocationRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetLocationRequest)
  return target;
}

size_t GetLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLocationRequest::GetClassData() const { return &_class_data_; }

void GetLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetLocationRequest *>(to)->MergeFrom(
      static_cast<const GetLocationRequest &>(from));
}


void GetLocationRequest::MergeFrom(const GetLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLocationRequest::CopyFrom(const GetLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLocationRequest::IsInitialized() const {
  return true;
}

void GetLocationRequest::InternalSwap(GetLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[52]);
}

// ===================================================================

class GetLocationResponse::_Internal {
 public:
  static const ::viam::app::v1::Location& location(const GetLocationResponse* msg);
};

const ::viam::app::v1::Location&
GetLocationResponse::_Internal::location(const GetLocationResponse* msg) {
  return *msg->location_;
}
GetLocationResponse::GetLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetLocationResponse)
}
GetLocationResponse::GetLocationResponse(const GetLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_location()) {
    location_ = new ::viam::app::v1::Location(*from.location_);
  } else {
    location_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetLocationResponse)
}

inline void GetLocationResponse::SharedCtor() {
location_ = nullptr;
}

GetLocationResponse::~GetLocationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetLocationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLocationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete location_;
}

void GetLocationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetLocationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLocationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Location location = 1 [json_name = "location"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLocationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetLocationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetLocationResponse)
  return target;
}

size_t GetLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetLocationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *location_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetLocationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLocationResponse::GetClassData() const { return &_class_data_; }

void GetLocationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetLocationResponse *>(to)->MergeFrom(
      static_cast<const GetLocationResponse &>(from));
}


void GetLocationResponse::MergeFrom(const GetLocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_location()) {
    _internal_mutable_location()->::viam::app::v1::Location::MergeFrom(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLocationResponse::CopyFrom(const GetLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLocationResponse::IsInitialized() const {
  return true;
}

void GetLocationResponse::InternalSwap(GetLocationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(location_, other->location_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[53]);
}

// ===================================================================

class UpdateLocationRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateLocationRequest>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_parent_location_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_region(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

UpdateLocationRequest::UpdateLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateLocationRequest)
}
UpdateLocationRequest::UpdateLocationRequest(const UpdateLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  parent_location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    parent_location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_parent_location_id()) {
    parent_location_id_.Set(from._internal_parent_location_id(), 
      GetArenaForAllocation());
  }
  region_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    region_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_region()) {
    region_.Set(from._internal_region(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateLocationRequest)
}

inline void UpdateLocationRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
parent_location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  parent_location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
region_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  region_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateLocationRequest::~UpdateLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
  name_.Destroy();
  parent_location_id_.Destroy();
  region_.Destroy();
}

void UpdateLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      parent_location_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      region_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateLocationRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      // optional string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateLocationRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string parent_location_id = 3 [json_name = "parentLocationId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_parent_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateLocationRequest.parent_location_id"));
        } else
          goto handle_unusual;
        continue;
      // optional string region = 4 [json_name = "region"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_region();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateLocationRequest.region"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateLocationRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  // optional string name = 2 [json_name = "name"];
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateLocationRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string parent_location_id = 3 [json_name = "parentLocationId"];
  if (_internal_has_parent_location_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_location_id().data(), static_cast<int>(this->_internal_parent_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateLocationRequest.parent_location_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_parent_location_id(), target);
  }

  // optional string region = 4 [json_name = "region"];
  if (_internal_has_region()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_region().data(), static_cast<int>(this->_internal_region().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateLocationRequest.region");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_region(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateLocationRequest)
  return target;
}

size_t UpdateLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string name = 2 [json_name = "name"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string parent_location_id = 3 [json_name = "parentLocationId"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_parent_location_id());
    }

    // optional string region = 4 [json_name = "region"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_region());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateLocationRequest::GetClassData() const { return &_class_data_; }

void UpdateLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateLocationRequest *>(to)->MergeFrom(
      static_cast<const UpdateLocationRequest &>(from));
}


void UpdateLocationRequest::MergeFrom(const UpdateLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_parent_location_id(from._internal_parent_location_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_region(from._internal_region());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateLocationRequest::CopyFrom(const UpdateLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateLocationRequest::IsInitialized() const {
  return true;
}

void UpdateLocationRequest::InternalSwap(UpdateLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &parent_location_id_, lhs_arena,
      &other->parent_location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &region_, lhs_arena,
      &other->region_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[54]);
}

// ===================================================================

class UpdateLocationResponse::_Internal {
 public:
  static const ::viam::app::v1::Location& location(const UpdateLocationResponse* msg);
};

const ::viam::app::v1::Location&
UpdateLocationResponse::_Internal::location(const UpdateLocationResponse* msg) {
  return *msg->location_;
}
UpdateLocationResponse::UpdateLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateLocationResponse)
}
UpdateLocationResponse::UpdateLocationResponse(const UpdateLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_location()) {
    location_ = new ::viam::app::v1::Location(*from.location_);
  } else {
    location_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateLocationResponse)
}

inline void UpdateLocationResponse::SharedCtor() {
location_ = nullptr;
}

UpdateLocationResponse::~UpdateLocationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateLocationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateLocationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete location_;
}

void UpdateLocationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateLocationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateLocationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Location location = 1 [json_name = "location"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateLocationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateLocationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateLocationResponse)
  return target;
}

size_t UpdateLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateLocationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *location_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateLocationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateLocationResponse::GetClassData() const { return &_class_data_; }

void UpdateLocationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateLocationResponse *>(to)->MergeFrom(
      static_cast<const UpdateLocationResponse &>(from));
}


void UpdateLocationResponse::MergeFrom(const UpdateLocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_location()) {
    _internal_mutable_location()->::viam::app::v1::Location::MergeFrom(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateLocationResponse::CopyFrom(const UpdateLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateLocationResponse::IsInitialized() const {
  return true;
}

void UpdateLocationResponse::InternalSwap(UpdateLocationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(location_, other->location_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[55]);
}

// ===================================================================

class DeleteLocationRequest::_Internal {
 public:
};

DeleteLocationRequest::DeleteLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteLocationRequest)
}
DeleteLocationRequest::DeleteLocationRequest(const DeleteLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteLocationRequest)
}

inline void DeleteLocationRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteLocationRequest::~DeleteLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void DeleteLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteLocationRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteLocationRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteLocationRequest)
  return target;
}

size_t DeleteLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteLocationRequest::GetClassData() const { return &_class_data_; }

void DeleteLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteLocationRequest *>(to)->MergeFrom(
      static_cast<const DeleteLocationRequest &>(from));
}


void DeleteLocationRequest::MergeFrom(const DeleteLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteLocationRequest::CopyFrom(const DeleteLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLocationRequest::IsInitialized() const {
  return true;
}

void DeleteLocationRequest::InternalSwap(DeleteLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[56]);
}

// ===================================================================

class DeleteLocationResponse::_Internal {
 public:
};

DeleteLocationResponse::DeleteLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteLocationResponse)
}
DeleteLocationResponse::DeleteLocationResponse(const DeleteLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteLocationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteLocationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[57]);
}

// ===================================================================

class GetOrganizationsWithAccessToLocationRequest::_Internal {
 public:
};

GetOrganizationsWithAccessToLocationRequest::GetOrganizationsWithAccessToLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetOrganizationsWithAccessToLocationRequest)
}
GetOrganizationsWithAccessToLocationRequest::GetOrganizationsWithAccessToLocationRequest(const GetOrganizationsWithAccessToLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetOrganizationsWithAccessToLocationRequest)
}

inline void GetOrganizationsWithAccessToLocationRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetOrganizationsWithAccessToLocationRequest::~GetOrganizationsWithAccessToLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetOrganizationsWithAccessToLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrganizationsWithAccessToLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void GetOrganizationsWithAccessToLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationsWithAccessToLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetOrganizationsWithAccessToLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationsWithAccessToLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetOrganizationsWithAccessToLocationRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrganizationsWithAccessToLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetOrganizationsWithAccessToLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetOrganizationsWithAccessToLocationRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetOrganizationsWithAccessToLocationRequest)
  return target;
}

size_t GetOrganizationsWithAccessToLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetOrganizationsWithAccessToLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrganizationsWithAccessToLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrganizationsWithAccessToLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrganizationsWithAccessToLocationRequest::GetClassData() const { return &_class_data_; }

void GetOrganizationsWithAccessToLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOrganizationsWithAccessToLocationRequest *>(to)->MergeFrom(
      static_cast<const GetOrganizationsWithAccessToLocationRequest &>(from));
}


void GetOrganizationsWithAccessToLocationRequest::MergeFrom(const GetOrganizationsWithAccessToLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetOrganizationsWithAccessToLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrganizationsWithAccessToLocationRequest::CopyFrom(const GetOrganizationsWithAccessToLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetOrganizationsWithAccessToLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationsWithAccessToLocationRequest::IsInitialized() const {
  return true;
}

void GetOrganizationsWithAccessToLocationRequest::InternalSwap(GetOrganizationsWithAccessToLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationsWithAccessToLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[58]);
}

// ===================================================================

class GetOrganizationsWithAccessToLocationResponse::_Internal {
 public:
};

GetOrganizationsWithAccessToLocationResponse::GetOrganizationsWithAccessToLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  organization_identities_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetOrganizationsWithAccessToLocationResponse)
}
GetOrganizationsWithAccessToLocationResponse::GetOrganizationsWithAccessToLocationResponse(const GetOrganizationsWithAccessToLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      organization_identities_(from.organization_identities_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetOrganizationsWithAccessToLocationResponse)
}

inline void GetOrganizationsWithAccessToLocationResponse::SharedCtor() {
}

GetOrganizationsWithAccessToLocationResponse::~GetOrganizationsWithAccessToLocationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetOrganizationsWithAccessToLocationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrganizationsWithAccessToLocationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetOrganizationsWithAccessToLocationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrganizationsWithAccessToLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetOrganizationsWithAccessToLocationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_identities_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrganizationsWithAccessToLocationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.OrganizationIdentity organization_identities = 1 [json_name = "organizationIdentities"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_organization_identities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrganizationsWithAccessToLocationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetOrganizationsWithAccessToLocationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.OrganizationIdentity organization_identities = 1 [json_name = "organizationIdentities"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_organization_identities_size()); i < n; i++) {
    const auto& repfield = this->_internal_organization_identities(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetOrganizationsWithAccessToLocationResponse)
  return target;
}

size_t GetOrganizationsWithAccessToLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetOrganizationsWithAccessToLocationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.OrganizationIdentity organization_identities = 1 [json_name = "organizationIdentities"];
  total_size += 1UL * this->_internal_organization_identities_size();
  for (const auto& msg : this->organization_identities_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrganizationsWithAccessToLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrganizationsWithAccessToLocationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrganizationsWithAccessToLocationResponse::GetClassData() const { return &_class_data_; }

void GetOrganizationsWithAccessToLocationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOrganizationsWithAccessToLocationResponse *>(to)->MergeFrom(
      static_cast<const GetOrganizationsWithAccessToLocationResponse &>(from));
}


void GetOrganizationsWithAccessToLocationResponse::MergeFrom(const GetOrganizationsWithAccessToLocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetOrganizationsWithAccessToLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  organization_identities_.MergeFrom(from.organization_identities_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrganizationsWithAccessToLocationResponse::CopyFrom(const GetOrganizationsWithAccessToLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetOrganizationsWithAccessToLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrganizationsWithAccessToLocationResponse::IsInitialized() const {
  return true;
}

void GetOrganizationsWithAccessToLocationResponse::InternalSwap(GetOrganizationsWithAccessToLocationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  organization_identities_.InternalSwap(&other->organization_identities_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrganizationsWithAccessToLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[59]);
}

// ===================================================================

class ListLocationsRequest::_Internal {
 public:
};

ListLocationsRequest::ListLocationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListLocationsRequest)
}
ListLocationsRequest::ListLocationsRequest(const ListLocationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListLocationsRequest)
}

inline void ListLocationsRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListLocationsRequest::~ListLocationsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListLocationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListLocationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void ListLocationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListLocationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListLocationsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListLocationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListLocationsRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListLocationsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListLocationsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListLocationsRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListLocationsRequest)
  return target;
}

size_t ListLocationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListLocationsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListLocationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListLocationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListLocationsRequest::GetClassData() const { return &_class_data_; }

void ListLocationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListLocationsRequest *>(to)->MergeFrom(
      static_cast<const ListLocationsRequest &>(from));
}


void ListLocationsRequest::MergeFrom(const ListLocationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListLocationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListLocationsRequest::CopyFrom(const ListLocationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListLocationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLocationsRequest::IsInitialized() const {
  return true;
}

void ListLocationsRequest::InternalSwap(ListLocationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListLocationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[60]);
}

// ===================================================================

class ShareLocationRequest::_Internal {
 public:
};

ShareLocationRequest::ShareLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ShareLocationRequest)
}
ShareLocationRequest::ShareLocationRequest(const ShareLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ShareLocationRequest)
}

inline void ShareLocationRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ShareLocationRequest::~ShareLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ShareLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShareLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
  organization_id_.Destroy();
}

void ShareLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ShareLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ShareLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ShareLocationRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 2 [json_name = "organizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ShareLocationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShareLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ShareLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ShareLocationRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ShareLocationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ShareLocationRequest)
  return target;
}

size_t ShareLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ShareLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ShareLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareLocationRequest::GetClassData() const { return &_class_data_; }

void ShareLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ShareLocationRequest *>(to)->MergeFrom(
      static_cast<const ShareLocationRequest &>(from));
}


void ShareLocationRequest::MergeFrom(const ShareLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ShareLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShareLocationRequest::CopyFrom(const ShareLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ShareLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareLocationRequest::IsInitialized() const {
  return true;
}

void ShareLocationRequest::InternalSwap(ShareLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[61]);
}

// ===================================================================

class ShareLocationResponse::_Internal {
 public:
};

ShareLocationResponse::ShareLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ShareLocationResponse)
}
ShareLocationResponse::ShareLocationResponse(const ShareLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ShareLocationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareLocationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ShareLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[62]);
}

// ===================================================================

class UnshareLocationRequest::_Internal {
 public:
};

UnshareLocationRequest::UnshareLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UnshareLocationRequest)
}
UnshareLocationRequest::UnshareLocationRequest(const UnshareLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UnshareLocationRequest)
}

inline void UnshareLocationRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UnshareLocationRequest::~UnshareLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UnshareLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnshareLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
  organization_id_.Destroy();
}

void UnshareLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnshareLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UnshareLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnshareLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UnshareLocationRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 2 [json_name = "organizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UnshareLocationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnshareLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UnshareLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UnshareLocationRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UnshareLocationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UnshareLocationRequest)
  return target;
}

size_t UnshareLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UnshareLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnshareLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UnshareLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnshareLocationRequest::GetClassData() const { return &_class_data_; }

void UnshareLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UnshareLocationRequest *>(to)->MergeFrom(
      static_cast<const UnshareLocationRequest &>(from));
}


void UnshareLocationRequest::MergeFrom(const UnshareLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UnshareLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnshareLocationRequest::CopyFrom(const UnshareLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UnshareLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnshareLocationRequest::IsInitialized() const {
  return true;
}

void UnshareLocationRequest::InternalSwap(UnshareLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UnshareLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[63]);
}

// ===================================================================

class UnshareLocationResponse::_Internal {
 public:
};

UnshareLocationResponse::UnshareLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UnshareLocationResponse)
}
UnshareLocationResponse::UnshareLocationResponse(const UnshareLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UnshareLocationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnshareLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnshareLocationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UnshareLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[64]);
}

// ===================================================================

class ListLocationsResponse::_Internal {
 public:
};

ListLocationsResponse::ListLocationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  locations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListLocationsResponse)
}
ListLocationsResponse::ListLocationsResponse(const ListLocationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      locations_(from.locations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListLocationsResponse)
}

inline void ListLocationsResponse::SharedCtor() {
}

ListLocationsResponse::~ListLocationsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListLocationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListLocationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListLocationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListLocationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListLocationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListLocationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Location locations = 1 [json_name = "locations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_locations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListLocationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListLocationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Location locations = 1 [json_name = "locations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_locations_size()); i < n; i++) {
    const auto& repfield = this->_internal_locations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListLocationsResponse)
  return target;
}

size_t ListLocationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListLocationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Location locations = 1 [json_name = "locations"];
  total_size += 1UL * this->_internal_locations_size();
  for (const auto& msg : this->locations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListLocationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListLocationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListLocationsResponse::GetClassData() const { return &_class_data_; }

void ListLocationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListLocationsResponse *>(to)->MergeFrom(
      static_cast<const ListLocationsResponse &>(from));
}


void ListLocationsResponse::MergeFrom(const ListLocationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListLocationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListLocationsResponse::CopyFrom(const ListLocationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListLocationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLocationsResponse::IsInitialized() const {
  return true;
}

void ListLocationsResponse::InternalSwap(ListLocationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  locations_.InternalSwap(&other->locations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListLocationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[65]);
}

// ===================================================================

class CreateLocationSecretRequest::_Internal {
 public:
};

CreateLocationSecretRequest::CreateLocationSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateLocationSecretRequest)
}
CreateLocationSecretRequest::CreateLocationSecretRequest(const CreateLocationSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateLocationSecretRequest)
}

inline void CreateLocationSecretRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateLocationSecretRequest::~CreateLocationSecretRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateLocationSecretRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLocationSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void CreateLocationSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateLocationSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateLocationSecretRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLocationSecretRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateLocationSecretRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLocationSecretRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateLocationSecretRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateLocationSecretRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateLocationSecretRequest)
  return target;
}

size_t CreateLocationSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateLocationSecretRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLocationSecretRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateLocationSecretRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLocationSecretRequest::GetClassData() const { return &_class_data_; }

void CreateLocationSecretRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateLocationSecretRequest *>(to)->MergeFrom(
      static_cast<const CreateLocationSecretRequest &>(from));
}


void CreateLocationSecretRequest::MergeFrom(const CreateLocationSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateLocationSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLocationSecretRequest::CopyFrom(const CreateLocationSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateLocationSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLocationSecretRequest::IsInitialized() const {
  return true;
}

void CreateLocationSecretRequest::InternalSwap(CreateLocationSecretRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLocationSecretRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[66]);
}

// ===================================================================

class CreateLocationSecretResponse::_Internal {
 public:
  static const ::viam::app::v1::LocationAuth& auth(const CreateLocationSecretResponse* msg);
};

const ::viam::app::v1::LocationAuth&
CreateLocationSecretResponse::_Internal::auth(const CreateLocationSecretResponse* msg) {
  return *msg->auth_;
}
CreateLocationSecretResponse::CreateLocationSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateLocationSecretResponse)
}
CreateLocationSecretResponse::CreateLocationSecretResponse(const CreateLocationSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_auth()) {
    auth_ = new ::viam::app::v1::LocationAuth(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateLocationSecretResponse)
}

inline void CreateLocationSecretResponse::SharedCtor() {
auth_ = nullptr;
}

CreateLocationSecretResponse::~CreateLocationSecretResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateLocationSecretResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLocationSecretResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete auth_;
}

void CreateLocationSecretResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateLocationSecretResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateLocationSecretResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLocationSecretResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLocationSecretResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateLocationSecretResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::auth(this),
        _Internal::auth(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateLocationSecretResponse)
  return target;
}

size_t CreateLocationSecretResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateLocationSecretResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLocationSecretResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateLocationSecretResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLocationSecretResponse::GetClassData() const { return &_class_data_; }

void CreateLocationSecretResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateLocationSecretResponse *>(to)->MergeFrom(
      static_cast<const CreateLocationSecretResponse &>(from));
}


void CreateLocationSecretResponse::MergeFrom(const CreateLocationSecretResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateLocationSecretResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_auth()) {
    _internal_mutable_auth()->::viam::app::v1::LocationAuth::MergeFrom(from._internal_auth());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLocationSecretResponse::CopyFrom(const CreateLocationSecretResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateLocationSecretResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLocationSecretResponse::IsInitialized() const {
  return true;
}

void CreateLocationSecretResponse::InternalSwap(CreateLocationSecretResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(auth_, other->auth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLocationSecretResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[67]);
}

// ===================================================================

class DeleteLocationSecretRequest::_Internal {
 public:
};

DeleteLocationSecretRequest::DeleteLocationSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteLocationSecretRequest)
}
DeleteLocationSecretRequest::DeleteLocationSecretRequest(const DeleteLocationSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  secret_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret_id().empty()) {
    secret_id_.Set(from._internal_secret_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteLocationSecretRequest)
}

inline void DeleteLocationSecretRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
secret_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteLocationSecretRequest::~DeleteLocationSecretRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteLocationSecretRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteLocationSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
  secret_id_.Destroy();
}

void DeleteLocationSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteLocationSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteLocationSecretRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  secret_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteLocationSecretRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteLocationSecretRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      // string secret_id = 2 [json_name = "secretId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_secret_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteLocationSecretRequest.secret_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteLocationSecretRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteLocationSecretRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteLocationSecretRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  // string secret_id = 2 [json_name = "secretId"];
  if (!this->_internal_secret_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret_id().data(), static_cast<int>(this->_internal_secret_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteLocationSecretRequest.secret_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_secret_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteLocationSecretRequest)
  return target;
}

size_t DeleteLocationSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteLocationSecretRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // string secret_id = 2 [json_name = "secretId"];
  if (!this->_internal_secret_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteLocationSecretRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteLocationSecretRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteLocationSecretRequest::GetClassData() const { return &_class_data_; }

void DeleteLocationSecretRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteLocationSecretRequest *>(to)->MergeFrom(
      static_cast<const DeleteLocationSecretRequest &>(from));
}


void DeleteLocationSecretRequest::MergeFrom(const DeleteLocationSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteLocationSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (!from._internal_secret_id().empty()) {
    _internal_set_secret_id(from._internal_secret_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteLocationSecretRequest::CopyFrom(const DeleteLocationSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteLocationSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLocationSecretRequest::IsInitialized() const {
  return true;
}

void DeleteLocationSecretRequest::InternalSwap(DeleteLocationSecretRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_id_, lhs_arena,
      &other->secret_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteLocationSecretRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[68]);
}

// ===================================================================

class DeleteLocationSecretResponse::_Internal {
 public:
};

DeleteLocationSecretResponse::DeleteLocationSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteLocationSecretResponse)
}
DeleteLocationSecretResponse::DeleteLocationSecretResponse(const DeleteLocationSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteLocationSecretResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteLocationSecretResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteLocationSecretResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteLocationSecretResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[69]);
}

// ===================================================================

class LocationAuthRequest::_Internal {
 public:
};

LocationAuthRequest::LocationAuthRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.LocationAuthRequest)
}
LocationAuthRequest::LocationAuthRequest(const LocationAuthRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.LocationAuthRequest)
}

inline void LocationAuthRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LocationAuthRequest::~LocationAuthRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.LocationAuthRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocationAuthRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void LocationAuthRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocationAuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.LocationAuthRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationAuthRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LocationAuthRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocationAuthRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.LocationAuthRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LocationAuthRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.LocationAuthRequest)
  return target;
}

size_t LocationAuthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.LocationAuthRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocationAuthRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocationAuthRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocationAuthRequest::GetClassData() const { return &_class_data_; }

void LocationAuthRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocationAuthRequest *>(to)->MergeFrom(
      static_cast<const LocationAuthRequest &>(from));
}


void LocationAuthRequest::MergeFrom(const LocationAuthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.LocationAuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocationAuthRequest::CopyFrom(const LocationAuthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.LocationAuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationAuthRequest::IsInitialized() const {
  return true;
}

void LocationAuthRequest::InternalSwap(LocationAuthRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationAuthRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[70]);
}

// ===================================================================

class LocationAuthResponse::_Internal {
 public:
  static const ::viam::app::v1::LocationAuth& auth(const LocationAuthResponse* msg);
};

const ::viam::app::v1::LocationAuth&
LocationAuthResponse::_Internal::auth(const LocationAuthResponse* msg) {
  return *msg->auth_;
}
LocationAuthResponse::LocationAuthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.LocationAuthResponse)
}
LocationAuthResponse::LocationAuthResponse(const LocationAuthResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_auth()) {
    auth_ = new ::viam::app::v1::LocationAuth(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.LocationAuthResponse)
}

inline void LocationAuthResponse::SharedCtor() {
auth_ = nullptr;
}

LocationAuthResponse::~LocationAuthResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.LocationAuthResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocationAuthResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete auth_;
}

void LocationAuthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocationAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.LocationAuthResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationAuthResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocationAuthResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.LocationAuthResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::auth(this),
        _Internal::auth(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.LocationAuthResponse)
  return target;
}

size_t LocationAuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.LocationAuthResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocationAuthResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocationAuthResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocationAuthResponse::GetClassData() const { return &_class_data_; }

void LocationAuthResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocationAuthResponse *>(to)->MergeFrom(
      static_cast<const LocationAuthResponse &>(from));
}


void LocationAuthResponse::MergeFrom(const LocationAuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.LocationAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_auth()) {
    _internal_mutable_auth()->::viam::app::v1::LocationAuth::MergeFrom(from._internal_auth());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocationAuthResponse::CopyFrom(const LocationAuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.LocationAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationAuthResponse::IsInitialized() const {
  return true;
}

void LocationAuthResponse::InternalSwap(LocationAuthResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(auth_, other->auth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationAuthResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[71]);
}

// ===================================================================

class GetRobotRequest::_Internal {
 public:
};

GetRobotRequest::GetRobotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotRequest)
}
GetRobotRequest::GetRobotRequest(const GetRobotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotRequest)
}

inline void GetRobotRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotRequest::~GetRobotRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void GetRobotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotRequest)
  return target;
}

size_t GetRobotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotRequest::GetClassData() const { return &_class_data_; }

void GetRobotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotRequest *>(to)->MergeFrom(
      static_cast<const GetRobotRequest &>(from));
}


void GetRobotRequest::MergeFrom(const GetRobotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotRequest::CopyFrom(const GetRobotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotRequest::IsInitialized() const {
  return true;
}

void GetRobotRequest::InternalSwap(GetRobotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[72]);
}

// ===================================================================

class GetRoverRentalRobotsRequest::_Internal {
 public:
};

GetRoverRentalRobotsRequest::GetRoverRentalRobotsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRoverRentalRobotsRequest)
}
GetRoverRentalRobotsRequest::GetRoverRentalRobotsRequest(const GetRoverRentalRobotsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRoverRentalRobotsRequest)
}

inline void GetRoverRentalRobotsRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRoverRentalRobotsRequest::~GetRoverRentalRobotsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRoverRentalRobotsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoverRentalRobotsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
}

void GetRoverRentalRobotsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRoverRentalRobotsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRoverRentalRobotsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoverRentalRobotsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRoverRentalRobotsRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoverRentalRobotsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRoverRentalRobotsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRoverRentalRobotsRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRoverRentalRobotsRequest)
  return target;
}

size_t GetRoverRentalRobotsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRoverRentalRobotsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoverRentalRobotsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRoverRentalRobotsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoverRentalRobotsRequest::GetClassData() const { return &_class_data_; }

void GetRoverRentalRobotsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRoverRentalRobotsRequest *>(to)->MergeFrom(
      static_cast<const GetRoverRentalRobotsRequest &>(from));
}


void GetRoverRentalRobotsRequest::MergeFrom(const GetRoverRentalRobotsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRoverRentalRobotsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoverRentalRobotsRequest::CopyFrom(const GetRoverRentalRobotsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRoverRentalRobotsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoverRentalRobotsRequest::IsInitialized() const {
  return true;
}

void GetRoverRentalRobotsRequest::InternalSwap(GetRoverRentalRobotsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoverRentalRobotsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[73]);
}

// ===================================================================

class RoverRentalRobot::_Internal {
 public:
};

RoverRentalRobot::RoverRentalRobot(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RoverRentalRobot)
}
RoverRentalRobot::RoverRentalRobot(const RoverRentalRobot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  robot_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_id().empty()) {
    robot_id_.Set(from._internal_robot_id(), 
      GetArenaForAllocation());
  }
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  robot_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_name().empty()) {
    robot_name_.Set(from._internal_robot_name(), 
      GetArenaForAllocation());
  }
  robot_main_part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_main_part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_main_part_id().empty()) {
    robot_main_part_id_.Set(from._internal_robot_main_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RoverRentalRobot)
}

inline void RoverRentalRobot::SharedCtor() {
robot_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
robot_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
robot_main_part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_main_part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RoverRentalRobot::~RoverRentalRobot() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RoverRentalRobot)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoverRentalRobot::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  robot_id_.Destroy();
  location_id_.Destroy();
  robot_name_.Destroy();
  robot_main_part_id_.Destroy();
}

void RoverRentalRobot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoverRentalRobot::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RoverRentalRobot)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robot_id_.ClearToEmpty();
  location_id_.ClearToEmpty();
  robot_name_.ClearToEmpty();
  robot_main_part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoverRentalRobot::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string robot_id = 1 [json_name = "robotId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_robot_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RoverRentalRobot.robot_id"));
        } else
          goto handle_unusual;
        continue;
      // string location_id = 2 [json_name = "locationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RoverRentalRobot.location_id"));
        } else
          goto handle_unusual;
        continue;
      // string robot_name = 3 [json_name = "robotName"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_robot_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RoverRentalRobot.robot_name"));
        } else
          goto handle_unusual;
        continue;
      // string robot_main_part_id = 4 [json_name = "robotMainPartId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_robot_main_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RoverRentalRobot.robot_main_part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoverRentalRobot::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RoverRentalRobot)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_id().data(), static_cast<int>(this->_internal_robot_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RoverRentalRobot.robot_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_robot_id(), target);
  }

  // string location_id = 2 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RoverRentalRobot.location_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_location_id(), target);
  }

  // string robot_name = 3 [json_name = "robotName"];
  if (!this->_internal_robot_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_name().data(), static_cast<int>(this->_internal_robot_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RoverRentalRobot.robot_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_robot_name(), target);
  }

  // string robot_main_part_id = 4 [json_name = "robotMainPartId"];
  if (!this->_internal_robot_main_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_main_part_id().data(), static_cast<int>(this->_internal_robot_main_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RoverRentalRobot.robot_main_part_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_robot_main_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RoverRentalRobot)
  return target;
}

size_t RoverRentalRobot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RoverRentalRobot)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_id());
  }

  // string location_id = 2 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // string robot_name = 3 [json_name = "robotName"];
  if (!this->_internal_robot_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_name());
  }

  // string robot_main_part_id = 4 [json_name = "robotMainPartId"];
  if (!this->_internal_robot_main_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_main_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoverRentalRobot::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RoverRentalRobot::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoverRentalRobot::GetClassData() const { return &_class_data_; }

void RoverRentalRobot::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RoverRentalRobot *>(to)->MergeFrom(
      static_cast<const RoverRentalRobot &>(from));
}


void RoverRentalRobot::MergeFrom(const RoverRentalRobot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RoverRentalRobot)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_robot_id().empty()) {
    _internal_set_robot_id(from._internal_robot_id());
  }
  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (!from._internal_robot_name().empty()) {
    _internal_set_robot_name(from._internal_robot_name());
  }
  if (!from._internal_robot_main_part_id().empty()) {
    _internal_set_robot_main_part_id(from._internal_robot_main_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoverRentalRobot::CopyFrom(const RoverRentalRobot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RoverRentalRobot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoverRentalRobot::IsInitialized() const {
  return true;
}

void RoverRentalRobot::InternalSwap(RoverRentalRobot* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_id_, lhs_arena,
      &other->robot_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_name_, lhs_arena,
      &other->robot_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_main_part_id_, lhs_arena,
      &other->robot_main_part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RoverRentalRobot::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[74]);
}

// ===================================================================

class GetRoverRentalRobotsResponse::_Internal {
 public:
};

GetRoverRentalRobotsResponse::GetRoverRentalRobotsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  robots_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRoverRentalRobotsResponse)
}
GetRoverRentalRobotsResponse::GetRoverRentalRobotsResponse(const GetRoverRentalRobotsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      robots_(from.robots_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRoverRentalRobotsResponse)
}

inline void GetRoverRentalRobotsResponse::SharedCtor() {
}

GetRoverRentalRobotsResponse::~GetRoverRentalRobotsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRoverRentalRobotsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRoverRentalRobotsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRoverRentalRobotsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRoverRentalRobotsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRoverRentalRobotsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robots_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRoverRentalRobotsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.RoverRentalRobot robots = 1 [json_name = "robots"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_robots(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRoverRentalRobotsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRoverRentalRobotsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.RoverRentalRobot robots = 1 [json_name = "robots"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_robots_size()); i < n; i++) {
    const auto& repfield = this->_internal_robots(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRoverRentalRobotsResponse)
  return target;
}

size_t GetRoverRentalRobotsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRoverRentalRobotsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.RoverRentalRobot robots = 1 [json_name = "robots"];
  total_size += 1UL * this->_internal_robots_size();
  for (const auto& msg : this->robots_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRoverRentalRobotsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRoverRentalRobotsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRoverRentalRobotsResponse::GetClassData() const { return &_class_data_; }

void GetRoverRentalRobotsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRoverRentalRobotsResponse *>(to)->MergeFrom(
      static_cast<const GetRoverRentalRobotsResponse &>(from));
}


void GetRoverRentalRobotsResponse::MergeFrom(const GetRoverRentalRobotsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRoverRentalRobotsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  robots_.MergeFrom(from.robots_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRoverRentalRobotsResponse::CopyFrom(const GetRoverRentalRobotsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRoverRentalRobotsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoverRentalRobotsResponse::IsInitialized() const {
  return true;
}

void GetRoverRentalRobotsResponse::InternalSwap(GetRoverRentalRobotsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  robots_.InternalSwap(&other->robots_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRoverRentalRobotsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[75]);
}

// ===================================================================

class GetRobotResponse::_Internal {
 public:
  static const ::viam::app::v1::Robot& robot(const GetRobotResponse* msg);
};

const ::viam::app::v1::Robot&
GetRobotResponse::_Internal::robot(const GetRobotResponse* msg) {
  return *msg->robot_;
}
GetRobotResponse::GetRobotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotResponse)
}
GetRobotResponse::GetRobotResponse(const GetRobotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_robot()) {
    robot_ = new ::viam::app::v1::Robot(*from.robot_);
  } else {
    robot_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotResponse)
}

inline void GetRobotResponse::SharedCtor() {
robot_ = nullptr;
}

GetRobotResponse::~GetRobotResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete robot_;
}

void GetRobotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && robot_ != nullptr) {
    delete robot_;
  }
  robot_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
  if (this->_internal_has_robot()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::robot(this),
        _Internal::robot(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotResponse)
  return target;
}

size_t GetRobotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
  if (this->_internal_has_robot()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotResponse::GetClassData() const { return &_class_data_; }

void GetRobotResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotResponse *>(to)->MergeFrom(
      static_cast<const GetRobotResponse &>(from));
}


void GetRobotResponse::MergeFrom(const GetRobotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_robot()) {
    _internal_mutable_robot()->::viam::app::v1::Robot::MergeFrom(from._internal_robot());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotResponse::CopyFrom(const GetRobotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotResponse::IsInitialized() const {
  return true;
}

void GetRobotResponse::InternalSwap(GetRobotResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(robot_, other->robot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[76]);
}

// ===================================================================

class GetRobotPartsRequest::_Internal {
 public:
};

GetRobotPartsRequest::GetRobotPartsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartsRequest)
}
GetRobotPartsRequest::GetRobotPartsRequest(const GetRobotPartsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  robot_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_id().empty()) {
    robot_id_.Set(from._internal_robot_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartsRequest)
}

inline void GetRobotPartsRequest::SharedCtor() {
robot_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotPartsRequest::~GetRobotPartsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  robot_id_.Destroy();
}

void GetRobotPartsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robot_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string robot_id = 1 [json_name = "robotId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_robot_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartsRequest.robot_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_id().data(), static_cast<int>(this->_internal_robot_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartsRequest.robot_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_robot_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartsRequest)
  return target;
}

size_t GetRobotPartsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartsRequest::GetClassData() const { return &_class_data_; }

void GetRobotPartsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartsRequest *>(to)->MergeFrom(
      static_cast<const GetRobotPartsRequest &>(from));
}


void GetRobotPartsRequest::MergeFrom(const GetRobotPartsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_robot_id().empty()) {
    _internal_set_robot_id(from._internal_robot_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartsRequest::CopyFrom(const GetRobotPartsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartsRequest::IsInitialized() const {
  return true;
}

void GetRobotPartsRequest::InternalSwap(GetRobotPartsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_id_, lhs_arena,
      &other->robot_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[77]);
}

// ===================================================================

class GetRobotPartsResponse::_Internal {
 public:
};

GetRobotPartsResponse::GetRobotPartsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  parts_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartsResponse)
}
GetRobotPartsResponse::GetRobotPartsResponse(const GetRobotPartsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      parts_(from.parts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartsResponse)
}

inline void GetRobotPartsResponse::SharedCtor() {
}

GetRobotPartsResponse::~GetRobotPartsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRobotPartsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.RobotPart parts = 1 [json_name = "parts"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_parts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.RobotPart parts = 1 [json_name = "parts"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_parts_size()); i < n; i++) {
    const auto& repfield = this->_internal_parts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartsResponse)
  return target;
}

size_t GetRobotPartsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.RobotPart parts = 1 [json_name = "parts"];
  total_size += 1UL * this->_internal_parts_size();
  for (const auto& msg : this->parts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartsResponse::GetClassData() const { return &_class_data_; }

void GetRobotPartsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartsResponse *>(to)->MergeFrom(
      static_cast<const GetRobotPartsResponse &>(from));
}


void GetRobotPartsResponse::MergeFrom(const GetRobotPartsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  parts_.MergeFrom(from.parts_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartsResponse::CopyFrom(const GetRobotPartsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartsResponse::IsInitialized() const {
  return true;
}

void GetRobotPartsResponse::InternalSwap(GetRobotPartsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  parts_.InternalSwap(&other->parts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[78]);
}

// ===================================================================

class GetRobotPartRequest::_Internal {
 public:
};

GetRobotPartRequest::GetRobotPartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartRequest)
}
GetRobotPartRequest::GetRobotPartRequest(const GetRobotPartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartRequest)
}

inline void GetRobotPartRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotPartRequest::~GetRobotPartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void GetRobotPartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartRequest)
  return target;
}

size_t GetRobotPartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartRequest::GetClassData() const { return &_class_data_; }

void GetRobotPartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartRequest *>(to)->MergeFrom(
      static_cast<const GetRobotPartRequest &>(from));
}


void GetRobotPartRequest::MergeFrom(const GetRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartRequest::CopyFrom(const GetRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartRequest::IsInitialized() const {
  return true;
}

void GetRobotPartRequest::InternalSwap(GetRobotPartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[79]);
}

// ===================================================================

class GetRobotPartResponse::_Internal {
 public:
  static const ::viam::app::v1::RobotPart& part(const GetRobotPartResponse* msg);
};

const ::viam::app::v1::RobotPart&
GetRobotPartResponse::_Internal::part(const GetRobotPartResponse* msg) {
  return *msg->part_;
}
GetRobotPartResponse::GetRobotPartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartResponse)
}
GetRobotPartResponse::GetRobotPartResponse(const GetRobotPartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  config_json_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    config_json_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_json().empty()) {
    config_json_.Set(from._internal_config_json(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_part()) {
    part_ = new ::viam::app::v1::RobotPart(*from.part_);
  } else {
    part_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartResponse)
}

inline void GetRobotPartResponse::SharedCtor() {
config_json_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  config_json_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
part_ = nullptr;
}

GetRobotPartResponse::~GetRobotPartResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  config_json_.Destroy();
  if (this != internal_default_instance()) delete part_;
}

void GetRobotPartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_json_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && part_ != nullptr) {
    delete part_;
  }
  part_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_part(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string config_json = 2 [json_name = "configJson"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_config_json();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartResponse.config_json"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::part(this),
        _Internal::part(this).GetCachedSize(), target, stream);
  }

  // string config_json = 2 [json_name = "configJson"];
  if (!this->_internal_config_json().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_json().data(), static_cast<int>(this->_internal_config_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartResponse.config_json");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_config_json(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartResponse)
  return target;
}

size_t GetRobotPartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string config_json = 2 [json_name = "configJson"];
  if (!this->_internal_config_json().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_json());
  }

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *part_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartResponse::GetClassData() const { return &_class_data_; }

void GetRobotPartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartResponse *>(to)->MergeFrom(
      static_cast<const GetRobotPartResponse &>(from));
}


void GetRobotPartResponse::MergeFrom(const GetRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_config_json().empty()) {
    _internal_set_config_json(from._internal_config_json());
  }
  if (from._internal_has_part()) {
    _internal_mutable_part()->::viam::app::v1::RobotPart::MergeFrom(from._internal_part());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartResponse::CopyFrom(const GetRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartResponse::IsInitialized() const {
  return true;
}

void GetRobotPartResponse::InternalSwap(GetRobotPartResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &config_json_, lhs_arena,
      &other->config_json_, rhs_arena
  );
  swap(part_, other->part_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[80]);
}

// ===================================================================

class GetRobotPartLogsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetRobotPartLogsRequest>()._has_bits_);
  static void set_has_filter(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_page_token(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& start(const GetRobotPartLogsRequest* msg);
  static void set_has_start(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& end(const GetRobotPartLogsRequest* msg);
  static void set_has_end(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
GetRobotPartLogsRequest::_Internal::start(const GetRobotPartLogsRequest* msg) {
  return *msg->start_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
GetRobotPartLogsRequest::_Internal::end(const GetRobotPartLogsRequest* msg) {
  return *msg->end_;
}
void GetRobotPartLogsRequest::clear_start() {
  if (start_ != nullptr) start_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void GetRobotPartLogsRequest::clear_end() {
  if (end_ != nullptr) end_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
GetRobotPartLogsRequest::GetRobotPartLogsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  levels_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartLogsRequest)
}
GetRobotPartLogsRequest::GetRobotPartLogsRequest(const GetRobotPartLogsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      levels_(from.levels_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_filter()) {
    filter_.Set(from._internal_filter(), 
      GetArenaForAllocation());
  }
  page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_page_token()) {
    page_token_.Set(from._internal_page_token(), 
      GetArenaForAllocation());
  }
  source_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    source_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_source()) {
    source_.Set(from._internal_source(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_start()) {
    start_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.start_);
  } else {
    start_ = nullptr;
  }
  if (from._internal_has_end()) {
    end_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.end_);
  } else {
    end_ = nullptr;
  }
  ::memcpy(&limit_, &from.limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&errors_only_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(errors_only_));
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartLogsRequest)
}

inline void GetRobotPartLogsRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
filter_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  filter_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
source_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  source_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&start_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&errors_only_) -
    reinterpret_cast<char*>(&start_)) + sizeof(errors_only_));
}

GetRobotPartLogsRequest::~GetRobotPartLogsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartLogsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartLogsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  filter_.Destroy();
  page_token_.Destroy();
  source_.Destroy();
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete end_;
}

void GetRobotPartLogsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartLogsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartLogsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  levels_.Clear();
  id_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      filter_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      page_token_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      source_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(start_ != nullptr);
      start_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(end_ != nullptr);
      end_->Clear();
    }
  }
  limit_ = int64_t{0};
  errors_only_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartLogsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartLogsRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // bool errors_only = 2 [json_name = "errorsOnly", deprecated = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          errors_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string filter = 3 [json_name = "filter"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_filter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartLogsRequest.filter"));
        } else
          goto handle_unusual;
        continue;
      // optional string page_token = 4 [json_name = "pageToken"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartLogsRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      // repeated string levels = 5 [json_name = "levels"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_levels();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartLogsRequest.levels"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.Timestamp start = 6 [json_name = "start"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_start(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.Timestamp end = 7 [json_name = "end"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_end(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 limit = 8 [json_name = "limit"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_limit(&has_bits);
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string source = 9 [json_name = "source"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_source();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartLogsRequest.source"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartLogsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartLogsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartLogsRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bool errors_only = 2 [json_name = "errorsOnly", deprecated = true];
  if (this->_internal_errors_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_errors_only(), target);
  }

  // optional string filter = 3 [json_name = "filter"];
  if (_internal_has_filter()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartLogsRequest.filter");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_filter(), target);
  }

  // optional string page_token = 4 [json_name = "pageToken"];
  if (_internal_has_page_token()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartLogsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_page_token(), target);
  }

  // repeated string levels = 5 [json_name = "levels"];
  for (int i = 0, n = this->_internal_levels_size(); i < n; i++) {
    const auto& s = this->_internal_levels(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartLogsRequest.levels");
    target = stream->WriteString(5, s, target);
  }

  // optional .google.protobuf.Timestamp start = 6 [json_name = "start"];
  if (_internal_has_start()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::start(this),
        _Internal::start(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.Timestamp end = 7 [json_name = "end"];
  if (_internal_has_end()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::end(this),
        _Internal::end(this).GetCachedSize(), target, stream);
  }

  // optional int64 limit = 8 [json_name = "limit"];
  if (_internal_has_limit()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_limit(), target);
  }

  // optional string source = 9 [json_name = "source"];
  if (_internal_has_source()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartLogsRequest.source");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_source(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartLogsRequest)
  return target;
}

size_t GetRobotPartLogsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartLogsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string levels = 5 [json_name = "levels"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(levels_.size());
  for (int i = 0, n = levels_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      levels_.Get(i));
  }

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string filter = 3 [json_name = "filter"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_filter());
    }

    // optional string page_token = 4 [json_name = "pageToken"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_page_token());
    }

    // optional string source = 9 [json_name = "source"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_source());
    }

    // optional .google.protobuf.Timestamp start = 6 [json_name = "start"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_);
    }

    // optional .google.protobuf.Timestamp end = 7 [json_name = "end"];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *end_);
    }

    // optional int64 limit = 8 [json_name = "limit"];
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_limit());
    }

  }
  // bool errors_only = 2 [json_name = "errorsOnly", deprecated = true];
  if (this->_internal_errors_only() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartLogsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartLogsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartLogsRequest::GetClassData() const { return &_class_data_; }

void GetRobotPartLogsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartLogsRequest *>(to)->MergeFrom(
      static_cast<const GetRobotPartLogsRequest &>(from));
}


void GetRobotPartLogsRequest::MergeFrom(const GetRobotPartLogsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartLogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  levels_.MergeFrom(from.levels_);
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_filter(from._internal_filter());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_page_token(from._internal_page_token());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_source(from._internal_source());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_start()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_start());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_end()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_end());
    }
    if (cached_has_bits & 0x00000020u) {
      limit_ = from.limit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (from._internal_errors_only() != 0) {
    _internal_set_errors_only(from._internal_errors_only());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartLogsRequest::CopyFrom(const GetRobotPartLogsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartLogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartLogsRequest::IsInitialized() const {
  return true;
}

void GetRobotPartLogsRequest::InternalSwap(GetRobotPartLogsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  levels_.InternalSwap(&other->levels_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &filter_, lhs_arena,
      &other->filter_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &source_, lhs_arena,
      &other->source_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetRobotPartLogsRequest, errors_only_)
      + sizeof(GetRobotPartLogsRequest::errors_only_)
      - PROTOBUF_FIELD_OFFSET(GetRobotPartLogsRequest, start_)>(
          reinterpret_cast<char*>(&start_),
          reinterpret_cast<char*>(&other->start_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartLogsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[81]);
}

// ===================================================================

class GetRobotPartLogsResponse::_Internal {
 public:
};

void GetRobotPartLogsResponse::clear_logs() {
  logs_.Clear();
}
GetRobotPartLogsResponse::GetRobotPartLogsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  logs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartLogsResponse)
}
GetRobotPartLogsResponse::GetRobotPartLogsResponse(const GetRobotPartLogsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      logs_(from.logs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartLogsResponse)
}

inline void GetRobotPartLogsResponse::SharedCtor() {
next_page_token_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotPartLogsResponse::~GetRobotPartLogsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartLogsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartLogsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.Destroy();
}

void GetRobotPartLogsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartLogsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartLogsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logs_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartLogsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.common.v1.LogEntry logs = 1 [json_name = "logs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_logs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2 [json_name = "nextPageToken"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartLogsResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartLogsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartLogsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.common.v1.LogEntry logs = 1 [json_name = "logs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_logs_size()); i < n; i++) {
    const auto& repfield = this->_internal_logs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartLogsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartLogsResponse)
  return target;
}

size_t GetRobotPartLogsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartLogsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.common.v1.LogEntry logs = 1 [json_name = "logs"];
  total_size += 1UL * this->_internal_logs_size();
  for (const auto& msg : this->logs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartLogsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartLogsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartLogsResponse::GetClassData() const { return &_class_data_; }

void GetRobotPartLogsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartLogsResponse *>(to)->MergeFrom(
      static_cast<const GetRobotPartLogsResponse &>(from));
}


void GetRobotPartLogsResponse::MergeFrom(const GetRobotPartLogsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartLogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  logs_.MergeFrom(from.logs_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartLogsResponse::CopyFrom(const GetRobotPartLogsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartLogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartLogsResponse::IsInitialized() const {
  return true;
}

void GetRobotPartLogsResponse::InternalSwap(GetRobotPartLogsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  logs_.InternalSwap(&other->logs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartLogsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[82]);
}

// ===================================================================

class TailRobotPartLogsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<TailRobotPartLogsRequest>()._has_bits_);
  static void set_has_filter(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TailRobotPartLogsRequest::TailRobotPartLogsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.TailRobotPartLogsRequest)
}
TailRobotPartLogsRequest::TailRobotPartLogsRequest(const TailRobotPartLogsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_filter()) {
    filter_.Set(from._internal_filter(), 
      GetArenaForAllocation());
  }
  errors_only_ = from.errors_only_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.TailRobotPartLogsRequest)
}

inline void TailRobotPartLogsRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
filter_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  filter_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
errors_only_ = false;
}

TailRobotPartLogsRequest::~TailRobotPartLogsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.TailRobotPartLogsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TailRobotPartLogsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  filter_.Destroy();
}

void TailRobotPartLogsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TailRobotPartLogsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.TailRobotPartLogsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    filter_.ClearNonDefaultToEmpty();
  }
  errors_only_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TailRobotPartLogsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.TailRobotPartLogsRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // bool errors_only = 2 [json_name = "errorsOnly"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          errors_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string filter = 3 [json_name = "filter"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_filter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.TailRobotPartLogsRequest.filter"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TailRobotPartLogsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.TailRobotPartLogsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.TailRobotPartLogsRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bool errors_only = 2 [json_name = "errorsOnly"];
  if (this->_internal_errors_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_errors_only(), target);
  }

  // optional string filter = 3 [json_name = "filter"];
  if (_internal_has_filter()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.TailRobotPartLogsRequest.filter");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_filter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.TailRobotPartLogsRequest)
  return target;
}

size_t TailRobotPartLogsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.TailRobotPartLogsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // optional string filter = 3 [json_name = "filter"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // bool errors_only = 2 [json_name = "errorsOnly"];
  if (this->_internal_errors_only() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TailRobotPartLogsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TailRobotPartLogsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TailRobotPartLogsRequest::GetClassData() const { return &_class_data_; }

void TailRobotPartLogsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TailRobotPartLogsRequest *>(to)->MergeFrom(
      static_cast<const TailRobotPartLogsRequest &>(from));
}


void TailRobotPartLogsRequest::MergeFrom(const TailRobotPartLogsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.TailRobotPartLogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_has_filter()) {
    _internal_set_filter(from._internal_filter());
  }
  if (from._internal_errors_only() != 0) {
    _internal_set_errors_only(from._internal_errors_only());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TailRobotPartLogsRequest::CopyFrom(const TailRobotPartLogsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.TailRobotPartLogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TailRobotPartLogsRequest::IsInitialized() const {
  return true;
}

void TailRobotPartLogsRequest::InternalSwap(TailRobotPartLogsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &filter_, lhs_arena,
      &other->filter_, rhs_arena
  );
  swap(errors_only_, other->errors_only_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TailRobotPartLogsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[83]);
}

// ===================================================================

class TailRobotPartLogsResponse::_Internal {
 public:
};

void TailRobotPartLogsResponse::clear_logs() {
  logs_.Clear();
}
TailRobotPartLogsResponse::TailRobotPartLogsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  logs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.TailRobotPartLogsResponse)
}
TailRobotPartLogsResponse::TailRobotPartLogsResponse(const TailRobotPartLogsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      logs_(from.logs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.TailRobotPartLogsResponse)
}

inline void TailRobotPartLogsResponse::SharedCtor() {
}

TailRobotPartLogsResponse::~TailRobotPartLogsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.TailRobotPartLogsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TailRobotPartLogsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TailRobotPartLogsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TailRobotPartLogsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.TailRobotPartLogsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TailRobotPartLogsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.common.v1.LogEntry logs = 1 [json_name = "logs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_logs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TailRobotPartLogsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.TailRobotPartLogsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.common.v1.LogEntry logs = 1 [json_name = "logs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_logs_size()); i < n; i++) {
    const auto& repfield = this->_internal_logs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.TailRobotPartLogsResponse)
  return target;
}

size_t TailRobotPartLogsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.TailRobotPartLogsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.common.v1.LogEntry logs = 1 [json_name = "logs"];
  total_size += 1UL * this->_internal_logs_size();
  for (const auto& msg : this->logs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TailRobotPartLogsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TailRobotPartLogsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TailRobotPartLogsResponse::GetClassData() const { return &_class_data_; }

void TailRobotPartLogsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TailRobotPartLogsResponse *>(to)->MergeFrom(
      static_cast<const TailRobotPartLogsResponse &>(from));
}


void TailRobotPartLogsResponse::MergeFrom(const TailRobotPartLogsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.TailRobotPartLogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  logs_.MergeFrom(from.logs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TailRobotPartLogsResponse::CopyFrom(const TailRobotPartLogsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.TailRobotPartLogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TailRobotPartLogsResponse::IsInitialized() const {
  return true;
}

void TailRobotPartLogsResponse::InternalSwap(TailRobotPartLogsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  logs_.InternalSwap(&other->logs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TailRobotPartLogsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[84]);
}

// ===================================================================

class GetRobotPartHistoryRequest::_Internal {
 public:
};

GetRobotPartHistoryRequest::GetRobotPartHistoryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartHistoryRequest)
}
GetRobotPartHistoryRequest::GetRobotPartHistoryRequest(const GetRobotPartHistoryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartHistoryRequest)
}

inline void GetRobotPartHistoryRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotPartHistoryRequest::~GetRobotPartHistoryRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartHistoryRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartHistoryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void GetRobotPartHistoryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartHistoryRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartHistoryRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartHistoryRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartHistoryRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartHistoryRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartHistoryRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartHistoryRequest)
  return target;
}

size_t GetRobotPartHistoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartHistoryRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartHistoryRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartHistoryRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartHistoryRequest::GetClassData() const { return &_class_data_; }

void GetRobotPartHistoryRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartHistoryRequest *>(to)->MergeFrom(
      static_cast<const GetRobotPartHistoryRequest &>(from));
}


void GetRobotPartHistoryRequest::MergeFrom(const GetRobotPartHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartHistoryRequest::CopyFrom(const GetRobotPartHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartHistoryRequest::IsInitialized() const {
  return true;
}

void GetRobotPartHistoryRequest::InternalSwap(GetRobotPartHistoryRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartHistoryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[85]);
}

// ===================================================================

class GetRobotPartHistoryResponse::_Internal {
 public:
};

GetRobotPartHistoryResponse::GetRobotPartHistoryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  history_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartHistoryResponse)
}
GetRobotPartHistoryResponse::GetRobotPartHistoryResponse(const GetRobotPartHistoryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      history_(from.history_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartHistoryResponse)
}

inline void GetRobotPartHistoryResponse::SharedCtor() {
}

GetRobotPartHistoryResponse::~GetRobotPartHistoryResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartHistoryResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartHistoryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRobotPartHistoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartHistoryResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  history_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartHistoryResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.RobotPartHistoryEntry history = 1 [json_name = "history"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_history(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartHistoryResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartHistoryResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.RobotPartHistoryEntry history = 1 [json_name = "history"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_history_size()); i < n; i++) {
    const auto& repfield = this->_internal_history(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartHistoryResponse)
  return target;
}

size_t GetRobotPartHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartHistoryResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.RobotPartHistoryEntry history = 1 [json_name = "history"];
  total_size += 1UL * this->_internal_history_size();
  for (const auto& msg : this->history_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartHistoryResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartHistoryResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartHistoryResponse::GetClassData() const { return &_class_data_; }

void GetRobotPartHistoryResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartHistoryResponse *>(to)->MergeFrom(
      static_cast<const GetRobotPartHistoryResponse &>(from));
}


void GetRobotPartHistoryResponse::MergeFrom(const GetRobotPartHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  history_.MergeFrom(from.history_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartHistoryResponse::CopyFrom(const GetRobotPartHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartHistoryResponse::IsInitialized() const {
  return true;
}

void GetRobotPartHistoryResponse::InternalSwap(GetRobotPartHistoryResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  history_.InternalSwap(&other->history_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartHistoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[86]);
}

// ===================================================================

class UpdateRobotPartRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& robot_config(const UpdateRobotPartRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
UpdateRobotPartRequest::_Internal::robot_config(const UpdateRobotPartRequest* msg) {
  return *msg->robot_config_;
}
void UpdateRobotPartRequest::clear_robot_config() {
  if (GetArenaForAllocation() == nullptr && robot_config_ != nullptr) {
    delete robot_config_;
  }
  robot_config_ = nullptr;
}
UpdateRobotPartRequest::UpdateRobotPartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRobotPartRequest)
}
UpdateRobotPartRequest::UpdateRobotPartRequest(const UpdateRobotPartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_robot_config()) {
    robot_config_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.robot_config_);
  } else {
    robot_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRobotPartRequest)
}

inline void UpdateRobotPartRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
robot_config_ = nullptr;
}

UpdateRobotPartRequest::~UpdateRobotPartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateRobotPartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRobotPartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  if (this != internal_default_instance()) delete robot_config_;
}

void UpdateRobotPartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRobotPartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateRobotPartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && robot_config_ != nullptr) {
    delete robot_config_;
  }
  robot_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRobotPartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotPartRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotPartRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct robot_config = 3 [json_name = "robotConfig"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRobotPartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateRobotPartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotPartRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotPartRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Struct robot_config = 3 [json_name = "robotConfig"];
  if (this->_internal_has_robot_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::robot_config(this),
        _Internal::robot_config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateRobotPartRequest)
  return target;
}

size_t UpdateRobotPartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateRobotPartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct robot_config = 3 [json_name = "robotConfig"];
  if (this->_internal_has_robot_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRobotPartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRobotPartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRobotPartRequest::GetClassData() const { return &_class_data_; }

void UpdateRobotPartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRobotPartRequest *>(to)->MergeFrom(
      static_cast<const UpdateRobotPartRequest &>(from));
}


void UpdateRobotPartRequest::MergeFrom(const UpdateRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateRobotPartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_robot_config()) {
    _internal_mutable_robot_config()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_robot_config());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRobotPartRequest::CopyFrom(const UpdateRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateRobotPartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRobotPartRequest::IsInitialized() const {
  return true;
}

void UpdateRobotPartRequest::InternalSwap(UpdateRobotPartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(robot_config_, other->robot_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRobotPartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[87]);
}

// ===================================================================

class UpdateRobotPartResponse::_Internal {
 public:
  static const ::viam::app::v1::RobotPart& part(const UpdateRobotPartResponse* msg);
};

const ::viam::app::v1::RobotPart&
UpdateRobotPartResponse::_Internal::part(const UpdateRobotPartResponse* msg) {
  return *msg->part_;
}
UpdateRobotPartResponse::UpdateRobotPartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRobotPartResponse)
}
UpdateRobotPartResponse::UpdateRobotPartResponse(const UpdateRobotPartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_part()) {
    part_ = new ::viam::app::v1::RobotPart(*from.part_);
  } else {
    part_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRobotPartResponse)
}

inline void UpdateRobotPartResponse::SharedCtor() {
part_ = nullptr;
}

UpdateRobotPartResponse::~UpdateRobotPartResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateRobotPartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRobotPartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete part_;
}

void UpdateRobotPartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRobotPartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateRobotPartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && part_ != nullptr) {
    delete part_;
  }
  part_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRobotPartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_part(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRobotPartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateRobotPartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::part(this),
        _Internal::part(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateRobotPartResponse)
  return target;
}

size_t UpdateRobotPartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateRobotPartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *part_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRobotPartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRobotPartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRobotPartResponse::GetClassData() const { return &_class_data_; }

void UpdateRobotPartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRobotPartResponse *>(to)->MergeFrom(
      static_cast<const UpdateRobotPartResponse &>(from));
}


void UpdateRobotPartResponse::MergeFrom(const UpdateRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateRobotPartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_part()) {
    _internal_mutable_part()->::viam::app::v1::RobotPart::MergeFrom(from._internal_part());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRobotPartResponse::CopyFrom(const UpdateRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateRobotPartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRobotPartResponse::IsInitialized() const {
  return true;
}

void UpdateRobotPartResponse::InternalSwap(UpdateRobotPartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(part_, other->part_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRobotPartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[88]);
}

// ===================================================================

class NewRobotPartRequest::_Internal {
 public:
};

NewRobotPartRequest::NewRobotPartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.NewRobotPartRequest)
}
NewRobotPartRequest::NewRobotPartRequest(const NewRobotPartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  robot_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_id().empty()) {
    robot_id_.Set(from._internal_robot_id(), 
      GetArenaForAllocation());
  }
  part_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_name().empty()) {
    part_name_.Set(from._internal_part_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.NewRobotPartRequest)
}

inline void NewRobotPartRequest::SharedCtor() {
robot_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
part_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewRobotPartRequest::~NewRobotPartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.NewRobotPartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewRobotPartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  robot_id_.Destroy();
  part_name_.Destroy();
}

void NewRobotPartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewRobotPartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.NewRobotPartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robot_id_.ClearToEmpty();
  part_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewRobotPartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string robot_id = 1 [json_name = "robotId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_robot_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotPartRequest.robot_id"));
        } else
          goto handle_unusual;
        continue;
      // string part_name = 2 [json_name = "partName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_part_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotPartRequest.part_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewRobotPartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.NewRobotPartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_id().data(), static_cast<int>(this->_internal_robot_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotPartRequest.robot_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_robot_id(), target);
  }

  // string part_name = 2 [json_name = "partName"];
  if (!this->_internal_part_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_name().data(), static_cast<int>(this->_internal_part_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotPartRequest.part_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_part_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.NewRobotPartRequest)
  return target;
}

size_t NewRobotPartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.NewRobotPartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_id());
  }

  // string part_name = 2 [json_name = "partName"];
  if (!this->_internal_part_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewRobotPartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NewRobotPartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewRobotPartRequest::GetClassData() const { return &_class_data_; }

void NewRobotPartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NewRobotPartRequest *>(to)->MergeFrom(
      static_cast<const NewRobotPartRequest &>(from));
}


void NewRobotPartRequest::MergeFrom(const NewRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.NewRobotPartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_robot_id().empty()) {
    _internal_set_robot_id(from._internal_robot_id());
  }
  if (!from._internal_part_name().empty()) {
    _internal_set_part_name(from._internal_part_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewRobotPartRequest::CopyFrom(const NewRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.NewRobotPartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewRobotPartRequest::IsInitialized() const {
  return true;
}

void NewRobotPartRequest::InternalSwap(NewRobotPartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_id_, lhs_arena,
      &other->robot_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_name_, lhs_arena,
      &other->part_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NewRobotPartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[89]);
}

// ===================================================================

class NewRobotPartResponse::_Internal {
 public:
};

NewRobotPartResponse::NewRobotPartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.NewRobotPartResponse)
}
NewRobotPartResponse::NewRobotPartResponse(const NewRobotPartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.NewRobotPartResponse)
}

inline void NewRobotPartResponse::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewRobotPartResponse::~NewRobotPartResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.NewRobotPartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewRobotPartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void NewRobotPartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewRobotPartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.NewRobotPartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewRobotPartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotPartResponse.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewRobotPartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.NewRobotPartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotPartResponse.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.NewRobotPartResponse)
  return target;
}

size_t NewRobotPartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.NewRobotPartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewRobotPartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NewRobotPartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewRobotPartResponse::GetClassData() const { return &_class_data_; }

void NewRobotPartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NewRobotPartResponse *>(to)->MergeFrom(
      static_cast<const NewRobotPartResponse &>(from));
}


void NewRobotPartResponse::MergeFrom(const NewRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.NewRobotPartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewRobotPartResponse::CopyFrom(const NewRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.NewRobotPartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewRobotPartResponse::IsInitialized() const {
  return true;
}

void NewRobotPartResponse::InternalSwap(NewRobotPartResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NewRobotPartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[90]);
}

// ===================================================================

class DeleteRobotPartRequest::_Internal {
 public:
};

DeleteRobotPartRequest::DeleteRobotPartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotPartRequest)
}
DeleteRobotPartRequest::DeleteRobotPartRequest(const DeleteRobotPartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotPartRequest)
}

inline void DeleteRobotPartRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRobotPartRequest::~DeleteRobotPartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteRobotPartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRobotPartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void DeleteRobotPartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRobotPartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteRobotPartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRobotPartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteRobotPartRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRobotPartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteRobotPartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteRobotPartRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteRobotPartRequest)
  return target;
}

size_t DeleteRobotPartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteRobotPartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotPartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRobotPartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotPartRequest::GetClassData() const { return &_class_data_; }

void DeleteRobotPartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteRobotPartRequest *>(to)->MergeFrom(
      static_cast<const DeleteRobotPartRequest &>(from));
}


void DeleteRobotPartRequest::MergeFrom(const DeleteRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteRobotPartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRobotPartRequest::CopyFrom(const DeleteRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteRobotPartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRobotPartRequest::IsInitialized() const {
  return true;
}

void DeleteRobotPartRequest::InternalSwap(DeleteRobotPartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotPartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[91]);
}

// ===================================================================

class GetRobotAPIKeysRequest::_Internal {
 public:
};

GetRobotAPIKeysRequest::GetRobotAPIKeysRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotAPIKeysRequest)
}
GetRobotAPIKeysRequest::GetRobotAPIKeysRequest(const GetRobotAPIKeysRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  robot_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_id().empty()) {
    robot_id_.Set(from._internal_robot_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotAPIKeysRequest)
}

inline void GetRobotAPIKeysRequest::SharedCtor() {
robot_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotAPIKeysRequest::~GetRobotAPIKeysRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotAPIKeysRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotAPIKeysRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  robot_id_.Destroy();
}

void GetRobotAPIKeysRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotAPIKeysRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotAPIKeysRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robot_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotAPIKeysRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string robot_id = 1 [json_name = "robotId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_robot_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotAPIKeysRequest.robot_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotAPIKeysRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotAPIKeysRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_id().data(), static_cast<int>(this->_internal_robot_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotAPIKeysRequest.robot_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_robot_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotAPIKeysRequest)
  return target;
}

size_t GetRobotAPIKeysRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotAPIKeysRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotAPIKeysRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotAPIKeysRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotAPIKeysRequest::GetClassData() const { return &_class_data_; }

void GetRobotAPIKeysRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotAPIKeysRequest *>(to)->MergeFrom(
      static_cast<const GetRobotAPIKeysRequest &>(from));
}


void GetRobotAPIKeysRequest::MergeFrom(const GetRobotAPIKeysRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotAPIKeysRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_robot_id().empty()) {
    _internal_set_robot_id(from._internal_robot_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotAPIKeysRequest::CopyFrom(const GetRobotAPIKeysRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotAPIKeysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotAPIKeysRequest::IsInitialized() const {
  return true;
}

void GetRobotAPIKeysRequest::InternalSwap(GetRobotAPIKeysRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_id_, lhs_arena,
      &other->robot_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotAPIKeysRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[92]);
}

// ===================================================================

class APIKey::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const APIKey* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
APIKey::_Internal::created_on(const APIKey* msg) {
  return *msg->created_on_;
}
void APIKey::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
APIKey::APIKey(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.APIKey)
}
APIKey::APIKey(const APIKey& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(from._internal_key(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.APIKey)
}

inline void APIKey::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
key_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
created_on_ = nullptr;
}

APIKey::~APIKey() {
  // @@protoc_insertion_point(destructor:viam.app.v1.APIKey)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void APIKey::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  key_.Destroy();
  name_.Destroy();
  if (this != internal_default_instance()) delete created_on_;
}

void APIKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void APIKey::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.APIKey)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  key_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* APIKey::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.APIKey.id"));
        } else
          goto handle_unusual;
        continue;
      // string key = 2 [json_name = "key"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.APIKey.key"));
        } else
          goto handle_unusual;
        continue;
      // string name = 3 [json_name = "name"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.APIKey.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 4 [json_name = "createdOn"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* APIKey::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.APIKey)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.APIKey.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string key = 2 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.APIKey.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // string name = 3 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.APIKey.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // .google.protobuf.Timestamp created_on = 4 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.APIKey)
  return target;
}

size_t APIKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.APIKey)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string key = 2 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string name = 3 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Timestamp created_on = 4 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData APIKey::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    APIKey::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*APIKey::GetClassData() const { return &_class_data_; }

void APIKey::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<APIKey *>(to)->MergeFrom(
      static_cast<const APIKey &>(from));
}


void APIKey::MergeFrom(const APIKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.APIKey)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void APIKey::CopyFrom(const APIKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.APIKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APIKey::IsInitialized() const {
  return true;
}

void APIKey::InternalSwap(APIKey* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(created_on_, other->created_on_);
}

::PROTOBUF_NAMESPACE_ID::Metadata APIKey::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[93]);
}

// ===================================================================

class GetRobotAPIKeysResponse::_Internal {
 public:
};

GetRobotAPIKeysResponse::GetRobotAPIKeysResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  api_keys_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotAPIKeysResponse)
}
GetRobotAPIKeysResponse::GetRobotAPIKeysResponse(const GetRobotAPIKeysResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      api_keys_(from.api_keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotAPIKeysResponse)
}

inline void GetRobotAPIKeysResponse::SharedCtor() {
}

GetRobotAPIKeysResponse::~GetRobotAPIKeysResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotAPIKeysResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotAPIKeysResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRobotAPIKeysResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotAPIKeysResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotAPIKeysResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  api_keys_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotAPIKeysResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.APIKeyWithAuthorizations api_keys = 1 [json_name = "apiKeys"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_api_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotAPIKeysResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotAPIKeysResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.APIKeyWithAuthorizations api_keys = 1 [json_name = "apiKeys"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_api_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_api_keys(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotAPIKeysResponse)
  return target;
}

size_t GetRobotAPIKeysResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotAPIKeysResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.APIKeyWithAuthorizations api_keys = 1 [json_name = "apiKeys"];
  total_size += 1UL * this->_internal_api_keys_size();
  for (const auto& msg : this->api_keys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotAPIKeysResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotAPIKeysResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotAPIKeysResponse::GetClassData() const { return &_class_data_; }

void GetRobotAPIKeysResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotAPIKeysResponse *>(to)->MergeFrom(
      static_cast<const GetRobotAPIKeysResponse &>(from));
}


void GetRobotAPIKeysResponse::MergeFrom(const GetRobotAPIKeysResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotAPIKeysResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  api_keys_.MergeFrom(from.api_keys_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotAPIKeysResponse::CopyFrom(const GetRobotAPIKeysResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotAPIKeysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotAPIKeysResponse::IsInitialized() const {
  return true;
}

void GetRobotAPIKeysResponse::InternalSwap(GetRobotAPIKeysResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  api_keys_.InternalSwap(&other->api_keys_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotAPIKeysResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[94]);
}

// ===================================================================

class DeleteRobotPartResponse::_Internal {
 public:
};

DeleteRobotPartResponse::DeleteRobotPartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotPartResponse)
}
DeleteRobotPartResponse::DeleteRobotPartResponse(const DeleteRobotPartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotPartResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotPartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotPartResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotPartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[95]);
}

// ===================================================================

class Fragment::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& fragment(const Fragment* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const Fragment* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_updated(const Fragment* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
Fragment::_Internal::fragment(const Fragment* msg) {
  return *msg->fragment_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Fragment::_Internal::created_on(const Fragment* msg) {
  return *msg->created_on_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Fragment::_Internal::last_updated(const Fragment* msg) {
  return *msg->last_updated_;
}
void Fragment::clear_fragment() {
  if (GetArenaForAllocation() == nullptr && fragment_ != nullptr) {
    delete fragment_;
  }
  fragment_ = nullptr;
}
void Fragment::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
void Fragment::clear_last_updated() {
  if (GetArenaForAllocation() == nullptr && last_updated_ != nullptr) {
    delete last_updated_;
  }
  last_updated_ = nullptr;
}
Fragment::Fragment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Fragment)
}
Fragment::Fragment(const Fragment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  organization_owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_owner_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_owner().empty()) {
    organization_owner_.Set(from._internal_organization_owner(), 
      GetArenaForAllocation());
  }
  organization_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_name().empty()) {
    organization_name_.Set(from._internal_organization_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_fragment()) {
    fragment_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.fragment_);
  } else {
    fragment_ = nullptr;
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  if (from._internal_has_last_updated()) {
    last_updated_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_updated_);
  } else {
    last_updated_ = nullptr;
  }
  ::memcpy(&public__, &from.public__,
    static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&public__)) + sizeof(visibility_));
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Fragment)
}

inline void Fragment::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_owner_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_owner_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&fragment_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&fragment_)) + sizeof(visibility_));
}

Fragment::~Fragment() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Fragment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Fragment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  organization_owner_.Destroy();
  organization_name_.Destroy();
  if (this != internal_default_instance()) delete fragment_;
  if (this != internal_default_instance()) delete created_on_;
  if (this != internal_default_instance()) delete last_updated_;
}

void Fragment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Fragment::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Fragment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  organization_owner_.ClearToEmpty();
  organization_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && fragment_ != nullptr) {
    delete fragment_;
  }
  fragment_ = nullptr;
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  if (GetArenaForAllocation() == nullptr && last_updated_ != nullptr) {
    delete last_updated_;
  }
  last_updated_ = nullptr;
  ::memset(&public__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visibility_) -
      reinterpret_cast<char*>(&public__)) + sizeof(visibility_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Fragment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Fragment.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Fragment.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct fragment = 3 [json_name = "fragment", (.tagger.v1.tags) = "bson:\"fragment\" json:\"fragment\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_fragment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string organization_owner = 4 [json_name = "organizationOwner", (.tagger.v1.tags) = "bson:\"organization_owner\" json:\"owner\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_organization_owner();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Fragment.organization_owner"));
        } else
          goto handle_unusual;
        continue;
      // bool public = 5 [json_name = "public", (.tagger.v1.tags) = "bson:\"public\" json:\"public\""];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          public__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 6 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string organization_name = 7 [json_name = "organizationName"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_organization_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Fragment.organization_name"));
        } else
          goto handle_unusual;
        continue;
      // int32 robot_part_count = 9 [json_name = "robotPartCount"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          robot_part_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 organization_count = 10 [json_name = "organizationCount"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          organization_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool only_used_by_owner = 11 [json_name = "onlyUsedByOwner"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          only_used_by_owner_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.FragmentVisibility visibility = 12 [json_name = "visibility"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_visibility(static_cast<::viam::app::v1::FragmentVisibility>(val));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_updated = 13 [json_name = "lastUpdated", (.tagger.v1.tags) = "bson:\"last_updated_at\""];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_updated(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Fragment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Fragment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Fragment.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Fragment.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Struct fragment = 3 [json_name = "fragment", (.tagger.v1.tags) = "bson:\"fragment\" json:\"fragment\""];
  if (this->_internal_has_fragment()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::fragment(this),
        _Internal::fragment(this).GetCachedSize(), target, stream);
  }

  // string organization_owner = 4 [json_name = "organizationOwner", (.tagger.v1.tags) = "bson:\"organization_owner\" json:\"owner\""];
  if (!this->_internal_organization_owner().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_owner().data(), static_cast<int>(this->_internal_organization_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Fragment.organization_owner");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_organization_owner(), target);
  }

  // bool public = 5 [json_name = "public", (.tagger.v1.tags) = "bson:\"public\" json:\"public\""];
  if (this->_internal_public_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_public_(), target);
  }

  // .google.protobuf.Timestamp created_on = 6 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // string organization_name = 7 [json_name = "organizationName"];
  if (!this->_internal_organization_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_name().data(), static_cast<int>(this->_internal_organization_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Fragment.organization_name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_organization_name(), target);
  }

  // int32 robot_part_count = 9 [json_name = "robotPartCount"];
  if (this->_internal_robot_part_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_robot_part_count(), target);
  }

  // int32 organization_count = 10 [json_name = "organizationCount"];
  if (this->_internal_organization_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(10, this->_internal_organization_count(), target);
  }

  // bool only_used_by_owner = 11 [json_name = "onlyUsedByOwner"];
  if (this->_internal_only_used_by_owner() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(11, this->_internal_only_used_by_owner(), target);
  }

  // .viam.app.v1.FragmentVisibility visibility = 12 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      12, this->_internal_visibility(), target);
  }

  // .google.protobuf.Timestamp last_updated = 13 [json_name = "lastUpdated", (.tagger.v1.tags) = "bson:\"last_updated_at\""];
  if (this->_internal_has_last_updated()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::last_updated(this),
        _Internal::last_updated(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Fragment)
  return target;
}

size_t Fragment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Fragment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string organization_owner = 4 [json_name = "organizationOwner", (.tagger.v1.tags) = "bson:\"organization_owner\" json:\"owner\""];
  if (!this->_internal_organization_owner().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_owner());
  }

  // string organization_name = 7 [json_name = "organizationName"];
  if (!this->_internal_organization_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_name());
  }

  // .google.protobuf.Struct fragment = 3 [json_name = "fragment", (.tagger.v1.tags) = "bson:\"fragment\" json:\"fragment\""];
  if (this->_internal_has_fragment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fragment_);
  }

  // .google.protobuf.Timestamp created_on = 6 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // .google.protobuf.Timestamp last_updated = 13 [json_name = "lastUpdated", (.tagger.v1.tags) = "bson:\"last_updated_at\""];
  if (this->_internal_has_last_updated()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_updated_);
  }

  // bool public = 5 [json_name = "public", (.tagger.v1.tags) = "bson:\"public\" json:\"public\""];
  if (this->_internal_public_() != 0) {
    total_size += 1 + 1;
  }

  // bool only_used_by_owner = 11 [json_name = "onlyUsedByOwner"];
  if (this->_internal_only_used_by_owner() != 0) {
    total_size += 1 + 1;
  }

  // int32 robot_part_count = 9 [json_name = "robotPartCount"];
  if (this->_internal_robot_part_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_robot_part_count());
  }

  // int32 organization_count = 10 [json_name = "organizationCount"];
  if (this->_internal_organization_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_organization_count());
  }

  // .viam.app.v1.FragmentVisibility visibility = 12 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_visibility());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Fragment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Fragment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Fragment::GetClassData() const { return &_class_data_; }

void Fragment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Fragment *>(to)->MergeFrom(
      static_cast<const Fragment &>(from));
}


void Fragment::MergeFrom(const Fragment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Fragment)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_organization_owner().empty()) {
    _internal_set_organization_owner(from._internal_organization_owner());
  }
  if (!from._internal_organization_name().empty()) {
    _internal_set_organization_name(from._internal_organization_name());
  }
  if (from._internal_has_fragment()) {
    _internal_mutable_fragment()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_fragment());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_has_last_updated()) {
    _internal_mutable_last_updated()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_updated());
  }
  if (from._internal_public_() != 0) {
    _internal_set_public_(from._internal_public_());
  }
  if (from._internal_only_used_by_owner() != 0) {
    _internal_set_only_used_by_owner(from._internal_only_used_by_owner());
  }
  if (from._internal_robot_part_count() != 0) {
    _internal_set_robot_part_count(from._internal_robot_part_count());
  }
  if (from._internal_organization_count() != 0) {
    _internal_set_organization_count(from._internal_organization_count());
  }
  if (from._internal_visibility() != 0) {
    _internal_set_visibility(from._internal_visibility());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Fragment::CopyFrom(const Fragment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Fragment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fragment::IsInitialized() const {
  return true;
}

void Fragment::InternalSwap(Fragment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_owner_, lhs_arena,
      &other->organization_owner_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_name_, lhs_arena,
      &other->organization_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Fragment, visibility_)
      + sizeof(Fragment::visibility_)
      - PROTOBUF_FIELD_OFFSET(Fragment, fragment_)>(
          reinterpret_cast<char*>(&fragment_),
          reinterpret_cast<char*>(&other->fragment_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Fragment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[96]);
}

// ===================================================================

class FragmentHistoryEntry::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& edited_on(const FragmentHistoryEntry* msg);
  static const ::viam::app::v1::Fragment& old(const FragmentHistoryEntry* msg);
  static const ::viam::app::v1::AuthenticatorInfo& edited_by(const FragmentHistoryEntry* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& config(const FragmentHistoryEntry* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
FragmentHistoryEntry::_Internal::edited_on(const FragmentHistoryEntry* msg) {
  return *msg->edited_on_;
}
const ::viam::app::v1::Fragment&
FragmentHistoryEntry::_Internal::old(const FragmentHistoryEntry* msg) {
  return *msg->old_;
}
const ::viam::app::v1::AuthenticatorInfo&
FragmentHistoryEntry::_Internal::edited_by(const FragmentHistoryEntry* msg) {
  return *msg->edited_by_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
FragmentHistoryEntry::_Internal::config(const FragmentHistoryEntry* msg) {
  return *msg->config_;
}
void FragmentHistoryEntry::clear_edited_on() {
  if (GetArenaForAllocation() == nullptr && edited_on_ != nullptr) {
    delete edited_on_;
  }
  edited_on_ = nullptr;
}
void FragmentHistoryEntry::clear_config() {
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
FragmentHistoryEntry::FragmentHistoryEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.FragmentHistoryEntry)
}
FragmentHistoryEntry::FragmentHistoryEntry(const FragmentHistoryEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fragment_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    fragment_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fragment().empty()) {
    fragment_.Set(from._internal_fragment(), 
      GetArenaForAllocation());
  }
  revision_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    revision_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_revision().empty()) {
    revision_.Set(from._internal_revision(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_edited_on()) {
    edited_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.edited_on_);
  } else {
    edited_on_ = nullptr;
  }
  if (from._internal_has_old()) {
    old_ = new ::viam::app::v1::Fragment(*from.old_);
  } else {
    old_ = nullptr;
  }
  if (from._internal_has_edited_by()) {
    edited_by_ = new ::viam::app::v1::AuthenticatorInfo(*from.edited_by_);
  } else {
    edited_by_ = nullptr;
  }
  if (from._internal_has_config()) {
    config_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.config_);
  } else {
    config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.FragmentHistoryEntry)
}

inline void FragmentHistoryEntry::SharedCtor() {
fragment_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  fragment_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
revision_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  revision_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&edited_on_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&config_) -
    reinterpret_cast<char*>(&edited_on_)) + sizeof(config_));
}

FragmentHistoryEntry::~FragmentHistoryEntry() {
  // @@protoc_insertion_point(destructor:viam.app.v1.FragmentHistoryEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FragmentHistoryEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  fragment_.Destroy();
  revision_.Destroy();
  if (this != internal_default_instance()) delete edited_on_;
  if (this != internal_default_instance()) delete old_;
  if (this != internal_default_instance()) delete edited_by_;
  if (this != internal_default_instance()) delete config_;
}

void FragmentHistoryEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FragmentHistoryEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.FragmentHistoryEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fragment_.ClearToEmpty();
  revision_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && edited_on_ != nullptr) {
    delete edited_on_;
  }
  edited_on_ = nullptr;
  if (GetArenaForAllocation() == nullptr && old_ != nullptr) {
    delete old_;
  }
  old_ = nullptr;
  if (GetArenaForAllocation() == nullptr && edited_by_ != nullptr) {
    delete edited_by_;
  }
  edited_by_ = nullptr;
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FragmentHistoryEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string fragment = 1 [json_name = "fragment", (.tagger.v1.tags) = "bson:\"fragment\" json:\"fragment\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_fragment();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.FragmentHistoryEntry.fragment"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp edited_on = 2 [json_name = "editedOn", (.tagger.v1.tags) = "bson:\"edited_on\" json:\"edited_on\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edited_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.Fragment old = 3 [json_name = "old", (.tagger.v1.tags) = "bson:\"old\" json:\"old\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_old(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.AuthenticatorInfo edited_by = 4 [json_name = "editedBy", (.tagger.v1.tags) = "bson:\"edited_by\" json:\"edited_by\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_edited_by(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string revision = 5 [json_name = "revision", (.tagger.v1.tags) = "bson:\"revision\" json:\"revision\""];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_revision();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.FragmentHistoryEntry.revision"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct config = 6 [json_name = "config", (.tagger.v1.tags) = "bson:\"config\" json:\"config\""];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FragmentHistoryEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.FragmentHistoryEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string fragment = 1 [json_name = "fragment", (.tagger.v1.tags) = "bson:\"fragment\" json:\"fragment\""];
  if (!this->_internal_fragment().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fragment().data(), static_cast<int>(this->_internal_fragment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.FragmentHistoryEntry.fragment");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_fragment(), target);
  }

  // .google.protobuf.Timestamp edited_on = 2 [json_name = "editedOn", (.tagger.v1.tags) = "bson:\"edited_on\" json:\"edited_on\""];
  if (this->_internal_has_edited_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edited_on(this),
        _Internal::edited_on(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.Fragment old = 3 [json_name = "old", (.tagger.v1.tags) = "bson:\"old\" json:\"old\""];
  if (this->_internal_has_old()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::old(this),
        _Internal::old(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.AuthenticatorInfo edited_by = 4 [json_name = "editedBy", (.tagger.v1.tags) = "bson:\"edited_by\" json:\"edited_by\""];
  if (this->_internal_has_edited_by()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::edited_by(this),
        _Internal::edited_by(this).GetCachedSize(), target, stream);
  }

  // string revision = 5 [json_name = "revision", (.tagger.v1.tags) = "bson:\"revision\" json:\"revision\""];
  if (!this->_internal_revision().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_revision().data(), static_cast<int>(this->_internal_revision().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.FragmentHistoryEntry.revision");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_revision(), target);
  }

  // .google.protobuf.Struct config = 6 [json_name = "config", (.tagger.v1.tags) = "bson:\"config\" json:\"config\""];
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.FragmentHistoryEntry)
  return target;
}

size_t FragmentHistoryEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.FragmentHistoryEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string fragment = 1 [json_name = "fragment", (.tagger.v1.tags) = "bson:\"fragment\" json:\"fragment\""];
  if (!this->_internal_fragment().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fragment());
  }

  // string revision = 5 [json_name = "revision", (.tagger.v1.tags) = "bson:\"revision\" json:\"revision\""];
  if (!this->_internal_revision().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_revision());
  }

  // .google.protobuf.Timestamp edited_on = 2 [json_name = "editedOn", (.tagger.v1.tags) = "bson:\"edited_on\" json:\"edited_on\""];
  if (this->_internal_has_edited_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *edited_on_);
  }

  // .viam.app.v1.Fragment old = 3 [json_name = "old", (.tagger.v1.tags) = "bson:\"old\" json:\"old\""];
  if (this->_internal_has_old()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *old_);
  }

  // .viam.app.v1.AuthenticatorInfo edited_by = 4 [json_name = "editedBy", (.tagger.v1.tags) = "bson:\"edited_by\" json:\"edited_by\""];
  if (this->_internal_has_edited_by()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *edited_by_);
  }

  // .google.protobuf.Struct config = 6 [json_name = "config", (.tagger.v1.tags) = "bson:\"config\" json:\"config\""];
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FragmentHistoryEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FragmentHistoryEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FragmentHistoryEntry::GetClassData() const { return &_class_data_; }

void FragmentHistoryEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FragmentHistoryEntry *>(to)->MergeFrom(
      static_cast<const FragmentHistoryEntry &>(from));
}


void FragmentHistoryEntry::MergeFrom(const FragmentHistoryEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.FragmentHistoryEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_fragment().empty()) {
    _internal_set_fragment(from._internal_fragment());
  }
  if (!from._internal_revision().empty()) {
    _internal_set_revision(from._internal_revision());
  }
  if (from._internal_has_edited_on()) {
    _internal_mutable_edited_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_edited_on());
  }
  if (from._internal_has_old()) {
    _internal_mutable_old()->::viam::app::v1::Fragment::MergeFrom(from._internal_old());
  }
  if (from._internal_has_edited_by()) {
    _internal_mutable_edited_by()->::viam::app::v1::AuthenticatorInfo::MergeFrom(from._internal_edited_by());
  }
  if (from._internal_has_config()) {
    _internal_mutable_config()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_config());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FragmentHistoryEntry::CopyFrom(const FragmentHistoryEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.FragmentHistoryEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FragmentHistoryEntry::IsInitialized() const {
  return true;
}

void FragmentHistoryEntry::InternalSwap(FragmentHistoryEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &fragment_, lhs_arena,
      &other->fragment_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &revision_, lhs_arena,
      &other->revision_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FragmentHistoryEntry, config_)
      + sizeof(FragmentHistoryEntry::config_)
      - PROTOBUF_FIELD_OFFSET(FragmentHistoryEntry, edited_on_)>(
          reinterpret_cast<char*>(&edited_on_),
          reinterpret_cast<char*>(&other->edited_on_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FragmentHistoryEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[97]);
}

// ===================================================================

class FragmentError::_Internal {
 public:
};

FragmentError::FragmentError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.FragmentError)
}
FragmentError::FragmentError(const FragmentError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fragment_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    fragment_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fragment_id().empty()) {
    fragment_id_.Set(from._internal_fragment_id(), 
      GetArenaForAllocation());
  }
  detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_detail().empty()) {
    detail_.Set(from._internal_detail(), 
      GetArenaForAllocation());
  }
  error_type_ = from.error_type_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.FragmentError)
}

inline void FragmentError::SharedCtor() {
fragment_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  fragment_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
detail_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  detail_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
error_type_ = 0;
}

FragmentError::~FragmentError() {
  // @@protoc_insertion_point(destructor:viam.app.v1.FragmentError)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FragmentError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  fragment_id_.Destroy();
  detail_.Destroy();
}

void FragmentError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FragmentError::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.FragmentError)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fragment_id_.ClearToEmpty();
  detail_.ClearToEmpty();
  error_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FragmentError::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.FragmentErrorType error_type = 1 [json_name = "errorType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_error_type(static_cast<::viam::app::v1::FragmentErrorType>(val));
        } else
          goto handle_unusual;
        continue;
      // string fragment_id = 2 [json_name = "fragmentId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_fragment_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.FragmentError.fragment_id"));
        } else
          goto handle_unusual;
        continue;
      // string detail = 3 [json_name = "detail"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_detail();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.FragmentError.detail"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FragmentError::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.FragmentError)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.FragmentErrorType error_type = 1 [json_name = "errorType"];
  if (this->_internal_error_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_error_type(), target);
  }

  // string fragment_id = 2 [json_name = "fragmentId"];
  if (!this->_internal_fragment_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fragment_id().data(), static_cast<int>(this->_internal_fragment_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.FragmentError.fragment_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_fragment_id(), target);
  }

  // string detail = 3 [json_name = "detail"];
  if (!this->_internal_detail().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_detail().data(), static_cast<int>(this->_internal_detail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.FragmentError.detail");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_detail(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.FragmentError)
  return target;
}

size_t FragmentError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.FragmentError)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string fragment_id = 2 [json_name = "fragmentId"];
  if (!this->_internal_fragment_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fragment_id());
  }

  // string detail = 3 [json_name = "detail"];
  if (!this->_internal_detail().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_detail());
  }

  // .viam.app.v1.FragmentErrorType error_type = 1 [json_name = "errorType"];
  if (this->_internal_error_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_error_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FragmentError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FragmentError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FragmentError::GetClassData() const { return &_class_data_; }

void FragmentError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FragmentError *>(to)->MergeFrom(
      static_cast<const FragmentError &>(from));
}


void FragmentError::MergeFrom(const FragmentError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.FragmentError)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_fragment_id().empty()) {
    _internal_set_fragment_id(from._internal_fragment_id());
  }
  if (!from._internal_detail().empty()) {
    _internal_set_detail(from._internal_detail());
  }
  if (from._internal_error_type() != 0) {
    _internal_set_error_type(from._internal_error_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FragmentError::CopyFrom(const FragmentError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.FragmentError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FragmentError::IsInitialized() const {
  return true;
}

void FragmentError::InternalSwap(FragmentError* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &fragment_id_, lhs_arena,
      &other->fragment_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &detail_, lhs_arena,
      &other->detail_, rhs_arena
  );
  swap(error_type_, other->error_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FragmentError::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[98]);
}

// ===================================================================

class FragmentUsage::_Internal {
 public:
};

FragmentUsage::FragmentUsage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.FragmentUsage)
}
FragmentUsage::FragmentUsage(const FragmentUsage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fragment_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    fragment_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fragment_id().empty()) {
    fragment_id_.Set(from._internal_fragment_id(), 
      GetArenaForAllocation());
  }
  ::memcpy(&organizations_, &from.organizations_,
    static_cast<size_t>(reinterpret_cast<char*>(&machines_in_current_org_) -
    reinterpret_cast<char*>(&organizations_)) + sizeof(machines_in_current_org_));
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.FragmentUsage)
}

inline void FragmentUsage::SharedCtor() {
fragment_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  fragment_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&organizations_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&machines_in_current_org_) -
    reinterpret_cast<char*>(&organizations_)) + sizeof(machines_in_current_org_));
}

FragmentUsage::~FragmentUsage() {
  // @@protoc_insertion_point(destructor:viam.app.v1.FragmentUsage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FragmentUsage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  fragment_id_.Destroy();
}

void FragmentUsage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FragmentUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.FragmentUsage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fragment_id_.ClearToEmpty();
  ::memset(&organizations_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&machines_in_current_org_) -
      reinterpret_cast<char*>(&organizations_)) + sizeof(machines_in_current_org_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FragmentUsage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string fragment_id = 1 [json_name = "fragmentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_fragment_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.FragmentUsage.fragment_id"));
        } else
          goto handle_unusual;
        continue;
      // int32 organizations = 2 [json_name = "organizations"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          organizations_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 machines = 3 [json_name = "machines"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          machines_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 machines_in_current_org = 4 [json_name = "machinesInCurrentOrg"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          machines_in_current_org_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FragmentUsage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.FragmentUsage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string fragment_id = 1 [json_name = "fragmentId"];
  if (!this->_internal_fragment_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fragment_id().data(), static_cast<int>(this->_internal_fragment_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.FragmentUsage.fragment_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_fragment_id(), target);
  }

  // int32 organizations = 2 [json_name = "organizations"];
  if (this->_internal_organizations() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_organizations(), target);
  }

  // int32 machines = 3 [json_name = "machines"];
  if (this->_internal_machines() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_machines(), target);
  }

  // int32 machines_in_current_org = 4 [json_name = "machinesInCurrentOrg"];
  if (this->_internal_machines_in_current_org() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_machines_in_current_org(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.FragmentUsage)
  return target;
}

size_t FragmentUsage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.FragmentUsage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string fragment_id = 1 [json_name = "fragmentId"];
  if (!this->_internal_fragment_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fragment_id());
  }

  // int32 organizations = 2 [json_name = "organizations"];
  if (this->_internal_organizations() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_organizations());
  }

  // int32 machines = 3 [json_name = "machines"];
  if (this->_internal_machines() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_machines());
  }

  // int32 machines_in_current_org = 4 [json_name = "machinesInCurrentOrg"];
  if (this->_internal_machines_in_current_org() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_machines_in_current_org());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FragmentUsage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FragmentUsage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FragmentUsage::GetClassData() const { return &_class_data_; }

void FragmentUsage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FragmentUsage *>(to)->MergeFrom(
      static_cast<const FragmentUsage &>(from));
}


void FragmentUsage::MergeFrom(const FragmentUsage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.FragmentUsage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_fragment_id().empty()) {
    _internal_set_fragment_id(from._internal_fragment_id());
  }
  if (from._internal_organizations() != 0) {
    _internal_set_organizations(from._internal_organizations());
  }
  if (from._internal_machines() != 0) {
    _internal_set_machines(from._internal_machines());
  }
  if (from._internal_machines_in_current_org() != 0) {
    _internal_set_machines_in_current_org(from._internal_machines_in_current_org());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FragmentUsage::CopyFrom(const FragmentUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.FragmentUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FragmentUsage::IsInitialized() const {
  return true;
}

void FragmentUsage::InternalSwap(FragmentUsage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &fragment_id_, lhs_arena,
      &other->fragment_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FragmentUsage, machines_in_current_org_)
      + sizeof(FragmentUsage::machines_in_current_org_)
      - PROTOBUF_FIELD_OFFSET(FragmentUsage, organizations_)>(
          reinterpret_cast<char*>(&organizations_),
          reinterpret_cast<char*>(&other->organizations_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FragmentUsage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[99]);
}

// ===================================================================

class ResolvedFragment::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& resolved_config(const ResolvedFragment* msg);
  static const ::viam::app::v1::FragmentError& error(const ResolvedFragment* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
ResolvedFragment::_Internal::resolved_config(const ResolvedFragment* msg) {
  return *msg->resolved_config_;
}
const ::viam::app::v1::FragmentError&
ResolvedFragment::_Internal::error(const ResolvedFragment* msg) {
  return *msg->error_;
}
void ResolvedFragment::clear_resolved_config() {
  if (GetArenaForAllocation() == nullptr && resolved_config_ != nullptr) {
    delete resolved_config_;
  }
  resolved_config_ = nullptr;
}
ResolvedFragment::ResolvedFragment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ResolvedFragment)
}
ResolvedFragment::ResolvedFragment(const ResolvedFragment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fragment_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    fragment_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fragment_id().empty()) {
    fragment_id_.Set(from._internal_fragment_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_resolved_config()) {
    resolved_config_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.resolved_config_);
  } else {
    resolved_config_ = nullptr;
  }
  if (from._internal_has_error()) {
    error_ = new ::viam::app::v1::FragmentError(*from.error_);
  } else {
    error_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ResolvedFragment)
}

inline void ResolvedFragment::SharedCtor() {
fragment_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  fragment_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&resolved_config_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&resolved_config_)) + sizeof(error_));
}

ResolvedFragment::~ResolvedFragment() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ResolvedFragment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResolvedFragment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  fragment_id_.Destroy();
  if (this != internal_default_instance()) delete resolved_config_;
  if (this != internal_default_instance()) delete error_;
}

void ResolvedFragment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResolvedFragment::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ResolvedFragment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fragment_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && resolved_config_ != nullptr) {
    delete resolved_config_;
  }
  resolved_config_ = nullptr;
  if (GetArenaForAllocation() == nullptr && error_ != nullptr) {
    delete error_;
  }
  error_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResolvedFragment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string fragment_id = 1 [json_name = "fragmentId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_fragment_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ResolvedFragment.fragment_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct resolved_config = 2 [json_name = "resolvedConfig"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_resolved_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.FragmentError error = 3 [json_name = "error"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResolvedFragment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ResolvedFragment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string fragment_id = 1 [json_name = "fragmentId"];
  if (!this->_internal_fragment_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fragment_id().data(), static_cast<int>(this->_internal_fragment_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ResolvedFragment.fragment_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_fragment_id(), target);
  }

  // .google.protobuf.Struct resolved_config = 2 [json_name = "resolvedConfig"];
  if (this->_internal_has_resolved_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::resolved_config(this),
        _Internal::resolved_config(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.FragmentError error = 3 [json_name = "error"];
  if (this->_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ResolvedFragment)
  return target;
}

size_t ResolvedFragment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ResolvedFragment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string fragment_id = 1 [json_name = "fragmentId"];
  if (!this->_internal_fragment_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fragment_id());
  }

  // .google.protobuf.Struct resolved_config = 2 [json_name = "resolvedConfig"];
  if (this->_internal_has_resolved_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *resolved_config_);
  }

  // .viam.app.v1.FragmentError error = 3 [json_name = "error"];
  if (this->_internal_has_error()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResolvedFragment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResolvedFragment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResolvedFragment::GetClassData() const { return &_class_data_; }

void ResolvedFragment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResolvedFragment *>(to)->MergeFrom(
      static_cast<const ResolvedFragment &>(from));
}


void ResolvedFragment::MergeFrom(const ResolvedFragment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ResolvedFragment)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_fragment_id().empty()) {
    _internal_set_fragment_id(from._internal_fragment_id());
  }
  if (from._internal_has_resolved_config()) {
    _internal_mutable_resolved_config()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_resolved_config());
  }
  if (from._internal_has_error()) {
    _internal_mutable_error()->::viam::app::v1::FragmentError::MergeFrom(from._internal_error());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResolvedFragment::CopyFrom(const ResolvedFragment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ResolvedFragment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResolvedFragment::IsInitialized() const {
  return true;
}

void ResolvedFragment::InternalSwap(ResolvedFragment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &fragment_id_, lhs_arena,
      &other->fragment_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResolvedFragment, error_)
      + sizeof(ResolvedFragment::error_)
      - PROTOBUF_FIELD_OFFSET(ResolvedFragment, resolved_config_)>(
          reinterpret_cast<char*>(&resolved_config_),
          reinterpret_cast<char*>(&other->resolved_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResolvedFragment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[100]);
}

// ===================================================================

class ListFragmentsRequest::_Internal {
 public:
};

ListFragmentsRequest::ListFragmentsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  fragment_visibility_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListFragmentsRequest)
}
ListFragmentsRequest::ListFragmentsRequest(const ListFragmentsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      fragment_visibility_(from.fragment_visibility_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  show_public_ = from.show_public_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListFragmentsRequest)
}

inline void ListFragmentsRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
show_public_ = false;
}

ListFragmentsRequest::~ListFragmentsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListFragmentsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListFragmentsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void ListFragmentsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListFragmentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListFragmentsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fragment_visibility_.Clear();
  organization_id_.ClearToEmpty();
  show_public_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListFragmentsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListFragmentsRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // bool show_public = 2 [json_name = "showPublic"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          show_public_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.FragmentVisibility fragment_visibility = 3 [json_name = "fragmentVisibility"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_fragment_visibility(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_fragment_visibility(static_cast<::viam::app::v1::FragmentVisibility>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListFragmentsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListFragmentsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListFragmentsRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // bool show_public = 2 [json_name = "showPublic"];
  if (this->_internal_show_public() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_show_public(), target);
  }

  // repeated .viam.app.v1.FragmentVisibility fragment_visibility = 3 [json_name = "fragmentVisibility"];
  {
    int byte_size = _fragment_visibility_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          3, fragment_visibility_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListFragmentsRequest)
  return target;
}

size_t ListFragmentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListFragmentsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.FragmentVisibility fragment_visibility = 3 [json_name = "fragmentVisibility"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_fragment_visibility_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_fragment_visibility(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _fragment_visibility_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // bool show_public = 2 [json_name = "showPublic"];
  if (this->_internal_show_public() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListFragmentsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListFragmentsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListFragmentsRequest::GetClassData() const { return &_class_data_; }

void ListFragmentsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListFragmentsRequest *>(to)->MergeFrom(
      static_cast<const ListFragmentsRequest &>(from));
}


void ListFragmentsRequest::MergeFrom(const ListFragmentsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListFragmentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  fragment_visibility_.MergeFrom(from.fragment_visibility_);
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (from._internal_show_public() != 0) {
    _internal_set_show_public(from._internal_show_public());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListFragmentsRequest::CopyFrom(const ListFragmentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListFragmentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFragmentsRequest::IsInitialized() const {
  return true;
}

void ListFragmentsRequest::InternalSwap(ListFragmentsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  fragment_visibility_.InternalSwap(&other->fragment_visibility_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  swap(show_public_, other->show_public_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListFragmentsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[101]);
}

// ===================================================================

class ListFragmentsResponse::_Internal {
 public:
};

ListFragmentsResponse::ListFragmentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  fragments_(arena),
  fragment_usages_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListFragmentsResponse)
}
ListFragmentsResponse::ListFragmentsResponse(const ListFragmentsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      fragments_(from.fragments_),
      fragment_usages_(from.fragment_usages_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListFragmentsResponse)
}

inline void ListFragmentsResponse::SharedCtor() {
}

ListFragmentsResponse::~ListFragmentsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListFragmentsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListFragmentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListFragmentsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListFragmentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListFragmentsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fragments_.Clear();
  fragment_usages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListFragmentsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Fragment fragments = 1 [json_name = "fragments"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fragments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.FragmentUsage fragment_usages = 2 [json_name = "fragmentUsages"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fragment_usages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListFragmentsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListFragmentsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Fragment fragments = 1 [json_name = "fragments"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fragments_size()); i < n; i++) {
    const auto& repfield = this->_internal_fragments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.FragmentUsage fragment_usages = 2 [json_name = "fragmentUsages"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fragment_usages_size()); i < n; i++) {
    const auto& repfield = this->_internal_fragment_usages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListFragmentsResponse)
  return target;
}

size_t ListFragmentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListFragmentsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Fragment fragments = 1 [json_name = "fragments"];
  total_size += 1UL * this->_internal_fragments_size();
  for (const auto& msg : this->fragments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .viam.app.v1.FragmentUsage fragment_usages = 2 [json_name = "fragmentUsages"];
  total_size += 1UL * this->_internal_fragment_usages_size();
  for (const auto& msg : this->fragment_usages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListFragmentsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListFragmentsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListFragmentsResponse::GetClassData() const { return &_class_data_; }

void ListFragmentsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListFragmentsResponse *>(to)->MergeFrom(
      static_cast<const ListFragmentsResponse &>(from));
}


void ListFragmentsResponse::MergeFrom(const ListFragmentsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListFragmentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  fragments_.MergeFrom(from.fragments_);
  fragment_usages_.MergeFrom(from.fragment_usages_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListFragmentsResponse::CopyFrom(const ListFragmentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListFragmentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFragmentsResponse::IsInitialized() const {
  return true;
}

void ListFragmentsResponse::InternalSwap(ListFragmentsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  fragments_.InternalSwap(&other->fragments_);
  fragment_usages_.InternalSwap(&other->fragment_usages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListFragmentsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[102]);
}

// ===================================================================

class GetFragmentRequest::_Internal {
 public:
};

GetFragmentRequest::GetFragmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetFragmentRequest)
}
GetFragmentRequest::GetFragmentRequest(const GetFragmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  current_organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    current_organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_current_organization_id().empty()) {
    current_organization_id_.Set(from._internal_current_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetFragmentRequest)
}

inline void GetFragmentRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
current_organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  current_organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetFragmentRequest::~GetFragmentRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetFragmentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFragmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  current_organization_id_.Destroy();
}

void GetFragmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetFragmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetFragmentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  current_organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFragmentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetFragmentRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string current_organization_id = 2 [json_name = "currentOrganizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_current_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetFragmentRequest.current_organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFragmentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetFragmentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetFragmentRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string current_organization_id = 2 [json_name = "currentOrganizationId"];
  if (!this->_internal_current_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_current_organization_id().data(), static_cast<int>(this->_internal_current_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetFragmentRequest.current_organization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_current_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetFragmentRequest)
  return target;
}

size_t GetFragmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetFragmentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string current_organization_id = 2 [json_name = "currentOrganizationId"];
  if (!this->_internal_current_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_current_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFragmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetFragmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFragmentRequest::GetClassData() const { return &_class_data_; }

void GetFragmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetFragmentRequest *>(to)->MergeFrom(
      static_cast<const GetFragmentRequest &>(from));
}


void GetFragmentRequest::MergeFrom(const GetFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetFragmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_current_organization_id().empty()) {
    _internal_set_current_organization_id(from._internal_current_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFragmentRequest::CopyFrom(const GetFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetFragmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFragmentRequest::IsInitialized() const {
  return true;
}

void GetFragmentRequest::InternalSwap(GetFragmentRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &current_organization_id_, lhs_arena,
      &other->current_organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFragmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[103]);
}

// ===================================================================

class GetFragmentResponse::_Internal {
 public:
  static const ::viam::app::v1::Fragment& fragment(const GetFragmentResponse* msg);
  static const ::viam::app::v1::FragmentUsage& fragment_usage(const GetFragmentResponse* msg);
};

const ::viam::app::v1::Fragment&
GetFragmentResponse::_Internal::fragment(const GetFragmentResponse* msg) {
  return *msg->fragment_;
}
const ::viam::app::v1::FragmentUsage&
GetFragmentResponse::_Internal::fragment_usage(const GetFragmentResponse* msg) {
  return *msg->fragment_usage_;
}
GetFragmentResponse::GetFragmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetFragmentResponse)
}
GetFragmentResponse::GetFragmentResponse(const GetFragmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_fragment()) {
    fragment_ = new ::viam::app::v1::Fragment(*from.fragment_);
  } else {
    fragment_ = nullptr;
  }
  if (from._internal_has_fragment_usage()) {
    fragment_usage_ = new ::viam::app::v1::FragmentUsage(*from.fragment_usage_);
  } else {
    fragment_usage_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetFragmentResponse)
}

inline void GetFragmentResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&fragment_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&fragment_usage_) -
    reinterpret_cast<char*>(&fragment_)) + sizeof(fragment_usage_));
}

GetFragmentResponse::~GetFragmentResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetFragmentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFragmentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete fragment_;
  if (this != internal_default_instance()) delete fragment_usage_;
}

void GetFragmentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetFragmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetFragmentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && fragment_ != nullptr) {
    delete fragment_;
  }
  fragment_ = nullptr;
  if (GetArenaForAllocation() == nullptr && fragment_usage_ != nullptr) {
    delete fragment_usage_;
  }
  fragment_usage_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFragmentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fragment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.FragmentUsage fragment_usage = 2 [json_name = "fragmentUsage"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_fragment_usage(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFragmentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetFragmentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
  if (this->_internal_has_fragment()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::fragment(this),
        _Internal::fragment(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.FragmentUsage fragment_usage = 2 [json_name = "fragmentUsage"];
  if (this->_internal_has_fragment_usage()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::fragment_usage(this),
        _Internal::fragment_usage(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetFragmentResponse)
  return target;
}

size_t GetFragmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetFragmentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
  if (this->_internal_has_fragment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fragment_);
  }

  // .viam.app.v1.FragmentUsage fragment_usage = 2 [json_name = "fragmentUsage"];
  if (this->_internal_has_fragment_usage()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fragment_usage_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFragmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetFragmentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFragmentResponse::GetClassData() const { return &_class_data_; }

void GetFragmentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetFragmentResponse *>(to)->MergeFrom(
      static_cast<const GetFragmentResponse &>(from));
}


void GetFragmentResponse::MergeFrom(const GetFragmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetFragmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_fragment()) {
    _internal_mutable_fragment()->::viam::app::v1::Fragment::MergeFrom(from._internal_fragment());
  }
  if (from._internal_has_fragment_usage()) {
    _internal_mutable_fragment_usage()->::viam::app::v1::FragmentUsage::MergeFrom(from._internal_fragment_usage());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFragmentResponse::CopyFrom(const GetFragmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetFragmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFragmentResponse::IsInitialized() const {
  return true;
}

void GetFragmentResponse::InternalSwap(GetFragmentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetFragmentResponse, fragment_usage_)
      + sizeof(GetFragmentResponse::fragment_usage_)
      - PROTOBUF_FIELD_OFFSET(GetFragmentResponse, fragment_)>(
          reinterpret_cast<char*>(&fragment_),
          reinterpret_cast<char*>(&other->fragment_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFragmentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[104]);
}

// ===================================================================

class CreateFragmentRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateFragmentRequest>()._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& config(const CreateFragmentRequest* msg);
  static void set_has_visibility(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
CreateFragmentRequest::_Internal::config(const CreateFragmentRequest* msg) {
  return *msg->config_;
}
void CreateFragmentRequest::clear_config() {
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
CreateFragmentRequest::CreateFragmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateFragmentRequest)
}
CreateFragmentRequest::CreateFragmentRequest(const CreateFragmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_config()) {
    config_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.config_);
  } else {
    config_ = nullptr;
  }
  visibility_ = from.visibility_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateFragmentRequest)
}

inline void CreateFragmentRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&config_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&config_)) + sizeof(visibility_));
}

CreateFragmentRequest::~CreateFragmentRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateFragmentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateFragmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  organization_id_.Destroy();
  if (this != internal_default_instance()) delete config_;
}

void CreateFragmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateFragmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateFragmentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  visibility_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateFragmentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateFragmentRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct config = 2 [json_name = "config"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 3 [json_name = "organizationId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateFragmentRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // optional .viam.app.v1.FragmentVisibility visibility = 4 [json_name = "visibility"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_visibility(static_cast<::viam::app::v1::FragmentVisibility>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateFragmentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateFragmentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateFragmentRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct config = 2 [json_name = "config"];
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  // string organization_id = 3 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateFragmentRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_organization_id(), target);
  }

  // optional .viam.app.v1.FragmentVisibility visibility = 4 [json_name = "visibility"];
  if (_internal_has_visibility()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_visibility(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateFragmentRequest)
  return target;
}

size_t CreateFragmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateFragmentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string organization_id = 3 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // .google.protobuf.Struct config = 2 [json_name = "config"];
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // optional .viam.app.v1.FragmentVisibility visibility = 4 [json_name = "visibility"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_visibility());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateFragmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateFragmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateFragmentRequest::GetClassData() const { return &_class_data_; }

void CreateFragmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateFragmentRequest *>(to)->MergeFrom(
      static_cast<const CreateFragmentRequest &>(from));
}


void CreateFragmentRequest::MergeFrom(const CreateFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateFragmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (from._internal_has_config()) {
    _internal_mutable_config()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_config());
  }
  if (from._internal_has_visibility()) {
    _internal_set_visibility(from._internal_visibility());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateFragmentRequest::CopyFrom(const CreateFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateFragmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFragmentRequest::IsInitialized() const {
  return true;
}

void CreateFragmentRequest::InternalSwap(CreateFragmentRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateFragmentRequest, visibility_)
      + sizeof(CreateFragmentRequest::visibility_)
      - PROTOBUF_FIELD_OFFSET(CreateFragmentRequest, config_)>(
          reinterpret_cast<char*>(&config_),
          reinterpret_cast<char*>(&other->config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateFragmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[105]);
}

// ===================================================================

class CreateFragmentResponse::_Internal {
 public:
  static const ::viam::app::v1::Fragment& fragment(const CreateFragmentResponse* msg);
};

const ::viam::app::v1::Fragment&
CreateFragmentResponse::_Internal::fragment(const CreateFragmentResponse* msg) {
  return *msg->fragment_;
}
CreateFragmentResponse::CreateFragmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateFragmentResponse)
}
CreateFragmentResponse::CreateFragmentResponse(const CreateFragmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_fragment()) {
    fragment_ = new ::viam::app::v1::Fragment(*from.fragment_);
  } else {
    fragment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateFragmentResponse)
}

inline void CreateFragmentResponse::SharedCtor() {
fragment_ = nullptr;
}

CreateFragmentResponse::~CreateFragmentResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateFragmentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateFragmentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete fragment_;
}

void CreateFragmentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateFragmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateFragmentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && fragment_ != nullptr) {
    delete fragment_;
  }
  fragment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateFragmentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fragment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateFragmentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateFragmentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
  if (this->_internal_has_fragment()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::fragment(this),
        _Internal::fragment(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateFragmentResponse)
  return target;
}

size_t CreateFragmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateFragmentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
  if (this->_internal_has_fragment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fragment_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateFragmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateFragmentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateFragmentResponse::GetClassData() const { return &_class_data_; }

void CreateFragmentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateFragmentResponse *>(to)->MergeFrom(
      static_cast<const CreateFragmentResponse &>(from));
}


void CreateFragmentResponse::MergeFrom(const CreateFragmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateFragmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_fragment()) {
    _internal_mutable_fragment()->::viam::app::v1::Fragment::MergeFrom(from._internal_fragment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateFragmentResponse::CopyFrom(const CreateFragmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateFragmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateFragmentResponse::IsInitialized() const {
  return true;
}

void CreateFragmentResponse::InternalSwap(CreateFragmentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(fragment_, other->fragment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateFragmentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[106]);
}

// ===================================================================

class UpdateFragmentRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateFragmentRequest>()._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& config(const UpdateFragmentRequest* msg);
  static void set_has_public_(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_visibility(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
UpdateFragmentRequest::_Internal::config(const UpdateFragmentRequest* msg) {
  return *msg->config_;
}
void UpdateFragmentRequest::clear_config() {
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
UpdateFragmentRequest::UpdateFragmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateFragmentRequest)
}
UpdateFragmentRequest::UpdateFragmentRequest(const UpdateFragmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_config()) {
    config_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.config_);
  } else {
    config_ = nullptr;
  }
  ::memcpy(&public__, &from.public__,
    static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&public__)) + sizeof(visibility_));
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateFragmentRequest)
}

inline void UpdateFragmentRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&config_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&config_)) + sizeof(visibility_));
}

UpdateFragmentRequest::~UpdateFragmentRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateFragmentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateFragmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  if (this != internal_default_instance()) delete config_;
}

void UpdateFragmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateFragmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateFragmentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&public__, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&visibility_) -
        reinterpret_cast<char*>(&public__)) + sizeof(visibility_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateFragmentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateFragmentRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateFragmentRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct config = 3 [json_name = "config"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool public = 4 [json_name = "public"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_public_(&has_bits);
          public__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .viam.app.v1.FragmentVisibility visibility = 5 [json_name = "visibility"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_visibility(static_cast<::viam::app::v1::FragmentVisibility>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateFragmentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateFragmentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateFragmentRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateFragmentRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Struct config = 3 [json_name = "config"];
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  // optional bool public = 4 [json_name = "public"];
  if (_internal_has_public_()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_public_(), target);
  }

  // optional .viam.app.v1.FragmentVisibility visibility = 5 [json_name = "visibility"];
  if (_internal_has_visibility()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_visibility(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateFragmentRequest)
  return target;
}

size_t UpdateFragmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateFragmentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct config = 3 [json_name = "config"];
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool public = 4 [json_name = "public"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional .viam.app.v1.FragmentVisibility visibility = 5 [json_name = "visibility"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_visibility());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateFragmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateFragmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateFragmentRequest::GetClassData() const { return &_class_data_; }

void UpdateFragmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateFragmentRequest *>(to)->MergeFrom(
      static_cast<const UpdateFragmentRequest &>(from));
}


void UpdateFragmentRequest::MergeFrom(const UpdateFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateFragmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_config()) {
    _internal_mutable_config()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_config());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      public__ = from.public__;
    }
    if (cached_has_bits & 0x00000002u) {
      visibility_ = from.visibility_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateFragmentRequest::CopyFrom(const UpdateFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateFragmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFragmentRequest::IsInitialized() const {
  return true;
}

void UpdateFragmentRequest::InternalSwap(UpdateFragmentRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateFragmentRequest, visibility_)
      + sizeof(UpdateFragmentRequest::visibility_)
      - PROTOBUF_FIELD_OFFSET(UpdateFragmentRequest, config_)>(
          reinterpret_cast<char*>(&config_),
          reinterpret_cast<char*>(&other->config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateFragmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[107]);
}

// ===================================================================

class UpdateFragmentResponse::_Internal {
 public:
  static const ::viam::app::v1::Fragment& fragment(const UpdateFragmentResponse* msg);
};

const ::viam::app::v1::Fragment&
UpdateFragmentResponse::_Internal::fragment(const UpdateFragmentResponse* msg) {
  return *msg->fragment_;
}
UpdateFragmentResponse::UpdateFragmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateFragmentResponse)
}
UpdateFragmentResponse::UpdateFragmentResponse(const UpdateFragmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_fragment()) {
    fragment_ = new ::viam::app::v1::Fragment(*from.fragment_);
  } else {
    fragment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateFragmentResponse)
}

inline void UpdateFragmentResponse::SharedCtor() {
fragment_ = nullptr;
}

UpdateFragmentResponse::~UpdateFragmentResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateFragmentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateFragmentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete fragment_;
}

void UpdateFragmentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateFragmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateFragmentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && fragment_ != nullptr) {
    delete fragment_;
  }
  fragment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateFragmentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fragment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateFragmentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateFragmentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
  if (this->_internal_has_fragment()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::fragment(this),
        _Internal::fragment(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateFragmentResponse)
  return target;
}

size_t UpdateFragmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateFragmentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Fragment fragment = 1 [json_name = "fragment"];
  if (this->_internal_has_fragment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fragment_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateFragmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateFragmentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateFragmentResponse::GetClassData() const { return &_class_data_; }

void UpdateFragmentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateFragmentResponse *>(to)->MergeFrom(
      static_cast<const UpdateFragmentResponse &>(from));
}


void UpdateFragmentResponse::MergeFrom(const UpdateFragmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateFragmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_fragment()) {
    _internal_mutable_fragment()->::viam::app::v1::Fragment::MergeFrom(from._internal_fragment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateFragmentResponse::CopyFrom(const UpdateFragmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateFragmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFragmentResponse::IsInitialized() const {
  return true;
}

void UpdateFragmentResponse::InternalSwap(UpdateFragmentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(fragment_, other->fragment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateFragmentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[108]);
}

// ===================================================================

class DeleteFragmentRequest::_Internal {
 public:
};

DeleteFragmentRequest::DeleteFragmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteFragmentRequest)
}
DeleteFragmentRequest::DeleteFragmentRequest(const DeleteFragmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteFragmentRequest)
}

inline void DeleteFragmentRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteFragmentRequest::~DeleteFragmentRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteFragmentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteFragmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void DeleteFragmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteFragmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteFragmentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteFragmentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteFragmentRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteFragmentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteFragmentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteFragmentRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteFragmentRequest)
  return target;
}

size_t DeleteFragmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteFragmentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteFragmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteFragmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteFragmentRequest::GetClassData() const { return &_class_data_; }

void DeleteFragmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteFragmentRequest *>(to)->MergeFrom(
      static_cast<const DeleteFragmentRequest &>(from));
}


void DeleteFragmentRequest::MergeFrom(const DeleteFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteFragmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteFragmentRequest::CopyFrom(const DeleteFragmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteFragmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFragmentRequest::IsInitialized() const {
  return true;
}

void DeleteFragmentRequest::InternalSwap(DeleteFragmentRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteFragmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[109]);
}

// ===================================================================

class DeleteFragmentResponse::_Internal {
 public:
};

DeleteFragmentResponse::DeleteFragmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteFragmentResponse)
}
DeleteFragmentResponse::DeleteFragmentResponse(const DeleteFragmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteFragmentResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteFragmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteFragmentResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteFragmentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[110]);
}

// ===================================================================

class GetFragmentHistoryRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetFragmentHistoryRequest>()._has_bits_);
  static void set_has_page_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_page_limit(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GetFragmentHistoryRequest::GetFragmentHistoryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetFragmentHistoryRequest)
}
GetFragmentHistoryRequest::GetFragmentHistoryRequest(const GetFragmentHistoryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_page_token()) {
    page_token_.Set(from._internal_page_token(), 
      GetArenaForAllocation());
  }
  page_limit_ = from.page_limit_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetFragmentHistoryRequest)
}

inline void GetFragmentHistoryRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_limit_ = int64_t{0};
}

GetFragmentHistoryRequest::~GetFragmentHistoryRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetFragmentHistoryRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFragmentHistoryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  page_token_.Destroy();
}

void GetFragmentHistoryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetFragmentHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetFragmentHistoryRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    page_token_.ClearNonDefaultToEmpty();
  }
  page_limit_ = int64_t{0};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFragmentHistoryRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetFragmentHistoryRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // optional string page_token = 2 [json_name = "pageToken"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetFragmentHistoryRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      // optional int64 page_limit = 3 [json_name = "pageLimit"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_page_limit(&has_bits);
          page_limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFragmentHistoryRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetFragmentHistoryRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetFragmentHistoryRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // optional string page_token = 2 [json_name = "pageToken"];
  if (_internal_has_page_token()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetFragmentHistoryRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_page_token(), target);
  }

  // optional int64 page_limit = 3 [json_name = "pageLimit"];
  if (_internal_has_page_limit()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_page_limit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetFragmentHistoryRequest)
  return target;
}

size_t GetFragmentHistoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetFragmentHistoryRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string page_token = 2 [json_name = "pageToken"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_page_token());
    }

    // optional int64 page_limit = 3 [json_name = "pageLimit"];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_page_limit());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFragmentHistoryRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetFragmentHistoryRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFragmentHistoryRequest::GetClassData() const { return &_class_data_; }

void GetFragmentHistoryRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetFragmentHistoryRequest *>(to)->MergeFrom(
      static_cast<const GetFragmentHistoryRequest &>(from));
}


void GetFragmentHistoryRequest::MergeFrom(const GetFragmentHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetFragmentHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_page_token(from._internal_page_token());
    }
    if (cached_has_bits & 0x00000002u) {
      page_limit_ = from.page_limit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFragmentHistoryRequest::CopyFrom(const GetFragmentHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetFragmentHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFragmentHistoryRequest::IsInitialized() const {
  return true;
}

void GetFragmentHistoryRequest::InternalSwap(GetFragmentHistoryRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(page_limit_, other->page_limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFragmentHistoryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[111]);
}

// ===================================================================

class GetFragmentHistoryResponse::_Internal {
 public:
};

GetFragmentHistoryResponse::GetFragmentHistoryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  history_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetFragmentHistoryResponse)
}
GetFragmentHistoryResponse::GetFragmentHistoryResponse(const GetFragmentHistoryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      history_(from.history_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(from._internal_next_page_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetFragmentHistoryResponse)
}

inline void GetFragmentHistoryResponse::SharedCtor() {
next_page_token_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  next_page_token_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetFragmentHistoryResponse::~GetFragmentHistoryResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetFragmentHistoryResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFragmentHistoryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  next_page_token_.Destroy();
}

void GetFragmentHistoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetFragmentHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetFragmentHistoryResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  history_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFragmentHistoryResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.FragmentHistoryEntry history = 1 [json_name = "history"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_history(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2 [json_name = "nextPageToken"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetFragmentHistoryResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFragmentHistoryResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetFragmentHistoryResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.FragmentHistoryEntry history = 1 [json_name = "history"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_history_size()); i < n; i++) {
    const auto& repfield = this->_internal_history(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetFragmentHistoryResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetFragmentHistoryResponse)
  return target;
}

size_t GetFragmentHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetFragmentHistoryResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.FragmentHistoryEntry history = 1 [json_name = "history"];
  total_size += 1UL * this->_internal_history_size();
  for (const auto& msg : this->history_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFragmentHistoryResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetFragmentHistoryResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFragmentHistoryResponse::GetClassData() const { return &_class_data_; }

void GetFragmentHistoryResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetFragmentHistoryResponse *>(to)->MergeFrom(
      static_cast<const GetFragmentHistoryResponse &>(from));
}


void GetFragmentHistoryResponse::MergeFrom(const GetFragmentHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetFragmentHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  history_.MergeFrom(from.history_);
  if (!from._internal_next_page_token().empty()) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFragmentHistoryResponse::CopyFrom(const GetFragmentHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetFragmentHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFragmentHistoryResponse::IsInitialized() const {
  return true;
}

void GetFragmentHistoryResponse::InternalSwap(GetFragmentHistoryResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  history_.InternalSwap(&other->history_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &next_page_token_, lhs_arena,
      &other->next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFragmentHistoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[112]);
}

// ===================================================================

class ListRobotsRequest::_Internal {
 public:
};

ListRobotsRequest::ListRobotsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListRobotsRequest)
}
ListRobotsRequest::ListRobotsRequest(const ListRobotsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListRobotsRequest)
}

inline void ListRobotsRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListRobotsRequest::~ListRobotsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListRobotsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListRobotsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void ListRobotsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRobotsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListRobotsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRobotsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListRobotsRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRobotsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListRobotsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListRobotsRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListRobotsRequest)
  return target;
}

size_t ListRobotsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListRobotsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRobotsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRobotsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRobotsRequest::GetClassData() const { return &_class_data_; }

void ListRobotsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRobotsRequest *>(to)->MergeFrom(
      static_cast<const ListRobotsRequest &>(from));
}


void ListRobotsRequest::MergeFrom(const ListRobotsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListRobotsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRobotsRequest::CopyFrom(const ListRobotsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListRobotsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRobotsRequest::IsInitialized() const {
  return true;
}

void ListRobotsRequest::InternalSwap(ListRobotsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRobotsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[113]);
}

// ===================================================================

class ListMachineFragmentsRequest::_Internal {
 public:
};

ListMachineFragmentsRequest::ListMachineFragmentsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  additional_fragment_ids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListMachineFragmentsRequest)
}
ListMachineFragmentsRequest::ListMachineFragmentsRequest(const ListMachineFragmentsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      additional_fragment_ids_(from.additional_fragment_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  machine_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    machine_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_machine_id().empty()) {
    machine_id_.Set(from._internal_machine_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListMachineFragmentsRequest)
}

inline void ListMachineFragmentsRequest::SharedCtor() {
machine_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  machine_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListMachineFragmentsRequest::~ListMachineFragmentsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListMachineFragmentsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListMachineFragmentsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  machine_id_.Destroy();
}

void ListMachineFragmentsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListMachineFragmentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListMachineFragmentsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  additional_fragment_ids_.Clear();
  machine_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListMachineFragmentsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string machine_id = 1 [json_name = "machineId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_machine_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListMachineFragmentsRequest.machine_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated string additional_fragment_ids = 2 [json_name = "additionalFragmentIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_additional_fragment_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListMachineFragmentsRequest.additional_fragment_ids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListMachineFragmentsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListMachineFragmentsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string machine_id = 1 [json_name = "machineId"];
  if (!this->_internal_machine_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_machine_id().data(), static_cast<int>(this->_internal_machine_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListMachineFragmentsRequest.machine_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_machine_id(), target);
  }

  // repeated string additional_fragment_ids = 2 [json_name = "additionalFragmentIds"];
  for (int i = 0, n = this->_internal_additional_fragment_ids_size(); i < n; i++) {
    const auto& s = this->_internal_additional_fragment_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListMachineFragmentsRequest.additional_fragment_ids");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListMachineFragmentsRequest)
  return target;
}

size_t ListMachineFragmentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListMachineFragmentsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string additional_fragment_ids = 2 [json_name = "additionalFragmentIds"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(additional_fragment_ids_.size());
  for (int i = 0, n = additional_fragment_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      additional_fragment_ids_.Get(i));
  }

  // string machine_id = 1 [json_name = "machineId"];
  if (!this->_internal_machine_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_machine_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListMachineFragmentsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListMachineFragmentsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListMachineFragmentsRequest::GetClassData() const { return &_class_data_; }

void ListMachineFragmentsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListMachineFragmentsRequest *>(to)->MergeFrom(
      static_cast<const ListMachineFragmentsRequest &>(from));
}


void ListMachineFragmentsRequest::MergeFrom(const ListMachineFragmentsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListMachineFragmentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  additional_fragment_ids_.MergeFrom(from.additional_fragment_ids_);
  if (!from._internal_machine_id().empty()) {
    _internal_set_machine_id(from._internal_machine_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListMachineFragmentsRequest::CopyFrom(const ListMachineFragmentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListMachineFragmentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMachineFragmentsRequest::IsInitialized() const {
  return true;
}

void ListMachineFragmentsRequest::InternalSwap(ListMachineFragmentsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  additional_fragment_ids_.InternalSwap(&other->additional_fragment_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &machine_id_, lhs_arena,
      &other->machine_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListMachineFragmentsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[114]);
}

// ===================================================================

class ListMachineFragmentsResponse::_Internal {
 public:
};

ListMachineFragmentsResponse::ListMachineFragmentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  fragments_(arena),
  resolved_fragments_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListMachineFragmentsResponse)
}
ListMachineFragmentsResponse::ListMachineFragmentsResponse(const ListMachineFragmentsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      fragments_(from.fragments_),
      resolved_fragments_(from.resolved_fragments_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListMachineFragmentsResponse)
}

inline void ListMachineFragmentsResponse::SharedCtor() {
}

ListMachineFragmentsResponse::~ListMachineFragmentsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListMachineFragmentsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListMachineFragmentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListMachineFragmentsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListMachineFragmentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListMachineFragmentsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fragments_.Clear();
  resolved_fragments_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListMachineFragmentsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Fragment fragments = 1 [json_name = "fragments"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fragments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.ResolvedFragment resolved_fragments = 2 [json_name = "resolvedFragments"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resolved_fragments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListMachineFragmentsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListMachineFragmentsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Fragment fragments = 1 [json_name = "fragments"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fragments_size()); i < n; i++) {
    const auto& repfield = this->_internal_fragments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.ResolvedFragment resolved_fragments = 2 [json_name = "resolvedFragments"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resolved_fragments_size()); i < n; i++) {
    const auto& repfield = this->_internal_resolved_fragments(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListMachineFragmentsResponse)
  return target;
}

size_t ListMachineFragmentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListMachineFragmentsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Fragment fragments = 1 [json_name = "fragments"];
  total_size += 1UL * this->_internal_fragments_size();
  for (const auto& msg : this->fragments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .viam.app.v1.ResolvedFragment resolved_fragments = 2 [json_name = "resolvedFragments"];
  total_size += 1UL * this->_internal_resolved_fragments_size();
  for (const auto& msg : this->resolved_fragments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListMachineFragmentsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListMachineFragmentsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListMachineFragmentsResponse::GetClassData() const { return &_class_data_; }

void ListMachineFragmentsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListMachineFragmentsResponse *>(to)->MergeFrom(
      static_cast<const ListMachineFragmentsResponse &>(from));
}


void ListMachineFragmentsResponse::MergeFrom(const ListMachineFragmentsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListMachineFragmentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  fragments_.MergeFrom(from.fragments_);
  resolved_fragments_.MergeFrom(from.resolved_fragments_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListMachineFragmentsResponse::CopyFrom(const ListMachineFragmentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListMachineFragmentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMachineFragmentsResponse::IsInitialized() const {
  return true;
}

void ListMachineFragmentsResponse::InternalSwap(ListMachineFragmentsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  fragments_.InternalSwap(&other->fragments_);
  resolved_fragments_.InternalSwap(&other->resolved_fragments_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListMachineFragmentsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[115]);
}

// ===================================================================

class ListRobotsResponse::_Internal {
 public:
};

ListRobotsResponse::ListRobotsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  robots_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListRobotsResponse)
}
ListRobotsResponse::ListRobotsResponse(const ListRobotsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      robots_(from.robots_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListRobotsResponse)
}

inline void ListRobotsResponse::SharedCtor() {
}

ListRobotsResponse::~ListRobotsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListRobotsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListRobotsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListRobotsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRobotsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListRobotsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robots_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRobotsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Robot robots = 1 [json_name = "robots"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_robots(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRobotsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListRobotsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Robot robots = 1 [json_name = "robots"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_robots_size()); i < n; i++) {
    const auto& repfield = this->_internal_robots(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListRobotsResponse)
  return target;
}

size_t ListRobotsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListRobotsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Robot robots = 1 [json_name = "robots"];
  total_size += 1UL * this->_internal_robots_size();
  for (const auto& msg : this->robots_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRobotsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRobotsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRobotsResponse::GetClassData() const { return &_class_data_; }

void ListRobotsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRobotsResponse *>(to)->MergeFrom(
      static_cast<const ListRobotsResponse &>(from));
}


void ListRobotsResponse::MergeFrom(const ListRobotsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListRobotsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  robots_.MergeFrom(from.robots_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRobotsResponse::CopyFrom(const ListRobotsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListRobotsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRobotsResponse::IsInitialized() const {
  return true;
}

void ListRobotsResponse::InternalSwap(ListRobotsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  robots_.InternalSwap(&other->robots_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRobotsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[116]);
}

// ===================================================================

class NewRobotRequest::_Internal {
 public:
};

NewRobotRequest::NewRobotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.NewRobotRequest)
}
NewRobotRequest::NewRobotRequest(const NewRobotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    location_.Set(from._internal_location(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.NewRobotRequest)
}

inline void NewRobotRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewRobotRequest::~NewRobotRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.NewRobotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewRobotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  location_.Destroy();
}

void NewRobotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewRobotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.NewRobotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  location_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewRobotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string location = 2 [json_name = "location"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotRequest.location"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewRobotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.NewRobotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string location = 2 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotRequest.location");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_location(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.NewRobotRequest)
  return target;
}

size_t NewRobotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.NewRobotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string location = 2 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewRobotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NewRobotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewRobotRequest::GetClassData() const { return &_class_data_; }

void NewRobotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NewRobotRequest *>(to)->MergeFrom(
      static_cast<const NewRobotRequest &>(from));
}


void NewRobotRequest::MergeFrom(const NewRobotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.NewRobotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_location().empty()) {
    _internal_set_location(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewRobotRequest::CopyFrom(const NewRobotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.NewRobotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewRobotRequest::IsInitialized() const {
  return true;
}

void NewRobotRequest::InternalSwap(NewRobotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_, lhs_arena,
      &other->location_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NewRobotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[117]);
}

// ===================================================================

class NewRobotResponse::_Internal {
 public:
};

NewRobotResponse::NewRobotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.NewRobotResponse)
}
NewRobotResponse::NewRobotResponse(const NewRobotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.NewRobotResponse)
}

inline void NewRobotResponse::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewRobotResponse::~NewRobotResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.NewRobotResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewRobotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void NewRobotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewRobotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.NewRobotResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewRobotResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotResponse.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewRobotResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.NewRobotResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.NewRobotResponse)
  return target;
}

size_t NewRobotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.NewRobotResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewRobotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NewRobotResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewRobotResponse::GetClassData() const { return &_class_data_; }

void NewRobotResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NewRobotResponse *>(to)->MergeFrom(
      static_cast<const NewRobotResponse &>(from));
}


void NewRobotResponse::MergeFrom(const NewRobotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.NewRobotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewRobotResponse::CopyFrom(const NewRobotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.NewRobotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewRobotResponse::IsInitialized() const {
  return true;
}

void NewRobotResponse::InternalSwap(NewRobotResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NewRobotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[118]);
}

// ===================================================================

class UpdateRobotRequest::_Internal {
 public:
};

UpdateRobotRequest::UpdateRobotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRobotRequest)
}
UpdateRobotRequest::UpdateRobotRequest(const UpdateRobotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    location_.Set(from._internal_location(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRobotRequest)
}

inline void UpdateRobotRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateRobotRequest::~UpdateRobotRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateRobotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRobotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  location_.Destroy();
}

void UpdateRobotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRobotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateRobotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  location_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRobotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string location = 3 [json_name = "location"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotRequest.location"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRobotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateRobotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string location = 3 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotRequest.location");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_location(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateRobotRequest)
  return target;
}

size_t UpdateRobotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateRobotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string location = 3 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRobotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRobotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRobotRequest::GetClassData() const { return &_class_data_; }

void UpdateRobotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRobotRequest *>(to)->MergeFrom(
      static_cast<const UpdateRobotRequest &>(from));
}


void UpdateRobotRequest::MergeFrom(const UpdateRobotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateRobotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_location().empty()) {
    _internal_set_location(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRobotRequest::CopyFrom(const UpdateRobotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateRobotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRobotRequest::IsInitialized() const {
  return true;
}

void UpdateRobotRequest::InternalSwap(UpdateRobotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_, lhs_arena,
      &other->location_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRobotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[119]);
}

// ===================================================================

class UpdateRobotResponse::_Internal {
 public:
  static const ::viam::app::v1::Robot& robot(const UpdateRobotResponse* msg);
};

const ::viam::app::v1::Robot&
UpdateRobotResponse::_Internal::robot(const UpdateRobotResponse* msg) {
  return *msg->robot_;
}
UpdateRobotResponse::UpdateRobotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRobotResponse)
}
UpdateRobotResponse::UpdateRobotResponse(const UpdateRobotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_robot()) {
    robot_ = new ::viam::app::v1::Robot(*from.robot_);
  } else {
    robot_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRobotResponse)
}

inline void UpdateRobotResponse::SharedCtor() {
robot_ = nullptr;
}

UpdateRobotResponse::~UpdateRobotResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateRobotResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRobotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete robot_;
}

void UpdateRobotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRobotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateRobotResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && robot_ != nullptr) {
    delete robot_;
  }
  robot_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRobotResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRobotResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateRobotResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
  if (this->_internal_has_robot()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::robot(this),
        _Internal::robot(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateRobotResponse)
  return target;
}

size_t UpdateRobotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateRobotResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
  if (this->_internal_has_robot()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRobotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRobotResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRobotResponse::GetClassData() const { return &_class_data_; }

void UpdateRobotResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRobotResponse *>(to)->MergeFrom(
      static_cast<const UpdateRobotResponse &>(from));
}


void UpdateRobotResponse::MergeFrom(const UpdateRobotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateRobotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_robot()) {
    _internal_mutable_robot()->::viam::app::v1::Robot::MergeFrom(from._internal_robot());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRobotResponse::CopyFrom(const UpdateRobotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateRobotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRobotResponse::IsInitialized() const {
  return true;
}

void UpdateRobotResponse::InternalSwap(UpdateRobotResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(robot_, other->robot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRobotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[120]);
}

// ===================================================================

class DeleteRobotRequest::_Internal {
 public:
};

DeleteRobotRequest::DeleteRobotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotRequest)
}
DeleteRobotRequest::DeleteRobotRequest(const DeleteRobotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotRequest)
}

inline void DeleteRobotRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRobotRequest::~DeleteRobotRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteRobotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRobotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void DeleteRobotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRobotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteRobotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRobotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteRobotRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRobotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteRobotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteRobotRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteRobotRequest)
  return target;
}

size_t DeleteRobotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteRobotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRobotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotRequest::GetClassData() const { return &_class_data_; }

void DeleteRobotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteRobotRequest *>(to)->MergeFrom(
      static_cast<const DeleteRobotRequest &>(from));
}


void DeleteRobotRequest::MergeFrom(const DeleteRobotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteRobotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRobotRequest::CopyFrom(const DeleteRobotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteRobotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRobotRequest::IsInitialized() const {
  return true;
}

void DeleteRobotRequest::InternalSwap(DeleteRobotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[121]);
}

// ===================================================================

class DeleteRobotResponse::_Internal {
 public:
};

DeleteRobotResponse::DeleteRobotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotResponse)
}
DeleteRobotResponse::DeleteRobotResponse(const DeleteRobotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[122]);
}

// ===================================================================

class MarkPartAsMainRequest::_Internal {
 public:
};

MarkPartAsMainRequest::MarkPartAsMainRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.MarkPartAsMainRequest)
}
MarkPartAsMainRequest::MarkPartAsMainRequest(const MarkPartAsMainRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.MarkPartAsMainRequest)
}

inline void MarkPartAsMainRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MarkPartAsMainRequest::~MarkPartAsMainRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.MarkPartAsMainRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MarkPartAsMainRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void MarkPartAsMainRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MarkPartAsMainRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.MarkPartAsMainRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MarkPartAsMainRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.MarkPartAsMainRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MarkPartAsMainRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.MarkPartAsMainRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.MarkPartAsMainRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.MarkPartAsMainRequest)
  return target;
}

size_t MarkPartAsMainRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.MarkPartAsMainRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MarkPartAsMainRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MarkPartAsMainRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MarkPartAsMainRequest::GetClassData() const { return &_class_data_; }

void MarkPartAsMainRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MarkPartAsMainRequest *>(to)->MergeFrom(
      static_cast<const MarkPartAsMainRequest &>(from));
}


void MarkPartAsMainRequest::MergeFrom(const MarkPartAsMainRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.MarkPartAsMainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MarkPartAsMainRequest::CopyFrom(const MarkPartAsMainRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.MarkPartAsMainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkPartAsMainRequest::IsInitialized() const {
  return true;
}

void MarkPartAsMainRequest::InternalSwap(MarkPartAsMainRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MarkPartAsMainRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[123]);
}

// ===================================================================

class MarkPartAsMainResponse::_Internal {
 public:
};

MarkPartAsMainResponse::MarkPartAsMainResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.MarkPartAsMainResponse)
}
MarkPartAsMainResponse::MarkPartAsMainResponse(const MarkPartAsMainResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.MarkPartAsMainResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MarkPartAsMainResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MarkPartAsMainResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MarkPartAsMainResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[124]);
}

// ===================================================================

class MarkPartForRestartRequest::_Internal {
 public:
};

MarkPartForRestartRequest::MarkPartForRestartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.MarkPartForRestartRequest)
}
MarkPartForRestartRequest::MarkPartForRestartRequest(const MarkPartForRestartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.MarkPartForRestartRequest)
}

inline void MarkPartForRestartRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MarkPartForRestartRequest::~MarkPartForRestartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.MarkPartForRestartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MarkPartForRestartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void MarkPartForRestartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MarkPartForRestartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.MarkPartForRestartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MarkPartForRestartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.MarkPartForRestartRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MarkPartForRestartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.MarkPartForRestartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.MarkPartForRestartRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.MarkPartForRestartRequest)
  return target;
}

size_t MarkPartForRestartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.MarkPartForRestartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MarkPartForRestartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MarkPartForRestartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MarkPartForRestartRequest::GetClassData() const { return &_class_data_; }

void MarkPartForRestartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MarkPartForRestartRequest *>(to)->MergeFrom(
      static_cast<const MarkPartForRestartRequest &>(from));
}


void MarkPartForRestartRequest::MergeFrom(const MarkPartForRestartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.MarkPartForRestartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MarkPartForRestartRequest::CopyFrom(const MarkPartForRestartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.MarkPartForRestartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkPartForRestartRequest::IsInitialized() const {
  return true;
}

void MarkPartForRestartRequest::InternalSwap(MarkPartForRestartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MarkPartForRestartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[125]);
}

// ===================================================================

class MarkPartForRestartResponse::_Internal {
 public:
};

MarkPartForRestartResponse::MarkPartForRestartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.MarkPartForRestartResponse)
}
MarkPartForRestartResponse::MarkPartForRestartResponse(const MarkPartForRestartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.MarkPartForRestartResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MarkPartForRestartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MarkPartForRestartResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MarkPartForRestartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[126]);
}

// ===================================================================

class CreateRobotPartSecretRequest::_Internal {
 public:
};

CreateRobotPartSecretRequest::CreateRobotPartSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateRobotPartSecretRequest)
}
CreateRobotPartSecretRequest::CreateRobotPartSecretRequest(const CreateRobotPartSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateRobotPartSecretRequest)
}

inline void CreateRobotPartSecretRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateRobotPartSecretRequest::~CreateRobotPartSecretRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateRobotPartSecretRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateRobotPartSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void CreateRobotPartSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRobotPartSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateRobotPartSecretRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRobotPartSecretRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateRobotPartSecretRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateRobotPartSecretRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateRobotPartSecretRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateRobotPartSecretRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateRobotPartSecretRequest)
  return target;
}

size_t CreateRobotPartSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateRobotPartSecretRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRobotPartSecretRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateRobotPartSecretRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRobotPartSecretRequest::GetClassData() const { return &_class_data_; }

void CreateRobotPartSecretRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateRobotPartSecretRequest *>(to)->MergeFrom(
      static_cast<const CreateRobotPartSecretRequest &>(from));
}


void CreateRobotPartSecretRequest::MergeFrom(const CreateRobotPartSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateRobotPartSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRobotPartSecretRequest::CopyFrom(const CreateRobotPartSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateRobotPartSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRobotPartSecretRequest::IsInitialized() const {
  return true;
}

void CreateRobotPartSecretRequest::InternalSwap(CreateRobotPartSecretRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRobotPartSecretRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[127]);
}

// ===================================================================

class CreateRobotPartSecretResponse::_Internal {
 public:
  static const ::viam::app::v1::RobotPart& part(const CreateRobotPartSecretResponse* msg);
};

const ::viam::app::v1::RobotPart&
CreateRobotPartSecretResponse::_Internal::part(const CreateRobotPartSecretResponse* msg) {
  return *msg->part_;
}
CreateRobotPartSecretResponse::CreateRobotPartSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateRobotPartSecretResponse)
}
CreateRobotPartSecretResponse::CreateRobotPartSecretResponse(const CreateRobotPartSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_part()) {
    part_ = new ::viam::app::v1::RobotPart(*from.part_);
  } else {
    part_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateRobotPartSecretResponse)
}

inline void CreateRobotPartSecretResponse::SharedCtor() {
part_ = nullptr;
}

CreateRobotPartSecretResponse::~CreateRobotPartSecretResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateRobotPartSecretResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateRobotPartSecretResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete part_;
}

void CreateRobotPartSecretResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRobotPartSecretResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateRobotPartSecretResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && part_ != nullptr) {
    delete part_;
  }
  part_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRobotPartSecretResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_part(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateRobotPartSecretResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateRobotPartSecretResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::part(this),
        _Internal::part(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateRobotPartSecretResponse)
  return target;
}

size_t CreateRobotPartSecretResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateRobotPartSecretResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *part_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRobotPartSecretResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateRobotPartSecretResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRobotPartSecretResponse::GetClassData() const { return &_class_data_; }

void CreateRobotPartSecretResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateRobotPartSecretResponse *>(to)->MergeFrom(
      static_cast<const CreateRobotPartSecretResponse &>(from));
}


void CreateRobotPartSecretResponse::MergeFrom(const CreateRobotPartSecretResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateRobotPartSecretResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_part()) {
    _internal_mutable_part()->::viam::app::v1::RobotPart::MergeFrom(from._internal_part());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRobotPartSecretResponse::CopyFrom(const CreateRobotPartSecretResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateRobotPartSecretResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRobotPartSecretResponse::IsInitialized() const {
  return true;
}

void CreateRobotPartSecretResponse::InternalSwap(CreateRobotPartSecretResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(part_, other->part_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRobotPartSecretResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[128]);
}

// ===================================================================

class DeleteRobotPartSecretRequest::_Internal {
 public:
};

DeleteRobotPartSecretRequest::DeleteRobotPartSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotPartSecretRequest)
}
DeleteRobotPartSecretRequest::DeleteRobotPartSecretRequest(const DeleteRobotPartSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  secret_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret_id().empty()) {
    secret_id_.Set(from._internal_secret_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotPartSecretRequest)
}

inline void DeleteRobotPartSecretRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
secret_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRobotPartSecretRequest::~DeleteRobotPartSecretRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteRobotPartSecretRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRobotPartSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
  secret_id_.Destroy();
}

void DeleteRobotPartSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRobotPartSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteRobotPartSecretRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  secret_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRobotPartSecretRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteRobotPartSecretRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      // string secret_id = 2 [json_name = "secretId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_secret_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteRobotPartSecretRequest.secret_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRobotPartSecretRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteRobotPartSecretRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteRobotPartSecretRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  // string secret_id = 2 [json_name = "secretId"];
  if (!this->_internal_secret_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret_id().data(), static_cast<int>(this->_internal_secret_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteRobotPartSecretRequest.secret_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_secret_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteRobotPartSecretRequest)
  return target;
}

size_t DeleteRobotPartSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteRobotPartSecretRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  // string secret_id = 2 [json_name = "secretId"];
  if (!this->_internal_secret_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotPartSecretRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRobotPartSecretRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotPartSecretRequest::GetClassData() const { return &_class_data_; }

void DeleteRobotPartSecretRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteRobotPartSecretRequest *>(to)->MergeFrom(
      static_cast<const DeleteRobotPartSecretRequest &>(from));
}


void DeleteRobotPartSecretRequest::MergeFrom(const DeleteRobotPartSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteRobotPartSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  if (!from._internal_secret_id().empty()) {
    _internal_set_secret_id(from._internal_secret_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRobotPartSecretRequest::CopyFrom(const DeleteRobotPartSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteRobotPartSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRobotPartSecretRequest::IsInitialized() const {
  return true;
}

void DeleteRobotPartSecretRequest::InternalSwap(DeleteRobotPartSecretRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_id_, lhs_arena,
      &other->secret_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotPartSecretRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[129]);
}

// ===================================================================

class DeleteRobotPartSecretResponse::_Internal {
 public:
};

DeleteRobotPartSecretResponse::DeleteRobotPartSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotPartSecretResponse)
}
DeleteRobotPartSecretResponse::DeleteRobotPartSecretResponse(const DeleteRobotPartSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotPartSecretResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotPartSecretResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotPartSecretResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotPartSecretResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[130]);
}

// ===================================================================

class Authorization::_Internal {
 public:
};

Authorization::Authorization(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Authorization)
}
Authorization::Authorization(const Authorization& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  authorization_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    authorization_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authorization_type().empty()) {
    authorization_type_.Set(from._internal_authorization_type(), 
      GetArenaForAllocation());
  }
  authorization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    authorization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authorization_id().empty()) {
    authorization_id_.Set(from._internal_authorization_id(), 
      GetArenaForAllocation());
  }
  resource_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_type().empty()) {
    resource_type_.Set(from._internal_resource_type(), 
      GetArenaForAllocation());
  }
  resource_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_id().empty()) {
    resource_id_.Set(from._internal_resource_id(), 
      GetArenaForAllocation());
  }
  identity_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    identity_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_identity_id().empty()) {
    identity_id_.Set(from._internal_identity_id(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  identity_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    identity_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_identity_type().empty()) {
    identity_type_.Set(from._internal_identity_type(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Authorization)
}

inline void Authorization::SharedCtor() {
authorization_type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  authorization_type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
authorization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  authorization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resource_type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resource_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
identity_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  identity_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
identity_type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  identity_type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Authorization::~Authorization() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Authorization)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Authorization::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  authorization_type_.Destroy();
  authorization_id_.Destroy();
  resource_type_.Destroy();
  resource_id_.Destroy();
  identity_id_.Destroy();
  organization_id_.Destroy();
  identity_type_.Destroy();
}

void Authorization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Authorization::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Authorization)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorization_type_.ClearToEmpty();
  authorization_id_.ClearToEmpty();
  resource_type_.ClearToEmpty();
  resource_id_.ClearToEmpty();
  identity_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  identity_type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Authorization::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authorization_type = 1 [json_name = "authorizationType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authorization_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Authorization.authorization_type"));
        } else
          goto handle_unusual;
        continue;
      // string authorization_id = 2 [json_name = "authorizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_authorization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Authorization.authorization_id"));
        } else
          goto handle_unusual;
        continue;
      // string resource_type = 3 [json_name = "resourceType"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_resource_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Authorization.resource_type"));
        } else
          goto handle_unusual;
        continue;
      // string resource_id = 4 [json_name = "resourceId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_resource_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Authorization.resource_id"));
        } else
          goto handle_unusual;
        continue;
      // string identity_id = 5 [json_name = "identityId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_identity_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Authorization.identity_id"));
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 6 [json_name = "organizationId"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Authorization.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string identity_type = 7 [json_name = "identityType"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_identity_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Authorization.identity_type"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Authorization::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Authorization)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authorization_type = 1 [json_name = "authorizationType"];
  if (!this->_internal_authorization_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_authorization_type().data(), static_cast<int>(this->_internal_authorization_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Authorization.authorization_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_authorization_type(), target);
  }

  // string authorization_id = 2 [json_name = "authorizationId"];
  if (!this->_internal_authorization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_authorization_id().data(), static_cast<int>(this->_internal_authorization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Authorization.authorization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_authorization_id(), target);
  }

  // string resource_type = 3 [json_name = "resourceType"];
  if (!this->_internal_resource_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_type().data(), static_cast<int>(this->_internal_resource_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Authorization.resource_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_resource_type(), target);
  }

  // string resource_id = 4 [json_name = "resourceId"];
  if (!this->_internal_resource_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_id().data(), static_cast<int>(this->_internal_resource_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Authorization.resource_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_resource_id(), target);
  }

  // string identity_id = 5 [json_name = "identityId"];
  if (!this->_internal_identity_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_id().data(), static_cast<int>(this->_internal_identity_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Authorization.identity_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_identity_id(), target);
  }

  // string organization_id = 6 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Authorization.organization_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_organization_id(), target);
  }

  // string identity_type = 7 [json_name = "identityType"];
  if (!this->_internal_identity_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identity_type().data(), static_cast<int>(this->_internal_identity_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Authorization.identity_type");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_identity_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Authorization)
  return target;
}

size_t Authorization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Authorization)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authorization_type = 1 [json_name = "authorizationType"];
  if (!this->_internal_authorization_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_authorization_type());
  }

  // string authorization_id = 2 [json_name = "authorizationId"];
  if (!this->_internal_authorization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_authorization_id());
  }

  // string resource_type = 3 [json_name = "resourceType"];
  if (!this->_internal_resource_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_type());
  }

  // string resource_id = 4 [json_name = "resourceId"];
  if (!this->_internal_resource_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_id());
  }

  // string identity_id = 5 [json_name = "identityId"];
  if (!this->_internal_identity_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_id());
  }

  // string organization_id = 6 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string identity_type = 7 [json_name = "identityType"];
  if (!this->_internal_identity_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identity_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Authorization::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Authorization::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Authorization::GetClassData() const { return &_class_data_; }

void Authorization::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Authorization *>(to)->MergeFrom(
      static_cast<const Authorization &>(from));
}


void Authorization::MergeFrom(const Authorization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Authorization)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authorization_type().empty()) {
    _internal_set_authorization_type(from._internal_authorization_type());
  }
  if (!from._internal_authorization_id().empty()) {
    _internal_set_authorization_id(from._internal_authorization_id());
  }
  if (!from._internal_resource_type().empty()) {
    _internal_set_resource_type(from._internal_resource_type());
  }
  if (!from._internal_resource_id().empty()) {
    _internal_set_resource_id(from._internal_resource_id());
  }
  if (!from._internal_identity_id().empty()) {
    _internal_set_identity_id(from._internal_identity_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_identity_type().empty()) {
    _internal_set_identity_type(from._internal_identity_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Authorization::CopyFrom(const Authorization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Authorization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Authorization::IsInitialized() const {
  return true;
}

void Authorization::InternalSwap(Authorization* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &authorization_type_, lhs_arena,
      &other->authorization_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &authorization_id_, lhs_arena,
      &other->authorization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &resource_type_, lhs_arena,
      &other->resource_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &resource_id_, lhs_arena,
      &other->resource_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &identity_id_, lhs_arena,
      &other->identity_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &identity_type_, lhs_arena,
      &other->identity_type_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Authorization::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[131]);
}

// ===================================================================

class AddRoleRequest::_Internal {
 public:
  static const ::viam::app::v1::Authorization& authorization(const AddRoleRequest* msg);
};

const ::viam::app::v1::Authorization&
AddRoleRequest::_Internal::authorization(const AddRoleRequest* msg) {
  return *msg->authorization_;
}
AddRoleRequest::AddRoleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.AddRoleRequest)
}
AddRoleRequest::AddRoleRequest(const AddRoleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_authorization()) {
    authorization_ = new ::viam::app::v1::Authorization(*from.authorization_);
  } else {
    authorization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.AddRoleRequest)
}

inline void AddRoleRequest::SharedCtor() {
authorization_ = nullptr;
}

AddRoleRequest::~AddRoleRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.AddRoleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddRoleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete authorization_;
}

void AddRoleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.AddRoleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && authorization_ != nullptr) {
    delete authorization_;
  }
  authorization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRoleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Authorization authorization = 1 [json_name = "authorization"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authorization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddRoleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.AddRoleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Authorization authorization = 1 [json_name = "authorization"];
  if (this->_internal_has_authorization()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::authorization(this),
        _Internal::authorization(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.AddRoleRequest)
  return target;
}

size_t AddRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.AddRoleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Authorization authorization = 1 [json_name = "authorization"];
  if (this->_internal_has_authorization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authorization_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddRoleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AddRoleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddRoleRequest::GetClassData() const { return &_class_data_; }

void AddRoleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AddRoleRequest *>(to)->MergeFrom(
      static_cast<const AddRoleRequest &>(from));
}


void AddRoleRequest::MergeFrom(const AddRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.AddRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_authorization()) {
    _internal_mutable_authorization()->::viam::app::v1::Authorization::MergeFrom(from._internal_authorization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddRoleRequest::CopyFrom(const AddRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.AddRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRoleRequest::IsInitialized() const {
  return true;
}

void AddRoleRequest::InternalSwap(AddRoleRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(authorization_, other->authorization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRoleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[132]);
}

// ===================================================================

class AddRoleResponse::_Internal {
 public:
};

AddRoleResponse::AddRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.AddRoleResponse)
}
AddRoleResponse::AddRoleResponse(const AddRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.AddRoleResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddRoleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddRoleResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AddRoleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[133]);
}

// ===================================================================

class RemoveRoleRequest::_Internal {
 public:
  static const ::viam::app::v1::Authorization& authorization(const RemoveRoleRequest* msg);
};

const ::viam::app::v1::Authorization&
RemoveRoleRequest::_Internal::authorization(const RemoveRoleRequest* msg) {
  return *msg->authorization_;
}
RemoveRoleRequest::RemoveRoleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RemoveRoleRequest)
}
RemoveRoleRequest::RemoveRoleRequest(const RemoveRoleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_authorization()) {
    authorization_ = new ::viam::app::v1::Authorization(*from.authorization_);
  } else {
    authorization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RemoveRoleRequest)
}

inline void RemoveRoleRequest::SharedCtor() {
authorization_ = nullptr;
}

RemoveRoleRequest::~RemoveRoleRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RemoveRoleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveRoleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete authorization_;
}

void RemoveRoleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RemoveRoleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && authorization_ != nullptr) {
    delete authorization_;
  }
  authorization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveRoleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Authorization authorization = 1 [json_name = "authorization"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authorization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveRoleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RemoveRoleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Authorization authorization = 1 [json_name = "authorization"];
  if (this->_internal_has_authorization()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::authorization(this),
        _Internal::authorization(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RemoveRoleRequest)
  return target;
}

size_t RemoveRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RemoveRoleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Authorization authorization = 1 [json_name = "authorization"];
  if (this->_internal_has_authorization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authorization_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveRoleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RemoveRoleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveRoleRequest::GetClassData() const { return &_class_data_; }

void RemoveRoleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RemoveRoleRequest *>(to)->MergeFrom(
      static_cast<const RemoveRoleRequest &>(from));
}


void RemoveRoleRequest::MergeFrom(const RemoveRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RemoveRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_authorization()) {
    _internal_mutable_authorization()->::viam::app::v1::Authorization::MergeFrom(from._internal_authorization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveRoleRequest::CopyFrom(const RemoveRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RemoveRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRoleRequest::IsInitialized() const {
  return true;
}

void RemoveRoleRequest::InternalSwap(RemoveRoleRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(authorization_, other->authorization_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveRoleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[134]);
}

// ===================================================================

class RemoveRoleResponse::_Internal {
 public:
};

RemoveRoleResponse::RemoveRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RemoveRoleResponse)
}
RemoveRoleResponse::RemoveRoleResponse(const RemoveRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RemoveRoleResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveRoleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveRoleResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveRoleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[135]);
}

// ===================================================================

class ChangeRoleRequest::_Internal {
 public:
  static const ::viam::app::v1::Authorization& old_authorization(const ChangeRoleRequest* msg);
  static const ::viam::app::v1::Authorization& new_authorization(const ChangeRoleRequest* msg);
};

const ::viam::app::v1::Authorization&
ChangeRoleRequest::_Internal::old_authorization(const ChangeRoleRequest* msg) {
  return *msg->old_authorization_;
}
const ::viam::app::v1::Authorization&
ChangeRoleRequest::_Internal::new_authorization(const ChangeRoleRequest* msg) {
  return *msg->new_authorization_;
}
ChangeRoleRequest::ChangeRoleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ChangeRoleRequest)
}
ChangeRoleRequest::ChangeRoleRequest(const ChangeRoleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_old_authorization()) {
    old_authorization_ = new ::viam::app::v1::Authorization(*from.old_authorization_);
  } else {
    old_authorization_ = nullptr;
  }
  if (from._internal_has_new_authorization()) {
    new_authorization_ = new ::viam::app::v1::Authorization(*from.new_authorization_);
  } else {
    new_authorization_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ChangeRoleRequest)
}

inline void ChangeRoleRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&old_authorization_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&new_authorization_) -
    reinterpret_cast<char*>(&old_authorization_)) + sizeof(new_authorization_));
}

ChangeRoleRequest::~ChangeRoleRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ChangeRoleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChangeRoleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete old_authorization_;
  if (this != internal_default_instance()) delete new_authorization_;
}

void ChangeRoleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChangeRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ChangeRoleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && old_authorization_ != nullptr) {
    delete old_authorization_;
  }
  old_authorization_ = nullptr;
  if (GetArenaForAllocation() == nullptr && new_authorization_ != nullptr) {
    delete new_authorization_;
  }
  new_authorization_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangeRoleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Authorization old_authorization = 1 [json_name = "oldAuthorization"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_old_authorization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.Authorization new_authorization = 2 [json_name = "newAuthorization"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_new_authorization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChangeRoleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ChangeRoleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Authorization old_authorization = 1 [json_name = "oldAuthorization"];
  if (this->_internal_has_old_authorization()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::old_authorization(this),
        _Internal::old_authorization(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.Authorization new_authorization = 2 [json_name = "newAuthorization"];
  if (this->_internal_has_new_authorization()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::new_authorization(this),
        _Internal::new_authorization(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ChangeRoleRequest)
  return target;
}

size_t ChangeRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ChangeRoleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Authorization old_authorization = 1 [json_name = "oldAuthorization"];
  if (this->_internal_has_old_authorization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *old_authorization_);
  }

  // .viam.app.v1.Authorization new_authorization = 2 [json_name = "newAuthorization"];
  if (this->_internal_has_new_authorization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *new_authorization_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChangeRoleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ChangeRoleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChangeRoleRequest::GetClassData() const { return &_class_data_; }

void ChangeRoleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ChangeRoleRequest *>(to)->MergeFrom(
      static_cast<const ChangeRoleRequest &>(from));
}


void ChangeRoleRequest::MergeFrom(const ChangeRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ChangeRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_old_authorization()) {
    _internal_mutable_old_authorization()->::viam::app::v1::Authorization::MergeFrom(from._internal_old_authorization());
  }
  if (from._internal_has_new_authorization()) {
    _internal_mutable_new_authorization()->::viam::app::v1::Authorization::MergeFrom(from._internal_new_authorization());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeRoleRequest::CopyFrom(const ChangeRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ChangeRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeRoleRequest::IsInitialized() const {
  return true;
}

void ChangeRoleRequest::InternalSwap(ChangeRoleRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChangeRoleRequest, new_authorization_)
      + sizeof(ChangeRoleRequest::new_authorization_)
      - PROTOBUF_FIELD_OFFSET(ChangeRoleRequest, old_authorization_)>(
          reinterpret_cast<char*>(&old_authorization_),
          reinterpret_cast<char*>(&other->old_authorization_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeRoleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[136]);
}

// ===================================================================

class ChangeRoleResponse::_Internal {
 public:
};

ChangeRoleResponse::ChangeRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ChangeRoleResponse)
}
ChangeRoleResponse::ChangeRoleResponse(const ChangeRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ChangeRoleResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChangeRoleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChangeRoleResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ChangeRoleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[137]);
}

// ===================================================================

class ListAuthorizationsRequest::_Internal {
 public:
};

ListAuthorizationsRequest::ListAuthorizationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  resource_ids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListAuthorizationsRequest)
}
ListAuthorizationsRequest::ListAuthorizationsRequest(const ListAuthorizationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      resource_ids_(from.resource_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListAuthorizationsRequest)
}

inline void ListAuthorizationsRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListAuthorizationsRequest::~ListAuthorizationsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListAuthorizationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListAuthorizationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void ListAuthorizationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListAuthorizationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListAuthorizationsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_ids_.Clear();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListAuthorizationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListAuthorizationsRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated string resource_ids = 2 [json_name = "resourceIds"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_resource_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListAuthorizationsRequest.resource_ids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListAuthorizationsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListAuthorizationsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListAuthorizationsRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // repeated string resource_ids = 2 [json_name = "resourceIds"];
  for (int i = 0, n = this->_internal_resource_ids_size(); i < n; i++) {
    const auto& s = this->_internal_resource_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListAuthorizationsRequest.resource_ids");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListAuthorizationsRequest)
  return target;
}

size_t ListAuthorizationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListAuthorizationsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string resource_ids = 2 [json_name = "resourceIds"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(resource_ids_.size());
  for (int i = 0, n = resource_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      resource_ids_.Get(i));
  }

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListAuthorizationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListAuthorizationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListAuthorizationsRequest::GetClassData() const { return &_class_data_; }

void ListAuthorizationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListAuthorizationsRequest *>(to)->MergeFrom(
      static_cast<const ListAuthorizationsRequest &>(from));
}


void ListAuthorizationsRequest::MergeFrom(const ListAuthorizationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListAuthorizationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  resource_ids_.MergeFrom(from.resource_ids_);
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListAuthorizationsRequest::CopyFrom(const ListAuthorizationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListAuthorizationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAuthorizationsRequest::IsInitialized() const {
  return true;
}

void ListAuthorizationsRequest::InternalSwap(ListAuthorizationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  resource_ids_.InternalSwap(&other->resource_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListAuthorizationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[138]);
}

// ===================================================================

class ListAuthorizationsResponse::_Internal {
 public:
};

ListAuthorizationsResponse::ListAuthorizationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  authorizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListAuthorizationsResponse)
}
ListAuthorizationsResponse::ListAuthorizationsResponse(const ListAuthorizationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      authorizations_(from.authorizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListAuthorizationsResponse)
}

inline void ListAuthorizationsResponse::SharedCtor() {
}

ListAuthorizationsResponse::~ListAuthorizationsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListAuthorizationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListAuthorizationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListAuthorizationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListAuthorizationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListAuthorizationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorizations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListAuthorizationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Authorization authorizations = 1 [json_name = "authorizations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_authorizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListAuthorizationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListAuthorizationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Authorization authorizations = 1 [json_name = "authorizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_authorizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_authorizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListAuthorizationsResponse)
  return target;
}

size_t ListAuthorizationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListAuthorizationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Authorization authorizations = 1 [json_name = "authorizations"];
  total_size += 1UL * this->_internal_authorizations_size();
  for (const auto& msg : this->authorizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListAuthorizationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListAuthorizationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListAuthorizationsResponse::GetClassData() const { return &_class_data_; }

void ListAuthorizationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListAuthorizationsResponse *>(to)->MergeFrom(
      static_cast<const ListAuthorizationsResponse &>(from));
}


void ListAuthorizationsResponse::MergeFrom(const ListAuthorizationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListAuthorizationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  authorizations_.MergeFrom(from.authorizations_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListAuthorizationsResponse::CopyFrom(const ListAuthorizationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListAuthorizationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAuthorizationsResponse::IsInitialized() const {
  return true;
}

void ListAuthorizationsResponse::InternalSwap(ListAuthorizationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  authorizations_.InternalSwap(&other->authorizations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListAuthorizationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[139]);
}

// ===================================================================

class CheckPermissionsRequest::_Internal {
 public:
};

CheckPermissionsRequest::CheckPermissionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  permissions_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CheckPermissionsRequest)
}
CheckPermissionsRequest::CheckPermissionsRequest(const CheckPermissionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      permissions_(from.permissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CheckPermissionsRequest)
}

inline void CheckPermissionsRequest::SharedCtor() {
}

CheckPermissionsRequest::~CheckPermissionsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CheckPermissionsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckPermissionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CheckPermissionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CheckPermissionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CheckPermissionsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permissions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckPermissionsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.AuthorizedPermissions permissions = 1 [json_name = "permissions"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_permissions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckPermissionsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CheckPermissionsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.AuthorizedPermissions permissions = 1 [json_name = "permissions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_permissions_size()); i < n; i++) {
    const auto& repfield = this->_internal_permissions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CheckPermissionsRequest)
  return target;
}

size_t CheckPermissionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CheckPermissionsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.AuthorizedPermissions permissions = 1 [json_name = "permissions"];
  total_size += 1UL * this->_internal_permissions_size();
  for (const auto& msg : this->permissions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckPermissionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CheckPermissionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckPermissionsRequest::GetClassData() const { return &_class_data_; }

void CheckPermissionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CheckPermissionsRequest *>(to)->MergeFrom(
      static_cast<const CheckPermissionsRequest &>(from));
}


void CheckPermissionsRequest::MergeFrom(const CheckPermissionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CheckPermissionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  permissions_.MergeFrom(from.permissions_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckPermissionsRequest::CopyFrom(const CheckPermissionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CheckPermissionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckPermissionsRequest::IsInitialized() const {
  return true;
}

void CheckPermissionsRequest::InternalSwap(CheckPermissionsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  permissions_.InternalSwap(&other->permissions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckPermissionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[140]);
}

// ===================================================================

class AuthorizedPermissions::_Internal {
 public:
};

AuthorizedPermissions::AuthorizedPermissions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  permissions_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.AuthorizedPermissions)
}
AuthorizedPermissions::AuthorizedPermissions(const AuthorizedPermissions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      permissions_(from.permissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resource_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_type().empty()) {
    resource_type_.Set(from._internal_resource_type(), 
      GetArenaForAllocation());
  }
  resource_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_id().empty()) {
    resource_id_.Set(from._internal_resource_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.AuthorizedPermissions)
}

inline void AuthorizedPermissions::SharedCtor() {
resource_type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resource_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthorizedPermissions::~AuthorizedPermissions() {
  // @@protoc_insertion_point(destructor:viam.app.v1.AuthorizedPermissions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthorizedPermissions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  resource_type_.Destroy();
  resource_id_.Destroy();
}

void AuthorizedPermissions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AuthorizedPermissions::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.AuthorizedPermissions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permissions_.Clear();
  resource_type_.ClearToEmpty();
  resource_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthorizedPermissions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string resource_type = 1 [json_name = "resourceType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_resource_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.AuthorizedPermissions.resource_type"));
        } else
          goto handle_unusual;
        continue;
      // string resource_id = 2 [json_name = "resourceId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_resource_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.AuthorizedPermissions.resource_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated string permissions = 3 [json_name = "permissions"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_permissions();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.AuthorizedPermissions.permissions"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthorizedPermissions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.AuthorizedPermissions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_type = 1 [json_name = "resourceType"];
  if (!this->_internal_resource_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_type().data(), static_cast<int>(this->_internal_resource_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.AuthorizedPermissions.resource_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_resource_type(), target);
  }

  // string resource_id = 2 [json_name = "resourceId"];
  if (!this->_internal_resource_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_id().data(), static_cast<int>(this->_internal_resource_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.AuthorizedPermissions.resource_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_resource_id(), target);
  }

  // repeated string permissions = 3 [json_name = "permissions"];
  for (int i = 0, n = this->_internal_permissions_size(); i < n; i++) {
    const auto& s = this->_internal_permissions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.AuthorizedPermissions.permissions");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.AuthorizedPermissions)
  return target;
}

size_t AuthorizedPermissions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.AuthorizedPermissions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string permissions = 3 [json_name = "permissions"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(permissions_.size());
  for (int i = 0, n = permissions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      permissions_.Get(i));
  }

  // string resource_type = 1 [json_name = "resourceType"];
  if (!this->_internal_resource_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_type());
  }

  // string resource_id = 2 [json_name = "resourceId"];
  if (!this->_internal_resource_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthorizedPermissions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AuthorizedPermissions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthorizedPermissions::GetClassData() const { return &_class_data_; }

void AuthorizedPermissions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AuthorizedPermissions *>(to)->MergeFrom(
      static_cast<const AuthorizedPermissions &>(from));
}


void AuthorizedPermissions::MergeFrom(const AuthorizedPermissions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.AuthorizedPermissions)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  permissions_.MergeFrom(from.permissions_);
  if (!from._internal_resource_type().empty()) {
    _internal_set_resource_type(from._internal_resource_type());
  }
  if (!from._internal_resource_id().empty()) {
    _internal_set_resource_id(from._internal_resource_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthorizedPermissions::CopyFrom(const AuthorizedPermissions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.AuthorizedPermissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthorizedPermissions::IsInitialized() const {
  return true;
}

void AuthorizedPermissions::InternalSwap(AuthorizedPermissions* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  permissions_.InternalSwap(&other->permissions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &resource_type_, lhs_arena,
      &other->resource_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &resource_id_, lhs_arena,
      &other->resource_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthorizedPermissions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[141]);
}

// ===================================================================

class CheckPermissionsResponse::_Internal {
 public:
};

CheckPermissionsResponse::CheckPermissionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  authorized_permissions_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CheckPermissionsResponse)
}
CheckPermissionsResponse::CheckPermissionsResponse(const CheckPermissionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      authorized_permissions_(from.authorized_permissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CheckPermissionsResponse)
}

inline void CheckPermissionsResponse::SharedCtor() {
}

CheckPermissionsResponse::~CheckPermissionsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CheckPermissionsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckPermissionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CheckPermissionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CheckPermissionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CheckPermissionsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorized_permissions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckPermissionsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.AuthorizedPermissions authorized_permissions = 1 [json_name = "authorizedPermissions"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_authorized_permissions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckPermissionsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CheckPermissionsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.AuthorizedPermissions authorized_permissions = 1 [json_name = "authorizedPermissions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_authorized_permissions_size()); i < n; i++) {
    const auto& repfield = this->_internal_authorized_permissions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CheckPermissionsResponse)
  return target;
}

size_t CheckPermissionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CheckPermissionsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.AuthorizedPermissions authorized_permissions = 1 [json_name = "authorizedPermissions"];
  total_size += 1UL * this->_internal_authorized_permissions_size();
  for (const auto& msg : this->authorized_permissions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckPermissionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CheckPermissionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckPermissionsResponse::GetClassData() const { return &_class_data_; }

void CheckPermissionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CheckPermissionsResponse *>(to)->MergeFrom(
      static_cast<const CheckPermissionsResponse &>(from));
}


void CheckPermissionsResponse::MergeFrom(const CheckPermissionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CheckPermissionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  authorized_permissions_.MergeFrom(from.authorized_permissions_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckPermissionsResponse::CopyFrom(const CheckPermissionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CheckPermissionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckPermissionsResponse::IsInitialized() const {
  return true;
}

void CheckPermissionsResponse::InternalSwap(CheckPermissionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  authorized_permissions_.InternalSwap(&other->authorized_permissions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckPermissionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[142]);
}

// ===================================================================

class ModuleVersion::_Internal {
 public:
  using HasBits = decltype(std::declval<ModuleVersion>()._has_bits_);
  static void set_has_first_run(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ModuleVersion::ModuleVersion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  files_(arena),
  models_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ModuleVersion)
}
ModuleVersion::ModuleVersion(const ModuleVersion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      files_(from.files_),
      models_(from.models_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  entrypoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    entrypoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entrypoint().empty()) {
    entrypoint_.Set(from._internal_entrypoint(), 
      GetArenaForAllocation());
  }
  first_run_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    first_run_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_first_run()) {
    first_run_.Set(from._internal_first_run(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ModuleVersion)
}

inline void ModuleVersion::SharedCtor() {
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
entrypoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  entrypoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
first_run_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  first_run_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModuleVersion::~ModuleVersion() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ModuleVersion)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleVersion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  version_.Destroy();
  entrypoint_.Destroy();
  first_run_.Destroy();
}

void ModuleVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ModuleVersion)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  models_.Clear();
  version_.ClearToEmpty();
  entrypoint_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    first_run_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleVersion::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string version = 1 [json_name = "version"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ModuleVersion.version"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Uploads files = 2 [json_name = "files"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Model models = 3 [json_name = "models"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string entrypoint = 4 [json_name = "entrypoint"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_entrypoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ModuleVersion.entrypoint"));
        } else
          goto handle_unusual;
        continue;
      // optional string first_run = 5 [json_name = "firstRun"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_first_run();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ModuleVersion.first_run"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleVersion::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ModuleVersion)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ModuleVersion.version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_version(), target);
  }

  // repeated .viam.app.v1.Uploads files = 2 [json_name = "files"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_files_size()); i < n; i++) {
    const auto& repfield = this->_internal_files(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.Model models = 3 [json_name = "models"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_models_size()); i < n; i++) {
    const auto& repfield = this->_internal_models(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string entrypoint = 4 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entrypoint().data(), static_cast<int>(this->_internal_entrypoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ModuleVersion.entrypoint");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_entrypoint(), target);
  }

  // optional string first_run = 5 [json_name = "firstRun"];
  if (_internal_has_first_run()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_first_run().data(), static_cast<int>(this->_internal_first_run().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ModuleVersion.first_run");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_first_run(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ModuleVersion)
  return target;
}

size_t ModuleVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ModuleVersion)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Uploads files = 2 [json_name = "files"];
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .viam.app.v1.Model models = 3 [json_name = "models"];
  total_size += 1UL * this->_internal_models_size();
  for (const auto& msg : this->models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string version = 1 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string entrypoint = 4 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entrypoint());
  }

  // optional string first_run = 5 [json_name = "firstRun"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_first_run());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleVersion::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleVersion::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleVersion::GetClassData() const { return &_class_data_; }

void ModuleVersion::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleVersion *>(to)->MergeFrom(
      static_cast<const ModuleVersion &>(from));
}


void ModuleVersion::MergeFrom(const ModuleVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ModuleVersion)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  models_.MergeFrom(from.models_);
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  if (!from._internal_entrypoint().empty()) {
    _internal_set_entrypoint(from._internal_entrypoint());
  }
  if (from._internal_has_first_run()) {
    _internal_set_first_run(from._internal_first_run());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleVersion::CopyFrom(const ModuleVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ModuleVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleVersion::IsInitialized() const {
  return true;
}

void ModuleVersion::InternalSwap(ModuleVersion* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  files_.InternalSwap(&other->files_);
  models_.InternalSwap(&other->models_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &entrypoint_, lhs_arena,
      &other->entrypoint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &first_run_, lhs_arena,
      &other->first_run_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleVersion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[143]);
}

// ===================================================================

class ModuleMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<ModuleMetadata>()._has_bits_);
  static void set_has_first_run(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ModuleMetadata::ModuleMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  models_(arena),
  versions_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ModuleMetadata)
}
ModuleMetadata::ModuleMetadata(const ModuleMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      models_(from.models_),
      versions_(from.versions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  entrypoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    entrypoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entrypoint().empty()) {
    entrypoint_.Set(from._internal_entrypoint(), 
      GetArenaForAllocation());
  }
  first_run_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    first_run_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_first_run()) {
    first_run_.Set(from._internal_first_run(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ModuleMetadata)
}

inline void ModuleMetadata::SharedCtor() {
entrypoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  entrypoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
first_run_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  first_run_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModuleMetadata::~ModuleMetadata() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ModuleMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  entrypoint_.Destroy();
  first_run_.Destroy();
}

void ModuleMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ModuleMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  models_.Clear();
  versions_.Clear();
  entrypoint_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    first_run_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Model models = 1 [json_name = "models"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.ModuleVersion versions = 2 [json_name = "versions"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_versions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string entrypoint = 3 [json_name = "entrypoint"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_entrypoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ModuleMetadata.entrypoint"));
        } else
          goto handle_unusual;
        continue;
      // optional string first_run = 4 [json_name = "firstRun"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_first_run();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ModuleMetadata.first_run"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ModuleMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Model models = 1 [json_name = "models"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_models_size()); i < n; i++) {
    const auto& repfield = this->_internal_models(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.ModuleVersion versions = 2 [json_name = "versions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_versions_size()); i < n; i++) {
    const auto& repfield = this->_internal_versions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string entrypoint = 3 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entrypoint().data(), static_cast<int>(this->_internal_entrypoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ModuleMetadata.entrypoint");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_entrypoint(), target);
  }

  // optional string first_run = 4 [json_name = "firstRun"];
  if (_internal_has_first_run()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_first_run().data(), static_cast<int>(this->_internal_first_run().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ModuleMetadata.first_run");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_first_run(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ModuleMetadata)
  return target;
}

size_t ModuleMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ModuleMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Model models = 1 [json_name = "models"];
  total_size += 1UL * this->_internal_models_size();
  for (const auto& msg : this->models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .viam.app.v1.ModuleVersion versions = 2 [json_name = "versions"];
  total_size += 1UL * this->_internal_versions_size();
  for (const auto& msg : this->versions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string entrypoint = 3 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entrypoint());
  }

  // optional string first_run = 4 [json_name = "firstRun"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_first_run());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleMetadata::GetClassData() const { return &_class_data_; }

void ModuleMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleMetadata *>(to)->MergeFrom(
      static_cast<const ModuleMetadata &>(from));
}


void ModuleMetadata::MergeFrom(const ModuleMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ModuleMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  models_.MergeFrom(from.models_);
  versions_.MergeFrom(from.versions_);
  if (!from._internal_entrypoint().empty()) {
    _internal_set_entrypoint(from._internal_entrypoint());
  }
  if (from._internal_has_first_run()) {
    _internal_set_first_run(from._internal_first_run());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleMetadata::CopyFrom(const ModuleMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ModuleMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleMetadata::IsInitialized() const {
  return true;
}

void ModuleMetadata::InternalSwap(ModuleMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  models_.InternalSwap(&other->models_);
  versions_.InternalSwap(&other->versions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &entrypoint_, lhs_arena,
      &other->entrypoint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &first_run_, lhs_arena,
      &other->first_run_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[144]);
}

// ===================================================================

class MLModelMetadata::_Internal {
 public:
};

MLModelMetadata::MLModelMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  versions_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.MLModelMetadata)
}
MLModelMetadata::MLModelMetadata(const MLModelMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      versions_(from.versions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&model_type_, &from.model_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&model_framework_) -
    reinterpret_cast<char*>(&model_type_)) + sizeof(model_framework_));
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.MLModelMetadata)
}

inline void MLModelMetadata::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&model_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&model_framework_) -
    reinterpret_cast<char*>(&model_type_)) + sizeof(model_framework_));
}

MLModelMetadata::~MLModelMetadata() {
  // @@protoc_insertion_point(destructor:viam.app.v1.MLModelMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MLModelMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MLModelMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MLModelMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.MLModelMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  versions_.Clear();
  ::memset(&model_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&model_framework_) -
      reinterpret_cast<char*>(&model_type_)) + sizeof(model_framework_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MLModelMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string versions = 1 [json_name = "versions"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_versions();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.MLModelMetadata.versions"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.mltraining.v1.ModelType model_type = 2 [json_name = "modelType"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_model_type(static_cast<::viam::app::mltraining::v1::ModelType>(val));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.mltraining.v1.ModelFramework model_framework = 3 [json_name = "modelFramework"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_model_framework(static_cast<::viam::app::mltraining::v1::ModelFramework>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MLModelMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.MLModelMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string versions = 1 [json_name = "versions"];
  for (int i = 0, n = this->_internal_versions_size(); i < n; i++) {
    const auto& s = this->_internal_versions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.MLModelMetadata.versions");
    target = stream->WriteString(1, s, target);
  }

  // .viam.app.mltraining.v1.ModelType model_type = 2 [json_name = "modelType"];
  if (this->_internal_model_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_model_type(), target);
  }

  // .viam.app.mltraining.v1.ModelFramework model_framework = 3 [json_name = "modelFramework"];
  if (this->_internal_model_framework() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_model_framework(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.MLModelMetadata)
  return target;
}

size_t MLModelMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.MLModelMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string versions = 1 [json_name = "versions"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(versions_.size());
  for (int i = 0, n = versions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      versions_.Get(i));
  }

  // .viam.app.mltraining.v1.ModelType model_type = 2 [json_name = "modelType"];
  if (this->_internal_model_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_model_type());
  }

  // .viam.app.mltraining.v1.ModelFramework model_framework = 3 [json_name = "modelFramework"];
  if (this->_internal_model_framework() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_model_framework());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MLModelMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MLModelMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MLModelMetadata::GetClassData() const { return &_class_data_; }

void MLModelMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MLModelMetadata *>(to)->MergeFrom(
      static_cast<const MLModelMetadata &>(from));
}


void MLModelMetadata::MergeFrom(const MLModelMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.MLModelMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  versions_.MergeFrom(from.versions_);
  if (from._internal_model_type() != 0) {
    _internal_set_model_type(from._internal_model_type());
  }
  if (from._internal_model_framework() != 0) {
    _internal_set_model_framework(from._internal_model_framework());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MLModelMetadata::CopyFrom(const MLModelMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.MLModelMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MLModelMetadata::IsInitialized() const {
  return true;
}

void MLModelMetadata::InternalSwap(MLModelMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  versions_.InternalSwap(&other->versions_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MLModelMetadata, model_framework_)
      + sizeof(MLModelMetadata::model_framework_)
      - PROTOBUF_FIELD_OFFSET(MLModelMetadata, model_type_)>(
          reinterpret_cast<char*>(&model_type_),
          reinterpret_cast<char*>(&other->model_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MLModelMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[145]);
}

// ===================================================================

class MLTrainingVersion::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const MLTrainingVersion* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
MLTrainingVersion::_Internal::created_on(const MLTrainingVersion* msg) {
  return *msg->created_on_;
}
void MLTrainingVersion::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
MLTrainingVersion::MLTrainingVersion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.MLTrainingVersion)
}
MLTrainingVersion::MLTrainingVersion(const MLTrainingVersion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.MLTrainingVersion)
}

inline void MLTrainingVersion::SharedCtor() {
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
created_on_ = nullptr;
}

MLTrainingVersion::~MLTrainingVersion() {
  // @@protoc_insertion_point(destructor:viam.app.v1.MLTrainingVersion)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MLTrainingVersion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  version_.Destroy();
  if (this != internal_default_instance()) delete created_on_;
}

void MLTrainingVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MLTrainingVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.MLTrainingVersion)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MLTrainingVersion::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string version = 1 [json_name = "version"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.MLTrainingVersion.version"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 2 [json_name = "createdOn"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MLTrainingVersion::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.MLTrainingVersion)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.MLTrainingVersion.version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_version(), target);
  }

  // .google.protobuf.Timestamp created_on = 2 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.MLTrainingVersion)
  return target;
}

size_t MLTrainingVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.MLTrainingVersion)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 1 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // .google.protobuf.Timestamp created_on = 2 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MLTrainingVersion::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MLTrainingVersion::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MLTrainingVersion::GetClassData() const { return &_class_data_; }

void MLTrainingVersion::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MLTrainingVersion *>(to)->MergeFrom(
      static_cast<const MLTrainingVersion &>(from));
}


void MLTrainingVersion::MergeFrom(const MLTrainingVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.MLTrainingVersion)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MLTrainingVersion::CopyFrom(const MLTrainingVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.MLTrainingVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MLTrainingVersion::IsInitialized() const {
  return true;
}

void MLTrainingVersion::InternalSwap(MLTrainingVersion* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
  swap(created_on_, other->created_on_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MLTrainingVersion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[146]);
}

// ===================================================================

class MLTrainingMetadata::_Internal {
 public:
};

MLTrainingMetadata::MLTrainingMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  versions_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.MLTrainingMetadata)
}
MLTrainingMetadata::MLTrainingMetadata(const MLTrainingMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      versions_(from.versions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&model_type_, &from.model_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&draft_) -
    reinterpret_cast<char*>(&model_type_)) + sizeof(draft_));
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.MLTrainingMetadata)
}

inline void MLTrainingMetadata::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&model_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&draft_) -
    reinterpret_cast<char*>(&model_type_)) + sizeof(draft_));
}

MLTrainingMetadata::~MLTrainingMetadata() {
  // @@protoc_insertion_point(destructor:viam.app.v1.MLTrainingMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MLTrainingMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MLTrainingMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MLTrainingMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.MLTrainingMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  versions_.Clear();
  ::memset(&model_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&draft_) -
      reinterpret_cast<char*>(&model_type_)) + sizeof(draft_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MLTrainingMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.mltraining.v1.ModelType model_type = 2 [json_name = "modelType"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_model_type(static_cast<::viam::app::mltraining::v1::ModelType>(val));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.mltraining.v1.ModelFramework model_framework = 3 [json_name = "modelFramework"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_model_framework(static_cast<::viam::app::mltraining::v1::ModelFramework>(val));
        } else
          goto handle_unusual;
        continue;
      // bool draft = 4 [json_name = "draft"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          draft_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.MLTrainingVersion versions = 5 [json_name = "versions"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_versions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MLTrainingMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.MLTrainingMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.mltraining.v1.ModelType model_type = 2 [json_name = "modelType"];
  if (this->_internal_model_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_model_type(), target);
  }

  // .viam.app.mltraining.v1.ModelFramework model_framework = 3 [json_name = "modelFramework"];
  if (this->_internal_model_framework() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_model_framework(), target);
  }

  // bool draft = 4 [json_name = "draft"];
  if (this->_internal_draft() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_draft(), target);
  }

  // repeated .viam.app.v1.MLTrainingVersion versions = 5 [json_name = "versions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_versions_size()); i < n; i++) {
    const auto& repfield = this->_internal_versions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.MLTrainingMetadata)
  return target;
}

size_t MLTrainingMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.MLTrainingMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.MLTrainingVersion versions = 5 [json_name = "versions"];
  total_size += 1UL * this->_internal_versions_size();
  for (const auto& msg : this->versions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .viam.app.mltraining.v1.ModelType model_type = 2 [json_name = "modelType"];
  if (this->_internal_model_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_model_type());
  }

  // .viam.app.mltraining.v1.ModelFramework model_framework = 3 [json_name = "modelFramework"];
  if (this->_internal_model_framework() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_model_framework());
  }

  // bool draft = 4 [json_name = "draft"];
  if (this->_internal_draft() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MLTrainingMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MLTrainingMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MLTrainingMetadata::GetClassData() const { return &_class_data_; }

void MLTrainingMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MLTrainingMetadata *>(to)->MergeFrom(
      static_cast<const MLTrainingMetadata &>(from));
}


void MLTrainingMetadata::MergeFrom(const MLTrainingMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.MLTrainingMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  versions_.MergeFrom(from.versions_);
  if (from._internal_model_type() != 0) {
    _internal_set_model_type(from._internal_model_type());
  }
  if (from._internal_model_framework() != 0) {
    _internal_set_model_framework(from._internal_model_framework());
  }
  if (from._internal_draft() != 0) {
    _internal_set_draft(from._internal_draft());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MLTrainingMetadata::CopyFrom(const MLTrainingMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.MLTrainingMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MLTrainingMetadata::IsInitialized() const {
  return true;
}

void MLTrainingMetadata::InternalSwap(MLTrainingMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  versions_.InternalSwap(&other->versions_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MLTrainingMetadata, draft_)
      + sizeof(MLTrainingMetadata::draft_)
      - PROTOBUF_FIELD_OFFSET(MLTrainingMetadata, model_type_)>(
          reinterpret_cast<char*>(&model_type_),
          reinterpret_cast<char*>(&other->model_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MLTrainingMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[147]);
}

// ===================================================================

class RegistryItem::_Internal {
 public:
  static const ::viam::app::v1::ModuleMetadata& module_metadata(const RegistryItem* msg);
  static const ::viam::app::v1::MLModelMetadata& ml_model_metadata(const RegistryItem* msg);
  static const ::viam::app::v1::MLTrainingMetadata& ml_training_metadata(const RegistryItem* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const RegistryItem* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const RegistryItem* msg);
};

const ::viam::app::v1::ModuleMetadata&
RegistryItem::_Internal::module_metadata(const RegistryItem* msg) {
  return *msg->metadata_.module_metadata_;
}
const ::viam::app::v1::MLModelMetadata&
RegistryItem::_Internal::ml_model_metadata(const RegistryItem* msg) {
  return *msg->metadata_.ml_model_metadata_;
}
const ::viam::app::v1::MLTrainingMetadata&
RegistryItem::_Internal::ml_training_metadata(const RegistryItem* msg) {
  return *msg->metadata_.ml_training_metadata_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RegistryItem::_Internal::created_at(const RegistryItem* msg) {
  return *msg->created_at_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RegistryItem::_Internal::updated_at(const RegistryItem* msg) {
  return *msg->updated_at_;
}
void RegistryItem::set_allocated_module_metadata(::viam::app::v1::ModuleMetadata* module_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_metadata();
  if (module_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(module_metadata);
    if (message_arena != submessage_arena) {
      module_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, module_metadata, submessage_arena);
    }
    set_has_module_metadata();
    metadata_.module_metadata_ = module_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.RegistryItem.module_metadata)
}
void RegistryItem::set_allocated_ml_model_metadata(::viam::app::v1::MLModelMetadata* ml_model_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_metadata();
  if (ml_model_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ml_model_metadata);
    if (message_arena != submessage_arena) {
      ml_model_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ml_model_metadata, submessage_arena);
    }
    set_has_ml_model_metadata();
    metadata_.ml_model_metadata_ = ml_model_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.RegistryItem.ml_model_metadata)
}
void RegistryItem::set_allocated_ml_training_metadata(::viam::app::v1::MLTrainingMetadata* ml_training_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_metadata();
  if (ml_training_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ml_training_metadata);
    if (message_arena != submessage_arena) {
      ml_training_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ml_training_metadata, submessage_arena);
    }
    set_has_ml_training_metadata();
    metadata_.ml_training_metadata_ = ml_training_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.RegistryItem.ml_training_metadata)
}
void RegistryItem::clear_created_at() {
  if (GetArenaForAllocation() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void RegistryItem::clear_updated_at() {
  if (GetArenaForAllocation() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
RegistryItem::RegistryItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RegistryItem)
}
RegistryItem::RegistryItem(const RegistryItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  item_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    item_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    item_id_.Set(from._internal_item_id(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  public_namespace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    public_namespace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_public_namespace().empty()) {
    public_namespace_.Set(from._internal_public_namespace(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_external_organization_usage_) -
    reinterpret_cast<char*>(&type_)) + sizeof(total_external_organization_usage_));
  clear_has_metadata();
  switch (from.metadata_case()) {
    case kModuleMetadata: {
      _internal_mutable_module_metadata()->::viam::app::v1::ModuleMetadata::MergeFrom(from._internal_module_metadata());
      break;
    }
    case kMlModelMetadata: {
      _internal_mutable_ml_model_metadata()->::viam::app::v1::MLModelMetadata::MergeFrom(from._internal_ml_model_metadata());
      break;
    }
    case kMlTrainingMetadata: {
      _internal_mutable_ml_training_metadata()->::viam::app::v1::MLTrainingMetadata::MergeFrom(from._internal_ml_training_metadata());
      break;
    }
    case METADATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RegistryItem)
}

inline void RegistryItem::SharedCtor() {
item_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  item_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
public_namespace_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  public_namespace_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&created_at_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&total_external_organization_usage_) -
    reinterpret_cast<char*>(&created_at_)) + sizeof(total_external_organization_usage_));
clear_has_metadata();
}

RegistryItem::~RegistryItem() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RegistryItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RegistryItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  item_id_.Destroy();
  organization_id_.Destroy();
  public_namespace_.Destroy();
  name_.Destroy();
  url_.Destroy();
  description_.Destroy();
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
  if (has_metadata()) {
    clear_metadata();
  }
}

void RegistryItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RegistryItem::clear_metadata() {
// @@protoc_insertion_point(one_of_clear_start:viam.app.v1.RegistryItem)
  switch (metadata_case()) {
    case kModuleMetadata: {
      if (GetArenaForAllocation() == nullptr) {
        delete metadata_.module_metadata_;
      }
      break;
    }
    case kMlModelMetadata: {
      if (GetArenaForAllocation() == nullptr) {
        delete metadata_.ml_model_metadata_;
      }
      break;
    }
    case kMlTrainingMetadata: {
      if (GetArenaForAllocation() == nullptr) {
        delete metadata_.ml_training_metadata_;
      }
      break;
    }
    case METADATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = METADATA_NOT_SET;
}


void RegistryItem::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RegistryItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  public_namespace_.ClearToEmpty();
  name_.ClearToEmpty();
  url_.ClearToEmpty();
  description_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArenaForAllocation() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_external_organization_usage_) -
      reinterpret_cast<char*>(&type_)) + sizeof(total_external_organization_usage_));
  clear_metadata();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegistryItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string item_id = 1 [json_name = "itemId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_item_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RegistryItem.item_id"));
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 2 [json_name = "organizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RegistryItem.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string public_namespace = 3 [json_name = "publicNamespace"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_public_namespace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RegistryItem.public_namespace"));
        } else
          goto handle_unusual;
        continue;
      // string name = 4 [json_name = "name"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RegistryItem.name"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.packages.v1.PackageType type = 5 [json_name = "type"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::viam::app::packages::v1::PackageType>(val));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.Visibility visibility = 6 [json_name = "visibility"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_visibility(static_cast<::viam::app::v1::Visibility>(val));
        } else
          goto handle_unusual;
        continue;
      // string url = 7 [json_name = "url"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RegistryItem.url"));
        } else
          goto handle_unusual;
        continue;
      // string description = 8 [json_name = "description"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RegistryItem.description"));
        } else
          goto handle_unusual;
        continue;
      // int64 total_robot_usage = 9 [json_name = "totalRobotUsage"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          total_robot_usage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 total_organization_usage = 10 [json_name = "totalOrganizationUsage"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          total_organization_usage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.ModuleMetadata module_metadata = 11 [json_name = "moduleMetadata"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_module_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.MLModelMetadata ml_model_metadata = 12 [json_name = "mlModelMetadata"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_ml_model_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 total_external_robot_usage = 13 [json_name = "totalExternalRobotUsage"];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          total_external_robot_usage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 total_external_organization_usage = 14 [json_name = "totalExternalOrganizationUsage"];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          total_external_organization_usage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 15 [json_name = "createdAt"];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 16 [json_name = "updatedAt"];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.MLTrainingMetadata ml_training_metadata = 18 [json_name = "mlTrainingMetadata"];
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_ml_training_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RegistryItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RegistryItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RegistryItem.item_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_item_id(), target);
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RegistryItem.organization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_organization_id(), target);
  }

  // string public_namespace = 3 [json_name = "publicNamespace"];
  if (!this->_internal_public_namespace().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_namespace().data(), static_cast<int>(this->_internal_public_namespace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RegistryItem.public_namespace");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_public_namespace(), target);
  }

  // string name = 4 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RegistryItem.name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  // .viam.app.packages.v1.PackageType type = 5 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_type(), target);
  }

  // .viam.app.v1.Visibility visibility = 6 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      6, this->_internal_visibility(), target);
  }

  // string url = 7 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RegistryItem.url");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_url(), target);
  }

  // string description = 8 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RegistryItem.description");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_description(), target);
  }

  // int64 total_robot_usage = 9 [json_name = "totalRobotUsage"];
  if (this->_internal_total_robot_usage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(9, this->_internal_total_robot_usage(), target);
  }

  // int64 total_organization_usage = 10 [json_name = "totalOrganizationUsage"];
  if (this->_internal_total_organization_usage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(10, this->_internal_total_organization_usage(), target);
  }

  // .viam.app.v1.ModuleMetadata module_metadata = 11 [json_name = "moduleMetadata"];
  if (_internal_has_module_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::module_metadata(this),
        _Internal::module_metadata(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.MLModelMetadata ml_model_metadata = 12 [json_name = "mlModelMetadata"];
  if (_internal_has_ml_model_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::ml_model_metadata(this),
        _Internal::ml_model_metadata(this).GetCachedSize(), target, stream);
  }

  // int64 total_external_robot_usage = 13 [json_name = "totalExternalRobotUsage"];
  if (this->_internal_total_external_robot_usage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(13, this->_internal_total_external_robot_usage(), target);
  }

  // int64 total_external_organization_usage = 14 [json_name = "totalExternalOrganizationUsage"];
  if (this->_internal_total_external_organization_usage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(14, this->_internal_total_external_organization_usage(), target);
  }

  // .google.protobuf.Timestamp created_at = 15 [json_name = "createdAt"];
  if (this->_internal_has_created_at()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::created_at(this),
        _Internal::created_at(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 16 [json_name = "updatedAt"];
  if (this->_internal_has_updated_at()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::updated_at(this),
        _Internal::updated_at(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.MLTrainingMetadata ml_training_metadata = 18 [json_name = "mlTrainingMetadata"];
  if (_internal_has_ml_training_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(18, _Internal::ml_training_metadata(this),
        _Internal::ml_training_metadata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RegistryItem)
  return target;
}

size_t RegistryItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RegistryItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string public_namespace = 3 [json_name = "publicNamespace"];
  if (!this->_internal_public_namespace().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_namespace());
  }

  // string name = 4 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string url = 7 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string description = 8 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .google.protobuf.Timestamp created_at = 15 [json_name = "createdAt"];
  if (this->_internal_has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 16 [json_name = "updatedAt"];
  if (this->_internal_has_updated_at()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // .viam.app.packages.v1.PackageType type = 5 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .viam.app.v1.Visibility visibility = 6 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_visibility());
  }

  // int64 total_robot_usage = 9 [json_name = "totalRobotUsage"];
  if (this->_internal_total_robot_usage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_total_robot_usage());
  }

  // int64 total_organization_usage = 10 [json_name = "totalOrganizationUsage"];
  if (this->_internal_total_organization_usage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_total_organization_usage());
  }

  // int64 total_external_robot_usage = 13 [json_name = "totalExternalRobotUsage"];
  if (this->_internal_total_external_robot_usage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_total_external_robot_usage());
  }

  // int64 total_external_organization_usage = 14 [json_name = "totalExternalOrganizationUsage"];
  if (this->_internal_total_external_organization_usage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_total_external_organization_usage());
  }

  switch (metadata_case()) {
    // .viam.app.v1.ModuleMetadata module_metadata = 11 [json_name = "moduleMetadata"];
    case kModuleMetadata: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *metadata_.module_metadata_);
      break;
    }
    // .viam.app.v1.MLModelMetadata ml_model_metadata = 12 [json_name = "mlModelMetadata"];
    case kMlModelMetadata: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *metadata_.ml_model_metadata_);
      break;
    }
    // .viam.app.v1.MLTrainingMetadata ml_training_metadata = 18 [json_name = "mlTrainingMetadata"];
    case kMlTrainingMetadata: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *metadata_.ml_training_metadata_);
      break;
    }
    case METADATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegistryItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RegistryItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegistryItem::GetClassData() const { return &_class_data_; }

void RegistryItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RegistryItem *>(to)->MergeFrom(
      static_cast<const RegistryItem &>(from));
}


void RegistryItem::MergeFrom(const RegistryItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RegistryItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_item_id().empty()) {
    _internal_set_item_id(from._internal_item_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_public_namespace().empty()) {
    _internal_set_public_namespace(from._internal_public_namespace());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (from._internal_has_created_at()) {
    _internal_mutable_created_at()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from._internal_has_updated_at()) {
    _internal_mutable_updated_at()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_visibility() != 0) {
    _internal_set_visibility(from._internal_visibility());
  }
  if (from._internal_total_robot_usage() != 0) {
    _internal_set_total_robot_usage(from._internal_total_robot_usage());
  }
  if (from._internal_total_organization_usage() != 0) {
    _internal_set_total_organization_usage(from._internal_total_organization_usage());
  }
  if (from._internal_total_external_robot_usage() != 0) {
    _internal_set_total_external_robot_usage(from._internal_total_external_robot_usage());
  }
  if (from._internal_total_external_organization_usage() != 0) {
    _internal_set_total_external_organization_usage(from._internal_total_external_organization_usage());
  }
  switch (from.metadata_case()) {
    case kModuleMetadata: {
      _internal_mutable_module_metadata()->::viam::app::v1::ModuleMetadata::MergeFrom(from._internal_module_metadata());
      break;
    }
    case kMlModelMetadata: {
      _internal_mutable_ml_model_metadata()->::viam::app::v1::MLModelMetadata::MergeFrom(from._internal_ml_model_metadata());
      break;
    }
    case kMlTrainingMetadata: {
      _internal_mutable_ml_training_metadata()->::viam::app::v1::MLTrainingMetadata::MergeFrom(from._internal_ml_training_metadata());
      break;
    }
    case METADATA_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RegistryItem::CopyFrom(const RegistryItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RegistryItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegistryItem::IsInitialized() const {
  return true;
}

void RegistryItem::InternalSwap(RegistryItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &item_id_, lhs_arena,
      &other->item_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &public_namespace_, lhs_arena,
      &other->public_namespace_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegistryItem, total_external_organization_usage_)
      + sizeof(RegistryItem::total_external_organization_usage_)
      - PROTOBUF_FIELD_OFFSET(RegistryItem, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
  swap(metadata_, other->metadata_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegistryItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[148]);
}

// ===================================================================

class GetRegistryItemRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetRegistryItemRequest>()._has_bits_);
  static void set_has_include_markdown_documentation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

GetRegistryItemRequest::GetRegistryItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRegistryItemRequest)
}
GetRegistryItemRequest::GetRegistryItemRequest(const GetRegistryItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  item_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    item_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    item_id_.Set(from._internal_item_id(), 
      GetArenaForAllocation());
  }
  include_markdown_documentation_ = from.include_markdown_documentation_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRegistryItemRequest)
}

inline void GetRegistryItemRequest::SharedCtor() {
item_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  item_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
include_markdown_documentation_ = false;
}

GetRegistryItemRequest::~GetRegistryItemRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRegistryItemRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRegistryItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  item_id_.Destroy();
}

void GetRegistryItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRegistryItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRegistryItemRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_.ClearToEmpty();
  include_markdown_documentation_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRegistryItemRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string item_id = 1 [json_name = "itemId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_item_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRegistryItemRequest.item_id"));
        } else
          goto handle_unusual;
        continue;
      // optional bool include_markdown_documentation = 2 [json_name = "includeMarkdownDocumentation"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_include_markdown_documentation(&has_bits);
          include_markdown_documentation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRegistryItemRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRegistryItemRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRegistryItemRequest.item_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_item_id(), target);
  }

  // optional bool include_markdown_documentation = 2 [json_name = "includeMarkdownDocumentation"];
  if (_internal_has_include_markdown_documentation()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_include_markdown_documentation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRegistryItemRequest)
  return target;
}

size_t GetRegistryItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRegistryItemRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  // optional bool include_markdown_documentation = 2 [json_name = "includeMarkdownDocumentation"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRegistryItemRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRegistryItemRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRegistryItemRequest::GetClassData() const { return &_class_data_; }

void GetRegistryItemRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRegistryItemRequest *>(to)->MergeFrom(
      static_cast<const GetRegistryItemRequest &>(from));
}


void GetRegistryItemRequest::MergeFrom(const GetRegistryItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRegistryItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_item_id().empty()) {
    _internal_set_item_id(from._internal_item_id());
  }
  if (from._internal_has_include_markdown_documentation()) {
    _internal_set_include_markdown_documentation(from._internal_include_markdown_documentation());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRegistryItemRequest::CopyFrom(const GetRegistryItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRegistryItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRegistryItemRequest::IsInitialized() const {
  return true;
}

void GetRegistryItemRequest::InternalSwap(GetRegistryItemRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &item_id_, lhs_arena,
      &other->item_id_, rhs_arena
  );
  swap(include_markdown_documentation_, other->include_markdown_documentation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRegistryItemRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[149]);
}

// ===================================================================

class GetRegistryItemResponse::_Internal {
 public:
  static const ::viam::app::v1::RegistryItem& item(const GetRegistryItemResponse* msg);
};

const ::viam::app::v1::RegistryItem&
GetRegistryItemResponse::_Internal::item(const GetRegistryItemResponse* msg) {
  return *msg->item_;
}
GetRegistryItemResponse::GetRegistryItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRegistryItemResponse)
}
GetRegistryItemResponse::GetRegistryItemResponse(const GetRegistryItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    item_ = new ::viam::app::v1::RegistryItem(*from.item_);
  } else {
    item_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRegistryItemResponse)
}

inline void GetRegistryItemResponse::SharedCtor() {
item_ = nullptr;
}

GetRegistryItemResponse::~GetRegistryItemResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRegistryItemResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRegistryItemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete item_;
}

void GetRegistryItemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRegistryItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRegistryItemResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRegistryItemResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.RegistryItem item = 1 [json_name = "item"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRegistryItemResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRegistryItemResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.RegistryItem item = 1 [json_name = "item"];
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRegistryItemResponse)
  return target;
}

size_t GetRegistryItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRegistryItemResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.RegistryItem item = 1 [json_name = "item"];
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRegistryItemResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRegistryItemResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRegistryItemResponse::GetClassData() const { return &_class_data_; }

void GetRegistryItemResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRegistryItemResponse *>(to)->MergeFrom(
      static_cast<const GetRegistryItemResponse &>(from));
}


void GetRegistryItemResponse::MergeFrom(const GetRegistryItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRegistryItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _internal_mutable_item()->::viam::app::v1::RegistryItem::MergeFrom(from._internal_item());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRegistryItemResponse::CopyFrom(const GetRegistryItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRegistryItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRegistryItemResponse::IsInitialized() const {
  return true;
}

void GetRegistryItemResponse::InternalSwap(GetRegistryItemResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(item_, other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRegistryItemResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[150]);
}

// ===================================================================

class CreateRegistryItemRequest::_Internal {
 public:
};

CreateRegistryItemRequest::CreateRegistryItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateRegistryItemRequest)
}
CreateRegistryItemRequest::CreateRegistryItemRequest(const CreateRegistryItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateRegistryItemRequest)
}

inline void CreateRegistryItemRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_ = 0;
}

CreateRegistryItemRequest::~CreateRegistryItemRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateRegistryItemRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateRegistryItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  name_.Destroy();
}

void CreateRegistryItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRegistryItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateRegistryItemRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  name_.ClearToEmpty();
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRegistryItemRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateRegistryItemRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateRegistryItemRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.packages.v1.PackageType type = 3 [json_name = "type"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::viam::app::packages::v1::PackageType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateRegistryItemRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateRegistryItemRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateRegistryItemRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateRegistryItemRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .viam.app.packages.v1.PackageType type = 3 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateRegistryItemRequest)
  return target;
}

size_t CreateRegistryItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateRegistryItemRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .viam.app.packages.v1.PackageType type = 3 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRegistryItemRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateRegistryItemRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRegistryItemRequest::GetClassData() const { return &_class_data_; }

void CreateRegistryItemRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateRegistryItemRequest *>(to)->MergeFrom(
      static_cast<const CreateRegistryItemRequest &>(from));
}


void CreateRegistryItemRequest::MergeFrom(const CreateRegistryItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateRegistryItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRegistryItemRequest::CopyFrom(const CreateRegistryItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateRegistryItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRegistryItemRequest::IsInitialized() const {
  return true;
}

void CreateRegistryItemRequest::InternalSwap(CreateRegistryItemRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRegistryItemRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[151]);
}

// ===================================================================

class CreateRegistryItemResponse::_Internal {
 public:
};

CreateRegistryItemResponse::CreateRegistryItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateRegistryItemResponse)
}
CreateRegistryItemResponse::CreateRegistryItemResponse(const CreateRegistryItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateRegistryItemResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRegistryItemResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRegistryItemResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CreateRegistryItemResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[152]);
}

// ===================================================================

class UpdateRegistryItemRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateRegistryItemRequest>()._has_bits_);
  static void set_has_url(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::viam::app::v1::UpdateModuleMetadata& module_update_metadata(const UpdateRegistryItemRequest* msg);
  static const ::viam::app::v1::UpdateMLModelMetadata& ml_model_update_metadata(const UpdateRegistryItemRequest* msg);
  static const ::viam::app::v1::UpdateMLTrainingMetadata& ml_training_update_metadata(const UpdateRegistryItemRequest* msg);
};

const ::viam::app::v1::UpdateModuleMetadata&
UpdateRegistryItemRequest::_Internal::module_update_metadata(const UpdateRegistryItemRequest* msg) {
  return *msg->metadata_.module_update_metadata_;
}
const ::viam::app::v1::UpdateMLModelMetadata&
UpdateRegistryItemRequest::_Internal::ml_model_update_metadata(const UpdateRegistryItemRequest* msg) {
  return *msg->metadata_.ml_model_update_metadata_;
}
const ::viam::app::v1::UpdateMLTrainingMetadata&
UpdateRegistryItemRequest::_Internal::ml_training_update_metadata(const UpdateRegistryItemRequest* msg) {
  return *msg->metadata_.ml_training_update_metadata_;
}
void UpdateRegistryItemRequest::set_allocated_module_update_metadata(::viam::app::v1::UpdateModuleMetadata* module_update_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_metadata();
  if (module_update_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(module_update_metadata);
    if (message_arena != submessage_arena) {
      module_update_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, module_update_metadata, submessage_arena);
    }
    set_has_module_update_metadata();
    metadata_.module_update_metadata_ = module_update_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.UpdateRegistryItemRequest.module_update_metadata)
}
void UpdateRegistryItemRequest::set_allocated_ml_model_update_metadata(::viam::app::v1::UpdateMLModelMetadata* ml_model_update_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_metadata();
  if (ml_model_update_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ml_model_update_metadata);
    if (message_arena != submessage_arena) {
      ml_model_update_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ml_model_update_metadata, submessage_arena);
    }
    set_has_ml_model_update_metadata();
    metadata_.ml_model_update_metadata_ = ml_model_update_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.UpdateRegistryItemRequest.ml_model_update_metadata)
}
void UpdateRegistryItemRequest::set_allocated_ml_training_update_metadata(::viam::app::v1::UpdateMLTrainingMetadata* ml_training_update_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_metadata();
  if (ml_training_update_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ml_training_update_metadata);
    if (message_arena != submessage_arena) {
      ml_training_update_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ml_training_update_metadata, submessage_arena);
    }
    set_has_ml_training_update_metadata();
    metadata_.ml_training_update_metadata_ = ml_training_update_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.UpdateRegistryItemRequest.ml_training_update_metadata)
}
UpdateRegistryItemRequest::UpdateRegistryItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRegistryItemRequest)
}
UpdateRegistryItemRequest::UpdateRegistryItemRequest(const UpdateRegistryItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  item_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    item_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    item_id_.Set(from._internal_item_id(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_url()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&type_)) + sizeof(visibility_));
  clear_has_metadata();
  switch (from.metadata_case()) {
    case kModuleUpdateMetadata: {
      _internal_mutable_module_update_metadata()->::viam::app::v1::UpdateModuleMetadata::MergeFrom(from._internal_module_update_metadata());
      break;
    }
    case kMlModelUpdateMetadata: {
      _internal_mutable_ml_model_update_metadata()->::viam::app::v1::UpdateMLModelMetadata::MergeFrom(from._internal_ml_model_update_metadata());
      break;
    }
    case kMlTrainingUpdateMetadata: {
      _internal_mutable_ml_training_update_metadata()->::viam::app::v1::UpdateMLTrainingMetadata::MergeFrom(from._internal_ml_training_update_metadata());
      break;
    }
    case METADATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRegistryItemRequest)
}

inline void UpdateRegistryItemRequest::SharedCtor() {
item_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  item_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&type_)) + sizeof(visibility_));
clear_has_metadata();
}

UpdateRegistryItemRequest::~UpdateRegistryItemRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateRegistryItemRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRegistryItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  item_id_.Destroy();
  description_.Destroy();
  url_.Destroy();
  if (has_metadata()) {
    clear_metadata();
  }
}

void UpdateRegistryItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRegistryItemRequest::clear_metadata() {
// @@protoc_insertion_point(one_of_clear_start:viam.app.v1.UpdateRegistryItemRequest)
  switch (metadata_case()) {
    case kModuleUpdateMetadata: {
      if (GetArenaForAllocation() == nullptr) {
        delete metadata_.module_update_metadata_;
      }
      break;
    }
    case kMlModelUpdateMetadata: {
      if (GetArenaForAllocation() == nullptr) {
        delete metadata_.ml_model_update_metadata_;
      }
      break;
    }
    case kMlTrainingUpdateMetadata: {
      if (GetArenaForAllocation() == nullptr) {
        delete metadata_.ml_training_update_metadata_;
      }
      break;
    }
    case METADATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = METADATA_NOT_SET;
}


void UpdateRegistryItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateRegistryItemRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_.ClearToEmpty();
  description_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    url_.ClearNonDefaultToEmpty();
  }
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visibility_) -
      reinterpret_cast<char*>(&type_)) + sizeof(visibility_));
  clear_metadata();
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRegistryItemRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string item_id = 1 [json_name = "itemId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_item_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRegistryItemRequest.item_id"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.packages.v1.PackageType type = 2 [json_name = "type"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::viam::app::packages::v1::PackageType>(val));
        } else
          goto handle_unusual;
        continue;
      // string description = 3 [json_name = "description"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRegistryItemRequest.description"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.Visibility visibility = 4 [json_name = "visibility"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_visibility(static_cast<::viam::app::v1::Visibility>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string url = 5 [json_name = "url"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRegistryItemRequest.url"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.UpdateModuleMetadata module_update_metadata = 6 [json_name = "moduleUpdateMetadata"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_module_update_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.UpdateMLModelMetadata ml_model_update_metadata = 7 [json_name = "mlModelUpdateMetadata"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_ml_model_update_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.UpdateMLTrainingMetadata ml_training_update_metadata = 8 [json_name = "mlTrainingUpdateMetadata"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_ml_training_update_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRegistryItemRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateRegistryItemRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRegistryItemRequest.item_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_item_id(), target);
  }

  // .viam.app.packages.v1.PackageType type = 2 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // string description = 3 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRegistryItemRequest.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // .viam.app.v1.Visibility visibility = 4 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_visibility(), target);
  }

  // optional string url = 5 [json_name = "url"];
  if (_internal_has_url()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRegistryItemRequest.url");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_url(), target);
  }

  // .viam.app.v1.UpdateModuleMetadata module_update_metadata = 6 [json_name = "moduleUpdateMetadata"];
  if (_internal_has_module_update_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::module_update_metadata(this),
        _Internal::module_update_metadata(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.UpdateMLModelMetadata ml_model_update_metadata = 7 [json_name = "mlModelUpdateMetadata"];
  if (_internal_has_ml_model_update_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::ml_model_update_metadata(this),
        _Internal::ml_model_update_metadata(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.UpdateMLTrainingMetadata ml_training_update_metadata = 8 [json_name = "mlTrainingUpdateMetadata"];
  if (_internal_has_ml_training_update_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::ml_training_update_metadata(this),
        _Internal::ml_training_update_metadata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateRegistryItemRequest)
  return target;
}

size_t UpdateRegistryItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateRegistryItemRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  // string description = 3 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // optional string url = 5 [json_name = "url"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // .viam.app.packages.v1.PackageType type = 2 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .viam.app.v1.Visibility visibility = 4 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_visibility());
  }

  switch (metadata_case()) {
    // .viam.app.v1.UpdateModuleMetadata module_update_metadata = 6 [json_name = "moduleUpdateMetadata"];
    case kModuleUpdateMetadata: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *metadata_.module_update_metadata_);
      break;
    }
    // .viam.app.v1.UpdateMLModelMetadata ml_model_update_metadata = 7 [json_name = "mlModelUpdateMetadata"];
    case kMlModelUpdateMetadata: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *metadata_.ml_model_update_metadata_);
      break;
    }
    // .viam.app.v1.UpdateMLTrainingMetadata ml_training_update_metadata = 8 [json_name = "mlTrainingUpdateMetadata"];
    case kMlTrainingUpdateMetadata: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *metadata_.ml_training_update_metadata_);
      break;
    }
    case METADATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRegistryItemRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRegistryItemRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRegistryItemRequest::GetClassData() const { return &_class_data_; }

void UpdateRegistryItemRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRegistryItemRequest *>(to)->MergeFrom(
      static_cast<const UpdateRegistryItemRequest &>(from));
}


void UpdateRegistryItemRequest::MergeFrom(const UpdateRegistryItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateRegistryItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_item_id().empty()) {
    _internal_set_item_id(from._internal_item_id());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (from._internal_has_url()) {
    _internal_set_url(from._internal_url());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_visibility() != 0) {
    _internal_set_visibility(from._internal_visibility());
  }
  switch (from.metadata_case()) {
    case kModuleUpdateMetadata: {
      _internal_mutable_module_update_metadata()->::viam::app::v1::UpdateModuleMetadata::MergeFrom(from._internal_module_update_metadata());
      break;
    }
    case kMlModelUpdateMetadata: {
      _internal_mutable_ml_model_update_metadata()->::viam::app::v1::UpdateMLModelMetadata::MergeFrom(from._internal_ml_model_update_metadata());
      break;
    }
    case kMlTrainingUpdateMetadata: {
      _internal_mutable_ml_training_update_metadata()->::viam::app::v1::UpdateMLTrainingMetadata::MergeFrom(from._internal_ml_training_update_metadata());
      break;
    }
    case METADATA_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRegistryItemRequest::CopyFrom(const UpdateRegistryItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateRegistryItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRegistryItemRequest::IsInitialized() const {
  return true;
}

void UpdateRegistryItemRequest::InternalSwap(UpdateRegistryItemRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &item_id_, lhs_arena,
      &other->item_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateRegistryItemRequest, visibility_)
      + sizeof(UpdateRegistryItemRequest::visibility_)
      - PROTOBUF_FIELD_OFFSET(UpdateRegistryItemRequest, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
  swap(metadata_, other->metadata_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRegistryItemRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[153]);
}

// ===================================================================

class UpdateRegistryItemResponse::_Internal {
 public:
};

UpdateRegistryItemResponse::UpdateRegistryItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRegistryItemResponse)
}
UpdateRegistryItemResponse::UpdateRegistryItemResponse(const UpdateRegistryItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRegistryItemResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRegistryItemResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRegistryItemResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateRegistryItemResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[154]);
}

// ===================================================================

class ListRegistryItemsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ListRegistryItemsRequest>()._has_bits_);
  static void set_has_organization_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_search_term(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_page_token(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_include_markdown_documentation(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

ListRegistryItemsRequest::ListRegistryItemsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  types_(arena),
  visibilities_(arena),
  platforms_(arena),
  statuses_(arena),
  public_namespaces_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListRegistryItemsRequest)
}
ListRegistryItemsRequest::ListRegistryItemsRequest(const ListRegistryItemsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      types_(from.types_),
      visibilities_(from.visibilities_),
      platforms_(from.platforms_),
      statuses_(from.statuses_),
      public_namespaces_(from.public_namespaces_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_organization_id()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  search_term_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    search_term_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_search_term()) {
    search_term_.Set(from._internal_search_term(), 
      GetArenaForAllocation());
  }
  page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_page_token()) {
    page_token_.Set(from._internal_page_token(), 
      GetArenaForAllocation());
  }
  include_markdown_documentation_ = from.include_markdown_documentation_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListRegistryItemsRequest)
}

inline void ListRegistryItemsRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
search_term_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  search_term_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
page_token_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  page_token_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
include_markdown_documentation_ = false;
}

ListRegistryItemsRequest::~ListRegistryItemsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListRegistryItemsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListRegistryItemsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  search_term_.Destroy();
  page_token_.Destroy();
}

void ListRegistryItemsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRegistryItemsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListRegistryItemsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  types_.Clear();
  visibilities_.Clear();
  platforms_.Clear();
  statuses_.Clear();
  public_namespaces_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      organization_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      search_term_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      page_token_.ClearNonDefaultToEmpty();
    }
  }
  include_markdown_documentation_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRegistryItemsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListRegistryItemsRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.packages.v1.PackageType types = 2 [json_name = "types"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_types(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_types(static_cast<::viam::app::packages::v1::PackageType>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Visibility visibilities = 3 [json_name = "visibilities"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_visibilities(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_visibilities(static_cast<::viam::app::v1::Visibility>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated string platforms = 4 [json_name = "platforms"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_platforms();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListRegistryItemsRequest.platforms"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.RegistryItemStatus statuses = 5 [json_name = "statuses"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_statuses(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 40) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_statuses(static_cast<::viam::app::v1::RegistryItemStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string search_term = 6 [json_name = "searchTerm"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_search_term();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListRegistryItemsRequest.search_term"));
        } else
          goto handle_unusual;
        continue;
      // optional string page_token = 7 [json_name = "pageToken"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListRegistryItemsRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      // repeated string public_namespaces = 8 [json_name = "publicNamespaces"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_public_namespaces();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListRegistryItemsRequest.public_namespaces"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool include_markdown_documentation = 9 [json_name = "includeMarkdownDocumentation"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_include_markdown_documentation(&has_bits);
          include_markdown_documentation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRegistryItemsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListRegistryItemsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string organization_id = 1 [json_name = "organizationId"];
  if (_internal_has_organization_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListRegistryItemsRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // repeated .viam.app.packages.v1.PackageType types = 2 [json_name = "types"];
  {
    int byte_size = _types_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, types_, byte_size, target);
    }
  }

  // repeated .viam.app.v1.Visibility visibilities = 3 [json_name = "visibilities"];
  {
    int byte_size = _visibilities_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          3, visibilities_, byte_size, target);
    }
  }

  // repeated string platforms = 4 [json_name = "platforms"];
  for (int i = 0, n = this->_internal_platforms_size(); i < n; i++) {
    const auto& s = this->_internal_platforms(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListRegistryItemsRequest.platforms");
    target = stream->WriteString(4, s, target);
  }

  // repeated .viam.app.v1.RegistryItemStatus statuses = 5 [json_name = "statuses"];
  {
    int byte_size = _statuses_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          5, statuses_, byte_size, target);
    }
  }

  // optional string search_term = 6 [json_name = "searchTerm"];
  if (_internal_has_search_term()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_search_term().data(), static_cast<int>(this->_internal_search_term().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListRegistryItemsRequest.search_term");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_search_term(), target);
  }

  // optional string page_token = 7 [json_name = "pageToken"];
  if (_internal_has_page_token()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListRegistryItemsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_page_token(), target);
  }

  // repeated string public_namespaces = 8 [json_name = "publicNamespaces"];
  for (int i = 0, n = this->_internal_public_namespaces_size(); i < n; i++) {
    const auto& s = this->_internal_public_namespaces(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListRegistryItemsRequest.public_namespaces");
    target = stream->WriteString(8, s, target);
  }

  // optional bool include_markdown_documentation = 9 [json_name = "includeMarkdownDocumentation"];
  if (_internal_has_include_markdown_documentation()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(9, this->_internal_include_markdown_documentation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListRegistryItemsRequest)
  return target;
}

size_t ListRegistryItemsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListRegistryItemsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.packages.v1.PackageType types = 2 [json_name = "types"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_types(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _types_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .viam.app.v1.Visibility visibilities = 3 [json_name = "visibilities"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_visibilities_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_visibilities(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _visibilities_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string platforms = 4 [json_name = "platforms"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(platforms_.size());
  for (int i = 0, n = platforms_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      platforms_.Get(i));
  }

  // repeated .viam.app.v1.RegistryItemStatus statuses = 5 [json_name = "statuses"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_statuses_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_statuses(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _statuses_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string public_namespaces = 8 [json_name = "publicNamespaces"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(public_namespaces_.size());
  for (int i = 0, n = public_namespaces_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      public_namespaces_.Get(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string organization_id = 1 [json_name = "organizationId"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_organization_id());
    }

    // optional string search_term = 6 [json_name = "searchTerm"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_search_term());
    }

    // optional string page_token = 7 [json_name = "pageToken"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_page_token());
    }

    // optional bool include_markdown_documentation = 9 [json_name = "includeMarkdownDocumentation"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRegistryItemsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRegistryItemsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRegistryItemsRequest::GetClassData() const { return &_class_data_; }

void ListRegistryItemsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRegistryItemsRequest *>(to)->MergeFrom(
      static_cast<const ListRegistryItemsRequest &>(from));
}


void ListRegistryItemsRequest::MergeFrom(const ListRegistryItemsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListRegistryItemsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  types_.MergeFrom(from.types_);
  visibilities_.MergeFrom(from.visibilities_);
  platforms_.MergeFrom(from.platforms_);
  statuses_.MergeFrom(from.statuses_);
  public_namespaces_.MergeFrom(from.public_namespaces_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_organization_id(from._internal_organization_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_search_term(from._internal_search_term());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_page_token(from._internal_page_token());
    }
    if (cached_has_bits & 0x00000008u) {
      include_markdown_documentation_ = from.include_markdown_documentation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRegistryItemsRequest::CopyFrom(const ListRegistryItemsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListRegistryItemsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRegistryItemsRequest::IsInitialized() const {
  return true;
}

void ListRegistryItemsRequest::InternalSwap(ListRegistryItemsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  types_.InternalSwap(&other->types_);
  visibilities_.InternalSwap(&other->visibilities_);
  platforms_.InternalSwap(&other->platforms_);
  statuses_.InternalSwap(&other->statuses_);
  public_namespaces_.InternalSwap(&other->public_namespaces_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &search_term_, lhs_arena,
      &other->search_term_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &page_token_, lhs_arena,
      &other->page_token_, rhs_arena
  );
  swap(include_markdown_documentation_, other->include_markdown_documentation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRegistryItemsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[155]);
}

// ===================================================================

class ListRegistryItemsResponse::_Internal {
 public:
};

ListRegistryItemsResponse::ListRegistryItemsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  items_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListRegistryItemsResponse)
}
ListRegistryItemsResponse::ListRegistryItemsResponse(const ListRegistryItemsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListRegistryItemsResponse)
}

inline void ListRegistryItemsResponse::SharedCtor() {
}

ListRegistryItemsResponse::~ListRegistryItemsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListRegistryItemsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListRegistryItemsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListRegistryItemsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRegistryItemsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListRegistryItemsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRegistryItemsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.RegistryItem items = 1 [json_name = "items"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRegistryItemsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListRegistryItemsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.RegistryItem items = 1 [json_name = "items"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListRegistryItemsResponse)
  return target;
}

size_t ListRegistryItemsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListRegistryItemsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.RegistryItem items = 1 [json_name = "items"];
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRegistryItemsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRegistryItemsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRegistryItemsResponse::GetClassData() const { return &_class_data_; }

void ListRegistryItemsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRegistryItemsResponse *>(to)->MergeFrom(
      static_cast<const ListRegistryItemsResponse &>(from));
}


void ListRegistryItemsResponse::MergeFrom(const ListRegistryItemsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListRegistryItemsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRegistryItemsResponse::CopyFrom(const ListRegistryItemsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListRegistryItemsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRegistryItemsResponse::IsInitialized() const {
  return true;
}

void ListRegistryItemsResponse::InternalSwap(ListRegistryItemsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRegistryItemsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[156]);
}

// ===================================================================

class DeleteRegistryItemRequest::_Internal {
 public:
};

DeleteRegistryItemRequest::DeleteRegistryItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRegistryItemRequest)
}
DeleteRegistryItemRequest::DeleteRegistryItemRequest(const DeleteRegistryItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  item_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    item_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    item_id_.Set(from._internal_item_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRegistryItemRequest)
}

inline void DeleteRegistryItemRequest::SharedCtor() {
item_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  item_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRegistryItemRequest::~DeleteRegistryItemRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteRegistryItemRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRegistryItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  item_id_.Destroy();
}

void DeleteRegistryItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRegistryItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteRegistryItemRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRegistryItemRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string item_id = 1 [json_name = "itemId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_item_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteRegistryItemRequest.item_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRegistryItemRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteRegistryItemRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteRegistryItemRequest.item_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_item_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteRegistryItemRequest)
  return target;
}

size_t DeleteRegistryItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteRegistryItemRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRegistryItemRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRegistryItemRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRegistryItemRequest::GetClassData() const { return &_class_data_; }

void DeleteRegistryItemRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteRegistryItemRequest *>(to)->MergeFrom(
      static_cast<const DeleteRegistryItemRequest &>(from));
}


void DeleteRegistryItemRequest::MergeFrom(const DeleteRegistryItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteRegistryItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_item_id().empty()) {
    _internal_set_item_id(from._internal_item_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRegistryItemRequest::CopyFrom(const DeleteRegistryItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteRegistryItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRegistryItemRequest::IsInitialized() const {
  return true;
}

void DeleteRegistryItemRequest::InternalSwap(DeleteRegistryItemRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &item_id_, lhs_arena,
      &other->item_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRegistryItemRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[157]);
}

// ===================================================================

class DeleteRegistryItemResponse::_Internal {
 public:
};

DeleteRegistryItemResponse::DeleteRegistryItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRegistryItemResponse)
}
DeleteRegistryItemResponse::DeleteRegistryItemResponse(const DeleteRegistryItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRegistryItemResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRegistryItemResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRegistryItemResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteRegistryItemResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[158]);
}

// ===================================================================

class TransferRegistryItemRequest::_Internal {
 public:
};

TransferRegistryItemRequest::TransferRegistryItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.TransferRegistryItemRequest)
}
TransferRegistryItemRequest::TransferRegistryItemRequest(const TransferRegistryItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  item_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    item_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    item_id_.Set(from._internal_item_id(), 
      GetArenaForAllocation());
  }
  new_public_namespace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    new_public_namespace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_new_public_namespace().empty()) {
    new_public_namespace_.Set(from._internal_new_public_namespace(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.TransferRegistryItemRequest)
}

inline void TransferRegistryItemRequest::SharedCtor() {
item_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  item_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
new_public_namespace_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  new_public_namespace_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TransferRegistryItemRequest::~TransferRegistryItemRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.TransferRegistryItemRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransferRegistryItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  item_id_.Destroy();
  new_public_namespace_.Destroy();
}

void TransferRegistryItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TransferRegistryItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.TransferRegistryItemRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_.ClearToEmpty();
  new_public_namespace_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransferRegistryItemRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string item_id = 1 [json_name = "itemId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_item_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.TransferRegistryItemRequest.item_id"));
        } else
          goto handle_unusual;
        continue;
      // string new_public_namespace = 2 [json_name = "newPublicNamespace"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_new_public_namespace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.TransferRegistryItemRequest.new_public_namespace"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransferRegistryItemRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.TransferRegistryItemRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.TransferRegistryItemRequest.item_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_item_id(), target);
  }

  // string new_public_namespace = 2 [json_name = "newPublicNamespace"];
  if (!this->_internal_new_public_namespace().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_new_public_namespace().data(), static_cast<int>(this->_internal_new_public_namespace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.TransferRegistryItemRequest.new_public_namespace");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_new_public_namespace(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.TransferRegistryItemRequest)
  return target;
}

size_t TransferRegistryItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.TransferRegistryItemRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  // string new_public_namespace = 2 [json_name = "newPublicNamespace"];
  if (!this->_internal_new_public_namespace().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_new_public_namespace());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransferRegistryItemRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TransferRegistryItemRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransferRegistryItemRequest::GetClassData() const { return &_class_data_; }

void TransferRegistryItemRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TransferRegistryItemRequest *>(to)->MergeFrom(
      static_cast<const TransferRegistryItemRequest &>(from));
}


void TransferRegistryItemRequest::MergeFrom(const TransferRegistryItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.TransferRegistryItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_item_id().empty()) {
    _internal_set_item_id(from._internal_item_id());
  }
  if (!from._internal_new_public_namespace().empty()) {
    _internal_set_new_public_namespace(from._internal_new_public_namespace());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransferRegistryItemRequest::CopyFrom(const TransferRegistryItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.TransferRegistryItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferRegistryItemRequest::IsInitialized() const {
  return true;
}

void TransferRegistryItemRequest::InternalSwap(TransferRegistryItemRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &item_id_, lhs_arena,
      &other->item_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &new_public_namespace_, lhs_arena,
      &other->new_public_namespace_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TransferRegistryItemRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[159]);
}

// ===================================================================

class TransferRegistryItemResponse::_Internal {
 public:
};

TransferRegistryItemResponse::TransferRegistryItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.TransferRegistryItemResponse)
}
TransferRegistryItemResponse::TransferRegistryItemResponse(const TransferRegistryItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.TransferRegistryItemResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransferRegistryItemResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransferRegistryItemResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata TransferRegistryItemResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[160]);
}

// ===================================================================

class CreateModuleRequest::_Internal {
 public:
};

CreateModuleRequest::CreateModuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateModuleRequest)
}
CreateModuleRequest::CreateModuleRequest(const CreateModuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateModuleRequest)
}

inline void CreateModuleRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateModuleRequest::~CreateModuleRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateModuleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateModuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  name_.Destroy();
}

void CreateModuleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateModuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateModuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateModuleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateModuleRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateModuleRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateModuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateModuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateModuleRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateModuleRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateModuleRequest)
  return target;
}

size_t CreateModuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateModuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateModuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateModuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateModuleRequest::GetClassData() const { return &_class_data_; }

void CreateModuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateModuleRequest *>(to)->MergeFrom(
      static_cast<const CreateModuleRequest &>(from));
}


void CreateModuleRequest::MergeFrom(const CreateModuleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateModuleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateModuleRequest::CopyFrom(const CreateModuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateModuleRequest::IsInitialized() const {
  return true;
}

void CreateModuleRequest::InternalSwap(CreateModuleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateModuleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[161]);
}

// ===================================================================

class CreateModuleResponse::_Internal {
 public:
};

CreateModuleResponse::CreateModuleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateModuleResponse)
}
CreateModuleResponse::CreateModuleResponse(const CreateModuleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  module_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    module_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_id().empty()) {
    module_id_.Set(from._internal_module_id(), 
      GetArenaForAllocation());
  }
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateModuleResponse)
}

inline void CreateModuleResponse::SharedCtor() {
module_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  module_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateModuleResponse::~CreateModuleResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateModuleResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateModuleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  module_id_.Destroy();
  url_.Destroy();
}

void CreateModuleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateModuleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateModuleResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_id_.ClearToEmpty();
  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateModuleResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_id = 1 [json_name = "moduleId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateModuleResponse.module_id"));
        } else
          goto handle_unusual;
        continue;
      // string url = 2 [json_name = "url"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateModuleResponse.url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateModuleResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateModuleResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_id().data(), static_cast<int>(this->_internal_module_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateModuleResponse.module_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_id(), target);
  }

  // string url = 2 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateModuleResponse.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateModuleResponse)
  return target;
}

size_t CreateModuleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateModuleResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_id());
  }

  // string url = 2 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateModuleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateModuleResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateModuleResponse::GetClassData() const { return &_class_data_; }

void CreateModuleResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateModuleResponse *>(to)->MergeFrom(
      static_cast<const CreateModuleResponse &>(from));
}


void CreateModuleResponse::MergeFrom(const CreateModuleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateModuleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_module_id().empty()) {
    _internal_set_module_id(from._internal_module_id());
  }
  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateModuleResponse::CopyFrom(const CreateModuleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateModuleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateModuleResponse::IsInitialized() const {
  return true;
}

void CreateModuleResponse::InternalSwap(CreateModuleResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &module_id_, lhs_arena,
      &other->module_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateModuleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[162]);
}

// ===================================================================

class UpdateModuleRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateModuleRequest>()._has_bits_);
  static void set_has_first_run(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

UpdateModuleRequest::UpdateModuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  models_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateModuleRequest)
}
UpdateModuleRequest::UpdateModuleRequest(const UpdateModuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      models_(from.models_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  module_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    module_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_id().empty()) {
    module_id_.Set(from._internal_module_id(), 
      GetArenaForAllocation());
  }
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  entrypoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    entrypoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entrypoint().empty()) {
    entrypoint_.Set(from._internal_entrypoint(), 
      GetArenaForAllocation());
  }
  first_run_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    first_run_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_first_run()) {
    first_run_.Set(from._internal_first_run(), 
      GetArenaForAllocation());
  }
  visibility_ = from.visibility_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateModuleRequest)
}

inline void UpdateModuleRequest::SharedCtor() {
module_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  module_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
entrypoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  entrypoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
first_run_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  first_run_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
visibility_ = 0;
}

UpdateModuleRequest::~UpdateModuleRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateModuleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateModuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  module_id_.Destroy();
  url_.Destroy();
  description_.Destroy();
  entrypoint_.Destroy();
  first_run_.Destroy();
}

void UpdateModuleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateModuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateModuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  models_.Clear();
  module_id_.ClearToEmpty();
  url_.ClearToEmpty();
  description_.ClearToEmpty();
  entrypoint_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    first_run_.ClearNonDefaultToEmpty();
  }
  visibility_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateModuleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_id = 1 [json_name = "moduleId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateModuleRequest.module_id"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.Visibility visibility = 2 [json_name = "visibility"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_visibility(static_cast<::viam::app::v1::Visibility>(val));
        } else
          goto handle_unusual;
        continue;
      // string url = 3 [json_name = "url"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateModuleRequest.url"));
        } else
          goto handle_unusual;
        continue;
      // string description = 4 [json_name = "description"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateModuleRequest.description"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Model models = 5 [json_name = "models"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string entrypoint = 6 [json_name = "entrypoint"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_entrypoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateModuleRequest.entrypoint"));
        } else
          goto handle_unusual;
        continue;
      // optional string first_run = 7 [json_name = "firstRun"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_first_run();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateModuleRequest.first_run"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateModuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateModuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_id().data(), static_cast<int>(this->_internal_module_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateModuleRequest.module_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_id(), target);
  }

  // .viam.app.v1.Visibility visibility = 2 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_visibility(), target);
  }

  // string url = 3 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateModuleRequest.url");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_url(), target);
  }

  // string description = 4 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateModuleRequest.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // repeated .viam.app.v1.Model models = 5 [json_name = "models"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_models_size()); i < n; i++) {
    const auto& repfield = this->_internal_models(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string entrypoint = 6 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entrypoint().data(), static_cast<int>(this->_internal_entrypoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateModuleRequest.entrypoint");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_entrypoint(), target);
  }

  // optional string first_run = 7 [json_name = "firstRun"];
  if (_internal_has_first_run()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_first_run().data(), static_cast<int>(this->_internal_first_run().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateModuleRequest.first_run");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_first_run(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateModuleRequest)
  return target;
}

size_t UpdateModuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateModuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Model models = 5 [json_name = "models"];
  total_size += 1UL * this->_internal_models_size();
  for (const auto& msg : this->models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_id());
  }

  // string url = 3 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string description = 4 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string entrypoint = 6 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entrypoint());
  }

  // optional string first_run = 7 [json_name = "firstRun"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_first_run());
  }

  // .viam.app.v1.Visibility visibility = 2 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_visibility());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateModuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateModuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateModuleRequest::GetClassData() const { return &_class_data_; }

void UpdateModuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateModuleRequest *>(to)->MergeFrom(
      static_cast<const UpdateModuleRequest &>(from));
}


void UpdateModuleRequest::MergeFrom(const UpdateModuleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateModuleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  models_.MergeFrom(from.models_);
  if (!from._internal_module_id().empty()) {
    _internal_set_module_id(from._internal_module_id());
  }
  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_entrypoint().empty()) {
    _internal_set_entrypoint(from._internal_entrypoint());
  }
  if (from._internal_has_first_run()) {
    _internal_set_first_run(from._internal_first_run());
  }
  if (from._internal_visibility() != 0) {
    _internal_set_visibility(from._internal_visibility());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateModuleRequest::CopyFrom(const UpdateModuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateModuleRequest::IsInitialized() const {
  return true;
}

void UpdateModuleRequest::InternalSwap(UpdateModuleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  models_.InternalSwap(&other->models_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &module_id_, lhs_arena,
      &other->module_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &entrypoint_, lhs_arena,
      &other->entrypoint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &first_run_, lhs_arena,
      &other->first_run_, rhs_arena
  );
  swap(visibility_, other->visibility_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateModuleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[163]);
}

// ===================================================================

class UpdateModuleResponse::_Internal {
 public:
};

UpdateModuleResponse::UpdateModuleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateModuleResponse)
}
UpdateModuleResponse::UpdateModuleResponse(const UpdateModuleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateModuleResponse)
}

inline void UpdateModuleResponse::SharedCtor() {
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateModuleResponse::~UpdateModuleResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateModuleResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateModuleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  url_.Destroy();
}

void UpdateModuleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateModuleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateModuleResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateModuleResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1 [json_name = "url"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateModuleResponse.url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateModuleResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateModuleResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateModuleResponse.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateModuleResponse)
  return target;
}

size_t UpdateModuleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateModuleResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateModuleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateModuleResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateModuleResponse::GetClassData() const { return &_class_data_; }

void UpdateModuleResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateModuleResponse *>(to)->MergeFrom(
      static_cast<const UpdateModuleResponse &>(from));
}


void UpdateModuleResponse::MergeFrom(const UpdateModuleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateModuleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateModuleResponse::CopyFrom(const UpdateModuleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateModuleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateModuleResponse::IsInitialized() const {
  return true;
}

void UpdateModuleResponse::InternalSwap(UpdateModuleResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateModuleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[164]);
}

// ===================================================================

class UpdateModuleMetadata::_Internal {
 public:
};

UpdateModuleMetadata::UpdateModuleMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  models_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateModuleMetadata)
}
UpdateModuleMetadata::UpdateModuleMetadata(const UpdateModuleMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      models_(from.models_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  entrypoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    entrypoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entrypoint().empty()) {
    entrypoint_.Set(from._internal_entrypoint(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateModuleMetadata)
}

inline void UpdateModuleMetadata::SharedCtor() {
entrypoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  entrypoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateModuleMetadata::~UpdateModuleMetadata() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateModuleMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateModuleMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  entrypoint_.Destroy();
}

void UpdateModuleMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateModuleMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateModuleMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  models_.Clear();
  entrypoint_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateModuleMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Model models = 1 [json_name = "models"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string entrypoint = 2 [json_name = "entrypoint"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_entrypoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateModuleMetadata.entrypoint"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateModuleMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateModuleMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Model models = 1 [json_name = "models"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_models_size()); i < n; i++) {
    const auto& repfield = this->_internal_models(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string entrypoint = 2 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entrypoint().data(), static_cast<int>(this->_internal_entrypoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateModuleMetadata.entrypoint");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_entrypoint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateModuleMetadata)
  return target;
}

size_t UpdateModuleMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateModuleMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Model models = 1 [json_name = "models"];
  total_size += 1UL * this->_internal_models_size();
  for (const auto& msg : this->models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string entrypoint = 2 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entrypoint());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateModuleMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateModuleMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateModuleMetadata::GetClassData() const { return &_class_data_; }

void UpdateModuleMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateModuleMetadata *>(to)->MergeFrom(
      static_cast<const UpdateModuleMetadata &>(from));
}


void UpdateModuleMetadata::MergeFrom(const UpdateModuleMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateModuleMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  models_.MergeFrom(from.models_);
  if (!from._internal_entrypoint().empty()) {
    _internal_set_entrypoint(from._internal_entrypoint());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateModuleMetadata::CopyFrom(const UpdateModuleMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateModuleMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateModuleMetadata::IsInitialized() const {
  return true;
}

void UpdateModuleMetadata::InternalSwap(UpdateModuleMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  models_.InternalSwap(&other->models_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &entrypoint_, lhs_arena,
      &other->entrypoint_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateModuleMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[165]);
}

// ===================================================================

class UpdateMLModelMetadata::_Internal {
 public:
};

UpdateMLModelMetadata::UpdateMLModelMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateMLModelMetadata)
}
UpdateMLModelMetadata::UpdateMLModelMetadata(const UpdateMLModelMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&model_type_, &from.model_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&model_framework_) -
    reinterpret_cast<char*>(&model_type_)) + sizeof(model_framework_));
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateMLModelMetadata)
}

inline void UpdateMLModelMetadata::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&model_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&model_framework_) -
    reinterpret_cast<char*>(&model_type_)) + sizeof(model_framework_));
}

UpdateMLModelMetadata::~UpdateMLModelMetadata() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateMLModelMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateMLModelMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UpdateMLModelMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateMLModelMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateMLModelMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&model_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&model_framework_) -
      reinterpret_cast<char*>(&model_type_)) + sizeof(model_framework_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateMLModelMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.mltraining.v1.ModelType model_type = 1 [json_name = "modelType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_model_type(static_cast<::viam::app::mltraining::v1::ModelType>(val));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.mltraining.v1.ModelFramework model_framework = 2 [json_name = "modelFramework"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_model_framework(static_cast<::viam::app::mltraining::v1::ModelFramework>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateMLModelMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateMLModelMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.mltraining.v1.ModelType model_type = 1 [json_name = "modelType"];
  if (this->_internal_model_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_model_type(), target);
  }

  // .viam.app.mltraining.v1.ModelFramework model_framework = 2 [json_name = "modelFramework"];
  if (this->_internal_model_framework() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_model_framework(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateMLModelMetadata)
  return target;
}

size_t UpdateMLModelMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateMLModelMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.mltraining.v1.ModelType model_type = 1 [json_name = "modelType"];
  if (this->_internal_model_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_model_type());
  }

  // .viam.app.mltraining.v1.ModelFramework model_framework = 2 [json_name = "modelFramework"];
  if (this->_internal_model_framework() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_model_framework());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateMLModelMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateMLModelMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateMLModelMetadata::GetClassData() const { return &_class_data_; }

void UpdateMLModelMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateMLModelMetadata *>(to)->MergeFrom(
      static_cast<const UpdateMLModelMetadata &>(from));
}


void UpdateMLModelMetadata::MergeFrom(const UpdateMLModelMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateMLModelMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_model_type() != 0) {
    _internal_set_model_type(from._internal_model_type());
  }
  if (from._internal_model_framework() != 0) {
    _internal_set_model_framework(from._internal_model_framework());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateMLModelMetadata::CopyFrom(const UpdateMLModelMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateMLModelMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateMLModelMetadata::IsInitialized() const {
  return true;
}

void UpdateMLModelMetadata::InternalSwap(UpdateMLModelMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateMLModelMetadata, model_framework_)
      + sizeof(UpdateMLModelMetadata::model_framework_)
      - PROTOBUF_FIELD_OFFSET(UpdateMLModelMetadata, model_type_)>(
          reinterpret_cast<char*>(&model_type_),
          reinterpret_cast<char*>(&other->model_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateMLModelMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[166]);
}

// ===================================================================

class UpdateMLTrainingMetadata::_Internal {
 public:
};

UpdateMLTrainingMetadata::UpdateMLTrainingMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateMLTrainingMetadata)
}
UpdateMLTrainingMetadata::UpdateMLTrainingMetadata(const UpdateMLTrainingMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&model_type_, &from.model_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&draft_) -
    reinterpret_cast<char*>(&model_type_)) + sizeof(draft_));
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateMLTrainingMetadata)
}

inline void UpdateMLTrainingMetadata::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&model_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&draft_) -
    reinterpret_cast<char*>(&model_type_)) + sizeof(draft_));
}

UpdateMLTrainingMetadata::~UpdateMLTrainingMetadata() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateMLTrainingMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateMLTrainingMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UpdateMLTrainingMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateMLTrainingMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateMLTrainingMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&model_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&draft_) -
      reinterpret_cast<char*>(&model_type_)) + sizeof(draft_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateMLTrainingMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.mltraining.v1.ModelType model_type = 1 [json_name = "modelType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_model_type(static_cast<::viam::app::mltraining::v1::ModelType>(val));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.mltraining.v1.ModelFramework model_framework = 2 [json_name = "modelFramework"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_model_framework(static_cast<::viam::app::mltraining::v1::ModelFramework>(val));
        } else
          goto handle_unusual;
        continue;
      // bool draft = 3 [json_name = "draft"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          draft_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateMLTrainingMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateMLTrainingMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.mltraining.v1.ModelType model_type = 1 [json_name = "modelType"];
  if (this->_internal_model_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_model_type(), target);
  }

  // .viam.app.mltraining.v1.ModelFramework model_framework = 2 [json_name = "modelFramework"];
  if (this->_internal_model_framework() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_model_framework(), target);
  }

  // bool draft = 3 [json_name = "draft"];
  if (this->_internal_draft() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_draft(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateMLTrainingMetadata)
  return target;
}

size_t UpdateMLTrainingMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateMLTrainingMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.mltraining.v1.ModelType model_type = 1 [json_name = "modelType"];
  if (this->_internal_model_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_model_type());
  }

  // .viam.app.mltraining.v1.ModelFramework model_framework = 2 [json_name = "modelFramework"];
  if (this->_internal_model_framework() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_model_framework());
  }

  // bool draft = 3 [json_name = "draft"];
  if (this->_internal_draft() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateMLTrainingMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateMLTrainingMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateMLTrainingMetadata::GetClassData() const { return &_class_data_; }

void UpdateMLTrainingMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateMLTrainingMetadata *>(to)->MergeFrom(
      static_cast<const UpdateMLTrainingMetadata &>(from));
}


void UpdateMLTrainingMetadata::MergeFrom(const UpdateMLTrainingMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateMLTrainingMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_model_type() != 0) {
    _internal_set_model_type(from._internal_model_type());
  }
  if (from._internal_model_framework() != 0) {
    _internal_set_model_framework(from._internal_model_framework());
  }
  if (from._internal_draft() != 0) {
    _internal_set_draft(from._internal_draft());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateMLTrainingMetadata::CopyFrom(const UpdateMLTrainingMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateMLTrainingMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateMLTrainingMetadata::IsInitialized() const {
  return true;
}

void UpdateMLTrainingMetadata::InternalSwap(UpdateMLTrainingMetadata* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateMLTrainingMetadata, draft_)
      + sizeof(UpdateMLTrainingMetadata::draft_)
      - PROTOBUF_FIELD_OFFSET(UpdateMLTrainingMetadata, model_type_)>(
          reinterpret_cast<char*>(&model_type_),
          reinterpret_cast<char*>(&other->model_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateMLTrainingMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[167]);
}

// ===================================================================

class Model::_Internal {
 public:
  using HasBits = decltype(std::declval<Model>()._has_bits_);
  static void set_has_markdown_documentation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Model::Model(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Model)
}
Model::Model(const Model& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  api_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    api_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_api().empty()) {
    api_.Set(from._internal_api(), 
      GetArenaForAllocation());
  }
  model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model().empty()) {
    model_.Set(from._internal_model(), 
      GetArenaForAllocation());
  }
  markdown_documentation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    markdown_documentation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_markdown_documentation()) {
    markdown_documentation_.Set(from._internal_markdown_documentation(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_description()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Model)
}

inline void Model::SharedCtor() {
api_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  api_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
model_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
markdown_documentation_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  markdown_documentation_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Model::~Model() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Model)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Model::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  api_.Destroy();
  model_.Destroy();
  markdown_documentation_.Destroy();
  description_.Destroy();
}

void Model::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Model::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Model)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  api_.ClearToEmpty();
  model_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      markdown_documentation_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Model::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string api = 1 [json_name = "api"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_api();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Model.api"));
        } else
          goto handle_unusual;
        continue;
      // string model = 2 [json_name = "model"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Model.model"));
        } else
          goto handle_unusual;
        continue;
      // optional string markdown_documentation = 3 [json_name = "markdownDocumentation"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_markdown_documentation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Model.markdown_documentation"));
        } else
          goto handle_unusual;
        continue;
      // optional string description = 4 [json_name = "description"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Model.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Model::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Model)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string api = 1 [json_name = "api"];
  if (!this->_internal_api().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_api().data(), static_cast<int>(this->_internal_api().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Model.api");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_api(), target);
  }

  // string model = 2 [json_name = "model"];
  if (!this->_internal_model().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model().data(), static_cast<int>(this->_internal_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Model.model");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model(), target);
  }

  // optional string markdown_documentation = 3 [json_name = "markdownDocumentation"];
  if (_internal_has_markdown_documentation()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_markdown_documentation().data(), static_cast<int>(this->_internal_markdown_documentation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Model.markdown_documentation");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_markdown_documentation(), target);
  }

  // optional string description = 4 [json_name = "description"];
  if (_internal_has_description()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Model.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Model)
  return target;
}

size_t Model::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Model)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string api = 1 [json_name = "api"];
  if (!this->_internal_api().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_api());
  }

  // string model = 2 [json_name = "model"];
  if (!this->_internal_model().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string markdown_documentation = 3 [json_name = "markdownDocumentation"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_markdown_documentation());
    }

    // optional string description = 4 [json_name = "description"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Model::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Model::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Model::GetClassData() const { return &_class_data_; }

void Model::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Model *>(to)->MergeFrom(
      static_cast<const Model &>(from));
}


void Model::MergeFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Model)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_api().empty()) {
    _internal_set_api(from._internal_api());
  }
  if (!from._internal_model().empty()) {
    _internal_set_model(from._internal_model());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_markdown_documentation(from._internal_markdown_documentation());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_description(from._internal_description());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Model::CopyFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Model::IsInitialized() const {
  return true;
}

void Model::InternalSwap(Model* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &api_, lhs_arena,
      &other->api_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &model_, lhs_arena,
      &other->model_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &markdown_documentation_, lhs_arena,
      &other->markdown_documentation_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Model::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[168]);
}

// ===================================================================

class ModuleFileInfo::_Internal {
 public:
};

ModuleFileInfo::ModuleFileInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  platform_tags_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ModuleFileInfo)
}
ModuleFileInfo::ModuleFileInfo(const ModuleFileInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      platform_tags_(from.platform_tags_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  module_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    module_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_id().empty()) {
    module_id_.Set(from._internal_module_id(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  platform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    platform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_platform().empty()) {
    platform_.Set(from._internal_platform(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ModuleFileInfo)
}

inline void ModuleFileInfo::SharedCtor() {
module_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  module_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
platform_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  platform_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModuleFileInfo::~ModuleFileInfo() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ModuleFileInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleFileInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  module_id_.Destroy();
  version_.Destroy();
  platform_.Destroy();
}

void ModuleFileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ModuleFileInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  platform_tags_.Clear();
  module_id_.ClearToEmpty();
  version_.ClearToEmpty();
  platform_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleFileInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_id = 1 [json_name = "moduleId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ModuleFileInfo.module_id"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2 [json_name = "version"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ModuleFileInfo.version"));
        } else
          goto handle_unusual;
        continue;
      // string platform = 3 [json_name = "platform"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_platform();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ModuleFileInfo.platform"));
        } else
          goto handle_unusual;
        continue;
      // repeated string platform_tags = 5 [json_name = "platformTags"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_platform_tags();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ModuleFileInfo.platform_tags"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleFileInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ModuleFileInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_id().data(), static_cast<int>(this->_internal_module_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ModuleFileInfo.module_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_id(), target);
  }

  // string version = 2 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ModuleFileInfo.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // string platform = 3 [json_name = "platform"];
  if (!this->_internal_platform().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_platform().data(), static_cast<int>(this->_internal_platform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ModuleFileInfo.platform");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_platform(), target);
  }

  // repeated string platform_tags = 5 [json_name = "platformTags"];
  for (int i = 0, n = this->_internal_platform_tags_size(); i < n; i++) {
    const auto& s = this->_internal_platform_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ModuleFileInfo.platform_tags");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ModuleFileInfo)
  return target;
}

size_t ModuleFileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ModuleFileInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string platform_tags = 5 [json_name = "platformTags"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(platform_tags_.size());
  for (int i = 0, n = platform_tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      platform_tags_.Get(i));
  }

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_id());
  }

  // string version = 2 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string platform = 3 [json_name = "platform"];
  if (!this->_internal_platform().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_platform());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleFileInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleFileInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleFileInfo::GetClassData() const { return &_class_data_; }

void ModuleFileInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleFileInfo *>(to)->MergeFrom(
      static_cast<const ModuleFileInfo &>(from));
}


void ModuleFileInfo::MergeFrom(const ModuleFileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ModuleFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  platform_tags_.MergeFrom(from.platform_tags_);
  if (!from._internal_module_id().empty()) {
    _internal_set_module_id(from._internal_module_id());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  if (!from._internal_platform().empty()) {
    _internal_set_platform(from._internal_platform());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleFileInfo::CopyFrom(const ModuleFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ModuleFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleFileInfo::IsInitialized() const {
  return true;
}

void ModuleFileInfo::InternalSwap(ModuleFileInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  platform_tags_.InternalSwap(&other->platform_tags_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &module_id_, lhs_arena,
      &other->module_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &platform_, lhs_arena,
      &other->platform_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleFileInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[169]);
}

// ===================================================================

class UploadModuleFileRequest::_Internal {
 public:
  static const ::viam::app::v1::ModuleFileInfo& module_file_info(const UploadModuleFileRequest* msg);
};

const ::viam::app::v1::ModuleFileInfo&
UploadModuleFileRequest::_Internal::module_file_info(const UploadModuleFileRequest* msg) {
  return *msg->module_file_.module_file_info_;
}
void UploadModuleFileRequest::set_allocated_module_file_info(::viam::app::v1::ModuleFileInfo* module_file_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_module_file();
  if (module_file_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(module_file_info);
    if (message_arena != submessage_arena) {
      module_file_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, module_file_info, submessage_arena);
    }
    set_has_module_file_info();
    module_file_.module_file_info_ = module_file_info;
  }
  // @@protoc_insertion_point(field_set_allocated:viam.app.v1.UploadModuleFileRequest.module_file_info)
}
UploadModuleFileRequest::UploadModuleFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UploadModuleFileRequest)
}
UploadModuleFileRequest::UploadModuleFileRequest(const UploadModuleFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_module_file();
  switch (from.module_file_case()) {
    case kModuleFileInfo: {
      _internal_mutable_module_file_info()->::viam::app::v1::ModuleFileInfo::MergeFrom(from._internal_module_file_info());
      break;
    }
    case kFile: {
      _internal_set_file(from._internal_file());
      break;
    }
    case MODULE_FILE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UploadModuleFileRequest)
}

inline void UploadModuleFileRequest::SharedCtor() {
clear_has_module_file();
}

UploadModuleFileRequest::~UploadModuleFileRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UploadModuleFileRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UploadModuleFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_module_file()) {
    clear_module_file();
  }
}

void UploadModuleFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UploadModuleFileRequest::clear_module_file() {
// @@protoc_insertion_point(one_of_clear_start:viam.app.v1.UploadModuleFileRequest)
  switch (module_file_case()) {
    case kModuleFileInfo: {
      if (GetArenaForAllocation() == nullptr) {
        delete module_file_.module_file_info_;
      }
      break;
    }
    case kFile: {
      module_file_.file_.Destroy();
      break;
    }
    case MODULE_FILE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MODULE_FILE_NOT_SET;
}


void UploadModuleFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UploadModuleFileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_module_file();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadModuleFileRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.ModuleFileInfo module_file_info = 1 [json_name = "moduleFileInfo"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_module_file_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes file = 2 [json_name = "file"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_file();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadModuleFileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UploadModuleFileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.ModuleFileInfo module_file_info = 1 [json_name = "moduleFileInfo"];
  if (_internal_has_module_file_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::module_file_info(this),
        _Internal::module_file_info(this).GetCachedSize(), target, stream);
  }

  // bytes file = 2 [json_name = "file"];
  if (_internal_has_file()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UploadModuleFileRequest)
  return target;
}

size_t UploadModuleFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UploadModuleFileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (module_file_case()) {
    // .viam.app.v1.ModuleFileInfo module_file_info = 1 [json_name = "moduleFileInfo"];
    case kModuleFileInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *module_file_.module_file_info_);
      break;
    }
    // bytes file = 2 [json_name = "file"];
    case kFile: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_file());
      break;
    }
    case MODULE_FILE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadModuleFileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UploadModuleFileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadModuleFileRequest::GetClassData() const { return &_class_data_; }

void UploadModuleFileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UploadModuleFileRequest *>(to)->MergeFrom(
      static_cast<const UploadModuleFileRequest &>(from));
}


void UploadModuleFileRequest::MergeFrom(const UploadModuleFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UploadModuleFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.module_file_case()) {
    case kModuleFileInfo: {
      _internal_mutable_module_file_info()->::viam::app::v1::ModuleFileInfo::MergeFrom(from._internal_module_file_info());
      break;
    }
    case kFile: {
      _internal_set_file(from._internal_file());
      break;
    }
    case MODULE_FILE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadModuleFileRequest::CopyFrom(const UploadModuleFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UploadModuleFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadModuleFileRequest::IsInitialized() const {
  return true;
}

void UploadModuleFileRequest::InternalSwap(UploadModuleFileRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(module_file_, other->module_file_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadModuleFileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[170]);
}

// ===================================================================

class UploadModuleFileResponse::_Internal {
 public:
};

UploadModuleFileResponse::UploadModuleFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UploadModuleFileResponse)
}
UploadModuleFileResponse::UploadModuleFileResponse(const UploadModuleFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UploadModuleFileResponse)
}

inline void UploadModuleFileResponse::SharedCtor() {
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UploadModuleFileResponse::~UploadModuleFileResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UploadModuleFileResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UploadModuleFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  url_.Destroy();
}

void UploadModuleFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UploadModuleFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UploadModuleFileResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadModuleFileResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1 [json_name = "url"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UploadModuleFileResponse.url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadModuleFileResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UploadModuleFileResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UploadModuleFileResponse.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UploadModuleFileResponse)
  return target;
}

size_t UploadModuleFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UploadModuleFileResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadModuleFileResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UploadModuleFileResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadModuleFileResponse::GetClassData() const { return &_class_data_; }

void UploadModuleFileResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UploadModuleFileResponse *>(to)->MergeFrom(
      static_cast<const UploadModuleFileResponse &>(from));
}


void UploadModuleFileResponse::MergeFrom(const UploadModuleFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UploadModuleFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadModuleFileResponse::CopyFrom(const UploadModuleFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UploadModuleFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadModuleFileResponse::IsInitialized() const {
  return true;
}

void UploadModuleFileResponse::InternalSwap(UploadModuleFileResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadModuleFileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[171]);
}

// ===================================================================

class GetModuleRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetModuleRequest>()._has_bits_);
  static void set_has_include_markdown_documentation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

GetModuleRequest::GetModuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetModuleRequest)
}
GetModuleRequest::GetModuleRequest(const GetModuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  module_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    module_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_id().empty()) {
    module_id_.Set(from._internal_module_id(), 
      GetArenaForAllocation());
  }
  include_markdown_documentation_ = from.include_markdown_documentation_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetModuleRequest)
}

inline void GetModuleRequest::SharedCtor() {
module_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  module_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
include_markdown_documentation_ = false;
}

GetModuleRequest::~GetModuleRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetModuleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetModuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  module_id_.Destroy();
}

void GetModuleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetModuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetModuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_id_.ClearToEmpty();
  include_markdown_documentation_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetModuleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_id = 1 [json_name = "moduleId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetModuleRequest.module_id"));
        } else
          goto handle_unusual;
        continue;
      // optional bool include_markdown_documentation = 2 [json_name = "includeMarkdownDocumentation"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_include_markdown_documentation(&has_bits);
          include_markdown_documentation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetModuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetModuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_id().data(), static_cast<int>(this->_internal_module_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetModuleRequest.module_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_id(), target);
  }

  // optional bool include_markdown_documentation = 2 [json_name = "includeMarkdownDocumentation"];
  if (_internal_has_include_markdown_documentation()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_include_markdown_documentation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetModuleRequest)
  return target;
}

size_t GetModuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetModuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_id());
  }

  // optional bool include_markdown_documentation = 2 [json_name = "includeMarkdownDocumentation"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetModuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetModuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetModuleRequest::GetClassData() const { return &_class_data_; }

void GetModuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetModuleRequest *>(to)->MergeFrom(
      static_cast<const GetModuleRequest &>(from));
}


void GetModuleRequest::MergeFrom(const GetModuleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetModuleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_module_id().empty()) {
    _internal_set_module_id(from._internal_module_id());
  }
  if (from._internal_has_include_markdown_documentation()) {
    _internal_set_include_markdown_documentation(from._internal_include_markdown_documentation());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetModuleRequest::CopyFrom(const GetModuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModuleRequest::IsInitialized() const {
  return true;
}

void GetModuleRequest::InternalSwap(GetModuleRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &module_id_, lhs_arena,
      &other->module_id_, rhs_arena
  );
  swap(include_markdown_documentation_, other->include_markdown_documentation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetModuleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[172]);
}

// ===================================================================

class GetModuleResponse::_Internal {
 public:
  static const ::viam::app::v1::Module& module(const GetModuleResponse* msg);
};

const ::viam::app::v1::Module&
GetModuleResponse::_Internal::module(const GetModuleResponse* msg) {
  return *msg->module_;
}
GetModuleResponse::GetModuleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetModuleResponse)
}
GetModuleResponse::GetModuleResponse(const GetModuleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_module()) {
    module_ = new ::viam::app::v1::Module(*from.module_);
  } else {
    module_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetModuleResponse)
}

inline void GetModuleResponse::SharedCtor() {
module_ = nullptr;
}

GetModuleResponse::~GetModuleResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetModuleResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetModuleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete module_;
}

void GetModuleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetModuleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetModuleResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && module_ != nullptr) {
    delete module_;
  }
  module_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetModuleResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Module module = 1 [json_name = "module"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_module(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetModuleResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetModuleResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Module module = 1 [json_name = "module"];
  if (this->_internal_has_module()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::module(this),
        _Internal::module(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetModuleResponse)
  return target;
}

size_t GetModuleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetModuleResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Module module = 1 [json_name = "module"];
  if (this->_internal_has_module()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *module_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetModuleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetModuleResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetModuleResponse::GetClassData() const { return &_class_data_; }

void GetModuleResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetModuleResponse *>(to)->MergeFrom(
      static_cast<const GetModuleResponse &>(from));
}


void GetModuleResponse::MergeFrom(const GetModuleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetModuleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_module()) {
    _internal_mutable_module()->::viam::app::v1::Module::MergeFrom(from._internal_module());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetModuleResponse::CopyFrom(const GetModuleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetModuleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModuleResponse::IsInitialized() const {
  return true;
}

void GetModuleResponse::InternalSwap(GetModuleResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(module_, other->module_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetModuleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[173]);
}

// ===================================================================

class Module::_Internal {
 public:
  using HasBits = decltype(std::declval<Module>()._has_bits_);
  static void set_has_first_run(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Module::Module(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  versions_(arena),
  models_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Module)
}
Module::Module(const Module& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      versions_(from.versions_),
      models_(from.models_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  module_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    module_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_id().empty()) {
    module_id_.Set(from._internal_module_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  entrypoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    entrypoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entrypoint().empty()) {
    entrypoint_.Set(from._internal_entrypoint(), 
      GetArenaForAllocation());
  }
  public_namespace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    public_namespace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_public_namespace().empty()) {
    public_namespace_.Set(from._internal_public_namespace(), 
      GetArenaForAllocation());
  }
  first_run_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    first_run_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_first_run()) {
    first_run_.Set(from._internal_first_run(), 
      GetArenaForAllocation());
  }
  ::memcpy(&total_robot_usage_, &from.total_robot_usage_,
    static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&total_robot_usage_)) + sizeof(visibility_));
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Module)
}

inline void Module::SharedCtor() {
module_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  module_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
entrypoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  entrypoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
public_namespace_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  public_namespace_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
first_run_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  first_run_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&total_robot_usage_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&total_robot_usage_)) + sizeof(visibility_));
}

Module::~Module() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Module)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Module::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  module_id_.Destroy();
  name_.Destroy();
  url_.Destroy();
  description_.Destroy();
  organization_id_.Destroy();
  entrypoint_.Destroy();
  public_namespace_.Destroy();
  first_run_.Destroy();
}

void Module::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Module::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Module)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  versions_.Clear();
  models_.Clear();
  module_id_.ClearToEmpty();
  name_.ClearToEmpty();
  url_.ClearToEmpty();
  description_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  entrypoint_.ClearToEmpty();
  public_namespace_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    first_run_.ClearNonDefaultToEmpty();
  }
  ::memset(&total_robot_usage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visibility_) -
      reinterpret_cast<char*>(&total_robot_usage_)) + sizeof(visibility_));
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Module::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_id = 1 [json_name = "moduleId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.module_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.name"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.Visibility visibility = 3 [json_name = "visibility"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_visibility(static_cast<::viam::app::v1::Visibility>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.VersionHistory versions = 4 [json_name = "versions"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_versions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string url = 5 [json_name = "url"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.url"));
        } else
          goto handle_unusual;
        continue;
      // string description = 6 [json_name = "description"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.description"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Model models = 7 [json_name = "models"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 total_robot_usage = 8 [json_name = "totalRobotUsage"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          total_robot_usage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 total_organization_usage = 9 [json_name = "totalOrganizationUsage"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          total_organization_usage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 10 [json_name = "organizationId"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string entrypoint = 11 [json_name = "entrypoint"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_entrypoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.entrypoint"));
        } else
          goto handle_unusual;
        continue;
      // string public_namespace = 12 [json_name = "publicNamespace"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_public_namespace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.public_namespace"));
        } else
          goto handle_unusual;
        continue;
      // optional string first_run = 13 [json_name = "firstRun"];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_first_run();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Module.first_run"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Module::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Module)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_id().data(), static_cast<int>(this->_internal_module_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.module_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .viam.app.v1.Visibility visibility = 3 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_visibility(), target);
  }

  // repeated .viam.app.v1.VersionHistory versions = 4 [json_name = "versions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_versions_size()); i < n; i++) {
    const auto& repfield = this->_internal_versions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string url = 5 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.url");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_url(), target);
  }

  // string description = 6 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.description");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_description(), target);
  }

  // repeated .viam.app.v1.Model models = 7 [json_name = "models"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_models_size()); i < n; i++) {
    const auto& repfield = this->_internal_models(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int64 total_robot_usage = 8 [json_name = "totalRobotUsage"];
  if (this->_internal_total_robot_usage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_total_robot_usage(), target);
  }

  // int64 total_organization_usage = 9 [json_name = "totalOrganizationUsage"];
  if (this->_internal_total_organization_usage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(9, this->_internal_total_organization_usage(), target);
  }

  // string organization_id = 10 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.organization_id");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_organization_id(), target);
  }

  // string entrypoint = 11 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entrypoint().data(), static_cast<int>(this->_internal_entrypoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.entrypoint");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_entrypoint(), target);
  }

  // string public_namespace = 12 [json_name = "publicNamespace"];
  if (!this->_internal_public_namespace().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_namespace().data(), static_cast<int>(this->_internal_public_namespace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.public_namespace");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_public_namespace(), target);
  }

  // optional string first_run = 13 [json_name = "firstRun"];
  if (_internal_has_first_run()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_first_run().data(), static_cast<int>(this->_internal_first_run().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Module.first_run");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_first_run(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Module)
  return target;
}

size_t Module::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Module)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.VersionHistory versions = 4 [json_name = "versions"];
  total_size += 1UL * this->_internal_versions_size();
  for (const auto& msg : this->versions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .viam.app.v1.Model models = 7 [json_name = "models"];
  total_size += 1UL * this->_internal_models_size();
  for (const auto& msg : this->models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string module_id = 1 [json_name = "moduleId"];
  if (!this->_internal_module_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string url = 5 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string description = 6 [json_name = "description"];
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string organization_id = 10 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string entrypoint = 11 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entrypoint());
  }

  // string public_namespace = 12 [json_name = "publicNamespace"];
  if (!this->_internal_public_namespace().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_public_namespace());
  }

  // optional string first_run = 13 [json_name = "firstRun"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_first_run());
  }

  // int64 total_robot_usage = 8 [json_name = "totalRobotUsage"];
  if (this->_internal_total_robot_usage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_total_robot_usage());
  }

  // int64 total_organization_usage = 9 [json_name = "totalOrganizationUsage"];
  if (this->_internal_total_organization_usage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_total_organization_usage());
  }

  // .viam.app.v1.Visibility visibility = 3 [json_name = "visibility"];
  if (this->_internal_visibility() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_visibility());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Module::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Module::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Module::GetClassData() const { return &_class_data_; }

void Module::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Module *>(to)->MergeFrom(
      static_cast<const Module &>(from));
}


void Module::MergeFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Module)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  versions_.MergeFrom(from.versions_);
  models_.MergeFrom(from.models_);
  if (!from._internal_module_id().empty()) {
    _internal_set_module_id(from._internal_module_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_entrypoint().empty()) {
    _internal_set_entrypoint(from._internal_entrypoint());
  }
  if (!from._internal_public_namespace().empty()) {
    _internal_set_public_namespace(from._internal_public_namespace());
  }
  if (from._internal_has_first_run()) {
    _internal_set_first_run(from._internal_first_run());
  }
  if (from._internal_total_robot_usage() != 0) {
    _internal_set_total_robot_usage(from._internal_total_robot_usage());
  }
  if (from._internal_total_organization_usage() != 0) {
    _internal_set_total_organization_usage(from._internal_total_organization_usage());
  }
  if (from._internal_visibility() != 0) {
    _internal_set_visibility(from._internal_visibility());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Module::CopyFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Module::IsInitialized() const {
  return true;
}

void Module::InternalSwap(Module* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  versions_.InternalSwap(&other->versions_);
  models_.InternalSwap(&other->models_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &module_id_, lhs_arena,
      &other->module_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &entrypoint_, lhs_arena,
      &other->entrypoint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &public_namespace_, lhs_arena,
      &other->public_namespace_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &first_run_, lhs_arena,
      &other->first_run_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Module, visibility_)
      + sizeof(Module::visibility_)
      - PROTOBUF_FIELD_OFFSET(Module, total_robot_usage_)>(
          reinterpret_cast<char*>(&total_robot_usage_),
          reinterpret_cast<char*>(&other->total_robot_usage_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Module::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[174]);
}

// ===================================================================

class VersionHistory::_Internal {
 public:
  using HasBits = decltype(std::declval<VersionHistory>()._has_bits_);
  static void set_has_first_run(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

VersionHistory::VersionHistory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  files_(arena),
  models_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.VersionHistory)
}
VersionHistory::VersionHistory(const VersionHistory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      files_(from.files_),
      models_(from.models_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  entrypoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    entrypoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entrypoint().empty()) {
    entrypoint_.Set(from._internal_entrypoint(), 
      GetArenaForAllocation());
  }
  first_run_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    first_run_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_first_run()) {
    first_run_.Set(from._internal_first_run(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.VersionHistory)
}

inline void VersionHistory::SharedCtor() {
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
entrypoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  entrypoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
first_run_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  first_run_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VersionHistory::~VersionHistory() {
  // @@protoc_insertion_point(destructor:viam.app.v1.VersionHistory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VersionHistory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  version_.Destroy();
  entrypoint_.Destroy();
  first_run_.Destroy();
}

void VersionHistory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VersionHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.VersionHistory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  models_.Clear();
  version_.ClearToEmpty();
  entrypoint_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    first_run_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VersionHistory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string version = 1 [json_name = "version"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.VersionHistory.version"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Uploads files = 2 [json_name = "files"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.Model models = 3 [json_name = "models"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string entrypoint = 4 [json_name = "entrypoint"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_entrypoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.VersionHistory.entrypoint"));
        } else
          goto handle_unusual;
        continue;
      // optional string first_run = 5 [json_name = "firstRun"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_first_run();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.VersionHistory.first_run"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VersionHistory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.VersionHistory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.VersionHistory.version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_version(), target);
  }

  // repeated .viam.app.v1.Uploads files = 2 [json_name = "files"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_files_size()); i < n; i++) {
    const auto& repfield = this->_internal_files(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.Model models = 3 [json_name = "models"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_models_size()); i < n; i++) {
    const auto& repfield = this->_internal_models(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string entrypoint = 4 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entrypoint().data(), static_cast<int>(this->_internal_entrypoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.VersionHistory.entrypoint");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_entrypoint(), target);
  }

  // optional string first_run = 5 [json_name = "firstRun"];
  if (_internal_has_first_run()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_first_run().data(), static_cast<int>(this->_internal_first_run().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.VersionHistory.first_run");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_first_run(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.VersionHistory)
  return target;
}

size_t VersionHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.VersionHistory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Uploads files = 2 [json_name = "files"];
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .viam.app.v1.Model models = 3 [json_name = "models"];
  total_size += 1UL * this->_internal_models_size();
  for (const auto& msg : this->models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string version = 1 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string entrypoint = 4 [json_name = "entrypoint"];
  if (!this->_internal_entrypoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entrypoint());
  }

  // optional string first_run = 5 [json_name = "firstRun"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_first_run());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VersionHistory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    VersionHistory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VersionHistory::GetClassData() const { return &_class_data_; }

void VersionHistory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<VersionHistory *>(to)->MergeFrom(
      static_cast<const VersionHistory &>(from));
}


void VersionHistory::MergeFrom(const VersionHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.VersionHistory)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  models_.MergeFrom(from.models_);
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  if (!from._internal_entrypoint().empty()) {
    _internal_set_entrypoint(from._internal_entrypoint());
  }
  if (from._internal_has_first_run()) {
    _internal_set_first_run(from._internal_first_run());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VersionHistory::CopyFrom(const VersionHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.VersionHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionHistory::IsInitialized() const {
  return true;
}

void VersionHistory::InternalSwap(VersionHistory* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  files_.InternalSwap(&other->files_);
  models_.InternalSwap(&other->models_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &entrypoint_, lhs_arena,
      &other->entrypoint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &first_run_, lhs_arena,
      &other->first_run_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata VersionHistory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[175]);
}

// ===================================================================

class Uploads::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& uploaded_at(const Uploads* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Uploads::_Internal::uploaded_at(const Uploads* msg) {
  return *msg->uploaded_at_;
}
void Uploads::clear_uploaded_at() {
  if (GetArenaForAllocation() == nullptr && uploaded_at_ != nullptr) {
    delete uploaded_at_;
  }
  uploaded_at_ = nullptr;
}
Uploads::Uploads(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Uploads)
}
Uploads::Uploads(const Uploads& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  platform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    platform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_platform().empty()) {
    platform_.Set(from._internal_platform(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_uploaded_at()) {
    uploaded_at_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.uploaded_at_);
  } else {
    uploaded_at_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Uploads)
}

inline void Uploads::SharedCtor() {
platform_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  platform_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
uploaded_at_ = nullptr;
}

Uploads::~Uploads() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Uploads)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Uploads::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  platform_.Destroy();
  if (this != internal_default_instance()) delete uploaded_at_;
}

void Uploads::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Uploads::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Uploads)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  platform_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && uploaded_at_ != nullptr) {
    delete uploaded_at_;
  }
  uploaded_at_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Uploads::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string platform = 1 [json_name = "platform"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_platform();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Uploads.platform"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp uploaded_at = 2 [json_name = "uploadedAt"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_uploaded_at(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Uploads::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Uploads)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string platform = 1 [json_name = "platform"];
  if (!this->_internal_platform().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_platform().data(), static_cast<int>(this->_internal_platform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Uploads.platform");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_platform(), target);
  }

  // .google.protobuf.Timestamp uploaded_at = 2 [json_name = "uploadedAt"];
  if (this->_internal_has_uploaded_at()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::uploaded_at(this),
        _Internal::uploaded_at(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Uploads)
  return target;
}

size_t Uploads::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Uploads)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string platform = 1 [json_name = "platform"];
  if (!this->_internal_platform().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_platform());
  }

  // .google.protobuf.Timestamp uploaded_at = 2 [json_name = "uploadedAt"];
  if (this->_internal_has_uploaded_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *uploaded_at_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Uploads::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Uploads::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Uploads::GetClassData() const { return &_class_data_; }

void Uploads::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Uploads *>(to)->MergeFrom(
      static_cast<const Uploads &>(from));
}


void Uploads::MergeFrom(const Uploads& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Uploads)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_platform().empty()) {
    _internal_set_platform(from._internal_platform());
  }
  if (from._internal_has_uploaded_at()) {
    _internal_mutable_uploaded_at()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_uploaded_at());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Uploads::CopyFrom(const Uploads& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Uploads)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uploads::IsInitialized() const {
  return true;
}

void Uploads::InternalSwap(Uploads* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &platform_, lhs_arena,
      &other->platform_, rhs_arena
  );
  swap(uploaded_at_, other->uploaded_at_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Uploads::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[176]);
}

// ===================================================================

class ListModulesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ListModulesRequest>()._has_bits_);
  static void set_has_organization_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_include_markdown_documentation(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ListModulesRequest::ListModulesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListModulesRequest)
}
ListModulesRequest::ListModulesRequest(const ListModulesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_organization_id()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  include_markdown_documentation_ = from.include_markdown_documentation_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListModulesRequest)
}

inline void ListModulesRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
include_markdown_documentation_ = false;
}

ListModulesRequest::~ListModulesRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListModulesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListModulesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void ListModulesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListModulesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListModulesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    organization_id_.ClearNonDefaultToEmpty();
  }
  include_markdown_documentation_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListModulesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListModulesRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // optional bool include_markdown_documentation = 2 [json_name = "includeMarkdownDocumentation"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_include_markdown_documentation(&has_bits);
          include_markdown_documentation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListModulesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListModulesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string organization_id = 1 [json_name = "organizationId"];
  if (_internal_has_organization_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListModulesRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // optional bool include_markdown_documentation = 2 [json_name = "includeMarkdownDocumentation"];
  if (_internal_has_include_markdown_documentation()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_include_markdown_documentation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListModulesRequest)
  return target;
}

size_t ListModulesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListModulesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string organization_id = 1 [json_name = "organizationId"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_organization_id());
    }

    // optional bool include_markdown_documentation = 2 [json_name = "includeMarkdownDocumentation"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListModulesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListModulesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListModulesRequest::GetClassData() const { return &_class_data_; }

void ListModulesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListModulesRequest *>(to)->MergeFrom(
      static_cast<const ListModulesRequest &>(from));
}


void ListModulesRequest::MergeFrom(const ListModulesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListModulesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_organization_id(from._internal_organization_id());
    }
    if (cached_has_bits & 0x00000002u) {
      include_markdown_documentation_ = from.include_markdown_documentation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListModulesRequest::CopyFrom(const ListModulesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListModulesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListModulesRequest::IsInitialized() const {
  return true;
}

void ListModulesRequest::InternalSwap(ListModulesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  swap(include_markdown_documentation_, other->include_markdown_documentation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListModulesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[177]);
}

// ===================================================================

class ListModulesResponse::_Internal {
 public:
};

ListModulesResponse::ListModulesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  modules_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListModulesResponse)
}
ListModulesResponse::ListModulesResponse(const ListModulesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      modules_(from.modules_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListModulesResponse)
}

inline void ListModulesResponse::SharedCtor() {
}

ListModulesResponse::~ListModulesResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListModulesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListModulesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListModulesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListModulesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListModulesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  modules_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListModulesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Module modules = 1 [json_name = "modules"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_modules(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListModulesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListModulesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Module modules = 1 [json_name = "modules"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_modules_size()); i < n; i++) {
    const auto& repfield = this->_internal_modules(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListModulesResponse)
  return target;
}

size_t ListModulesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListModulesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Module modules = 1 [json_name = "modules"];
  total_size += 1UL * this->_internal_modules_size();
  for (const auto& msg : this->modules_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListModulesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListModulesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListModulesResponse::GetClassData() const { return &_class_data_; }

void ListModulesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListModulesResponse *>(to)->MergeFrom(
      static_cast<const ListModulesResponse &>(from));
}


void ListModulesResponse::MergeFrom(const ListModulesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListModulesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  modules_.MergeFrom(from.modules_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListModulesResponse::CopyFrom(const ListModulesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListModulesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListModulesResponse::IsInitialized() const {
  return true;
}

void ListModulesResponse::InternalSwap(ListModulesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  modules_.InternalSwap(&other->modules_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListModulesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[178]);
}

// ===================================================================

class GetUserIDByEmailRequest::_Internal {
 public:
};

GetUserIDByEmailRequest::GetUserIDByEmailRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetUserIDByEmailRequest)
}
GetUserIDByEmailRequest::GetUserIDByEmailRequest(const GetUserIDByEmailRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(from._internal_email(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetUserIDByEmailRequest)
}

inline void GetUserIDByEmailRequest::SharedCtor() {
email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUserIDByEmailRequest::~GetUserIDByEmailRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetUserIDByEmailRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserIDByEmailRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  email_.Destroy();
}

void GetUserIDByEmailRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetUserIDByEmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetUserIDByEmailRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserIDByEmailRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string email = 1 [json_name = "email"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetUserIDByEmailRequest.email"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserIDByEmailRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetUserIDByEmailRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetUserIDByEmailRequest.email");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetUserIDByEmailRequest)
  return target;
}

size_t GetUserIDByEmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetUserIDByEmailRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email = 1 [json_name = "email"];
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserIDByEmailRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetUserIDByEmailRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserIDByEmailRequest::GetClassData() const { return &_class_data_; }

void GetUserIDByEmailRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetUserIDByEmailRequest *>(to)->MergeFrom(
      static_cast<const GetUserIDByEmailRequest &>(from));
}


void GetUserIDByEmailRequest::MergeFrom(const GetUserIDByEmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetUserIDByEmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email().empty()) {
    _internal_set_email(from._internal_email());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserIDByEmailRequest::CopyFrom(const GetUserIDByEmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetUserIDByEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserIDByEmailRequest::IsInitialized() const {
  return true;
}

void GetUserIDByEmailRequest::InternalSwap(GetUserIDByEmailRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &email_, lhs_arena,
      &other->email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserIDByEmailRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[179]);
}

// ===================================================================

class GetUserIDByEmailResponse::_Internal {
 public:
};

GetUserIDByEmailResponse::GetUserIDByEmailResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetUserIDByEmailResponse)
}
GetUserIDByEmailResponse::GetUserIDByEmailResponse(const GetUserIDByEmailResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    user_id_.Set(from._internal_user_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetUserIDByEmailResponse)
}

inline void GetUserIDByEmailResponse::SharedCtor() {
user_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  user_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUserIDByEmailResponse::~GetUserIDByEmailResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetUserIDByEmailResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserIDByEmailResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  user_id_.Destroy();
}

void GetUserIDByEmailResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetUserIDByEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetUserIDByEmailResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserIDByEmailResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1 [json_name = "userId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetUserIDByEmailResponse.user_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserIDByEmailResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetUserIDByEmailResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetUserIDByEmailResponse.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetUserIDByEmailResponse)
  return target;
}

size_t GetUserIDByEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetUserIDByEmailResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserIDByEmailResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetUserIDByEmailResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserIDByEmailResponse::GetClassData() const { return &_class_data_; }

void GetUserIDByEmailResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetUserIDByEmailResponse *>(to)->MergeFrom(
      static_cast<const GetUserIDByEmailResponse &>(from));
}


void GetUserIDByEmailResponse::MergeFrom(const GetUserIDByEmailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetUserIDByEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserIDByEmailResponse::CopyFrom(const GetUserIDByEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetUserIDByEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserIDByEmailResponse::IsInitialized() const {
  return true;
}

void GetUserIDByEmailResponse::InternalSwap(GetUserIDByEmailResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &user_id_, lhs_arena,
      &other->user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserIDByEmailResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[180]);
}

// ===================================================================

class ListOrganizationsByUserRequest::_Internal {
 public:
};

ListOrganizationsByUserRequest::ListOrganizationsByUserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationsByUserRequest)
}
ListOrganizationsByUserRequest::ListOrganizationsByUserRequest(const ListOrganizationsByUserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    user_id_.Set(from._internal_user_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationsByUserRequest)
}

inline void ListOrganizationsByUserRequest::SharedCtor() {
user_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  user_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListOrganizationsByUserRequest::~ListOrganizationsByUserRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListOrganizationsByUserRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListOrganizationsByUserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  user_id_.Destroy();
}

void ListOrganizationsByUserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListOrganizationsByUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListOrganizationsByUserRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListOrganizationsByUserRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1 [json_name = "userId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListOrganizationsByUserRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListOrganizationsByUserRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListOrganizationsByUserRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListOrganizationsByUserRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListOrganizationsByUserRequest)
  return target;
}

size_t ListOrganizationsByUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListOrganizationsByUserRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationsByUserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListOrganizationsByUserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationsByUserRequest::GetClassData() const { return &_class_data_; }

void ListOrganizationsByUserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListOrganizationsByUserRequest *>(to)->MergeFrom(
      static_cast<const ListOrganizationsByUserRequest &>(from));
}


void ListOrganizationsByUserRequest::MergeFrom(const ListOrganizationsByUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListOrganizationsByUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _internal_set_user_id(from._internal_user_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListOrganizationsByUserRequest::CopyFrom(const ListOrganizationsByUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListOrganizationsByUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOrganizationsByUserRequest::IsInitialized() const {
  return true;
}

void ListOrganizationsByUserRequest::InternalSwap(ListOrganizationsByUserRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &user_id_, lhs_arena,
      &other->user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationsByUserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[181]);
}

// ===================================================================

class OrgDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<OrgDetails>()._has_bits_);
  static void set_has_org_cid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_public_namespace(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

OrgDetails::OrgDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrgDetails)
}
OrgDetails::OrgDetails(const OrgDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  org_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_name().empty()) {
    org_name_.Set(from._internal_org_name(), 
      GetArenaForAllocation());
  }
  org_cid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_cid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_org_cid()) {
    org_cid_.Set(from._internal_org_cid(), 
      GetArenaForAllocation());
  }
  public_namespace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    public_namespace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_public_namespace()) {
    public_namespace_.Set(from._internal_public_namespace(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrgDetails)
}

inline void OrgDetails::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
org_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
org_cid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_cid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
public_namespace_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  public_namespace_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrgDetails::~OrgDetails() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OrgDetails)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrgDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
  org_name_.Destroy();
  org_cid_.Destroy();
  public_namespace_.Destroy();
}

void OrgDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrgDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OrgDetails)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  org_name_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      org_cid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      public_namespace_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrgDetails::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrgDetails.org_id"));
        } else
          goto handle_unusual;
        continue;
      // string org_name = 2 [json_name = "orgName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_org_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrgDetails.org_name"));
        } else
          goto handle_unusual;
        continue;
      // optional string org_cid = 3 [json_name = "orgCid"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_org_cid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrgDetails.org_cid"));
        } else
          goto handle_unusual;
        continue;
      // optional string public_namespace = 4 [json_name = "publicNamespace"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_public_namespace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrgDetails.public_namespace"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrgDetails::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OrgDetails)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrgDetails.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string org_name = 2 [json_name = "orgName"];
  if (!this->_internal_org_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_name().data(), static_cast<int>(this->_internal_org_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrgDetails.org_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_org_name(), target);
  }

  // optional string org_cid = 3 [json_name = "orgCid"];
  if (_internal_has_org_cid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_cid().data(), static_cast<int>(this->_internal_org_cid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrgDetails.org_cid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_org_cid(), target);
  }

  // optional string public_namespace = 4 [json_name = "publicNamespace"];
  if (_internal_has_public_namespace()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_namespace().data(), static_cast<int>(this->_internal_public_namespace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrgDetails.public_namespace");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_public_namespace(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OrgDetails)
  return target;
}

size_t OrgDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OrgDetails)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string org_name = 2 [json_name = "orgName"];
  if (!this->_internal_org_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_name());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string org_cid = 3 [json_name = "orgCid"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_org_cid());
    }

    // optional string public_namespace = 4 [json_name = "publicNamespace"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_public_namespace());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrgDetails::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrgDetails::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrgDetails::GetClassData() const { return &_class_data_; }

void OrgDetails::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrgDetails *>(to)->MergeFrom(
      static_cast<const OrgDetails &>(from));
}


void OrgDetails::MergeFrom(const OrgDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OrgDetails)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (!from._internal_org_name().empty()) {
    _internal_set_org_name(from._internal_org_name());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_org_cid(from._internal_org_cid());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_public_namespace(from._internal_public_namespace());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrgDetails::CopyFrom(const OrgDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OrgDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrgDetails::IsInitialized() const {
  return true;
}

void OrgDetails::InternalSwap(OrgDetails* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_name_, lhs_arena,
      &other->org_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_cid_, lhs_arena,
      &other->org_cid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &public_namespace_, lhs_arena,
      &other->public_namespace_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrgDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[182]);
}

// ===================================================================

class ListOrganizationsByUserResponse::_Internal {
 public:
};

ListOrganizationsByUserResponse::ListOrganizationsByUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  orgs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationsByUserResponse)
}
ListOrganizationsByUserResponse::ListOrganizationsByUserResponse(const ListOrganizationsByUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      orgs_(from.orgs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationsByUserResponse)
}

inline void ListOrganizationsByUserResponse::SharedCtor() {
}

ListOrganizationsByUserResponse::~ListOrganizationsByUserResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListOrganizationsByUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListOrganizationsByUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListOrganizationsByUserResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListOrganizationsByUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListOrganizationsByUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  orgs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListOrganizationsByUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.OrgDetails orgs = 1 [json_name = "orgs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_orgs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListOrganizationsByUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListOrganizationsByUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.OrgDetails orgs = 1 [json_name = "orgs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_orgs_size()); i < n; i++) {
    const auto& repfield = this->_internal_orgs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListOrganizationsByUserResponse)
  return target;
}

size_t ListOrganizationsByUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListOrganizationsByUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.OrgDetails orgs = 1 [json_name = "orgs"];
  total_size += 1UL * this->_internal_orgs_size();
  for (const auto& msg : this->orgs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationsByUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListOrganizationsByUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationsByUserResponse::GetClassData() const { return &_class_data_; }

void ListOrganizationsByUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListOrganizationsByUserResponse *>(to)->MergeFrom(
      static_cast<const ListOrganizationsByUserResponse &>(from));
}


void ListOrganizationsByUserResponse::MergeFrom(const ListOrganizationsByUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListOrganizationsByUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  orgs_.MergeFrom(from.orgs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListOrganizationsByUserResponse::CopyFrom(const ListOrganizationsByUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListOrganizationsByUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOrganizationsByUserResponse::IsInitialized() const {
  return true;
}

void ListOrganizationsByUserResponse::InternalSwap(ListOrganizationsByUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  orgs_.InternalSwap(&other->orgs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationsByUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[183]);
}

// ===================================================================

class SearchOrganizationsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SearchOrganizationsRequest>()._has_bits_);
  static void set_has_org_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_org_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_cid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_public_namespace(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

SearchOrganizationsRequest::SearchOrganizationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.SearchOrganizationsRequest)
}
SearchOrganizationsRequest::SearchOrganizationsRequest(const SearchOrganizationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_org_id()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  org_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_org_name()) {
    org_name_.Set(from._internal_org_name(), 
      GetArenaForAllocation());
  }
  cid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_cid()) {
    cid_.Set(from._internal_cid(), 
      GetArenaForAllocation());
  }
  public_namespace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    public_namespace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_public_namespace()) {
    public_namespace_.Set(from._internal_public_namespace(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.SearchOrganizationsRequest)
}

inline void SearchOrganizationsRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
org_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
cid_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cid_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
public_namespace_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  public_namespace_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SearchOrganizationsRequest::~SearchOrganizationsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.SearchOrganizationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SearchOrganizationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
  org_name_.Destroy();
  cid_.Destroy();
  public_namespace_.Destroy();
}

void SearchOrganizationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SearchOrganizationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.SearchOrganizationsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      org_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      org_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      cid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      public_namespace_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchOrganizationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.SearchOrganizationsRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      // optional string org_name = 2 [json_name = "orgName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_org_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.SearchOrganizationsRequest.org_name"));
        } else
          goto handle_unusual;
        continue;
      // optional string cid = 3 [json_name = "cid"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_cid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.SearchOrganizationsRequest.cid"));
        } else
          goto handle_unusual;
        continue;
      // optional string public_namespace = 4 [json_name = "publicNamespace"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_public_namespace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.SearchOrganizationsRequest.public_namespace"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchOrganizationsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.SearchOrganizationsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string org_id = 1 [json_name = "orgId"];
  if (_internal_has_org_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.SearchOrganizationsRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // optional string org_name = 2 [json_name = "orgName"];
  if (_internal_has_org_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_name().data(), static_cast<int>(this->_internal_org_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.SearchOrganizationsRequest.org_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_org_name(), target);
  }

  // optional string cid = 3 [json_name = "cid"];
  if (_internal_has_cid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cid().data(), static_cast<int>(this->_internal_cid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.SearchOrganizationsRequest.cid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_cid(), target);
  }

  // optional string public_namespace = 4 [json_name = "publicNamespace"];
  if (_internal_has_public_namespace()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_public_namespace().data(), static_cast<int>(this->_internal_public_namespace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.SearchOrganizationsRequest.public_namespace");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_public_namespace(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.SearchOrganizationsRequest)
  return target;
}

size_t SearchOrganizationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.SearchOrganizationsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string org_id = 1 [json_name = "orgId"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_org_id());
    }

    // optional string org_name = 2 [json_name = "orgName"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_org_name());
    }

    // optional string cid = 3 [json_name = "cid"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_cid());
    }

    // optional string public_namespace = 4 [json_name = "publicNamespace"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_public_namespace());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchOrganizationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SearchOrganizationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchOrganizationsRequest::GetClassData() const { return &_class_data_; }

void SearchOrganizationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SearchOrganizationsRequest *>(to)->MergeFrom(
      static_cast<const SearchOrganizationsRequest &>(from));
}


void SearchOrganizationsRequest::MergeFrom(const SearchOrganizationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.SearchOrganizationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_org_id(from._internal_org_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_org_name(from._internal_org_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_cid(from._internal_cid());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_public_namespace(from._internal_public_namespace());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchOrganizationsRequest::CopyFrom(const SearchOrganizationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.SearchOrganizationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchOrganizationsRequest::IsInitialized() const {
  return true;
}

void SearchOrganizationsRequest::InternalSwap(SearchOrganizationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_name_, lhs_arena,
      &other->org_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &cid_, lhs_arena,
      &other->cid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &public_namespace_, lhs_arena,
      &other->public_namespace_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchOrganizationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[184]);
}

// ===================================================================

class SearchOrganizationsResponse::_Internal {
 public:
};

SearchOrganizationsResponse::SearchOrganizationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  organizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.SearchOrganizationsResponse)
}
SearchOrganizationsResponse::SearchOrganizationsResponse(const SearchOrganizationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.SearchOrganizationsResponse)
}

inline void SearchOrganizationsResponse::SharedCtor() {
}

SearchOrganizationsResponse::~SearchOrganizationsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.SearchOrganizationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SearchOrganizationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SearchOrganizationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SearchOrganizationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.SearchOrganizationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchOrganizationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.OrgDetails organizations = 1 [json_name = "organizations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_organizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchOrganizationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.SearchOrganizationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.OrgDetails organizations = 1 [json_name = "organizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_organizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_organizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.SearchOrganizationsResponse)
  return target;
}

size_t SearchOrganizationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.SearchOrganizationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.OrgDetails organizations = 1 [json_name = "organizations"];
  total_size += 1UL * this->_internal_organizations_size();
  for (const auto& msg : this->organizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchOrganizationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SearchOrganizationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchOrganizationsResponse::GetClassData() const { return &_class_data_; }

void SearchOrganizationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SearchOrganizationsResponse *>(to)->MergeFrom(
      static_cast<const SearchOrganizationsResponse &>(from));
}


void SearchOrganizationsResponse::MergeFrom(const SearchOrganizationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.SearchOrganizationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  organizations_.MergeFrom(from.organizations_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchOrganizationsResponse::CopyFrom(const SearchOrganizationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.SearchOrganizationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchOrganizationsResponse::IsInitialized() const {
  return true;
}

void SearchOrganizationsResponse::InternalSwap(SearchOrganizationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  organizations_.InternalSwap(&other->organizations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchOrganizationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[185]);
}

// ===================================================================

class CreateKeyRequest::_Internal {
 public:
};

CreateKeyRequest::CreateKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  authorizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateKeyRequest)
}
CreateKeyRequest::CreateKeyRequest(const CreateKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      authorizations_(from.authorizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateKeyRequest)
}

inline void CreateKeyRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateKeyRequest::~CreateKeyRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateKeyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void CreateKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateKeyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorizations_.Clear();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateKeyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Authorization authorizations = 1 [json_name = "authorizations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_authorizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateKeyRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateKeyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateKeyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Authorization authorizations = 1 [json_name = "authorizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_authorizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_authorizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateKeyRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateKeyRequest)
  return target;
}

size_t CreateKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateKeyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Authorization authorizations = 1 [json_name = "authorizations"];
  total_size += 1UL * this->_internal_authorizations_size();
  for (const auto& msg : this->authorizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateKeyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateKeyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateKeyRequest::GetClassData() const { return &_class_data_; }

void CreateKeyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateKeyRequest *>(to)->MergeFrom(
      static_cast<const CreateKeyRequest &>(from));
}


void CreateKeyRequest::MergeFrom(const CreateKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  authorizations_.MergeFrom(from.authorizations_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateKeyRequest::CopyFrom(const CreateKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateKeyRequest::IsInitialized() const {
  return true;
}

void CreateKeyRequest::InternalSwap(CreateKeyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  authorizations_.InternalSwap(&other->authorizations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[186]);
}

// ===================================================================

class CreateKeyResponse::_Internal {
 public:
};

CreateKeyResponse::CreateKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateKeyResponse)
}
CreateKeyResponse::CreateKeyResponse(const CreateKeyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(from._internal_key(), 
      GetArenaForAllocation());
  }
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateKeyResponse)
}

inline void CreateKeyResponse::SharedCtor() {
key_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateKeyResponse::~CreateKeyResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateKeyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateKeyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.Destroy();
  id_.Destroy();
}

void CreateKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateKeyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty();
  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateKeyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1 [json_name = "key"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateKeyResponse.key"));
        } else
          goto handle_unusual;
        continue;
      // string id = 2 [json_name = "id"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateKeyResponse.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateKeyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateKeyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateKeyResponse.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string id = 2 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateKeyResponse.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateKeyResponse)
  return target;
}

size_t CreateKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateKeyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string id = 2 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateKeyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateKeyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateKeyResponse::GetClassData() const { return &_class_data_; }

void CreateKeyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateKeyResponse *>(to)->MergeFrom(
      static_cast<const CreateKeyResponse &>(from));
}


void CreateKeyResponse::MergeFrom(const CreateKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateKeyResponse::CopyFrom(const CreateKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateKeyResponse::IsInitialized() const {
  return true;
}

void CreateKeyResponse::InternalSwap(CreateKeyResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateKeyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[187]);
}

// ===================================================================

class DeleteKeyRequest::_Internal {
 public:
};

DeleteKeyRequest::DeleteKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteKeyRequest)
}
DeleteKeyRequest::DeleteKeyRequest(const DeleteKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteKeyRequest)
}

inline void DeleteKeyRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteKeyRequest::~DeleteKeyRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteKeyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void DeleteKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteKeyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteKeyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteKeyRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteKeyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteKeyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteKeyRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteKeyRequest)
  return target;
}

size_t DeleteKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteKeyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteKeyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteKeyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteKeyRequest::GetClassData() const { return &_class_data_; }

void DeleteKeyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteKeyRequest *>(to)->MergeFrom(
      static_cast<const DeleteKeyRequest &>(from));
}


void DeleteKeyRequest::MergeFrom(const DeleteKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteKeyRequest::CopyFrom(const DeleteKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteKeyRequest::IsInitialized() const {
  return true;
}

void DeleteKeyRequest::InternalSwap(DeleteKeyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[188]);
}

// ===================================================================

class DeleteKeyResponse::_Internal {
 public:
};

DeleteKeyResponse::DeleteKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteKeyResponse)
}
DeleteKeyResponse::DeleteKeyResponse(const DeleteKeyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteKeyResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteKeyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteKeyResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteKeyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[189]);
}

// ===================================================================

class RenameKeyRequest::_Internal {
 public:
};

RenameKeyRequest::RenameKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RenameKeyRequest)
}
RenameKeyRequest::RenameKeyRequest(const RenameKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RenameKeyRequest)
}

inline void RenameKeyRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RenameKeyRequest::~RenameKeyRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RenameKeyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RenameKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
}

void RenameKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RenameKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RenameKeyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RenameKeyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RenameKeyRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RenameKeyRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RenameKeyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RenameKeyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RenameKeyRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RenameKeyRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RenameKeyRequest)
  return target;
}

size_t RenameKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RenameKeyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RenameKeyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RenameKeyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RenameKeyRequest::GetClassData() const { return &_class_data_; }

void RenameKeyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RenameKeyRequest *>(to)->MergeFrom(
      static_cast<const RenameKeyRequest &>(from));
}


void RenameKeyRequest::MergeFrom(const RenameKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RenameKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RenameKeyRequest::CopyFrom(const RenameKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RenameKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameKeyRequest::IsInitialized() const {
  return true;
}

void RenameKeyRequest::InternalSwap(RenameKeyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RenameKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[190]);
}

// ===================================================================

class RenameKeyResponse::_Internal {
 public:
};

RenameKeyResponse::RenameKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RenameKeyResponse)
}
RenameKeyResponse::RenameKeyResponse(const RenameKeyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RenameKeyResponse)
}

inline void RenameKeyResponse::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RenameKeyResponse::~RenameKeyResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RenameKeyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RenameKeyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
}

void RenameKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RenameKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RenameKeyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RenameKeyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RenameKeyResponse.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RenameKeyResponse.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RenameKeyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RenameKeyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RenameKeyResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RenameKeyResponse.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RenameKeyResponse)
  return target;
}

size_t RenameKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RenameKeyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RenameKeyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RenameKeyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RenameKeyResponse::GetClassData() const { return &_class_data_; }

void RenameKeyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RenameKeyResponse *>(to)->MergeFrom(
      static_cast<const RenameKeyResponse &>(from));
}


void RenameKeyResponse::MergeFrom(const RenameKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RenameKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RenameKeyResponse::CopyFrom(const RenameKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RenameKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameKeyResponse::IsInitialized() const {
  return true;
}

void RenameKeyResponse::InternalSwap(RenameKeyResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RenameKeyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[191]);
}

// ===================================================================

class AuthorizationDetails::_Internal {
 public:
};

AuthorizationDetails::AuthorizationDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.AuthorizationDetails)
}
AuthorizationDetails::AuthorizationDetails(const AuthorizationDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  authorization_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    authorization_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authorization_type().empty()) {
    authorization_type_.Set(from._internal_authorization_type(), 
      GetArenaForAllocation());
  }
  authorization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    authorization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authorization_id().empty()) {
    authorization_id_.Set(from._internal_authorization_id(), 
      GetArenaForAllocation());
  }
  resource_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_type().empty()) {
    resource_type_.Set(from._internal_resource_type(), 
      GetArenaForAllocation());
  }
  resource_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resource_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resource_id().empty()) {
    resource_id_.Set(from._internal_resource_id(), 
      GetArenaForAllocation());
  }
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.AuthorizationDetails)
}

inline void AuthorizationDetails::SharedCtor() {
authorization_type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  authorization_type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
authorization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  authorization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resource_type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resource_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resource_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthorizationDetails::~AuthorizationDetails() {
  // @@protoc_insertion_point(destructor:viam.app.v1.AuthorizationDetails)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthorizationDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  authorization_type_.Destroy();
  authorization_id_.Destroy();
  resource_type_.Destroy();
  resource_id_.Destroy();
  org_id_.Destroy();
}

void AuthorizationDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AuthorizationDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.AuthorizationDetails)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorization_type_.ClearToEmpty();
  authorization_id_.ClearToEmpty();
  resource_type_.ClearToEmpty();
  resource_id_.ClearToEmpty();
  org_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthorizationDetails::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string authorization_type = 1 [json_name = "authorizationType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_authorization_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.AuthorizationDetails.authorization_type"));
        } else
          goto handle_unusual;
        continue;
      // string authorization_id = 2 [json_name = "authorizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_authorization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.AuthorizationDetails.authorization_id"));
        } else
          goto handle_unusual;
        continue;
      // string resource_type = 3 [json_name = "resourceType"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_resource_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.AuthorizationDetails.resource_type"));
        } else
          goto handle_unusual;
        continue;
      // string resource_id = 4 [json_name = "resourceId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_resource_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.AuthorizationDetails.resource_id"));
        } else
          goto handle_unusual;
        continue;
      // string org_id = 5 [json_name = "orgId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.AuthorizationDetails.org_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthorizationDetails::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.AuthorizationDetails)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string authorization_type = 1 [json_name = "authorizationType"];
  if (!this->_internal_authorization_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_authorization_type().data(), static_cast<int>(this->_internal_authorization_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.AuthorizationDetails.authorization_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_authorization_type(), target);
  }

  // string authorization_id = 2 [json_name = "authorizationId"];
  if (!this->_internal_authorization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_authorization_id().data(), static_cast<int>(this->_internal_authorization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.AuthorizationDetails.authorization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_authorization_id(), target);
  }

  // string resource_type = 3 [json_name = "resourceType"];
  if (!this->_internal_resource_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_type().data(), static_cast<int>(this->_internal_resource_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.AuthorizationDetails.resource_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_resource_type(), target);
  }

  // string resource_id = 4 [json_name = "resourceId"];
  if (!this->_internal_resource_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_id().data(), static_cast<int>(this->_internal_resource_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.AuthorizationDetails.resource_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_resource_id(), target);
  }

  // string org_id = 5 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.AuthorizationDetails.org_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.AuthorizationDetails)
  return target;
}

size_t AuthorizationDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.AuthorizationDetails)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string authorization_type = 1 [json_name = "authorizationType"];
  if (!this->_internal_authorization_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_authorization_type());
  }

  // string authorization_id = 2 [json_name = "authorizationId"];
  if (!this->_internal_authorization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_authorization_id());
  }

  // string resource_type = 3 [json_name = "resourceType"];
  if (!this->_internal_resource_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_type());
  }

  // string resource_id = 4 [json_name = "resourceId"];
  if (!this->_internal_resource_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_id());
  }

  // string org_id = 5 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthorizationDetails::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AuthorizationDetails::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthorizationDetails::GetClassData() const { return &_class_data_; }

void AuthorizationDetails::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AuthorizationDetails *>(to)->MergeFrom(
      static_cast<const AuthorizationDetails &>(from));
}


void AuthorizationDetails::MergeFrom(const AuthorizationDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.AuthorizationDetails)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authorization_type().empty()) {
    _internal_set_authorization_type(from._internal_authorization_type());
  }
  if (!from._internal_authorization_id().empty()) {
    _internal_set_authorization_id(from._internal_authorization_id());
  }
  if (!from._internal_resource_type().empty()) {
    _internal_set_resource_type(from._internal_resource_type());
  }
  if (!from._internal_resource_id().empty()) {
    _internal_set_resource_id(from._internal_resource_id());
  }
  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthorizationDetails::CopyFrom(const AuthorizationDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.AuthorizationDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthorizationDetails::IsInitialized() const {
  return true;
}

void AuthorizationDetails::InternalSwap(AuthorizationDetails* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &authorization_type_, lhs_arena,
      &other->authorization_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &authorization_id_, lhs_arena,
      &other->authorization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &resource_type_, lhs_arena,
      &other->resource_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &resource_id_, lhs_arena,
      &other->resource_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthorizationDetails::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[192]);
}

// ===================================================================

class APIKeyWithAuthorizations::_Internal {
 public:
  static const ::viam::app::v1::APIKey& api_key(const APIKeyWithAuthorizations* msg);
};

const ::viam::app::v1::APIKey&
APIKeyWithAuthorizations::_Internal::api_key(const APIKeyWithAuthorizations* msg) {
  return *msg->api_key_;
}
APIKeyWithAuthorizations::APIKeyWithAuthorizations(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  authorizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.APIKeyWithAuthorizations)
}
APIKeyWithAuthorizations::APIKeyWithAuthorizations(const APIKeyWithAuthorizations& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      authorizations_(from.authorizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_api_key()) {
    api_key_ = new ::viam::app::v1::APIKey(*from.api_key_);
  } else {
    api_key_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.APIKeyWithAuthorizations)
}

inline void APIKeyWithAuthorizations::SharedCtor() {
api_key_ = nullptr;
}

APIKeyWithAuthorizations::~APIKeyWithAuthorizations() {
  // @@protoc_insertion_point(destructor:viam.app.v1.APIKeyWithAuthorizations)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void APIKeyWithAuthorizations::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete api_key_;
}

void APIKeyWithAuthorizations::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void APIKeyWithAuthorizations::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.APIKeyWithAuthorizations)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorizations_.Clear();
  if (GetArenaForAllocation() == nullptr && api_key_ != nullptr) {
    delete api_key_;
  }
  api_key_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* APIKeyWithAuthorizations::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.APIKey api_key = 1 [json_name = "apiKey"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_api_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.AuthorizationDetails authorizations = 2 [json_name = "authorizations"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_authorizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* APIKeyWithAuthorizations::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.APIKeyWithAuthorizations)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.APIKey api_key = 1 [json_name = "apiKey"];
  if (this->_internal_has_api_key()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::api_key(this),
        _Internal::api_key(this).GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.AuthorizationDetails authorizations = 2 [json_name = "authorizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_authorizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_authorizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.APIKeyWithAuthorizations)
  return target;
}

size_t APIKeyWithAuthorizations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.APIKeyWithAuthorizations)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.AuthorizationDetails authorizations = 2 [json_name = "authorizations"];
  total_size += 1UL * this->_internal_authorizations_size();
  for (const auto& msg : this->authorizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .viam.app.v1.APIKey api_key = 1 [json_name = "apiKey"];
  if (this->_internal_has_api_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *api_key_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData APIKeyWithAuthorizations::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    APIKeyWithAuthorizations::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*APIKeyWithAuthorizations::GetClassData() const { return &_class_data_; }

void APIKeyWithAuthorizations::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<APIKeyWithAuthorizations *>(to)->MergeFrom(
      static_cast<const APIKeyWithAuthorizations &>(from));
}


void APIKeyWithAuthorizations::MergeFrom(const APIKeyWithAuthorizations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.APIKeyWithAuthorizations)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  authorizations_.MergeFrom(from.authorizations_);
  if (from._internal_has_api_key()) {
    _internal_mutable_api_key()->::viam::app::v1::APIKey::MergeFrom(from._internal_api_key());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void APIKeyWithAuthorizations::CopyFrom(const APIKeyWithAuthorizations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.APIKeyWithAuthorizations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APIKeyWithAuthorizations::IsInitialized() const {
  return true;
}

void APIKeyWithAuthorizations::InternalSwap(APIKeyWithAuthorizations* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  authorizations_.InternalSwap(&other->authorizations_);
  swap(api_key_, other->api_key_);
}

::PROTOBUF_NAMESPACE_ID::Metadata APIKeyWithAuthorizations::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[193]);
}

// ===================================================================

class ListKeysRequest::_Internal {
 public:
};

ListKeysRequest::ListKeysRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListKeysRequest)
}
ListKeysRequest::ListKeysRequest(const ListKeysRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListKeysRequest)
}

inline void ListKeysRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListKeysRequest::~ListKeysRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListKeysRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListKeysRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
}

void ListKeysRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListKeysRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListKeysRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListKeysRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListKeysRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListKeysRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListKeysRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListKeysRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListKeysRequest)
  return target;
}

size_t ListKeysRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListKeysRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListKeysRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListKeysRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListKeysRequest::GetClassData() const { return &_class_data_; }

void ListKeysRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListKeysRequest *>(to)->MergeFrom(
      static_cast<const ListKeysRequest &>(from));
}


void ListKeysRequest::MergeFrom(const ListKeysRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListKeysRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListKeysRequest::CopyFrom(const ListKeysRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListKeysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListKeysRequest::IsInitialized() const {
  return true;
}

void ListKeysRequest::InternalSwap(ListKeysRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListKeysRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[194]);
}

// ===================================================================

class ListKeysResponse::_Internal {
 public:
};

ListKeysResponse::ListKeysResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  api_keys_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListKeysResponse)
}
ListKeysResponse::ListKeysResponse(const ListKeysResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      api_keys_(from.api_keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListKeysResponse)
}

inline void ListKeysResponse::SharedCtor() {
}

ListKeysResponse::~ListKeysResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListKeysResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListKeysResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListKeysResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListKeysResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListKeysResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  api_keys_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListKeysResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.APIKeyWithAuthorizations api_keys = 1 [json_name = "apiKeys"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_api_keys(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListKeysResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListKeysResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.APIKeyWithAuthorizations api_keys = 1 [json_name = "apiKeys"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_api_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_api_keys(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListKeysResponse)
  return target;
}

size_t ListKeysResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListKeysResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.APIKeyWithAuthorizations api_keys = 1 [json_name = "apiKeys"];
  total_size += 1UL * this->_internal_api_keys_size();
  for (const auto& msg : this->api_keys_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListKeysResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListKeysResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListKeysResponse::GetClassData() const { return &_class_data_; }

void ListKeysResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListKeysResponse *>(to)->MergeFrom(
      static_cast<const ListKeysResponse &>(from));
}


void ListKeysResponse::MergeFrom(const ListKeysResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListKeysResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  api_keys_.MergeFrom(from.api_keys_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListKeysResponse::CopyFrom(const ListKeysResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListKeysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListKeysResponse::IsInitialized() const {
  return true;
}

void ListKeysResponse::InternalSwap(ListKeysResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  api_keys_.InternalSwap(&other->api_keys_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListKeysResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[195]);
}

// ===================================================================

class RotateKeyRequest::_Internal {
 public:
};

RotateKeyRequest::RotateKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RotateKeyRequest)
}
RotateKeyRequest::RotateKeyRequest(const RotateKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RotateKeyRequest)
}

inline void RotateKeyRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RotateKeyRequest::~RotateKeyRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RotateKeyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RotateKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void RotateKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RotateKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RotateKeyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RotateKeyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RotateKeyRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RotateKeyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RotateKeyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RotateKeyRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RotateKeyRequest)
  return target;
}

size_t RotateKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RotateKeyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RotateKeyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RotateKeyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RotateKeyRequest::GetClassData() const { return &_class_data_; }

void RotateKeyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RotateKeyRequest *>(to)->MergeFrom(
      static_cast<const RotateKeyRequest &>(from));
}


void RotateKeyRequest::MergeFrom(const RotateKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RotateKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RotateKeyRequest::CopyFrom(const RotateKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RotateKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RotateKeyRequest::IsInitialized() const {
  return true;
}

void RotateKeyRequest::InternalSwap(RotateKeyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RotateKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[196]);
}

// ===================================================================

class RotateKeyResponse::_Internal {
 public:
};

RotateKeyResponse::RotateKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RotateKeyResponse)
}
RotateKeyResponse::RotateKeyResponse(const RotateKeyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(from._internal_key(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RotateKeyResponse)
}

inline void RotateKeyResponse::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
key_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RotateKeyResponse::~RotateKeyResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RotateKeyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RotateKeyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  key_.Destroy();
}

void RotateKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RotateKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RotateKeyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RotateKeyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RotateKeyResponse.id"));
        } else
          goto handle_unusual;
        continue;
      // string key = 2 [json_name = "key"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RotateKeyResponse.key"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RotateKeyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RotateKeyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RotateKeyResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string key = 2 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RotateKeyResponse.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RotateKeyResponse)
  return target;
}

size_t RotateKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RotateKeyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string key = 2 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RotateKeyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RotateKeyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RotateKeyResponse::GetClassData() const { return &_class_data_; }

void RotateKeyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RotateKeyResponse *>(to)->MergeFrom(
      static_cast<const RotateKeyResponse &>(from));
}


void RotateKeyResponse::MergeFrom(const RotateKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RotateKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RotateKeyResponse::CopyFrom(const RotateKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RotateKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RotateKeyResponse::IsInitialized() const {
  return true;
}

void RotateKeyResponse::InternalSwap(RotateKeyResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RotateKeyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[197]);
}

// ===================================================================

class CreateKeyFromExistingKeyAuthorizationsRequest::_Internal {
 public:
};

CreateKeyFromExistingKeyAuthorizationsRequest::CreateKeyFromExistingKeyAuthorizationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest)
}
CreateKeyFromExistingKeyAuthorizationsRequest::CreateKeyFromExistingKeyAuthorizationsRequest(const CreateKeyFromExistingKeyAuthorizationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest)
}

inline void CreateKeyFromExistingKeyAuthorizationsRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateKeyFromExistingKeyAuthorizationsRequest::~CreateKeyFromExistingKeyAuthorizationsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateKeyFromExistingKeyAuthorizationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void CreateKeyFromExistingKeyAuthorizationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateKeyFromExistingKeyAuthorizationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateKeyFromExistingKeyAuthorizationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateKeyFromExistingKeyAuthorizationsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest)
  return target;
}

size_t CreateKeyFromExistingKeyAuthorizationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateKeyFromExistingKeyAuthorizationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateKeyFromExistingKeyAuthorizationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateKeyFromExistingKeyAuthorizationsRequest::GetClassData() const { return &_class_data_; }

void CreateKeyFromExistingKeyAuthorizationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateKeyFromExistingKeyAuthorizationsRequest *>(to)->MergeFrom(
      static_cast<const CreateKeyFromExistingKeyAuthorizationsRequest &>(from));
}


void CreateKeyFromExistingKeyAuthorizationsRequest::MergeFrom(const CreateKeyFromExistingKeyAuthorizationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateKeyFromExistingKeyAuthorizationsRequest::CopyFrom(const CreateKeyFromExistingKeyAuthorizationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateKeyFromExistingKeyAuthorizationsRequest::IsInitialized() const {
  return true;
}

void CreateKeyFromExistingKeyAuthorizationsRequest::InternalSwap(CreateKeyFromExistingKeyAuthorizationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateKeyFromExistingKeyAuthorizationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[198]);
}

// ===================================================================

class CreateKeyFromExistingKeyAuthorizationsResponse::_Internal {
 public:
};

CreateKeyFromExistingKeyAuthorizationsResponse::CreateKeyFromExistingKeyAuthorizationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse)
}
CreateKeyFromExistingKeyAuthorizationsResponse::CreateKeyFromExistingKeyAuthorizationsResponse(const CreateKeyFromExistingKeyAuthorizationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(from._internal_key(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse)
}

inline void CreateKeyFromExistingKeyAuthorizationsResponse::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
key_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateKeyFromExistingKeyAuthorizationsResponse::~CreateKeyFromExistingKeyAuthorizationsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateKeyFromExistingKeyAuthorizationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  key_.Destroy();
}

void CreateKeyFromExistingKeyAuthorizationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateKeyFromExistingKeyAuthorizationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateKeyFromExistingKeyAuthorizationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse.id"));
        } else
          goto handle_unusual;
        continue;
      // string key = 2 [json_name = "key"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse.key"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateKeyFromExistingKeyAuthorizationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string key = 2 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse)
  return target;
}

size_t CreateKeyFromExistingKeyAuthorizationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string key = 2 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateKeyFromExistingKeyAuthorizationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateKeyFromExistingKeyAuthorizationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateKeyFromExistingKeyAuthorizationsResponse::GetClassData() const { return &_class_data_; }

void CreateKeyFromExistingKeyAuthorizationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateKeyFromExistingKeyAuthorizationsResponse *>(to)->MergeFrom(
      static_cast<const CreateKeyFromExistingKeyAuthorizationsResponse &>(from));
}


void CreateKeyFromExistingKeyAuthorizationsResponse::MergeFrom(const CreateKeyFromExistingKeyAuthorizationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateKeyFromExistingKeyAuthorizationsResponse::CopyFrom(const CreateKeyFromExistingKeyAuthorizationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateKeyFromExistingKeyAuthorizationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateKeyFromExistingKeyAuthorizationsResponse::IsInitialized() const {
  return true;
}

void CreateKeyFromExistingKeyAuthorizationsResponse::InternalSwap(CreateKeyFromExistingKeyAuthorizationsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateKeyFromExistingKeyAuthorizationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[199]);
}

// ===================================================================

class OrganizationSetLogoRequest::_Internal {
 public:
};

OrganizationSetLogoRequest::OrganizationSetLogoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrganizationSetLogoRequest)
}
OrganizationSetLogoRequest::OrganizationSetLogoRequest(const OrganizationSetLogoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  logo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    logo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_logo().empty()) {
    logo_.Set(from._internal_logo(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrganizationSetLogoRequest)
}

inline void OrganizationSetLogoRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
logo_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  logo_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrganizationSetLogoRequest::~OrganizationSetLogoRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OrganizationSetLogoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrganizationSetLogoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
  logo_.Destroy();
}

void OrganizationSetLogoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrganizationSetLogoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OrganizationSetLogoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  logo_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrganizationSetLogoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationSetLogoRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      // bytes logo = 2 [json_name = "logo"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_logo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrganizationSetLogoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OrganizationSetLogoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationSetLogoRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // bytes logo = 2 [json_name = "logo"];
  if (!this->_internal_logo().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_logo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OrganizationSetLogoRequest)
  return target;
}

size_t OrganizationSetLogoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OrganizationSetLogoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // bytes logo = 2 [json_name = "logo"];
  if (!this->_internal_logo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_logo());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationSetLogoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrganizationSetLogoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationSetLogoRequest::GetClassData() const { return &_class_data_; }

void OrganizationSetLogoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrganizationSetLogoRequest *>(to)->MergeFrom(
      static_cast<const OrganizationSetLogoRequest &>(from));
}


void OrganizationSetLogoRequest::MergeFrom(const OrganizationSetLogoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OrganizationSetLogoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (!from._internal_logo().empty()) {
    _internal_set_logo(from._internal_logo());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrganizationSetLogoRequest::CopyFrom(const OrganizationSetLogoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OrganizationSetLogoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationSetLogoRequest::IsInitialized() const {
  return true;
}

void OrganizationSetLogoRequest::InternalSwap(OrganizationSetLogoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &logo_, lhs_arena,
      &other->logo_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrganizationSetLogoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[200]);
}

// ===================================================================

class OrganizationSetLogoResponse::_Internal {
 public:
};

OrganizationSetLogoResponse::OrganizationSetLogoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrganizationSetLogoResponse)
}
OrganizationSetLogoResponse::OrganizationSetLogoResponse(const OrganizationSetLogoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrganizationSetLogoResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationSetLogoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationSetLogoResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata OrganizationSetLogoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[201]);
}

// ===================================================================

class OrganizationGetLogoRequest::_Internal {
 public:
};

OrganizationGetLogoRequest::OrganizationGetLogoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrganizationGetLogoRequest)
}
OrganizationGetLogoRequest::OrganizationGetLogoRequest(const OrganizationGetLogoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrganizationGetLogoRequest)
}

inline void OrganizationGetLogoRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrganizationGetLogoRequest::~OrganizationGetLogoRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OrganizationGetLogoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrganizationGetLogoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
}

void OrganizationGetLogoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrganizationGetLogoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OrganizationGetLogoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrganizationGetLogoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationGetLogoRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrganizationGetLogoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OrganizationGetLogoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationGetLogoRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OrganizationGetLogoRequest)
  return target;
}

size_t OrganizationGetLogoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OrganizationGetLogoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationGetLogoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrganizationGetLogoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationGetLogoRequest::GetClassData() const { return &_class_data_; }

void OrganizationGetLogoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrganizationGetLogoRequest *>(to)->MergeFrom(
      static_cast<const OrganizationGetLogoRequest &>(from));
}


void OrganizationGetLogoRequest::MergeFrom(const OrganizationGetLogoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OrganizationGetLogoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrganizationGetLogoRequest::CopyFrom(const OrganizationGetLogoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OrganizationGetLogoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationGetLogoRequest::IsInitialized() const {
  return true;
}

void OrganizationGetLogoRequest::InternalSwap(OrganizationGetLogoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrganizationGetLogoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[202]);
}

// ===================================================================

class OrganizationGetLogoResponse::_Internal {
 public:
};

OrganizationGetLogoResponse::OrganizationGetLogoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OrganizationGetLogoResponse)
}
OrganizationGetLogoResponse::OrganizationGetLogoResponse(const OrganizationGetLogoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(from._internal_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OrganizationGetLogoResponse)
}

inline void OrganizationGetLogoResponse::SharedCtor() {
url_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OrganizationGetLogoResponse::~OrganizationGetLogoResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OrganizationGetLogoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrganizationGetLogoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  url_.Destroy();
}

void OrganizationGetLogoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OrganizationGetLogoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OrganizationGetLogoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrganizationGetLogoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1 [json_name = "url"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OrganizationGetLogoResponse.url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrganizationGetLogoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OrganizationGetLogoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OrganizationGetLogoResponse.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OrganizationGetLogoResponse)
  return target;
}

size_t OrganizationGetLogoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OrganizationGetLogoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1 [json_name = "url"];
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrganizationGetLogoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OrganizationGetLogoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrganizationGetLogoResponse::GetClassData() const { return &_class_data_; }

void OrganizationGetLogoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OrganizationGetLogoResponse *>(to)->MergeFrom(
      static_cast<const OrganizationGetLogoResponse &>(from));
}


void OrganizationGetLogoResponse::MergeFrom(const OrganizationGetLogoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OrganizationGetLogoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrganizationGetLogoResponse::CopyFrom(const OrganizationGetLogoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OrganizationGetLogoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrganizationGetLogoResponse::IsInitialized() const {
  return true;
}

void OrganizationGetLogoResponse::InternalSwap(OrganizationGetLogoResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OrganizationGetLogoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[203]);
}

// ===================================================================

class EnableAuthServiceRequest::_Internal {
 public:
};

EnableAuthServiceRequest::EnableAuthServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.EnableAuthServiceRequest)
}
EnableAuthServiceRequest::EnableAuthServiceRequest(const EnableAuthServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.EnableAuthServiceRequest)
}

inline void EnableAuthServiceRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EnableAuthServiceRequest::~EnableAuthServiceRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.EnableAuthServiceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnableAuthServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
}

void EnableAuthServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EnableAuthServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.EnableAuthServiceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnableAuthServiceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.EnableAuthServiceRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnableAuthServiceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.EnableAuthServiceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.EnableAuthServiceRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.EnableAuthServiceRequest)
  return target;
}

size_t EnableAuthServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.EnableAuthServiceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnableAuthServiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EnableAuthServiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnableAuthServiceRequest::GetClassData() const { return &_class_data_; }

void EnableAuthServiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<EnableAuthServiceRequest *>(to)->MergeFrom(
      static_cast<const EnableAuthServiceRequest &>(from));
}


void EnableAuthServiceRequest::MergeFrom(const EnableAuthServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.EnableAuthServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnableAuthServiceRequest::CopyFrom(const EnableAuthServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.EnableAuthServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableAuthServiceRequest::IsInitialized() const {
  return true;
}

void EnableAuthServiceRequest::InternalSwap(EnableAuthServiceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableAuthServiceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[204]);
}

// ===================================================================

class EnableAuthServiceResponse::_Internal {
 public:
};

EnableAuthServiceResponse::EnableAuthServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.EnableAuthServiceResponse)
}
EnableAuthServiceResponse::EnableAuthServiceResponse(const EnableAuthServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.EnableAuthServiceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnableAuthServiceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnableAuthServiceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata EnableAuthServiceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[205]);
}

// ===================================================================

class DisableAuthServiceRequest::_Internal {
 public:
};

DisableAuthServiceRequest::DisableAuthServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DisableAuthServiceRequest)
}
DisableAuthServiceRequest::DisableAuthServiceRequest(const DisableAuthServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DisableAuthServiceRequest)
}

inline void DisableAuthServiceRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DisableAuthServiceRequest::~DisableAuthServiceRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DisableAuthServiceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DisableAuthServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
}

void DisableAuthServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DisableAuthServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DisableAuthServiceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisableAuthServiceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DisableAuthServiceRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DisableAuthServiceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DisableAuthServiceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DisableAuthServiceRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DisableAuthServiceRequest)
  return target;
}

size_t DisableAuthServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DisableAuthServiceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisableAuthServiceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DisableAuthServiceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisableAuthServiceRequest::GetClassData() const { return &_class_data_; }

void DisableAuthServiceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DisableAuthServiceRequest *>(to)->MergeFrom(
      static_cast<const DisableAuthServiceRequest &>(from));
}


void DisableAuthServiceRequest::MergeFrom(const DisableAuthServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DisableAuthServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DisableAuthServiceRequest::CopyFrom(const DisableAuthServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DisableAuthServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableAuthServiceRequest::IsInitialized() const {
  return true;
}

void DisableAuthServiceRequest::InternalSwap(DisableAuthServiceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableAuthServiceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[206]);
}

// ===================================================================

class DisableAuthServiceResponse::_Internal {
 public:
};

DisableAuthServiceResponse::DisableAuthServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DisableAuthServiceResponse)
}
DisableAuthServiceResponse::DisableAuthServiceResponse(const DisableAuthServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DisableAuthServiceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DisableAuthServiceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DisableAuthServiceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DisableAuthServiceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[207]);
}

// ===================================================================

class CreateOAuthAppRequest::_Internal {
 public:
  static const ::viam::app::v1::OAuthConfig& oauth_config(const CreateOAuthAppRequest* msg);
};

const ::viam::app::v1::OAuthConfig&
CreateOAuthAppRequest::_Internal::oauth_config(const CreateOAuthAppRequest* msg) {
  return *msg->oauth_config_;
}
CreateOAuthAppRequest::CreateOAuthAppRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateOAuthAppRequest)
}
CreateOAuthAppRequest::CreateOAuthAppRequest(const CreateOAuthAppRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  client_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    client_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_name().empty()) {
    client_name_.Set(from._internal_client_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_oauth_config()) {
    oauth_config_ = new ::viam::app::v1::OAuthConfig(*from.oauth_config_);
  } else {
    oauth_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateOAuthAppRequest)
}

inline void CreateOAuthAppRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
client_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  client_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
oauth_config_ = nullptr;
}

CreateOAuthAppRequest::~CreateOAuthAppRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateOAuthAppRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateOAuthAppRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
  client_name_.Destroy();
  if (this != internal_default_instance()) delete oauth_config_;
}

void CreateOAuthAppRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOAuthAppRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateOAuthAppRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  client_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && oauth_config_ != nullptr) {
    delete oauth_config_;
  }
  oauth_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOAuthAppRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateOAuthAppRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      // string client_name = 2 [json_name = "clientName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_client_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateOAuthAppRequest.client_name"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.OAuthConfig oauth_config = 3 [json_name = "oauthConfig"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_oauth_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateOAuthAppRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateOAuthAppRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateOAuthAppRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string client_name = 2 [json_name = "clientName"];
  if (!this->_internal_client_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateOAuthAppRequest.client_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_client_name(), target);
  }

  // .viam.app.v1.OAuthConfig oauth_config = 3 [json_name = "oauthConfig"];
  if (this->_internal_has_oauth_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::oauth_config(this),
        _Internal::oauth_config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateOAuthAppRequest)
  return target;
}

size_t CreateOAuthAppRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateOAuthAppRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string client_name = 2 [json_name = "clientName"];
  if (!this->_internal_client_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_name());
  }

  // .viam.app.v1.OAuthConfig oauth_config = 3 [json_name = "oauthConfig"];
  if (this->_internal_has_oauth_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oauth_config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateOAuthAppRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateOAuthAppRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateOAuthAppRequest::GetClassData() const { return &_class_data_; }

void CreateOAuthAppRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateOAuthAppRequest *>(to)->MergeFrom(
      static_cast<const CreateOAuthAppRequest &>(from));
}


void CreateOAuthAppRequest::MergeFrom(const CreateOAuthAppRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateOAuthAppRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (!from._internal_client_name().empty()) {
    _internal_set_client_name(from._internal_client_name());
  }
  if (from._internal_has_oauth_config()) {
    _internal_mutable_oauth_config()->::viam::app::v1::OAuthConfig::MergeFrom(from._internal_oauth_config());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateOAuthAppRequest::CopyFrom(const CreateOAuthAppRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateOAuthAppRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOAuthAppRequest::IsInitialized() const {
  return true;
}

void CreateOAuthAppRequest::InternalSwap(CreateOAuthAppRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &client_name_, lhs_arena,
      &other->client_name_, rhs_arena
  );
  swap(oauth_config_, other->oauth_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOAuthAppRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[208]);
}

// ===================================================================

class CreateOAuthAppResponse::_Internal {
 public:
};

CreateOAuthAppResponse::CreateOAuthAppResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateOAuthAppResponse)
}
CreateOAuthAppResponse::CreateOAuthAppResponse(const CreateOAuthAppResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    client_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    client_id_.Set(from._internal_client_id(), 
      GetArenaForAllocation());
  }
  client_secret_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    client_secret_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_secret().empty()) {
    client_secret_.Set(from._internal_client_secret(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateOAuthAppResponse)
}

inline void CreateOAuthAppResponse::SharedCtor() {
client_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  client_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
client_secret_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  client_secret_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateOAuthAppResponse::~CreateOAuthAppResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateOAuthAppResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateOAuthAppResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  client_id_.Destroy();
  client_secret_.Destroy();
}

void CreateOAuthAppResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateOAuthAppResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateOAuthAppResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_id_.ClearToEmpty();
  client_secret_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOAuthAppResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_id = 1 [json_name = "clientId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateOAuthAppResponse.client_id"));
        } else
          goto handle_unusual;
        continue;
      // string client_secret = 2 [json_name = "clientSecret"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_client_secret();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateOAuthAppResponse.client_secret"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateOAuthAppResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateOAuthAppResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateOAuthAppResponse.client_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_id(), target);
  }

  // string client_secret = 2 [json_name = "clientSecret"];
  if (!this->_internal_client_secret().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_secret().data(), static_cast<int>(this->_internal_client_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateOAuthAppResponse.client_secret");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_client_secret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateOAuthAppResponse)
  return target;
}

size_t CreateOAuthAppResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateOAuthAppResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id = 1 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  // string client_secret = 2 [json_name = "clientSecret"];
  if (!this->_internal_client_secret().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_secret());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateOAuthAppResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateOAuthAppResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateOAuthAppResponse::GetClassData() const { return &_class_data_; }

void CreateOAuthAppResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateOAuthAppResponse *>(to)->MergeFrom(
      static_cast<const CreateOAuthAppResponse &>(from));
}


void CreateOAuthAppResponse::MergeFrom(const CreateOAuthAppResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateOAuthAppResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _internal_set_client_id(from._internal_client_id());
  }
  if (!from._internal_client_secret().empty()) {
    _internal_set_client_secret(from._internal_client_secret());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateOAuthAppResponse::CopyFrom(const CreateOAuthAppResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateOAuthAppResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOAuthAppResponse::IsInitialized() const {
  return true;
}

void CreateOAuthAppResponse::InternalSwap(CreateOAuthAppResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &client_id_, lhs_arena,
      &other->client_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &client_secret_, lhs_arena,
      &other->client_secret_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOAuthAppResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[209]);
}

// ===================================================================

class ReadOAuthAppRequest::_Internal {
 public:
};

ReadOAuthAppRequest::ReadOAuthAppRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ReadOAuthAppRequest)
}
ReadOAuthAppRequest::ReadOAuthAppRequest(const ReadOAuthAppRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    client_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    client_id_.Set(from._internal_client_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ReadOAuthAppRequest)
}

inline void ReadOAuthAppRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
client_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  client_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReadOAuthAppRequest::~ReadOAuthAppRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ReadOAuthAppRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadOAuthAppRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
  client_id_.Destroy();
}

void ReadOAuthAppRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadOAuthAppRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ReadOAuthAppRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  client_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadOAuthAppRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ReadOAuthAppRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      // string client_id = 2 [json_name = "clientId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_client_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ReadOAuthAppRequest.client_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadOAuthAppRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ReadOAuthAppRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ReadOAuthAppRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string client_id = 2 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ReadOAuthAppRequest.client_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_client_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ReadOAuthAppRequest)
  return target;
}

size_t ReadOAuthAppRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ReadOAuthAppRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string client_id = 2 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadOAuthAppRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReadOAuthAppRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadOAuthAppRequest::GetClassData() const { return &_class_data_; }

void ReadOAuthAppRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReadOAuthAppRequest *>(to)->MergeFrom(
      static_cast<const ReadOAuthAppRequest &>(from));
}


void ReadOAuthAppRequest::MergeFrom(const ReadOAuthAppRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ReadOAuthAppRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (!from._internal_client_id().empty()) {
    _internal_set_client_id(from._internal_client_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadOAuthAppRequest::CopyFrom(const ReadOAuthAppRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ReadOAuthAppRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOAuthAppRequest::IsInitialized() const {
  return true;
}

void ReadOAuthAppRequest::InternalSwap(ReadOAuthAppRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &client_id_, lhs_arena,
      &other->client_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadOAuthAppRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[210]);
}

// ===================================================================

class ReadOAuthAppResponse::_Internal {
 public:
  static const ::viam::app::v1::OAuthConfig& oauth_config(const ReadOAuthAppResponse* msg);
};

const ::viam::app::v1::OAuthConfig&
ReadOAuthAppResponse::_Internal::oauth_config(const ReadOAuthAppResponse* msg) {
  return *msg->oauth_config_;
}
ReadOAuthAppResponse::ReadOAuthAppResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ReadOAuthAppResponse)
}
ReadOAuthAppResponse::ReadOAuthAppResponse(const ReadOAuthAppResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    client_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_name().empty()) {
    client_name_.Set(from._internal_client_name(), 
      GetArenaForAllocation());
  }
  client_secret_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    client_secret_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_secret().empty()) {
    client_secret_.Set(from._internal_client_secret(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_oauth_config()) {
    oauth_config_ = new ::viam::app::v1::OAuthConfig(*from.oauth_config_);
  } else {
    oauth_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ReadOAuthAppResponse)
}

inline void ReadOAuthAppResponse::SharedCtor() {
client_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  client_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
client_secret_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  client_secret_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
oauth_config_ = nullptr;
}

ReadOAuthAppResponse::~ReadOAuthAppResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ReadOAuthAppResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadOAuthAppResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  client_name_.Destroy();
  client_secret_.Destroy();
  if (this != internal_default_instance()) delete oauth_config_;
}

void ReadOAuthAppResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadOAuthAppResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ReadOAuthAppResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_name_.ClearToEmpty();
  client_secret_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && oauth_config_ != nullptr) {
    delete oauth_config_;
  }
  oauth_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadOAuthAppResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_name = 1 [json_name = "clientName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ReadOAuthAppResponse.client_name"));
        } else
          goto handle_unusual;
        continue;
      // string client_secret = 2 [json_name = "clientSecret"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_client_secret();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ReadOAuthAppResponse.client_secret"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.OAuthConfig oauth_config = 3 [json_name = "oauthConfig"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_oauth_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadOAuthAppResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ReadOAuthAppResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_name = 1 [json_name = "clientName"];
  if (!this->_internal_client_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ReadOAuthAppResponse.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  // string client_secret = 2 [json_name = "clientSecret"];
  if (!this->_internal_client_secret().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_secret().data(), static_cast<int>(this->_internal_client_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ReadOAuthAppResponse.client_secret");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_client_secret(), target);
  }

  // .viam.app.v1.OAuthConfig oauth_config = 3 [json_name = "oauthConfig"];
  if (this->_internal_has_oauth_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::oauth_config(this),
        _Internal::oauth_config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ReadOAuthAppResponse)
  return target;
}

size_t ReadOAuthAppResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ReadOAuthAppResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_name = 1 [json_name = "clientName"];
  if (!this->_internal_client_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_name());
  }

  // string client_secret = 2 [json_name = "clientSecret"];
  if (!this->_internal_client_secret().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_secret());
  }

  // .viam.app.v1.OAuthConfig oauth_config = 3 [json_name = "oauthConfig"];
  if (this->_internal_has_oauth_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oauth_config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadOAuthAppResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReadOAuthAppResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadOAuthAppResponse::GetClassData() const { return &_class_data_; }

void ReadOAuthAppResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReadOAuthAppResponse *>(to)->MergeFrom(
      static_cast<const ReadOAuthAppResponse &>(from));
}


void ReadOAuthAppResponse::MergeFrom(const ReadOAuthAppResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ReadOAuthAppResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_name().empty()) {
    _internal_set_client_name(from._internal_client_name());
  }
  if (!from._internal_client_secret().empty()) {
    _internal_set_client_secret(from._internal_client_secret());
  }
  if (from._internal_has_oauth_config()) {
    _internal_mutable_oauth_config()->::viam::app::v1::OAuthConfig::MergeFrom(from._internal_oauth_config());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadOAuthAppResponse::CopyFrom(const ReadOAuthAppResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ReadOAuthAppResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOAuthAppResponse::IsInitialized() const {
  return true;
}

void ReadOAuthAppResponse::InternalSwap(ReadOAuthAppResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &client_name_, lhs_arena,
      &other->client_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &client_secret_, lhs_arena,
      &other->client_secret_, rhs_arena
  );
  swap(oauth_config_, other->oauth_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadOAuthAppResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[211]);
}

// ===================================================================

class UpdateOAuthAppRequest::_Internal {
 public:
  static const ::viam::app::v1::OAuthConfig& oauth_config(const UpdateOAuthAppRequest* msg);
};

const ::viam::app::v1::OAuthConfig&
UpdateOAuthAppRequest::_Internal::oauth_config(const UpdateOAuthAppRequest* msg) {
  return *msg->oauth_config_;
}
UpdateOAuthAppRequest::UpdateOAuthAppRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateOAuthAppRequest)
}
UpdateOAuthAppRequest::UpdateOAuthAppRequest(const UpdateOAuthAppRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    client_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    client_id_.Set(from._internal_client_id(), 
      GetArenaForAllocation());
  }
  client_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    client_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_name().empty()) {
    client_name_.Set(from._internal_client_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_oauth_config()) {
    oauth_config_ = new ::viam::app::v1::OAuthConfig(*from.oauth_config_);
  } else {
    oauth_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateOAuthAppRequest)
}

inline void UpdateOAuthAppRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
client_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  client_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
client_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  client_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
oauth_config_ = nullptr;
}

UpdateOAuthAppRequest::~UpdateOAuthAppRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateOAuthAppRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateOAuthAppRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
  client_id_.Destroy();
  client_name_.Destroy();
  if (this != internal_default_instance()) delete oauth_config_;
}

void UpdateOAuthAppRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateOAuthAppRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateOAuthAppRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  client_id_.ClearToEmpty();
  client_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && oauth_config_ != nullptr) {
    delete oauth_config_;
  }
  oauth_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOAuthAppRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOAuthAppRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      // string client_id = 2 [json_name = "clientId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_client_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOAuthAppRequest.client_id"));
        } else
          goto handle_unusual;
        continue;
      // string client_name = 3 [json_name = "clientName"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_client_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateOAuthAppRequest.client_name"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.OAuthConfig oauth_config = 4 [json_name = "oauthConfig"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_oauth_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateOAuthAppRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateOAuthAppRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOAuthAppRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string client_id = 2 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOAuthAppRequest.client_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_client_id(), target);
  }

  // string client_name = 3 [json_name = "clientName"];
  if (!this->_internal_client_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateOAuthAppRequest.client_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_client_name(), target);
  }

  // .viam.app.v1.OAuthConfig oauth_config = 4 [json_name = "oauthConfig"];
  if (this->_internal_has_oauth_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::oauth_config(this),
        _Internal::oauth_config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateOAuthAppRequest)
  return target;
}

size_t UpdateOAuthAppRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateOAuthAppRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string client_id = 2 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  // string client_name = 3 [json_name = "clientName"];
  if (!this->_internal_client_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_name());
  }

  // .viam.app.v1.OAuthConfig oauth_config = 4 [json_name = "oauthConfig"];
  if (this->_internal_has_oauth_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oauth_config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateOAuthAppRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateOAuthAppRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateOAuthAppRequest::GetClassData() const { return &_class_data_; }

void UpdateOAuthAppRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateOAuthAppRequest *>(to)->MergeFrom(
      static_cast<const UpdateOAuthAppRequest &>(from));
}


void UpdateOAuthAppRequest::MergeFrom(const UpdateOAuthAppRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateOAuthAppRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (!from._internal_client_id().empty()) {
    _internal_set_client_id(from._internal_client_id());
  }
  if (!from._internal_client_name().empty()) {
    _internal_set_client_name(from._internal_client_name());
  }
  if (from._internal_has_oauth_config()) {
    _internal_mutable_oauth_config()->::viam::app::v1::OAuthConfig::MergeFrom(from._internal_oauth_config());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateOAuthAppRequest::CopyFrom(const UpdateOAuthAppRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateOAuthAppRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOAuthAppRequest::IsInitialized() const {
  return true;
}

void UpdateOAuthAppRequest::InternalSwap(UpdateOAuthAppRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &client_id_, lhs_arena,
      &other->client_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &client_name_, lhs_arena,
      &other->client_name_, rhs_arena
  );
  swap(oauth_config_, other->oauth_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOAuthAppRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[212]);
}

// ===================================================================

class UpdateOAuthAppResponse::_Internal {
 public:
};

UpdateOAuthAppResponse::UpdateOAuthAppResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateOAuthAppResponse)
}
UpdateOAuthAppResponse::UpdateOAuthAppResponse(const UpdateOAuthAppResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateOAuthAppResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateOAuthAppResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateOAuthAppResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateOAuthAppResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[213]);
}

// ===================================================================

class DeleteOAuthAppRequest::_Internal {
 public:
};

DeleteOAuthAppRequest::DeleteOAuthAppRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOAuthAppRequest)
}
DeleteOAuthAppRequest::DeleteOAuthAppRequest(const DeleteOAuthAppRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  client_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    client_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    client_id_.Set(from._internal_client_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOAuthAppRequest)
}

inline void DeleteOAuthAppRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
client_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  client_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteOAuthAppRequest::~DeleteOAuthAppRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteOAuthAppRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteOAuthAppRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
  client_id_.Destroy();
}

void DeleteOAuthAppRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteOAuthAppRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteOAuthAppRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  client_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteOAuthAppRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteOAuthAppRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      // string client_id = 2 [json_name = "clientId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_client_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteOAuthAppRequest.client_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteOAuthAppRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteOAuthAppRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteOAuthAppRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string client_id = 2 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteOAuthAppRequest.client_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_client_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteOAuthAppRequest)
  return target;
}

size_t DeleteOAuthAppRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteOAuthAppRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string client_id = 2 [json_name = "clientId"];
  if (!this->_internal_client_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOAuthAppRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteOAuthAppRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOAuthAppRequest::GetClassData() const { return &_class_data_; }

void DeleteOAuthAppRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteOAuthAppRequest *>(to)->MergeFrom(
      static_cast<const DeleteOAuthAppRequest &>(from));
}


void DeleteOAuthAppRequest::MergeFrom(const DeleteOAuthAppRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteOAuthAppRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  if (!from._internal_client_id().empty()) {
    _internal_set_client_id(from._internal_client_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteOAuthAppRequest::CopyFrom(const DeleteOAuthAppRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteOAuthAppRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOAuthAppRequest::IsInitialized() const {
  return true;
}

void DeleteOAuthAppRequest::InternalSwap(DeleteOAuthAppRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &client_id_, lhs_arena,
      &other->client_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteOAuthAppRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[214]);
}

// ===================================================================

class DeleteOAuthAppResponse::_Internal {
 public:
};

DeleteOAuthAppResponse::DeleteOAuthAppResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteOAuthAppResponse)
}
DeleteOAuthAppResponse::DeleteOAuthAppResponse(const DeleteOAuthAppResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteOAuthAppResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteOAuthAppResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteOAuthAppResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteOAuthAppResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[215]);
}

// ===================================================================

class ListOAuthAppsRequest::_Internal {
 public:
};

ListOAuthAppsRequest::ListOAuthAppsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOAuthAppsRequest)
}
ListOAuthAppsRequest::ListOAuthAppsRequest(const ListOAuthAppsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    org_id_.Set(from._internal_org_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOAuthAppsRequest)
}

inline void ListOAuthAppsRequest::SharedCtor() {
org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListOAuthAppsRequest::~ListOAuthAppsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListOAuthAppsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListOAuthAppsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  org_id_.Destroy();
}

void ListOAuthAppsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListOAuthAppsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListOAuthAppsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  org_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListOAuthAppsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListOAuthAppsRequest.org_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListOAuthAppsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListOAuthAppsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListOAuthAppsRequest.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListOAuthAppsRequest)
  return target;
}

size_t ListOAuthAppsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListOAuthAppsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOAuthAppsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListOAuthAppsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOAuthAppsRequest::GetClassData() const { return &_class_data_; }

void ListOAuthAppsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListOAuthAppsRequest *>(to)->MergeFrom(
      static_cast<const ListOAuthAppsRequest &>(from));
}


void ListOAuthAppsRequest::MergeFrom(const ListOAuthAppsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListOAuthAppsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _internal_set_org_id(from._internal_org_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListOAuthAppsRequest::CopyFrom(const ListOAuthAppsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListOAuthAppsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOAuthAppsRequest::IsInitialized() const {
  return true;
}

void ListOAuthAppsRequest::InternalSwap(ListOAuthAppsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &org_id_, lhs_arena,
      &other->org_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListOAuthAppsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[216]);
}

// ===================================================================

class ListOAuthAppsResponse::_Internal {
 public:
};

ListOAuthAppsResponse::ListOAuthAppsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  client_ids_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOAuthAppsResponse)
}
ListOAuthAppsResponse::ListOAuthAppsResponse(const ListOAuthAppsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      client_ids_(from.client_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOAuthAppsResponse)
}

inline void ListOAuthAppsResponse::SharedCtor() {
}

ListOAuthAppsResponse::~ListOAuthAppsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListOAuthAppsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListOAuthAppsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListOAuthAppsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListOAuthAppsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListOAuthAppsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListOAuthAppsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string client_ids = 1 [json_name = "clientIds"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_client_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListOAuthAppsResponse.client_ids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListOAuthAppsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListOAuthAppsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string client_ids = 1 [json_name = "clientIds"];
  for (int i = 0, n = this->_internal_client_ids_size(); i < n; i++) {
    const auto& s = this->_internal_client_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListOAuthAppsResponse.client_ids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListOAuthAppsResponse)
  return target;
}

size_t ListOAuthAppsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListOAuthAppsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string client_ids = 1 [json_name = "clientIds"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(client_ids_.size());
  for (int i = 0, n = client_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      client_ids_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOAuthAppsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListOAuthAppsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOAuthAppsResponse::GetClassData() const { return &_class_data_; }

void ListOAuthAppsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListOAuthAppsResponse *>(to)->MergeFrom(
      static_cast<const ListOAuthAppsResponse &>(from));
}


void ListOAuthAppsResponse::MergeFrom(const ListOAuthAppsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListOAuthAppsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  client_ids_.MergeFrom(from.client_ids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListOAuthAppsResponse::CopyFrom(const ListOAuthAppsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListOAuthAppsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOAuthAppsResponse::IsInitialized() const {
  return true;
}

void ListOAuthAppsResponse::InternalSwap(ListOAuthAppsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  client_ids_.InternalSwap(&other->client_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListOAuthAppsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[217]);
}

// ===================================================================

class OAuthConfig::_Internal {
 public:
};

OAuthConfig::OAuthConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  origin_uris_(arena),
  redirect_uris_(arena),
  enabled_grants_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.OAuthConfig)
}
OAuthConfig::OAuthConfig(const OAuthConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      origin_uris_(from.origin_uris_),
      redirect_uris_(from.redirect_uris_),
      enabled_grants_(from.enabled_grants_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  logout_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    logout_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_logout_uri().empty()) {
    logout_uri_.Set(from._internal_logout_uri(), 
      GetArenaForAllocation());
  }
  ::memcpy(&client_authentication_, &from.client_authentication_,
    static_cast<size_t>(reinterpret_cast<char*>(&url_validation_) -
    reinterpret_cast<char*>(&client_authentication_)) + sizeof(url_validation_));
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.OAuthConfig)
}

inline void OAuthConfig::SharedCtor() {
logout_uri_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  logout_uri_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&client_authentication_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&url_validation_) -
    reinterpret_cast<char*>(&client_authentication_)) + sizeof(url_validation_));
}

OAuthConfig::~OAuthConfig() {
  // @@protoc_insertion_point(destructor:viam.app.v1.OAuthConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OAuthConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  logout_uri_.Destroy();
}

void OAuthConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OAuthConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.OAuthConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  origin_uris_.Clear();
  redirect_uris_.Clear();
  enabled_grants_.Clear();
  logout_uri_.ClearToEmpty();
  ::memset(&client_authentication_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&url_validation_) -
      reinterpret_cast<char*>(&client_authentication_)) + sizeof(url_validation_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OAuthConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.ClientAuthentication client_authentication = 1 [json_name = "clientAuthentication"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_client_authentication(static_cast<::viam::app::v1::ClientAuthentication>(val));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.PKCE pkce = 2 [json_name = "pkce"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_pkce(static_cast<::viam::app::v1::PKCE>(val));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.URLValidation url_validation = 3 [json_name = "urlValidation"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_url_validation(static_cast<::viam::app::v1::URLValidation>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated string origin_uris = 4 [json_name = "originUris"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_origin_uris();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OAuthConfig.origin_uris"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string redirect_uris = 5 [json_name = "redirectUris"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_redirect_uris();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OAuthConfig.redirect_uris"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string logout_uri = 6 [json_name = "logoutUri"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_logout_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.OAuthConfig.logout_uri"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.EnabledGrant enabled_grants = 7 [json_name = "enabledGrants"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_enabled_grants(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 56) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_enabled_grants(static_cast<::viam::app::v1::EnabledGrant>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OAuthConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.OAuthConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.ClientAuthentication client_authentication = 1 [json_name = "clientAuthentication"];
  if (this->_internal_client_authentication() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_client_authentication(), target);
  }

  // .viam.app.v1.PKCE pkce = 2 [json_name = "pkce"];
  if (this->_internal_pkce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_pkce(), target);
  }

  // .viam.app.v1.URLValidation url_validation = 3 [json_name = "urlValidation"];
  if (this->_internal_url_validation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_url_validation(), target);
  }

  // repeated string origin_uris = 4 [json_name = "originUris"];
  for (int i = 0, n = this->_internal_origin_uris_size(); i < n; i++) {
    const auto& s = this->_internal_origin_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OAuthConfig.origin_uris");
    target = stream->WriteString(4, s, target);
  }

  // repeated string redirect_uris = 5 [json_name = "redirectUris"];
  for (int i = 0, n = this->_internal_redirect_uris_size(); i < n; i++) {
    const auto& s = this->_internal_redirect_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OAuthConfig.redirect_uris");
    target = stream->WriteString(5, s, target);
  }

  // string logout_uri = 6 [json_name = "logoutUri"];
  if (!this->_internal_logout_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_logout_uri().data(), static_cast<int>(this->_internal_logout_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.OAuthConfig.logout_uri");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_logout_uri(), target);
  }

  // repeated .viam.app.v1.EnabledGrant enabled_grants = 7 [json_name = "enabledGrants"];
  {
    int byte_size = _enabled_grants_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          7, enabled_grants_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.OAuthConfig)
  return target;
}

size_t OAuthConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.OAuthConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string origin_uris = 4 [json_name = "originUris"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(origin_uris_.size());
  for (int i = 0, n = origin_uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      origin_uris_.Get(i));
  }

  // repeated string redirect_uris = 5 [json_name = "redirectUris"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(redirect_uris_.size());
  for (int i = 0, n = redirect_uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      redirect_uris_.Get(i));
  }

  // repeated .viam.app.v1.EnabledGrant enabled_grants = 7 [json_name = "enabledGrants"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_enabled_grants_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_enabled_grants(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _enabled_grants_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string logout_uri = 6 [json_name = "logoutUri"];
  if (!this->_internal_logout_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_logout_uri());
  }

  // .viam.app.v1.ClientAuthentication client_authentication = 1 [json_name = "clientAuthentication"];
  if (this->_internal_client_authentication() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_client_authentication());
  }

  // .viam.app.v1.PKCE pkce = 2 [json_name = "pkce"];
  if (this->_internal_pkce() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_pkce());
  }

  // .viam.app.v1.URLValidation url_validation = 3 [json_name = "urlValidation"];
  if (this->_internal_url_validation() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_url_validation());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OAuthConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OAuthConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OAuthConfig::GetClassData() const { return &_class_data_; }

void OAuthConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OAuthConfig *>(to)->MergeFrom(
      static_cast<const OAuthConfig &>(from));
}


void OAuthConfig::MergeFrom(const OAuthConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.OAuthConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  origin_uris_.MergeFrom(from.origin_uris_);
  redirect_uris_.MergeFrom(from.redirect_uris_);
  enabled_grants_.MergeFrom(from.enabled_grants_);
  if (!from._internal_logout_uri().empty()) {
    _internal_set_logout_uri(from._internal_logout_uri());
  }
  if (from._internal_client_authentication() != 0) {
    _internal_set_client_authentication(from._internal_client_authentication());
  }
  if (from._internal_pkce() != 0) {
    _internal_set_pkce(from._internal_pkce());
  }
  if (from._internal_url_validation() != 0) {
    _internal_set_url_validation(from._internal_url_validation());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OAuthConfig::CopyFrom(const OAuthConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.OAuthConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OAuthConfig::IsInitialized() const {
  return true;
}

void OAuthConfig::InternalSwap(OAuthConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  origin_uris_.InternalSwap(&other->origin_uris_);
  redirect_uris_.InternalSwap(&other->redirect_uris_);
  enabled_grants_.InternalSwap(&other->enabled_grants_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &logout_uri_, lhs_arena,
      &other->logout_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OAuthConfig, url_validation_)
      + sizeof(OAuthConfig::url_validation_)
      - PROTOBUF_FIELD_OFFSET(OAuthConfig, client_authentication_)>(
          reinterpret_cast<char*>(&client_authentication_),
          reinterpret_cast<char*>(&other->client_authentication_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OAuthConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[218]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace app
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::app::v1::Robot*
Arena::CreateMaybeMessage< ::viam::app::v1::Robot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Robot >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RobotPart*
Arena::CreateMaybeMessage< ::viam::app::v1::RobotPart >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RobotPart >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RobotPartHistoryEntry*
Arena::CreateMaybeMessage< ::viam::app::v1::RobotPartHistoryEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RobotPartHistoryEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::AuthenticatorInfo*
Arena::CreateMaybeMessage< ::viam::app::v1::AuthenticatorInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::AuthenticatorInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Organization*
Arena::CreateMaybeMessage< ::viam::app::v1::Organization >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Organization >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrganizationMember*
Arena::CreateMaybeMessage< ::viam::app::v1::OrganizationMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrganizationMember >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrganizationInvite*
Arena::CreateMaybeMessage< ::viam::app::v1::OrganizationInvite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrganizationInvite >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateOrganizationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateOrganizationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateOrganizationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateOrganizationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetOrganizationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetOrganizationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetOrganizationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetOrganizationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetOrganizationNamespaceAvailabilityRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetOrganizationNamespaceAvailabilityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetOrganizationNamespaceAvailabilityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetOrganizationNamespaceAvailabilityResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetOrganizationNamespaceAvailabilityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetOrganizationNamespaceAvailabilityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateOrganizationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateOrganizationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateOrganizationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateOrganizationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOrganizationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOrganizationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOrganizationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOrganizationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOrganizationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOrganizationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationMembersRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationMembersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationMembersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationMembersResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationMembersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationMembersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateOrganizationInviteRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateOrganizationInviteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateOrganizationInviteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateOrganizationInviteResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateOrganizationInviteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateOrganizationInviteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateOrganizationInviteAuthorizationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateOrganizationInviteAuthorizationsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateOrganizationInviteAuthorizationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateOrganizationInviteAuthorizationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOrganizationInviteRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOrganizationInviteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOrganizationInviteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOrganizationInviteResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOrganizationInviteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOrganizationInviteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ResendOrganizationInviteRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ResendOrganizationInviteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ResendOrganizationInviteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ResendOrganizationInviteResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ResendOrganizationInviteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ResendOrganizationInviteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOrganizationMemberRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOrganizationMemberRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOrganizationMemberRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOrganizationMemberResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOrganizationMemberResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOrganizationMemberResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::BillingAddress*
Arena::CreateMaybeMessage< ::viam::app::v1::BillingAddress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::BillingAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::EnableBillingServiceRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::EnableBillingServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::EnableBillingServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::EnableBillingServiceResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::EnableBillingServiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::EnableBillingServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateBillingServiceRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateBillingServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateBillingServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateBillingServiceResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateBillingServiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateBillingServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetBillingServiceConfigRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetBillingServiceConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetBillingServiceConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetBillingServiceConfigResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetBillingServiceConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetBillingServiceConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DisableBillingServiceRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DisableBillingServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DisableBillingServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DisableBillingServiceResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DisableBillingServiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DisableBillingServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrganizationSetSupportEmailRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::OrganizationSetSupportEmailRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrganizationSetSupportEmailRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrganizationSetSupportEmailResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::OrganizationSetSupportEmailResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrganizationSetSupportEmailResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrganizationGetSupportEmailRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::OrganizationGetSupportEmailRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrganizationGetSupportEmailRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrganizationGetSupportEmailResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::OrganizationGetSupportEmailResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrganizationGetSupportEmailResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrganizationIdentity*
Arena::CreateMaybeMessage< ::viam::app::v1::OrganizationIdentity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrganizationIdentity >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::LocationOrganization*
Arena::CreateMaybeMessage< ::viam::app::v1::LocationOrganization >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::LocationOrganization >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::LocationAuth*
Arena::CreateMaybeMessage< ::viam::app::v1::LocationAuth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::LocationAuth >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::StorageConfig*
Arena::CreateMaybeMessage< ::viam::app::v1::StorageConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::StorageConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Location*
Arena::CreateMaybeMessage< ::viam::app::v1::Location >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Location >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::SharedSecret*
Arena::CreateMaybeMessage< ::viam::app::v1::SharedSecret >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::SharedSecret >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetOrganizationsWithAccessToLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetOrganizationsWithAccessToLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetOrganizationsWithAccessToLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetOrganizationsWithAccessToLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetOrganizationsWithAccessToLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetOrganizationsWithAccessToLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListLocationsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListLocationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListLocationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ShareLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ShareLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ShareLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ShareLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ShareLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ShareLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UnshareLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UnshareLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UnshareLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UnshareLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UnshareLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UnshareLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListLocationsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListLocationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListLocationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateLocationSecretRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateLocationSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateLocationSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateLocationSecretResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateLocationSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateLocationSecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteLocationSecretRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteLocationSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteLocationSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteLocationSecretResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteLocationSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteLocationSecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::LocationAuthRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::LocationAuthRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::LocationAuthRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::LocationAuthResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::LocationAuthResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::LocationAuthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRoverRentalRobotsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRoverRentalRobotsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRoverRentalRobotsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RoverRentalRobot*
Arena::CreateMaybeMessage< ::viam::app::v1::RoverRentalRobot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RoverRentalRobot >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRoverRentalRobotsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRoverRentalRobotsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRoverRentalRobotsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartLogsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartLogsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartLogsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartLogsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartLogsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartLogsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::TailRobotPartLogsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::TailRobotPartLogsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::TailRobotPartLogsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::TailRobotPartLogsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::TailRobotPartLogsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::TailRobotPartLogsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartHistoryRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartHistoryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartHistoryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartHistoryResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartHistoryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartHistoryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRobotPartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRobotPartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRobotPartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRobotPartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRobotPartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRobotPartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::NewRobotPartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::NewRobotPartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::NewRobotPartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::NewRobotPartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::NewRobotPartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::NewRobotPartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotPartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotPartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotPartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotAPIKeysRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotAPIKeysRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotAPIKeysRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::APIKey*
Arena::CreateMaybeMessage< ::viam::app::v1::APIKey >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::APIKey >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotAPIKeysResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotAPIKeysResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotAPIKeysResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotPartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotPartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotPartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Fragment*
Arena::CreateMaybeMessage< ::viam::app::v1::Fragment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Fragment >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::FragmentHistoryEntry*
Arena::CreateMaybeMessage< ::viam::app::v1::FragmentHistoryEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::FragmentHistoryEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::FragmentError*
Arena::CreateMaybeMessage< ::viam::app::v1::FragmentError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::FragmentError >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::FragmentUsage*
Arena::CreateMaybeMessage< ::viam::app::v1::FragmentUsage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::FragmentUsage >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ResolvedFragment*
Arena::CreateMaybeMessage< ::viam::app::v1::ResolvedFragment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ResolvedFragment >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListFragmentsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListFragmentsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListFragmentsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListFragmentsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListFragmentsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListFragmentsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetFragmentRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetFragmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetFragmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetFragmentResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetFragmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetFragmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateFragmentRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateFragmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateFragmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateFragmentResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateFragmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateFragmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateFragmentRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateFragmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateFragmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateFragmentResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateFragmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateFragmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteFragmentRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteFragmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteFragmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteFragmentResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteFragmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteFragmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetFragmentHistoryRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetFragmentHistoryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetFragmentHistoryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetFragmentHistoryResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetFragmentHistoryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetFragmentHistoryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListRobotsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListRobotsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListRobotsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListMachineFragmentsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListMachineFragmentsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListMachineFragmentsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListMachineFragmentsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListMachineFragmentsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListMachineFragmentsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListRobotsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListRobotsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListRobotsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::NewRobotRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::NewRobotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::NewRobotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::NewRobotResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::NewRobotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::NewRobotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRobotRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRobotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRobotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRobotResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRobotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRobotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::MarkPartAsMainRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::MarkPartAsMainRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::MarkPartAsMainRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::MarkPartAsMainResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::MarkPartAsMainResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::MarkPartAsMainResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::MarkPartForRestartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::MarkPartForRestartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::MarkPartForRestartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::MarkPartForRestartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::MarkPartForRestartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::MarkPartForRestartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateRobotPartSecretRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateRobotPartSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateRobotPartSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateRobotPartSecretResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateRobotPartSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateRobotPartSecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotPartSecretRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotPartSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotPartSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotPartSecretResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotPartSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotPartSecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Authorization*
Arena::CreateMaybeMessage< ::viam::app::v1::Authorization >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Authorization >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::AddRoleRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::AddRoleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::AddRoleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::AddRoleResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::AddRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::AddRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RemoveRoleRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::RemoveRoleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RemoveRoleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RemoveRoleResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::RemoveRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RemoveRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ChangeRoleRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ChangeRoleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ChangeRoleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ChangeRoleResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ChangeRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ChangeRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListAuthorizationsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListAuthorizationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListAuthorizationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListAuthorizationsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListAuthorizationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListAuthorizationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CheckPermissionsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CheckPermissionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CheckPermissionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::AuthorizedPermissions*
Arena::CreateMaybeMessage< ::viam::app::v1::AuthorizedPermissions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::AuthorizedPermissions >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CheckPermissionsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CheckPermissionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CheckPermissionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ModuleVersion*
Arena::CreateMaybeMessage< ::viam::app::v1::ModuleVersion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ModuleVersion >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ModuleMetadata*
Arena::CreateMaybeMessage< ::viam::app::v1::ModuleMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ModuleMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::MLModelMetadata*
Arena::CreateMaybeMessage< ::viam::app::v1::MLModelMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::MLModelMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::MLTrainingVersion*
Arena::CreateMaybeMessage< ::viam::app::v1::MLTrainingVersion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::MLTrainingVersion >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::MLTrainingMetadata*
Arena::CreateMaybeMessage< ::viam::app::v1::MLTrainingMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::MLTrainingMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RegistryItem*
Arena::CreateMaybeMessage< ::viam::app::v1::RegistryItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RegistryItem >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRegistryItemRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRegistryItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRegistryItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRegistryItemResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRegistryItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRegistryItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateRegistryItemRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateRegistryItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateRegistryItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateRegistryItemResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateRegistryItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateRegistryItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRegistryItemRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRegistryItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRegistryItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRegistryItemResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRegistryItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRegistryItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListRegistryItemsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListRegistryItemsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListRegistryItemsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListRegistryItemsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListRegistryItemsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListRegistryItemsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRegistryItemRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRegistryItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRegistryItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRegistryItemResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRegistryItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRegistryItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::TransferRegistryItemRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::TransferRegistryItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::TransferRegistryItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::TransferRegistryItemResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::TransferRegistryItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::TransferRegistryItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateModuleRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateModuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateModuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateModuleResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateModuleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateModuleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateModuleRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateModuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateModuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateModuleResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateModuleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateModuleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateModuleMetadata*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateModuleMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateModuleMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateMLModelMetadata*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateMLModelMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateMLModelMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateMLTrainingMetadata*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateMLTrainingMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateMLTrainingMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Model*
Arena::CreateMaybeMessage< ::viam::app::v1::Model >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Model >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ModuleFileInfo*
Arena::CreateMaybeMessage< ::viam::app::v1::ModuleFileInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ModuleFileInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UploadModuleFileRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UploadModuleFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UploadModuleFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UploadModuleFileResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UploadModuleFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UploadModuleFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetModuleRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetModuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetModuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetModuleResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetModuleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetModuleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Module*
Arena::CreateMaybeMessage< ::viam::app::v1::Module >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Module >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::VersionHistory*
Arena::CreateMaybeMessage< ::viam::app::v1::VersionHistory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::VersionHistory >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Uploads*
Arena::CreateMaybeMessage< ::viam::app::v1::Uploads >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Uploads >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListModulesRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListModulesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListModulesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListModulesResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListModulesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListModulesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetUserIDByEmailRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetUserIDByEmailRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetUserIDByEmailRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetUserIDByEmailResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetUserIDByEmailResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetUserIDByEmailResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationsByUserRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationsByUserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationsByUserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrgDetails*
Arena::CreateMaybeMessage< ::viam::app::v1::OrgDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrgDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationsByUserResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationsByUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationsByUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::SearchOrganizationsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::SearchOrganizationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::SearchOrganizationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::SearchOrganizationsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::SearchOrganizationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::SearchOrganizationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateKeyRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateKeyResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateKeyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteKeyRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteKeyResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteKeyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RenameKeyRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::RenameKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RenameKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RenameKeyResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::RenameKeyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RenameKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::AuthorizationDetails*
Arena::CreateMaybeMessage< ::viam::app::v1::AuthorizationDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::AuthorizationDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::APIKeyWithAuthorizations*
Arena::CreateMaybeMessage< ::viam::app::v1::APIKeyWithAuthorizations >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::APIKeyWithAuthorizations >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListKeysRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListKeysRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListKeysRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListKeysResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListKeysResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListKeysResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RotateKeyRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::RotateKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RotateKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RotateKeyResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::RotateKeyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RotateKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateKeyFromExistingKeyAuthorizationsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateKeyFromExistingKeyAuthorizationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateKeyFromExistingKeyAuthorizationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateKeyFromExistingKeyAuthorizationsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateKeyFromExistingKeyAuthorizationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateKeyFromExistingKeyAuthorizationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrganizationSetLogoRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::OrganizationSetLogoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrganizationSetLogoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrganizationSetLogoResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::OrganizationSetLogoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrganizationSetLogoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrganizationGetLogoRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::OrganizationGetLogoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrganizationGetLogoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OrganizationGetLogoResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::OrganizationGetLogoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OrganizationGetLogoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::EnableAuthServiceRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::EnableAuthServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::EnableAuthServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::EnableAuthServiceResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::EnableAuthServiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::EnableAuthServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DisableAuthServiceRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DisableAuthServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DisableAuthServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DisableAuthServiceResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DisableAuthServiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DisableAuthServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateOAuthAppRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateOAuthAppRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateOAuthAppRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateOAuthAppResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateOAuthAppResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateOAuthAppResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ReadOAuthAppRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ReadOAuthAppRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ReadOAuthAppRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ReadOAuthAppResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ReadOAuthAppResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ReadOAuthAppResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateOAuthAppRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateOAuthAppRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateOAuthAppRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateOAuthAppResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateOAuthAppResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateOAuthAppResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOAuthAppRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOAuthAppRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOAuthAppRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteOAuthAppResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteOAuthAppResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteOAuthAppResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOAuthAppsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOAuthAppsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOAuthAppsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOAuthAppsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOAuthAppsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOAuthAppsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::OAuthConfig*
Arena::CreateMaybeMessage< ::viam::app::v1::OAuthConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::OAuthConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
