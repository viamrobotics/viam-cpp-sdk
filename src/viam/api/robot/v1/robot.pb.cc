// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot/v1/robot.proto

#include "robot/v1/robot.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace robot {
namespace v1 {
PROTOBUF_CONSTEXPR TunnelRequest::TunnelRequest(
    ::_pbi::ConstantInitialized)
  : data_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , destination_port_(0u){}
struct TunnelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TunnelRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TunnelRequestDefaultTypeInternal() {}
  union {
    TunnelRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TunnelRequestDefaultTypeInternal _TunnelRequest_default_instance_;
PROTOBUF_CONSTEXPR TunnelResponse::TunnelResponse(
    ::_pbi::ConstantInitialized)
  : data_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct TunnelResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TunnelResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TunnelResponseDefaultTypeInternal() {}
  union {
    TunnelResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TunnelResponseDefaultTypeInternal _TunnelResponse_default_instance_;
PROTOBUF_CONSTEXPR ListTunnelsRequest::ListTunnelsRequest(
    ::_pbi::ConstantInitialized){}
struct ListTunnelsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListTunnelsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListTunnelsRequestDefaultTypeInternal() {}
  union {
    ListTunnelsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListTunnelsRequestDefaultTypeInternal _ListTunnelsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListTunnelsResponse::ListTunnelsResponse(
    ::_pbi::ConstantInitialized)
  : tunnels_(){}
struct ListTunnelsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListTunnelsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListTunnelsResponseDefaultTypeInternal() {}
  union {
    ListTunnelsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListTunnelsResponseDefaultTypeInternal _ListTunnelsResponse_default_instance_;
PROTOBUF_CONSTEXPR Tunnel::Tunnel(
    ::_pbi::ConstantInitialized)
  : connection_timeout_(nullptr)
  , port_(0u){}
struct TunnelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TunnelDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TunnelDefaultTypeInternal() {}
  union {
    Tunnel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TunnelDefaultTypeInternal _Tunnel_default_instance_;
PROTOBUF_CONSTEXPR FrameSystemConfig::FrameSystemConfig(
    ::_pbi::ConstantInitialized)
  : frame_(nullptr)
  , kinematics_(nullptr){}
struct FrameSystemConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameSystemConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameSystemConfigDefaultTypeInternal() {}
  union {
    FrameSystemConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameSystemConfigDefaultTypeInternal _FrameSystemConfig_default_instance_;
PROTOBUF_CONSTEXPR FrameSystemConfigRequest::FrameSystemConfigRequest(
    ::_pbi::ConstantInitialized)
  : supplemental_transforms_(){}
struct FrameSystemConfigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameSystemConfigRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameSystemConfigRequestDefaultTypeInternal() {}
  union {
    FrameSystemConfigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameSystemConfigRequestDefaultTypeInternal _FrameSystemConfigRequest_default_instance_;
PROTOBUF_CONSTEXPR FrameSystemConfigResponse::FrameSystemConfigResponse(
    ::_pbi::ConstantInitialized)
  : frame_system_configs_(){}
struct FrameSystemConfigResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameSystemConfigResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameSystemConfigResponseDefaultTypeInternal() {}
  union {
    FrameSystemConfigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameSystemConfigResponseDefaultTypeInternal _FrameSystemConfigResponse_default_instance_;
PROTOBUF_CONSTEXPR TransformPoseRequest::TransformPoseRequest(
    ::_pbi::ConstantInitialized)
  : supplemental_transforms_()
  , destination_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , source_(nullptr){}
struct TransformPoseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformPoseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformPoseRequestDefaultTypeInternal() {}
  union {
    TransformPoseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformPoseRequestDefaultTypeInternal _TransformPoseRequest_default_instance_;
PROTOBUF_CONSTEXPR TransformPoseResponse::TransformPoseResponse(
    ::_pbi::ConstantInitialized)
  : pose_(nullptr){}
struct TransformPoseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformPoseResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformPoseResponseDefaultTypeInternal() {}
  union {
    TransformPoseResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformPoseResponseDefaultTypeInternal _TransformPoseResponse_default_instance_;
PROTOBUF_CONSTEXPR TransformPCDRequest::TransformPCDRequest(
    ::_pbi::ConstantInitialized)
  : point_cloud_pcd_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , source_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , destination_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct TransformPCDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformPCDRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformPCDRequestDefaultTypeInternal() {}
  union {
    TransformPCDRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformPCDRequestDefaultTypeInternal _TransformPCDRequest_default_instance_;
PROTOBUF_CONSTEXPR TransformPCDResponse::TransformPCDResponse(
    ::_pbi::ConstantInitialized)
  : point_cloud_pcd_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct TransformPCDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformPCDResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformPCDResponseDefaultTypeInternal() {}
  union {
    TransformPCDResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformPCDResponseDefaultTypeInternal _TransformPCDResponse_default_instance_;
PROTOBUF_CONSTEXPR ResourceNamesRequest::ResourceNamesRequest(
    ::_pbi::ConstantInitialized){}
struct ResourceNamesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceNamesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceNamesRequestDefaultTypeInternal() {}
  union {
    ResourceNamesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceNamesRequestDefaultTypeInternal _ResourceNamesRequest_default_instance_;
PROTOBUF_CONSTEXPR ResourceNamesResponse::ResourceNamesResponse(
    ::_pbi::ConstantInitialized)
  : resources_(){}
struct ResourceNamesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceNamesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceNamesResponseDefaultTypeInternal() {}
  union {
    ResourceNamesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceNamesResponseDefaultTypeInternal _ResourceNamesResponse_default_instance_;
PROTOBUF_CONSTEXPR ResourceRPCSubtype::ResourceRPCSubtype(
    ::_pbi::ConstantInitialized)
  : proto_service_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , subtype_(nullptr){}
struct ResourceRPCSubtypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceRPCSubtypeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceRPCSubtypeDefaultTypeInternal() {}
  union {
    ResourceRPCSubtype _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceRPCSubtypeDefaultTypeInternal _ResourceRPCSubtype_default_instance_;
PROTOBUF_CONSTEXPR ResourceRPCSubtypesRequest::ResourceRPCSubtypesRequest(
    ::_pbi::ConstantInitialized){}
struct ResourceRPCSubtypesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceRPCSubtypesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceRPCSubtypesRequestDefaultTypeInternal() {}
  union {
    ResourceRPCSubtypesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceRPCSubtypesRequestDefaultTypeInternal _ResourceRPCSubtypesRequest_default_instance_;
PROTOBUF_CONSTEXPR ResourceRPCSubtypesResponse::ResourceRPCSubtypesResponse(
    ::_pbi::ConstantInitialized)
  : resource_rpc_subtypes_(){}
struct ResourceRPCSubtypesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceRPCSubtypesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceRPCSubtypesResponseDefaultTypeInternal() {}
  union {
    ResourceRPCSubtypesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceRPCSubtypesResponseDefaultTypeInternal _ResourceRPCSubtypesResponse_default_instance_;
PROTOBUF_CONSTEXPR Operation::Operation(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , method_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , session_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , arguments_(nullptr)
  , started_(nullptr){}
struct OperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationDefaultTypeInternal() {}
  union {
    Operation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationDefaultTypeInternal _Operation_default_instance_;
PROTOBUF_CONSTEXPR GetOperationsRequest::GetOperationsRequest(
    ::_pbi::ConstantInitialized){}
struct GetOperationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOperationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOperationsRequestDefaultTypeInternal() {}
  union {
    GetOperationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOperationsRequestDefaultTypeInternal _GetOperationsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetOperationsResponse::GetOperationsResponse(
    ::_pbi::ConstantInitialized)
  : operations_(){}
struct GetOperationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOperationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOperationsResponseDefaultTypeInternal() {}
  union {
    GetOperationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOperationsResponseDefaultTypeInternal _GetOperationsResponse_default_instance_;
PROTOBUF_CONSTEXPR CancelOperationRequest::CancelOperationRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CancelOperationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelOperationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelOperationRequestDefaultTypeInternal() {}
  union {
    CancelOperationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelOperationRequestDefaultTypeInternal _CancelOperationRequest_default_instance_;
PROTOBUF_CONSTEXPR CancelOperationResponse::CancelOperationResponse(
    ::_pbi::ConstantInitialized){}
struct CancelOperationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelOperationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelOperationResponseDefaultTypeInternal() {}
  union {
    CancelOperationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelOperationResponseDefaultTypeInternal _CancelOperationResponse_default_instance_;
PROTOBUF_CONSTEXPR BlockForOperationRequest::BlockForOperationRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct BlockForOperationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockForOperationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockForOperationRequestDefaultTypeInternal() {}
  union {
    BlockForOperationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockForOperationRequestDefaultTypeInternal _BlockForOperationRequest_default_instance_;
PROTOBUF_CONSTEXPR BlockForOperationResponse::BlockForOperationResponse(
    ::_pbi::ConstantInitialized){}
struct BlockForOperationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockForOperationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockForOperationResponseDefaultTypeInternal() {}
  union {
    BlockForOperationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockForOperationResponseDefaultTypeInternal _BlockForOperationResponse_default_instance_;
PROTOBUF_CONSTEXPR PeerConnectionInfo::PeerConnectionInfo(
    ::_pbi::ConstantInitialized)
  : remote_address_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , local_address_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , type_(0)
{}
struct PeerConnectionInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerConnectionInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerConnectionInfoDefaultTypeInternal() {}
  union {
    PeerConnectionInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerConnectionInfoDefaultTypeInternal _PeerConnectionInfo_default_instance_;
PROTOBUF_CONSTEXPR Session::Session(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , peer_connection_info_(nullptr){}
struct SessionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionDefaultTypeInternal() {}
  union {
    Session _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionDefaultTypeInternal _Session_default_instance_;
PROTOBUF_CONSTEXPR GetSessionsRequest::GetSessionsRequest(
    ::_pbi::ConstantInitialized){}
struct GetSessionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSessionsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSessionsRequestDefaultTypeInternal() {}
  union {
    GetSessionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSessionsRequestDefaultTypeInternal _GetSessionsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetSessionsResponse::GetSessionsResponse(
    ::_pbi::ConstantInitialized)
  : sessions_(){}
struct GetSessionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSessionsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSessionsResponseDefaultTypeInternal() {}
  union {
    GetSessionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSessionsResponseDefaultTypeInternal _GetSessionsResponse_default_instance_;
PROTOBUF_CONSTEXPR DiscoveryQuery::DiscoveryQuery(
    ::_pbi::ConstantInitialized)
  : subtype_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , model_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct DiscoveryQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiscoveryQueryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiscoveryQueryDefaultTypeInternal() {}
  union {
    DiscoveryQuery _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiscoveryQueryDefaultTypeInternal _DiscoveryQuery_default_instance_;
PROTOBUF_CONSTEXPR Discovery::Discovery(
    ::_pbi::ConstantInitialized)
  : query_(nullptr)
  , results_(nullptr){}
struct DiscoveryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiscoveryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiscoveryDefaultTypeInternal() {}
  union {
    Discovery _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiscoveryDefaultTypeInternal _Discovery_default_instance_;
PROTOBUF_CONSTEXPR ModuleModel::ModuleModel(
    ::_pbi::ConstantInitialized)
  : module_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , model_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , api_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , from_local_module_(false){}
struct ModuleModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleModelDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleModelDefaultTypeInternal() {}
  union {
    ModuleModel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleModelDefaultTypeInternal _ModuleModel_default_instance_;
PROTOBUF_CONSTEXPR GetModelsFromModulesRequest::GetModelsFromModulesRequest(
    ::_pbi::ConstantInitialized){}
struct GetModelsFromModulesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModelsFromModulesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModelsFromModulesRequestDefaultTypeInternal() {}
  union {
    GetModelsFromModulesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModelsFromModulesRequestDefaultTypeInternal _GetModelsFromModulesRequest_default_instance_;
PROTOBUF_CONSTEXPR GetModelsFromModulesResponse::GetModelsFromModulesResponse(
    ::_pbi::ConstantInitialized)
  : models_(){}
struct GetModelsFromModulesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModelsFromModulesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModelsFromModulesResponseDefaultTypeInternal() {}
  union {
    GetModelsFromModulesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModelsFromModulesResponseDefaultTypeInternal _GetModelsFromModulesResponse_default_instance_;
PROTOBUF_CONSTEXPR DiscoverComponentsRequest::DiscoverComponentsRequest(
    ::_pbi::ConstantInitialized)
  : queries_(){}
struct DiscoverComponentsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiscoverComponentsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiscoverComponentsRequestDefaultTypeInternal() {}
  union {
    DiscoverComponentsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiscoverComponentsRequestDefaultTypeInternal _DiscoverComponentsRequest_default_instance_;
PROTOBUF_CONSTEXPR DiscoverComponentsResponse::DiscoverComponentsResponse(
    ::_pbi::ConstantInitialized)
  : discovery_(){}
struct DiscoverComponentsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiscoverComponentsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiscoverComponentsResponseDefaultTypeInternal() {}
  union {
    DiscoverComponentsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiscoverComponentsResponseDefaultTypeInternal _DiscoverComponentsResponse_default_instance_;
PROTOBUF_CONSTEXPR Status::Status(
    ::_pbi::ConstantInitialized)
  : name_(nullptr)
  , status_(nullptr)
  , last_reconfigured_(nullptr){}
struct StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusDefaultTypeInternal _Status_default_instance_;
PROTOBUF_CONSTEXPR GetStatusRequest::GetStatusRequest(
    ::_pbi::ConstantInitialized)
  : resource_names_(){}
struct GetStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStatusRequestDefaultTypeInternal() {}
  union {
    GetStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStatusRequestDefaultTypeInternal _GetStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR GetStatusResponse::GetStatusResponse(
    ::_pbi::ConstantInitialized)
  : status_(){}
struct GetStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStatusResponseDefaultTypeInternal() {}
  union {
    GetStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStatusResponseDefaultTypeInternal _GetStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR StreamStatusRequest::StreamStatusRequest(
    ::_pbi::ConstantInitialized)
  : resource_names_()
  , every_(nullptr){}
struct StreamStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamStatusRequestDefaultTypeInternal() {}
  union {
    StreamStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamStatusRequestDefaultTypeInternal _StreamStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR StreamStatusResponse::StreamStatusResponse(
    ::_pbi::ConstantInitialized)
  : status_(){}
struct StreamStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamStatusResponseDefaultTypeInternal() {}
  union {
    StreamStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamStatusResponseDefaultTypeInternal _StreamStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR StopExtraParameters::StopExtraParameters(
    ::_pbi::ConstantInitialized)
  : name_(nullptr)
  , params_(nullptr){}
struct StopExtraParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopExtraParametersDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopExtraParametersDefaultTypeInternal() {}
  union {
    StopExtraParameters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopExtraParametersDefaultTypeInternal _StopExtraParameters_default_instance_;
PROTOBUF_CONSTEXPR StopAllRequest::StopAllRequest(
    ::_pbi::ConstantInitialized)
  : extra_(){}
struct StopAllRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopAllRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopAllRequestDefaultTypeInternal() {}
  union {
    StopAllRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopAllRequestDefaultTypeInternal _StopAllRequest_default_instance_;
PROTOBUF_CONSTEXPR StopAllResponse::StopAllResponse(
    ::_pbi::ConstantInitialized){}
struct StopAllResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopAllResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopAllResponseDefaultTypeInternal() {}
  union {
    StopAllResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopAllResponseDefaultTypeInternal _StopAllResponse_default_instance_;
PROTOBUF_CONSTEXPR StartSessionRequest::StartSessionRequest(
    ::_pbi::ConstantInitialized)
  : resume_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct StartSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartSessionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartSessionRequestDefaultTypeInternal() {}
  union {
    StartSessionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartSessionRequestDefaultTypeInternal _StartSessionRequest_default_instance_;
PROTOBUF_CONSTEXPR StartSessionResponse::StartSessionResponse(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , heartbeat_window_(nullptr){}
struct StartSessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartSessionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartSessionResponseDefaultTypeInternal() {}
  union {
    StartSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartSessionResponseDefaultTypeInternal _StartSessionResponse_default_instance_;
PROTOBUF_CONSTEXPR SendSessionHeartbeatRequest::SendSessionHeartbeatRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct SendSessionHeartbeatRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendSessionHeartbeatRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendSessionHeartbeatRequestDefaultTypeInternal() {}
  union {
    SendSessionHeartbeatRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendSessionHeartbeatRequestDefaultTypeInternal _SendSessionHeartbeatRequest_default_instance_;
PROTOBUF_CONSTEXPR SendSessionHeartbeatResponse::SendSessionHeartbeatResponse(
    ::_pbi::ConstantInitialized){}
struct SendSessionHeartbeatResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendSessionHeartbeatResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendSessionHeartbeatResponseDefaultTypeInternal() {}
  union {
    SendSessionHeartbeatResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendSessionHeartbeatResponseDefaultTypeInternal _SendSessionHeartbeatResponse_default_instance_;
PROTOBUF_CONSTEXPR LogRequest::LogRequest(
    ::_pbi::ConstantInitialized)
  : logs_(){}
struct LogRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogRequestDefaultTypeInternal() {}
  union {
    LogRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogRequestDefaultTypeInternal _LogRequest_default_instance_;
PROTOBUF_CONSTEXPR LogResponse::LogResponse(
    ::_pbi::ConstantInitialized){}
struct LogResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogResponseDefaultTypeInternal() {}
  union {
    LogResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogResponseDefaultTypeInternal _LogResponse_default_instance_;
PROTOBUF_CONSTEXPR GetCloudMetadataRequest::GetCloudMetadataRequest(
    ::_pbi::ConstantInitialized){}
struct GetCloudMetadataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCloudMetadataRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCloudMetadataRequestDefaultTypeInternal() {}
  union {
    GetCloudMetadataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCloudMetadataRequestDefaultTypeInternal _GetCloudMetadataRequest_default_instance_;
PROTOBUF_CONSTEXPR GetCloudMetadataResponse::GetCloudMetadataResponse(
    ::_pbi::ConstantInitialized)
  : robot_part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , primary_org_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , machine_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , machine_part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetCloudMetadataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCloudMetadataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCloudMetadataResponseDefaultTypeInternal() {}
  union {
    GetCloudMetadataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCloudMetadataResponseDefaultTypeInternal _GetCloudMetadataResponse_default_instance_;
PROTOBUF_CONSTEXPR RestartModuleRequest::RestartModuleRequest(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct RestartModuleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RestartModuleRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RestartModuleRequestDefaultTypeInternal() {}
  union {
    RestartModuleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RestartModuleRequestDefaultTypeInternal _RestartModuleRequest_default_instance_;
PROTOBUF_CONSTEXPR RestartModuleResponse::RestartModuleResponse(
    ::_pbi::ConstantInitialized){}
struct RestartModuleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RestartModuleResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RestartModuleResponseDefaultTypeInternal() {}
  union {
    RestartModuleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RestartModuleResponseDefaultTypeInternal _RestartModuleResponse_default_instance_;
PROTOBUF_CONSTEXPR ShutdownRequest::ShutdownRequest(
    ::_pbi::ConstantInitialized){}
struct ShutdownRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShutdownRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShutdownRequestDefaultTypeInternal() {}
  union {
    ShutdownRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShutdownRequestDefaultTypeInternal _ShutdownRequest_default_instance_;
PROTOBUF_CONSTEXPR ShutdownResponse::ShutdownResponse(
    ::_pbi::ConstantInitialized){}
struct ShutdownResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShutdownResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShutdownResponseDefaultTypeInternal() {}
  union {
    ShutdownResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShutdownResponseDefaultTypeInternal _ShutdownResponse_default_instance_;
PROTOBUF_CONSTEXPR GetMachineStatusRequest::GetMachineStatusRequest(
    ::_pbi::ConstantInitialized){}
struct GetMachineStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMachineStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMachineStatusRequestDefaultTypeInternal() {}
  union {
    GetMachineStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMachineStatusRequestDefaultTypeInternal _GetMachineStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR GetMachineStatusResponse::GetMachineStatusResponse(
    ::_pbi::ConstantInitialized)
  : resources_()
  , config_(nullptr)
  , state_(0)
{}
struct GetMachineStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMachineStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMachineStatusResponseDefaultTypeInternal() {}
  union {
    GetMachineStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMachineStatusResponseDefaultTypeInternal _GetMachineStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR ResourceStatus::ResourceStatus(
    ::_pbi::ConstantInitialized)
  : revision_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , error_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(nullptr)
  , last_updated_(nullptr)
  , cloud_metadata_(nullptr)
  , state_(0)
{}
struct ResourceStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceStatusDefaultTypeInternal() {}
  union {
    ResourceStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceStatusDefaultTypeInternal _ResourceStatus_default_instance_;
PROTOBUF_CONSTEXPR ConfigStatus::ConfigStatus(
    ::_pbi::ConstantInitialized)
  : revision_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , last_updated_(nullptr){}
struct ConfigStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigStatusDefaultTypeInternal() {}
  union {
    ConfigStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigStatusDefaultTypeInternal _ConfigStatus_default_instance_;
PROTOBUF_CONSTEXPR GetVersionRequest::GetVersionRequest(
    ::_pbi::ConstantInitialized){}
struct GetVersionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVersionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVersionRequestDefaultTypeInternal() {}
  union {
    GetVersionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVersionRequestDefaultTypeInternal _GetVersionRequest_default_instance_;
PROTOBUF_CONSTEXPR GetVersionResponse::GetVersionResponse(
    ::_pbi::ConstantInitialized)
  : platform_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , api_version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetVersionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVersionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVersionResponseDefaultTypeInternal() {}
  union {
    GetVersionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVersionResponseDefaultTypeInternal _GetVersionResponse_default_instance_;
}  // namespace v1
}  // namespace robot
}  // namespace viam
static ::_pb::Metadata file_level_metadata_robot_2fv1_2frobot_2eproto[61];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_robot_2fv1_2frobot_2eproto[3];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_robot_2fv1_2frobot_2eproto = nullptr;

const uint32_t TableStruct_robot_2fv1_2frobot_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TunnelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TunnelRequest, destination_port_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TunnelRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TunnelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TunnelResponse, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ListTunnelsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ListTunnelsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ListTunnelsResponse, tunnels_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Tunnel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Tunnel, port_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Tunnel, connection_timeout_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfig, frame_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfig, kinematics_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfigRequest, supplemental_transforms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfigResponse, frame_system_configs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPoseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPoseRequest, source_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPoseRequest, destination_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPoseRequest, supplemental_transforms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPoseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPoseResponse, pose_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPCDRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPCDRequest, point_cloud_pcd_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPCDRequest, source_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPCDRequest, destination_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPCDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPCDResponse, point_cloud_pcd_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceNamesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceNamesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceNamesResponse, resources_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceRPCSubtype, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceRPCSubtype, subtype_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceRPCSubtype, proto_service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceRPCSubtypesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceRPCSubtypesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceRPCSubtypesResponse, resource_rpc_subtypes_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, id_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, method_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, arguments_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, started_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, session_id_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetOperationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetOperationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetOperationsResponse, operations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::CancelOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::CancelOperationRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::CancelOperationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::BlockForOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::BlockForOperationRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::BlockForOperationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::PeerConnectionInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::PeerConnectionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::PeerConnectionInfo, type_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::PeerConnectionInfo, remote_address_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::PeerConnectionInfo, local_address_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Session, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Session, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Session, id_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Session, peer_connection_info_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetSessionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetSessionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetSessionsResponse, sessions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoveryQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoveryQuery, subtype_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoveryQuery, model_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoveryQuery, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Discovery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Discovery, query_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Discovery, results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ModuleModel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ModuleModel, module_name_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ModuleModel, model_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ModuleModel, api_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ModuleModel, from_local_module_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetModelsFromModulesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetModelsFromModulesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetModelsFromModulesResponse, models_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoverComponentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoverComponentsRequest, queries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoverComponentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoverComponentsResponse, discovery_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Status, name_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Status, status_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Status, last_reconfigured_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetStatusRequest, resource_names_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetStatusResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StreamStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StreamStatusRequest, resource_names_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StreamStatusRequest, every_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StreamStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StreamStatusResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StopExtraParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StopExtraParameters, name_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StopExtraParameters, params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StopAllRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StopAllRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StopAllResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StartSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StartSessionRequest, resume_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StartSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StartSessionResponse, id_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StartSessionResponse, heartbeat_window_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::SendSessionHeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::SendSessionHeartbeatRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::SendSessionHeartbeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::LogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::LogRequest, logs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::LogResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetCloudMetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetCloudMetadataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetCloudMetadataResponse, robot_part_id_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetCloudMetadataResponse, primary_org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetCloudMetadataResponse, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetCloudMetadataResponse, machine_id_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetCloudMetadataResponse, machine_part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::RestartModuleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::RestartModuleRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::RestartModuleRequest, id_or_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::RestartModuleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ShutdownRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ShutdownResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetMachineStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetMachineStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetMachineStatusResponse, resources_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetMachineStatusResponse, config_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetMachineStatusResponse, state_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceStatus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceStatus, name_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceStatus, state_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceStatus, last_updated_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceStatus, revision_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceStatus, error_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceStatus, cloud_metadata_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ConfigStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ConfigStatus, revision_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ConfigStatus, last_updated_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetVersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetVersionResponse, platform_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetVersionResponse, version_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetVersionResponse, api_version_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::robot::v1::TunnelRequest)},
  { 8, -1, -1, sizeof(::viam::robot::v1::TunnelResponse)},
  { 15, -1, -1, sizeof(::viam::robot::v1::ListTunnelsRequest)},
  { 21, -1, -1, sizeof(::viam::robot::v1::ListTunnelsResponse)},
  { 28, -1, -1, sizeof(::viam::robot::v1::Tunnel)},
  { 36, -1, -1, sizeof(::viam::robot::v1::FrameSystemConfig)},
  { 44, -1, -1, sizeof(::viam::robot::v1::FrameSystemConfigRequest)},
  { 51, -1, -1, sizeof(::viam::robot::v1::FrameSystemConfigResponse)},
  { 58, -1, -1, sizeof(::viam::robot::v1::TransformPoseRequest)},
  { 67, -1, -1, sizeof(::viam::robot::v1::TransformPoseResponse)},
  { 74, -1, -1, sizeof(::viam::robot::v1::TransformPCDRequest)},
  { 83, -1, -1, sizeof(::viam::robot::v1::TransformPCDResponse)},
  { 90, -1, -1, sizeof(::viam::robot::v1::ResourceNamesRequest)},
  { 96, -1, -1, sizeof(::viam::robot::v1::ResourceNamesResponse)},
  { 103, -1, -1, sizeof(::viam::robot::v1::ResourceRPCSubtype)},
  { 111, -1, -1, sizeof(::viam::robot::v1::ResourceRPCSubtypesRequest)},
  { 117, -1, -1, sizeof(::viam::robot::v1::ResourceRPCSubtypesResponse)},
  { 124, 135, -1, sizeof(::viam::robot::v1::Operation)},
  { 140, -1, -1, sizeof(::viam::robot::v1::GetOperationsRequest)},
  { 146, -1, -1, sizeof(::viam::robot::v1::GetOperationsResponse)},
  { 153, -1, -1, sizeof(::viam::robot::v1::CancelOperationRequest)},
  { 160, -1, -1, sizeof(::viam::robot::v1::CancelOperationResponse)},
  { 166, -1, -1, sizeof(::viam::robot::v1::BlockForOperationRequest)},
  { 173, -1, -1, sizeof(::viam::robot::v1::BlockForOperationResponse)},
  { 179, 188, -1, sizeof(::viam::robot::v1::PeerConnectionInfo)},
  { 191, 199, -1, sizeof(::viam::robot::v1::Session)},
  { 201, -1, -1, sizeof(::viam::robot::v1::GetSessionsRequest)},
  { 207, -1, -1, sizeof(::viam::robot::v1::GetSessionsResponse)},
  { 214, -1, -1, sizeof(::viam::robot::v1::DiscoveryQuery)},
  { 223, -1, -1, sizeof(::viam::robot::v1::Discovery)},
  { 231, -1, -1, sizeof(::viam::robot::v1::ModuleModel)},
  { 241, -1, -1, sizeof(::viam::robot::v1::GetModelsFromModulesRequest)},
  { 247, -1, -1, sizeof(::viam::robot::v1::GetModelsFromModulesResponse)},
  { 254, -1, -1, sizeof(::viam::robot::v1::DiscoverComponentsRequest)},
  { 261, -1, -1, sizeof(::viam::robot::v1::DiscoverComponentsResponse)},
  { 268, -1, -1, sizeof(::viam::robot::v1::Status)},
  { 277, -1, -1, sizeof(::viam::robot::v1::GetStatusRequest)},
  { 284, -1, -1, sizeof(::viam::robot::v1::GetStatusResponse)},
  { 291, -1, -1, sizeof(::viam::robot::v1::StreamStatusRequest)},
  { 299, -1, -1, sizeof(::viam::robot::v1::StreamStatusResponse)},
  { 306, -1, -1, sizeof(::viam::robot::v1::StopExtraParameters)},
  { 314, -1, -1, sizeof(::viam::robot::v1::StopAllRequest)},
  { 321, -1, -1, sizeof(::viam::robot::v1::StopAllResponse)},
  { 327, -1, -1, sizeof(::viam::robot::v1::StartSessionRequest)},
  { 334, -1, -1, sizeof(::viam::robot::v1::StartSessionResponse)},
  { 342, -1, -1, sizeof(::viam::robot::v1::SendSessionHeartbeatRequest)},
  { 349, -1, -1, sizeof(::viam::robot::v1::SendSessionHeartbeatResponse)},
  { 355, -1, -1, sizeof(::viam::robot::v1::LogRequest)},
  { 362, -1, -1, sizeof(::viam::robot::v1::LogResponse)},
  { 368, -1, -1, sizeof(::viam::robot::v1::GetCloudMetadataRequest)},
  { 374, -1, -1, sizeof(::viam::robot::v1::GetCloudMetadataResponse)},
  { 385, -1, -1, sizeof(::viam::robot::v1::RestartModuleRequest)},
  { 394, -1, -1, sizeof(::viam::robot::v1::RestartModuleResponse)},
  { 400, -1, -1, sizeof(::viam::robot::v1::ShutdownRequest)},
  { 406, -1, -1, sizeof(::viam::robot::v1::ShutdownResponse)},
  { 412, -1, -1, sizeof(::viam::robot::v1::GetMachineStatusRequest)},
  { 418, -1, -1, sizeof(::viam::robot::v1::GetMachineStatusResponse)},
  { 427, 439, -1, sizeof(::viam::robot::v1::ResourceStatus)},
  { 445, -1, -1, sizeof(::viam::robot::v1::ConfigStatus)},
  { 453, -1, -1, sizeof(::viam::robot::v1::GetVersionRequest)},
  { 459, -1, -1, sizeof(::viam::robot::v1::GetVersionResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::robot::v1::_TunnelRequest_default_instance_._instance,
  &::viam::robot::v1::_TunnelResponse_default_instance_._instance,
  &::viam::robot::v1::_ListTunnelsRequest_default_instance_._instance,
  &::viam::robot::v1::_ListTunnelsResponse_default_instance_._instance,
  &::viam::robot::v1::_Tunnel_default_instance_._instance,
  &::viam::robot::v1::_FrameSystemConfig_default_instance_._instance,
  &::viam::robot::v1::_FrameSystemConfigRequest_default_instance_._instance,
  &::viam::robot::v1::_FrameSystemConfigResponse_default_instance_._instance,
  &::viam::robot::v1::_TransformPoseRequest_default_instance_._instance,
  &::viam::robot::v1::_TransformPoseResponse_default_instance_._instance,
  &::viam::robot::v1::_TransformPCDRequest_default_instance_._instance,
  &::viam::robot::v1::_TransformPCDResponse_default_instance_._instance,
  &::viam::robot::v1::_ResourceNamesRequest_default_instance_._instance,
  &::viam::robot::v1::_ResourceNamesResponse_default_instance_._instance,
  &::viam::robot::v1::_ResourceRPCSubtype_default_instance_._instance,
  &::viam::robot::v1::_ResourceRPCSubtypesRequest_default_instance_._instance,
  &::viam::robot::v1::_ResourceRPCSubtypesResponse_default_instance_._instance,
  &::viam::robot::v1::_Operation_default_instance_._instance,
  &::viam::robot::v1::_GetOperationsRequest_default_instance_._instance,
  &::viam::robot::v1::_GetOperationsResponse_default_instance_._instance,
  &::viam::robot::v1::_CancelOperationRequest_default_instance_._instance,
  &::viam::robot::v1::_CancelOperationResponse_default_instance_._instance,
  &::viam::robot::v1::_BlockForOperationRequest_default_instance_._instance,
  &::viam::robot::v1::_BlockForOperationResponse_default_instance_._instance,
  &::viam::robot::v1::_PeerConnectionInfo_default_instance_._instance,
  &::viam::robot::v1::_Session_default_instance_._instance,
  &::viam::robot::v1::_GetSessionsRequest_default_instance_._instance,
  &::viam::robot::v1::_GetSessionsResponse_default_instance_._instance,
  &::viam::robot::v1::_DiscoveryQuery_default_instance_._instance,
  &::viam::robot::v1::_Discovery_default_instance_._instance,
  &::viam::robot::v1::_ModuleModel_default_instance_._instance,
  &::viam::robot::v1::_GetModelsFromModulesRequest_default_instance_._instance,
  &::viam::robot::v1::_GetModelsFromModulesResponse_default_instance_._instance,
  &::viam::robot::v1::_DiscoverComponentsRequest_default_instance_._instance,
  &::viam::robot::v1::_DiscoverComponentsResponse_default_instance_._instance,
  &::viam::robot::v1::_Status_default_instance_._instance,
  &::viam::robot::v1::_GetStatusRequest_default_instance_._instance,
  &::viam::robot::v1::_GetStatusResponse_default_instance_._instance,
  &::viam::robot::v1::_StreamStatusRequest_default_instance_._instance,
  &::viam::robot::v1::_StreamStatusResponse_default_instance_._instance,
  &::viam::robot::v1::_StopExtraParameters_default_instance_._instance,
  &::viam::robot::v1::_StopAllRequest_default_instance_._instance,
  &::viam::robot::v1::_StopAllResponse_default_instance_._instance,
  &::viam::robot::v1::_StartSessionRequest_default_instance_._instance,
  &::viam::robot::v1::_StartSessionResponse_default_instance_._instance,
  &::viam::robot::v1::_SendSessionHeartbeatRequest_default_instance_._instance,
  &::viam::robot::v1::_SendSessionHeartbeatResponse_default_instance_._instance,
  &::viam::robot::v1::_LogRequest_default_instance_._instance,
  &::viam::robot::v1::_LogResponse_default_instance_._instance,
  &::viam::robot::v1::_GetCloudMetadataRequest_default_instance_._instance,
  &::viam::robot::v1::_GetCloudMetadataResponse_default_instance_._instance,
  &::viam::robot::v1::_RestartModuleRequest_default_instance_._instance,
  &::viam::robot::v1::_RestartModuleResponse_default_instance_._instance,
  &::viam::robot::v1::_ShutdownRequest_default_instance_._instance,
  &::viam::robot::v1::_ShutdownResponse_default_instance_._instance,
  &::viam::robot::v1::_GetMachineStatusRequest_default_instance_._instance,
  &::viam::robot::v1::_GetMachineStatusResponse_default_instance_._instance,
  &::viam::robot::v1::_ResourceStatus_default_instance_._instance,
  &::viam::robot::v1::_ConfigStatus_default_instance_._instance,
  &::viam::robot::v1::_GetVersionRequest_default_instance_._instance,
  &::viam::robot::v1::_GetVersionResponse_default_instance_._instance,
};

const char descriptor_table_protodef_robot_2fv1_2frobot_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024robot/v1/robot.proto\022\rviam.robot.v1\032\026c"
  "ommon/v1/common.proto\032\034google/api/annota"
  "tions.proto\032\036google/protobuf/duration.pr"
  "oto\032\034google/protobuf/struct.proto\032\037googl"
  "e/protobuf/timestamp.proto\"N\n\rTunnelRequ"
  "est\022)\n\020destination_port\030\001 \001(\rR\017destinati"
  "onPort\022\022\n\004data\030\002 \001(\014R\004data\"$\n\016TunnelResp"
  "onse\022\022\n\004data\030\001 \001(\014R\004data\"\024\n\022ListTunnelsR"
  "equest\"F\n\023ListTunnelsResponse\022/\n\007tunnels"
  "\030\001 \003(\0132\025.viam.robot.v1.TunnelR\007tunnels\"f"
  "\n\006Tunnel\022\022\n\004port\030\001 \001(\rR\004port\022H\n\022connecti"
  "on_timeout\030\002 \001(\0132\031.google.protobuf.Durat"
  "ionR\021connectionTimeout\"}\n\021FrameSystemCon"
  "fig\022/\n\005frame\030\001 \001(\0132\031.viam.common.v1.Tran"
  "sformR\005frame\0227\n\nkinematics\030\002 \001(\0132\027.googl"
  "e.protobuf.StructR\nkinematics\"n\n\030FrameSy"
  "stemConfigRequest\022R\n\027supplemental_transf"
  "orms\030\001 \003(\0132\031.viam.common.v1.TransformR\026s"
  "upplementalTransforms\"o\n\031FrameSystemConf"
  "igResponse\022R\n\024frame_system_configs\030\001 \003(\013"
  "2 .viam.robot.v1.FrameSystemConfigR\022fram"
  "eSystemConfigs\"\301\001\n\024TransformPoseRequest\022"
  "3\n\006source\030\001 \001(\0132\033.viam.common.v1.PoseInF"
  "rameR\006source\022 \n\013destination\030\002 \001(\tR\013desti"
  "nation\022R\n\027supplemental_transforms\030\003 \003(\0132"
  "\031.viam.common.v1.TransformR\026supplemental"
  "Transforms\"H\n\025TransformPoseResponse\022/\n\004p"
  "ose\030\001 \001(\0132\033.viam.common.v1.PoseInFrameR\004"
  "pose\"w\n\023TransformPCDRequest\022&\n\017point_clo"
  "ud_pcd\030\001 \001(\014R\rpointCloudPcd\022\026\n\006source\030\002 "
  "\001(\tR\006source\022 \n\013destination\030\003 \001(\tR\013destin"
  "ation\">\n\024TransformPCDResponse\022&\n\017point_c"
  "loud_pcd\030\001 \001(\014R\rpointCloudPcd\"\026\n\024Resourc"
  "eNamesRequest\"S\n\025ResourceNamesResponse\022:"
  "\n\tresources\030\001 \003(\0132\034.viam.common.v1.Resou"
  "rceNameR\tresources\"q\n\022ResourceRPCSubtype"
  "\0226\n\007subtype\030\001 \001(\0132\034.viam.common.v1.Resou"
  "rceNameR\007subtype\022#\n\rproto_service\030\002 \001(\tR"
  "\014protoService\"\034\n\032ResourceRPCSubtypesRequ"
  "est\"t\n\033ResourceRPCSubtypesResponse\022U\n\025re"
  "source_rpc_subtypes\030\001 \003(\0132!.viam.robot.v"
  "1.ResourceRPCSubtypeR\023resourceRpcSubtype"
  "s\"\323\001\n\tOperation\022\016\n\002id\030\001 \001(\tR\002id\022\026\n\006metho"
  "d\030\002 \001(\tR\006method\0225\n\targuments\030\003 \001(\0132\027.goo"
  "gle.protobuf.StructR\targuments\0224\n\007starte"
  "d\030\004 \001(\0132\032.google.protobuf.TimestampR\007sta"
  "rted\022\"\n\nsession_id\030\005 \001(\tH\000R\tsessionId\210\001\001"
  "B\r\n\013_session_id\"\026\n\024GetOperationsRequest\""
  "Q\n\025GetOperationsResponse\0228\n\noperations\030\001"
  " \003(\0132\030.viam.robot.v1.OperationR\noperatio"
  "ns\"(\n\026CancelOperationRequest\022\016\n\002id\030\001 \001(\t"
  "R\002id\"\031\n\027CancelOperationResponse\"*\n\030Block"
  "ForOperationRequest\022\016\n\002id\030\001 \001(\tR\002id\"\033\n\031B"
  "lockForOperationResponse\"\306\001\n\022PeerConnect"
  "ionInfo\0225\n\004type\030\001 \001(\0162!.viam.robot.v1.Pe"
  "erConnectionTypeR\004type\022*\n\016remote_address"
  "\030\002 \001(\tH\000R\rremoteAddress\210\001\001\022(\n\rlocal_addr"
  "ess\030\003 \001(\tH\001R\014localAddress\210\001\001B\021\n\017_remote_"
  "addressB\020\n\016_local_address\"\214\001\n\007Session\022\016\n"
  "\002id\030\001 \001(\tR\002id\022X\n\024peer_connection_info\030\002 "
  "\001(\0132!.viam.robot.v1.PeerConnectionInfoH\000"
  "R\022peerConnectionInfo\210\001\001B\027\n\025_peer_connect"
  "ion_info\"\024\n\022GetSessionsRequest\"I\n\023GetSes"
  "sionsResponse\0222\n\010sessions\030\001 \003(\0132\026.viam.r"
  "obot.v1.SessionR\010sessions\"s\n\016DiscoveryQu"
  "ery\022\030\n\007subtype\030\001 \001(\tR\007subtype\022\024\n\005model\030\002"
  " \001(\tR\005model\022-\n\005extra\030c \001(\0132\027.google.prot"
  "obuf.StructR\005extra:\002\030\001\"w\n\tDiscovery\0223\n\005q"
  "uery\030\001 \001(\0132\035.viam.robot.v1.DiscoveryQuer"
  "yR\005query\0221\n\007results\030\002 \001(\0132\027.google.proto"
  "buf.StructR\007results:\002\030\001\"\202\001\n\013ModuleModel\022"
  "\037\n\013module_name\030\001 \001(\tR\nmoduleName\022\024\n\005mode"
  "l\030\002 \001(\tR\005model\022\020\n\003api\030\003 \001(\tR\003api\022*\n\021from"
  "_local_module\030\004 \001(\010R\017fromLocalModule\"\035\n\033"
  "GetModelsFromModulesRequest\"R\n\034GetModels"
  "FromModulesResponse\0222\n\006models\030\001 \003(\0132\032.vi"
  "am.robot.v1.ModuleModelR\006models\"X\n\031Disco"
  "verComponentsRequest\0227\n\007queries\030\001 \003(\0132\035."
  "viam.robot.v1.DiscoveryQueryR\007queries:\002\030"
  "\001\"X\n\032DiscoverComponentsResponse\0226\n\tdisco"
  "very\030\001 \003(\0132\030.viam.robot.v1.DiscoveryR\tdi"
  "scovery:\002\030\001\"\264\001\n\006Status\0220\n\004name\030\001 \001(\0132\034.v"
  "iam.common.v1.ResourceNameR\004name\022/\n\006stat"
  "us\030\002 \001(\0132\027.google.protobuf.StructR\006statu"
  "s\022G\n\021last_reconfigured\030\003 \001(\0132\032.google.pr"
  "otobuf.TimestampR\020lastReconfigured\"W\n\020Ge"
  "tStatusRequest\022C\n\016resource_names\030\001 \003(\0132\034"
  ".viam.common.v1.ResourceNameR\rresourceNa"
  "mes\"B\n\021GetStatusResponse\022-\n\006status\030\001 \003(\013"
  "2\025.viam.robot.v1.StatusR\006status\"\213\001\n\023Stre"
  "amStatusRequest\022C\n\016resource_names\030\001 \003(\0132"
  "\034.viam.common.v1.ResourceNameR\rresourceN"
  "ames\022/\n\005every\030\002 \001(\0132\031.google.protobuf.Du"
  "rationR\005every\"E\n\024StreamStatusResponse\022-\n"
  "\006status\030\001 \003(\0132\025.viam.robot.v1.StatusR\006st"
  "atus\"x\n\023StopExtraParameters\0220\n\004name\030\001 \001("
  "\0132\034.viam.common.v1.ResourceNameR\004name\022/\n"
  "\006params\030\002 \001(\0132\027.google.protobuf.StructR\006"
  "params\"J\n\016StopAllRequest\0228\n\005extra\030c \003(\0132"
  "\".viam.robot.v1.StopExtraParametersR\005ext"
  "ra\"\021\n\017StopAllResponse\"-\n\023StartSessionReq"
  "uest\022\026\n\006resume\030\001 \001(\tR\006resume\"l\n\024StartSes"
  "sionResponse\022\016\n\002id\030\001 \001(\tR\002id\022D\n\020heartbea"
  "t_window\030\002 \001(\0132\031.google.protobuf.Duratio"
  "nR\017heartbeatWindow\"-\n\033SendSessionHeartbe"
  "atRequest\022\016\n\002id\030\001 \001(\tR\002id\"\036\n\034SendSession"
  "HeartbeatResponse\":\n\nLogRequest\022,\n\004logs\030"
  "\001 \003(\0132\030.viam.common.v1.LogEntryR\004logs\"\r\n"
  "\013LogResponse\"\031\n\027GetCloudMetadataRequest\""
  "\320\001\n\030GetCloudMetadataResponse\022&\n\rrobot_pa"
  "rt_id\030\001 \001(\tB\002\030\001R\013robotPartId\022$\n\016primary_"
  "org_id\030\002 \001(\tR\014primaryOrgId\022\037\n\013location_i"
  "d\030\003 \001(\tR\nlocationId\022\035\n\nmachine_id\030\004 \001(\tR"
  "\tmachineId\022&\n\017machine_part_id\030\005 \001(\tR\rmac"
  "hinePartId\"f\n\024RestartModuleRequest\022\035\n\tmo"
  "dule_id\030\001 \001(\tH\000R\010moduleId\022!\n\013module_name"
  "\030\002 \001(\tH\000R\nmoduleNameB\014\n\nid_or_name\"\027\n\025Re"
  "startModuleResponse\"\021\n\017ShutdownRequest\"\022"
  "\n\020ShutdownResponse\"\031\n\027GetMachineStatusRe"
  "quest\"\234\002\n\030GetMachineStatusResponse\022;\n\tre"
  "sources\030\001 \003(\0132\035.viam.robot.v1.ResourceSt"
  "atusR\tresources\0223\n\006config\030\002 \001(\0132\033.viam.r"
  "obot.v1.ConfigStatusR\006config\022C\n\005state\030\003 "
  "\001(\0162-.viam.robot.v1.GetMachineStatusResp"
  "onse.StateR\005state\"I\n\005State\022\025\n\021STATE_UNSP"
  "ECIFIED\020\000\022\026\n\022STATE_INITIALIZING\020\001\022\021\n\rSTA"
  "TE_RUNNING\020\002\"\340\003\n\016ResourceStatus\0220\n\004name\030"
  "\001 \001(\0132\034.viam.common.v1.ResourceNameR\004nam"
  "e\0229\n\005state\030\002 \001(\0162#.viam.robot.v1.Resourc"
  "eStatus.StateR\005state\022=\n\014last_updated\030\003 \001"
  "(\0132\032.google.protobuf.TimestampR\013lastUpda"
  "ted\022\032\n\010revision\030\004 \001(\tR\010revision\022\024\n\005error"
  "\030\005 \001(\tR\005error\022S\n\016cloud_metadata\030\006 \001(\0132\'."
  "viam.robot.v1.GetCloudMetadataResponseH\000"
  "R\rcloudMetadata\210\001\001\"\207\001\n\005State\022\025\n\021STATE_UN"
  "SPECIFIED\020\000\022\026\n\022STATE_UNCONFIGURED\020\001\022\025\n\021S"
  "TATE_CONFIGURING\020\002\022\017\n\013STATE_READY\020\003\022\022\n\016S"
  "TATE_REMOVING\020\004\022\023\n\017STATE_UNHEALTHY\020\005B\021\n\017"
  "_cloud_metadata\"i\n\014ConfigStatus\022\032\n\010revis"
  "ion\030\001 \001(\tR\010revision\022=\n\014last_updated\030\002 \001("
  "\0132\032.google.protobuf.TimestampR\013lastUpdat"
  "ed\"\023\n\021GetVersionRequest\"k\n\022GetVersionRes"
  "ponse\022\032\n\010platform\030\001 \001(\tR\010platform\022\030\n\007ver"
  "sion\030\002 \001(\tR\007version\022\037\n\013api_version\030\003 \001(\t"
  "R\napiVersion*z\n\022PeerConnectionType\022$\n PE"
  "ER_CONNECTION_TYPE_UNSPECIFIED\020\000\022\035\n\031PEER"
  "_CONNECTION_TYPE_GRPC\020\001\022\037\n\033PEER_CONNECTI"
  "ON_TYPE_WEBRTC\020\0022\250\030\n\014RobotService\022\200\001\n\rGe"
  "tOperations\022#.viam.robot.v1.GetOperation"
  "sRequest\032$.viam.robot.v1.GetOperationsRe"
  "sponse\"$\202\323\344\223\002\036\022\034/viam/api/v1/operations/"
  "list\022x\n\013GetSessions\022!.viam.robot.v1.GetS"
  "essionsRequest\032\".viam.robot.v1.GetSessio"
  "nsResponse\"\"\202\323\344\223\002\034\022\032/viam/api/v1/session"
  "s/list\022\177\n\rResourceNames\022#.viam.robot.v1."
  "ResourceNamesRequest\032$.viam.robot.v1.Res"
  "ourceNamesResponse\"#\202\323\344\223\002\035\022\033/viam/api/v1"
  "/resources/list\022\235\001\n\023ResourceRPCSubtypes\022"
  ").viam.robot.v1.ResourceRPCSubtypesReque"
  "st\032*.viam.robot.v1.ResourceRPCSubtypesRe"
  "sponse\"/\202\323\344\223\002)\022\'/viam/api/v1/resource_rp"
  "c_subtypes/list\022\210\001\n\017CancelOperation\022%.vi"
  "am.robot.v1.CancelOperationRequest\032&.via"
  "m.robot.v1.CancelOperationResponse\"&\202\323\344\223"
  "\002 \"\036/viam/api/v1/operations/cancel\022\215\001\n\021B"
  "lockForOperation\022\'.viam.robot.v1.BlockFo"
  "rOperationRequest\032(.viam.robot.v1.BlockF"
  "orOperationResponse\"%\202\323\344\223\002\037\"\035/viam/api/v"
  "1/operations/block\022\223\001\n\024GetModelsFromModu"
  "les\022*.viam.robot.v1.GetModelsFromModules"
  "Request\032+.viam.robot.v1.GetModelsFromMod"
  "ulesResponse\"\"\202\323\344\223\002\034\022\032/viam/api/v1/modul"
  "e_models\022\227\001\n\022DiscoverComponents\022(.viam.r"
  "obot.v1.DiscoverComponentsRequest\032).viam"
  ".robot.v1.DiscoverComponentsResponse\",\210\002"
  "\001\202\323\344\223\002#\022!/viam/api/v1/discovery/componen"
  "ts\022\220\001\n\021FrameSystemConfig\022\'.viam.robot.v1"
  ".FrameSystemConfigRequest\032(.viam.robot.v"
  "1.FrameSystemConfigResponse\"(\202\323\344\223\002\"\022 /vi"
  "am/api/v1/frame_system/config\022\214\001\n\rTransf"
  "ormPose\022#.viam.robot.v1.TransformPoseReq"
  "uest\032$.viam.robot.v1.TransformPoseRespon"
  "se\"0\202\323\344\223\002*\022(/viam/api/v1/frame_system/tr"
  "ansform_pose\022\210\001\n\014TransformPCD\022\".viam.rob"
  "ot.v1.TransformPCDRequest\032#.viam.robot.v"
  "1.TransformPCDResponse\"/\202\323\344\223\002)\022\'/viam/ap"
  "i/v1/frame_system/transform_pcd\022n\n\tGetSt"
  "atus\022\037.viam.robot.v1.GetStatusRequest\032 ."
  "viam.robot.v1.GetStatusResponse\"\036\210\002\001\202\323\344\223"
  "\002\025\022\023/viam/api/v1/status\022\200\001\n\014StreamStatus"
  "\022\".viam.robot.v1.StreamStatusRequest\032#.v"
  "iam.robot.v1.StreamStatusResponse\"%\210\002\001\202\323"
  "\344\223\002\034\022\032/viam/api/v1/status/stream0\001\022g\n\007St"
  "opAll\022\035.viam.robot.v1.StopAllRequest\032\036.v"
  "iam.robot.v1.StopAllResponse\"\035\202\323\344\223\002\027\022\025/v"
  "iam/api/v1/stop_all\022v\n\014StartSession\022\".vi"
  "am.robot.v1.StartSessionRequest\032#.viam.r"
  "obot.v1.StartSessionResponse\"\035\202\323\344\223\002\027\"\025/v"
  "iam/api/v1/sessions\022\235\001\n\024SendSessionHeart"
  "beat\022*.viam.robot.v1.SendSessionHeartbea"
  "tRequest\032+.viam.robot.v1.SendSessionHear"
  "tbeatResponse\",\202\323\344\223\002&\"$/viam/api/v1/sess"
  "ions/{id}/heartbeat\022V\n\003Log\022\031.viam.robot."
  "v1.LogRequest\032\032.viam.robot.v1.LogRespons"
  "e\"\030\202\323\344\223\002\022\"\020/viam/api/v1/log\022\210\001\n\020GetCloud"
  "Metadata\022&.viam.robot.v1.GetCloudMetadat"
  "aRequest\032\'.viam.robot.v1.GetCloudMetadat"
  "aResponse\"#\202\323\344\223\002\035\022\033/viam/api/v1/cloud_me"
  "tadata\022\177\n\rRestartModule\022#.viam.robot.v1."
  "RestartModuleRequest\032$.viam.robot.v1.Res"
  "tartModuleResponse\"#\202\323\344\223\002\035\"\033/viam/api/v1"
  "/restart_module\022j\n\010Shutdown\022\036.viam.robot"
  ".v1.ShutdownRequest\032\037.viam.robot.v1.Shut"
  "downResponse\"\035\202\323\344\223\002\027\"\025/viam/api/v1/shutd"
  "own\022\210\001\n\020GetMachineStatus\022&.viam.robot.v1"
  ".GetMachineStatusRequest\032\'.viam.robot.v1"
  ".GetMachineStatusResponse\"#\202\323\344\223\002\035\022\033/viam"
  "/api/v1/machine_status\022o\n\nGetVersion\022 .v"
  "iam.robot.v1.GetVersionRequest\032!.viam.ro"
  "bot.v1.GetVersionResponse\"\034\202\323\344\223\002\026\022\024/viam"
  "/api/v1/version\022I\n\006Tunnel\022\034.viam.robot.v"
  "1.TunnelRequest\032\035.viam.robot.v1.TunnelRe"
  "sponse(\0010\001\022w\n\013ListTunnels\022!.viam.robot.v"
  "1.ListTunnelsRequest\032\".viam.robot.v1.Lis"
  "tTunnelsResponse\"!\202\323\344\223\002\033\022\031/viam/api/v1/l"
  "ist_tunnelsB-\n\021com.viam.robot.v1Z\030go.via"
  "m.com/api/robot/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_robot_2fv1_2frobot_2eproto_deps[5] = {
  &::descriptor_table_common_2fv1_2fcommon_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_robot_2fv1_2frobot_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_robot_2fv1_2frobot_2eproto = {
    false, false, 9066, descriptor_table_protodef_robot_2fv1_2frobot_2eproto,
    "robot/v1/robot.proto",
    &descriptor_table_robot_2fv1_2frobot_2eproto_once, descriptor_table_robot_2fv1_2frobot_2eproto_deps, 5, 61,
    schemas, file_default_instances, TableStruct_robot_2fv1_2frobot_2eproto::offsets,
    file_level_metadata_robot_2fv1_2frobot_2eproto, file_level_enum_descriptors_robot_2fv1_2frobot_2eproto,
    file_level_service_descriptors_robot_2fv1_2frobot_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_robot_2fv1_2frobot_2eproto_getter() {
  return &descriptor_table_robot_2fv1_2frobot_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_robot_2fv1_2frobot_2eproto(&descriptor_table_robot_2fv1_2frobot_2eproto);
namespace viam {
namespace robot {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetMachineStatusResponse_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_robot_2fv1_2frobot_2eproto);
  return file_level_enum_descriptors_robot_2fv1_2frobot_2eproto[0];
}
bool GetMachineStatusResponse_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr GetMachineStatusResponse_State GetMachineStatusResponse::STATE_UNSPECIFIED;
constexpr GetMachineStatusResponse_State GetMachineStatusResponse::STATE_INITIALIZING;
constexpr GetMachineStatusResponse_State GetMachineStatusResponse::STATE_RUNNING;
constexpr GetMachineStatusResponse_State GetMachineStatusResponse::State_MIN;
constexpr GetMachineStatusResponse_State GetMachineStatusResponse::State_MAX;
constexpr int GetMachineStatusResponse::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResourceStatus_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_robot_2fv1_2frobot_2eproto);
  return file_level_enum_descriptors_robot_2fv1_2frobot_2eproto[1];
}
bool ResourceStatus_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ResourceStatus_State ResourceStatus::STATE_UNSPECIFIED;
constexpr ResourceStatus_State ResourceStatus::STATE_UNCONFIGURED;
constexpr ResourceStatus_State ResourceStatus::STATE_CONFIGURING;
constexpr ResourceStatus_State ResourceStatus::STATE_READY;
constexpr ResourceStatus_State ResourceStatus::STATE_REMOVING;
constexpr ResourceStatus_State ResourceStatus::STATE_UNHEALTHY;
constexpr ResourceStatus_State ResourceStatus::State_MIN;
constexpr ResourceStatus_State ResourceStatus::State_MAX;
constexpr int ResourceStatus::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PeerConnectionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_robot_2fv1_2frobot_2eproto);
  return file_level_enum_descriptors_robot_2fv1_2frobot_2eproto[2];
}
bool PeerConnectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class TunnelRequest::_Internal {
 public:
};

TunnelRequest::TunnelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.TunnelRequest)
}
TunnelRequest::TunnelRequest(const TunnelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(from._internal_data(), 
      GetArenaForAllocation());
  }
  destination_port_ = from.destination_port_;
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.TunnelRequest)
}

inline void TunnelRequest::SharedCtor() {
data_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
destination_port_ = 0u;
}

TunnelRequest::~TunnelRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.TunnelRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TunnelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.Destroy();
}

void TunnelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TunnelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.TunnelRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  destination_port_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TunnelRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 destination_port = 1 [json_name = "destinationPort"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          destination_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 2 [json_name = "data"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TunnelRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.TunnelRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 destination_port = 1 [json_name = "destinationPort"];
  if (this->_internal_destination_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_destination_port(), target);
  }

  // bytes data = 2 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.TunnelRequest)
  return target;
}

size_t TunnelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.TunnelRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 2 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // uint32 destination_port = 1 [json_name = "destinationPort"];
  if (this->_internal_destination_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_destination_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TunnelRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TunnelRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TunnelRequest::GetClassData() const { return &_class_data_; }

void TunnelRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TunnelRequest *>(to)->MergeFrom(
      static_cast<const TunnelRequest &>(from));
}


void TunnelRequest::MergeFrom(const TunnelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.TunnelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_destination_port() != 0) {
    _internal_set_destination_port(from._internal_destination_port());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TunnelRequest::CopyFrom(const TunnelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.TunnelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TunnelRequest::IsInitialized() const {
  return true;
}

void TunnelRequest::InternalSwap(TunnelRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  swap(destination_port_, other->destination_port_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TunnelRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[0]);
}

// ===================================================================

class TunnelResponse::_Internal {
 public:
};

TunnelResponse::TunnelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.TunnelResponse)
}
TunnelResponse::TunnelResponse(const TunnelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.TunnelResponse)
}

inline void TunnelResponse::SharedCtor() {
data_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TunnelResponse::~TunnelResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.TunnelResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TunnelResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.Destroy();
}

void TunnelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TunnelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.TunnelResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TunnelResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes data = 1 [json_name = "data"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TunnelResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.TunnelResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.TunnelResponse)
  return target;
}

size_t TunnelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.TunnelResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TunnelResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TunnelResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TunnelResponse::GetClassData() const { return &_class_data_; }

void TunnelResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TunnelResponse *>(to)->MergeFrom(
      static_cast<const TunnelResponse &>(from));
}


void TunnelResponse::MergeFrom(const TunnelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.TunnelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TunnelResponse::CopyFrom(const TunnelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.TunnelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TunnelResponse::IsInitialized() const {
  return true;
}

void TunnelResponse::InternalSwap(TunnelResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TunnelResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[1]);
}

// ===================================================================

class ListTunnelsRequest::_Internal {
 public:
};

ListTunnelsRequest::ListTunnelsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ListTunnelsRequest)
}
ListTunnelsRequest::ListTunnelsRequest(const ListTunnelsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ListTunnelsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListTunnelsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListTunnelsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListTunnelsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[2]);
}

// ===================================================================

class ListTunnelsResponse::_Internal {
 public:
};

ListTunnelsResponse::ListTunnelsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  tunnels_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ListTunnelsResponse)
}
ListTunnelsResponse::ListTunnelsResponse(const ListTunnelsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tunnels_(from.tunnels_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ListTunnelsResponse)
}

inline void ListTunnelsResponse::SharedCtor() {
}

ListTunnelsResponse::~ListTunnelsResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.ListTunnelsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListTunnelsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListTunnelsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListTunnelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.ListTunnelsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tunnels_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListTunnelsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.Tunnel tunnels = 1 [json_name = "tunnels"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tunnels(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListTunnelsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.ListTunnelsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Tunnel tunnels = 1 [json_name = "tunnels"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tunnels_size()); i < n; i++) {
    const auto& repfield = this->_internal_tunnels(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.ListTunnelsResponse)
  return target;
}

size_t ListTunnelsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.ListTunnelsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Tunnel tunnels = 1 [json_name = "tunnels"];
  total_size += 1UL * this->_internal_tunnels_size();
  for (const auto& msg : this->tunnels_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListTunnelsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListTunnelsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListTunnelsResponse::GetClassData() const { return &_class_data_; }

void ListTunnelsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListTunnelsResponse *>(to)->MergeFrom(
      static_cast<const ListTunnelsResponse &>(from));
}


void ListTunnelsResponse::MergeFrom(const ListTunnelsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.ListTunnelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  tunnels_.MergeFrom(from.tunnels_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListTunnelsResponse::CopyFrom(const ListTunnelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.ListTunnelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTunnelsResponse::IsInitialized() const {
  return true;
}

void ListTunnelsResponse::InternalSwap(ListTunnelsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  tunnels_.InternalSwap(&other->tunnels_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListTunnelsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[3]);
}

// ===================================================================

class Tunnel::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Duration& connection_timeout(const Tunnel* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Duration&
Tunnel::_Internal::connection_timeout(const Tunnel* msg) {
  return *msg->connection_timeout_;
}
void Tunnel::clear_connection_timeout() {
  if (GetArenaForAllocation() == nullptr && connection_timeout_ != nullptr) {
    delete connection_timeout_;
  }
  connection_timeout_ = nullptr;
}
Tunnel::Tunnel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.Tunnel)
}
Tunnel::Tunnel(const Tunnel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_connection_timeout()) {
    connection_timeout_ = new ::PROTOBUF_NAMESPACE_ID::Duration(*from.connection_timeout_);
  } else {
    connection_timeout_ = nullptr;
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.Tunnel)
}

inline void Tunnel::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&connection_timeout_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&connection_timeout_)) + sizeof(port_));
}

Tunnel::~Tunnel() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.Tunnel)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Tunnel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete connection_timeout_;
}

void Tunnel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Tunnel::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.Tunnel)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && connection_timeout_ != nullptr) {
    delete connection_timeout_;
  }
  connection_timeout_ = nullptr;
  port_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Tunnel::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 port = 1 [json_name = "port"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Duration connection_timeout = 2 [json_name = "connectionTimeout"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_connection_timeout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Tunnel::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.Tunnel)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 port = 1 [json_name = "port"];
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_port(), target);
  }

  // .google.protobuf.Duration connection_timeout = 2 [json_name = "connectionTimeout"];
  if (this->_internal_has_connection_timeout()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::connection_timeout(this),
        _Internal::connection_timeout(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.Tunnel)
  return target;
}

size_t Tunnel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.Tunnel)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Duration connection_timeout = 2 [json_name = "connectionTimeout"];
  if (this->_internal_has_connection_timeout()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *connection_timeout_);
  }

  // uint32 port = 1 [json_name = "port"];
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Tunnel::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Tunnel::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Tunnel::GetClassData() const { return &_class_data_; }

void Tunnel::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Tunnel *>(to)->MergeFrom(
      static_cast<const Tunnel &>(from));
}


void Tunnel::MergeFrom(const Tunnel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.Tunnel)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_connection_timeout()) {
    _internal_mutable_connection_timeout()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_connection_timeout());
  }
  if (from._internal_port() != 0) {
    _internal_set_port(from._internal_port());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Tunnel::CopyFrom(const Tunnel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.Tunnel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tunnel::IsInitialized() const {
  return true;
}

void Tunnel::InternalSwap(Tunnel* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Tunnel, port_)
      + sizeof(Tunnel::port_)
      - PROTOBUF_FIELD_OFFSET(Tunnel, connection_timeout_)>(
          reinterpret_cast<char*>(&connection_timeout_),
          reinterpret_cast<char*>(&other->connection_timeout_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Tunnel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[4]);
}

// ===================================================================

class FrameSystemConfig::_Internal {
 public:
  static const ::viam::common::v1::Transform& frame(const FrameSystemConfig* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& kinematics(const FrameSystemConfig* msg);
};

const ::viam::common::v1::Transform&
FrameSystemConfig::_Internal::frame(const FrameSystemConfig* msg) {
  return *msg->frame_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
FrameSystemConfig::_Internal::kinematics(const FrameSystemConfig* msg) {
  return *msg->kinematics_;
}
void FrameSystemConfig::clear_frame() {
  if (GetArenaForAllocation() == nullptr && frame_ != nullptr) {
    delete frame_;
  }
  frame_ = nullptr;
}
void FrameSystemConfig::clear_kinematics() {
  if (GetArenaForAllocation() == nullptr && kinematics_ != nullptr) {
    delete kinematics_;
  }
  kinematics_ = nullptr;
}
FrameSystemConfig::FrameSystemConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.FrameSystemConfig)
}
FrameSystemConfig::FrameSystemConfig(const FrameSystemConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_frame()) {
    frame_ = new ::viam::common::v1::Transform(*from.frame_);
  } else {
    frame_ = nullptr;
  }
  if (from._internal_has_kinematics()) {
    kinematics_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.kinematics_);
  } else {
    kinematics_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.FrameSystemConfig)
}

inline void FrameSystemConfig::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&frame_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&kinematics_) -
    reinterpret_cast<char*>(&frame_)) + sizeof(kinematics_));
}

FrameSystemConfig::~FrameSystemConfig() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.FrameSystemConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FrameSystemConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete frame_;
  if (this != internal_default_instance()) delete kinematics_;
}

void FrameSystemConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrameSystemConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.FrameSystemConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && frame_ != nullptr) {
    delete frame_;
  }
  frame_ = nullptr;
  if (GetArenaForAllocation() == nullptr && kinematics_ != nullptr) {
    delete kinematics_;
  }
  kinematics_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrameSystemConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.Transform frame = 1 [json_name = "frame"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_frame(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct kinematics = 2 [json_name = "kinematics"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_kinematics(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FrameSystemConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.FrameSystemConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.Transform frame = 1 [json_name = "frame"];
  if (this->_internal_has_frame()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::frame(this),
        _Internal::frame(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct kinematics = 2 [json_name = "kinematics"];
  if (this->_internal_has_kinematics()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::kinematics(this),
        _Internal::kinematics(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.FrameSystemConfig)
  return target;
}

size_t FrameSystemConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.FrameSystemConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.Transform frame = 1 [json_name = "frame"];
  if (this->_internal_has_frame()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *frame_);
  }

  // .google.protobuf.Struct kinematics = 2 [json_name = "kinematics"];
  if (this->_internal_has_kinematics()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *kinematics_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FrameSystemConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FrameSystemConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FrameSystemConfig::GetClassData() const { return &_class_data_; }

void FrameSystemConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FrameSystemConfig *>(to)->MergeFrom(
      static_cast<const FrameSystemConfig &>(from));
}


void FrameSystemConfig::MergeFrom(const FrameSystemConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.FrameSystemConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_frame()) {
    _internal_mutable_frame()->::viam::common::v1::Transform::MergeFrom(from._internal_frame());
  }
  if (from._internal_has_kinematics()) {
    _internal_mutable_kinematics()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_kinematics());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FrameSystemConfig::CopyFrom(const FrameSystemConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.FrameSystemConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameSystemConfig::IsInitialized() const {
  return true;
}

void FrameSystemConfig::InternalSwap(FrameSystemConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrameSystemConfig, kinematics_)
      + sizeof(FrameSystemConfig::kinematics_)
      - PROTOBUF_FIELD_OFFSET(FrameSystemConfig, frame_)>(
          reinterpret_cast<char*>(&frame_),
          reinterpret_cast<char*>(&other->frame_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrameSystemConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[5]);
}

// ===================================================================

class FrameSystemConfigRequest::_Internal {
 public:
};

void FrameSystemConfigRequest::clear_supplemental_transforms() {
  supplemental_transforms_.Clear();
}
FrameSystemConfigRequest::FrameSystemConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  supplemental_transforms_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.FrameSystemConfigRequest)
}
FrameSystemConfigRequest::FrameSystemConfigRequest(const FrameSystemConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      supplemental_transforms_(from.supplemental_transforms_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.FrameSystemConfigRequest)
}

inline void FrameSystemConfigRequest::SharedCtor() {
}

FrameSystemConfigRequest::~FrameSystemConfigRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.FrameSystemConfigRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FrameSystemConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FrameSystemConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrameSystemConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.FrameSystemConfigRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  supplemental_transforms_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrameSystemConfigRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.common.v1.Transform supplemental_transforms = 1 [json_name = "supplementalTransforms"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_supplemental_transforms(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FrameSystemConfigRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.FrameSystemConfigRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.common.v1.Transform supplemental_transforms = 1 [json_name = "supplementalTransforms"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_supplemental_transforms_size()); i < n; i++) {
    const auto& repfield = this->_internal_supplemental_transforms(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.FrameSystemConfigRequest)
  return target;
}

size_t FrameSystemConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.FrameSystemConfigRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.common.v1.Transform supplemental_transforms = 1 [json_name = "supplementalTransforms"];
  total_size += 1UL * this->_internal_supplemental_transforms_size();
  for (const auto& msg : this->supplemental_transforms_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FrameSystemConfigRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FrameSystemConfigRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FrameSystemConfigRequest::GetClassData() const { return &_class_data_; }

void FrameSystemConfigRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FrameSystemConfigRequest *>(to)->MergeFrom(
      static_cast<const FrameSystemConfigRequest &>(from));
}


void FrameSystemConfigRequest::MergeFrom(const FrameSystemConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.FrameSystemConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  supplemental_transforms_.MergeFrom(from.supplemental_transforms_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FrameSystemConfigRequest::CopyFrom(const FrameSystemConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.FrameSystemConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameSystemConfigRequest::IsInitialized() const {
  return true;
}

void FrameSystemConfigRequest::InternalSwap(FrameSystemConfigRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  supplemental_transforms_.InternalSwap(&other->supplemental_transforms_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrameSystemConfigRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[6]);
}

// ===================================================================

class FrameSystemConfigResponse::_Internal {
 public:
};

FrameSystemConfigResponse::FrameSystemConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  frame_system_configs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.FrameSystemConfigResponse)
}
FrameSystemConfigResponse::FrameSystemConfigResponse(const FrameSystemConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      frame_system_configs_(from.frame_system_configs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.FrameSystemConfigResponse)
}

inline void FrameSystemConfigResponse::SharedCtor() {
}

FrameSystemConfigResponse::~FrameSystemConfigResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.FrameSystemConfigResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FrameSystemConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FrameSystemConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrameSystemConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.FrameSystemConfigResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frame_system_configs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrameSystemConfigResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.FrameSystemConfig frame_system_configs = 1 [json_name = "frameSystemConfigs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_frame_system_configs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FrameSystemConfigResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.FrameSystemConfigResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.FrameSystemConfig frame_system_configs = 1 [json_name = "frameSystemConfigs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_frame_system_configs_size()); i < n; i++) {
    const auto& repfield = this->_internal_frame_system_configs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.FrameSystemConfigResponse)
  return target;
}

size_t FrameSystemConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.FrameSystemConfigResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.FrameSystemConfig frame_system_configs = 1 [json_name = "frameSystemConfigs"];
  total_size += 1UL * this->_internal_frame_system_configs_size();
  for (const auto& msg : this->frame_system_configs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FrameSystemConfigResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FrameSystemConfigResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FrameSystemConfigResponse::GetClassData() const { return &_class_data_; }

void FrameSystemConfigResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FrameSystemConfigResponse *>(to)->MergeFrom(
      static_cast<const FrameSystemConfigResponse &>(from));
}


void FrameSystemConfigResponse::MergeFrom(const FrameSystemConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.FrameSystemConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  frame_system_configs_.MergeFrom(from.frame_system_configs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FrameSystemConfigResponse::CopyFrom(const FrameSystemConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.FrameSystemConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameSystemConfigResponse::IsInitialized() const {
  return true;
}

void FrameSystemConfigResponse::InternalSwap(FrameSystemConfigResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  frame_system_configs_.InternalSwap(&other->frame_system_configs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrameSystemConfigResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[7]);
}

// ===================================================================

class TransformPoseRequest::_Internal {
 public:
  static const ::viam::common::v1::PoseInFrame& source(const TransformPoseRequest* msg);
};

const ::viam::common::v1::PoseInFrame&
TransformPoseRequest::_Internal::source(const TransformPoseRequest* msg) {
  return *msg->source_;
}
void TransformPoseRequest::clear_source() {
  if (GetArenaForAllocation() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
}
void TransformPoseRequest::clear_supplemental_transforms() {
  supplemental_transforms_.Clear();
}
TransformPoseRequest::TransformPoseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  supplemental_transforms_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.TransformPoseRequest)
}
TransformPoseRequest::TransformPoseRequest(const TransformPoseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      supplemental_transforms_(from.supplemental_transforms_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  destination_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    destination_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_destination().empty()) {
    destination_.Set(from._internal_destination(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_source()) {
    source_ = new ::viam::common::v1::PoseInFrame(*from.source_);
  } else {
    source_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.TransformPoseRequest)
}

inline void TransformPoseRequest::SharedCtor() {
destination_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  destination_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
source_ = nullptr;
}

TransformPoseRequest::~TransformPoseRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.TransformPoseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformPoseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  destination_.Destroy();
  if (this != internal_default_instance()) delete source_;
}

void TransformPoseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TransformPoseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.TransformPoseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  supplemental_transforms_.Clear();
  destination_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformPoseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.PoseInFrame source = 1 [json_name = "source"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string destination = 2 [json_name = "destination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_destination();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.TransformPoseRequest.destination"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.common.v1.Transform supplemental_transforms = 3 [json_name = "supplementalTransforms"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_supplemental_transforms(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformPoseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.TransformPoseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.PoseInFrame source = 1 [json_name = "source"];
  if (this->_internal_has_source()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::source(this),
        _Internal::source(this).GetCachedSize(), target, stream);
  }

  // string destination = 2 [json_name = "destination"];
  if (!this->_internal_destination().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destination().data(), static_cast<int>(this->_internal_destination().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.TransformPoseRequest.destination");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_destination(), target);
  }

  // repeated .viam.common.v1.Transform supplemental_transforms = 3 [json_name = "supplementalTransforms"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_supplemental_transforms_size()); i < n; i++) {
    const auto& repfield = this->_internal_supplemental_transforms(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.TransformPoseRequest)
  return target;
}

size_t TransformPoseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.TransformPoseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.common.v1.Transform supplemental_transforms = 3 [json_name = "supplementalTransforms"];
  total_size += 1UL * this->_internal_supplemental_transforms_size();
  for (const auto& msg : this->supplemental_transforms_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string destination = 2 [json_name = "destination"];
  if (!this->_internal_destination().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destination());
  }

  // .viam.common.v1.PoseInFrame source = 1 [json_name = "source"];
  if (this->_internal_has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformPoseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TransformPoseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformPoseRequest::GetClassData() const { return &_class_data_; }

void TransformPoseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TransformPoseRequest *>(to)->MergeFrom(
      static_cast<const TransformPoseRequest &>(from));
}


void TransformPoseRequest::MergeFrom(const TransformPoseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.TransformPoseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  supplemental_transforms_.MergeFrom(from.supplemental_transforms_);
  if (!from._internal_destination().empty()) {
    _internal_set_destination(from._internal_destination());
  }
  if (from._internal_has_source()) {
    _internal_mutable_source()->::viam::common::v1::PoseInFrame::MergeFrom(from._internal_source());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformPoseRequest::CopyFrom(const TransformPoseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.TransformPoseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformPoseRequest::IsInitialized() const {
  return true;
}

void TransformPoseRequest::InternalSwap(TransformPoseRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  supplemental_transforms_.InternalSwap(&other->supplemental_transforms_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &destination_, lhs_arena,
      &other->destination_, rhs_arena
  );
  swap(source_, other->source_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformPoseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[8]);
}

// ===================================================================

class TransformPoseResponse::_Internal {
 public:
  static const ::viam::common::v1::PoseInFrame& pose(const TransformPoseResponse* msg);
};

const ::viam::common::v1::PoseInFrame&
TransformPoseResponse::_Internal::pose(const TransformPoseResponse* msg) {
  return *msg->pose_;
}
void TransformPoseResponse::clear_pose() {
  if (GetArenaForAllocation() == nullptr && pose_ != nullptr) {
    delete pose_;
  }
  pose_ = nullptr;
}
TransformPoseResponse::TransformPoseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.TransformPoseResponse)
}
TransformPoseResponse::TransformPoseResponse(const TransformPoseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_pose()) {
    pose_ = new ::viam::common::v1::PoseInFrame(*from.pose_);
  } else {
    pose_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.TransformPoseResponse)
}

inline void TransformPoseResponse::SharedCtor() {
pose_ = nullptr;
}

TransformPoseResponse::~TransformPoseResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.TransformPoseResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformPoseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete pose_;
}

void TransformPoseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TransformPoseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.TransformPoseResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && pose_ != nullptr) {
    delete pose_;
  }
  pose_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformPoseResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.PoseInFrame pose = 1 [json_name = "pose"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pose(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformPoseResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.TransformPoseResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.PoseInFrame pose = 1 [json_name = "pose"];
  if (this->_internal_has_pose()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pose(this),
        _Internal::pose(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.TransformPoseResponse)
  return target;
}

size_t TransformPoseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.TransformPoseResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.PoseInFrame pose = 1 [json_name = "pose"];
  if (this->_internal_has_pose()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformPoseResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TransformPoseResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformPoseResponse::GetClassData() const { return &_class_data_; }

void TransformPoseResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TransformPoseResponse *>(to)->MergeFrom(
      static_cast<const TransformPoseResponse &>(from));
}


void TransformPoseResponse::MergeFrom(const TransformPoseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.TransformPoseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_pose()) {
    _internal_mutable_pose()->::viam::common::v1::PoseInFrame::MergeFrom(from._internal_pose());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformPoseResponse::CopyFrom(const TransformPoseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.TransformPoseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformPoseResponse::IsInitialized() const {
  return true;
}

void TransformPoseResponse::InternalSwap(TransformPoseResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(pose_, other->pose_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformPoseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[9]);
}

// ===================================================================

class TransformPCDRequest::_Internal {
 public:
};

TransformPCDRequest::TransformPCDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.TransformPCDRequest)
}
TransformPCDRequest::TransformPCDRequest(const TransformPCDRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  point_cloud_pcd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    point_cloud_pcd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_point_cloud_pcd().empty()) {
    point_cloud_pcd_.Set(from._internal_point_cloud_pcd(), 
      GetArenaForAllocation());
  }
  source_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    source_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_source().empty()) {
    source_.Set(from._internal_source(), 
      GetArenaForAllocation());
  }
  destination_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    destination_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_destination().empty()) {
    destination_.Set(from._internal_destination(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.TransformPCDRequest)
}

inline void TransformPCDRequest::SharedCtor() {
point_cloud_pcd_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  point_cloud_pcd_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
source_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  source_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
destination_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  destination_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TransformPCDRequest::~TransformPCDRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.TransformPCDRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformPCDRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  point_cloud_pcd_.Destroy();
  source_.Destroy();
  destination_.Destroy();
}

void TransformPCDRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TransformPCDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.TransformPCDRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_cloud_pcd_.ClearToEmpty();
  source_.ClearToEmpty();
  destination_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformPCDRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_point_cloud_pcd();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string source = 2 [json_name = "source"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_source();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.TransformPCDRequest.source"));
        } else
          goto handle_unusual;
        continue;
      // string destination = 3 [json_name = "destination"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_destination();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.TransformPCDRequest.destination"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformPCDRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.TransformPCDRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
  if (!this->_internal_point_cloud_pcd().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_point_cloud_pcd(), target);
  }

  // string source = 2 [json_name = "source"];
  if (!this->_internal_source().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.TransformPCDRequest.source");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_source(), target);
  }

  // string destination = 3 [json_name = "destination"];
  if (!this->_internal_destination().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destination().data(), static_cast<int>(this->_internal_destination().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.TransformPCDRequest.destination");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_destination(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.TransformPCDRequest)
  return target;
}

size_t TransformPCDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.TransformPCDRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
  if (!this->_internal_point_cloud_pcd().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_point_cloud_pcd());
  }

  // string source = 2 [json_name = "source"];
  if (!this->_internal_source().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // string destination = 3 [json_name = "destination"];
  if (!this->_internal_destination().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destination());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformPCDRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TransformPCDRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformPCDRequest::GetClassData() const { return &_class_data_; }

void TransformPCDRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TransformPCDRequest *>(to)->MergeFrom(
      static_cast<const TransformPCDRequest &>(from));
}


void TransformPCDRequest::MergeFrom(const TransformPCDRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.TransformPCDRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_point_cloud_pcd().empty()) {
    _internal_set_point_cloud_pcd(from._internal_point_cloud_pcd());
  }
  if (!from._internal_source().empty()) {
    _internal_set_source(from._internal_source());
  }
  if (!from._internal_destination().empty()) {
    _internal_set_destination(from._internal_destination());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformPCDRequest::CopyFrom(const TransformPCDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.TransformPCDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformPCDRequest::IsInitialized() const {
  return true;
}

void TransformPCDRequest::InternalSwap(TransformPCDRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &point_cloud_pcd_, lhs_arena,
      &other->point_cloud_pcd_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &source_, lhs_arena,
      &other->source_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &destination_, lhs_arena,
      &other->destination_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformPCDRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[10]);
}

// ===================================================================

class TransformPCDResponse::_Internal {
 public:
};

TransformPCDResponse::TransformPCDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.TransformPCDResponse)
}
TransformPCDResponse::TransformPCDResponse(const TransformPCDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  point_cloud_pcd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    point_cloud_pcd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_point_cloud_pcd().empty()) {
    point_cloud_pcd_.Set(from._internal_point_cloud_pcd(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.TransformPCDResponse)
}

inline void TransformPCDResponse::SharedCtor() {
point_cloud_pcd_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  point_cloud_pcd_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TransformPCDResponse::~TransformPCDResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.TransformPCDResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformPCDResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  point_cloud_pcd_.Destroy();
}

void TransformPCDResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TransformPCDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.TransformPCDResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_cloud_pcd_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformPCDResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_point_cloud_pcd();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformPCDResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.TransformPCDResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
  if (!this->_internal_point_cloud_pcd().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_point_cloud_pcd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.TransformPCDResponse)
  return target;
}

size_t TransformPCDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.TransformPCDResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
  if (!this->_internal_point_cloud_pcd().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_point_cloud_pcd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformPCDResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TransformPCDResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformPCDResponse::GetClassData() const { return &_class_data_; }

void TransformPCDResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TransformPCDResponse *>(to)->MergeFrom(
      static_cast<const TransformPCDResponse &>(from));
}


void TransformPCDResponse::MergeFrom(const TransformPCDResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.TransformPCDResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_point_cloud_pcd().empty()) {
    _internal_set_point_cloud_pcd(from._internal_point_cloud_pcd());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformPCDResponse::CopyFrom(const TransformPCDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.TransformPCDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformPCDResponse::IsInitialized() const {
  return true;
}

void TransformPCDResponse::InternalSwap(TransformPCDResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &point_cloud_pcd_, lhs_arena,
      &other->point_cloud_pcd_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformPCDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[11]);
}

// ===================================================================

class ResourceNamesRequest::_Internal {
 public:
};

ResourceNamesRequest::ResourceNamesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ResourceNamesRequest)
}
ResourceNamesRequest::ResourceNamesRequest(const ResourceNamesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ResourceNamesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResourceNamesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResourceNamesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ResourceNamesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[12]);
}

// ===================================================================

class ResourceNamesResponse::_Internal {
 public:
};

void ResourceNamesResponse::clear_resources() {
  resources_.Clear();
}
ResourceNamesResponse::ResourceNamesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  resources_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ResourceNamesResponse)
}
ResourceNamesResponse::ResourceNamesResponse(const ResourceNamesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      resources_(from.resources_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ResourceNamesResponse)
}

inline void ResourceNamesResponse::SharedCtor() {
}

ResourceNamesResponse::~ResourceNamesResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.ResourceNamesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResourceNamesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResourceNamesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResourceNamesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.ResourceNamesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resources_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceNamesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.common.v1.ResourceName resources = 1 [json_name = "resources"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResourceNamesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.ResourceNamesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.common.v1.ResourceName resources = 1 [json_name = "resources"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resources_size()); i < n; i++) {
    const auto& repfield = this->_internal_resources(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.ResourceNamesResponse)
  return target;
}

size_t ResourceNamesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.ResourceNamesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.common.v1.ResourceName resources = 1 [json_name = "resources"];
  total_size += 1UL * this->_internal_resources_size();
  for (const auto& msg : this->resources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResourceNamesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResourceNamesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResourceNamesResponse::GetClassData() const { return &_class_data_; }

void ResourceNamesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResourceNamesResponse *>(to)->MergeFrom(
      static_cast<const ResourceNamesResponse &>(from));
}


void ResourceNamesResponse::MergeFrom(const ResourceNamesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.ResourceNamesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  resources_.MergeFrom(from.resources_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResourceNamesResponse::CopyFrom(const ResourceNamesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.ResourceNamesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceNamesResponse::IsInitialized() const {
  return true;
}

void ResourceNamesResponse::InternalSwap(ResourceNamesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  resources_.InternalSwap(&other->resources_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceNamesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[13]);
}

// ===================================================================

class ResourceRPCSubtype::_Internal {
 public:
  static const ::viam::common::v1::ResourceName& subtype(const ResourceRPCSubtype* msg);
};

const ::viam::common::v1::ResourceName&
ResourceRPCSubtype::_Internal::subtype(const ResourceRPCSubtype* msg) {
  return *msg->subtype_;
}
void ResourceRPCSubtype::clear_subtype() {
  if (GetArenaForAllocation() == nullptr && subtype_ != nullptr) {
    delete subtype_;
  }
  subtype_ = nullptr;
}
ResourceRPCSubtype::ResourceRPCSubtype(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ResourceRPCSubtype)
}
ResourceRPCSubtype::ResourceRPCSubtype(const ResourceRPCSubtype& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  proto_service_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    proto_service_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proto_service().empty()) {
    proto_service_.Set(from._internal_proto_service(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_subtype()) {
    subtype_ = new ::viam::common::v1::ResourceName(*from.subtype_);
  } else {
    subtype_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ResourceRPCSubtype)
}

inline void ResourceRPCSubtype::SharedCtor() {
proto_service_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  proto_service_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
subtype_ = nullptr;
}

ResourceRPCSubtype::~ResourceRPCSubtype() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.ResourceRPCSubtype)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResourceRPCSubtype::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  proto_service_.Destroy();
  if (this != internal_default_instance()) delete subtype_;
}

void ResourceRPCSubtype::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResourceRPCSubtype::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.ResourceRPCSubtype)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  proto_service_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && subtype_ != nullptr) {
    delete subtype_;
  }
  subtype_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceRPCSubtype::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.ResourceName subtype = 1 [json_name = "subtype"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_subtype(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string proto_service = 2 [json_name = "protoService"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_proto_service();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.ResourceRPCSubtype.proto_service"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResourceRPCSubtype::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.ResourceRPCSubtype)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.ResourceName subtype = 1 [json_name = "subtype"];
  if (this->_internal_has_subtype()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::subtype(this),
        _Internal::subtype(this).GetCachedSize(), target, stream);
  }

  // string proto_service = 2 [json_name = "protoService"];
  if (!this->_internal_proto_service().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_proto_service().data(), static_cast<int>(this->_internal_proto_service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.ResourceRPCSubtype.proto_service");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_proto_service(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.ResourceRPCSubtype)
  return target;
}

size_t ResourceRPCSubtype::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.ResourceRPCSubtype)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string proto_service = 2 [json_name = "protoService"];
  if (!this->_internal_proto_service().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_proto_service());
  }

  // .viam.common.v1.ResourceName subtype = 1 [json_name = "subtype"];
  if (this->_internal_has_subtype()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *subtype_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResourceRPCSubtype::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResourceRPCSubtype::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResourceRPCSubtype::GetClassData() const { return &_class_data_; }

void ResourceRPCSubtype::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResourceRPCSubtype *>(to)->MergeFrom(
      static_cast<const ResourceRPCSubtype &>(from));
}


void ResourceRPCSubtype::MergeFrom(const ResourceRPCSubtype& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.ResourceRPCSubtype)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_proto_service().empty()) {
    _internal_set_proto_service(from._internal_proto_service());
  }
  if (from._internal_has_subtype()) {
    _internal_mutable_subtype()->::viam::common::v1::ResourceName::MergeFrom(from._internal_subtype());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResourceRPCSubtype::CopyFrom(const ResourceRPCSubtype& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.ResourceRPCSubtype)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceRPCSubtype::IsInitialized() const {
  return true;
}

void ResourceRPCSubtype::InternalSwap(ResourceRPCSubtype* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &proto_service_, lhs_arena,
      &other->proto_service_, rhs_arena
  );
  swap(subtype_, other->subtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceRPCSubtype::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[14]);
}

// ===================================================================

class ResourceRPCSubtypesRequest::_Internal {
 public:
};

ResourceRPCSubtypesRequest::ResourceRPCSubtypesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ResourceRPCSubtypesRequest)
}
ResourceRPCSubtypesRequest::ResourceRPCSubtypesRequest(const ResourceRPCSubtypesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ResourceRPCSubtypesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResourceRPCSubtypesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResourceRPCSubtypesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ResourceRPCSubtypesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[15]);
}

// ===================================================================

class ResourceRPCSubtypesResponse::_Internal {
 public:
};

ResourceRPCSubtypesResponse::ResourceRPCSubtypesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  resource_rpc_subtypes_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ResourceRPCSubtypesResponse)
}
ResourceRPCSubtypesResponse::ResourceRPCSubtypesResponse(const ResourceRPCSubtypesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      resource_rpc_subtypes_(from.resource_rpc_subtypes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ResourceRPCSubtypesResponse)
}

inline void ResourceRPCSubtypesResponse::SharedCtor() {
}

ResourceRPCSubtypesResponse::~ResourceRPCSubtypesResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.ResourceRPCSubtypesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResourceRPCSubtypesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResourceRPCSubtypesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResourceRPCSubtypesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.ResourceRPCSubtypesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_rpc_subtypes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceRPCSubtypesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.ResourceRPCSubtype resource_rpc_subtypes = 1 [json_name = "resourceRpcSubtypes"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resource_rpc_subtypes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResourceRPCSubtypesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.ResourceRPCSubtypesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.ResourceRPCSubtype resource_rpc_subtypes = 1 [json_name = "resourceRpcSubtypes"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resource_rpc_subtypes_size()); i < n; i++) {
    const auto& repfield = this->_internal_resource_rpc_subtypes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.ResourceRPCSubtypesResponse)
  return target;
}

size_t ResourceRPCSubtypesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.ResourceRPCSubtypesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.ResourceRPCSubtype resource_rpc_subtypes = 1 [json_name = "resourceRpcSubtypes"];
  total_size += 1UL * this->_internal_resource_rpc_subtypes_size();
  for (const auto& msg : this->resource_rpc_subtypes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResourceRPCSubtypesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResourceRPCSubtypesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResourceRPCSubtypesResponse::GetClassData() const { return &_class_data_; }

void ResourceRPCSubtypesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResourceRPCSubtypesResponse *>(to)->MergeFrom(
      static_cast<const ResourceRPCSubtypesResponse &>(from));
}


void ResourceRPCSubtypesResponse::MergeFrom(const ResourceRPCSubtypesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.ResourceRPCSubtypesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  resource_rpc_subtypes_.MergeFrom(from.resource_rpc_subtypes_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResourceRPCSubtypesResponse::CopyFrom(const ResourceRPCSubtypesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.ResourceRPCSubtypesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceRPCSubtypesResponse::IsInitialized() const {
  return true;
}

void ResourceRPCSubtypesResponse::InternalSwap(ResourceRPCSubtypesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  resource_rpc_subtypes_.InternalSwap(&other->resource_rpc_subtypes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceRPCSubtypesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[16]);
}

// ===================================================================

class Operation::_Internal {
 public:
  using HasBits = decltype(std::declval<Operation>()._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& arguments(const Operation* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& started(const Operation* msg);
  static void set_has_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
Operation::_Internal::arguments(const Operation* msg) {
  return *msg->arguments_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Operation::_Internal::started(const Operation* msg) {
  return *msg->started_;
}
void Operation::clear_arguments() {
  if (GetArenaForAllocation() == nullptr && arguments_ != nullptr) {
    delete arguments_;
  }
  arguments_ = nullptr;
}
void Operation::clear_started() {
  if (GetArenaForAllocation() == nullptr && started_ != nullptr) {
    delete started_;
  }
  started_ = nullptr;
}
Operation::Operation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.Operation)
}
Operation::Operation(const Operation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  method_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    method_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_method().empty()) {
    method_.Set(from._internal_method(), 
      GetArenaForAllocation());
  }
  session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_session_id()) {
    session_id_.Set(from._internal_session_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_arguments()) {
    arguments_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.arguments_);
  } else {
    arguments_ = nullptr;
  }
  if (from._internal_has_started()) {
    started_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.started_);
  } else {
    started_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.Operation)
}

inline void Operation::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
method_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  method_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
session_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  session_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&arguments_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&started_) -
    reinterpret_cast<char*>(&arguments_)) + sizeof(started_));
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.Operation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Operation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  method_.Destroy();
  session_id_.Destroy();
  if (this != internal_default_instance()) delete arguments_;
  if (this != internal_default_instance()) delete started_;
}

void Operation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.Operation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  method_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    session_id_.ClearNonDefaultToEmpty();
  }
  if (GetArenaForAllocation() == nullptr && arguments_ != nullptr) {
    delete arguments_;
  }
  arguments_ = nullptr;
  if (GetArenaForAllocation() == nullptr && started_ != nullptr) {
    delete started_;
  }
  started_ = nullptr;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Operation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.Operation.id"));
        } else
          goto handle_unusual;
        continue;
      // string method = 2 [json_name = "method"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_method();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.Operation.method"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct arguments = 3 [json_name = "arguments"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_arguments(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp started = 4 [json_name = "started"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_started(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string session_id = 5 [json_name = "sessionId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_session_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.Operation.session_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Operation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.Operation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.Operation.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string method = 2 [json_name = "method"];
  if (!this->_internal_method().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.Operation.method");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_method(), target);
  }

  // .google.protobuf.Struct arguments = 3 [json_name = "arguments"];
  if (this->_internal_has_arguments()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::arguments(this),
        _Internal::arguments(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp started = 4 [json_name = "started"];
  if (this->_internal_has_started()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::started(this),
        _Internal::started(this).GetCachedSize(), target, stream);
  }

  // optional string session_id = 5 [json_name = "sessionId"];
  if (_internal_has_session_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.Operation.session_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.Operation)
  return target;
}

size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.Operation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string method = 2 [json_name = "method"];
  if (!this->_internal_method().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  // optional string session_id = 5 [json_name = "sessionId"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  // .google.protobuf.Struct arguments = 3 [json_name = "arguments"];
  if (this->_internal_has_arguments()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *arguments_);
  }

  // .google.protobuf.Timestamp started = 4 [json_name = "started"];
  if (this->_internal_has_started()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *started_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Operation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Operation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Operation::GetClassData() const { return &_class_data_; }

void Operation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Operation *>(to)->MergeFrom(
      static_cast<const Operation &>(from));
}


void Operation::MergeFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_method().empty()) {
    _internal_set_method(from._internal_method());
  }
  if (from._internal_has_session_id()) {
    _internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_has_arguments()) {
    _internal_mutable_arguments()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_arguments());
  }
  if (from._internal_has_started()) {
    _internal_mutable_started()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_started());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  return true;
}

void Operation::InternalSwap(Operation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &method_, lhs_arena,
      &other->method_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &session_id_, lhs_arena,
      &other->session_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operation, started_)
      + sizeof(Operation::started_)
      - PROTOBUF_FIELD_OFFSET(Operation, arguments_)>(
          reinterpret_cast<char*>(&arguments_),
          reinterpret_cast<char*>(&other->arguments_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Operation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[17]);
}

// ===================================================================

class GetOperationsRequest::_Internal {
 public:
};

GetOperationsRequest::GetOperationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetOperationsRequest)
}
GetOperationsRequest::GetOperationsRequest(const GetOperationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetOperationsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOperationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOperationsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetOperationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[18]);
}

// ===================================================================

class GetOperationsResponse::_Internal {
 public:
};

GetOperationsResponse::GetOperationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  operations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetOperationsResponse)
}
GetOperationsResponse::GetOperationsResponse(const GetOperationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      operations_(from.operations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetOperationsResponse)
}

inline void GetOperationsResponse::SharedCtor() {
}

GetOperationsResponse::~GetOperationsResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.GetOperationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOperationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetOperationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOperationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.GetOperationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOperationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.Operation operations = 1 [json_name = "operations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_operations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOperationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.GetOperationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Operation operations = 1 [json_name = "operations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_operations_size()); i < n; i++) {
    const auto& repfield = this->_internal_operations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.GetOperationsResponse)
  return target;
}

size_t GetOperationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.GetOperationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Operation operations = 1 [json_name = "operations"];
  total_size += 1UL * this->_internal_operations_size();
  for (const auto& msg : this->operations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOperationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOperationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOperationsResponse::GetClassData() const { return &_class_data_; }

void GetOperationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOperationsResponse *>(to)->MergeFrom(
      static_cast<const GetOperationsResponse &>(from));
}


void GetOperationsResponse::MergeFrom(const GetOperationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.GetOperationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  operations_.MergeFrom(from.operations_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOperationsResponse::CopyFrom(const GetOperationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.GetOperationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOperationsResponse::IsInitialized() const {
  return true;
}

void GetOperationsResponse::InternalSwap(GetOperationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  operations_.InternalSwap(&other->operations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOperationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[19]);
}

// ===================================================================

class CancelOperationRequest::_Internal {
 public:
};

CancelOperationRequest::CancelOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.CancelOperationRequest)
}
CancelOperationRequest::CancelOperationRequest(const CancelOperationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.CancelOperationRequest)
}

inline void CancelOperationRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CancelOperationRequest::~CancelOperationRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.CancelOperationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CancelOperationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void CancelOperationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CancelOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.CancelOperationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelOperationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.CancelOperationRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CancelOperationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.CancelOperationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.CancelOperationRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.CancelOperationRequest)
  return target;
}

size_t CancelOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.CancelOperationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CancelOperationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CancelOperationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CancelOperationRequest::GetClassData() const { return &_class_data_; }

void CancelOperationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CancelOperationRequest *>(to)->MergeFrom(
      static_cast<const CancelOperationRequest &>(from));
}


void CancelOperationRequest::MergeFrom(const CancelOperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.CancelOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CancelOperationRequest::CopyFrom(const CancelOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.CancelOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelOperationRequest::IsInitialized() const {
  return true;
}

void CancelOperationRequest::InternalSwap(CancelOperationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelOperationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[20]);
}

// ===================================================================

class CancelOperationResponse::_Internal {
 public:
};

CancelOperationResponse::CancelOperationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.CancelOperationResponse)
}
CancelOperationResponse::CancelOperationResponse(const CancelOperationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.CancelOperationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CancelOperationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CancelOperationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CancelOperationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[21]);
}

// ===================================================================

class BlockForOperationRequest::_Internal {
 public:
};

BlockForOperationRequest::BlockForOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.BlockForOperationRequest)
}
BlockForOperationRequest::BlockForOperationRequest(const BlockForOperationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.BlockForOperationRequest)
}

inline void BlockForOperationRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BlockForOperationRequest::~BlockForOperationRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.BlockForOperationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BlockForOperationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void BlockForOperationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BlockForOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.BlockForOperationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockForOperationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.BlockForOperationRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BlockForOperationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.BlockForOperationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.BlockForOperationRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.BlockForOperationRequest)
  return target;
}

size_t BlockForOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.BlockForOperationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlockForOperationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BlockForOperationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlockForOperationRequest::GetClassData() const { return &_class_data_; }

void BlockForOperationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BlockForOperationRequest *>(to)->MergeFrom(
      static_cast<const BlockForOperationRequest &>(from));
}


void BlockForOperationRequest::MergeFrom(const BlockForOperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.BlockForOperationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlockForOperationRequest::CopyFrom(const BlockForOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.BlockForOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockForOperationRequest::IsInitialized() const {
  return true;
}

void BlockForOperationRequest::InternalSwap(BlockForOperationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockForOperationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[22]);
}

// ===================================================================

class BlockForOperationResponse::_Internal {
 public:
};

BlockForOperationResponse::BlockForOperationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.BlockForOperationResponse)
}
BlockForOperationResponse::BlockForOperationResponse(const BlockForOperationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.BlockForOperationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlockForOperationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlockForOperationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata BlockForOperationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[23]);
}

// ===================================================================

class PeerConnectionInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<PeerConnectionInfo>()._has_bits_);
  static void set_has_remote_address(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_local_address(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PeerConnectionInfo::PeerConnectionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.PeerConnectionInfo)
}
PeerConnectionInfo::PeerConnectionInfo(const PeerConnectionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  remote_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    remote_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_remote_address()) {
    remote_address_.Set(from._internal_remote_address(), 
      GetArenaForAllocation());
  }
  local_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    local_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_local_address()) {
    local_address_.Set(from._internal_local_address(), 
      GetArenaForAllocation());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.PeerConnectionInfo)
}

inline void PeerConnectionInfo::SharedCtor() {
remote_address_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  remote_address_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
local_address_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  local_address_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_ = 0;
}

PeerConnectionInfo::~PeerConnectionInfo() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.PeerConnectionInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PeerConnectionInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  remote_address_.Destroy();
  local_address_.Destroy();
}

void PeerConnectionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PeerConnectionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.PeerConnectionInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      remote_address_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      local_address_.ClearNonDefaultToEmpty();
    }
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PeerConnectionInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.robot.v1.PeerConnectionType type = 1 [json_name = "type"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::viam::robot::v1::PeerConnectionType>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string remote_address = 2 [json_name = "remoteAddress"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_remote_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.PeerConnectionInfo.remote_address"));
        } else
          goto handle_unusual;
        continue;
      // optional string local_address = 3 [json_name = "localAddress"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_local_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.PeerConnectionInfo.local_address"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PeerConnectionInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.PeerConnectionInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.robot.v1.PeerConnectionType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // optional string remote_address = 2 [json_name = "remoteAddress"];
  if (_internal_has_remote_address()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_remote_address().data(), static_cast<int>(this->_internal_remote_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.PeerConnectionInfo.remote_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_remote_address(), target);
  }

  // optional string local_address = 3 [json_name = "localAddress"];
  if (_internal_has_local_address()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_local_address().data(), static_cast<int>(this->_internal_local_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.PeerConnectionInfo.local_address");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_local_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.PeerConnectionInfo)
  return target;
}

size_t PeerConnectionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.PeerConnectionInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string remote_address = 2 [json_name = "remoteAddress"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_remote_address());
    }

    // optional string local_address = 3 [json_name = "localAddress"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_local_address());
    }

  }
  // .viam.robot.v1.PeerConnectionType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PeerConnectionInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PeerConnectionInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PeerConnectionInfo::GetClassData() const { return &_class_data_; }

void PeerConnectionInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PeerConnectionInfo *>(to)->MergeFrom(
      static_cast<const PeerConnectionInfo &>(from));
}


void PeerConnectionInfo::MergeFrom(const PeerConnectionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.PeerConnectionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_remote_address(from._internal_remote_address());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_local_address(from._internal_local_address());
    }
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PeerConnectionInfo::CopyFrom(const PeerConnectionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.PeerConnectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeerConnectionInfo::IsInitialized() const {
  return true;
}

void PeerConnectionInfo::InternalSwap(PeerConnectionInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &remote_address_, lhs_arena,
      &other->remote_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &local_address_, lhs_arena,
      &other->local_address_, rhs_arena
  );
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PeerConnectionInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[24]);
}

// ===================================================================

class Session::_Internal {
 public:
  using HasBits = decltype(std::declval<Session>()._has_bits_);
  static const ::viam::robot::v1::PeerConnectionInfo& peer_connection_info(const Session* msg);
  static void set_has_peer_connection_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::viam::robot::v1::PeerConnectionInfo&
Session::_Internal::peer_connection_info(const Session* msg) {
  return *msg->peer_connection_info_;
}
Session::Session(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.Session)
}
Session::Session(const Session& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_peer_connection_info()) {
    peer_connection_info_ = new ::viam::robot::v1::PeerConnectionInfo(*from.peer_connection_info_);
  } else {
    peer_connection_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.Session)
}

inline void Session::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
peer_connection_info_ = nullptr;
}

Session::~Session() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.Session)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Session::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  if (this != internal_default_instance()) delete peer_connection_info_;
}

void Session::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Session::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.Session)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(peer_connection_info_ != nullptr);
    peer_connection_info_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Session::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.Session.id"));
        } else
          goto handle_unusual;
        continue;
      // optional .viam.robot.v1.PeerConnectionInfo peer_connection_info = 2 [json_name = "peerConnectionInfo"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer_connection_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Session::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.Session)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.Session.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // optional .viam.robot.v1.PeerConnectionInfo peer_connection_info = 2 [json_name = "peerConnectionInfo"];
  if (_internal_has_peer_connection_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::peer_connection_info(this),
        _Internal::peer_connection_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.Session)
  return target;
}

size_t Session::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.Session)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // optional .viam.robot.v1.PeerConnectionInfo peer_connection_info = 2 [json_name = "peerConnectionInfo"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *peer_connection_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Session::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Session::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Session::GetClassData() const { return &_class_data_; }

void Session::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Session *>(to)->MergeFrom(
      static_cast<const Session &>(from));
}


void Session::MergeFrom(const Session& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.Session)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_has_peer_connection_info()) {
    _internal_mutable_peer_connection_info()->::viam::robot::v1::PeerConnectionInfo::MergeFrom(from._internal_peer_connection_info());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Session::CopyFrom(const Session& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Session::IsInitialized() const {
  return true;
}

void Session::InternalSwap(Session* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  swap(peer_connection_info_, other->peer_connection_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Session::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[25]);
}

// ===================================================================

class GetSessionsRequest::_Internal {
 public:
};

GetSessionsRequest::GetSessionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetSessionsRequest)
}
GetSessionsRequest::GetSessionsRequest(const GetSessionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetSessionsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSessionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSessionsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetSessionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[26]);
}

// ===================================================================

class GetSessionsResponse::_Internal {
 public:
};

GetSessionsResponse::GetSessionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  sessions_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetSessionsResponse)
}
GetSessionsResponse::GetSessionsResponse(const GetSessionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      sessions_(from.sessions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetSessionsResponse)
}

inline void GetSessionsResponse::SharedCtor() {
}

GetSessionsResponse::~GetSessionsResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.GetSessionsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSessionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetSessionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSessionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.GetSessionsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSessionsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.Session sessions = 1 [json_name = "sessions"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sessions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSessionsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.GetSessionsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Session sessions = 1 [json_name = "sessions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sessions_size()); i < n; i++) {
    const auto& repfield = this->_internal_sessions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.GetSessionsResponse)
  return target;
}

size_t GetSessionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.GetSessionsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Session sessions = 1 [json_name = "sessions"];
  total_size += 1UL * this->_internal_sessions_size();
  for (const auto& msg : this->sessions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSessionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetSessionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSessionsResponse::GetClassData() const { return &_class_data_; }

void GetSessionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetSessionsResponse *>(to)->MergeFrom(
      static_cast<const GetSessionsResponse &>(from));
}


void GetSessionsResponse::MergeFrom(const GetSessionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.GetSessionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  sessions_.MergeFrom(from.sessions_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSessionsResponse::CopyFrom(const GetSessionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.GetSessionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSessionsResponse::IsInitialized() const {
  return true;
}

void GetSessionsResponse::InternalSwap(GetSessionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  sessions_.InternalSwap(&other->sessions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSessionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[27]);
}

// ===================================================================

class DiscoveryQuery::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const DiscoveryQuery* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
DiscoveryQuery::_Internal::extra(const DiscoveryQuery* msg) {
  return *msg->extra_;
}
void DiscoveryQuery::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
DiscoveryQuery::DiscoveryQuery(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.DiscoveryQuery)
}
DiscoveryQuery::DiscoveryQuery(const DiscoveryQuery& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subtype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    subtype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_subtype().empty()) {
    subtype_.Set(from._internal_subtype(), 
      GetArenaForAllocation());
  }
  model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model().empty()) {
    model_.Set(from._internal_model(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.DiscoveryQuery)
}

inline void DiscoveryQuery::SharedCtor() {
subtype_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  subtype_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
model_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

DiscoveryQuery::~DiscoveryQuery() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.DiscoveryQuery)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DiscoveryQuery::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  subtype_.Destroy();
  model_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void DiscoveryQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DiscoveryQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.DiscoveryQuery)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subtype_.ClearToEmpty();
  model_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DiscoveryQuery::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string subtype = 1 [json_name = "subtype"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_subtype();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.DiscoveryQuery.subtype"));
        } else
          goto handle_unusual;
        continue;
      // string model = 2 [json_name = "model"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.DiscoveryQuery.model"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DiscoveryQuery::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.DiscoveryQuery)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string subtype = 1 [json_name = "subtype"];
  if (!this->_internal_subtype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subtype().data(), static_cast<int>(this->_internal_subtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.DiscoveryQuery.subtype");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subtype(), target);
  }

  // string model = 2 [json_name = "model"];
  if (!this->_internal_model().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model().data(), static_cast<int>(this->_internal_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.DiscoveryQuery.model");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.DiscoveryQuery)
  return target;
}

size_t DiscoveryQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.DiscoveryQuery)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subtype = 1 [json_name = "subtype"];
  if (!this->_internal_subtype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subtype());
  }

  // string model = 2 [json_name = "model"];
  if (!this->_internal_model().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DiscoveryQuery::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DiscoveryQuery::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DiscoveryQuery::GetClassData() const { return &_class_data_; }

void DiscoveryQuery::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DiscoveryQuery *>(to)->MergeFrom(
      static_cast<const DiscoveryQuery &>(from));
}


void DiscoveryQuery::MergeFrom(const DiscoveryQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.DiscoveryQuery)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_subtype().empty()) {
    _internal_set_subtype(from._internal_subtype());
  }
  if (!from._internal_model().empty()) {
    _internal_set_model(from._internal_model());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DiscoveryQuery::CopyFrom(const DiscoveryQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.DiscoveryQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoveryQuery::IsInitialized() const {
  return true;
}

void DiscoveryQuery::InternalSwap(DiscoveryQuery* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &subtype_, lhs_arena,
      &other->subtype_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &model_, lhs_arena,
      &other->model_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DiscoveryQuery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[28]);
}

// ===================================================================

class Discovery::_Internal {
 public:
  static const ::viam::robot::v1::DiscoveryQuery& query(const Discovery* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& results(const Discovery* msg);
};

const ::viam::robot::v1::DiscoveryQuery&
Discovery::_Internal::query(const Discovery* msg) {
  return *msg->query_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
Discovery::_Internal::results(const Discovery* msg) {
  return *msg->results_;
}
void Discovery::clear_results() {
  if (GetArenaForAllocation() == nullptr && results_ != nullptr) {
    delete results_;
  }
  results_ = nullptr;
}
Discovery::Discovery(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.Discovery)
}
Discovery::Discovery(const Discovery& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_query()) {
    query_ = new ::viam::robot::v1::DiscoveryQuery(*from.query_);
  } else {
    query_ = nullptr;
  }
  if (from._internal_has_results()) {
    results_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.results_);
  } else {
    results_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.Discovery)
}

inline void Discovery::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&query_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&results_) -
    reinterpret_cast<char*>(&query_)) + sizeof(results_));
}

Discovery::~Discovery() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.Discovery)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Discovery::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete query_;
  if (this != internal_default_instance()) delete results_;
}

void Discovery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Discovery::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.Discovery)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && query_ != nullptr) {
    delete query_;
  }
  query_ = nullptr;
  if (GetArenaForAllocation() == nullptr && results_ != nullptr) {
    delete results_;
  }
  results_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Discovery::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.robot.v1.DiscoveryQuery query = 1 [json_name = "query"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_query(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct results = 2 [json_name = "results"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_results(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Discovery::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.Discovery)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.robot.v1.DiscoveryQuery query = 1 [json_name = "query"];
  if (this->_internal_has_query()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::query(this),
        _Internal::query(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct results = 2 [json_name = "results"];
  if (this->_internal_has_results()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::results(this),
        _Internal::results(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.Discovery)
  return target;
}

size_t Discovery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.Discovery)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.robot.v1.DiscoveryQuery query = 1 [json_name = "query"];
  if (this->_internal_has_query()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *query_);
  }

  // .google.protobuf.Struct results = 2 [json_name = "results"];
  if (this->_internal_has_results()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *results_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Discovery::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Discovery::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Discovery::GetClassData() const { return &_class_data_; }

void Discovery::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Discovery *>(to)->MergeFrom(
      static_cast<const Discovery &>(from));
}


void Discovery::MergeFrom(const Discovery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.Discovery)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_query()) {
    _internal_mutable_query()->::viam::robot::v1::DiscoveryQuery::MergeFrom(from._internal_query());
  }
  if (from._internal_has_results()) {
    _internal_mutable_results()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_results());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Discovery::CopyFrom(const Discovery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.Discovery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Discovery::IsInitialized() const {
  return true;
}

void Discovery::InternalSwap(Discovery* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Discovery, results_)
      + sizeof(Discovery::results_)
      - PROTOBUF_FIELD_OFFSET(Discovery, query_)>(
          reinterpret_cast<char*>(&query_),
          reinterpret_cast<char*>(&other->query_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Discovery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[29]);
}

// ===================================================================

class ModuleModel::_Internal {
 public:
};

ModuleModel::ModuleModel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ModuleModel)
}
ModuleModel::ModuleModel(const ModuleModel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  module_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    module_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module_name().empty()) {
    module_name_.Set(from._internal_module_name(), 
      GetArenaForAllocation());
  }
  model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model().empty()) {
    model_.Set(from._internal_model(), 
      GetArenaForAllocation());
  }
  api_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    api_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_api().empty()) {
    api_.Set(from._internal_api(), 
      GetArenaForAllocation());
  }
  from_local_module_ = from.from_local_module_;
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ModuleModel)
}

inline void ModuleModel::SharedCtor() {
module_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  module_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
model_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
api_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  api_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
from_local_module_ = false;
}

ModuleModel::~ModuleModel() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.ModuleModel)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModuleModel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  module_name_.Destroy();
  model_.Destroy();
  api_.Destroy();
}

void ModuleModel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModuleModel::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.ModuleModel)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_name_.ClearToEmpty();
  model_.ClearToEmpty();
  api_.ClearToEmpty();
  from_local_module_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModuleModel::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_name = 1 [json_name = "moduleName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.ModuleModel.module_name"));
        } else
          goto handle_unusual;
        continue;
      // string model = 2 [json_name = "model"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.ModuleModel.model"));
        } else
          goto handle_unusual;
        continue;
      // string api = 3 [json_name = "api"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_api();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.ModuleModel.api"));
        } else
          goto handle_unusual;
        continue;
      // bool from_local_module = 4 [json_name = "fromLocalModule"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          from_local_module_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModuleModel::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.ModuleModel)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_name = 1 [json_name = "moduleName"];
  if (!this->_internal_module_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_name().data(), static_cast<int>(this->_internal_module_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.ModuleModel.module_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_name(), target);
  }

  // string model = 2 [json_name = "model"];
  if (!this->_internal_model().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model().data(), static_cast<int>(this->_internal_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.ModuleModel.model");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model(), target);
  }

  // string api = 3 [json_name = "api"];
  if (!this->_internal_api().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_api().data(), static_cast<int>(this->_internal_api().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.ModuleModel.api");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_api(), target);
  }

  // bool from_local_module = 4 [json_name = "fromLocalModule"];
  if (this->_internal_from_local_module() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_from_local_module(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.ModuleModel)
  return target;
}

size_t ModuleModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.ModuleModel)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string module_name = 1 [json_name = "moduleName"];
  if (!this->_internal_module_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module_name());
  }

  // string model = 2 [json_name = "model"];
  if (!this->_internal_model().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model());
  }

  // string api = 3 [json_name = "api"];
  if (!this->_internal_api().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_api());
  }

  // bool from_local_module = 4 [json_name = "fromLocalModule"];
  if (this->_internal_from_local_module() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModuleModel::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModuleModel::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModuleModel::GetClassData() const { return &_class_data_; }

void ModuleModel::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModuleModel *>(to)->MergeFrom(
      static_cast<const ModuleModel &>(from));
}


void ModuleModel::MergeFrom(const ModuleModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.ModuleModel)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_module_name().empty()) {
    _internal_set_module_name(from._internal_module_name());
  }
  if (!from._internal_model().empty()) {
    _internal_set_model(from._internal_model());
  }
  if (!from._internal_api().empty()) {
    _internal_set_api(from._internal_api());
  }
  if (from._internal_from_local_module() != 0) {
    _internal_set_from_local_module(from._internal_from_local_module());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleModel::CopyFrom(const ModuleModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.ModuleModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleModel::IsInitialized() const {
  return true;
}

void ModuleModel::InternalSwap(ModuleModel* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &module_name_, lhs_arena,
      &other->module_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &model_, lhs_arena,
      &other->model_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &api_, lhs_arena,
      &other->api_, rhs_arena
  );
  swap(from_local_module_, other->from_local_module_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModuleModel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[30]);
}

// ===================================================================

class GetModelsFromModulesRequest::_Internal {
 public:
};

GetModelsFromModulesRequest::GetModelsFromModulesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetModelsFromModulesRequest)
}
GetModelsFromModulesRequest::GetModelsFromModulesRequest(const GetModelsFromModulesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetModelsFromModulesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetModelsFromModulesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetModelsFromModulesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetModelsFromModulesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[31]);
}

// ===================================================================

class GetModelsFromModulesResponse::_Internal {
 public:
};

GetModelsFromModulesResponse::GetModelsFromModulesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  models_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetModelsFromModulesResponse)
}
GetModelsFromModulesResponse::GetModelsFromModulesResponse(const GetModelsFromModulesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      models_(from.models_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetModelsFromModulesResponse)
}

inline void GetModelsFromModulesResponse::SharedCtor() {
}

GetModelsFromModulesResponse::~GetModelsFromModulesResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.GetModelsFromModulesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetModelsFromModulesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetModelsFromModulesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetModelsFromModulesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.GetModelsFromModulesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  models_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetModelsFromModulesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.ModuleModel models = 1 [json_name = "models"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_models(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetModelsFromModulesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.GetModelsFromModulesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.ModuleModel models = 1 [json_name = "models"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_models_size()); i < n; i++) {
    const auto& repfield = this->_internal_models(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.GetModelsFromModulesResponse)
  return target;
}

size_t GetModelsFromModulesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.GetModelsFromModulesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.ModuleModel models = 1 [json_name = "models"];
  total_size += 1UL * this->_internal_models_size();
  for (const auto& msg : this->models_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetModelsFromModulesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetModelsFromModulesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetModelsFromModulesResponse::GetClassData() const { return &_class_data_; }

void GetModelsFromModulesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetModelsFromModulesResponse *>(to)->MergeFrom(
      static_cast<const GetModelsFromModulesResponse &>(from));
}


void GetModelsFromModulesResponse::MergeFrom(const GetModelsFromModulesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.GetModelsFromModulesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  models_.MergeFrom(from.models_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetModelsFromModulesResponse::CopyFrom(const GetModelsFromModulesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.GetModelsFromModulesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModelsFromModulesResponse::IsInitialized() const {
  return true;
}

void GetModelsFromModulesResponse::InternalSwap(GetModelsFromModulesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  models_.InternalSwap(&other->models_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetModelsFromModulesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[32]);
}

// ===================================================================

class DiscoverComponentsRequest::_Internal {
 public:
};

DiscoverComponentsRequest::DiscoverComponentsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  queries_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.DiscoverComponentsRequest)
}
DiscoverComponentsRequest::DiscoverComponentsRequest(const DiscoverComponentsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      queries_(from.queries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.DiscoverComponentsRequest)
}

inline void DiscoverComponentsRequest::SharedCtor() {
}

DiscoverComponentsRequest::~DiscoverComponentsRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.DiscoverComponentsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DiscoverComponentsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DiscoverComponentsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DiscoverComponentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.DiscoverComponentsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  queries_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DiscoverComponentsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.DiscoveryQuery queries = 1 [json_name = "queries"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_queries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DiscoverComponentsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.DiscoverComponentsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.DiscoveryQuery queries = 1 [json_name = "queries"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_queries_size()); i < n; i++) {
    const auto& repfield = this->_internal_queries(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.DiscoverComponentsRequest)
  return target;
}

size_t DiscoverComponentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.DiscoverComponentsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.DiscoveryQuery queries = 1 [json_name = "queries"];
  total_size += 1UL * this->_internal_queries_size();
  for (const auto& msg : this->queries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DiscoverComponentsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DiscoverComponentsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DiscoverComponentsRequest::GetClassData() const { return &_class_data_; }

void DiscoverComponentsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DiscoverComponentsRequest *>(to)->MergeFrom(
      static_cast<const DiscoverComponentsRequest &>(from));
}


void DiscoverComponentsRequest::MergeFrom(const DiscoverComponentsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.DiscoverComponentsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  queries_.MergeFrom(from.queries_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DiscoverComponentsRequest::CopyFrom(const DiscoverComponentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.DiscoverComponentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoverComponentsRequest::IsInitialized() const {
  return true;
}

void DiscoverComponentsRequest::InternalSwap(DiscoverComponentsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  queries_.InternalSwap(&other->queries_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DiscoverComponentsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[33]);
}

// ===================================================================

class DiscoverComponentsResponse::_Internal {
 public:
};

DiscoverComponentsResponse::DiscoverComponentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  discovery_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.DiscoverComponentsResponse)
}
DiscoverComponentsResponse::DiscoverComponentsResponse(const DiscoverComponentsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      discovery_(from.discovery_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.DiscoverComponentsResponse)
}

inline void DiscoverComponentsResponse::SharedCtor() {
}

DiscoverComponentsResponse::~DiscoverComponentsResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.DiscoverComponentsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DiscoverComponentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DiscoverComponentsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DiscoverComponentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.DiscoverComponentsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  discovery_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DiscoverComponentsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.Discovery discovery = 1 [json_name = "discovery"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_discovery(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DiscoverComponentsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.DiscoverComponentsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Discovery discovery = 1 [json_name = "discovery"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_discovery_size()); i < n; i++) {
    const auto& repfield = this->_internal_discovery(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.DiscoverComponentsResponse)
  return target;
}

size_t DiscoverComponentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.DiscoverComponentsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Discovery discovery = 1 [json_name = "discovery"];
  total_size += 1UL * this->_internal_discovery_size();
  for (const auto& msg : this->discovery_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DiscoverComponentsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DiscoverComponentsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DiscoverComponentsResponse::GetClassData() const { return &_class_data_; }

void DiscoverComponentsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DiscoverComponentsResponse *>(to)->MergeFrom(
      static_cast<const DiscoverComponentsResponse &>(from));
}


void DiscoverComponentsResponse::MergeFrom(const DiscoverComponentsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.DiscoverComponentsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  discovery_.MergeFrom(from.discovery_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DiscoverComponentsResponse::CopyFrom(const DiscoverComponentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.DiscoverComponentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoverComponentsResponse::IsInitialized() const {
  return true;
}

void DiscoverComponentsResponse::InternalSwap(DiscoverComponentsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  discovery_.InternalSwap(&other->discovery_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DiscoverComponentsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[34]);
}

// ===================================================================

class Status::_Internal {
 public:
  static const ::viam::common::v1::ResourceName& name(const Status* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& status(const Status* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_reconfigured(const Status* msg);
};

const ::viam::common::v1::ResourceName&
Status::_Internal::name(const Status* msg) {
  return *msg->name_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
Status::_Internal::status(const Status* msg) {
  return *msg->status_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Status::_Internal::last_reconfigured(const Status* msg) {
  return *msg->last_reconfigured_;
}
void Status::clear_name() {
  if (GetArenaForAllocation() == nullptr && name_ != nullptr) {
    delete name_;
  }
  name_ = nullptr;
}
void Status::clear_status() {
  if (GetArenaForAllocation() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
void Status::clear_last_reconfigured() {
  if (GetArenaForAllocation() == nullptr && last_reconfigured_ != nullptr) {
    delete last_reconfigured_;
  }
  last_reconfigured_ = nullptr;
}
Status::Status(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.Status)
}
Status::Status(const Status& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_name()) {
    name_ = new ::viam::common::v1::ResourceName(*from.name_);
  } else {
    name_ = nullptr;
  }
  if (from._internal_has_status()) {
    status_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_last_reconfigured()) {
    last_reconfigured_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_reconfigured_);
  } else {
    last_reconfigured_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.Status)
}

inline void Status::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&name_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&last_reconfigured_) -
    reinterpret_cast<char*>(&name_)) + sizeof(last_reconfigured_));
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.Status)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Status::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete last_reconfigured_;
}

void Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.Status)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && name_ != nullptr) {
    delete name_;
  }
  name_ = nullptr;
  if (GetArenaForAllocation() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArenaForAllocation() == nullptr && last_reconfigured_ != nullptr) {
    delete last_reconfigured_;
  }
  last_reconfigured_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Status::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_name(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_reconfigured = 3 [json_name = "lastReconfigured"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_reconfigured(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Status::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.Status)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
  if (this->_internal_has_name()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::name(this),
        _Internal::name(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct status = 2 [json_name = "status"];
  if (this->_internal_has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp last_reconfigured = 3 [json_name = "lastReconfigured"];
  if (this->_internal_has_last_reconfigured()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::last_reconfigured(this),
        _Internal::last_reconfigured(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.Status)
  return target;
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.Status)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
  if (this->_internal_has_name()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .google.protobuf.Struct status = 2 [json_name = "status"];
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.protobuf.Timestamp last_reconfigured = 3 [json_name = "lastReconfigured"];
  if (this->_internal_has_last_reconfigured()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_reconfigured_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Status::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Status::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Status::GetClassData() const { return &_class_data_; }

void Status::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Status *>(to)->MergeFrom(
      static_cast<const Status &>(from));
}


void Status::MergeFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.Status)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_name()) {
    _internal_mutable_name()->::viam::common::v1::ResourceName::MergeFrom(from._internal_name());
  }
  if (from._internal_has_status()) {
    _internal_mutable_status()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_status());
  }
  if (from._internal_has_last_reconfigured()) {
    _internal_mutable_last_reconfigured()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_reconfigured());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::InternalSwap(Status* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Status, last_reconfigured_)
      + sizeof(Status::last_reconfigured_)
      - PROTOBUF_FIELD_OFFSET(Status, name_)>(
          reinterpret_cast<char*>(&name_),
          reinterpret_cast<char*>(&other->name_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Status::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[35]);
}

// ===================================================================

class GetStatusRequest::_Internal {
 public:
};

void GetStatusRequest::clear_resource_names() {
  resource_names_.Clear();
}
GetStatusRequest::GetStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  resource_names_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetStatusRequest)
}
GetStatusRequest::GetStatusRequest(const GetStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      resource_names_(from.resource_names_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetStatusRequest)
}

inline void GetStatusRequest::SharedCtor() {
}

GetStatusRequest::~GetStatusRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.GetStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.GetStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_names_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resource_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.GetStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resource_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_resource_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.GetStatusRequest)
  return target;
}

size_t GetStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.GetStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
  total_size += 1UL * this->_internal_resource_names_size();
  for (const auto& msg : this->resource_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStatusRequest::GetClassData() const { return &_class_data_; }

void GetStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetStatusRequest *>(to)->MergeFrom(
      static_cast<const GetStatusRequest &>(from));
}


void GetStatusRequest::MergeFrom(const GetStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.GetStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  resource_names_.MergeFrom(from.resource_names_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStatusRequest::CopyFrom(const GetStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.GetStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusRequest::IsInitialized() const {
  return true;
}

void GetStatusRequest::InternalSwap(GetStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  resource_names_.InternalSwap(&other->resource_names_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[36]);
}

// ===================================================================

class GetStatusResponse::_Internal {
 public:
};

GetStatusResponse::GetStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  status_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetStatusResponse)
}
GetStatusResponse::GetStatusResponse(const GetStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      status_(from.status_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetStatusResponse)
}

inline void GetStatusResponse::SharedCtor() {
}

GetStatusResponse::~GetStatusResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.GetStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.GetStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_status(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.GetStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_status_size()); i < n; i++) {
    const auto& repfield = this->_internal_status(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.GetStatusResponse)
  return target;
}

size_t GetStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.GetStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
  total_size += 1UL * this->_internal_status_size();
  for (const auto& msg : this->status_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStatusResponse::GetClassData() const { return &_class_data_; }

void GetStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetStatusResponse *>(to)->MergeFrom(
      static_cast<const GetStatusResponse &>(from));
}


void GetStatusResponse::MergeFrom(const GetStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.GetStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  status_.MergeFrom(from.status_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStatusResponse::CopyFrom(const GetStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.GetStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResponse::IsInitialized() const {
  return true;
}

void GetStatusResponse::InternalSwap(GetStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  status_.InternalSwap(&other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[37]);
}

// ===================================================================

class StreamStatusRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Duration& every(const StreamStatusRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Duration&
StreamStatusRequest::_Internal::every(const StreamStatusRequest* msg) {
  return *msg->every_;
}
void StreamStatusRequest::clear_resource_names() {
  resource_names_.Clear();
}
void StreamStatusRequest::clear_every() {
  if (GetArenaForAllocation() == nullptr && every_ != nullptr) {
    delete every_;
  }
  every_ = nullptr;
}
StreamStatusRequest::StreamStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  resource_names_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StreamStatusRequest)
}
StreamStatusRequest::StreamStatusRequest(const StreamStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      resource_names_(from.resource_names_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_every()) {
    every_ = new ::PROTOBUF_NAMESPACE_ID::Duration(*from.every_);
  } else {
    every_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StreamStatusRequest)
}

inline void StreamStatusRequest::SharedCtor() {
every_ = nullptr;
}

StreamStatusRequest::~StreamStatusRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.StreamStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete every_;
}

void StreamStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StreamStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.StreamStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_names_.Clear();
  if (GetArenaForAllocation() == nullptr && every_ != nullptr) {
    delete every_;
  }
  every_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resource_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Duration every = 2 [json_name = "every"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_every(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.StreamStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resource_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_resource_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .google.protobuf.Duration every = 2 [json_name = "every"];
  if (this->_internal_has_every()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::every(this),
        _Internal::every(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.StreamStatusRequest)
  return target;
}

size_t StreamStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.StreamStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
  total_size += 1UL * this->_internal_resource_names_size();
  for (const auto& msg : this->resource_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.protobuf.Duration every = 2 [json_name = "every"];
  if (this->_internal_has_every()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *every_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StreamStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamStatusRequest::GetClassData() const { return &_class_data_; }

void StreamStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StreamStatusRequest *>(to)->MergeFrom(
      static_cast<const StreamStatusRequest &>(from));
}


void StreamStatusRequest::MergeFrom(const StreamStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.StreamStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  resource_names_.MergeFrom(from.resource_names_);
  if (from._internal_has_every()) {
    _internal_mutable_every()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_every());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamStatusRequest::CopyFrom(const StreamStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.StreamStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamStatusRequest::IsInitialized() const {
  return true;
}

void StreamStatusRequest::InternalSwap(StreamStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  resource_names_.InternalSwap(&other->resource_names_);
  swap(every_, other->every_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[38]);
}

// ===================================================================

class StreamStatusResponse::_Internal {
 public:
};

StreamStatusResponse::StreamStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  status_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StreamStatusResponse)
}
StreamStatusResponse::StreamStatusResponse(const StreamStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      status_(from.status_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StreamStatusResponse)
}

inline void StreamStatusResponse::SharedCtor() {
}

StreamStatusResponse::~StreamStatusResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.StreamStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StreamStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StreamStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.StreamStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_status(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.StreamStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_status_size()); i < n; i++) {
    const auto& repfield = this->_internal_status(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.StreamStatusResponse)
  return target;
}

size_t StreamStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.StreamStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
  total_size += 1UL * this->_internal_status_size();
  for (const auto& msg : this->status_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StreamStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamStatusResponse::GetClassData() const { return &_class_data_; }

void StreamStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StreamStatusResponse *>(to)->MergeFrom(
      static_cast<const StreamStatusResponse &>(from));
}


void StreamStatusResponse::MergeFrom(const StreamStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.StreamStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  status_.MergeFrom(from.status_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamStatusResponse::CopyFrom(const StreamStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.StreamStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamStatusResponse::IsInitialized() const {
  return true;
}

void StreamStatusResponse::InternalSwap(StreamStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  status_.InternalSwap(&other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[39]);
}

// ===================================================================

class StopExtraParameters::_Internal {
 public:
  static const ::viam::common::v1::ResourceName& name(const StopExtraParameters* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& params(const StopExtraParameters* msg);
};

const ::viam::common::v1::ResourceName&
StopExtraParameters::_Internal::name(const StopExtraParameters* msg) {
  return *msg->name_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
StopExtraParameters::_Internal::params(const StopExtraParameters* msg) {
  return *msg->params_;
}
void StopExtraParameters::clear_name() {
  if (GetArenaForAllocation() == nullptr && name_ != nullptr) {
    delete name_;
  }
  name_ = nullptr;
}
void StopExtraParameters::clear_params() {
  if (GetArenaForAllocation() == nullptr && params_ != nullptr) {
    delete params_;
  }
  params_ = nullptr;
}
StopExtraParameters::StopExtraParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StopExtraParameters)
}
StopExtraParameters::StopExtraParameters(const StopExtraParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_name()) {
    name_ = new ::viam::common::v1::ResourceName(*from.name_);
  } else {
    name_ = nullptr;
  }
  if (from._internal_has_params()) {
    params_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.params_);
  } else {
    params_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StopExtraParameters)
}

inline void StopExtraParameters::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&name_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&params_) -
    reinterpret_cast<char*>(&name_)) + sizeof(params_));
}

StopExtraParameters::~StopExtraParameters() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.StopExtraParameters)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopExtraParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete params_;
}

void StopExtraParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopExtraParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.StopExtraParameters)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && name_ != nullptr) {
    delete name_;
  }
  name_ = nullptr;
  if (GetArenaForAllocation() == nullptr && params_ != nullptr) {
    delete params_;
  }
  params_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopExtraParameters::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_name(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct params = 2 [json_name = "params"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopExtraParameters::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.StopExtraParameters)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
  if (this->_internal_has_name()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::name(this),
        _Internal::name(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct params = 2 [json_name = "params"];
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.StopExtraParameters)
  return target;
}

size_t StopExtraParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.StopExtraParameters)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
  if (this->_internal_has_name()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .google.protobuf.Struct params = 2 [json_name = "params"];
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopExtraParameters::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StopExtraParameters::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopExtraParameters::GetClassData() const { return &_class_data_; }

void StopExtraParameters::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StopExtraParameters *>(to)->MergeFrom(
      static_cast<const StopExtraParameters &>(from));
}


void StopExtraParameters::MergeFrom(const StopExtraParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.StopExtraParameters)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_name()) {
    _internal_mutable_name()->::viam::common::v1::ResourceName::MergeFrom(from._internal_name());
  }
  if (from._internal_has_params()) {
    _internal_mutable_params()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_params());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopExtraParameters::CopyFrom(const StopExtraParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.StopExtraParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopExtraParameters::IsInitialized() const {
  return true;
}

void StopExtraParameters::InternalSwap(StopExtraParameters* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StopExtraParameters, params_)
      + sizeof(StopExtraParameters::params_)
      - PROTOBUF_FIELD_OFFSET(StopExtraParameters, name_)>(
          reinterpret_cast<char*>(&name_),
          reinterpret_cast<char*>(&other->name_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StopExtraParameters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[40]);
}

// ===================================================================

class StopAllRequest::_Internal {
 public:
};

StopAllRequest::StopAllRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  extra_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StopAllRequest)
}
StopAllRequest::StopAllRequest(const StopAllRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      extra_(from.extra_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StopAllRequest)
}

inline void StopAllRequest::SharedCtor() {
}

StopAllRequest::~StopAllRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.StopAllRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopAllRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StopAllRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopAllRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.StopAllRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extra_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopAllRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.StopExtraParameters extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_extra(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<794>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopAllRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.StopAllRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.StopExtraParameters extra = 99 [json_name = "extra"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_extra_size()); i < n; i++) {
    const auto& repfield = this->_internal_extra(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(99, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.StopAllRequest)
  return target;
}

size_t StopAllRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.StopAllRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.StopExtraParameters extra = 99 [json_name = "extra"];
  total_size += 2UL * this->_internal_extra_size();
  for (const auto& msg : this->extra_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopAllRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StopAllRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopAllRequest::GetClassData() const { return &_class_data_; }

void StopAllRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StopAllRequest *>(to)->MergeFrom(
      static_cast<const StopAllRequest &>(from));
}


void StopAllRequest::MergeFrom(const StopAllRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.StopAllRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  extra_.MergeFrom(from.extra_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopAllRequest::CopyFrom(const StopAllRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.StopAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopAllRequest::IsInitialized() const {
  return true;
}

void StopAllRequest::InternalSwap(StopAllRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  extra_.InternalSwap(&other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopAllRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[41]);
}

// ===================================================================

class StopAllResponse::_Internal {
 public:
};

StopAllResponse::StopAllResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StopAllResponse)
}
StopAllResponse::StopAllResponse(const StopAllResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StopAllResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopAllResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopAllResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StopAllResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[42]);
}

// ===================================================================

class StartSessionRequest::_Internal {
 public:
};

StartSessionRequest::StartSessionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StartSessionRequest)
}
StartSessionRequest::StartSessionRequest(const StartSessionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resume_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resume_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resume().empty()) {
    resume_.Set(from._internal_resume(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StartSessionRequest)
}

inline void StartSessionRequest::SharedCtor() {
resume_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resume_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StartSessionRequest::~StartSessionRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.StartSessionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StartSessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  resume_.Destroy();
}

void StartSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.StartSessionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resume_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartSessionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string resume = 1 [json_name = "resume"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_resume();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.StartSessionRequest.resume"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StartSessionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.StartSessionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string resume = 1 [json_name = "resume"];
  if (!this->_internal_resume().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resume().data(), static_cast<int>(this->_internal_resume().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.StartSessionRequest.resume");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_resume(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.StartSessionRequest)
  return target;
}

size_t StartSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.StartSessionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resume = 1 [json_name = "resume"];
  if (!this->_internal_resume().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resume());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartSessionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartSessionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartSessionRequest::GetClassData() const { return &_class_data_; }

void StartSessionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartSessionRequest *>(to)->MergeFrom(
      static_cast<const StartSessionRequest &>(from));
}


void StartSessionRequest::MergeFrom(const StartSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.StartSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_resume().empty()) {
    _internal_set_resume(from._internal_resume());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartSessionRequest::CopyFrom(const StartSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.StartSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartSessionRequest::IsInitialized() const {
  return true;
}

void StartSessionRequest::InternalSwap(StartSessionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &resume_, lhs_arena,
      &other->resume_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StartSessionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[43]);
}

// ===================================================================

class StartSessionResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Duration& heartbeat_window(const StartSessionResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Duration&
StartSessionResponse::_Internal::heartbeat_window(const StartSessionResponse* msg) {
  return *msg->heartbeat_window_;
}
void StartSessionResponse::clear_heartbeat_window() {
  if (GetArenaForAllocation() == nullptr && heartbeat_window_ != nullptr) {
    delete heartbeat_window_;
  }
  heartbeat_window_ = nullptr;
}
StartSessionResponse::StartSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StartSessionResponse)
}
StartSessionResponse::StartSessionResponse(const StartSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_heartbeat_window()) {
    heartbeat_window_ = new ::PROTOBUF_NAMESPACE_ID::Duration(*from.heartbeat_window_);
  } else {
    heartbeat_window_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StartSessionResponse)
}

inline void StartSessionResponse::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
heartbeat_window_ = nullptr;
}

StartSessionResponse::~StartSessionResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.StartSessionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StartSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  if (this != internal_default_instance()) delete heartbeat_window_;
}

void StartSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.StartSessionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && heartbeat_window_ != nullptr) {
    delete heartbeat_window_;
  }
  heartbeat_window_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartSessionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.StartSessionResponse.id"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Duration heartbeat_window = 2 [json_name = "heartbeatWindow"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_heartbeat_window(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StartSessionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.StartSessionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.StartSessionResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .google.protobuf.Duration heartbeat_window = 2 [json_name = "heartbeatWindow"];
  if (this->_internal_has_heartbeat_window()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::heartbeat_window(this),
        _Internal::heartbeat_window(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.StartSessionResponse)
  return target;
}

size_t StartSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.StartSessionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .google.protobuf.Duration heartbeat_window = 2 [json_name = "heartbeatWindow"];
  if (this->_internal_has_heartbeat_window()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *heartbeat_window_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartSessionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartSessionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartSessionResponse::GetClassData() const { return &_class_data_; }

void StartSessionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartSessionResponse *>(to)->MergeFrom(
      static_cast<const StartSessionResponse &>(from));
}


void StartSessionResponse::MergeFrom(const StartSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.StartSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_has_heartbeat_window()) {
    _internal_mutable_heartbeat_window()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_heartbeat_window());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartSessionResponse::CopyFrom(const StartSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.StartSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartSessionResponse::IsInitialized() const {
  return true;
}

void StartSessionResponse::InternalSwap(StartSessionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  swap(heartbeat_window_, other->heartbeat_window_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartSessionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[44]);
}

// ===================================================================

class SendSessionHeartbeatRequest::_Internal {
 public:
};

SendSessionHeartbeatRequest::SendSessionHeartbeatRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.SendSessionHeartbeatRequest)
}
SendSessionHeartbeatRequest::SendSessionHeartbeatRequest(const SendSessionHeartbeatRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.SendSessionHeartbeatRequest)
}

inline void SendSessionHeartbeatRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendSessionHeartbeatRequest::~SendSessionHeartbeatRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.SendSessionHeartbeatRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendSessionHeartbeatRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void SendSessionHeartbeatRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SendSessionHeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.SendSessionHeartbeatRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendSessionHeartbeatRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.SendSessionHeartbeatRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendSessionHeartbeatRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.SendSessionHeartbeatRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.SendSessionHeartbeatRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.SendSessionHeartbeatRequest)
  return target;
}

size_t SendSessionHeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.SendSessionHeartbeatRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendSessionHeartbeatRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SendSessionHeartbeatRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendSessionHeartbeatRequest::GetClassData() const { return &_class_data_; }

void SendSessionHeartbeatRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SendSessionHeartbeatRequest *>(to)->MergeFrom(
      static_cast<const SendSessionHeartbeatRequest &>(from));
}


void SendSessionHeartbeatRequest::MergeFrom(const SendSessionHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.SendSessionHeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendSessionHeartbeatRequest::CopyFrom(const SendSessionHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.SendSessionHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendSessionHeartbeatRequest::IsInitialized() const {
  return true;
}

void SendSessionHeartbeatRequest::InternalSwap(SendSessionHeartbeatRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SendSessionHeartbeatRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[45]);
}

// ===================================================================

class SendSessionHeartbeatResponse::_Internal {
 public:
};

SendSessionHeartbeatResponse::SendSessionHeartbeatResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.SendSessionHeartbeatResponse)
}
SendSessionHeartbeatResponse::SendSessionHeartbeatResponse(const SendSessionHeartbeatResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.SendSessionHeartbeatResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendSessionHeartbeatResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendSessionHeartbeatResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SendSessionHeartbeatResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[46]);
}

// ===================================================================

class LogRequest::_Internal {
 public:
};

void LogRequest::clear_logs() {
  logs_.Clear();
}
LogRequest::LogRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  logs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.LogRequest)
}
LogRequest::LogRequest(const LogRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      logs_(from.logs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.LogRequest)
}

inline void LogRequest::SharedCtor() {
}

LogRequest::~LogRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.LogRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LogRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.LogRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.common.v1.LogEntry logs = 1 [json_name = "logs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_logs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.LogRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.common.v1.LogEntry logs = 1 [json_name = "logs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_logs_size()); i < n; i++) {
    const auto& repfield = this->_internal_logs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.LogRequest)
  return target;
}

size_t LogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.LogRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.common.v1.LogEntry logs = 1 [json_name = "logs"];
  total_size += 1UL * this->_internal_logs_size();
  for (const auto& msg : this->logs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LogRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogRequest::GetClassData() const { return &_class_data_; }

void LogRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LogRequest *>(to)->MergeFrom(
      static_cast<const LogRequest &>(from));
}


void LogRequest::MergeFrom(const LogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.LogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  logs_.MergeFrom(from.logs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogRequest::CopyFrom(const LogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.LogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogRequest::IsInitialized() const {
  return true;
}

void LogRequest::InternalSwap(LogRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  logs_.InternalSwap(&other->logs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[47]);
}

// ===================================================================

class LogResponse::_Internal {
 public:
};

LogResponse::LogResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.LogResponse)
}
LogResponse::LogResponse(const LogResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.LogResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata LogResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[48]);
}

// ===================================================================

class GetCloudMetadataRequest::_Internal {
 public:
};

GetCloudMetadataRequest::GetCloudMetadataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetCloudMetadataRequest)
}
GetCloudMetadataRequest::GetCloudMetadataRequest(const GetCloudMetadataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetCloudMetadataRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCloudMetadataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCloudMetadataRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetCloudMetadataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[49]);
}

// ===================================================================

class GetCloudMetadataResponse::_Internal {
 public:
};

GetCloudMetadataResponse::GetCloudMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetCloudMetadataResponse)
}
GetCloudMetadataResponse::GetCloudMetadataResponse(const GetCloudMetadataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  robot_part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_part_id().empty()) {
    robot_part_id_.Set(from._internal_robot_part_id(), 
      GetArenaForAllocation());
  }
  primary_org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    primary_org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_primary_org_id().empty()) {
    primary_org_id_.Set(from._internal_primary_org_id(), 
      GetArenaForAllocation());
  }
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  machine_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    machine_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_machine_id().empty()) {
    machine_id_.Set(from._internal_machine_id(), 
      GetArenaForAllocation());
  }
  machine_part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    machine_part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_machine_part_id().empty()) {
    machine_part_id_.Set(from._internal_machine_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetCloudMetadataResponse)
}

inline void GetCloudMetadataResponse::SharedCtor() {
robot_part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
primary_org_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  primary_org_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
machine_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  machine_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
machine_part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  machine_part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCloudMetadataResponse::~GetCloudMetadataResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.GetCloudMetadataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCloudMetadataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  robot_part_id_.Destroy();
  primary_org_id_.Destroy();
  location_id_.Destroy();
  machine_id_.Destroy();
  machine_part_id_.Destroy();
}

void GetCloudMetadataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCloudMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.GetCloudMetadataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robot_part_id_.ClearToEmpty();
  primary_org_id_.ClearToEmpty();
  location_id_.ClearToEmpty();
  machine_id_.ClearToEmpty();
  machine_part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCloudMetadataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string robot_part_id = 1 [json_name = "robotPartId", deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_robot_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.GetCloudMetadataResponse.robot_part_id"));
        } else
          goto handle_unusual;
        continue;
      // string primary_org_id = 2 [json_name = "primaryOrgId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_primary_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.GetCloudMetadataResponse.primary_org_id"));
        } else
          goto handle_unusual;
        continue;
      // string location_id = 3 [json_name = "locationId"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.GetCloudMetadataResponse.location_id"));
        } else
          goto handle_unusual;
        continue;
      // string machine_id = 4 [json_name = "machineId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_machine_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.GetCloudMetadataResponse.machine_id"));
        } else
          goto handle_unusual;
        continue;
      // string machine_part_id = 5 [json_name = "machinePartId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_machine_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.GetCloudMetadataResponse.machine_part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCloudMetadataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.GetCloudMetadataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_part_id = 1 [json_name = "robotPartId", deprecated = true];
  if (!this->_internal_robot_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_part_id().data(), static_cast<int>(this->_internal_robot_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.GetCloudMetadataResponse.robot_part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_robot_part_id(), target);
  }

  // string primary_org_id = 2 [json_name = "primaryOrgId"];
  if (!this->_internal_primary_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_primary_org_id().data(), static_cast<int>(this->_internal_primary_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.GetCloudMetadataResponse.primary_org_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_primary_org_id(), target);
  }

  // string location_id = 3 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.GetCloudMetadataResponse.location_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_location_id(), target);
  }

  // string machine_id = 4 [json_name = "machineId"];
  if (!this->_internal_machine_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_machine_id().data(), static_cast<int>(this->_internal_machine_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.GetCloudMetadataResponse.machine_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_machine_id(), target);
  }

  // string machine_part_id = 5 [json_name = "machinePartId"];
  if (!this->_internal_machine_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_machine_part_id().data(), static_cast<int>(this->_internal_machine_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.GetCloudMetadataResponse.machine_part_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_machine_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.GetCloudMetadataResponse)
  return target;
}

size_t GetCloudMetadataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.GetCloudMetadataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string robot_part_id = 1 [json_name = "robotPartId", deprecated = true];
  if (!this->_internal_robot_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_part_id());
  }

  // string primary_org_id = 2 [json_name = "primaryOrgId"];
  if (!this->_internal_primary_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_primary_org_id());
  }

  // string location_id = 3 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // string machine_id = 4 [json_name = "machineId"];
  if (!this->_internal_machine_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_machine_id());
  }

  // string machine_part_id = 5 [json_name = "machinePartId"];
  if (!this->_internal_machine_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_machine_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCloudMetadataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetCloudMetadataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCloudMetadataResponse::GetClassData() const { return &_class_data_; }

void GetCloudMetadataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetCloudMetadataResponse *>(to)->MergeFrom(
      static_cast<const GetCloudMetadataResponse &>(from));
}


void GetCloudMetadataResponse::MergeFrom(const GetCloudMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.GetCloudMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_robot_part_id().empty()) {
    _internal_set_robot_part_id(from._internal_robot_part_id());
  }
  if (!from._internal_primary_org_id().empty()) {
    _internal_set_primary_org_id(from._internal_primary_org_id());
  }
  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (!from._internal_machine_id().empty()) {
    _internal_set_machine_id(from._internal_machine_id());
  }
  if (!from._internal_machine_part_id().empty()) {
    _internal_set_machine_part_id(from._internal_machine_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCloudMetadataResponse::CopyFrom(const GetCloudMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.GetCloudMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCloudMetadataResponse::IsInitialized() const {
  return true;
}

void GetCloudMetadataResponse::InternalSwap(GetCloudMetadataResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_part_id_, lhs_arena,
      &other->robot_part_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &primary_org_id_, lhs_arena,
      &other->primary_org_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &machine_id_, lhs_arena,
      &other->machine_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &machine_part_id_, lhs_arena,
      &other->machine_part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCloudMetadataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[50]);
}

// ===================================================================

class RestartModuleRequest::_Internal {
 public:
};

RestartModuleRequest::RestartModuleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.RestartModuleRequest)
}
RestartModuleRequest::RestartModuleRequest(const RestartModuleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_id_or_name();
  switch (from.id_or_name_case()) {
    case kModuleId: {
      _internal_set_module_id(from._internal_module_id());
      break;
    }
    case kModuleName: {
      _internal_set_module_name(from._internal_module_name());
      break;
    }
    case ID_OR_NAME_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.RestartModuleRequest)
}

inline void RestartModuleRequest::SharedCtor() {
clear_has_id_or_name();
}

RestartModuleRequest::~RestartModuleRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.RestartModuleRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RestartModuleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_id_or_name()) {
    clear_id_or_name();
  }
}

void RestartModuleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RestartModuleRequest::clear_id_or_name() {
// @@protoc_insertion_point(one_of_clear_start:viam.robot.v1.RestartModuleRequest)
  switch (id_or_name_case()) {
    case kModuleId: {
      id_or_name_.module_id_.Destroy();
      break;
    }
    case kModuleName: {
      id_or_name_.module_name_.Destroy();
      break;
    }
    case ID_OR_NAME_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ID_OR_NAME_NOT_SET;
}


void RestartModuleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.RestartModuleRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_id_or_name();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RestartModuleRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string module_id = 1 [json_name = "moduleId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_module_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.RestartModuleRequest.module_id"));
        } else
          goto handle_unusual;
        continue;
      // string module_name = 2 [json_name = "moduleName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_module_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.RestartModuleRequest.module_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RestartModuleRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.RestartModuleRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string module_id = 1 [json_name = "moduleId"];
  if (_internal_has_module_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_id().data(), static_cast<int>(this->_internal_module_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.RestartModuleRequest.module_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_module_id(), target);
  }

  // string module_name = 2 [json_name = "moduleName"];
  if (_internal_has_module_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module_name().data(), static_cast<int>(this->_internal_module_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.RestartModuleRequest.module_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_module_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.RestartModuleRequest)
  return target;
}

size_t RestartModuleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.RestartModuleRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (id_or_name_case()) {
    // string module_id = 1 [json_name = "moduleId"];
    case kModuleId: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_module_id());
      break;
    }
    // string module_name = 2 [json_name = "moduleName"];
    case kModuleName: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_module_name());
      break;
    }
    case ID_OR_NAME_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RestartModuleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RestartModuleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RestartModuleRequest::GetClassData() const { return &_class_data_; }

void RestartModuleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RestartModuleRequest *>(to)->MergeFrom(
      static_cast<const RestartModuleRequest &>(from));
}


void RestartModuleRequest::MergeFrom(const RestartModuleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.RestartModuleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.id_or_name_case()) {
    case kModuleId: {
      _internal_set_module_id(from._internal_module_id());
      break;
    }
    case kModuleName: {
      _internal_set_module_name(from._internal_module_name());
      break;
    }
    case ID_OR_NAME_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RestartModuleRequest::CopyFrom(const RestartModuleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.RestartModuleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestartModuleRequest::IsInitialized() const {
  return true;
}

void RestartModuleRequest::InternalSwap(RestartModuleRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(id_or_name_, other->id_or_name_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RestartModuleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[51]);
}

// ===================================================================

class RestartModuleResponse::_Internal {
 public:
};

RestartModuleResponse::RestartModuleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.RestartModuleResponse)
}
RestartModuleResponse::RestartModuleResponse(const RestartModuleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.RestartModuleResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RestartModuleResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RestartModuleResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RestartModuleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[52]);
}

// ===================================================================

class ShutdownRequest::_Internal {
 public:
};

ShutdownRequest::ShutdownRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ShutdownRequest)
}
ShutdownRequest::ShutdownRequest(const ShutdownRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ShutdownRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShutdownRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShutdownRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ShutdownRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[53]);
}

// ===================================================================

class ShutdownResponse::_Internal {
 public:
};

ShutdownResponse::ShutdownResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ShutdownResponse)
}
ShutdownResponse::ShutdownResponse(const ShutdownResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ShutdownResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShutdownResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShutdownResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ShutdownResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[54]);
}

// ===================================================================

class GetMachineStatusRequest::_Internal {
 public:
};

GetMachineStatusRequest::GetMachineStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetMachineStatusRequest)
}
GetMachineStatusRequest::GetMachineStatusRequest(const GetMachineStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetMachineStatusRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMachineStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMachineStatusRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetMachineStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[55]);
}

// ===================================================================

class GetMachineStatusResponse::_Internal {
 public:
  static const ::viam::robot::v1::ConfigStatus& config(const GetMachineStatusResponse* msg);
};

const ::viam::robot::v1::ConfigStatus&
GetMachineStatusResponse::_Internal::config(const GetMachineStatusResponse* msg) {
  return *msg->config_;
}
GetMachineStatusResponse::GetMachineStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  resources_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetMachineStatusResponse)
}
GetMachineStatusResponse::GetMachineStatusResponse(const GetMachineStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      resources_(from.resources_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_config()) {
    config_ = new ::viam::robot::v1::ConfigStatus(*from.config_);
  } else {
    config_ = nullptr;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetMachineStatusResponse)
}

inline void GetMachineStatusResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&config_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&config_)) + sizeof(state_));
}

GetMachineStatusResponse::~GetMachineStatusResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.GetMachineStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetMachineStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete config_;
}

void GetMachineStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMachineStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.GetMachineStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resources_.Clear();
  if (GetArenaForAllocation() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMachineStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.ResourceStatus resources = 1 [json_name = "resources"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .viam.robot.v1.ConfigStatus config = 2 [json_name = "config"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.robot.v1.GetMachineStatusResponse.State state = 3 [json_name = "state"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::viam::robot::v1::GetMachineStatusResponse_State>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMachineStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.GetMachineStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.ResourceStatus resources = 1 [json_name = "resources"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resources_size()); i < n; i++) {
    const auto& repfield = this->_internal_resources(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .viam.robot.v1.ConfigStatus config = 2 [json_name = "config"];
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  // .viam.robot.v1.GetMachineStatusResponse.State state = 3 [json_name = "state"];
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.GetMachineStatusResponse)
  return target;
}

size_t GetMachineStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.GetMachineStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.ResourceStatus resources = 1 [json_name = "resources"];
  total_size += 1UL * this->_internal_resources_size();
  for (const auto& msg : this->resources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .viam.robot.v1.ConfigStatus config = 2 [json_name = "config"];
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // .viam.robot.v1.GetMachineStatusResponse.State state = 3 [json_name = "state"];
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMachineStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetMachineStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMachineStatusResponse::GetClassData() const { return &_class_data_; }

void GetMachineStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetMachineStatusResponse *>(to)->MergeFrom(
      static_cast<const GetMachineStatusResponse &>(from));
}


void GetMachineStatusResponse::MergeFrom(const GetMachineStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.GetMachineStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  resources_.MergeFrom(from.resources_);
  if (from._internal_has_config()) {
    _internal_mutable_config()->::viam::robot::v1::ConfigStatus::MergeFrom(from._internal_config());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMachineStatusResponse::CopyFrom(const GetMachineStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.GetMachineStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMachineStatusResponse::IsInitialized() const {
  return true;
}

void GetMachineStatusResponse::InternalSwap(GetMachineStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  resources_.InternalSwap(&other->resources_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMachineStatusResponse, state_)
      + sizeof(GetMachineStatusResponse::state_)
      - PROTOBUF_FIELD_OFFSET(GetMachineStatusResponse, config_)>(
          reinterpret_cast<char*>(&config_),
          reinterpret_cast<char*>(&other->config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMachineStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[56]);
}

// ===================================================================

class ResourceStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<ResourceStatus>()._has_bits_);
  static const ::viam::common::v1::ResourceName& name(const ResourceStatus* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_updated(const ResourceStatus* msg);
  static const ::viam::robot::v1::GetCloudMetadataResponse& cloud_metadata(const ResourceStatus* msg);
  static void set_has_cloud_metadata(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::viam::common::v1::ResourceName&
ResourceStatus::_Internal::name(const ResourceStatus* msg) {
  return *msg->name_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
ResourceStatus::_Internal::last_updated(const ResourceStatus* msg) {
  return *msg->last_updated_;
}
const ::viam::robot::v1::GetCloudMetadataResponse&
ResourceStatus::_Internal::cloud_metadata(const ResourceStatus* msg) {
  return *msg->cloud_metadata_;
}
void ResourceStatus::clear_name() {
  if (GetArenaForAllocation() == nullptr && name_ != nullptr) {
    delete name_;
  }
  name_ = nullptr;
}
void ResourceStatus::clear_last_updated() {
  if (GetArenaForAllocation() == nullptr && last_updated_ != nullptr) {
    delete last_updated_;
  }
  last_updated_ = nullptr;
}
ResourceStatus::ResourceStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ResourceStatus)
}
ResourceStatus::ResourceStatus(const ResourceStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  revision_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    revision_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_revision().empty()) {
    revision_.Set(from._internal_revision(), 
      GetArenaForAllocation());
  }
  error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error().empty()) {
    error_.Set(from._internal_error(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_name()) {
    name_ = new ::viam::common::v1::ResourceName(*from.name_);
  } else {
    name_ = nullptr;
  }
  if (from._internal_has_last_updated()) {
    last_updated_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_updated_);
  } else {
    last_updated_ = nullptr;
  }
  if (from._internal_has_cloud_metadata()) {
    cloud_metadata_ = new ::viam::robot::v1::GetCloudMetadataResponse(*from.cloud_metadata_);
  } else {
    cloud_metadata_ = nullptr;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ResourceStatus)
}

inline void ResourceStatus::SharedCtor() {
revision_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  revision_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
error_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  error_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&name_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&name_)) + sizeof(state_));
}

ResourceStatus::~ResourceStatus() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.ResourceStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResourceStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  revision_.Destroy();
  error_.Destroy();
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete last_updated_;
  if (this != internal_default_instance()) delete cloud_metadata_;
}

void ResourceStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResourceStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.ResourceStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  revision_.ClearToEmpty();
  error_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && name_ != nullptr) {
    delete name_;
  }
  name_ = nullptr;
  if (GetArenaForAllocation() == nullptr && last_updated_ != nullptr) {
    delete last_updated_;
  }
  last_updated_ = nullptr;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(cloud_metadata_ != nullptr);
    cloud_metadata_->Clear();
  }
  state_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_name(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.robot.v1.ResourceStatus.State state = 2 [json_name = "state"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::viam::robot::v1::ResourceStatus_State>(val));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_updated = 3 [json_name = "lastUpdated"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_updated(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string revision = 4 [json_name = "revision"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_revision();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.ResourceStatus.revision"));
        } else
          goto handle_unusual;
        continue;
      // string error = 5 [json_name = "error"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.ResourceStatus.error"));
        } else
          goto handle_unusual;
        continue;
      // optional .viam.robot.v1.GetCloudMetadataResponse cloud_metadata = 6 [json_name = "cloudMetadata"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_cloud_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResourceStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.ResourceStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
  if (this->_internal_has_name()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::name(this),
        _Internal::name(this).GetCachedSize(), target, stream);
  }

  // .viam.robot.v1.ResourceStatus.State state = 2 [json_name = "state"];
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_state(), target);
  }

  // .google.protobuf.Timestamp last_updated = 3 [json_name = "lastUpdated"];
  if (this->_internal_has_last_updated()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::last_updated(this),
        _Internal::last_updated(this).GetCachedSize(), target, stream);
  }

  // string revision = 4 [json_name = "revision"];
  if (!this->_internal_revision().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_revision().data(), static_cast<int>(this->_internal_revision().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.ResourceStatus.revision");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_revision(), target);
  }

  // string error = 5 [json_name = "error"];
  if (!this->_internal_error().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.ResourceStatus.error");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_error(), target);
  }

  // optional .viam.robot.v1.GetCloudMetadataResponse cloud_metadata = 6 [json_name = "cloudMetadata"];
  if (_internal_has_cloud_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::cloud_metadata(this),
        _Internal::cloud_metadata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.ResourceStatus)
  return target;
}

size_t ResourceStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.ResourceStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string revision = 4 [json_name = "revision"];
  if (!this->_internal_revision().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_revision());
  }

  // string error = 5 [json_name = "error"];
  if (!this->_internal_error().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
  if (this->_internal_has_name()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .google.protobuf.Timestamp last_updated = 3 [json_name = "lastUpdated"];
  if (this->_internal_has_last_updated()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_updated_);
  }

  // optional .viam.robot.v1.GetCloudMetadataResponse cloud_metadata = 6 [json_name = "cloudMetadata"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cloud_metadata_);
  }

  // .viam.robot.v1.ResourceStatus.State state = 2 [json_name = "state"];
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResourceStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResourceStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResourceStatus::GetClassData() const { return &_class_data_; }

void ResourceStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResourceStatus *>(to)->MergeFrom(
      static_cast<const ResourceStatus &>(from));
}


void ResourceStatus::MergeFrom(const ResourceStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.ResourceStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_revision().empty()) {
    _internal_set_revision(from._internal_revision());
  }
  if (!from._internal_error().empty()) {
    _internal_set_error(from._internal_error());
  }
  if (from._internal_has_name()) {
    _internal_mutable_name()->::viam::common::v1::ResourceName::MergeFrom(from._internal_name());
  }
  if (from._internal_has_last_updated()) {
    _internal_mutable_last_updated()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_updated());
  }
  if (from._internal_has_cloud_metadata()) {
    _internal_mutable_cloud_metadata()->::viam::robot::v1::GetCloudMetadataResponse::MergeFrom(from._internal_cloud_metadata());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResourceStatus::CopyFrom(const ResourceStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.ResourceStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceStatus::IsInitialized() const {
  return true;
}

void ResourceStatus::InternalSwap(ResourceStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &revision_, lhs_arena,
      &other->revision_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &error_, lhs_arena,
      &other->error_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResourceStatus, state_)
      + sizeof(ResourceStatus::state_)
      - PROTOBUF_FIELD_OFFSET(ResourceStatus, name_)>(
          reinterpret_cast<char*>(&name_),
          reinterpret_cast<char*>(&other->name_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[57]);
}

// ===================================================================

class ConfigStatus::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_updated(const ConfigStatus* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
ConfigStatus::_Internal::last_updated(const ConfigStatus* msg) {
  return *msg->last_updated_;
}
void ConfigStatus::clear_last_updated() {
  if (GetArenaForAllocation() == nullptr && last_updated_ != nullptr) {
    delete last_updated_;
  }
  last_updated_ = nullptr;
}
ConfigStatus::ConfigStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ConfigStatus)
}
ConfigStatus::ConfigStatus(const ConfigStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  revision_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    revision_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_revision().empty()) {
    revision_.Set(from._internal_revision(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_last_updated()) {
    last_updated_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_updated_);
  } else {
    last_updated_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ConfigStatus)
}

inline void ConfigStatus::SharedCtor() {
revision_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  revision_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
last_updated_ = nullptr;
}

ConfigStatus::~ConfigStatus() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.ConfigStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ConfigStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  revision_.Destroy();
  if (this != internal_default_instance()) delete last_updated_;
}

void ConfigStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConfigStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.ConfigStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  revision_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && last_updated_ != nullptr) {
    delete last_updated_;
  }
  last_updated_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string revision = 1 [json_name = "revision"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_revision();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.ConfigStatus.revision"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_updated = 2 [json_name = "lastUpdated"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_updated(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.ConfigStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string revision = 1 [json_name = "revision"];
  if (!this->_internal_revision().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_revision().data(), static_cast<int>(this->_internal_revision().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.ConfigStatus.revision");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_revision(), target);
  }

  // .google.protobuf.Timestamp last_updated = 2 [json_name = "lastUpdated"];
  if (this->_internal_has_last_updated()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::last_updated(this),
        _Internal::last_updated(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.ConfigStatus)
  return target;
}

size_t ConfigStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.ConfigStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string revision = 1 [json_name = "revision"];
  if (!this->_internal_revision().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_revision());
  }

  // .google.protobuf.Timestamp last_updated = 2 [json_name = "lastUpdated"];
  if (this->_internal_has_last_updated()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_updated_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConfigStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigStatus::GetClassData() const { return &_class_data_; }

void ConfigStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConfigStatus *>(to)->MergeFrom(
      static_cast<const ConfigStatus &>(from));
}


void ConfigStatus::MergeFrom(const ConfigStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.ConfigStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_revision().empty()) {
    _internal_set_revision(from._internal_revision());
  }
  if (from._internal_has_last_updated()) {
    _internal_mutable_last_updated()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_updated());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigStatus::CopyFrom(const ConfigStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.ConfigStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigStatus::IsInitialized() const {
  return true;
}

void ConfigStatus::InternalSwap(ConfigStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &revision_, lhs_arena,
      &other->revision_, rhs_arena
  );
  swap(last_updated_, other->last_updated_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[58]);
}

// ===================================================================

class GetVersionRequest::_Internal {
 public:
};

GetVersionRequest::GetVersionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetVersionRequest)
}
GetVersionRequest::GetVersionRequest(const GetVersionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetVersionRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVersionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVersionRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetVersionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[59]);
}

// ===================================================================

class GetVersionResponse::_Internal {
 public:
};

GetVersionResponse::GetVersionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetVersionResponse)
}
GetVersionResponse::GetVersionResponse(const GetVersionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  platform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    platform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_platform().empty()) {
    platform_.Set(from._internal_platform(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  api_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    api_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_api_version().empty()) {
    api_version_.Set(from._internal_api_version(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetVersionResponse)
}

inline void GetVersionResponse::SharedCtor() {
platform_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  platform_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
api_version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  api_version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetVersionResponse::~GetVersionResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.GetVersionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVersionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  platform_.Destroy();
  version_.Destroy();
  api_version_.Destroy();
}

void GetVersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetVersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.GetVersionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  platform_.ClearToEmpty();
  version_.ClearToEmpty();
  api_version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVersionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string platform = 1 [json_name = "platform"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_platform();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.GetVersionResponse.platform"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2 [json_name = "version"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.GetVersionResponse.version"));
        } else
          goto handle_unusual;
        continue;
      // string api_version = 3 [json_name = "apiVersion"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_api_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.GetVersionResponse.api_version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVersionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.GetVersionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string platform = 1 [json_name = "platform"];
  if (!this->_internal_platform().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_platform().data(), static_cast<int>(this->_internal_platform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.GetVersionResponse.platform");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_platform(), target);
  }

  // string version = 2 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.GetVersionResponse.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // string api_version = 3 [json_name = "apiVersion"];
  if (!this->_internal_api_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_api_version().data(), static_cast<int>(this->_internal_api_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.GetVersionResponse.api_version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_api_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.GetVersionResponse)
  return target;
}

size_t GetVersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.GetVersionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string platform = 1 [json_name = "platform"];
  if (!this->_internal_platform().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_platform());
  }

  // string version = 2 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string api_version = 3 [json_name = "apiVersion"];
  if (!this->_internal_api_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_api_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVersionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetVersionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVersionResponse::GetClassData() const { return &_class_data_; }

void GetVersionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetVersionResponse *>(to)->MergeFrom(
      static_cast<const GetVersionResponse &>(from));
}


void GetVersionResponse::MergeFrom(const GetVersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.GetVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_platform().empty()) {
    _internal_set_platform(from._internal_platform());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  if (!from._internal_api_version().empty()) {
    _internal_set_api_version(from._internal_api_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVersionResponse::CopyFrom(const GetVersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.GetVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVersionResponse::IsInitialized() const {
  return true;
}

void GetVersionResponse::InternalSwap(GetVersionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &platform_, lhs_arena,
      &other->platform_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &api_version_, lhs_arena,
      &other->api_version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVersionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[60]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace robot
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::robot::v1::TunnelRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::TunnelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::TunnelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::TunnelResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::TunnelResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::TunnelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ListTunnelsRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::ListTunnelsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ListTunnelsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ListTunnelsResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::ListTunnelsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ListTunnelsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::Tunnel*
Arena::CreateMaybeMessage< ::viam::robot::v1::Tunnel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::Tunnel >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::FrameSystemConfig*
Arena::CreateMaybeMessage< ::viam::robot::v1::FrameSystemConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::FrameSystemConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::FrameSystemConfigRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::FrameSystemConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::FrameSystemConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::FrameSystemConfigResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::FrameSystemConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::FrameSystemConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::TransformPoseRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::TransformPoseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::TransformPoseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::TransformPoseResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::TransformPoseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::TransformPoseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::TransformPCDRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::TransformPCDRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::TransformPCDRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::TransformPCDResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::TransformPCDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::TransformPCDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ResourceNamesRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::ResourceNamesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ResourceNamesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ResourceNamesResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::ResourceNamesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ResourceNamesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ResourceRPCSubtype*
Arena::CreateMaybeMessage< ::viam::robot::v1::ResourceRPCSubtype >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ResourceRPCSubtype >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ResourceRPCSubtypesRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::ResourceRPCSubtypesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ResourceRPCSubtypesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ResourceRPCSubtypesResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::ResourceRPCSubtypesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ResourceRPCSubtypesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::Operation*
Arena::CreateMaybeMessage< ::viam::robot::v1::Operation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::Operation >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetOperationsRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetOperationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetOperationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetOperationsResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetOperationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetOperationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::CancelOperationRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::CancelOperationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::CancelOperationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::CancelOperationResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::CancelOperationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::CancelOperationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::BlockForOperationRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::BlockForOperationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::BlockForOperationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::BlockForOperationResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::BlockForOperationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::BlockForOperationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::PeerConnectionInfo*
Arena::CreateMaybeMessage< ::viam::robot::v1::PeerConnectionInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::PeerConnectionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::Session*
Arena::CreateMaybeMessage< ::viam::robot::v1::Session >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::Session >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetSessionsRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetSessionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetSessionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetSessionsResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetSessionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetSessionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::DiscoveryQuery*
Arena::CreateMaybeMessage< ::viam::robot::v1::DiscoveryQuery >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::DiscoveryQuery >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::Discovery*
Arena::CreateMaybeMessage< ::viam::robot::v1::Discovery >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::Discovery >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ModuleModel*
Arena::CreateMaybeMessage< ::viam::robot::v1::ModuleModel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ModuleModel >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetModelsFromModulesRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetModelsFromModulesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetModelsFromModulesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetModelsFromModulesResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetModelsFromModulesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetModelsFromModulesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::DiscoverComponentsRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::DiscoverComponentsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::DiscoverComponentsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::DiscoverComponentsResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::DiscoverComponentsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::DiscoverComponentsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::Status*
Arena::CreateMaybeMessage< ::viam::robot::v1::Status >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::Status >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetStatusRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetStatusResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StreamStatusRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::StreamStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StreamStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StreamStatusResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::StreamStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StreamStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StopExtraParameters*
Arena::CreateMaybeMessage< ::viam::robot::v1::StopExtraParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StopExtraParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StopAllRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::StopAllRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StopAllRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StopAllResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::StopAllResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StopAllResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StartSessionRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::StartSessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StartSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StartSessionResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::StartSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StartSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::SendSessionHeartbeatRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::SendSessionHeartbeatRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::SendSessionHeartbeatRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::SendSessionHeartbeatResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::SendSessionHeartbeatResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::SendSessionHeartbeatResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::LogRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::LogRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::LogRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::LogResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::LogResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::LogResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetCloudMetadataRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetCloudMetadataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetCloudMetadataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetCloudMetadataResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetCloudMetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetCloudMetadataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::RestartModuleRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::RestartModuleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::RestartModuleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::RestartModuleResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::RestartModuleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::RestartModuleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ShutdownRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::ShutdownRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ShutdownRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ShutdownResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::ShutdownResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ShutdownResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetMachineStatusRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetMachineStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetMachineStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetMachineStatusResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetMachineStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetMachineStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ResourceStatus*
Arena::CreateMaybeMessage< ::viam::robot::v1::ResourceStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ResourceStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ConfigStatus*
Arena::CreateMaybeMessage< ::viam::robot::v1::ConfigStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ConfigStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetVersionRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetVersionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetVersionResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetVersionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetVersionResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
