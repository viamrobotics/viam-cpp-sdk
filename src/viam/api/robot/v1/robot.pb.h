// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot/v1/robot.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_robot_2fv1_2frobot_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_robot_2fv1_2frobot_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "common/v1/common.pb.h"
#include "google/api/annotations.pb.h"
#include "google/protobuf/duration.pb.h"
#include "google/protobuf/struct.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_robot_2fv1_2frobot_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_robot_2fv1_2frobot_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_robot_2fv1_2frobot_2eproto;
namespace viam {
namespace robot {
namespace v1 {
class BlockForOperationRequest;
struct BlockForOperationRequestDefaultTypeInternal;
extern BlockForOperationRequestDefaultTypeInternal _BlockForOperationRequest_default_instance_;
class BlockForOperationResponse;
struct BlockForOperationResponseDefaultTypeInternal;
extern BlockForOperationResponseDefaultTypeInternal _BlockForOperationResponse_default_instance_;
class CancelOperationRequest;
struct CancelOperationRequestDefaultTypeInternal;
extern CancelOperationRequestDefaultTypeInternal _CancelOperationRequest_default_instance_;
class CancelOperationResponse;
struct CancelOperationResponseDefaultTypeInternal;
extern CancelOperationResponseDefaultTypeInternal _CancelOperationResponse_default_instance_;
class DiscoverComponentsRequest;
struct DiscoverComponentsRequestDefaultTypeInternal;
extern DiscoverComponentsRequestDefaultTypeInternal _DiscoverComponentsRequest_default_instance_;
class DiscoverComponentsResponse;
struct DiscoverComponentsResponseDefaultTypeInternal;
extern DiscoverComponentsResponseDefaultTypeInternal _DiscoverComponentsResponse_default_instance_;
class Discovery;
struct DiscoveryDefaultTypeInternal;
extern DiscoveryDefaultTypeInternal _Discovery_default_instance_;
class DiscoveryQuery;
struct DiscoveryQueryDefaultTypeInternal;
extern DiscoveryQueryDefaultTypeInternal _DiscoveryQuery_default_instance_;
class FrameSystemConfig;
struct FrameSystemConfigDefaultTypeInternal;
extern FrameSystemConfigDefaultTypeInternal _FrameSystemConfig_default_instance_;
class FrameSystemConfigRequest;
struct FrameSystemConfigRequestDefaultTypeInternal;
extern FrameSystemConfigRequestDefaultTypeInternal _FrameSystemConfigRequest_default_instance_;
class FrameSystemConfigResponse;
struct FrameSystemConfigResponseDefaultTypeInternal;
extern FrameSystemConfigResponseDefaultTypeInternal _FrameSystemConfigResponse_default_instance_;
class GetCloudMetadataRequest;
struct GetCloudMetadataRequestDefaultTypeInternal;
extern GetCloudMetadataRequestDefaultTypeInternal _GetCloudMetadataRequest_default_instance_;
class GetCloudMetadataResponse;
struct GetCloudMetadataResponseDefaultTypeInternal;
extern GetCloudMetadataResponseDefaultTypeInternal _GetCloudMetadataResponse_default_instance_;
class GetMachineStatusRequest;
struct GetMachineStatusRequestDefaultTypeInternal;
extern GetMachineStatusRequestDefaultTypeInternal _GetMachineStatusRequest_default_instance_;
class GetMachineStatusResponse;
struct GetMachineStatusResponseDefaultTypeInternal;
extern GetMachineStatusResponseDefaultTypeInternal _GetMachineStatusResponse_default_instance_;
class GetOperationsRequest;
struct GetOperationsRequestDefaultTypeInternal;
extern GetOperationsRequestDefaultTypeInternal _GetOperationsRequest_default_instance_;
class GetOperationsResponse;
struct GetOperationsResponseDefaultTypeInternal;
extern GetOperationsResponseDefaultTypeInternal _GetOperationsResponse_default_instance_;
class GetSessionsRequest;
struct GetSessionsRequestDefaultTypeInternal;
extern GetSessionsRequestDefaultTypeInternal _GetSessionsRequest_default_instance_;
class GetSessionsResponse;
struct GetSessionsResponseDefaultTypeInternal;
extern GetSessionsResponseDefaultTypeInternal _GetSessionsResponse_default_instance_;
class GetStatusRequest;
struct GetStatusRequestDefaultTypeInternal;
extern GetStatusRequestDefaultTypeInternal _GetStatusRequest_default_instance_;
class GetStatusResponse;
struct GetStatusResponseDefaultTypeInternal;
extern GetStatusResponseDefaultTypeInternal _GetStatusResponse_default_instance_;
class LogRequest;
struct LogRequestDefaultTypeInternal;
extern LogRequestDefaultTypeInternal _LogRequest_default_instance_;
class LogResponse;
struct LogResponseDefaultTypeInternal;
extern LogResponseDefaultTypeInternal _LogResponse_default_instance_;
class Operation;
struct OperationDefaultTypeInternal;
extern OperationDefaultTypeInternal _Operation_default_instance_;
class PeerConnectionInfo;
struct PeerConnectionInfoDefaultTypeInternal;
extern PeerConnectionInfoDefaultTypeInternal _PeerConnectionInfo_default_instance_;
class ResourceNamesRequest;
struct ResourceNamesRequestDefaultTypeInternal;
extern ResourceNamesRequestDefaultTypeInternal _ResourceNamesRequest_default_instance_;
class ResourceNamesResponse;
struct ResourceNamesResponseDefaultTypeInternal;
extern ResourceNamesResponseDefaultTypeInternal _ResourceNamesResponse_default_instance_;
class ResourceRPCSubtype;
struct ResourceRPCSubtypeDefaultTypeInternal;
extern ResourceRPCSubtypeDefaultTypeInternal _ResourceRPCSubtype_default_instance_;
class ResourceRPCSubtypesRequest;
struct ResourceRPCSubtypesRequestDefaultTypeInternal;
extern ResourceRPCSubtypesRequestDefaultTypeInternal _ResourceRPCSubtypesRequest_default_instance_;
class ResourceRPCSubtypesResponse;
struct ResourceRPCSubtypesResponseDefaultTypeInternal;
extern ResourceRPCSubtypesResponseDefaultTypeInternal _ResourceRPCSubtypesResponse_default_instance_;
class ResourceStatus;
struct ResourceStatusDefaultTypeInternal;
extern ResourceStatusDefaultTypeInternal _ResourceStatus_default_instance_;
class RestartModuleRequest;
struct RestartModuleRequestDefaultTypeInternal;
extern RestartModuleRequestDefaultTypeInternal _RestartModuleRequest_default_instance_;
class RestartModuleResponse;
struct RestartModuleResponseDefaultTypeInternal;
extern RestartModuleResponseDefaultTypeInternal _RestartModuleResponse_default_instance_;
class SendSessionHeartbeatRequest;
struct SendSessionHeartbeatRequestDefaultTypeInternal;
extern SendSessionHeartbeatRequestDefaultTypeInternal _SendSessionHeartbeatRequest_default_instance_;
class SendSessionHeartbeatResponse;
struct SendSessionHeartbeatResponseDefaultTypeInternal;
extern SendSessionHeartbeatResponseDefaultTypeInternal _SendSessionHeartbeatResponse_default_instance_;
class Session;
struct SessionDefaultTypeInternal;
extern SessionDefaultTypeInternal _Session_default_instance_;
class ShutdownRequest;
struct ShutdownRequestDefaultTypeInternal;
extern ShutdownRequestDefaultTypeInternal _ShutdownRequest_default_instance_;
class ShutdownResponse;
struct ShutdownResponseDefaultTypeInternal;
extern ShutdownResponseDefaultTypeInternal _ShutdownResponse_default_instance_;
class StartSessionRequest;
struct StartSessionRequestDefaultTypeInternal;
extern StartSessionRequestDefaultTypeInternal _StartSessionRequest_default_instance_;
class StartSessionResponse;
struct StartSessionResponseDefaultTypeInternal;
extern StartSessionResponseDefaultTypeInternal _StartSessionResponse_default_instance_;
class Status;
struct StatusDefaultTypeInternal;
extern StatusDefaultTypeInternal _Status_default_instance_;
class StopAllRequest;
struct StopAllRequestDefaultTypeInternal;
extern StopAllRequestDefaultTypeInternal _StopAllRequest_default_instance_;
class StopAllResponse;
struct StopAllResponseDefaultTypeInternal;
extern StopAllResponseDefaultTypeInternal _StopAllResponse_default_instance_;
class StopExtraParameters;
struct StopExtraParametersDefaultTypeInternal;
extern StopExtraParametersDefaultTypeInternal _StopExtraParameters_default_instance_;
class StreamStatusRequest;
struct StreamStatusRequestDefaultTypeInternal;
extern StreamStatusRequestDefaultTypeInternal _StreamStatusRequest_default_instance_;
class StreamStatusResponse;
struct StreamStatusResponseDefaultTypeInternal;
extern StreamStatusResponseDefaultTypeInternal _StreamStatusResponse_default_instance_;
class TransformPCDRequest;
struct TransformPCDRequestDefaultTypeInternal;
extern TransformPCDRequestDefaultTypeInternal _TransformPCDRequest_default_instance_;
class TransformPCDResponse;
struct TransformPCDResponseDefaultTypeInternal;
extern TransformPCDResponseDefaultTypeInternal _TransformPCDResponse_default_instance_;
class TransformPoseRequest;
struct TransformPoseRequestDefaultTypeInternal;
extern TransformPoseRequestDefaultTypeInternal _TransformPoseRequest_default_instance_;
class TransformPoseResponse;
struct TransformPoseResponseDefaultTypeInternal;
extern TransformPoseResponseDefaultTypeInternal _TransformPoseResponse_default_instance_;
}  // namespace v1
}  // namespace robot
}  // namespace viam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace viam {
namespace robot {
namespace v1 {
enum ResourceStatus_State : int {
  ResourceStatus_State_STATE_UNSPECIFIED = 0,
  ResourceStatus_State_STATE_UNCONFIGURED = 1,
  ResourceStatus_State_STATE_CONFIGURING = 2,
  ResourceStatus_State_STATE_READY = 3,
  ResourceStatus_State_STATE_REMOVING = 4,
  ResourceStatus_State_ResourceStatus_State_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ResourceStatus_State_ResourceStatus_State_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ResourceStatus_State_IsValid(int value);
extern const uint32_t ResourceStatus_State_internal_data_[];
constexpr ResourceStatus_State ResourceStatus_State_State_MIN = static_cast<ResourceStatus_State>(0);
constexpr ResourceStatus_State ResourceStatus_State_State_MAX = static_cast<ResourceStatus_State>(4);
constexpr int ResourceStatus_State_State_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
ResourceStatus_State_descriptor();
template <typename T>
const std::string& ResourceStatus_State_Name(T value) {
  static_assert(std::is_same<T, ResourceStatus_State>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to State_Name().");
  return ResourceStatus_State_Name(static_cast<ResourceStatus_State>(value));
}
template <>
inline const std::string& ResourceStatus_State_Name(ResourceStatus_State value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ResourceStatus_State_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool ResourceStatus_State_Parse(absl::string_view name, ResourceStatus_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResourceStatus_State>(
      ResourceStatus_State_descriptor(), name, value);
}
enum PeerConnectionType : int {
  PEER_CONNECTION_TYPE_UNSPECIFIED = 0,
  PEER_CONNECTION_TYPE_GRPC = 1,
  PEER_CONNECTION_TYPE_WEBRTC = 2,
  PeerConnectionType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PeerConnectionType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PeerConnectionType_IsValid(int value);
extern const uint32_t PeerConnectionType_internal_data_[];
constexpr PeerConnectionType PeerConnectionType_MIN = static_cast<PeerConnectionType>(0);
constexpr PeerConnectionType PeerConnectionType_MAX = static_cast<PeerConnectionType>(2);
constexpr int PeerConnectionType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
PeerConnectionType_descriptor();
template <typename T>
const std::string& PeerConnectionType_Name(T value) {
  static_assert(std::is_same<T, PeerConnectionType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PeerConnectionType_Name().");
  return PeerConnectionType_Name(static_cast<PeerConnectionType>(value));
}
template <>
inline const std::string& PeerConnectionType_Name(PeerConnectionType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PeerConnectionType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool PeerConnectionType_Parse(absl::string_view name, PeerConnectionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PeerConnectionType>(
      PeerConnectionType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TransformPCDResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.TransformPCDResponse) */ {
 public:
  inline TransformPCDResponse() : TransformPCDResponse(nullptr) {}
  ~TransformPCDResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TransformPCDResponse(::google::protobuf::internal::ConstantInitialized);

  inline TransformPCDResponse(const TransformPCDResponse& from)
      : TransformPCDResponse(nullptr, from) {}
  TransformPCDResponse(TransformPCDResponse&& from) noexcept
    : TransformPCDResponse() {
    *this = ::std::move(from);
  }

  inline TransformPCDResponse& operator=(const TransformPCDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransformPCDResponse& operator=(TransformPCDResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransformPCDResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransformPCDResponse* internal_default_instance() {
    return reinterpret_cast<const TransformPCDResponse*>(
               &_TransformPCDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(TransformPCDResponse& a, TransformPCDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TransformPCDResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransformPCDResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransformPCDResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TransformPCDResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransformPCDResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TransformPCDResponse& from) {
    TransformPCDResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TransformPCDResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.TransformPCDResponse";
  }
  protected:
  explicit TransformPCDResponse(::google::protobuf::Arena* arena);
  TransformPCDResponse(::google::protobuf::Arena* arena, const TransformPCDResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointCloudPcdFieldNumber = 1,
  };
  // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
  void clear_point_cloud_pcd() ;
  const std::string& point_cloud_pcd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_point_cloud_pcd(Arg_&& arg, Args_... args);
  std::string* mutable_point_cloud_pcd();
  PROTOBUF_NODISCARD std::string* release_point_cloud_pcd();
  void set_allocated_point_cloud_pcd(std::string* value);

  private:
  const std::string& _internal_point_cloud_pcd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_point_cloud_pcd(
      const std::string& value);
  std::string* _internal_mutable_point_cloud_pcd();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.TransformPCDResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr point_cloud_pcd_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class TransformPCDRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.TransformPCDRequest) */ {
 public:
  inline TransformPCDRequest() : TransformPCDRequest(nullptr) {}
  ~TransformPCDRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TransformPCDRequest(::google::protobuf::internal::ConstantInitialized);

  inline TransformPCDRequest(const TransformPCDRequest& from)
      : TransformPCDRequest(nullptr, from) {}
  TransformPCDRequest(TransformPCDRequest&& from) noexcept
    : TransformPCDRequest() {
    *this = ::std::move(from);
  }

  inline TransformPCDRequest& operator=(const TransformPCDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransformPCDRequest& operator=(TransformPCDRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransformPCDRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransformPCDRequest* internal_default_instance() {
    return reinterpret_cast<const TransformPCDRequest*>(
               &_TransformPCDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(TransformPCDRequest& a, TransformPCDRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TransformPCDRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransformPCDRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransformPCDRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TransformPCDRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransformPCDRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TransformPCDRequest& from) {
    TransformPCDRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TransformPCDRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.TransformPCDRequest";
  }
  protected:
  explicit TransformPCDRequest(::google::protobuf::Arena* arena);
  TransformPCDRequest(::google::protobuf::Arena* arena, const TransformPCDRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointCloudPcdFieldNumber = 1,
    kSourceFieldNumber = 2,
    kDestinationFieldNumber = 3,
  };
  // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
  void clear_point_cloud_pcd() ;
  const std::string& point_cloud_pcd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_point_cloud_pcd(Arg_&& arg, Args_... args);
  std::string* mutable_point_cloud_pcd();
  PROTOBUF_NODISCARD std::string* release_point_cloud_pcd();
  void set_allocated_point_cloud_pcd(std::string* value);

  private:
  const std::string& _internal_point_cloud_pcd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_point_cloud_pcd(
      const std::string& value);
  std::string* _internal_mutable_point_cloud_pcd();

  public:
  // string source = 2 [json_name = "source"];
  void clear_source() ;
  const std::string& source() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source(Arg_&& arg, Args_... args);
  std::string* mutable_source();
  PROTOBUF_NODISCARD std::string* release_source();
  void set_allocated_source(std::string* value);

  private:
  const std::string& _internal_source() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source(
      const std::string& value);
  std::string* _internal_mutable_source();

  public:
  // string destination = 3 [json_name = "destination"];
  void clear_destination() ;
  const std::string& destination() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_destination(Arg_&& arg, Args_... args);
  std::string* mutable_destination();
  PROTOBUF_NODISCARD std::string* release_destination();
  void set_allocated_destination(std::string* value);

  private:
  const std::string& _internal_destination() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_destination(
      const std::string& value);
  std::string* _internal_mutable_destination();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.TransformPCDRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr point_cloud_pcd_;
    ::google::protobuf::internal::ArenaStringPtr source_;
    ::google::protobuf::internal::ArenaStringPtr destination_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class StopAllResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.StopAllResponse) */ {
 public:
  inline StopAllResponse() : StopAllResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StopAllResponse(::google::protobuf::internal::ConstantInitialized);

  inline StopAllResponse(const StopAllResponse& from)
      : StopAllResponse(nullptr, from) {}
  StopAllResponse(StopAllResponse&& from) noexcept
    : StopAllResponse() {
    *this = ::std::move(from);
  }

  inline StopAllResponse& operator=(const StopAllResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopAllResponse& operator=(StopAllResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopAllResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopAllResponse* internal_default_instance() {
    return reinterpret_cast<const StopAllResponse*>(
               &_StopAllResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(StopAllResponse& a, StopAllResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StopAllResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopAllResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopAllResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StopAllResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StopAllResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StopAllResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.StopAllResponse";
  }
  protected:
  explicit StopAllResponse(::google::protobuf::Arena* arena);
  StopAllResponse(::google::protobuf::Arena* arena, const StopAllResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.StopAllResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class StartSessionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.StartSessionRequest) */ {
 public:
  inline StartSessionRequest() : StartSessionRequest(nullptr) {}
  ~StartSessionRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StartSessionRequest(::google::protobuf::internal::ConstantInitialized);

  inline StartSessionRequest(const StartSessionRequest& from)
      : StartSessionRequest(nullptr, from) {}
  StartSessionRequest(StartSessionRequest&& from) noexcept
    : StartSessionRequest() {
    *this = ::std::move(from);
  }

  inline StartSessionRequest& operator=(const StartSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartSessionRequest& operator=(StartSessionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartSessionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartSessionRequest* internal_default_instance() {
    return reinterpret_cast<const StartSessionRequest*>(
               &_StartSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(StartSessionRequest& a, StartSessionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StartSessionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartSessionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartSessionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StartSessionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartSessionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StartSessionRequest& from) {
    StartSessionRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StartSessionRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.StartSessionRequest";
  }
  protected:
  explicit StartSessionRequest(::google::protobuf::Arena* arena);
  StartSessionRequest(::google::protobuf::Arena* arena, const StartSessionRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResumeFieldNumber = 1,
  };
  // string resume = 1 [json_name = "resume"];
  void clear_resume() ;
  const std::string& resume() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resume(Arg_&& arg, Args_... args);
  std::string* mutable_resume();
  PROTOBUF_NODISCARD std::string* release_resume();
  void set_allocated_resume(std::string* value);

  private:
  const std::string& _internal_resume() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resume(
      const std::string& value);
  std::string* _internal_mutable_resume();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.StartSessionRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr resume_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class ShutdownResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.ShutdownResponse) */ {
 public:
  inline ShutdownResponse() : ShutdownResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ShutdownResponse(::google::protobuf::internal::ConstantInitialized);

  inline ShutdownResponse(const ShutdownResponse& from)
      : ShutdownResponse(nullptr, from) {}
  ShutdownResponse(ShutdownResponse&& from) noexcept
    : ShutdownResponse() {
    *this = ::std::move(from);
  }

  inline ShutdownResponse& operator=(const ShutdownResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShutdownResponse& operator=(ShutdownResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShutdownResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShutdownResponse* internal_default_instance() {
    return reinterpret_cast<const ShutdownResponse*>(
               &_ShutdownResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(ShutdownResponse& a, ShutdownResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ShutdownResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShutdownResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShutdownResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ShutdownResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ShutdownResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ShutdownResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.ShutdownResponse";
  }
  protected:
  explicit ShutdownResponse(::google::protobuf::Arena* arena);
  ShutdownResponse(::google::protobuf::Arena* arena, const ShutdownResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.ShutdownResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class ShutdownRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.ShutdownRequest) */ {
 public:
  inline ShutdownRequest() : ShutdownRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ShutdownRequest(::google::protobuf::internal::ConstantInitialized);

  inline ShutdownRequest(const ShutdownRequest& from)
      : ShutdownRequest(nullptr, from) {}
  ShutdownRequest(ShutdownRequest&& from) noexcept
    : ShutdownRequest() {
    *this = ::std::move(from);
  }

  inline ShutdownRequest& operator=(const ShutdownRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShutdownRequest& operator=(ShutdownRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShutdownRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShutdownRequest* internal_default_instance() {
    return reinterpret_cast<const ShutdownRequest*>(
               &_ShutdownRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(ShutdownRequest& a, ShutdownRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ShutdownRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShutdownRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShutdownRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ShutdownRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ShutdownRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ShutdownRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.ShutdownRequest";
  }
  protected:
  explicit ShutdownRequest(::google::protobuf::Arena* arena);
  ShutdownRequest(::google::protobuf::Arena* arena, const ShutdownRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.ShutdownRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class SendSessionHeartbeatResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.SendSessionHeartbeatResponse) */ {
 public:
  inline SendSessionHeartbeatResponse() : SendSessionHeartbeatResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SendSessionHeartbeatResponse(::google::protobuf::internal::ConstantInitialized);

  inline SendSessionHeartbeatResponse(const SendSessionHeartbeatResponse& from)
      : SendSessionHeartbeatResponse(nullptr, from) {}
  SendSessionHeartbeatResponse(SendSessionHeartbeatResponse&& from) noexcept
    : SendSessionHeartbeatResponse() {
    *this = ::std::move(from);
  }

  inline SendSessionHeartbeatResponse& operator=(const SendSessionHeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendSessionHeartbeatResponse& operator=(SendSessionHeartbeatResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendSessionHeartbeatResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendSessionHeartbeatResponse* internal_default_instance() {
    return reinterpret_cast<const SendSessionHeartbeatResponse*>(
               &_SendSessionHeartbeatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(SendSessionHeartbeatResponse& a, SendSessionHeartbeatResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SendSessionHeartbeatResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendSessionHeartbeatResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendSessionHeartbeatResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SendSessionHeartbeatResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SendSessionHeartbeatResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SendSessionHeartbeatResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.SendSessionHeartbeatResponse";
  }
  protected:
  explicit SendSessionHeartbeatResponse(::google::protobuf::Arena* arena);
  SendSessionHeartbeatResponse(::google::protobuf::Arena* arena, const SendSessionHeartbeatResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.SendSessionHeartbeatResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class SendSessionHeartbeatRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.SendSessionHeartbeatRequest) */ {
 public:
  inline SendSessionHeartbeatRequest() : SendSessionHeartbeatRequest(nullptr) {}
  ~SendSessionHeartbeatRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SendSessionHeartbeatRequest(::google::protobuf::internal::ConstantInitialized);

  inline SendSessionHeartbeatRequest(const SendSessionHeartbeatRequest& from)
      : SendSessionHeartbeatRequest(nullptr, from) {}
  SendSessionHeartbeatRequest(SendSessionHeartbeatRequest&& from) noexcept
    : SendSessionHeartbeatRequest() {
    *this = ::std::move(from);
  }

  inline SendSessionHeartbeatRequest& operator=(const SendSessionHeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendSessionHeartbeatRequest& operator=(SendSessionHeartbeatRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendSessionHeartbeatRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendSessionHeartbeatRequest* internal_default_instance() {
    return reinterpret_cast<const SendSessionHeartbeatRequest*>(
               &_SendSessionHeartbeatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(SendSessionHeartbeatRequest& a, SendSessionHeartbeatRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SendSessionHeartbeatRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendSessionHeartbeatRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendSessionHeartbeatRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SendSessionHeartbeatRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendSessionHeartbeatRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SendSessionHeartbeatRequest& from) {
    SendSessionHeartbeatRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendSessionHeartbeatRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.SendSessionHeartbeatRequest";
  }
  protected:
  explicit SendSessionHeartbeatRequest(::google::protobuf::Arena* arena);
  SendSessionHeartbeatRequest(::google::protobuf::Arena* arena, const SendSessionHeartbeatRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.SendSessionHeartbeatRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class RestartModuleResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.RestartModuleResponse) */ {
 public:
  inline RestartModuleResponse() : RestartModuleResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RestartModuleResponse(::google::protobuf::internal::ConstantInitialized);

  inline RestartModuleResponse(const RestartModuleResponse& from)
      : RestartModuleResponse(nullptr, from) {}
  RestartModuleResponse(RestartModuleResponse&& from) noexcept
    : RestartModuleResponse() {
    *this = ::std::move(from);
  }

  inline RestartModuleResponse& operator=(const RestartModuleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RestartModuleResponse& operator=(RestartModuleResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RestartModuleResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RestartModuleResponse* internal_default_instance() {
    return reinterpret_cast<const RestartModuleResponse*>(
               &_RestartModuleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(RestartModuleResponse& a, RestartModuleResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RestartModuleResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RestartModuleResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RestartModuleResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RestartModuleResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RestartModuleResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RestartModuleResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.RestartModuleResponse";
  }
  protected:
  explicit RestartModuleResponse(::google::protobuf::Arena* arena);
  RestartModuleResponse(::google::protobuf::Arena* arena, const RestartModuleResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.RestartModuleResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class RestartModuleRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.RestartModuleRequest) */ {
 public:
  inline RestartModuleRequest() : RestartModuleRequest(nullptr) {}
  ~RestartModuleRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RestartModuleRequest(::google::protobuf::internal::ConstantInitialized);

  inline RestartModuleRequest(const RestartModuleRequest& from)
      : RestartModuleRequest(nullptr, from) {}
  RestartModuleRequest(RestartModuleRequest&& from) noexcept
    : RestartModuleRequest() {
    *this = ::std::move(from);
  }

  inline RestartModuleRequest& operator=(const RestartModuleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RestartModuleRequest& operator=(RestartModuleRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RestartModuleRequest& default_instance() {
    return *internal_default_instance();
  }
  enum IdOrNameCase {
    kModuleId = 1,
    kModuleName = 2,
    ID_OR_NAME_NOT_SET = 0,
  };

  static inline const RestartModuleRequest* internal_default_instance() {
    return reinterpret_cast<const RestartModuleRequest*>(
               &_RestartModuleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(RestartModuleRequest& a, RestartModuleRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RestartModuleRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RestartModuleRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RestartModuleRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RestartModuleRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RestartModuleRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RestartModuleRequest& from) {
    RestartModuleRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RestartModuleRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.RestartModuleRequest";
  }
  protected:
  explicit RestartModuleRequest(::google::protobuf::Arena* arena);
  RestartModuleRequest(::google::protobuf::Arena* arena, const RestartModuleRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModuleIdFieldNumber = 1,
    kModuleNameFieldNumber = 2,
  };
  // string module_id = 1 [json_name = "moduleId"];
  bool has_module_id() const;
  void clear_module_id() ;
  const std::string& module_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_module_id(Arg_&& arg, Args_... args);
  std::string* mutable_module_id();
  PROTOBUF_NODISCARD std::string* release_module_id();
  void set_allocated_module_id(std::string* value);

  private:
  const std::string& _internal_module_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_module_id(
      const std::string& value);
  std::string* _internal_mutable_module_id();

  public:
  // string module_name = 2 [json_name = "moduleName"];
  bool has_module_name() const;
  void clear_module_name() ;
  const std::string& module_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_module_name(Arg_&& arg, Args_... args);
  std::string* mutable_module_name();
  PROTOBUF_NODISCARD std::string* release_module_name();
  void set_allocated_module_name(std::string* value);

  private:
  const std::string& _internal_module_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_module_name(
      const std::string& value);
  std::string* _internal_mutable_module_name();

  public:
  void clear_id_or_name();
  IdOrNameCase id_or_name_case() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.RestartModuleRequest)
 private:
  class _Internal;
  void set_has_module_id();
  void set_has_module_name();

  inline bool has_id_or_name() const;
  inline void clear_has_id_or_name();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 0,
      63, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    union IdOrNameUnion {
      constexpr IdOrNameUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr module_id_;
      ::google::protobuf::internal::ArenaStringPtr module_name_;
    } id_or_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class ResourceRPCSubtypesRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.ResourceRPCSubtypesRequest) */ {
 public:
  inline ResourceRPCSubtypesRequest() : ResourceRPCSubtypesRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResourceRPCSubtypesRequest(::google::protobuf::internal::ConstantInitialized);

  inline ResourceRPCSubtypesRequest(const ResourceRPCSubtypesRequest& from)
      : ResourceRPCSubtypesRequest(nullptr, from) {}
  ResourceRPCSubtypesRequest(ResourceRPCSubtypesRequest&& from) noexcept
    : ResourceRPCSubtypesRequest() {
    *this = ::std::move(from);
  }

  inline ResourceRPCSubtypesRequest& operator=(const ResourceRPCSubtypesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceRPCSubtypesRequest& operator=(ResourceRPCSubtypesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResourceRPCSubtypesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResourceRPCSubtypesRequest* internal_default_instance() {
    return reinterpret_cast<const ResourceRPCSubtypesRequest*>(
               &_ResourceRPCSubtypesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ResourceRPCSubtypesRequest& a, ResourceRPCSubtypesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceRPCSubtypesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResourceRPCSubtypesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResourceRPCSubtypesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResourceRPCSubtypesRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ResourceRPCSubtypesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ResourceRPCSubtypesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.ResourceRPCSubtypesRequest";
  }
  protected:
  explicit ResourceRPCSubtypesRequest(::google::protobuf::Arena* arena);
  ResourceRPCSubtypesRequest(::google::protobuf::Arena* arena, const ResourceRPCSubtypesRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.ResourceRPCSubtypesRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class ResourceNamesRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.ResourceNamesRequest) */ {
 public:
  inline ResourceNamesRequest() : ResourceNamesRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResourceNamesRequest(::google::protobuf::internal::ConstantInitialized);

  inline ResourceNamesRequest(const ResourceNamesRequest& from)
      : ResourceNamesRequest(nullptr, from) {}
  ResourceNamesRequest(ResourceNamesRequest&& from) noexcept
    : ResourceNamesRequest() {
    *this = ::std::move(from);
  }

  inline ResourceNamesRequest& operator=(const ResourceNamesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceNamesRequest& operator=(ResourceNamesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResourceNamesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResourceNamesRequest* internal_default_instance() {
    return reinterpret_cast<const ResourceNamesRequest*>(
               &_ResourceNamesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ResourceNamesRequest& a, ResourceNamesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceNamesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResourceNamesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResourceNamesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResourceNamesRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ResourceNamesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ResourceNamesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.ResourceNamesRequest";
  }
  protected:
  explicit ResourceNamesRequest(::google::protobuf::Arena* arena);
  ResourceNamesRequest(::google::protobuf::Arena* arena, const ResourceNamesRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.ResourceNamesRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class PeerConnectionInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.PeerConnectionInfo) */ {
 public:
  inline PeerConnectionInfo() : PeerConnectionInfo(nullptr) {}
  ~PeerConnectionInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PeerConnectionInfo(::google::protobuf::internal::ConstantInitialized);

  inline PeerConnectionInfo(const PeerConnectionInfo& from)
      : PeerConnectionInfo(nullptr, from) {}
  PeerConnectionInfo(PeerConnectionInfo&& from) noexcept
    : PeerConnectionInfo() {
    *this = ::std::move(from);
  }

  inline PeerConnectionInfo& operator=(const PeerConnectionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeerConnectionInfo& operator=(PeerConnectionInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeerConnectionInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeerConnectionInfo* internal_default_instance() {
    return reinterpret_cast<const PeerConnectionInfo*>(
               &_PeerConnectionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(PeerConnectionInfo& a, PeerConnectionInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(PeerConnectionInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeerConnectionInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeerConnectionInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PeerConnectionInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PeerConnectionInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PeerConnectionInfo& from) {
    PeerConnectionInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PeerConnectionInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.PeerConnectionInfo";
  }
  protected:
  explicit PeerConnectionInfo(::google::protobuf::Arena* arena);
  PeerConnectionInfo(::google::protobuf::Arena* arena, const PeerConnectionInfo& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRemoteAddressFieldNumber = 2,
    kLocalAddressFieldNumber = 3,
    kTypeFieldNumber = 1,
  };
  // optional string remote_address = 2 [json_name = "remoteAddress"];
  bool has_remote_address() const;
  void clear_remote_address() ;
  const std::string& remote_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remote_address(Arg_&& arg, Args_... args);
  std::string* mutable_remote_address();
  PROTOBUF_NODISCARD std::string* release_remote_address();
  void set_allocated_remote_address(std::string* value);

  private:
  const std::string& _internal_remote_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remote_address(
      const std::string& value);
  std::string* _internal_mutable_remote_address();

  public:
  // optional string local_address = 3 [json_name = "localAddress"];
  bool has_local_address() const;
  void clear_local_address() ;
  const std::string& local_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_local_address(Arg_&& arg, Args_... args);
  std::string* mutable_local_address();
  PROTOBUF_NODISCARD std::string* release_local_address();
  void set_allocated_local_address(std::string* value);

  private:
  const std::string& _internal_local_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_local_address(
      const std::string& value);
  std::string* _internal_mutable_local_address();

  public:
  // .viam.robot.v1.PeerConnectionType type = 1 [json_name = "type"];
  void clear_type() ;
  ::viam::robot::v1::PeerConnectionType type() const;
  void set_type(::viam::robot::v1::PeerConnectionType value);

  private:
  ::viam::robot::v1::PeerConnectionType _internal_type() const;
  void _internal_set_type(::viam::robot::v1::PeerConnectionType value);

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.PeerConnectionInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      68, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr remote_address_;
    ::google::protobuf::internal::ArenaStringPtr local_address_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class LogResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.LogResponse) */ {
 public:
  inline LogResponse() : LogResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LogResponse(::google::protobuf::internal::ConstantInitialized);

  inline LogResponse(const LogResponse& from)
      : LogResponse(nullptr, from) {}
  LogResponse(LogResponse&& from) noexcept
    : LogResponse() {
    *this = ::std::move(from);
  }

  inline LogResponse& operator=(const LogResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogResponse& operator=(LogResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LogResponse* internal_default_instance() {
    return reinterpret_cast<const LogResponse*>(
               &_LogResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(LogResponse& a, LogResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LogResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LogResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const LogResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const LogResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.LogResponse";
  }
  protected:
  explicit LogResponse(::google::protobuf::Arena* arena);
  LogResponse(::google::protobuf::Arena* arena, const LogResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.LogResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class GetSessionsRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.GetSessionsRequest) */ {
 public:
  inline GetSessionsRequest() : GetSessionsRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSessionsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetSessionsRequest(const GetSessionsRequest& from)
      : GetSessionsRequest(nullptr, from) {}
  GetSessionsRequest(GetSessionsRequest&& from) noexcept
    : GetSessionsRequest() {
    *this = ::std::move(from);
  }

  inline GetSessionsRequest& operator=(const GetSessionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSessionsRequest& operator=(GetSessionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSessionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSessionsRequest* internal_default_instance() {
    return reinterpret_cast<const GetSessionsRequest*>(
               &_GetSessionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(GetSessionsRequest& a, GetSessionsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSessionsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSessionsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSessionsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSessionsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetSessionsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetSessionsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.GetSessionsRequest";
  }
  protected:
  explicit GetSessionsRequest(::google::protobuf::Arena* arena);
  GetSessionsRequest(::google::protobuf::Arena* arena, const GetSessionsRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.GetSessionsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class GetOperationsRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.GetOperationsRequest) */ {
 public:
  inline GetOperationsRequest() : GetOperationsRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetOperationsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetOperationsRequest(const GetOperationsRequest& from)
      : GetOperationsRequest(nullptr, from) {}
  GetOperationsRequest(GetOperationsRequest&& from) noexcept
    : GetOperationsRequest() {
    *this = ::std::move(from);
  }

  inline GetOperationsRequest& operator=(const GetOperationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOperationsRequest& operator=(GetOperationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOperationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOperationsRequest* internal_default_instance() {
    return reinterpret_cast<const GetOperationsRequest*>(
               &_GetOperationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(GetOperationsRequest& a, GetOperationsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOperationsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOperationsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOperationsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetOperationsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetOperationsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetOperationsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.GetOperationsRequest";
  }
  protected:
  explicit GetOperationsRequest(::google::protobuf::Arena* arena);
  GetOperationsRequest(::google::protobuf::Arena* arena, const GetOperationsRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.GetOperationsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class GetMachineStatusRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.GetMachineStatusRequest) */ {
 public:
  inline GetMachineStatusRequest() : GetMachineStatusRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetMachineStatusRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetMachineStatusRequest(const GetMachineStatusRequest& from)
      : GetMachineStatusRequest(nullptr, from) {}
  GetMachineStatusRequest(GetMachineStatusRequest&& from) noexcept
    : GetMachineStatusRequest() {
    *this = ::std::move(from);
  }

  inline GetMachineStatusRequest& operator=(const GetMachineStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMachineStatusRequest& operator=(GetMachineStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMachineStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMachineStatusRequest* internal_default_instance() {
    return reinterpret_cast<const GetMachineStatusRequest*>(
               &_GetMachineStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(GetMachineStatusRequest& a, GetMachineStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMachineStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMachineStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMachineStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetMachineStatusRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetMachineStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetMachineStatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.GetMachineStatusRequest";
  }
  protected:
  explicit GetMachineStatusRequest(::google::protobuf::Arena* arena);
  GetMachineStatusRequest(::google::protobuf::Arena* arena, const GetMachineStatusRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.GetMachineStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class GetCloudMetadataResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.GetCloudMetadataResponse) */ {
 public:
  inline GetCloudMetadataResponse() : GetCloudMetadataResponse(nullptr) {}
  ~GetCloudMetadataResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetCloudMetadataResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetCloudMetadataResponse(const GetCloudMetadataResponse& from)
      : GetCloudMetadataResponse(nullptr, from) {}
  GetCloudMetadataResponse(GetCloudMetadataResponse&& from) noexcept
    : GetCloudMetadataResponse() {
    *this = ::std::move(from);
  }

  inline GetCloudMetadataResponse& operator=(const GetCloudMetadataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCloudMetadataResponse& operator=(GetCloudMetadataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCloudMetadataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCloudMetadataResponse* internal_default_instance() {
    return reinterpret_cast<const GetCloudMetadataResponse*>(
               &_GetCloudMetadataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(GetCloudMetadataResponse& a, GetCloudMetadataResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCloudMetadataResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCloudMetadataResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCloudMetadataResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetCloudMetadataResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCloudMetadataResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetCloudMetadataResponse& from) {
    GetCloudMetadataResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetCloudMetadataResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.GetCloudMetadataResponse";
  }
  protected:
  explicit GetCloudMetadataResponse(::google::protobuf::Arena* arena);
  GetCloudMetadataResponse(::google::protobuf::Arena* arena, const GetCloudMetadataResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRobotPartIdFieldNumber = 1,
    kPrimaryOrgIdFieldNumber = 2,
    kLocationIdFieldNumber = 3,
    kMachineIdFieldNumber = 4,
    kMachinePartIdFieldNumber = 5,
  };
  // string robot_part_id = 1 [json_name = "robotPartId", deprecated = true];
  [[deprecated]]  void clear_robot_part_id() ;
  [[deprecated]] const std::string& robot_part_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_robot_part_id(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_robot_part_id();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_robot_part_id();
  [[deprecated]] void set_allocated_robot_part_id(std::string* value);

  private:
  const std::string& _internal_robot_part_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_robot_part_id(
      const std::string& value);
  std::string* _internal_mutable_robot_part_id();

  public:
  // string primary_org_id = 2 [json_name = "primaryOrgId"];
  void clear_primary_org_id() ;
  const std::string& primary_org_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_primary_org_id(Arg_&& arg, Args_... args);
  std::string* mutable_primary_org_id();
  PROTOBUF_NODISCARD std::string* release_primary_org_id();
  void set_allocated_primary_org_id(std::string* value);

  private:
  const std::string& _internal_primary_org_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_primary_org_id(
      const std::string& value);
  std::string* _internal_mutable_primary_org_id();

  public:
  // string location_id = 3 [json_name = "locationId"];
  void clear_location_id() ;
  const std::string& location_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_location_id(Arg_&& arg, Args_... args);
  std::string* mutable_location_id();
  PROTOBUF_NODISCARD std::string* release_location_id();
  void set_allocated_location_id(std::string* value);

  private:
  const std::string& _internal_location_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_location_id(
      const std::string& value);
  std::string* _internal_mutable_location_id();

  public:
  // string machine_id = 4 [json_name = "machineId"];
  void clear_machine_id() ;
  const std::string& machine_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_machine_id(Arg_&& arg, Args_... args);
  std::string* mutable_machine_id();
  PROTOBUF_NODISCARD std::string* release_machine_id();
  void set_allocated_machine_id(std::string* value);

  private:
  const std::string& _internal_machine_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_machine_id(
      const std::string& value);
  std::string* _internal_mutable_machine_id();

  public:
  // string machine_part_id = 5 [json_name = "machinePartId"];
  void clear_machine_part_id() ;
  const std::string& machine_part_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_machine_part_id(Arg_&& arg, Args_... args);
  std::string* mutable_machine_part_id();
  PROTOBUF_NODISCARD std::string* release_machine_part_id();
  void set_allocated_machine_part_id(std::string* value);

  private:
  const std::string& _internal_machine_part_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_machine_part_id(
      const std::string& value);
  std::string* _internal_mutable_machine_part_id();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.GetCloudMetadataResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      110, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr robot_part_id_;
    ::google::protobuf::internal::ArenaStringPtr primary_org_id_;
    ::google::protobuf::internal::ArenaStringPtr location_id_;
    ::google::protobuf::internal::ArenaStringPtr machine_id_;
    ::google::protobuf::internal::ArenaStringPtr machine_part_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class GetCloudMetadataRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.GetCloudMetadataRequest) */ {
 public:
  inline GetCloudMetadataRequest() : GetCloudMetadataRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetCloudMetadataRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetCloudMetadataRequest(const GetCloudMetadataRequest& from)
      : GetCloudMetadataRequest(nullptr, from) {}
  GetCloudMetadataRequest(GetCloudMetadataRequest&& from) noexcept
    : GetCloudMetadataRequest() {
    *this = ::std::move(from);
  }

  inline GetCloudMetadataRequest& operator=(const GetCloudMetadataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCloudMetadataRequest& operator=(GetCloudMetadataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCloudMetadataRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCloudMetadataRequest* internal_default_instance() {
    return reinterpret_cast<const GetCloudMetadataRequest*>(
               &_GetCloudMetadataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(GetCloudMetadataRequest& a, GetCloudMetadataRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCloudMetadataRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCloudMetadataRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCloudMetadataRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetCloudMetadataRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetCloudMetadataRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetCloudMetadataRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.GetCloudMetadataRequest";
  }
  protected:
  explicit GetCloudMetadataRequest(::google::protobuf::Arena* arena);
  GetCloudMetadataRequest(::google::protobuf::Arena* arena, const GetCloudMetadataRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.GetCloudMetadataRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class DiscoveryQuery final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.DiscoveryQuery) */ {
 public:
  inline DiscoveryQuery() : DiscoveryQuery(nullptr) {}
  ~DiscoveryQuery() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DiscoveryQuery(::google::protobuf::internal::ConstantInitialized);

  inline DiscoveryQuery(const DiscoveryQuery& from)
      : DiscoveryQuery(nullptr, from) {}
  DiscoveryQuery(DiscoveryQuery&& from) noexcept
    : DiscoveryQuery() {
    *this = ::std::move(from);
  }

  inline DiscoveryQuery& operator=(const DiscoveryQuery& from) {
    CopyFrom(from);
    return *this;
  }
  inline DiscoveryQuery& operator=(DiscoveryQuery&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DiscoveryQuery& default_instance() {
    return *internal_default_instance();
  }
  static inline const DiscoveryQuery* internal_default_instance() {
    return reinterpret_cast<const DiscoveryQuery*>(
               &_DiscoveryQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(DiscoveryQuery& a, DiscoveryQuery& b) {
    a.Swap(&b);
  }
  inline void Swap(DiscoveryQuery* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DiscoveryQuery* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DiscoveryQuery* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DiscoveryQuery>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DiscoveryQuery& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DiscoveryQuery& from) {
    DiscoveryQuery::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DiscoveryQuery* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.DiscoveryQuery";
  }
  protected:
  explicit DiscoveryQuery(::google::protobuf::Arena* arena);
  DiscoveryQuery(::google::protobuf::Arena* arena, const DiscoveryQuery& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubtypeFieldNumber = 1,
    kModelFieldNumber = 2,
  };
  // string subtype = 1 [json_name = "subtype"];
  void clear_subtype() ;
  const std::string& subtype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subtype(Arg_&& arg, Args_... args);
  std::string* mutable_subtype();
  PROTOBUF_NODISCARD std::string* release_subtype();
  void set_allocated_subtype(std::string* value);

  private:
  const std::string& _internal_subtype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subtype(
      const std::string& value);
  std::string* _internal_mutable_subtype();

  public:
  // string model = 2 [json_name = "model"];
  void clear_model() ;
  const std::string& model() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model(Arg_&& arg, Args_... args);
  std::string* mutable_model();
  PROTOBUF_NODISCARD std::string* release_model();
  void set_allocated_model(std::string* value);

  private:
  const std::string& _internal_model() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model(
      const std::string& value);
  std::string* _internal_mutable_model();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.DiscoveryQuery)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr subtype_;
    ::google::protobuf::internal::ArenaStringPtr model_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class CancelOperationResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.CancelOperationResponse) */ {
 public:
  inline CancelOperationResponse() : CancelOperationResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CancelOperationResponse(::google::protobuf::internal::ConstantInitialized);

  inline CancelOperationResponse(const CancelOperationResponse& from)
      : CancelOperationResponse(nullptr, from) {}
  CancelOperationResponse(CancelOperationResponse&& from) noexcept
    : CancelOperationResponse() {
    *this = ::std::move(from);
  }

  inline CancelOperationResponse& operator=(const CancelOperationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelOperationResponse& operator=(CancelOperationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CancelOperationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CancelOperationResponse* internal_default_instance() {
    return reinterpret_cast<const CancelOperationResponse*>(
               &_CancelOperationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CancelOperationResponse& a, CancelOperationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CancelOperationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CancelOperationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CancelOperationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CancelOperationResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CancelOperationResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CancelOperationResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.CancelOperationResponse";
  }
  protected:
  explicit CancelOperationResponse(::google::protobuf::Arena* arena);
  CancelOperationResponse(::google::protobuf::Arena* arena, const CancelOperationResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.CancelOperationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class CancelOperationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.CancelOperationRequest) */ {
 public:
  inline CancelOperationRequest() : CancelOperationRequest(nullptr) {}
  ~CancelOperationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CancelOperationRequest(::google::protobuf::internal::ConstantInitialized);

  inline CancelOperationRequest(const CancelOperationRequest& from)
      : CancelOperationRequest(nullptr, from) {}
  CancelOperationRequest(CancelOperationRequest&& from) noexcept
    : CancelOperationRequest() {
    *this = ::std::move(from);
  }

  inline CancelOperationRequest& operator=(const CancelOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelOperationRequest& operator=(CancelOperationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CancelOperationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CancelOperationRequest* internal_default_instance() {
    return reinterpret_cast<const CancelOperationRequest*>(
               &_CancelOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CancelOperationRequest& a, CancelOperationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CancelOperationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CancelOperationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CancelOperationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CancelOperationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CancelOperationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CancelOperationRequest& from) {
    CancelOperationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CancelOperationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.CancelOperationRequest";
  }
  protected:
  explicit CancelOperationRequest(::google::protobuf::Arena* arena);
  CancelOperationRequest(::google::protobuf::Arena* arena, const CancelOperationRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.CancelOperationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class BlockForOperationResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.robot.v1.BlockForOperationResponse) */ {
 public:
  inline BlockForOperationResponse() : BlockForOperationResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BlockForOperationResponse(::google::protobuf::internal::ConstantInitialized);

  inline BlockForOperationResponse(const BlockForOperationResponse& from)
      : BlockForOperationResponse(nullptr, from) {}
  BlockForOperationResponse(BlockForOperationResponse&& from) noexcept
    : BlockForOperationResponse() {
    *this = ::std::move(from);
  }

  inline BlockForOperationResponse& operator=(const BlockForOperationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockForOperationResponse& operator=(BlockForOperationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockForOperationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlockForOperationResponse* internal_default_instance() {
    return reinterpret_cast<const BlockForOperationResponse*>(
               &_BlockForOperationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(BlockForOperationResponse& a, BlockForOperationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(BlockForOperationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockForOperationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockForOperationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BlockForOperationResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const BlockForOperationResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const BlockForOperationResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.BlockForOperationResponse";
  }
  protected:
  explicit BlockForOperationResponse(::google::protobuf::Arena* arena);
  BlockForOperationResponse(::google::protobuf::Arena* arena, const BlockForOperationResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.robot.v1.BlockForOperationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class BlockForOperationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.BlockForOperationRequest) */ {
 public:
  inline BlockForOperationRequest() : BlockForOperationRequest(nullptr) {}
  ~BlockForOperationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BlockForOperationRequest(::google::protobuf::internal::ConstantInitialized);

  inline BlockForOperationRequest(const BlockForOperationRequest& from)
      : BlockForOperationRequest(nullptr, from) {}
  BlockForOperationRequest(BlockForOperationRequest&& from) noexcept
    : BlockForOperationRequest() {
    *this = ::std::move(from);
  }

  inline BlockForOperationRequest& operator=(const BlockForOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockForOperationRequest& operator=(BlockForOperationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockForOperationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlockForOperationRequest* internal_default_instance() {
    return reinterpret_cast<const BlockForOperationRequest*>(
               &_BlockForOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(BlockForOperationRequest& a, BlockForOperationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(BlockForOperationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockForOperationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockForOperationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BlockForOperationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlockForOperationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BlockForOperationRequest& from) {
    BlockForOperationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BlockForOperationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.BlockForOperationRequest";
  }
  protected:
  explicit BlockForOperationRequest(::google::protobuf::Arena* arena);
  BlockForOperationRequest(::google::protobuf::Arena* arena, const BlockForOperationRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.BlockForOperationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class StreamStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.StreamStatusRequest) */ {
 public:
  inline StreamStatusRequest() : StreamStatusRequest(nullptr) {}
  ~StreamStatusRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StreamStatusRequest(::google::protobuf::internal::ConstantInitialized);

  inline StreamStatusRequest(const StreamStatusRequest& from)
      : StreamStatusRequest(nullptr, from) {}
  StreamStatusRequest(StreamStatusRequest&& from) noexcept
    : StreamStatusRequest() {
    *this = ::std::move(from);
  }

  inline StreamStatusRequest& operator=(const StreamStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamStatusRequest& operator=(StreamStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamStatusRequest* internal_default_instance() {
    return reinterpret_cast<const StreamStatusRequest*>(
               &_StreamStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(StreamStatusRequest& a, StreamStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StreamStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StreamStatusRequest& from) {
    StreamStatusRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StreamStatusRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.StreamStatusRequest";
  }
  protected:
  explicit StreamStatusRequest(::google::protobuf::Arena* arena);
  StreamStatusRequest(::google::protobuf::Arena* arena, const StreamStatusRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResourceNamesFieldNumber = 1,
    kEveryFieldNumber = 2,
  };
  // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
  int resource_names_size() const;
  private:
  int _internal_resource_names_size() const;

  public:
  void clear_resource_names() ;
  ::viam::common::v1::ResourceName* mutable_resource_names(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName >*
      mutable_resource_names();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>& _internal_resource_names() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>* _internal_mutable_resource_names();
  public:
  const ::viam::common::v1::ResourceName& resource_names(int index) const;
  ::viam::common::v1::ResourceName* add_resource_names();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName >&
      resource_names() const;
  // .google.protobuf.Duration every = 2 [json_name = "every"];
  bool has_every() const;
  void clear_every() ;
  const ::google::protobuf::Duration& every() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_every();
  ::google::protobuf::Duration* mutable_every();
  void set_allocated_every(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_every(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_every();

  private:
  const ::google::protobuf::Duration& _internal_every() const;
  ::google::protobuf::Duration* _internal_mutable_every();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.StreamStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName > resource_names_;
    ::google::protobuf::Duration* every_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class StopExtraParameters final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.StopExtraParameters) */ {
 public:
  inline StopExtraParameters() : StopExtraParameters(nullptr) {}
  ~StopExtraParameters() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StopExtraParameters(::google::protobuf::internal::ConstantInitialized);

  inline StopExtraParameters(const StopExtraParameters& from)
      : StopExtraParameters(nullptr, from) {}
  StopExtraParameters(StopExtraParameters&& from) noexcept
    : StopExtraParameters() {
    *this = ::std::move(from);
  }

  inline StopExtraParameters& operator=(const StopExtraParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopExtraParameters& operator=(StopExtraParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopExtraParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopExtraParameters* internal_default_instance() {
    return reinterpret_cast<const StopExtraParameters*>(
               &_StopExtraParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(StopExtraParameters& a, StopExtraParameters& b) {
    a.Swap(&b);
  }
  inline void Swap(StopExtraParameters* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopExtraParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopExtraParameters* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StopExtraParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopExtraParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StopExtraParameters& from) {
    StopExtraParameters::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StopExtraParameters* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.StopExtraParameters";
  }
  protected:
  explicit StopExtraParameters(::google::protobuf::Arena* arena);
  StopExtraParameters(::google::protobuf::Arena* arena, const StopExtraParameters& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const ::viam::common::v1::ResourceName& name() const;
  PROTOBUF_NODISCARD ::viam::common::v1::ResourceName* release_name();
  ::viam::common::v1::ResourceName* mutable_name();
  void set_allocated_name(::viam::common::v1::ResourceName* value);
  void unsafe_arena_set_allocated_name(::viam::common::v1::ResourceName* value);
  ::viam::common::v1::ResourceName* unsafe_arena_release_name();

  private:
  const ::viam::common::v1::ResourceName& _internal_name() const;
  ::viam::common::v1::ResourceName* _internal_mutable_name();

  public:
  // .google.protobuf.Struct params = 2 [json_name = "params"];
  bool has_params() const;
  void clear_params() ;
  const ::google::protobuf::Struct& params() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_params();
  ::google::protobuf::Struct* mutable_params();
  void set_allocated_params(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_params(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_params();

  private:
  const ::google::protobuf::Struct& _internal_params() const;
  ::google::protobuf::Struct* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.StopExtraParameters)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::common::v1::ResourceName* name_;
    ::google::protobuf::Struct* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class Status final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.Status) */ {
 public:
  inline Status() : Status(nullptr) {}
  ~Status() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Status(::google::protobuf::internal::ConstantInitialized);

  inline Status(const Status& from)
      : Status(nullptr, from) {}
  Status(Status&& from) noexcept
    : Status() {
    *this = ::std::move(from);
  }

  inline Status& operator=(const Status& from) {
    CopyFrom(from);
    return *this;
  }
  inline Status& operator=(Status&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Status& default_instance() {
    return *internal_default_instance();
  }
  static inline const Status* internal_default_instance() {
    return reinterpret_cast<const Status*>(
               &_Status_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(Status& a, Status& b) {
    a.Swap(&b);
  }
  inline void Swap(Status* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Status* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Status* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Status>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Status& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Status& from) {
    Status::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Status* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.Status";
  }
  protected:
  explicit Status(::google::protobuf::Arena* arena);
  Status(::google::protobuf::Arena* arena, const Status& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kStatusFieldNumber = 2,
    kLastReconfiguredFieldNumber = 3,
  };
  // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const ::viam::common::v1::ResourceName& name() const;
  PROTOBUF_NODISCARD ::viam::common::v1::ResourceName* release_name();
  ::viam::common::v1::ResourceName* mutable_name();
  void set_allocated_name(::viam::common::v1::ResourceName* value);
  void unsafe_arena_set_allocated_name(::viam::common::v1::ResourceName* value);
  ::viam::common::v1::ResourceName* unsafe_arena_release_name();

  private:
  const ::viam::common::v1::ResourceName& _internal_name() const;
  ::viam::common::v1::ResourceName* _internal_mutable_name();

  public:
  // .google.protobuf.Struct status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::google::protobuf::Struct& status() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_status();
  ::google::protobuf::Struct* mutable_status();
  void set_allocated_status(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_status(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_status();

  private:
  const ::google::protobuf::Struct& _internal_status() const;
  ::google::protobuf::Struct* _internal_mutable_status();

  public:
  // .google.protobuf.Timestamp last_reconfigured = 3 [json_name = "lastReconfigured"];
  bool has_last_reconfigured() const;
  void clear_last_reconfigured() ;
  const ::google::protobuf::Timestamp& last_reconfigured() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_last_reconfigured();
  ::google::protobuf::Timestamp* mutable_last_reconfigured();
  void set_allocated_last_reconfigured(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_last_reconfigured(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_last_reconfigured();

  private:
  const ::google::protobuf::Timestamp& _internal_last_reconfigured() const;
  ::google::protobuf::Timestamp* _internal_mutable_last_reconfigured();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.Status)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::common::v1::ResourceName* name_;
    ::google::protobuf::Struct* status_;
    ::google::protobuf::Timestamp* last_reconfigured_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class StartSessionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.StartSessionResponse) */ {
 public:
  inline StartSessionResponse() : StartSessionResponse(nullptr) {}
  ~StartSessionResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StartSessionResponse(::google::protobuf::internal::ConstantInitialized);

  inline StartSessionResponse(const StartSessionResponse& from)
      : StartSessionResponse(nullptr, from) {}
  StartSessionResponse(StartSessionResponse&& from) noexcept
    : StartSessionResponse() {
    *this = ::std::move(from);
  }

  inline StartSessionResponse& operator=(const StartSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartSessionResponse& operator=(StartSessionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartSessionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartSessionResponse* internal_default_instance() {
    return reinterpret_cast<const StartSessionResponse*>(
               &_StartSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(StartSessionResponse& a, StartSessionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StartSessionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartSessionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartSessionResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StartSessionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartSessionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StartSessionResponse& from) {
    StartSessionResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StartSessionResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.StartSessionResponse";
  }
  protected:
  explicit StartSessionResponse(::google::protobuf::Arena* arena);
  StartSessionResponse(::google::protobuf::Arena* arena, const StartSessionResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kHeartbeatWindowFieldNumber = 2,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .google.protobuf.Duration heartbeat_window = 2 [json_name = "heartbeatWindow"];
  bool has_heartbeat_window() const;
  void clear_heartbeat_window() ;
  const ::google::protobuf::Duration& heartbeat_window() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_heartbeat_window();
  ::google::protobuf::Duration* mutable_heartbeat_window();
  void set_allocated_heartbeat_window(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_heartbeat_window(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_heartbeat_window();

  private:
  const ::google::protobuf::Duration& _internal_heartbeat_window() const;
  ::google::protobuf::Duration* _internal_mutable_heartbeat_window();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.StartSessionResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::Duration* heartbeat_window_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class Session final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.Session) */ {
 public:
  inline Session() : Session(nullptr) {}
  ~Session() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Session(::google::protobuf::internal::ConstantInitialized);

  inline Session(const Session& from)
      : Session(nullptr, from) {}
  Session(Session&& from) noexcept
    : Session() {
    *this = ::std::move(from);
  }

  inline Session& operator=(const Session& from) {
    CopyFrom(from);
    return *this;
  }
  inline Session& operator=(Session&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Session& default_instance() {
    return *internal_default_instance();
  }
  static inline const Session* internal_default_instance() {
    return reinterpret_cast<const Session*>(
               &_Session_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(Session& a, Session& b) {
    a.Swap(&b);
  }
  inline void Swap(Session* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Session* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Session* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Session>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Session& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Session& from) {
    Session::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Session* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.Session";
  }
  protected:
  explicit Session(::google::protobuf::Arena* arena);
  Session(::google::protobuf::Arena* arena, const Session& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kPeerConnectionInfoFieldNumber = 2,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // optional .viam.robot.v1.PeerConnectionInfo peer_connection_info = 2 [json_name = "peerConnectionInfo"];
  bool has_peer_connection_info() const;
  void clear_peer_connection_info() ;
  const ::viam::robot::v1::PeerConnectionInfo& peer_connection_info() const;
  PROTOBUF_NODISCARD ::viam::robot::v1::PeerConnectionInfo* release_peer_connection_info();
  ::viam::robot::v1::PeerConnectionInfo* mutable_peer_connection_info();
  void set_allocated_peer_connection_info(::viam::robot::v1::PeerConnectionInfo* value);
  void unsafe_arena_set_allocated_peer_connection_info(::viam::robot::v1::PeerConnectionInfo* value);
  ::viam::robot::v1::PeerConnectionInfo* unsafe_arena_release_peer_connection_info();

  private:
  const ::viam::robot::v1::PeerConnectionInfo& _internal_peer_connection_info() const;
  ::viam::robot::v1::PeerConnectionInfo* _internal_mutable_peer_connection_info();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.Session)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      32, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::viam::robot::v1::PeerConnectionInfo* peer_connection_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class ResourceStatus final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.ResourceStatus) */ {
 public:
  inline ResourceStatus() : ResourceStatus(nullptr) {}
  ~ResourceStatus() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResourceStatus(::google::protobuf::internal::ConstantInitialized);

  inline ResourceStatus(const ResourceStatus& from)
      : ResourceStatus(nullptr, from) {}
  ResourceStatus(ResourceStatus&& from) noexcept
    : ResourceStatus() {
    *this = ::std::move(from);
  }

  inline ResourceStatus& operator=(const ResourceStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceStatus& operator=(ResourceStatus&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResourceStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResourceStatus* internal_default_instance() {
    return reinterpret_cast<const ResourceStatus*>(
               &_ResourceStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(ResourceStatus& a, ResourceStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceStatus* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResourceStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResourceStatus* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResourceStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResourceStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ResourceStatus& from) {
    ResourceStatus::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResourceStatus* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.ResourceStatus";
  }
  protected:
  explicit ResourceStatus(::google::protobuf::Arena* arena);
  ResourceStatus(::google::protobuf::Arena* arena, const ResourceStatus& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using State = ResourceStatus_State;
  static constexpr State STATE_UNSPECIFIED = ResourceStatus_State_STATE_UNSPECIFIED;
  static constexpr State STATE_UNCONFIGURED = ResourceStatus_State_STATE_UNCONFIGURED;
  static constexpr State STATE_CONFIGURING = ResourceStatus_State_STATE_CONFIGURING;
  static constexpr State STATE_READY = ResourceStatus_State_STATE_READY;
  static constexpr State STATE_REMOVING = ResourceStatus_State_STATE_REMOVING;
  static inline bool State_IsValid(int value) {
    return ResourceStatus_State_IsValid(value);
  }
  static constexpr State State_MIN = ResourceStatus_State_State_MIN;
  static constexpr State State_MAX = ResourceStatus_State_State_MAX;
  static constexpr int State_ARRAYSIZE = ResourceStatus_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* State_descriptor() {
    return ResourceStatus_State_descriptor();
  }
  template <typename T>
  static inline const std::string& State_Name(T value) {
    return ResourceStatus_State_Name(value);
  }
  static inline bool State_Parse(absl::string_view name, State* value) {
    return ResourceStatus_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kLastUpdatedFieldNumber = 3,
    kStateFieldNumber = 2,
  };
  // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const ::viam::common::v1::ResourceName& name() const;
  PROTOBUF_NODISCARD ::viam::common::v1::ResourceName* release_name();
  ::viam::common::v1::ResourceName* mutable_name();
  void set_allocated_name(::viam::common::v1::ResourceName* value);
  void unsafe_arena_set_allocated_name(::viam::common::v1::ResourceName* value);
  ::viam::common::v1::ResourceName* unsafe_arena_release_name();

  private:
  const ::viam::common::v1::ResourceName& _internal_name() const;
  ::viam::common::v1::ResourceName* _internal_mutable_name();

  public:
  // .google.protobuf.Timestamp last_updated = 3 [json_name = "lastUpdated"];
  bool has_last_updated() const;
  void clear_last_updated() ;
  const ::google::protobuf::Timestamp& last_updated() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_last_updated();
  ::google::protobuf::Timestamp* mutable_last_updated();
  void set_allocated_last_updated(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_last_updated(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_last_updated();

  private:
  const ::google::protobuf::Timestamp& _internal_last_updated() const;
  ::google::protobuf::Timestamp* _internal_mutable_last_updated();

  public:
  // .viam.robot.v1.ResourceStatus.State state = 2 [json_name = "state"];
  void clear_state() ;
  ::viam::robot::v1::ResourceStatus_State state() const;
  void set_state(::viam::robot::v1::ResourceStatus_State value);

  private:
  ::viam::robot::v1::ResourceStatus_State _internal_state() const;
  void _internal_set_state(::viam::robot::v1::ResourceStatus_State value);

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.ResourceStatus)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::common::v1::ResourceName* name_;
    ::google::protobuf::Timestamp* last_updated_;
    int state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class ResourceRPCSubtype final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.ResourceRPCSubtype) */ {
 public:
  inline ResourceRPCSubtype() : ResourceRPCSubtype(nullptr) {}
  ~ResourceRPCSubtype() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResourceRPCSubtype(::google::protobuf::internal::ConstantInitialized);

  inline ResourceRPCSubtype(const ResourceRPCSubtype& from)
      : ResourceRPCSubtype(nullptr, from) {}
  ResourceRPCSubtype(ResourceRPCSubtype&& from) noexcept
    : ResourceRPCSubtype() {
    *this = ::std::move(from);
  }

  inline ResourceRPCSubtype& operator=(const ResourceRPCSubtype& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceRPCSubtype& operator=(ResourceRPCSubtype&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResourceRPCSubtype& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResourceRPCSubtype* internal_default_instance() {
    return reinterpret_cast<const ResourceRPCSubtype*>(
               &_ResourceRPCSubtype_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ResourceRPCSubtype& a, ResourceRPCSubtype& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceRPCSubtype* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResourceRPCSubtype* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResourceRPCSubtype* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResourceRPCSubtype>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResourceRPCSubtype& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ResourceRPCSubtype& from) {
    ResourceRPCSubtype::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResourceRPCSubtype* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.ResourceRPCSubtype";
  }
  protected:
  explicit ResourceRPCSubtype(::google::protobuf::Arena* arena);
  ResourceRPCSubtype(::google::protobuf::Arena* arena, const ResourceRPCSubtype& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProtoServiceFieldNumber = 2,
    kSubtypeFieldNumber = 1,
  };
  // string proto_service = 2 [json_name = "protoService"];
  void clear_proto_service() ;
  const std::string& proto_service() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_proto_service(Arg_&& arg, Args_... args);
  std::string* mutable_proto_service();
  PROTOBUF_NODISCARD std::string* release_proto_service();
  void set_allocated_proto_service(std::string* value);

  private:
  const std::string& _internal_proto_service() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proto_service(
      const std::string& value);
  std::string* _internal_mutable_proto_service();

  public:
  // .viam.common.v1.ResourceName subtype = 1 [json_name = "subtype"];
  bool has_subtype() const;
  void clear_subtype() ;
  const ::viam::common::v1::ResourceName& subtype() const;
  PROTOBUF_NODISCARD ::viam::common::v1::ResourceName* release_subtype();
  ::viam::common::v1::ResourceName* mutable_subtype();
  void set_allocated_subtype(::viam::common::v1::ResourceName* value);
  void unsafe_arena_set_allocated_subtype(::viam::common::v1::ResourceName* value);
  ::viam::common::v1::ResourceName* unsafe_arena_release_subtype();

  private:
  const ::viam::common::v1::ResourceName& _internal_subtype() const;
  ::viam::common::v1::ResourceName* _internal_mutable_subtype();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.ResourceRPCSubtype)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr proto_service_;
    ::viam::common::v1::ResourceName* subtype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class ResourceNamesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.ResourceNamesResponse) */ {
 public:
  inline ResourceNamesResponse() : ResourceNamesResponse(nullptr) {}
  ~ResourceNamesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResourceNamesResponse(::google::protobuf::internal::ConstantInitialized);

  inline ResourceNamesResponse(const ResourceNamesResponse& from)
      : ResourceNamesResponse(nullptr, from) {}
  ResourceNamesResponse(ResourceNamesResponse&& from) noexcept
    : ResourceNamesResponse() {
    *this = ::std::move(from);
  }

  inline ResourceNamesResponse& operator=(const ResourceNamesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceNamesResponse& operator=(ResourceNamesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResourceNamesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResourceNamesResponse* internal_default_instance() {
    return reinterpret_cast<const ResourceNamesResponse*>(
               &_ResourceNamesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ResourceNamesResponse& a, ResourceNamesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceNamesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResourceNamesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResourceNamesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResourceNamesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResourceNamesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ResourceNamesResponse& from) {
    ResourceNamesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResourceNamesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.ResourceNamesResponse";
  }
  protected:
  explicit ResourceNamesResponse(::google::protobuf::Arena* arena);
  ResourceNamesResponse(::google::protobuf::Arena* arena, const ResourceNamesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResourcesFieldNumber = 1,
  };
  // repeated .viam.common.v1.ResourceName resources = 1 [json_name = "resources"];
  int resources_size() const;
  private:
  int _internal_resources_size() const;

  public:
  void clear_resources() ;
  ::viam::common::v1::ResourceName* mutable_resources(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName >*
      mutable_resources();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>& _internal_resources() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>* _internal_mutable_resources();
  public:
  const ::viam::common::v1::ResourceName& resources(int index) const;
  ::viam::common::v1::ResourceName* add_resources();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName >&
      resources() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.ResourceNamesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName > resources_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class Operation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.Operation) */ {
 public:
  inline Operation() : Operation(nullptr) {}
  ~Operation() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Operation(::google::protobuf::internal::ConstantInitialized);

  inline Operation(const Operation& from)
      : Operation(nullptr, from) {}
  Operation(Operation&& from) noexcept
    : Operation() {
    *this = ::std::move(from);
  }

  inline Operation& operator=(const Operation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operation& operator=(Operation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Operation& default_instance() {
    return *internal_default_instance();
  }
  static inline const Operation* internal_default_instance() {
    return reinterpret_cast<const Operation*>(
               &_Operation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(Operation& a, Operation& b) {
    a.Swap(&b);
  }
  inline void Swap(Operation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Operation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Operation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Operation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Operation& from) {
    Operation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Operation* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.Operation";
  }
  protected:
  explicit Operation(::google::protobuf::Arena* arena);
  Operation(::google::protobuf::Arena* arena, const Operation& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kMethodFieldNumber = 2,
    kSessionIdFieldNumber = 5,
    kArgumentsFieldNumber = 3,
    kStartedFieldNumber = 4,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string method = 2 [json_name = "method"];
  void clear_method() ;
  const std::string& method() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_method(Arg_&& arg, Args_... args);
  std::string* mutable_method();
  PROTOBUF_NODISCARD std::string* release_method();
  void set_allocated_method(std::string* value);

  private:
  const std::string& _internal_method() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_method(
      const std::string& value);
  std::string* _internal_mutable_method();

  public:
  // optional string session_id = 5 [json_name = "sessionId"];
  bool has_session_id() const;
  void clear_session_id() ;
  const std::string& session_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_session_id(Arg_&& arg, Args_... args);
  std::string* mutable_session_id();
  PROTOBUF_NODISCARD std::string* release_session_id();
  void set_allocated_session_id(std::string* value);

  private:
  const std::string& _internal_session_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_session_id(
      const std::string& value);
  std::string* _internal_mutable_session_id();

  public:
  // .google.protobuf.Struct arguments = 3 [json_name = "arguments"];
  bool has_arguments() const;
  void clear_arguments() ;
  const ::google::protobuf::Struct& arguments() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_arguments();
  ::google::protobuf::Struct* mutable_arguments();
  void set_allocated_arguments(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_arguments(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_arguments();

  private:
  const ::google::protobuf::Struct& _internal_arguments() const;
  ::google::protobuf::Struct* _internal_mutable_arguments();

  public:
  // .google.protobuf.Timestamp started = 4 [json_name = "started"];
  bool has_started() const;
  void clear_started() ;
  const ::google::protobuf::Timestamp& started() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_started();
  ::google::protobuf::Timestamp* mutable_started();
  void set_allocated_started(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_started(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_started();

  private:
  const ::google::protobuf::Timestamp& _internal_started() const;
  ::google::protobuf::Timestamp* _internal_mutable_started();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.Operation)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr method_;
    ::google::protobuf::internal::ArenaStringPtr session_id_;
    ::google::protobuf::Struct* arguments_;
    ::google::protobuf::Timestamp* started_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class GetStatusRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.GetStatusRequest) */ {
 public:
  inline GetStatusRequest() : GetStatusRequest(nullptr) {}
  ~GetStatusRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetStatusRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetStatusRequest(const GetStatusRequest& from)
      : GetStatusRequest(nullptr, from) {}
  GetStatusRequest(GetStatusRequest&& from) noexcept
    : GetStatusRequest() {
    *this = ::std::move(from);
  }

  inline GetStatusRequest& operator=(const GetStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusRequest& operator=(GetStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusRequest* internal_default_instance() {
    return reinterpret_cast<const GetStatusRequest*>(
               &_GetStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(GetStatusRequest& a, GetStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatusRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetStatusRequest& from) {
    GetStatusRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetStatusRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.GetStatusRequest";
  }
  protected:
  explicit GetStatusRequest(::google::protobuf::Arena* arena);
  GetStatusRequest(::google::protobuf::Arena* arena, const GetStatusRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResourceNamesFieldNumber = 1,
  };
  // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
  int resource_names_size() const;
  private:
  int _internal_resource_names_size() const;

  public:
  void clear_resource_names() ;
  ::viam::common::v1::ResourceName* mutable_resource_names(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName >*
      mutable_resource_names();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>& _internal_resource_names() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>* _internal_mutable_resource_names();
  public:
  const ::viam::common::v1::ResourceName& resource_names(int index) const;
  ::viam::common::v1::ResourceName* add_resource_names();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName >&
      resource_names() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.GetStatusRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::ResourceName > resource_names_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class Discovery final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.Discovery) */ {
 public:
  inline Discovery() : Discovery(nullptr) {}
  ~Discovery() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Discovery(::google::protobuf::internal::ConstantInitialized);

  inline Discovery(const Discovery& from)
      : Discovery(nullptr, from) {}
  Discovery(Discovery&& from) noexcept
    : Discovery() {
    *this = ::std::move(from);
  }

  inline Discovery& operator=(const Discovery& from) {
    CopyFrom(from);
    return *this;
  }
  inline Discovery& operator=(Discovery&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Discovery& default_instance() {
    return *internal_default_instance();
  }
  static inline const Discovery* internal_default_instance() {
    return reinterpret_cast<const Discovery*>(
               &_Discovery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(Discovery& a, Discovery& b) {
    a.Swap(&b);
  }
  inline void Swap(Discovery* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Discovery* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Discovery* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Discovery>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Discovery& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Discovery& from) {
    Discovery::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Discovery* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.Discovery";
  }
  protected:
  explicit Discovery(::google::protobuf::Arena* arena);
  Discovery(::google::protobuf::Arena* arena, const Discovery& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQueryFieldNumber = 1,
    kResultsFieldNumber = 2,
  };
  // .viam.robot.v1.DiscoveryQuery query = 1 [json_name = "query"];
  bool has_query() const;
  void clear_query() ;
  const ::viam::robot::v1::DiscoveryQuery& query() const;
  PROTOBUF_NODISCARD ::viam::robot::v1::DiscoveryQuery* release_query();
  ::viam::robot::v1::DiscoveryQuery* mutable_query();
  void set_allocated_query(::viam::robot::v1::DiscoveryQuery* value);
  void unsafe_arena_set_allocated_query(::viam::robot::v1::DiscoveryQuery* value);
  ::viam::robot::v1::DiscoveryQuery* unsafe_arena_release_query();

  private:
  const ::viam::robot::v1::DiscoveryQuery& _internal_query() const;
  ::viam::robot::v1::DiscoveryQuery* _internal_mutable_query();

  public:
  // .google.protobuf.Struct results = 2 [json_name = "results"];
  bool has_results() const;
  void clear_results() ;
  const ::google::protobuf::Struct& results() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_results();
  ::google::protobuf::Struct* mutable_results();
  void set_allocated_results(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_results(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_results();

  private:
  const ::google::protobuf::Struct& _internal_results() const;
  ::google::protobuf::Struct* _internal_mutable_results();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.Discovery)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::robot::v1::DiscoveryQuery* query_;
    ::google::protobuf::Struct* results_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class DiscoverComponentsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.DiscoverComponentsRequest) */ {
 public:
  inline DiscoverComponentsRequest() : DiscoverComponentsRequest(nullptr) {}
  ~DiscoverComponentsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DiscoverComponentsRequest(::google::protobuf::internal::ConstantInitialized);

  inline DiscoverComponentsRequest(const DiscoverComponentsRequest& from)
      : DiscoverComponentsRequest(nullptr, from) {}
  DiscoverComponentsRequest(DiscoverComponentsRequest&& from) noexcept
    : DiscoverComponentsRequest() {
    *this = ::std::move(from);
  }

  inline DiscoverComponentsRequest& operator=(const DiscoverComponentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DiscoverComponentsRequest& operator=(DiscoverComponentsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DiscoverComponentsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DiscoverComponentsRequest* internal_default_instance() {
    return reinterpret_cast<const DiscoverComponentsRequest*>(
               &_DiscoverComponentsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(DiscoverComponentsRequest& a, DiscoverComponentsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DiscoverComponentsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DiscoverComponentsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DiscoverComponentsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DiscoverComponentsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DiscoverComponentsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DiscoverComponentsRequest& from) {
    DiscoverComponentsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DiscoverComponentsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.DiscoverComponentsRequest";
  }
  protected:
  explicit DiscoverComponentsRequest(::google::protobuf::Arena* arena);
  DiscoverComponentsRequest(::google::protobuf::Arena* arena, const DiscoverComponentsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQueriesFieldNumber = 1,
  };
  // repeated .viam.robot.v1.DiscoveryQuery queries = 1 [json_name = "queries"];
  int queries_size() const;
  private:
  int _internal_queries_size() const;

  public:
  void clear_queries() ;
  ::viam::robot::v1::DiscoveryQuery* mutable_queries(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::DiscoveryQuery >*
      mutable_queries();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::DiscoveryQuery>& _internal_queries() const;
  ::google::protobuf::RepeatedPtrField<::viam::robot::v1::DiscoveryQuery>* _internal_mutable_queries();
  public:
  const ::viam::robot::v1::DiscoveryQuery& queries(int index) const;
  ::viam::robot::v1::DiscoveryQuery* add_queries();
  const ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::DiscoveryQuery >&
      queries() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.DiscoverComponentsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::DiscoveryQuery > queries_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class TransformPoseResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.TransformPoseResponse) */ {
 public:
  inline TransformPoseResponse() : TransformPoseResponse(nullptr) {}
  ~TransformPoseResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TransformPoseResponse(::google::protobuf::internal::ConstantInitialized);

  inline TransformPoseResponse(const TransformPoseResponse& from)
      : TransformPoseResponse(nullptr, from) {}
  TransformPoseResponse(TransformPoseResponse&& from) noexcept
    : TransformPoseResponse() {
    *this = ::std::move(from);
  }

  inline TransformPoseResponse& operator=(const TransformPoseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransformPoseResponse& operator=(TransformPoseResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransformPoseResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransformPoseResponse* internal_default_instance() {
    return reinterpret_cast<const TransformPoseResponse*>(
               &_TransformPoseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(TransformPoseResponse& a, TransformPoseResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TransformPoseResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransformPoseResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransformPoseResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TransformPoseResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransformPoseResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TransformPoseResponse& from) {
    TransformPoseResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TransformPoseResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.TransformPoseResponse";
  }
  protected:
  explicit TransformPoseResponse(::google::protobuf::Arena* arena);
  TransformPoseResponse(::google::protobuf::Arena* arena, const TransformPoseResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPoseFieldNumber = 1,
  };
  // .viam.common.v1.PoseInFrame pose = 1 [json_name = "pose"];
  bool has_pose() const;
  void clear_pose() ;
  const ::viam::common::v1::PoseInFrame& pose() const;
  PROTOBUF_NODISCARD ::viam::common::v1::PoseInFrame* release_pose();
  ::viam::common::v1::PoseInFrame* mutable_pose();
  void set_allocated_pose(::viam::common::v1::PoseInFrame* value);
  void unsafe_arena_set_allocated_pose(::viam::common::v1::PoseInFrame* value);
  ::viam::common::v1::PoseInFrame* unsafe_arena_release_pose();

  private:
  const ::viam::common::v1::PoseInFrame& _internal_pose() const;
  ::viam::common::v1::PoseInFrame* _internal_mutable_pose();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.TransformPoseResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::common::v1::PoseInFrame* pose_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class StreamStatusResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.StreamStatusResponse) */ {
 public:
  inline StreamStatusResponse() : StreamStatusResponse(nullptr) {}
  ~StreamStatusResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StreamStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline StreamStatusResponse(const StreamStatusResponse& from)
      : StreamStatusResponse(nullptr, from) {}
  StreamStatusResponse(StreamStatusResponse&& from) noexcept
    : StreamStatusResponse() {
    *this = ::std::move(from);
  }

  inline StreamStatusResponse& operator=(const StreamStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamStatusResponse& operator=(StreamStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamStatusResponse* internal_default_instance() {
    return reinterpret_cast<const StreamStatusResponse*>(
               &_StreamStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(StreamStatusResponse& a, StreamStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StreamStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StreamStatusResponse& from) {
    StreamStatusResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StreamStatusResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.StreamStatusResponse";
  }
  protected:
  explicit StreamStatusResponse(::google::protobuf::Arena* arena);
  StreamStatusResponse(::google::protobuf::Arena* arena, const StreamStatusResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
  };
  // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
  int status_size() const;
  private:
  int _internal_status_size() const;

  public:
  void clear_status() ;
  ::viam::robot::v1::Status* mutable_status(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Status >*
      mutable_status();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Status>& _internal_status() const;
  ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Status>* _internal_mutable_status();
  public:
  const ::viam::robot::v1::Status& status(int index) const;
  ::viam::robot::v1::Status* add_status();
  const ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Status >&
      status() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.StreamStatusResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Status > status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class StopAllRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.StopAllRequest) */ {
 public:
  inline StopAllRequest() : StopAllRequest(nullptr) {}
  ~StopAllRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StopAllRequest(::google::protobuf::internal::ConstantInitialized);

  inline StopAllRequest(const StopAllRequest& from)
      : StopAllRequest(nullptr, from) {}
  StopAllRequest(StopAllRequest&& from) noexcept
    : StopAllRequest() {
    *this = ::std::move(from);
  }

  inline StopAllRequest& operator=(const StopAllRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopAllRequest& operator=(StopAllRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopAllRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopAllRequest* internal_default_instance() {
    return reinterpret_cast<const StopAllRequest*>(
               &_StopAllRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(StopAllRequest& a, StopAllRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StopAllRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopAllRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopAllRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StopAllRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopAllRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StopAllRequest& from) {
    StopAllRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StopAllRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.StopAllRequest";
  }
  protected:
  explicit StopAllRequest(::google::protobuf::Arena* arena);
  StopAllRequest(::google::protobuf::Arena* arena, const StopAllRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExtraFieldNumber = 99,
  };
  // repeated .viam.robot.v1.StopExtraParameters extra = 99 [json_name = "extra"];
  int extra_size() const;
  private:
  int _internal_extra_size() const;

  public:
  void clear_extra() ;
  ::viam::robot::v1::StopExtraParameters* mutable_extra(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::StopExtraParameters >*
      mutable_extra();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::StopExtraParameters>& _internal_extra() const;
  ::google::protobuf::RepeatedPtrField<::viam::robot::v1::StopExtraParameters>* _internal_mutable_extra();
  public:
  const ::viam::robot::v1::StopExtraParameters& extra(int index) const;
  ::viam::robot::v1::StopExtraParameters* add_extra();
  const ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::StopExtraParameters >&
      extra() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.StopAllRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::StopExtraParameters > extra_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class ResourceRPCSubtypesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.ResourceRPCSubtypesResponse) */ {
 public:
  inline ResourceRPCSubtypesResponse() : ResourceRPCSubtypesResponse(nullptr) {}
  ~ResourceRPCSubtypesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResourceRPCSubtypesResponse(::google::protobuf::internal::ConstantInitialized);

  inline ResourceRPCSubtypesResponse(const ResourceRPCSubtypesResponse& from)
      : ResourceRPCSubtypesResponse(nullptr, from) {}
  ResourceRPCSubtypesResponse(ResourceRPCSubtypesResponse&& from) noexcept
    : ResourceRPCSubtypesResponse() {
    *this = ::std::move(from);
  }

  inline ResourceRPCSubtypesResponse& operator=(const ResourceRPCSubtypesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceRPCSubtypesResponse& operator=(ResourceRPCSubtypesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResourceRPCSubtypesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResourceRPCSubtypesResponse* internal_default_instance() {
    return reinterpret_cast<const ResourceRPCSubtypesResponse*>(
               &_ResourceRPCSubtypesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ResourceRPCSubtypesResponse& a, ResourceRPCSubtypesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceRPCSubtypesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResourceRPCSubtypesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResourceRPCSubtypesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResourceRPCSubtypesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResourceRPCSubtypesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ResourceRPCSubtypesResponse& from) {
    ResourceRPCSubtypesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResourceRPCSubtypesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.ResourceRPCSubtypesResponse";
  }
  protected:
  explicit ResourceRPCSubtypesResponse(::google::protobuf::Arena* arena);
  ResourceRPCSubtypesResponse(::google::protobuf::Arena* arena, const ResourceRPCSubtypesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResourceRpcSubtypesFieldNumber = 1,
  };
  // repeated .viam.robot.v1.ResourceRPCSubtype resource_rpc_subtypes = 1 [json_name = "resourceRpcSubtypes"];
  int resource_rpc_subtypes_size() const;
  private:
  int _internal_resource_rpc_subtypes_size() const;

  public:
  void clear_resource_rpc_subtypes() ;
  ::viam::robot::v1::ResourceRPCSubtype* mutable_resource_rpc_subtypes(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::ResourceRPCSubtype >*
      mutable_resource_rpc_subtypes();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::ResourceRPCSubtype>& _internal_resource_rpc_subtypes() const;
  ::google::protobuf::RepeatedPtrField<::viam::robot::v1::ResourceRPCSubtype>* _internal_mutable_resource_rpc_subtypes();
  public:
  const ::viam::robot::v1::ResourceRPCSubtype& resource_rpc_subtypes(int index) const;
  ::viam::robot::v1::ResourceRPCSubtype* add_resource_rpc_subtypes();
  const ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::ResourceRPCSubtype >&
      resource_rpc_subtypes() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.ResourceRPCSubtypesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::ResourceRPCSubtype > resource_rpc_subtypes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class LogRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.LogRequest) */ {
 public:
  inline LogRequest() : LogRequest(nullptr) {}
  ~LogRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LogRequest(::google::protobuf::internal::ConstantInitialized);

  inline LogRequest(const LogRequest& from)
      : LogRequest(nullptr, from) {}
  LogRequest(LogRequest&& from) noexcept
    : LogRequest() {
    *this = ::std::move(from);
  }

  inline LogRequest& operator=(const LogRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogRequest& operator=(LogRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LogRequest* internal_default_instance() {
    return reinterpret_cast<const LogRequest*>(
               &_LogRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(LogRequest& a, LogRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LogRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LogRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LogRequest& from) {
    LogRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LogRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.LogRequest";
  }
  protected:
  explicit LogRequest(::google::protobuf::Arena* arena);
  LogRequest(::google::protobuf::Arena* arena, const LogRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLogsFieldNumber = 1,
  };
  // repeated .viam.common.v1.LogEntry logs = 1 [json_name = "logs"];
  int logs_size() const;
  private:
  int _internal_logs_size() const;

  public:
  void clear_logs() ;
  ::viam::common::v1::LogEntry* mutable_logs(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::LogEntry >*
      mutable_logs();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::LogEntry>& _internal_logs() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::LogEntry>* _internal_mutable_logs();
  public:
  const ::viam::common::v1::LogEntry& logs(int index) const;
  ::viam::common::v1::LogEntry* add_logs();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::LogEntry >&
      logs() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.LogRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::LogEntry > logs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class GetStatusResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.GetStatusResponse) */ {
 public:
  inline GetStatusResponse() : GetStatusResponse(nullptr) {}
  ~GetStatusResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetStatusResponse(const GetStatusResponse& from)
      : GetStatusResponse(nullptr, from) {}
  GetStatusResponse(GetStatusResponse&& from) noexcept
    : GetStatusResponse() {
    *this = ::std::move(from);
  }

  inline GetStatusResponse& operator=(const GetStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatusResponse& operator=(GetStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatusResponse* internal_default_instance() {
    return reinterpret_cast<const GetStatusResponse*>(
               &_GetStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(GetStatusResponse& a, GetStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetStatusResponse& from) {
    GetStatusResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetStatusResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.GetStatusResponse";
  }
  protected:
  explicit GetStatusResponse(::google::protobuf::Arena* arena);
  GetStatusResponse(::google::protobuf::Arena* arena, const GetStatusResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
  };
  // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
  int status_size() const;
  private:
  int _internal_status_size() const;

  public:
  void clear_status() ;
  ::viam::robot::v1::Status* mutable_status(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Status >*
      mutable_status();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Status>& _internal_status() const;
  ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Status>* _internal_mutable_status();
  public:
  const ::viam::robot::v1::Status& status(int index) const;
  ::viam::robot::v1::Status* add_status();
  const ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Status >&
      status() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.GetStatusResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Status > status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class GetSessionsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.GetSessionsResponse) */ {
 public:
  inline GetSessionsResponse() : GetSessionsResponse(nullptr) {}
  ~GetSessionsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSessionsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetSessionsResponse(const GetSessionsResponse& from)
      : GetSessionsResponse(nullptr, from) {}
  GetSessionsResponse(GetSessionsResponse&& from) noexcept
    : GetSessionsResponse() {
    *this = ::std::move(from);
  }

  inline GetSessionsResponse& operator=(const GetSessionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSessionsResponse& operator=(GetSessionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSessionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSessionsResponse* internal_default_instance() {
    return reinterpret_cast<const GetSessionsResponse*>(
               &_GetSessionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(GetSessionsResponse& a, GetSessionsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSessionsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSessionsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSessionsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSessionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSessionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetSessionsResponse& from) {
    GetSessionsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetSessionsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.GetSessionsResponse";
  }
  protected:
  explicit GetSessionsResponse(::google::protobuf::Arena* arena);
  GetSessionsResponse(::google::protobuf::Arena* arena, const GetSessionsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSessionsFieldNumber = 1,
  };
  // repeated .viam.robot.v1.Session sessions = 1 [json_name = "sessions"];
  int sessions_size() const;
  private:
  int _internal_sessions_size() const;

  public:
  void clear_sessions() ;
  ::viam::robot::v1::Session* mutable_sessions(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Session >*
      mutable_sessions();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Session>& _internal_sessions() const;
  ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Session>* _internal_mutable_sessions();
  public:
  const ::viam::robot::v1::Session& sessions(int index) const;
  ::viam::robot::v1::Session* add_sessions();
  const ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Session >&
      sessions() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.GetSessionsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Session > sessions_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class GetOperationsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.GetOperationsResponse) */ {
 public:
  inline GetOperationsResponse() : GetOperationsResponse(nullptr) {}
  ~GetOperationsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetOperationsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetOperationsResponse(const GetOperationsResponse& from)
      : GetOperationsResponse(nullptr, from) {}
  GetOperationsResponse(GetOperationsResponse&& from) noexcept
    : GetOperationsResponse() {
    *this = ::std::move(from);
  }

  inline GetOperationsResponse& operator=(const GetOperationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOperationsResponse& operator=(GetOperationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOperationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOperationsResponse* internal_default_instance() {
    return reinterpret_cast<const GetOperationsResponse*>(
               &_GetOperationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(GetOperationsResponse& a, GetOperationsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOperationsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOperationsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOperationsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetOperationsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOperationsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetOperationsResponse& from) {
    GetOperationsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetOperationsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.GetOperationsResponse";
  }
  protected:
  explicit GetOperationsResponse(::google::protobuf::Arena* arena);
  GetOperationsResponse(::google::protobuf::Arena* arena, const GetOperationsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOperationsFieldNumber = 1,
  };
  // repeated .viam.robot.v1.Operation operations = 1 [json_name = "operations"];
  int operations_size() const;
  private:
  int _internal_operations_size() const;

  public:
  void clear_operations() ;
  ::viam::robot::v1::Operation* mutable_operations(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Operation >*
      mutable_operations();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Operation>& _internal_operations() const;
  ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Operation>* _internal_mutable_operations();
  public:
  const ::viam::robot::v1::Operation& operations(int index) const;
  ::viam::robot::v1::Operation* add_operations();
  const ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Operation >&
      operations() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.GetOperationsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Operation > operations_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class GetMachineStatusResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.GetMachineStatusResponse) */ {
 public:
  inline GetMachineStatusResponse() : GetMachineStatusResponse(nullptr) {}
  ~GetMachineStatusResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetMachineStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetMachineStatusResponse(const GetMachineStatusResponse& from)
      : GetMachineStatusResponse(nullptr, from) {}
  GetMachineStatusResponse(GetMachineStatusResponse&& from) noexcept
    : GetMachineStatusResponse() {
    *this = ::std::move(from);
  }

  inline GetMachineStatusResponse& operator=(const GetMachineStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMachineStatusResponse& operator=(GetMachineStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMachineStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMachineStatusResponse* internal_default_instance() {
    return reinterpret_cast<const GetMachineStatusResponse*>(
               &_GetMachineStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(GetMachineStatusResponse& a, GetMachineStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMachineStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMachineStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMachineStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetMachineStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMachineStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetMachineStatusResponse& from) {
    GetMachineStatusResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetMachineStatusResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.GetMachineStatusResponse";
  }
  protected:
  explicit GetMachineStatusResponse(::google::protobuf::Arena* arena);
  GetMachineStatusResponse(::google::protobuf::Arena* arena, const GetMachineStatusResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResourcesFieldNumber = 1,
  };
  // repeated .viam.robot.v1.ResourceStatus resources = 1 [json_name = "resources"];
  int resources_size() const;
  private:
  int _internal_resources_size() const;

  public:
  void clear_resources() ;
  ::viam::robot::v1::ResourceStatus* mutable_resources(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::ResourceStatus >*
      mutable_resources();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::ResourceStatus>& _internal_resources() const;
  ::google::protobuf::RepeatedPtrField<::viam::robot::v1::ResourceStatus>* _internal_mutable_resources();
  public:
  const ::viam::robot::v1::ResourceStatus& resources(int index) const;
  ::viam::robot::v1::ResourceStatus* add_resources();
  const ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::ResourceStatus >&
      resources() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.GetMachineStatusResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::ResourceStatus > resources_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class DiscoverComponentsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.DiscoverComponentsResponse) */ {
 public:
  inline DiscoverComponentsResponse() : DiscoverComponentsResponse(nullptr) {}
  ~DiscoverComponentsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DiscoverComponentsResponse(::google::protobuf::internal::ConstantInitialized);

  inline DiscoverComponentsResponse(const DiscoverComponentsResponse& from)
      : DiscoverComponentsResponse(nullptr, from) {}
  DiscoverComponentsResponse(DiscoverComponentsResponse&& from) noexcept
    : DiscoverComponentsResponse() {
    *this = ::std::move(from);
  }

  inline DiscoverComponentsResponse& operator=(const DiscoverComponentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DiscoverComponentsResponse& operator=(DiscoverComponentsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DiscoverComponentsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DiscoverComponentsResponse* internal_default_instance() {
    return reinterpret_cast<const DiscoverComponentsResponse*>(
               &_DiscoverComponentsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(DiscoverComponentsResponse& a, DiscoverComponentsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DiscoverComponentsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DiscoverComponentsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DiscoverComponentsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DiscoverComponentsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DiscoverComponentsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DiscoverComponentsResponse& from) {
    DiscoverComponentsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DiscoverComponentsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.DiscoverComponentsResponse";
  }
  protected:
  explicit DiscoverComponentsResponse(::google::protobuf::Arena* arena);
  DiscoverComponentsResponse(::google::protobuf::Arena* arena, const DiscoverComponentsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDiscoveryFieldNumber = 1,
  };
  // repeated .viam.robot.v1.Discovery discovery = 1 [json_name = "discovery"];
  int discovery_size() const;
  private:
  int _internal_discovery_size() const;

  public:
  void clear_discovery() ;
  ::viam::robot::v1::Discovery* mutable_discovery(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Discovery >*
      mutable_discovery();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Discovery>& _internal_discovery() const;
  ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Discovery>* _internal_mutable_discovery();
  public:
  const ::viam::robot::v1::Discovery& discovery(int index) const;
  ::viam::robot::v1::Discovery* add_discovery();
  const ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Discovery >&
      discovery() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.DiscoverComponentsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::Discovery > discovery_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class TransformPoseRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.TransformPoseRequest) */ {
 public:
  inline TransformPoseRequest() : TransformPoseRequest(nullptr) {}
  ~TransformPoseRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TransformPoseRequest(::google::protobuf::internal::ConstantInitialized);

  inline TransformPoseRequest(const TransformPoseRequest& from)
      : TransformPoseRequest(nullptr, from) {}
  TransformPoseRequest(TransformPoseRequest&& from) noexcept
    : TransformPoseRequest() {
    *this = ::std::move(from);
  }

  inline TransformPoseRequest& operator=(const TransformPoseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransformPoseRequest& operator=(TransformPoseRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransformPoseRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransformPoseRequest* internal_default_instance() {
    return reinterpret_cast<const TransformPoseRequest*>(
               &_TransformPoseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(TransformPoseRequest& a, TransformPoseRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TransformPoseRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransformPoseRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransformPoseRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TransformPoseRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransformPoseRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TransformPoseRequest& from) {
    TransformPoseRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TransformPoseRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.TransformPoseRequest";
  }
  protected:
  explicit TransformPoseRequest(::google::protobuf::Arena* arena);
  TransformPoseRequest(::google::protobuf::Arena* arena, const TransformPoseRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSupplementalTransformsFieldNumber = 3,
    kDestinationFieldNumber = 2,
    kSourceFieldNumber = 1,
  };
  // repeated .viam.common.v1.Transform supplemental_transforms = 3 [json_name = "supplementalTransforms"];
  int supplemental_transforms_size() const;
  private:
  int _internal_supplemental_transforms_size() const;

  public:
  void clear_supplemental_transforms() ;
  ::viam::common::v1::Transform* mutable_supplemental_transforms(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Transform >*
      mutable_supplemental_transforms();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>& _internal_supplemental_transforms() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>* _internal_mutable_supplemental_transforms();
  public:
  const ::viam::common::v1::Transform& supplemental_transforms(int index) const;
  ::viam::common::v1::Transform* add_supplemental_transforms();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Transform >&
      supplemental_transforms() const;
  // string destination = 2 [json_name = "destination"];
  void clear_destination() ;
  const std::string& destination() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_destination(Arg_&& arg, Args_... args);
  std::string* mutable_destination();
  PROTOBUF_NODISCARD std::string* release_destination();
  void set_allocated_destination(std::string* value);

  private:
  const std::string& _internal_destination() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_destination(
      const std::string& value);
  std::string* _internal_mutable_destination();

  public:
  // .viam.common.v1.PoseInFrame source = 1 [json_name = "source"];
  bool has_source() const;
  void clear_source() ;
  const ::viam::common::v1::PoseInFrame& source() const;
  PROTOBUF_NODISCARD ::viam::common::v1::PoseInFrame* release_source();
  ::viam::common::v1::PoseInFrame* mutable_source();
  void set_allocated_source(::viam::common::v1::PoseInFrame* value);
  void unsafe_arena_set_allocated_source(::viam::common::v1::PoseInFrame* value);
  ::viam::common::v1::PoseInFrame* unsafe_arena_release_source();

  private:
  const ::viam::common::v1::PoseInFrame& _internal_source() const;
  ::viam::common::v1::PoseInFrame* _internal_mutable_source();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.TransformPoseRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Transform > supplemental_transforms_;
    ::google::protobuf::internal::ArenaStringPtr destination_;
    ::viam::common::v1::PoseInFrame* source_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class FrameSystemConfigRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.FrameSystemConfigRequest) */ {
 public:
  inline FrameSystemConfigRequest() : FrameSystemConfigRequest(nullptr) {}
  ~FrameSystemConfigRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrameSystemConfigRequest(::google::protobuf::internal::ConstantInitialized);

  inline FrameSystemConfigRequest(const FrameSystemConfigRequest& from)
      : FrameSystemConfigRequest(nullptr, from) {}
  FrameSystemConfigRequest(FrameSystemConfigRequest&& from) noexcept
    : FrameSystemConfigRequest() {
    *this = ::std::move(from);
  }

  inline FrameSystemConfigRequest& operator=(const FrameSystemConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrameSystemConfigRequest& operator=(FrameSystemConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrameSystemConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrameSystemConfigRequest* internal_default_instance() {
    return reinterpret_cast<const FrameSystemConfigRequest*>(
               &_FrameSystemConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(FrameSystemConfigRequest& a, FrameSystemConfigRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FrameSystemConfigRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrameSystemConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrameSystemConfigRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrameSystemConfigRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrameSystemConfigRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrameSystemConfigRequest& from) {
    FrameSystemConfigRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FrameSystemConfigRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.FrameSystemConfigRequest";
  }
  protected:
  explicit FrameSystemConfigRequest(::google::protobuf::Arena* arena);
  FrameSystemConfigRequest(::google::protobuf::Arena* arena, const FrameSystemConfigRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSupplementalTransformsFieldNumber = 1,
  };
  // repeated .viam.common.v1.Transform supplemental_transforms = 1 [json_name = "supplementalTransforms"];
  int supplemental_transforms_size() const;
  private:
  int _internal_supplemental_transforms_size() const;

  public:
  void clear_supplemental_transforms() ;
  ::viam::common::v1::Transform* mutable_supplemental_transforms(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Transform >*
      mutable_supplemental_transforms();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>& _internal_supplemental_transforms() const;
  ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>* _internal_mutable_supplemental_transforms();
  public:
  const ::viam::common::v1::Transform& supplemental_transforms(int index) const;
  ::viam::common::v1::Transform* add_supplemental_transforms();
  const ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Transform >&
      supplemental_transforms() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.FrameSystemConfigRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::common::v1::Transform > supplemental_transforms_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class FrameSystemConfig final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.FrameSystemConfig) */ {
 public:
  inline FrameSystemConfig() : FrameSystemConfig(nullptr) {}
  ~FrameSystemConfig() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrameSystemConfig(::google::protobuf::internal::ConstantInitialized);

  inline FrameSystemConfig(const FrameSystemConfig& from)
      : FrameSystemConfig(nullptr, from) {}
  FrameSystemConfig(FrameSystemConfig&& from) noexcept
    : FrameSystemConfig() {
    *this = ::std::move(from);
  }

  inline FrameSystemConfig& operator=(const FrameSystemConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrameSystemConfig& operator=(FrameSystemConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrameSystemConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrameSystemConfig* internal_default_instance() {
    return reinterpret_cast<const FrameSystemConfig*>(
               &_FrameSystemConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(FrameSystemConfig& a, FrameSystemConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(FrameSystemConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrameSystemConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrameSystemConfig* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrameSystemConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrameSystemConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrameSystemConfig& from) {
    FrameSystemConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FrameSystemConfig* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.FrameSystemConfig";
  }
  protected:
  explicit FrameSystemConfig(::google::protobuf::Arena* arena);
  FrameSystemConfig(::google::protobuf::Arena* arena, const FrameSystemConfig& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrameFieldNumber = 1,
    kKinematicsFieldNumber = 2,
  };
  // .viam.common.v1.Transform frame = 1 [json_name = "frame"];
  bool has_frame() const;
  void clear_frame() ;
  const ::viam::common::v1::Transform& frame() const;
  PROTOBUF_NODISCARD ::viam::common::v1::Transform* release_frame();
  ::viam::common::v1::Transform* mutable_frame();
  void set_allocated_frame(::viam::common::v1::Transform* value);
  void unsafe_arena_set_allocated_frame(::viam::common::v1::Transform* value);
  ::viam::common::v1::Transform* unsafe_arena_release_frame();

  private:
  const ::viam::common::v1::Transform& _internal_frame() const;
  ::viam::common::v1::Transform* _internal_mutable_frame();

  public:
  // .google.protobuf.Struct kinematics = 2 [json_name = "kinematics"];
  bool has_kinematics() const;
  void clear_kinematics() ;
  const ::google::protobuf::Struct& kinematics() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_kinematics();
  ::google::protobuf::Struct* mutable_kinematics();
  void set_allocated_kinematics(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_kinematics(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_kinematics();

  private:
  const ::google::protobuf::Struct& _internal_kinematics() const;
  ::google::protobuf::Struct* _internal_mutable_kinematics();

  public:
  // @@protoc_insertion_point(class_scope:viam.robot.v1.FrameSystemConfig)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::common::v1::Transform* frame_;
    ::google::protobuf::Struct* kinematics_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};// -------------------------------------------------------------------

class FrameSystemConfigResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.robot.v1.FrameSystemConfigResponse) */ {
 public:
  inline FrameSystemConfigResponse() : FrameSystemConfigResponse(nullptr) {}
  ~FrameSystemConfigResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FrameSystemConfigResponse(::google::protobuf::internal::ConstantInitialized);

  inline FrameSystemConfigResponse(const FrameSystemConfigResponse& from)
      : FrameSystemConfigResponse(nullptr, from) {}
  FrameSystemConfigResponse(FrameSystemConfigResponse&& from) noexcept
    : FrameSystemConfigResponse() {
    *this = ::std::move(from);
  }

  inline FrameSystemConfigResponse& operator=(const FrameSystemConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrameSystemConfigResponse& operator=(FrameSystemConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrameSystemConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FrameSystemConfigResponse* internal_default_instance() {
    return reinterpret_cast<const FrameSystemConfigResponse*>(
               &_FrameSystemConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(FrameSystemConfigResponse& a, FrameSystemConfigResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FrameSystemConfigResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrameSystemConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrameSystemConfigResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FrameSystemConfigResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrameSystemConfigResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FrameSystemConfigResponse& from) {
    FrameSystemConfigResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FrameSystemConfigResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.robot.v1.FrameSystemConfigResponse";
  }
  protected:
  explicit FrameSystemConfigResponse(::google::protobuf::Arena* arena);
  FrameSystemConfigResponse(::google::protobuf::Arena* arena, const FrameSystemConfigResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrameSystemConfigsFieldNumber = 1,
  };
  // repeated .viam.robot.v1.FrameSystemConfig frame_system_configs = 1 [json_name = "frameSystemConfigs"];
  int frame_system_configs_size() const;
  private:
  int _internal_frame_system_configs_size() const;

  public:
  void clear_frame_system_configs() ;
  ::viam::robot::v1::FrameSystemConfig* mutable_frame_system_configs(int index);
  ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::FrameSystemConfig >*
      mutable_frame_system_configs();
  private:
  const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::FrameSystemConfig>& _internal_frame_system_configs() const;
  ::google::protobuf::RepeatedPtrField<::viam::robot::v1::FrameSystemConfig>* _internal_mutable_frame_system_configs();
  public:
  const ::viam::robot::v1::FrameSystemConfig& frame_system_configs(int index) const;
  ::viam::robot::v1::FrameSystemConfig* add_frame_system_configs();
  const ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::FrameSystemConfig >&
      frame_system_configs() const;
  // @@protoc_insertion_point(class_scope:viam.robot.v1.FrameSystemConfigResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::viam::robot::v1::FrameSystemConfig > frame_system_configs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2fv1_2frobot_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FrameSystemConfig

// .viam.common.v1.Transform frame = 1 [json_name = "frame"];
inline bool FrameSystemConfig::has_frame() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.frame_ != nullptr);
  return value;
}
inline const ::viam::common::v1::Transform& FrameSystemConfig::_internal_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::Transform* p = _impl_.frame_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::Transform&>(::viam::common::v1::_Transform_default_instance_);
}
inline const ::viam::common::v1::Transform& FrameSystemConfig::frame() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.FrameSystemConfig.frame)
  return _internal_frame();
}
inline void FrameSystemConfig::unsafe_arena_set_allocated_frame(::viam::common::v1::Transform* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.frame_);
  }
  _impl_.frame_ = reinterpret_cast<::viam::common::v1::Transform*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.FrameSystemConfig.frame)
}
inline ::viam::common::v1::Transform* FrameSystemConfig::release_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Transform* released = _impl_.frame_;
  _impl_.frame_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::Transform* FrameSystemConfig::unsafe_arena_release_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.FrameSystemConfig.frame)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Transform* temp = _impl_.frame_;
  _impl_.frame_ = nullptr;
  return temp;
}
inline ::viam::common::v1::Transform* FrameSystemConfig::_internal_mutable_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.frame_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::Transform>(GetArena());
    _impl_.frame_ = reinterpret_cast<::viam::common::v1::Transform*>(p);
  }
  return _impl_.frame_;
}
inline ::viam::common::v1::Transform* FrameSystemConfig::mutable_frame() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::Transform* _msg = _internal_mutable_frame();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.FrameSystemConfig.frame)
  return _msg;
}
inline void FrameSystemConfig::set_allocated_frame(::viam::common::v1::Transform* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.frame_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.frame_ = reinterpret_cast<::viam::common::v1::Transform*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.FrameSystemConfig.frame)
}

// .google.protobuf.Struct kinematics = 2 [json_name = "kinematics"];
inline bool FrameSystemConfig::has_kinematics() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.kinematics_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& FrameSystemConfig::_internal_kinematics() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.kinematics_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& FrameSystemConfig::kinematics() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.FrameSystemConfig.kinematics)
  return _internal_kinematics();
}
inline void FrameSystemConfig::unsafe_arena_set_allocated_kinematics(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.kinematics_);
  }
  _impl_.kinematics_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.FrameSystemConfig.kinematics)
}
inline ::google::protobuf::Struct* FrameSystemConfig::release_kinematics() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* released = _impl_.kinematics_;
  _impl_.kinematics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* FrameSystemConfig::unsafe_arena_release_kinematics() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.FrameSystemConfig.kinematics)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* temp = _impl_.kinematics_;
  _impl_.kinematics_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* FrameSystemConfig::_internal_mutable_kinematics() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.kinematics_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.kinematics_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.kinematics_;
}
inline ::google::protobuf::Struct* FrameSystemConfig::mutable_kinematics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_kinematics();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.FrameSystemConfig.kinematics)
  return _msg;
}
inline void FrameSystemConfig::set_allocated_kinematics(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.kinematics_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.kinematics_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.FrameSystemConfig.kinematics)
}

// -------------------------------------------------------------------

// FrameSystemConfigRequest

// repeated .viam.common.v1.Transform supplemental_transforms = 1 [json_name = "supplementalTransforms"];
inline int FrameSystemConfigRequest::_internal_supplemental_transforms_size() const {
  return _internal_supplemental_transforms().size();
}
inline int FrameSystemConfigRequest::supplemental_transforms_size() const {
  return _internal_supplemental_transforms_size();
}
inline ::viam::common::v1::Transform* FrameSystemConfigRequest::mutable_supplemental_transforms(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.FrameSystemConfigRequest.supplemental_transforms)
  return _internal_mutable_supplemental_transforms()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>* FrameSystemConfigRequest::mutable_supplemental_transforms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.FrameSystemConfigRequest.supplemental_transforms)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_supplemental_transforms();
}
inline const ::viam::common::v1::Transform& FrameSystemConfigRequest::supplemental_transforms(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.FrameSystemConfigRequest.supplemental_transforms)
  return _internal_supplemental_transforms().Get(index);
}
inline ::viam::common::v1::Transform* FrameSystemConfigRequest::add_supplemental_transforms() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::Transform* _add = _internal_mutable_supplemental_transforms()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.FrameSystemConfigRequest.supplemental_transforms)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>& FrameSystemConfigRequest::supplemental_transforms() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.FrameSystemConfigRequest.supplemental_transforms)
  return _internal_supplemental_transforms();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>&
FrameSystemConfigRequest::_internal_supplemental_transforms() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.supplemental_transforms_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>*
FrameSystemConfigRequest::_internal_mutable_supplemental_transforms() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.supplemental_transforms_;
}

// -------------------------------------------------------------------

// FrameSystemConfigResponse

// repeated .viam.robot.v1.FrameSystemConfig frame_system_configs = 1 [json_name = "frameSystemConfigs"];
inline int FrameSystemConfigResponse::_internal_frame_system_configs_size() const {
  return _internal_frame_system_configs().size();
}
inline int FrameSystemConfigResponse::frame_system_configs_size() const {
  return _internal_frame_system_configs_size();
}
inline void FrameSystemConfigResponse::clear_frame_system_configs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.frame_system_configs_.Clear();
}
inline ::viam::robot::v1::FrameSystemConfig* FrameSystemConfigResponse::mutable_frame_system_configs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.FrameSystemConfigResponse.frame_system_configs)
  return _internal_mutable_frame_system_configs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::FrameSystemConfig>* FrameSystemConfigResponse::mutable_frame_system_configs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.FrameSystemConfigResponse.frame_system_configs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_frame_system_configs();
}
inline const ::viam::robot::v1::FrameSystemConfig& FrameSystemConfigResponse::frame_system_configs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.FrameSystemConfigResponse.frame_system_configs)
  return _internal_frame_system_configs().Get(index);
}
inline ::viam::robot::v1::FrameSystemConfig* FrameSystemConfigResponse::add_frame_system_configs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::robot::v1::FrameSystemConfig* _add = _internal_mutable_frame_system_configs()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.FrameSystemConfigResponse.frame_system_configs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::FrameSystemConfig>& FrameSystemConfigResponse::frame_system_configs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.FrameSystemConfigResponse.frame_system_configs)
  return _internal_frame_system_configs();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::FrameSystemConfig>&
FrameSystemConfigResponse::_internal_frame_system_configs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.frame_system_configs_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::FrameSystemConfig>*
FrameSystemConfigResponse::_internal_mutable_frame_system_configs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.frame_system_configs_;
}

// -------------------------------------------------------------------

// TransformPoseRequest

// .viam.common.v1.PoseInFrame source = 1 [json_name = "source"];
inline bool TransformPoseRequest::has_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_ != nullptr);
  return value;
}
inline const ::viam::common::v1::PoseInFrame& TransformPoseRequest::_internal_source() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::PoseInFrame* p = _impl_.source_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::PoseInFrame&>(::viam::common::v1::_PoseInFrame_default_instance_);
}
inline const ::viam::common::v1::PoseInFrame& TransformPoseRequest::source() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.TransformPoseRequest.source)
  return _internal_source();
}
inline void TransformPoseRequest::unsafe_arena_set_allocated_source(::viam::common::v1::PoseInFrame* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_);
  }
  _impl_.source_ = reinterpret_cast<::viam::common::v1::PoseInFrame*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.TransformPoseRequest.source)
}
inline ::viam::common::v1::PoseInFrame* TransformPoseRequest::release_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::PoseInFrame* released = _impl_.source_;
  _impl_.source_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::PoseInFrame* TransformPoseRequest::unsafe_arena_release_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.TransformPoseRequest.source)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::PoseInFrame* temp = _impl_.source_;
  _impl_.source_ = nullptr;
  return temp;
}
inline ::viam::common::v1::PoseInFrame* TransformPoseRequest::_internal_mutable_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.source_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::PoseInFrame>(GetArena());
    _impl_.source_ = reinterpret_cast<::viam::common::v1::PoseInFrame*>(p);
  }
  return _impl_.source_;
}
inline ::viam::common::v1::PoseInFrame* TransformPoseRequest::mutable_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::PoseInFrame* _msg = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.TransformPoseRequest.source)
  return _msg;
}
inline void TransformPoseRequest::set_allocated_source(::viam::common::v1::PoseInFrame* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.source_ = reinterpret_cast<::viam::common::v1::PoseInFrame*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.TransformPoseRequest.source)
}

// string destination = 2 [json_name = "destination"];
inline void TransformPoseRequest::clear_destination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.destination_.ClearToEmpty();
}
inline const std::string& TransformPoseRequest::destination() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.TransformPoseRequest.destination)
  return _internal_destination();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransformPoseRequest::set_destination(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.destination_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.TransformPoseRequest.destination)
}
inline std::string* TransformPoseRequest::mutable_destination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_destination();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.TransformPoseRequest.destination)
  return _s;
}
inline const std::string& TransformPoseRequest::_internal_destination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.destination_.Get();
}
inline void TransformPoseRequest::_internal_set_destination(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.destination_.Set(value, GetArena());
}
inline std::string* TransformPoseRequest::_internal_mutable_destination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.destination_.Mutable( GetArena());
}
inline std::string* TransformPoseRequest::release_destination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.TransformPoseRequest.destination)
  return _impl_.destination_.Release();
}
inline void TransformPoseRequest::set_allocated_destination(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.destination_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.destination_.IsDefault()) {
          _impl_.destination_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.TransformPoseRequest.destination)
}

// repeated .viam.common.v1.Transform supplemental_transforms = 3 [json_name = "supplementalTransforms"];
inline int TransformPoseRequest::_internal_supplemental_transforms_size() const {
  return _internal_supplemental_transforms().size();
}
inline int TransformPoseRequest::supplemental_transforms_size() const {
  return _internal_supplemental_transforms_size();
}
inline ::viam::common::v1::Transform* TransformPoseRequest::mutable_supplemental_transforms(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.TransformPoseRequest.supplemental_transforms)
  return _internal_mutable_supplemental_transforms()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>* TransformPoseRequest::mutable_supplemental_transforms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.TransformPoseRequest.supplemental_transforms)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_supplemental_transforms();
}
inline const ::viam::common::v1::Transform& TransformPoseRequest::supplemental_transforms(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.TransformPoseRequest.supplemental_transforms)
  return _internal_supplemental_transforms().Get(index);
}
inline ::viam::common::v1::Transform* TransformPoseRequest::add_supplemental_transforms() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::Transform* _add = _internal_mutable_supplemental_transforms()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.TransformPoseRequest.supplemental_transforms)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>& TransformPoseRequest::supplemental_transforms() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.TransformPoseRequest.supplemental_transforms)
  return _internal_supplemental_transforms();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>&
TransformPoseRequest::_internal_supplemental_transforms() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.supplemental_transforms_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::Transform>*
TransformPoseRequest::_internal_mutable_supplemental_transforms() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.supplemental_transforms_;
}

// -------------------------------------------------------------------

// TransformPoseResponse

// .viam.common.v1.PoseInFrame pose = 1 [json_name = "pose"];
inline bool TransformPoseResponse::has_pose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pose_ != nullptr);
  return value;
}
inline const ::viam::common::v1::PoseInFrame& TransformPoseResponse::_internal_pose() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::PoseInFrame* p = _impl_.pose_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::PoseInFrame&>(::viam::common::v1::_PoseInFrame_default_instance_);
}
inline const ::viam::common::v1::PoseInFrame& TransformPoseResponse::pose() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.TransformPoseResponse.pose)
  return _internal_pose();
}
inline void TransformPoseResponse::unsafe_arena_set_allocated_pose(::viam::common::v1::PoseInFrame* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }
  _impl_.pose_ = reinterpret_cast<::viam::common::v1::PoseInFrame*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.TransformPoseResponse.pose)
}
inline ::viam::common::v1::PoseInFrame* TransformPoseResponse::release_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::PoseInFrame* released = _impl_.pose_;
  _impl_.pose_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::PoseInFrame* TransformPoseResponse::unsafe_arena_release_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.TransformPoseResponse.pose)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::PoseInFrame* temp = _impl_.pose_;
  _impl_.pose_ = nullptr;
  return temp;
}
inline ::viam::common::v1::PoseInFrame* TransformPoseResponse::_internal_mutable_pose() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pose_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::PoseInFrame>(GetArena());
    _impl_.pose_ = reinterpret_cast<::viam::common::v1::PoseInFrame*>(p);
  }
  return _impl_.pose_;
}
inline ::viam::common::v1::PoseInFrame* TransformPoseResponse::mutable_pose() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::PoseInFrame* _msg = _internal_mutable_pose();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.TransformPoseResponse.pose)
  return _msg;
}
inline void TransformPoseResponse::set_allocated_pose(::viam::common::v1::PoseInFrame* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pose_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pose_ = reinterpret_cast<::viam::common::v1::PoseInFrame*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.TransformPoseResponse.pose)
}

// -------------------------------------------------------------------

// TransformPCDRequest

// bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
inline void TransformPCDRequest::clear_point_cloud_pcd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.point_cloud_pcd_.ClearToEmpty();
}
inline const std::string& TransformPCDRequest::point_cloud_pcd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.TransformPCDRequest.point_cloud_pcd)
  return _internal_point_cloud_pcd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransformPCDRequest::set_point_cloud_pcd(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.point_cloud_pcd_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.TransformPCDRequest.point_cloud_pcd)
}
inline std::string* TransformPCDRequest::mutable_point_cloud_pcd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_point_cloud_pcd();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.TransformPCDRequest.point_cloud_pcd)
  return _s;
}
inline const std::string& TransformPCDRequest::_internal_point_cloud_pcd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.point_cloud_pcd_.Get();
}
inline void TransformPCDRequest::_internal_set_point_cloud_pcd(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.point_cloud_pcd_.Set(value, GetArena());
}
inline std::string* TransformPCDRequest::_internal_mutable_point_cloud_pcd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.point_cloud_pcd_.Mutable( GetArena());
}
inline std::string* TransformPCDRequest::release_point_cloud_pcd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.TransformPCDRequest.point_cloud_pcd)
  return _impl_.point_cloud_pcd_.Release();
}
inline void TransformPCDRequest::set_allocated_point_cloud_pcd(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.point_cloud_pcd_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.point_cloud_pcd_.IsDefault()) {
          _impl_.point_cloud_pcd_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.TransformPCDRequest.point_cloud_pcd)
}

// string source = 2 [json_name = "source"];
inline void TransformPCDRequest::clear_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.source_.ClearToEmpty();
}
inline const std::string& TransformPCDRequest::source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.TransformPCDRequest.source)
  return _internal_source();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransformPCDRequest::set_source(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.source_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.TransformPCDRequest.source)
}
inline std::string* TransformPCDRequest::mutable_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.TransformPCDRequest.source)
  return _s;
}
inline const std::string& TransformPCDRequest::_internal_source() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.source_.Get();
}
inline void TransformPCDRequest::_internal_set_source(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.source_.Set(value, GetArena());
}
inline std::string* TransformPCDRequest::_internal_mutable_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.source_.Mutable( GetArena());
}
inline std::string* TransformPCDRequest::release_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.TransformPCDRequest.source)
  return _impl_.source_.Release();
}
inline void TransformPCDRequest::set_allocated_source(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.source_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_.IsDefault()) {
          _impl_.source_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.TransformPCDRequest.source)
}

// string destination = 3 [json_name = "destination"];
inline void TransformPCDRequest::clear_destination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.destination_.ClearToEmpty();
}
inline const std::string& TransformPCDRequest::destination() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.TransformPCDRequest.destination)
  return _internal_destination();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransformPCDRequest::set_destination(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.destination_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.TransformPCDRequest.destination)
}
inline std::string* TransformPCDRequest::mutable_destination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_destination();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.TransformPCDRequest.destination)
  return _s;
}
inline const std::string& TransformPCDRequest::_internal_destination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.destination_.Get();
}
inline void TransformPCDRequest::_internal_set_destination(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.destination_.Set(value, GetArena());
}
inline std::string* TransformPCDRequest::_internal_mutable_destination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.destination_.Mutable( GetArena());
}
inline std::string* TransformPCDRequest::release_destination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.TransformPCDRequest.destination)
  return _impl_.destination_.Release();
}
inline void TransformPCDRequest::set_allocated_destination(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.destination_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.destination_.IsDefault()) {
          _impl_.destination_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.TransformPCDRequest.destination)
}

// -------------------------------------------------------------------

// TransformPCDResponse

// bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
inline void TransformPCDResponse::clear_point_cloud_pcd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.point_cloud_pcd_.ClearToEmpty();
}
inline const std::string& TransformPCDResponse::point_cloud_pcd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.TransformPCDResponse.point_cloud_pcd)
  return _internal_point_cloud_pcd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TransformPCDResponse::set_point_cloud_pcd(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.point_cloud_pcd_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.TransformPCDResponse.point_cloud_pcd)
}
inline std::string* TransformPCDResponse::mutable_point_cloud_pcd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_point_cloud_pcd();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.TransformPCDResponse.point_cloud_pcd)
  return _s;
}
inline const std::string& TransformPCDResponse::_internal_point_cloud_pcd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.point_cloud_pcd_.Get();
}
inline void TransformPCDResponse::_internal_set_point_cloud_pcd(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.point_cloud_pcd_.Set(value, GetArena());
}
inline std::string* TransformPCDResponse::_internal_mutable_point_cloud_pcd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.point_cloud_pcd_.Mutable( GetArena());
}
inline std::string* TransformPCDResponse::release_point_cloud_pcd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.TransformPCDResponse.point_cloud_pcd)
  return _impl_.point_cloud_pcd_.Release();
}
inline void TransformPCDResponse::set_allocated_point_cloud_pcd(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.point_cloud_pcd_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.point_cloud_pcd_.IsDefault()) {
          _impl_.point_cloud_pcd_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.TransformPCDResponse.point_cloud_pcd)
}

// -------------------------------------------------------------------

// ResourceNamesRequest

// -------------------------------------------------------------------

// ResourceNamesResponse

// repeated .viam.common.v1.ResourceName resources = 1 [json_name = "resources"];
inline int ResourceNamesResponse::_internal_resources_size() const {
  return _internal_resources().size();
}
inline int ResourceNamesResponse::resources_size() const {
  return _internal_resources_size();
}
inline ::viam::common::v1::ResourceName* ResourceNamesResponse::mutable_resources(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.ResourceNamesResponse.resources)
  return _internal_mutable_resources()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>* ResourceNamesResponse::mutable_resources()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.ResourceNamesResponse.resources)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_resources();
}
inline const ::viam::common::v1::ResourceName& ResourceNamesResponse::resources(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.ResourceNamesResponse.resources)
  return _internal_resources().Get(index);
}
inline ::viam::common::v1::ResourceName* ResourceNamesResponse::add_resources() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::ResourceName* _add = _internal_mutable_resources()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.ResourceNamesResponse.resources)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>& ResourceNamesResponse::resources() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.ResourceNamesResponse.resources)
  return _internal_resources();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>&
ResourceNamesResponse::_internal_resources() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resources_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>*
ResourceNamesResponse::_internal_mutable_resources() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.resources_;
}

// -------------------------------------------------------------------

// ResourceRPCSubtype

// .viam.common.v1.ResourceName subtype = 1 [json_name = "subtype"];
inline bool ResourceRPCSubtype::has_subtype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.subtype_ != nullptr);
  return value;
}
inline const ::viam::common::v1::ResourceName& ResourceRPCSubtype::_internal_subtype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::ResourceName* p = _impl_.subtype_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::ResourceName&>(::viam::common::v1::_ResourceName_default_instance_);
}
inline const ::viam::common::v1::ResourceName& ResourceRPCSubtype::subtype() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.ResourceRPCSubtype.subtype)
  return _internal_subtype();
}
inline void ResourceRPCSubtype::unsafe_arena_set_allocated_subtype(::viam::common::v1::ResourceName* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.subtype_);
  }
  _impl_.subtype_ = reinterpret_cast<::viam::common::v1::ResourceName*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.ResourceRPCSubtype.subtype)
}
inline ::viam::common::v1::ResourceName* ResourceRPCSubtype::release_subtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::ResourceName* released = _impl_.subtype_;
  _impl_.subtype_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::ResourceName* ResourceRPCSubtype::unsafe_arena_release_subtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.ResourceRPCSubtype.subtype)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::ResourceName* temp = _impl_.subtype_;
  _impl_.subtype_ = nullptr;
  return temp;
}
inline ::viam::common::v1::ResourceName* ResourceRPCSubtype::_internal_mutable_subtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.subtype_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::ResourceName>(GetArena());
    _impl_.subtype_ = reinterpret_cast<::viam::common::v1::ResourceName*>(p);
  }
  return _impl_.subtype_;
}
inline ::viam::common::v1::ResourceName* ResourceRPCSubtype::mutable_subtype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::ResourceName* _msg = _internal_mutable_subtype();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.ResourceRPCSubtype.subtype)
  return _msg;
}
inline void ResourceRPCSubtype::set_allocated_subtype(::viam::common::v1::ResourceName* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.subtype_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.subtype_ = reinterpret_cast<::viam::common::v1::ResourceName*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.ResourceRPCSubtype.subtype)
}

// string proto_service = 2 [json_name = "protoService"];
inline void ResourceRPCSubtype::clear_proto_service() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.proto_service_.ClearToEmpty();
}
inline const std::string& ResourceRPCSubtype::proto_service() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.ResourceRPCSubtype.proto_service)
  return _internal_proto_service();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResourceRPCSubtype::set_proto_service(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.proto_service_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.ResourceRPCSubtype.proto_service)
}
inline std::string* ResourceRPCSubtype::mutable_proto_service() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_proto_service();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.ResourceRPCSubtype.proto_service)
  return _s;
}
inline const std::string& ResourceRPCSubtype::_internal_proto_service() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.proto_service_.Get();
}
inline void ResourceRPCSubtype::_internal_set_proto_service(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.proto_service_.Set(value, GetArena());
}
inline std::string* ResourceRPCSubtype::_internal_mutable_proto_service() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.proto_service_.Mutable( GetArena());
}
inline std::string* ResourceRPCSubtype::release_proto_service() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.ResourceRPCSubtype.proto_service)
  return _impl_.proto_service_.Release();
}
inline void ResourceRPCSubtype::set_allocated_proto_service(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.proto_service_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.proto_service_.IsDefault()) {
          _impl_.proto_service_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.ResourceRPCSubtype.proto_service)
}

// -------------------------------------------------------------------

// ResourceRPCSubtypesRequest

// -------------------------------------------------------------------

// ResourceRPCSubtypesResponse

// repeated .viam.robot.v1.ResourceRPCSubtype resource_rpc_subtypes = 1 [json_name = "resourceRpcSubtypes"];
inline int ResourceRPCSubtypesResponse::_internal_resource_rpc_subtypes_size() const {
  return _internal_resource_rpc_subtypes().size();
}
inline int ResourceRPCSubtypesResponse::resource_rpc_subtypes_size() const {
  return _internal_resource_rpc_subtypes_size();
}
inline void ResourceRPCSubtypesResponse::clear_resource_rpc_subtypes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_rpc_subtypes_.Clear();
}
inline ::viam::robot::v1::ResourceRPCSubtype* ResourceRPCSubtypesResponse::mutable_resource_rpc_subtypes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.ResourceRPCSubtypesResponse.resource_rpc_subtypes)
  return _internal_mutable_resource_rpc_subtypes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::ResourceRPCSubtype>* ResourceRPCSubtypesResponse::mutable_resource_rpc_subtypes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.ResourceRPCSubtypesResponse.resource_rpc_subtypes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_resource_rpc_subtypes();
}
inline const ::viam::robot::v1::ResourceRPCSubtype& ResourceRPCSubtypesResponse::resource_rpc_subtypes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.ResourceRPCSubtypesResponse.resource_rpc_subtypes)
  return _internal_resource_rpc_subtypes().Get(index);
}
inline ::viam::robot::v1::ResourceRPCSubtype* ResourceRPCSubtypesResponse::add_resource_rpc_subtypes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::robot::v1::ResourceRPCSubtype* _add = _internal_mutable_resource_rpc_subtypes()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.ResourceRPCSubtypesResponse.resource_rpc_subtypes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::ResourceRPCSubtype>& ResourceRPCSubtypesResponse::resource_rpc_subtypes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.ResourceRPCSubtypesResponse.resource_rpc_subtypes)
  return _internal_resource_rpc_subtypes();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::ResourceRPCSubtype>&
ResourceRPCSubtypesResponse::_internal_resource_rpc_subtypes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_rpc_subtypes_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::ResourceRPCSubtype>*
ResourceRPCSubtypesResponse::_internal_mutable_resource_rpc_subtypes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.resource_rpc_subtypes_;
}

// -------------------------------------------------------------------

// Operation

// string id = 1 [json_name = "id"];
inline void Operation::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Operation::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.Operation.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operation::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.Operation.id)
}
inline std::string* Operation::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.Operation.id)
  return _s;
}
inline const std::string& Operation::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void Operation::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Operation::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Operation::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.Operation.id)
  return _impl_.id_.Release();
}
inline void Operation::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.Operation.id)
}

// string method = 2 [json_name = "method"];
inline void Operation::clear_method() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.method_.ClearToEmpty();
}
inline const std::string& Operation::method() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.Operation.method)
  return _internal_method();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operation::set_method(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.method_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.Operation.method)
}
inline std::string* Operation::mutable_method() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_method();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.Operation.method)
  return _s;
}
inline const std::string& Operation::_internal_method() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.method_.Get();
}
inline void Operation::_internal_set_method(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.method_.Set(value, GetArena());
}
inline std::string* Operation::_internal_mutable_method() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.method_.Mutable( GetArena());
}
inline std::string* Operation::release_method() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.Operation.method)
  return _impl_.method_.Release();
}
inline void Operation::set_allocated_method(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.method_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.method_.IsDefault()) {
          _impl_.method_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.Operation.method)
}

// .google.protobuf.Struct arguments = 3 [json_name = "arguments"];
inline bool Operation::has_arguments() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.arguments_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& Operation::_internal_arguments() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.arguments_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& Operation::arguments() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.Operation.arguments)
  return _internal_arguments();
}
inline void Operation::unsafe_arena_set_allocated_arguments(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.arguments_);
  }
  _impl_.arguments_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.Operation.arguments)
}
inline ::google::protobuf::Struct* Operation::release_arguments() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* released = _impl_.arguments_;
  _impl_.arguments_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* Operation::unsafe_arena_release_arguments() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.Operation.arguments)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* temp = _impl_.arguments_;
  _impl_.arguments_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* Operation::_internal_mutable_arguments() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.arguments_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.arguments_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.arguments_;
}
inline ::google::protobuf::Struct* Operation::mutable_arguments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_arguments();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.Operation.arguments)
  return _msg;
}
inline void Operation::set_allocated_arguments(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.arguments_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.arguments_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.Operation.arguments)
}

// .google.protobuf.Timestamp started = 4 [json_name = "started"];
inline bool Operation::has_started() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.started_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Operation::_internal_started() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.started_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Operation::started() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.Operation.started)
  return _internal_started();
}
inline void Operation::unsafe_arena_set_allocated_started(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.started_);
  }
  _impl_.started_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.Operation.started)
}
inline ::google::protobuf::Timestamp* Operation::release_started() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.started_;
  _impl_.started_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* Operation::unsafe_arena_release_started() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.Operation.started)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.started_;
  _impl_.started_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Operation::_internal_mutable_started() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.started_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.started_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.started_;
}
inline ::google::protobuf::Timestamp* Operation::mutable_started() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_started();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.Operation.started)
  return _msg;
}
inline void Operation::set_allocated_started(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.started_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.started_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.Operation.started)
}

// optional string session_id = 5 [json_name = "sessionId"];
inline bool Operation::has_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Operation::clear_session_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.session_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Operation::session_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.Operation.session_id)
  return _internal_session_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Operation::set_session_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.session_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.Operation.session_id)
}
inline std::string* Operation::mutable_session_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_session_id();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.Operation.session_id)
  return _s;
}
inline const std::string& Operation::_internal_session_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.session_id_.Get();
}
inline void Operation::_internal_set_session_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.session_id_.Set(value, GetArena());
}
inline std::string* Operation::_internal_mutable_session_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.session_id_.Mutable( GetArena());
}
inline std::string* Operation::release_session_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.Operation.session_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.session_id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.session_id_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Operation::set_allocated_session_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.session_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.session_id_.IsDefault()) {
          _impl_.session_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.Operation.session_id)
}

// -------------------------------------------------------------------

// GetOperationsRequest

// -------------------------------------------------------------------

// GetOperationsResponse

// repeated .viam.robot.v1.Operation operations = 1 [json_name = "operations"];
inline int GetOperationsResponse::_internal_operations_size() const {
  return _internal_operations().size();
}
inline int GetOperationsResponse::operations_size() const {
  return _internal_operations_size();
}
inline void GetOperationsResponse::clear_operations() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.operations_.Clear();
}
inline ::viam::robot::v1::Operation* GetOperationsResponse::mutable_operations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.GetOperationsResponse.operations)
  return _internal_mutable_operations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Operation>* GetOperationsResponse::mutable_operations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.GetOperationsResponse.operations)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_operations();
}
inline const ::viam::robot::v1::Operation& GetOperationsResponse::operations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.GetOperationsResponse.operations)
  return _internal_operations().Get(index);
}
inline ::viam::robot::v1::Operation* GetOperationsResponse::add_operations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::robot::v1::Operation* _add = _internal_mutable_operations()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.GetOperationsResponse.operations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Operation>& GetOperationsResponse::operations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.GetOperationsResponse.operations)
  return _internal_operations();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Operation>&
GetOperationsResponse::_internal_operations() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.operations_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Operation>*
GetOperationsResponse::_internal_mutable_operations() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.operations_;
}

// -------------------------------------------------------------------

// CancelOperationRequest

// string id = 1 [json_name = "id"];
inline void CancelOperationRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& CancelOperationRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.CancelOperationRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CancelOperationRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.CancelOperationRequest.id)
}
inline std::string* CancelOperationRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.CancelOperationRequest.id)
  return _s;
}
inline const std::string& CancelOperationRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void CancelOperationRequest::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* CancelOperationRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* CancelOperationRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.CancelOperationRequest.id)
  return _impl_.id_.Release();
}
inline void CancelOperationRequest::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.CancelOperationRequest.id)
}

// -------------------------------------------------------------------

// CancelOperationResponse

// -------------------------------------------------------------------

// BlockForOperationRequest

// string id = 1 [json_name = "id"];
inline void BlockForOperationRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& BlockForOperationRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.BlockForOperationRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlockForOperationRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.BlockForOperationRequest.id)
}
inline std::string* BlockForOperationRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.BlockForOperationRequest.id)
  return _s;
}
inline const std::string& BlockForOperationRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void BlockForOperationRequest::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* BlockForOperationRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* BlockForOperationRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.BlockForOperationRequest.id)
  return _impl_.id_.Release();
}
inline void BlockForOperationRequest::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.BlockForOperationRequest.id)
}

// -------------------------------------------------------------------

// BlockForOperationResponse

// -------------------------------------------------------------------

// PeerConnectionInfo

// .viam.robot.v1.PeerConnectionType type = 1 [json_name = "type"];
inline void PeerConnectionInfo::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = 0;
}
inline ::viam::robot::v1::PeerConnectionType PeerConnectionInfo::type() const {
  // @@protoc_insertion_point(field_get:viam.robot.v1.PeerConnectionInfo.type)
  return _internal_type();
}
inline void PeerConnectionInfo::set_type(::viam::robot::v1::PeerConnectionType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:viam.robot.v1.PeerConnectionInfo.type)
}
inline ::viam::robot::v1::PeerConnectionType PeerConnectionInfo::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::viam::robot::v1::PeerConnectionType>(_impl_.type_);
}
inline void PeerConnectionInfo::_internal_set_type(::viam::robot::v1::PeerConnectionType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// optional string remote_address = 2 [json_name = "remoteAddress"];
inline bool PeerConnectionInfo::has_remote_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PeerConnectionInfo::clear_remote_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.remote_address_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PeerConnectionInfo::remote_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.PeerConnectionInfo.remote_address)
  return _internal_remote_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PeerConnectionInfo::set_remote_address(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.remote_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.PeerConnectionInfo.remote_address)
}
inline std::string* PeerConnectionInfo::mutable_remote_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remote_address();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.PeerConnectionInfo.remote_address)
  return _s;
}
inline const std::string& PeerConnectionInfo::_internal_remote_address() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.remote_address_.Get();
}
inline void PeerConnectionInfo::_internal_set_remote_address(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.remote_address_.Set(value, GetArena());
}
inline std::string* PeerConnectionInfo::_internal_mutable_remote_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.remote_address_.Mutable( GetArena());
}
inline std::string* PeerConnectionInfo::release_remote_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.PeerConnectionInfo.remote_address)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.remote_address_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.remote_address_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void PeerConnectionInfo::set_allocated_remote_address(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.remote_address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.remote_address_.IsDefault()) {
          _impl_.remote_address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.PeerConnectionInfo.remote_address)
}

// optional string local_address = 3 [json_name = "localAddress"];
inline bool PeerConnectionInfo::has_local_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PeerConnectionInfo::clear_local_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.local_address_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& PeerConnectionInfo::local_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.PeerConnectionInfo.local_address)
  return _internal_local_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PeerConnectionInfo::set_local_address(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.local_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.PeerConnectionInfo.local_address)
}
inline std::string* PeerConnectionInfo::mutable_local_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_local_address();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.PeerConnectionInfo.local_address)
  return _s;
}
inline const std::string& PeerConnectionInfo::_internal_local_address() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.local_address_.Get();
}
inline void PeerConnectionInfo::_internal_set_local_address(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.local_address_.Set(value, GetArena());
}
inline std::string* PeerConnectionInfo::_internal_mutable_local_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.local_address_.Mutable( GetArena());
}
inline std::string* PeerConnectionInfo::release_local_address() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.PeerConnectionInfo.local_address)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.local_address_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.local_address_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void PeerConnectionInfo::set_allocated_local_address(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.local_address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.local_address_.IsDefault()) {
          _impl_.local_address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.PeerConnectionInfo.local_address)
}

// -------------------------------------------------------------------

// Session

// string id = 1 [json_name = "id"];
inline void Session::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Session::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.Session.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Session::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.Session.id)
}
inline std::string* Session::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.Session.id)
  return _s;
}
inline const std::string& Session::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void Session::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Session::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Session::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.Session.id)
  return _impl_.id_.Release();
}
inline void Session::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.Session.id)
}

// optional .viam.robot.v1.PeerConnectionInfo peer_connection_info = 2 [json_name = "peerConnectionInfo"];
inline bool Session::has_peer_connection_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.peer_connection_info_ != nullptr);
  return value;
}
inline void Session::clear_peer_connection_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.peer_connection_info_ != nullptr) _impl_.peer_connection_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::viam::robot::v1::PeerConnectionInfo& Session::_internal_peer_connection_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::robot::v1::PeerConnectionInfo* p = _impl_.peer_connection_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::robot::v1::PeerConnectionInfo&>(::viam::robot::v1::_PeerConnectionInfo_default_instance_);
}
inline const ::viam::robot::v1::PeerConnectionInfo& Session::peer_connection_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.Session.peer_connection_info)
  return _internal_peer_connection_info();
}
inline void Session::unsafe_arena_set_allocated_peer_connection_info(::viam::robot::v1::PeerConnectionInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_connection_info_);
  }
  _impl_.peer_connection_info_ = reinterpret_cast<::viam::robot::v1::PeerConnectionInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.Session.peer_connection_info)
}
inline ::viam::robot::v1::PeerConnectionInfo* Session::release_peer_connection_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::robot::v1::PeerConnectionInfo* released = _impl_.peer_connection_info_;
  _impl_.peer_connection_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::robot::v1::PeerConnectionInfo* Session::unsafe_arena_release_peer_connection_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.Session.peer_connection_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::robot::v1::PeerConnectionInfo* temp = _impl_.peer_connection_info_;
  _impl_.peer_connection_info_ = nullptr;
  return temp;
}
inline ::viam::robot::v1::PeerConnectionInfo* Session::_internal_mutable_peer_connection_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.peer_connection_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::robot::v1::PeerConnectionInfo>(GetArena());
    _impl_.peer_connection_info_ = reinterpret_cast<::viam::robot::v1::PeerConnectionInfo*>(p);
  }
  return _impl_.peer_connection_info_;
}
inline ::viam::robot::v1::PeerConnectionInfo* Session::mutable_peer_connection_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::robot::v1::PeerConnectionInfo* _msg = _internal_mutable_peer_connection_info();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.Session.peer_connection_info)
  return _msg;
}
inline void Session::set_allocated_peer_connection_info(::viam::robot::v1::PeerConnectionInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::viam::robot::v1::PeerConnectionInfo*>(_impl_.peer_connection_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::viam::robot::v1::PeerConnectionInfo*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.peer_connection_info_ = reinterpret_cast<::viam::robot::v1::PeerConnectionInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.Session.peer_connection_info)
}

// -------------------------------------------------------------------

// GetSessionsRequest

// -------------------------------------------------------------------

// GetSessionsResponse

// repeated .viam.robot.v1.Session sessions = 1 [json_name = "sessions"];
inline int GetSessionsResponse::_internal_sessions_size() const {
  return _internal_sessions().size();
}
inline int GetSessionsResponse::sessions_size() const {
  return _internal_sessions_size();
}
inline void GetSessionsResponse::clear_sessions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sessions_.Clear();
}
inline ::viam::robot::v1::Session* GetSessionsResponse::mutable_sessions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.GetSessionsResponse.sessions)
  return _internal_mutable_sessions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Session>* GetSessionsResponse::mutable_sessions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.GetSessionsResponse.sessions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_sessions();
}
inline const ::viam::robot::v1::Session& GetSessionsResponse::sessions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.GetSessionsResponse.sessions)
  return _internal_sessions().Get(index);
}
inline ::viam::robot::v1::Session* GetSessionsResponse::add_sessions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::robot::v1::Session* _add = _internal_mutable_sessions()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.GetSessionsResponse.sessions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Session>& GetSessionsResponse::sessions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.GetSessionsResponse.sessions)
  return _internal_sessions();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Session>&
GetSessionsResponse::_internal_sessions() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sessions_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Session>*
GetSessionsResponse::_internal_mutable_sessions() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.sessions_;
}

// -------------------------------------------------------------------

// DiscoveryQuery

// string subtype = 1 [json_name = "subtype"];
inline void DiscoveryQuery::clear_subtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subtype_.ClearToEmpty();
}
inline const std::string& DiscoveryQuery::subtype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.DiscoveryQuery.subtype)
  return _internal_subtype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DiscoveryQuery::set_subtype(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subtype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.DiscoveryQuery.subtype)
}
inline std::string* DiscoveryQuery::mutable_subtype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subtype();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.DiscoveryQuery.subtype)
  return _s;
}
inline const std::string& DiscoveryQuery::_internal_subtype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subtype_.Get();
}
inline void DiscoveryQuery::_internal_set_subtype(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subtype_.Set(value, GetArena());
}
inline std::string* DiscoveryQuery::_internal_mutable_subtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subtype_.Mutable( GetArena());
}
inline std::string* DiscoveryQuery::release_subtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.DiscoveryQuery.subtype)
  return _impl_.subtype_.Release();
}
inline void DiscoveryQuery::set_allocated_subtype(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subtype_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subtype_.IsDefault()) {
          _impl_.subtype_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.DiscoveryQuery.subtype)
}

// string model = 2 [json_name = "model"];
inline void DiscoveryQuery::clear_model() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.model_.ClearToEmpty();
}
inline const std::string& DiscoveryQuery::model() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.DiscoveryQuery.model)
  return _internal_model();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DiscoveryQuery::set_model(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.model_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.DiscoveryQuery.model)
}
inline std::string* DiscoveryQuery::mutable_model() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.DiscoveryQuery.model)
  return _s;
}
inline const std::string& DiscoveryQuery::_internal_model() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.model_.Get();
}
inline void DiscoveryQuery::_internal_set_model(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.model_.Set(value, GetArena());
}
inline std::string* DiscoveryQuery::_internal_mutable_model() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.model_.Mutable( GetArena());
}
inline std::string* DiscoveryQuery::release_model() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.DiscoveryQuery.model)
  return _impl_.model_.Release();
}
inline void DiscoveryQuery::set_allocated_model(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.model_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.model_.IsDefault()) {
          _impl_.model_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.DiscoveryQuery.model)
}

// -------------------------------------------------------------------

// Discovery

// .viam.robot.v1.DiscoveryQuery query = 1 [json_name = "query"];
inline bool Discovery::has_query() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.query_ != nullptr);
  return value;
}
inline void Discovery::clear_query() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.query_ != nullptr) _impl_.query_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::viam::robot::v1::DiscoveryQuery& Discovery::_internal_query() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::robot::v1::DiscoveryQuery* p = _impl_.query_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::robot::v1::DiscoveryQuery&>(::viam::robot::v1::_DiscoveryQuery_default_instance_);
}
inline const ::viam::robot::v1::DiscoveryQuery& Discovery::query() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.Discovery.query)
  return _internal_query();
}
inline void Discovery::unsafe_arena_set_allocated_query(::viam::robot::v1::DiscoveryQuery* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.query_);
  }
  _impl_.query_ = reinterpret_cast<::viam::robot::v1::DiscoveryQuery*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.Discovery.query)
}
inline ::viam::robot::v1::DiscoveryQuery* Discovery::release_query() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::robot::v1::DiscoveryQuery* released = _impl_.query_;
  _impl_.query_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::robot::v1::DiscoveryQuery* Discovery::unsafe_arena_release_query() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.Discovery.query)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::robot::v1::DiscoveryQuery* temp = _impl_.query_;
  _impl_.query_ = nullptr;
  return temp;
}
inline ::viam::robot::v1::DiscoveryQuery* Discovery::_internal_mutable_query() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.query_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::robot::v1::DiscoveryQuery>(GetArena());
    _impl_.query_ = reinterpret_cast<::viam::robot::v1::DiscoveryQuery*>(p);
  }
  return _impl_.query_;
}
inline ::viam::robot::v1::DiscoveryQuery* Discovery::mutable_query() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::robot::v1::DiscoveryQuery* _msg = _internal_mutable_query();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.Discovery.query)
  return _msg;
}
inline void Discovery::set_allocated_query(::viam::robot::v1::DiscoveryQuery* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::viam::robot::v1::DiscoveryQuery*>(_impl_.query_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::viam::robot::v1::DiscoveryQuery*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.query_ = reinterpret_cast<::viam::robot::v1::DiscoveryQuery*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.Discovery.query)
}

// .google.protobuf.Struct results = 2 [json_name = "results"];
inline bool Discovery::has_results() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.results_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& Discovery::_internal_results() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.results_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& Discovery::results() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.Discovery.results)
  return _internal_results();
}
inline void Discovery::unsafe_arena_set_allocated_results(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.results_);
  }
  _impl_.results_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.Discovery.results)
}
inline ::google::protobuf::Struct* Discovery::release_results() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* released = _impl_.results_;
  _impl_.results_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* Discovery::unsafe_arena_release_results() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.Discovery.results)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* temp = _impl_.results_;
  _impl_.results_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* Discovery::_internal_mutable_results() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.results_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.results_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.results_;
}
inline ::google::protobuf::Struct* Discovery::mutable_results() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_results();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.Discovery.results)
  return _msg;
}
inline void Discovery::set_allocated_results(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.results_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.results_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.Discovery.results)
}

// -------------------------------------------------------------------

// DiscoverComponentsRequest

// repeated .viam.robot.v1.DiscoveryQuery queries = 1 [json_name = "queries"];
inline int DiscoverComponentsRequest::_internal_queries_size() const {
  return _internal_queries().size();
}
inline int DiscoverComponentsRequest::queries_size() const {
  return _internal_queries_size();
}
inline void DiscoverComponentsRequest::clear_queries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.queries_.Clear();
}
inline ::viam::robot::v1::DiscoveryQuery* DiscoverComponentsRequest::mutable_queries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.DiscoverComponentsRequest.queries)
  return _internal_mutable_queries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::DiscoveryQuery>* DiscoverComponentsRequest::mutable_queries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.DiscoverComponentsRequest.queries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_queries();
}
inline const ::viam::robot::v1::DiscoveryQuery& DiscoverComponentsRequest::queries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.DiscoverComponentsRequest.queries)
  return _internal_queries().Get(index);
}
inline ::viam::robot::v1::DiscoveryQuery* DiscoverComponentsRequest::add_queries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::robot::v1::DiscoveryQuery* _add = _internal_mutable_queries()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.DiscoverComponentsRequest.queries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::DiscoveryQuery>& DiscoverComponentsRequest::queries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.DiscoverComponentsRequest.queries)
  return _internal_queries();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::DiscoveryQuery>&
DiscoverComponentsRequest::_internal_queries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.queries_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::DiscoveryQuery>*
DiscoverComponentsRequest::_internal_mutable_queries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.queries_;
}

// -------------------------------------------------------------------

// DiscoverComponentsResponse

// repeated .viam.robot.v1.Discovery discovery = 1 [json_name = "discovery"];
inline int DiscoverComponentsResponse::_internal_discovery_size() const {
  return _internal_discovery().size();
}
inline int DiscoverComponentsResponse::discovery_size() const {
  return _internal_discovery_size();
}
inline void DiscoverComponentsResponse::clear_discovery() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.discovery_.Clear();
}
inline ::viam::robot::v1::Discovery* DiscoverComponentsResponse::mutable_discovery(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.DiscoverComponentsResponse.discovery)
  return _internal_mutable_discovery()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Discovery>* DiscoverComponentsResponse::mutable_discovery()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.DiscoverComponentsResponse.discovery)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_discovery();
}
inline const ::viam::robot::v1::Discovery& DiscoverComponentsResponse::discovery(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.DiscoverComponentsResponse.discovery)
  return _internal_discovery().Get(index);
}
inline ::viam::robot::v1::Discovery* DiscoverComponentsResponse::add_discovery() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::robot::v1::Discovery* _add = _internal_mutable_discovery()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.DiscoverComponentsResponse.discovery)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Discovery>& DiscoverComponentsResponse::discovery() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.DiscoverComponentsResponse.discovery)
  return _internal_discovery();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Discovery>&
DiscoverComponentsResponse::_internal_discovery() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.discovery_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Discovery>*
DiscoverComponentsResponse::_internal_mutable_discovery() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.discovery_;
}

// -------------------------------------------------------------------

// Status

// .viam.common.v1.ResourceName name = 1 [json_name = "name"];
inline bool Status::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.name_ != nullptr);
  return value;
}
inline const ::viam::common::v1::ResourceName& Status::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::ResourceName* p = _impl_.name_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::ResourceName&>(::viam::common::v1::_ResourceName_default_instance_);
}
inline const ::viam::common::v1::ResourceName& Status::name() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.Status.name)
  return _internal_name();
}
inline void Status::unsafe_arena_set_allocated_name(::viam::common::v1::ResourceName* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.name_);
  }
  _impl_.name_ = reinterpret_cast<::viam::common::v1::ResourceName*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.Status.name)
}
inline ::viam::common::v1::ResourceName* Status::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::ResourceName* released = _impl_.name_;
  _impl_.name_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::ResourceName* Status::unsafe_arena_release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.Status.name)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::ResourceName* temp = _impl_.name_;
  _impl_.name_ = nullptr;
  return temp;
}
inline ::viam::common::v1::ResourceName* Status::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.name_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::ResourceName>(GetArena());
    _impl_.name_ = reinterpret_cast<::viam::common::v1::ResourceName*>(p);
  }
  return _impl_.name_;
}
inline ::viam::common::v1::ResourceName* Status::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::ResourceName* _msg = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.Status.name)
  return _msg;
}
inline void Status::set_allocated_name(::viam::common::v1::ResourceName* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.name_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.name_ = reinterpret_cast<::viam::common::v1::ResourceName*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.Status.name)
}

// .google.protobuf.Struct status = 2 [json_name = "status"];
inline bool Status::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& Status::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& Status::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.Status.status)
  return _internal_status();
}
inline void Status::unsafe_arena_set_allocated_status(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.Status.status)
}
inline ::google::protobuf::Struct* Status::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* released = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* Status::unsafe_arena_release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.Status.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* Status::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.status_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.status_;
}
inline ::google::protobuf::Struct* Status::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.Status.status)
  return _msg;
}
inline void Status::set_allocated_status(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.Status.status)
}

// .google.protobuf.Timestamp last_reconfigured = 3 [json_name = "lastReconfigured"];
inline bool Status::has_last_reconfigured() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_reconfigured_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Status::_internal_last_reconfigured() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.last_reconfigured_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Status::last_reconfigured() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.Status.last_reconfigured)
  return _internal_last_reconfigured();
}
inline void Status::unsafe_arena_set_allocated_last_reconfigured(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_reconfigured_);
  }
  _impl_.last_reconfigured_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.Status.last_reconfigured)
}
inline ::google::protobuf::Timestamp* Status::release_last_reconfigured() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.last_reconfigured_;
  _impl_.last_reconfigured_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* Status::unsafe_arena_release_last_reconfigured() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.Status.last_reconfigured)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.last_reconfigured_;
  _impl_.last_reconfigured_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Status::_internal_mutable_last_reconfigured() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.last_reconfigured_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.last_reconfigured_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.last_reconfigured_;
}
inline ::google::protobuf::Timestamp* Status::mutable_last_reconfigured() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_last_reconfigured();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.Status.last_reconfigured)
  return _msg;
}
inline void Status::set_allocated_last_reconfigured(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_reconfigured_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.last_reconfigured_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.Status.last_reconfigured)
}

// -------------------------------------------------------------------

// GetStatusRequest

// repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
inline int GetStatusRequest::_internal_resource_names_size() const {
  return _internal_resource_names().size();
}
inline int GetStatusRequest::resource_names_size() const {
  return _internal_resource_names_size();
}
inline ::viam::common::v1::ResourceName* GetStatusRequest::mutable_resource_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.GetStatusRequest.resource_names)
  return _internal_mutable_resource_names()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>* GetStatusRequest::mutable_resource_names()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.GetStatusRequest.resource_names)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_resource_names();
}
inline const ::viam::common::v1::ResourceName& GetStatusRequest::resource_names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.GetStatusRequest.resource_names)
  return _internal_resource_names().Get(index);
}
inline ::viam::common::v1::ResourceName* GetStatusRequest::add_resource_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::ResourceName* _add = _internal_mutable_resource_names()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.GetStatusRequest.resource_names)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>& GetStatusRequest::resource_names() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.GetStatusRequest.resource_names)
  return _internal_resource_names();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>&
GetStatusRequest::_internal_resource_names() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_names_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>*
GetStatusRequest::_internal_mutable_resource_names() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.resource_names_;
}

// -------------------------------------------------------------------

// GetStatusResponse

// repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
inline int GetStatusResponse::_internal_status_size() const {
  return _internal_status().size();
}
inline int GetStatusResponse::status_size() const {
  return _internal_status_size();
}
inline void GetStatusResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_.Clear();
}
inline ::viam::robot::v1::Status* GetStatusResponse::mutable_status(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.GetStatusResponse.status)
  return _internal_mutable_status()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Status>* GetStatusResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.GetStatusResponse.status)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_status();
}
inline const ::viam::robot::v1::Status& GetStatusResponse::status(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.GetStatusResponse.status)
  return _internal_status().Get(index);
}
inline ::viam::robot::v1::Status* GetStatusResponse::add_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::robot::v1::Status* _add = _internal_mutable_status()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.GetStatusResponse.status)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Status>& GetStatusResponse::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.GetStatusResponse.status)
  return _internal_status();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Status>&
GetStatusResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Status>*
GetStatusResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.status_;
}

// -------------------------------------------------------------------

// StreamStatusRequest

// repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
inline int StreamStatusRequest::_internal_resource_names_size() const {
  return _internal_resource_names().size();
}
inline int StreamStatusRequest::resource_names_size() const {
  return _internal_resource_names_size();
}
inline ::viam::common::v1::ResourceName* StreamStatusRequest::mutable_resource_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.StreamStatusRequest.resource_names)
  return _internal_mutable_resource_names()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>* StreamStatusRequest::mutable_resource_names()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.StreamStatusRequest.resource_names)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_resource_names();
}
inline const ::viam::common::v1::ResourceName& StreamStatusRequest::resource_names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.StreamStatusRequest.resource_names)
  return _internal_resource_names().Get(index);
}
inline ::viam::common::v1::ResourceName* StreamStatusRequest::add_resource_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::ResourceName* _add = _internal_mutable_resource_names()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.StreamStatusRequest.resource_names)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>& StreamStatusRequest::resource_names() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.StreamStatusRequest.resource_names)
  return _internal_resource_names();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>&
StreamStatusRequest::_internal_resource_names() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_names_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::ResourceName>*
StreamStatusRequest::_internal_mutable_resource_names() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.resource_names_;
}

// .google.protobuf.Duration every = 2 [json_name = "every"];
inline bool StreamStatusRequest::has_every() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.every_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& StreamStatusRequest::_internal_every() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Duration* p = _impl_.every_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& StreamStatusRequest::every() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.StreamStatusRequest.every)
  return _internal_every();
}
inline void StreamStatusRequest::unsafe_arena_set_allocated_every(::google::protobuf::Duration* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.every_);
  }
  _impl_.every_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.StreamStatusRequest.every)
}
inline ::google::protobuf::Duration* StreamStatusRequest::release_every() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.every_;
  _impl_.every_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* StreamStatusRequest::unsafe_arena_release_every() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.StreamStatusRequest.every)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.every_;
  _impl_.every_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* StreamStatusRequest::_internal_mutable_every() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.every_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArena());
    _impl_.every_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.every_;
}
inline ::google::protobuf::Duration* StreamStatusRequest::mutable_every() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Duration* _msg = _internal_mutable_every();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.StreamStatusRequest.every)
  return _msg;
}
inline void StreamStatusRequest::set_allocated_every(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.every_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.every_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.StreamStatusRequest.every)
}

// -------------------------------------------------------------------

// StreamStatusResponse

// repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
inline int StreamStatusResponse::_internal_status_size() const {
  return _internal_status().size();
}
inline int StreamStatusResponse::status_size() const {
  return _internal_status_size();
}
inline void StreamStatusResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_.Clear();
}
inline ::viam::robot::v1::Status* StreamStatusResponse::mutable_status(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.StreamStatusResponse.status)
  return _internal_mutable_status()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Status>* StreamStatusResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.StreamStatusResponse.status)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_status();
}
inline const ::viam::robot::v1::Status& StreamStatusResponse::status(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.StreamStatusResponse.status)
  return _internal_status().Get(index);
}
inline ::viam::robot::v1::Status* StreamStatusResponse::add_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::robot::v1::Status* _add = _internal_mutable_status()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.StreamStatusResponse.status)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Status>& StreamStatusResponse::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.StreamStatusResponse.status)
  return _internal_status();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Status>&
StreamStatusResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::Status>*
StreamStatusResponse::_internal_mutable_status() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.status_;
}

// -------------------------------------------------------------------

// StopExtraParameters

// .viam.common.v1.ResourceName name = 1 [json_name = "name"];
inline bool StopExtraParameters::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.name_ != nullptr);
  return value;
}
inline const ::viam::common::v1::ResourceName& StopExtraParameters::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::ResourceName* p = _impl_.name_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::ResourceName&>(::viam::common::v1::_ResourceName_default_instance_);
}
inline const ::viam::common::v1::ResourceName& StopExtraParameters::name() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.StopExtraParameters.name)
  return _internal_name();
}
inline void StopExtraParameters::unsafe_arena_set_allocated_name(::viam::common::v1::ResourceName* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.name_);
  }
  _impl_.name_ = reinterpret_cast<::viam::common::v1::ResourceName*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.StopExtraParameters.name)
}
inline ::viam::common::v1::ResourceName* StopExtraParameters::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::ResourceName* released = _impl_.name_;
  _impl_.name_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::ResourceName* StopExtraParameters::unsafe_arena_release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.StopExtraParameters.name)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::ResourceName* temp = _impl_.name_;
  _impl_.name_ = nullptr;
  return temp;
}
inline ::viam::common::v1::ResourceName* StopExtraParameters::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.name_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::ResourceName>(GetArena());
    _impl_.name_ = reinterpret_cast<::viam::common::v1::ResourceName*>(p);
  }
  return _impl_.name_;
}
inline ::viam::common::v1::ResourceName* StopExtraParameters::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::ResourceName* _msg = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.StopExtraParameters.name)
  return _msg;
}
inline void StopExtraParameters::set_allocated_name(::viam::common::v1::ResourceName* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.name_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.name_ = reinterpret_cast<::viam::common::v1::ResourceName*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.StopExtraParameters.name)
}

// .google.protobuf.Struct params = 2 [json_name = "params"];
inline bool StopExtraParameters::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& StopExtraParameters::_internal_params() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& StopExtraParameters::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.StopExtraParameters.params)
  return _internal_params();
}
inline void StopExtraParameters::unsafe_arena_set_allocated_params(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.StopExtraParameters.params)
}
inline ::google::protobuf::Struct* StopExtraParameters::release_params() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* released = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* StopExtraParameters::unsafe_arena_release_params() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.StopExtraParameters.params)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* StopExtraParameters::_internal_mutable_params() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.params_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.params_;
}
inline ::google::protobuf::Struct* StopExtraParameters::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.StopExtraParameters.params)
  return _msg;
}
inline void StopExtraParameters::set_allocated_params(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.params_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.StopExtraParameters.params)
}

// -------------------------------------------------------------------

// StopAllRequest

// repeated .viam.robot.v1.StopExtraParameters extra = 99 [json_name = "extra"];
inline int StopAllRequest::_internal_extra_size() const {
  return _internal_extra().size();
}
inline int StopAllRequest::extra_size() const {
  return _internal_extra_size();
}
inline void StopAllRequest::clear_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.extra_.Clear();
}
inline ::viam::robot::v1::StopExtraParameters* StopAllRequest::mutable_extra(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.StopAllRequest.extra)
  return _internal_mutable_extra()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::StopExtraParameters>* StopAllRequest::mutable_extra()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.StopAllRequest.extra)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_extra();
}
inline const ::viam::robot::v1::StopExtraParameters& StopAllRequest::extra(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.StopAllRequest.extra)
  return _internal_extra().Get(index);
}
inline ::viam::robot::v1::StopExtraParameters* StopAllRequest::add_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::robot::v1::StopExtraParameters* _add = _internal_mutable_extra()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.StopAllRequest.extra)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::StopExtraParameters>& StopAllRequest::extra() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.StopAllRequest.extra)
  return _internal_extra();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::StopExtraParameters>&
StopAllRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extra_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::StopExtraParameters>*
StopAllRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.extra_;
}

// -------------------------------------------------------------------

// StopAllResponse

// -------------------------------------------------------------------

// StartSessionRequest

// string resume = 1 [json_name = "resume"];
inline void StartSessionRequest::clear_resume() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resume_.ClearToEmpty();
}
inline const std::string& StartSessionRequest::resume() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.StartSessionRequest.resume)
  return _internal_resume();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StartSessionRequest::set_resume(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resume_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.StartSessionRequest.resume)
}
inline std::string* StartSessionRequest::mutable_resume() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resume();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.StartSessionRequest.resume)
  return _s;
}
inline const std::string& StartSessionRequest::_internal_resume() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resume_.Get();
}
inline void StartSessionRequest::_internal_set_resume(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resume_.Set(value, GetArena());
}
inline std::string* StartSessionRequest::_internal_mutable_resume() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.resume_.Mutable( GetArena());
}
inline std::string* StartSessionRequest::release_resume() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.StartSessionRequest.resume)
  return _impl_.resume_.Release();
}
inline void StartSessionRequest::set_allocated_resume(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resume_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resume_.IsDefault()) {
          _impl_.resume_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.StartSessionRequest.resume)
}

// -------------------------------------------------------------------

// StartSessionResponse

// string id = 1 [json_name = "id"];
inline void StartSessionResponse::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& StartSessionResponse::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.StartSessionResponse.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StartSessionResponse::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.StartSessionResponse.id)
}
inline std::string* StartSessionResponse::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.StartSessionResponse.id)
  return _s;
}
inline const std::string& StartSessionResponse::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void StartSessionResponse::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* StartSessionResponse::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* StartSessionResponse::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.StartSessionResponse.id)
  return _impl_.id_.Release();
}
inline void StartSessionResponse::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.StartSessionResponse.id)
}

// .google.protobuf.Duration heartbeat_window = 2 [json_name = "heartbeatWindow"];
inline bool StartSessionResponse::has_heartbeat_window() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.heartbeat_window_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& StartSessionResponse::_internal_heartbeat_window() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Duration* p = _impl_.heartbeat_window_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& StartSessionResponse::heartbeat_window() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.StartSessionResponse.heartbeat_window)
  return _internal_heartbeat_window();
}
inline void StartSessionResponse::unsafe_arena_set_allocated_heartbeat_window(::google::protobuf::Duration* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.heartbeat_window_);
  }
  _impl_.heartbeat_window_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.StartSessionResponse.heartbeat_window)
}
inline ::google::protobuf::Duration* StartSessionResponse::release_heartbeat_window() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.heartbeat_window_;
  _impl_.heartbeat_window_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* StartSessionResponse::unsafe_arena_release_heartbeat_window() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.StartSessionResponse.heartbeat_window)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.heartbeat_window_;
  _impl_.heartbeat_window_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* StartSessionResponse::_internal_mutable_heartbeat_window() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.heartbeat_window_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArena());
    _impl_.heartbeat_window_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.heartbeat_window_;
}
inline ::google::protobuf::Duration* StartSessionResponse::mutable_heartbeat_window() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Duration* _msg = _internal_mutable_heartbeat_window();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.StartSessionResponse.heartbeat_window)
  return _msg;
}
inline void StartSessionResponse::set_allocated_heartbeat_window(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.heartbeat_window_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.heartbeat_window_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.StartSessionResponse.heartbeat_window)
}

// -------------------------------------------------------------------

// SendSessionHeartbeatRequest

// string id = 1 [json_name = "id"];
inline void SendSessionHeartbeatRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& SendSessionHeartbeatRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.SendSessionHeartbeatRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendSessionHeartbeatRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.SendSessionHeartbeatRequest.id)
}
inline std::string* SendSessionHeartbeatRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.SendSessionHeartbeatRequest.id)
  return _s;
}
inline const std::string& SendSessionHeartbeatRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void SendSessionHeartbeatRequest::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* SendSessionHeartbeatRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* SendSessionHeartbeatRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.SendSessionHeartbeatRequest.id)
  return _impl_.id_.Release();
}
inline void SendSessionHeartbeatRequest::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.SendSessionHeartbeatRequest.id)
}

// -------------------------------------------------------------------

// SendSessionHeartbeatResponse

// -------------------------------------------------------------------

// LogRequest

// repeated .viam.common.v1.LogEntry logs = 1 [json_name = "logs"];
inline int LogRequest::_internal_logs_size() const {
  return _internal_logs().size();
}
inline int LogRequest::logs_size() const {
  return _internal_logs_size();
}
inline ::viam::common::v1::LogEntry* LogRequest::mutable_logs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.LogRequest.logs)
  return _internal_mutable_logs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::LogEntry>* LogRequest::mutable_logs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.LogRequest.logs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_logs();
}
inline const ::viam::common::v1::LogEntry& LogRequest::logs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.LogRequest.logs)
  return _internal_logs().Get(index);
}
inline ::viam::common::v1::LogEntry* LogRequest::add_logs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::common::v1::LogEntry* _add = _internal_mutable_logs()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.LogRequest.logs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::LogEntry>& LogRequest::logs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.LogRequest.logs)
  return _internal_logs();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::common::v1::LogEntry>&
LogRequest::_internal_logs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.logs_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::common::v1::LogEntry>*
LogRequest::_internal_mutable_logs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.logs_;
}

// -------------------------------------------------------------------

// LogResponse

// -------------------------------------------------------------------

// GetCloudMetadataRequest

// -------------------------------------------------------------------

// GetCloudMetadataResponse

// string robot_part_id = 1 [json_name = "robotPartId", deprecated = true];
inline void GetCloudMetadataResponse::clear_robot_part_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.robot_part_id_.ClearToEmpty();
}
inline const std::string& GetCloudMetadataResponse::robot_part_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.GetCloudMetadataResponse.robot_part_id)
  return _internal_robot_part_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetCloudMetadataResponse::set_robot_part_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.robot_part_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.GetCloudMetadataResponse.robot_part_id)
}
inline std::string* GetCloudMetadataResponse::mutable_robot_part_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_robot_part_id();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.GetCloudMetadataResponse.robot_part_id)
  return _s;
}
inline const std::string& GetCloudMetadataResponse::_internal_robot_part_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.robot_part_id_.Get();
}
inline void GetCloudMetadataResponse::_internal_set_robot_part_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.robot_part_id_.Set(value, GetArena());
}
inline std::string* GetCloudMetadataResponse::_internal_mutable_robot_part_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.robot_part_id_.Mutable( GetArena());
}
inline std::string* GetCloudMetadataResponse::release_robot_part_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.GetCloudMetadataResponse.robot_part_id)
  return _impl_.robot_part_id_.Release();
}
inline void GetCloudMetadataResponse::set_allocated_robot_part_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.robot_part_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.robot_part_id_.IsDefault()) {
          _impl_.robot_part_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.GetCloudMetadataResponse.robot_part_id)
}

// string primary_org_id = 2 [json_name = "primaryOrgId"];
inline void GetCloudMetadataResponse::clear_primary_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.primary_org_id_.ClearToEmpty();
}
inline const std::string& GetCloudMetadataResponse::primary_org_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.GetCloudMetadataResponse.primary_org_id)
  return _internal_primary_org_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetCloudMetadataResponse::set_primary_org_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.primary_org_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.GetCloudMetadataResponse.primary_org_id)
}
inline std::string* GetCloudMetadataResponse::mutable_primary_org_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_primary_org_id();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.GetCloudMetadataResponse.primary_org_id)
  return _s;
}
inline const std::string& GetCloudMetadataResponse::_internal_primary_org_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.primary_org_id_.Get();
}
inline void GetCloudMetadataResponse::_internal_set_primary_org_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.primary_org_id_.Set(value, GetArena());
}
inline std::string* GetCloudMetadataResponse::_internal_mutable_primary_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.primary_org_id_.Mutable( GetArena());
}
inline std::string* GetCloudMetadataResponse::release_primary_org_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.GetCloudMetadataResponse.primary_org_id)
  return _impl_.primary_org_id_.Release();
}
inline void GetCloudMetadataResponse::set_allocated_primary_org_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.primary_org_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.primary_org_id_.IsDefault()) {
          _impl_.primary_org_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.GetCloudMetadataResponse.primary_org_id)
}

// string location_id = 3 [json_name = "locationId"];
inline void GetCloudMetadataResponse::clear_location_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.location_id_.ClearToEmpty();
}
inline const std::string& GetCloudMetadataResponse::location_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.GetCloudMetadataResponse.location_id)
  return _internal_location_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetCloudMetadataResponse::set_location_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.location_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.GetCloudMetadataResponse.location_id)
}
inline std::string* GetCloudMetadataResponse::mutable_location_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_location_id();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.GetCloudMetadataResponse.location_id)
  return _s;
}
inline const std::string& GetCloudMetadataResponse::_internal_location_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.location_id_.Get();
}
inline void GetCloudMetadataResponse::_internal_set_location_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.location_id_.Set(value, GetArena());
}
inline std::string* GetCloudMetadataResponse::_internal_mutable_location_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.location_id_.Mutable( GetArena());
}
inline std::string* GetCloudMetadataResponse::release_location_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.GetCloudMetadataResponse.location_id)
  return _impl_.location_id_.Release();
}
inline void GetCloudMetadataResponse::set_allocated_location_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.location_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.location_id_.IsDefault()) {
          _impl_.location_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.GetCloudMetadataResponse.location_id)
}

// string machine_id = 4 [json_name = "machineId"];
inline void GetCloudMetadataResponse::clear_machine_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.machine_id_.ClearToEmpty();
}
inline const std::string& GetCloudMetadataResponse::machine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.GetCloudMetadataResponse.machine_id)
  return _internal_machine_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetCloudMetadataResponse::set_machine_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.machine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.GetCloudMetadataResponse.machine_id)
}
inline std::string* GetCloudMetadataResponse::mutable_machine_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_machine_id();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.GetCloudMetadataResponse.machine_id)
  return _s;
}
inline const std::string& GetCloudMetadataResponse::_internal_machine_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.machine_id_.Get();
}
inline void GetCloudMetadataResponse::_internal_set_machine_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.machine_id_.Set(value, GetArena());
}
inline std::string* GetCloudMetadataResponse::_internal_mutable_machine_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.machine_id_.Mutable( GetArena());
}
inline std::string* GetCloudMetadataResponse::release_machine_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.GetCloudMetadataResponse.machine_id)
  return _impl_.machine_id_.Release();
}
inline void GetCloudMetadataResponse::set_allocated_machine_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.machine_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.machine_id_.IsDefault()) {
          _impl_.machine_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.GetCloudMetadataResponse.machine_id)
}

// string machine_part_id = 5 [json_name = "machinePartId"];
inline void GetCloudMetadataResponse::clear_machine_part_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.machine_part_id_.ClearToEmpty();
}
inline const std::string& GetCloudMetadataResponse::machine_part_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.GetCloudMetadataResponse.machine_part_id)
  return _internal_machine_part_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetCloudMetadataResponse::set_machine_part_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.machine_part_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.GetCloudMetadataResponse.machine_part_id)
}
inline std::string* GetCloudMetadataResponse::mutable_machine_part_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_machine_part_id();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.GetCloudMetadataResponse.machine_part_id)
  return _s;
}
inline const std::string& GetCloudMetadataResponse::_internal_machine_part_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.machine_part_id_.Get();
}
inline void GetCloudMetadataResponse::_internal_set_machine_part_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.machine_part_id_.Set(value, GetArena());
}
inline std::string* GetCloudMetadataResponse::_internal_mutable_machine_part_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.machine_part_id_.Mutable( GetArena());
}
inline std::string* GetCloudMetadataResponse::release_machine_part_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.GetCloudMetadataResponse.machine_part_id)
  return _impl_.machine_part_id_.Release();
}
inline void GetCloudMetadataResponse::set_allocated_machine_part_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.machine_part_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.machine_part_id_.IsDefault()) {
          _impl_.machine_part_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.GetCloudMetadataResponse.machine_part_id)
}

// -------------------------------------------------------------------

// RestartModuleRequest

// string module_id = 1 [json_name = "moduleId"];
inline bool RestartModuleRequest::has_module_id() const {
  return id_or_name_case() == kModuleId;
}
inline void RestartModuleRequest::set_has_module_id() {
  _impl_._oneof_case_[0] = kModuleId;
}
inline void RestartModuleRequest::clear_module_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_or_name_case() == kModuleId) {
    _impl_.id_or_name_.module_id_.Destroy();
    clear_has_id_or_name();
  }
}
inline const std::string& RestartModuleRequest::module_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.RestartModuleRequest.module_id)
  return _internal_module_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RestartModuleRequest::set_module_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_or_name_case() != kModuleId) {
    clear_id_or_name();

    set_has_module_id();
    _impl_.id_or_name_.module_id_.InitDefault();
  }
  _impl_.id_or_name_.module_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.RestartModuleRequest.module_id)
}
inline std::string* RestartModuleRequest::mutable_module_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_module_id();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.RestartModuleRequest.module_id)
  return _s;
}
inline const std::string& RestartModuleRequest::_internal_module_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (id_or_name_case() != kModuleId) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.id_or_name_.module_id_.Get();
}
inline void RestartModuleRequest::_internal_set_module_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_or_name_case() != kModuleId) {
    clear_id_or_name();

    set_has_module_id();
    _impl_.id_or_name_.module_id_.InitDefault();
  }
  _impl_.id_or_name_.module_id_.Set(value, GetArena());
}
inline std::string* RestartModuleRequest::_internal_mutable_module_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_or_name_case() != kModuleId) {
    clear_id_or_name();

    set_has_module_id();
    _impl_.id_or_name_.module_id_.InitDefault();
  }
  return _impl_.id_or_name_.module_id_.Mutable( GetArena());
}
inline std::string* RestartModuleRequest::release_module_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.RestartModuleRequest.module_id)
  if (id_or_name_case() != kModuleId) {
    return nullptr;
  }
  clear_has_id_or_name();
  return _impl_.id_or_name_.module_id_.Release();
}
inline void RestartModuleRequest::set_allocated_module_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_id_or_name()) {
    clear_id_or_name();
  }
  if (value != nullptr) {
    set_has_module_id();
    _impl_.id_or_name_.module_id_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.RestartModuleRequest.module_id)
}

// string module_name = 2 [json_name = "moduleName"];
inline bool RestartModuleRequest::has_module_name() const {
  return id_or_name_case() == kModuleName;
}
inline void RestartModuleRequest::set_has_module_name() {
  _impl_._oneof_case_[0] = kModuleName;
}
inline void RestartModuleRequest::clear_module_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_or_name_case() == kModuleName) {
    _impl_.id_or_name_.module_name_.Destroy();
    clear_has_id_or_name();
  }
}
inline const std::string& RestartModuleRequest::module_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.RestartModuleRequest.module_name)
  return _internal_module_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RestartModuleRequest::set_module_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_or_name_case() != kModuleName) {
    clear_id_or_name();

    set_has_module_name();
    _impl_.id_or_name_.module_name_.InitDefault();
  }
  _impl_.id_or_name_.module_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.robot.v1.RestartModuleRequest.module_name)
}
inline std::string* RestartModuleRequest::mutable_module_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_module_name();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.RestartModuleRequest.module_name)
  return _s;
}
inline const std::string& RestartModuleRequest::_internal_module_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (id_or_name_case() != kModuleName) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.id_or_name_.module_name_.Get();
}
inline void RestartModuleRequest::_internal_set_module_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_or_name_case() != kModuleName) {
    clear_id_or_name();

    set_has_module_name();
    _impl_.id_or_name_.module_name_.InitDefault();
  }
  _impl_.id_or_name_.module_name_.Set(value, GetArena());
}
inline std::string* RestartModuleRequest::_internal_mutable_module_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (id_or_name_case() != kModuleName) {
    clear_id_or_name();

    set_has_module_name();
    _impl_.id_or_name_.module_name_.InitDefault();
  }
  return _impl_.id_or_name_.module_name_.Mutable( GetArena());
}
inline std::string* RestartModuleRequest::release_module_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.RestartModuleRequest.module_name)
  if (id_or_name_case() != kModuleName) {
    return nullptr;
  }
  clear_has_id_or_name();
  return _impl_.id_or_name_.module_name_.Release();
}
inline void RestartModuleRequest::set_allocated_module_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_id_or_name()) {
    clear_id_or_name();
  }
  if (value != nullptr) {
    set_has_module_name();
    _impl_.id_or_name_.module_name_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.RestartModuleRequest.module_name)
}

inline bool RestartModuleRequest::has_id_or_name() const {
  return id_or_name_case() != ID_OR_NAME_NOT_SET;
}
inline void RestartModuleRequest::clear_has_id_or_name() {
  _impl_._oneof_case_[0] = ID_OR_NAME_NOT_SET;
}
inline RestartModuleRequest::IdOrNameCase RestartModuleRequest::id_or_name_case() const {
  return RestartModuleRequest::IdOrNameCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RestartModuleResponse

// -------------------------------------------------------------------

// ShutdownRequest

// -------------------------------------------------------------------

// ShutdownResponse

// -------------------------------------------------------------------

// GetMachineStatusRequest

// -------------------------------------------------------------------

// GetMachineStatusResponse

// repeated .viam.robot.v1.ResourceStatus resources = 1 [json_name = "resources"];
inline int GetMachineStatusResponse::_internal_resources_size() const {
  return _internal_resources().size();
}
inline int GetMachineStatusResponse::resources_size() const {
  return _internal_resources_size();
}
inline void GetMachineStatusResponse::clear_resources() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resources_.Clear();
}
inline ::viam::robot::v1::ResourceStatus* GetMachineStatusResponse::mutable_resources(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.GetMachineStatusResponse.resources)
  return _internal_mutable_resources()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::ResourceStatus>* GetMachineStatusResponse::mutable_resources()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.robot.v1.GetMachineStatusResponse.resources)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_resources();
}
inline const ::viam::robot::v1::ResourceStatus& GetMachineStatusResponse::resources(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.GetMachineStatusResponse.resources)
  return _internal_resources().Get(index);
}
inline ::viam::robot::v1::ResourceStatus* GetMachineStatusResponse::add_resources() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::viam::robot::v1::ResourceStatus* _add = _internal_mutable_resources()->Add();
  // @@protoc_insertion_point(field_add:viam.robot.v1.GetMachineStatusResponse.resources)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::ResourceStatus>& GetMachineStatusResponse::resources() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.robot.v1.GetMachineStatusResponse.resources)
  return _internal_resources();
}
inline const ::google::protobuf::RepeatedPtrField<::viam::robot::v1::ResourceStatus>&
GetMachineStatusResponse::_internal_resources() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resources_;
}
inline ::google::protobuf::RepeatedPtrField<::viam::robot::v1::ResourceStatus>*
GetMachineStatusResponse::_internal_mutable_resources() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.resources_;
}

// -------------------------------------------------------------------

// ResourceStatus

// .viam.common.v1.ResourceName name = 1 [json_name = "name"];
inline bool ResourceStatus::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.name_ != nullptr);
  return value;
}
inline const ::viam::common::v1::ResourceName& ResourceStatus::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::ResourceName* p = _impl_.name_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::ResourceName&>(::viam::common::v1::_ResourceName_default_instance_);
}
inline const ::viam::common::v1::ResourceName& ResourceStatus::name() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.ResourceStatus.name)
  return _internal_name();
}
inline void ResourceStatus::unsafe_arena_set_allocated_name(::viam::common::v1::ResourceName* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.name_);
  }
  _impl_.name_ = reinterpret_cast<::viam::common::v1::ResourceName*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.ResourceStatus.name)
}
inline ::viam::common::v1::ResourceName* ResourceStatus::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::ResourceName* released = _impl_.name_;
  _impl_.name_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::ResourceName* ResourceStatus::unsafe_arena_release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.ResourceStatus.name)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::ResourceName* temp = _impl_.name_;
  _impl_.name_ = nullptr;
  return temp;
}
inline ::viam::common::v1::ResourceName* ResourceStatus::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.name_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::ResourceName>(GetArena());
    _impl_.name_ = reinterpret_cast<::viam::common::v1::ResourceName*>(p);
  }
  return _impl_.name_;
}
inline ::viam::common::v1::ResourceName* ResourceStatus::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::ResourceName* _msg = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.ResourceStatus.name)
  return _msg;
}
inline void ResourceStatus::set_allocated_name(::viam::common::v1::ResourceName* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.name_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.name_ = reinterpret_cast<::viam::common::v1::ResourceName*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.ResourceStatus.name)
}

// .viam.robot.v1.ResourceStatus.State state = 2 [json_name = "state"];
inline void ResourceStatus::clear_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_ = 0;
}
inline ::viam::robot::v1::ResourceStatus_State ResourceStatus::state() const {
  // @@protoc_insertion_point(field_get:viam.robot.v1.ResourceStatus.state)
  return _internal_state();
}
inline void ResourceStatus::set_state(::viam::robot::v1::ResourceStatus_State value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:viam.robot.v1.ResourceStatus.state)
}
inline ::viam::robot::v1::ResourceStatus_State ResourceStatus::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::viam::robot::v1::ResourceStatus_State>(_impl_.state_);
}
inline void ResourceStatus::_internal_set_state(::viam::robot::v1::ResourceStatus_State value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_ = value;
}

// .google.protobuf.Timestamp last_updated = 3 [json_name = "lastUpdated"];
inline bool ResourceStatus::has_last_updated() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_updated_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ResourceStatus::_internal_last_updated() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.last_updated_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ResourceStatus::last_updated() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.robot.v1.ResourceStatus.last_updated)
  return _internal_last_updated();
}
inline void ResourceStatus::unsafe_arena_set_allocated_last_updated(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_updated_);
  }
  _impl_.last_updated_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.robot.v1.ResourceStatus.last_updated)
}
inline ::google::protobuf::Timestamp* ResourceStatus::release_last_updated() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.last_updated_;
  _impl_.last_updated_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* ResourceStatus::unsafe_arena_release_last_updated() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.robot.v1.ResourceStatus.last_updated)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.last_updated_;
  _impl_.last_updated_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ResourceStatus::_internal_mutable_last_updated() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.last_updated_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.last_updated_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.last_updated_;
}
inline ::google::protobuf::Timestamp* ResourceStatus::mutable_last_updated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_last_updated();
  // @@protoc_insertion_point(field_mutable:viam.robot.v1.ResourceStatus.last_updated)
  return _msg;
}
inline void ResourceStatus::set_allocated_last_updated(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_updated_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.last_updated_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.robot.v1.ResourceStatus.last_updated)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace robot
}  // namespace viam


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::viam::robot::v1::ResourceStatus_State> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::viam::robot::v1::ResourceStatus_State>() {
  return ::viam::robot::v1::ResourceStatus_State_descriptor();
}
template <>
struct is_proto_enum<::viam::robot::v1::PeerConnectionType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::viam::robot::v1::PeerConnectionType>() {
  return ::viam::robot::v1::PeerConnectionType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_robot_2fv1_2frobot_2eproto_2epb_2eh
