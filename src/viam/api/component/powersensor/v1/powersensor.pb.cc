// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component/powersensor/v1/powersensor.proto

#include "component/powersensor/v1/powersensor.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace component {
namespace powersensor {
namespace v1 {
PROTOBUF_CONSTEXPR GetVoltageRequest::GetVoltageRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetVoltageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVoltageRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVoltageRequestDefaultTypeInternal() {}
  union {
    GetVoltageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVoltageRequestDefaultTypeInternal _GetVoltageRequest_default_instance_;
PROTOBUF_CONSTEXPR GetVoltageResponse::GetVoltageResponse(
    ::_pbi::ConstantInitialized)
  : volts_(0)
  , is_ac_(false){}
struct GetVoltageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVoltageResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVoltageResponseDefaultTypeInternal() {}
  union {
    GetVoltageResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVoltageResponseDefaultTypeInternal _GetVoltageResponse_default_instance_;
PROTOBUF_CONSTEXPR GetCurrentRequest::GetCurrentRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetCurrentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCurrentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCurrentRequestDefaultTypeInternal() {}
  union {
    GetCurrentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCurrentRequestDefaultTypeInternal _GetCurrentRequest_default_instance_;
PROTOBUF_CONSTEXPR GetCurrentResponse::GetCurrentResponse(
    ::_pbi::ConstantInitialized)
  : amperes_(0)
  , is_ac_(false){}
struct GetCurrentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCurrentResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCurrentResponseDefaultTypeInternal() {}
  union {
    GetCurrentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCurrentResponseDefaultTypeInternal _GetCurrentResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPowerRequest::GetPowerRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetPowerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPowerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPowerRequestDefaultTypeInternal() {}
  union {
    GetPowerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPowerRequestDefaultTypeInternal _GetPowerRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPowerResponse::GetPowerResponse(
    ::_pbi::ConstantInitialized)
  : watts_(0){}
struct GetPowerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPowerResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPowerResponseDefaultTypeInternal() {}
  union {
    GetPowerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPowerResponseDefaultTypeInternal _GetPowerResponse_default_instance_;
}  // namespace v1
}  // namespace powersensor
}  // namespace component
}  // namespace viam
static ::_pb::Metadata file_level_metadata_component_2fpowersensor_2fv1_2fpowersensor_2eproto[6];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_component_2fpowersensor_2fv1_2fpowersensor_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_component_2fpowersensor_2fv1_2fpowersensor_2eproto = nullptr;

const uint32_t TableStruct_component_2fpowersensor_2fv1_2fpowersensor_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetVoltageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetVoltageRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetVoltageRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetVoltageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetVoltageResponse, volts_),
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetVoltageResponse, is_ac_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetCurrentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetCurrentRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetCurrentRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetCurrentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetCurrentResponse, amperes_),
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetCurrentResponse, is_ac_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetPowerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetPowerRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetPowerRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetPowerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::powersensor::v1::GetPowerResponse, watts_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::component::powersensor::v1::GetVoltageRequest)},
  { 8, -1, -1, sizeof(::viam::component::powersensor::v1::GetVoltageResponse)},
  { 16, -1, -1, sizeof(::viam::component::powersensor::v1::GetCurrentRequest)},
  { 24, -1, -1, sizeof(::viam::component::powersensor::v1::GetCurrentResponse)},
  { 32, -1, -1, sizeof(::viam::component::powersensor::v1::GetPowerRequest)},
  { 40, -1, -1, sizeof(::viam::component::powersensor::v1::GetPowerResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::component::powersensor::v1::_GetVoltageRequest_default_instance_._instance,
  &::viam::component::powersensor::v1::_GetVoltageResponse_default_instance_._instance,
  &::viam::component::powersensor::v1::_GetCurrentRequest_default_instance_._instance,
  &::viam::component::powersensor::v1::_GetCurrentResponse_default_instance_._instance,
  &::viam::component::powersensor::v1::_GetPowerRequest_default_instance_._instance,
  &::viam::component::powersensor::v1::_GetPowerResponse_default_instance_._instance,
};

const char descriptor_table_protodef_component_2fpowersensor_2fv1_2fpowersensor_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*component/powersensor/v1/powersensor.p"
  "roto\022\035viam.component.powersensor.v1\032\026com"
  "mon/v1/common.proto\032\034google/api/annotati"
  "ons.proto\032\034google/protobuf/struct.proto\""
  "V\n\021GetVoltageRequest\022\022\n\004name\030\001 \001(\tR\004name"
  "\022-\n\005extra\030c \001(\0132\027.google.protobuf.Struct"
  "R\005extra\"\?\n\022GetVoltageResponse\022\024\n\005volts\030\001"
  " \001(\001R\005volts\022\023\n\005is_ac\030\002 \001(\010R\004isAc\"V\n\021GetC"
  "urrentRequest\022\022\n\004name\030\001 \001(\tR\004name\022-\n\005ext"
  "ra\030c \001(\0132\027.google.protobuf.StructR\005extra"
  "\"C\n\022GetCurrentResponse\022\030\n\007amperes\030\001 \001(\001R"
  "\007amperes\022\023\n\005is_ac\030\002 \001(\010R\004isAc\"T\n\017GetPowe"
  "rRequest\022\022\n\004name\030\001 \001(\tR\004name\022-\n\005extra\030c "
  "\001(\0132\027.google.protobuf.StructR\005extra\"(\n\020G"
  "etPowerResponse\022\024\n\005watts\030\001 \001(\001R\005watts2\256\005"
  "\n\022PowerSensorService\022\255\001\n\nGetVoltage\0220.vi"
  "am.component.powersensor.v1.GetVoltageRe"
  "quest\0321.viam.component.powersensor.v1.Ge"
  "tVoltageResponse\":\202\323\344\223\0024\0222/viam/api/v1/c"
  "omponent/power_sensor/{name}/voltage\022\255\001\n"
  "\nGetCurrent\0220.viam.component.powersensor"
  ".v1.GetCurrentRequest\0321.viam.component.p"
  "owersensor.v1.GetCurrentResponse\":\202\323\344\223\0024"
  "\0222/viam/api/v1/component/power_sensor/{n"
  "ame}/current\022\245\001\n\010GetPower\022..viam.compone"
  "nt.powersensor.v1.GetPowerRequest\032/.viam"
  ".component.powersensor.v1.GetPowerRespon"
  "se\"8\202\323\344\223\0022\0220/viam/api/v1/component/power"
  "_sensor/{name}/power\022\217\001\n\tDoCommand\022 .via"
  "m.common.v1.DoCommandRequest\032!.viam.comm"
  "on.v1.DoCommandResponse\"=\202\323\344\223\0027\"5/viam/a"
  "pi/v1/component/power_sensor/{name}/do_c"
  "ommandBM\n!com.viam.component.powersensor"
  ".v1Z(go.viam.com/api/component/powersens"
  "or/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_deps[3] = {
  &::descriptor_table_common_2fv1_2fcommon_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto = {
    false, false, 1373, descriptor_table_protodef_component_2fpowersensor_2fv1_2fpowersensor_2eproto,
    "component/powersensor/v1/powersensor.proto",
    &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_once, descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_deps, 3, 6,
    schemas, file_default_instances, TableStruct_component_2fpowersensor_2fv1_2fpowersensor_2eproto::offsets,
    file_level_metadata_component_2fpowersensor_2fv1_2fpowersensor_2eproto, file_level_enum_descriptors_component_2fpowersensor_2fv1_2fpowersensor_2eproto,
    file_level_service_descriptors_component_2fpowersensor_2fv1_2fpowersensor_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_getter() {
  return &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_component_2fpowersensor_2fv1_2fpowersensor_2eproto(&descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto);
namespace viam {
namespace component {
namespace powersensor {
namespace v1 {

// ===================================================================

class GetVoltageRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetVoltageRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetVoltageRequest::_Internal::extra(const GetVoltageRequest* msg) {
  return *msg->extra_;
}
void GetVoltageRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetVoltageRequest::GetVoltageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.powersensor.v1.GetVoltageRequest)
}
GetVoltageRequest::GetVoltageRequest(const GetVoltageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.powersensor.v1.GetVoltageRequest)
}

inline void GetVoltageRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetVoltageRequest::~GetVoltageRequest() {
  // @@protoc_insertion_point(destructor:viam.component.powersensor.v1.GetVoltageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVoltageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetVoltageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetVoltageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.powersensor.v1.GetVoltageRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVoltageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.powersensor.v1.GetVoltageRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVoltageRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.powersensor.v1.GetVoltageRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.powersensor.v1.GetVoltageRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.powersensor.v1.GetVoltageRequest)
  return target;
}

size_t GetVoltageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.powersensor.v1.GetVoltageRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVoltageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetVoltageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVoltageRequest::GetClassData() const { return &_class_data_; }

void GetVoltageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetVoltageRequest *>(to)->MergeFrom(
      static_cast<const GetVoltageRequest &>(from));
}


void GetVoltageRequest::MergeFrom(const GetVoltageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.powersensor.v1.GetVoltageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVoltageRequest::CopyFrom(const GetVoltageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.powersensor.v1.GetVoltageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVoltageRequest::IsInitialized() const {
  return true;
}

void GetVoltageRequest::InternalSwap(GetVoltageRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVoltageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_getter, &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_once,
      file_level_metadata_component_2fpowersensor_2fv1_2fpowersensor_2eproto[0]);
}

// ===================================================================

class GetVoltageResponse::_Internal {
 public:
};

GetVoltageResponse::GetVoltageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.powersensor.v1.GetVoltageResponse)
}
GetVoltageResponse::GetVoltageResponse(const GetVoltageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&volts_, &from.volts_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_ac_) -
    reinterpret_cast<char*>(&volts_)) + sizeof(is_ac_));
  // @@protoc_insertion_point(copy_constructor:viam.component.powersensor.v1.GetVoltageResponse)
}

inline void GetVoltageResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&volts_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_ac_) -
    reinterpret_cast<char*>(&volts_)) + sizeof(is_ac_));
}

GetVoltageResponse::~GetVoltageResponse() {
  // @@protoc_insertion_point(destructor:viam.component.powersensor.v1.GetVoltageResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVoltageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetVoltageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetVoltageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.powersensor.v1.GetVoltageResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&volts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ac_) -
      reinterpret_cast<char*>(&volts_)) + sizeof(is_ac_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVoltageResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double volts = 1 [json_name = "volts"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          volts_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool is_ac = 2 [json_name = "isAc"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          is_ac_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVoltageResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.powersensor.v1.GetVoltageResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double volts = 1 [json_name = "volts"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_volts = this->_internal_volts();
  uint64_t raw_volts;
  memcpy(&raw_volts, &tmp_volts, sizeof(tmp_volts));
  if (raw_volts != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_volts(), target);
  }

  // bool is_ac = 2 [json_name = "isAc"];
  if (this->_internal_is_ac() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_is_ac(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.powersensor.v1.GetVoltageResponse)
  return target;
}

size_t GetVoltageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.powersensor.v1.GetVoltageResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double volts = 1 [json_name = "volts"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_volts = this->_internal_volts();
  uint64_t raw_volts;
  memcpy(&raw_volts, &tmp_volts, sizeof(tmp_volts));
  if (raw_volts != 0) {
    total_size += 1 + 8;
  }

  // bool is_ac = 2 [json_name = "isAc"];
  if (this->_internal_is_ac() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVoltageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetVoltageResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVoltageResponse::GetClassData() const { return &_class_data_; }

void GetVoltageResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetVoltageResponse *>(to)->MergeFrom(
      static_cast<const GetVoltageResponse &>(from));
}


void GetVoltageResponse::MergeFrom(const GetVoltageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.powersensor.v1.GetVoltageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_volts = from._internal_volts();
  uint64_t raw_volts;
  memcpy(&raw_volts, &tmp_volts, sizeof(tmp_volts));
  if (raw_volts != 0) {
    _internal_set_volts(from._internal_volts());
  }
  if (from._internal_is_ac() != 0) {
    _internal_set_is_ac(from._internal_is_ac());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVoltageResponse::CopyFrom(const GetVoltageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.powersensor.v1.GetVoltageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVoltageResponse::IsInitialized() const {
  return true;
}

void GetVoltageResponse::InternalSwap(GetVoltageResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetVoltageResponse, is_ac_)
      + sizeof(GetVoltageResponse::is_ac_)
      - PROTOBUF_FIELD_OFFSET(GetVoltageResponse, volts_)>(
          reinterpret_cast<char*>(&volts_),
          reinterpret_cast<char*>(&other->volts_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVoltageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_getter, &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_once,
      file_level_metadata_component_2fpowersensor_2fv1_2fpowersensor_2eproto[1]);
}

// ===================================================================

class GetCurrentRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetCurrentRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetCurrentRequest::_Internal::extra(const GetCurrentRequest* msg) {
  return *msg->extra_;
}
void GetCurrentRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetCurrentRequest::GetCurrentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.powersensor.v1.GetCurrentRequest)
}
GetCurrentRequest::GetCurrentRequest(const GetCurrentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.powersensor.v1.GetCurrentRequest)
}

inline void GetCurrentRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetCurrentRequest::~GetCurrentRequest() {
  // @@protoc_insertion_point(destructor:viam.component.powersensor.v1.GetCurrentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCurrentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetCurrentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCurrentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.powersensor.v1.GetCurrentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCurrentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.powersensor.v1.GetCurrentRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCurrentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.powersensor.v1.GetCurrentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.powersensor.v1.GetCurrentRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.powersensor.v1.GetCurrentRequest)
  return target;
}

size_t GetCurrentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.powersensor.v1.GetCurrentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCurrentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetCurrentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCurrentRequest::GetClassData() const { return &_class_data_; }

void GetCurrentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetCurrentRequest *>(to)->MergeFrom(
      static_cast<const GetCurrentRequest &>(from));
}


void GetCurrentRequest::MergeFrom(const GetCurrentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.powersensor.v1.GetCurrentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCurrentRequest::CopyFrom(const GetCurrentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.powersensor.v1.GetCurrentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCurrentRequest::IsInitialized() const {
  return true;
}

void GetCurrentRequest::InternalSwap(GetCurrentRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCurrentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_getter, &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_once,
      file_level_metadata_component_2fpowersensor_2fv1_2fpowersensor_2eproto[2]);
}

// ===================================================================

class GetCurrentResponse::_Internal {
 public:
};

GetCurrentResponse::GetCurrentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.powersensor.v1.GetCurrentResponse)
}
GetCurrentResponse::GetCurrentResponse(const GetCurrentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&amperes_, &from.amperes_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_ac_) -
    reinterpret_cast<char*>(&amperes_)) + sizeof(is_ac_));
  // @@protoc_insertion_point(copy_constructor:viam.component.powersensor.v1.GetCurrentResponse)
}

inline void GetCurrentResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&amperes_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_ac_) -
    reinterpret_cast<char*>(&amperes_)) + sizeof(is_ac_));
}

GetCurrentResponse::~GetCurrentResponse() {
  // @@protoc_insertion_point(destructor:viam.component.powersensor.v1.GetCurrentResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCurrentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetCurrentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCurrentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.powersensor.v1.GetCurrentResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&amperes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ac_) -
      reinterpret_cast<char*>(&amperes_)) + sizeof(is_ac_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCurrentResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double amperes = 1 [json_name = "amperes"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          amperes_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool is_ac = 2 [json_name = "isAc"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          is_ac_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCurrentResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.powersensor.v1.GetCurrentResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double amperes = 1 [json_name = "amperes"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_amperes = this->_internal_amperes();
  uint64_t raw_amperes;
  memcpy(&raw_amperes, &tmp_amperes, sizeof(tmp_amperes));
  if (raw_amperes != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_amperes(), target);
  }

  // bool is_ac = 2 [json_name = "isAc"];
  if (this->_internal_is_ac() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_is_ac(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.powersensor.v1.GetCurrentResponse)
  return target;
}

size_t GetCurrentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.powersensor.v1.GetCurrentResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double amperes = 1 [json_name = "amperes"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_amperes = this->_internal_amperes();
  uint64_t raw_amperes;
  memcpy(&raw_amperes, &tmp_amperes, sizeof(tmp_amperes));
  if (raw_amperes != 0) {
    total_size += 1 + 8;
  }

  // bool is_ac = 2 [json_name = "isAc"];
  if (this->_internal_is_ac() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCurrentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetCurrentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCurrentResponse::GetClassData() const { return &_class_data_; }

void GetCurrentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetCurrentResponse *>(to)->MergeFrom(
      static_cast<const GetCurrentResponse &>(from));
}


void GetCurrentResponse::MergeFrom(const GetCurrentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.powersensor.v1.GetCurrentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_amperes = from._internal_amperes();
  uint64_t raw_amperes;
  memcpy(&raw_amperes, &tmp_amperes, sizeof(tmp_amperes));
  if (raw_amperes != 0) {
    _internal_set_amperes(from._internal_amperes());
  }
  if (from._internal_is_ac() != 0) {
    _internal_set_is_ac(from._internal_is_ac());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCurrentResponse::CopyFrom(const GetCurrentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.powersensor.v1.GetCurrentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCurrentResponse::IsInitialized() const {
  return true;
}

void GetCurrentResponse::InternalSwap(GetCurrentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetCurrentResponse, is_ac_)
      + sizeof(GetCurrentResponse::is_ac_)
      - PROTOBUF_FIELD_OFFSET(GetCurrentResponse, amperes_)>(
          reinterpret_cast<char*>(&amperes_),
          reinterpret_cast<char*>(&other->amperes_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCurrentResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_getter, &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_once,
      file_level_metadata_component_2fpowersensor_2fv1_2fpowersensor_2eproto[3]);
}

// ===================================================================

class GetPowerRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetPowerRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetPowerRequest::_Internal::extra(const GetPowerRequest* msg) {
  return *msg->extra_;
}
void GetPowerRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetPowerRequest::GetPowerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.powersensor.v1.GetPowerRequest)
}
GetPowerRequest::GetPowerRequest(const GetPowerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.powersensor.v1.GetPowerRequest)
}

inline void GetPowerRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetPowerRequest::~GetPowerRequest() {
  // @@protoc_insertion_point(destructor:viam.component.powersensor.v1.GetPowerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPowerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetPowerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPowerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.powersensor.v1.GetPowerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPowerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.powersensor.v1.GetPowerRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPowerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.powersensor.v1.GetPowerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.powersensor.v1.GetPowerRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.powersensor.v1.GetPowerRequest)
  return target;
}

size_t GetPowerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.powersensor.v1.GetPowerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPowerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPowerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPowerRequest::GetClassData() const { return &_class_data_; }

void GetPowerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPowerRequest *>(to)->MergeFrom(
      static_cast<const GetPowerRequest &>(from));
}


void GetPowerRequest::MergeFrom(const GetPowerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.powersensor.v1.GetPowerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPowerRequest::CopyFrom(const GetPowerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.powersensor.v1.GetPowerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPowerRequest::IsInitialized() const {
  return true;
}

void GetPowerRequest::InternalSwap(GetPowerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPowerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_getter, &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_once,
      file_level_metadata_component_2fpowersensor_2fv1_2fpowersensor_2eproto[4]);
}

// ===================================================================

class GetPowerResponse::_Internal {
 public:
};

GetPowerResponse::GetPowerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.powersensor.v1.GetPowerResponse)
}
GetPowerResponse::GetPowerResponse(const GetPowerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  watts_ = from.watts_;
  // @@protoc_insertion_point(copy_constructor:viam.component.powersensor.v1.GetPowerResponse)
}

inline void GetPowerResponse::SharedCtor() {
watts_ = 0;
}

GetPowerResponse::~GetPowerResponse() {
  // @@protoc_insertion_point(destructor:viam.component.powersensor.v1.GetPowerResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPowerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetPowerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPowerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.powersensor.v1.GetPowerResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  watts_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPowerResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double watts = 1 [json_name = "watts"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          watts_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPowerResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.powersensor.v1.GetPowerResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double watts = 1 [json_name = "watts"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_watts = this->_internal_watts();
  uint64_t raw_watts;
  memcpy(&raw_watts, &tmp_watts, sizeof(tmp_watts));
  if (raw_watts != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_watts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.powersensor.v1.GetPowerResponse)
  return target;
}

size_t GetPowerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.powersensor.v1.GetPowerResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double watts = 1 [json_name = "watts"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_watts = this->_internal_watts();
  uint64_t raw_watts;
  memcpy(&raw_watts, &tmp_watts, sizeof(tmp_watts));
  if (raw_watts != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPowerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPowerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPowerResponse::GetClassData() const { return &_class_data_; }

void GetPowerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPowerResponse *>(to)->MergeFrom(
      static_cast<const GetPowerResponse &>(from));
}


void GetPowerResponse::MergeFrom(const GetPowerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.powersensor.v1.GetPowerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_watts = from._internal_watts();
  uint64_t raw_watts;
  memcpy(&raw_watts, &tmp_watts, sizeof(tmp_watts));
  if (raw_watts != 0) {
    _internal_set_watts(from._internal_watts());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPowerResponse::CopyFrom(const GetPowerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.powersensor.v1.GetPowerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPowerResponse::IsInitialized() const {
  return true;
}

void GetPowerResponse::InternalSwap(GetPowerResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(watts_, other->watts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPowerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_getter, &descriptor_table_component_2fpowersensor_2fv1_2fpowersensor_2eproto_once,
      file_level_metadata_component_2fpowersensor_2fv1_2fpowersensor_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace powersensor
}  // namespace component
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::component::powersensor::v1::GetVoltageRequest*
Arena::CreateMaybeMessage< ::viam::component::powersensor::v1::GetVoltageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::powersensor::v1::GetVoltageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::powersensor::v1::GetVoltageResponse*
Arena::CreateMaybeMessage< ::viam::component::powersensor::v1::GetVoltageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::powersensor::v1::GetVoltageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::powersensor::v1::GetCurrentRequest*
Arena::CreateMaybeMessage< ::viam::component::powersensor::v1::GetCurrentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::powersensor::v1::GetCurrentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::powersensor::v1::GetCurrentResponse*
Arena::CreateMaybeMessage< ::viam::component::powersensor::v1::GetCurrentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::powersensor::v1::GetCurrentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::powersensor::v1::GetPowerRequest*
Arena::CreateMaybeMessage< ::viam::component::powersensor::v1::GetPowerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::powersensor::v1::GetPowerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::powersensor::v1::GetPowerResponse*
Arena::CreateMaybeMessage< ::viam::component::powersensor::v1::GetPowerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::powersensor::v1::GetPowerResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
