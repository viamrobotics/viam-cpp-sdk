// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component/movementsensor/v1/movementsensor.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "common/v1/common.pb.h"
#include "google/api/annotations.pb.h"
#include "google/protobuf/struct.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
namespace viam {
namespace component {
namespace movementsensor {
namespace v1 {
class GetAccuracyRequest;
struct GetAccuracyRequestDefaultTypeInternal;
extern GetAccuracyRequestDefaultTypeInternal _GetAccuracyRequest_default_instance_;
class GetAccuracyResponse;
struct GetAccuracyResponseDefaultTypeInternal;
extern GetAccuracyResponseDefaultTypeInternal _GetAccuracyResponse_default_instance_;
class GetAccuracyResponse_AccuracyEntry_DoNotUse;
struct GetAccuracyResponse_AccuracyEntry_DoNotUseDefaultTypeInternal;
extern GetAccuracyResponse_AccuracyEntry_DoNotUseDefaultTypeInternal _GetAccuracyResponse_AccuracyEntry_DoNotUse_default_instance_;
class GetAngularVelocityRequest;
struct GetAngularVelocityRequestDefaultTypeInternal;
extern GetAngularVelocityRequestDefaultTypeInternal _GetAngularVelocityRequest_default_instance_;
class GetAngularVelocityResponse;
struct GetAngularVelocityResponseDefaultTypeInternal;
extern GetAngularVelocityResponseDefaultTypeInternal _GetAngularVelocityResponse_default_instance_;
class GetCompassHeadingRequest;
struct GetCompassHeadingRequestDefaultTypeInternal;
extern GetCompassHeadingRequestDefaultTypeInternal _GetCompassHeadingRequest_default_instance_;
class GetCompassHeadingResponse;
struct GetCompassHeadingResponseDefaultTypeInternal;
extern GetCompassHeadingResponseDefaultTypeInternal _GetCompassHeadingResponse_default_instance_;
class GetLinearAccelerationRequest;
struct GetLinearAccelerationRequestDefaultTypeInternal;
extern GetLinearAccelerationRequestDefaultTypeInternal _GetLinearAccelerationRequest_default_instance_;
class GetLinearAccelerationResponse;
struct GetLinearAccelerationResponseDefaultTypeInternal;
extern GetLinearAccelerationResponseDefaultTypeInternal _GetLinearAccelerationResponse_default_instance_;
class GetLinearVelocityRequest;
struct GetLinearVelocityRequestDefaultTypeInternal;
extern GetLinearVelocityRequestDefaultTypeInternal _GetLinearVelocityRequest_default_instance_;
class GetLinearVelocityResponse;
struct GetLinearVelocityResponseDefaultTypeInternal;
extern GetLinearVelocityResponseDefaultTypeInternal _GetLinearVelocityResponse_default_instance_;
class GetOrientationRequest;
struct GetOrientationRequestDefaultTypeInternal;
extern GetOrientationRequestDefaultTypeInternal _GetOrientationRequest_default_instance_;
class GetOrientationResponse;
struct GetOrientationResponseDefaultTypeInternal;
extern GetOrientationResponseDefaultTypeInternal _GetOrientationResponse_default_instance_;
class GetPositionRequest;
struct GetPositionRequestDefaultTypeInternal;
extern GetPositionRequestDefaultTypeInternal _GetPositionRequest_default_instance_;
class GetPositionResponse;
struct GetPositionResponseDefaultTypeInternal;
extern GetPositionResponseDefaultTypeInternal _GetPositionResponse_default_instance_;
class GetPropertiesRequest;
struct GetPropertiesRequestDefaultTypeInternal;
extern GetPropertiesRequestDefaultTypeInternal _GetPropertiesRequest_default_instance_;
class GetPropertiesResponse;
struct GetPropertiesResponseDefaultTypeInternal;
extern GetPropertiesResponseDefaultTypeInternal _GetPropertiesResponse_default_instance_;
}  // namespace v1
}  // namespace movementsensor
}  // namespace component
}  // namespace viam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace viam {
namespace component {
namespace movementsensor {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class GetPropertiesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetPropertiesResponse) */ {
 public:
  inline GetPropertiesResponse() : GetPropertiesResponse(nullptr) {}
  ~GetPropertiesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPropertiesResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetPropertiesResponse(const GetPropertiesResponse& from)
      : GetPropertiesResponse(nullptr, from) {}
  GetPropertiesResponse(GetPropertiesResponse&& from) noexcept
    : GetPropertiesResponse() {
    *this = ::std::move(from);
  }

  inline GetPropertiesResponse& operator=(const GetPropertiesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPropertiesResponse& operator=(GetPropertiesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPropertiesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPropertiesResponse* internal_default_instance() {
    return reinterpret_cast<const GetPropertiesResponse*>(
               &_GetPropertiesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(GetPropertiesResponse& a, GetPropertiesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPropertiesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPropertiesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPropertiesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPropertiesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPropertiesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPropertiesResponse& from) {
    GetPropertiesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPropertiesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetPropertiesResponse";
  }
  protected:
  explicit GetPropertiesResponse(::google::protobuf::Arena* arena);
  GetPropertiesResponse(::google::protobuf::Arena* arena, const GetPropertiesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLinearVelocitySupportedFieldNumber = 1,
    kAngularVelocitySupportedFieldNumber = 2,
    kOrientationSupportedFieldNumber = 3,
    kPositionSupportedFieldNumber = 4,
    kCompassHeadingSupportedFieldNumber = 5,
    kLinearAccelerationSupportedFieldNumber = 6,
  };
  // bool linear_velocity_supported = 1 [json_name = "linearVelocitySupported"];
  void clear_linear_velocity_supported() ;
  bool linear_velocity_supported() const;
  void set_linear_velocity_supported(bool value);

  private:
  bool _internal_linear_velocity_supported() const;
  void _internal_set_linear_velocity_supported(bool value);

  public:
  // bool angular_velocity_supported = 2 [json_name = "angularVelocitySupported"];
  void clear_angular_velocity_supported() ;
  bool angular_velocity_supported() const;
  void set_angular_velocity_supported(bool value);

  private:
  bool _internal_angular_velocity_supported() const;
  void _internal_set_angular_velocity_supported(bool value);

  public:
  // bool orientation_supported = 3 [json_name = "orientationSupported"];
  void clear_orientation_supported() ;
  bool orientation_supported() const;
  void set_orientation_supported(bool value);

  private:
  bool _internal_orientation_supported() const;
  void _internal_set_orientation_supported(bool value);

  public:
  // bool position_supported = 4 [json_name = "positionSupported"];
  void clear_position_supported() ;
  bool position_supported() const;
  void set_position_supported(bool value);

  private:
  bool _internal_position_supported() const;
  void _internal_set_position_supported(bool value);

  public:
  // bool compass_heading_supported = 5 [json_name = "compassHeadingSupported"];
  void clear_compass_heading_supported() ;
  bool compass_heading_supported() const;
  void set_compass_heading_supported(bool value);

  private:
  bool _internal_compass_heading_supported() const;
  void _internal_set_compass_heading_supported(bool value);

  public:
  // bool linear_acceleration_supported = 6 [json_name = "linearAccelerationSupported"];
  void clear_linear_acceleration_supported() ;
  bool linear_acceleration_supported() const;
  void set_linear_acceleration_supported(bool value);

  private:
  bool _internal_linear_acceleration_supported() const;
  void _internal_set_linear_acceleration_supported(bool value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetPropertiesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool linear_velocity_supported_;
    bool angular_velocity_supported_;
    bool orientation_supported_;
    bool position_supported_;
    bool compass_heading_supported_;
    bool linear_acceleration_supported_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetCompassHeadingResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetCompassHeadingResponse) */ {
 public:
  inline GetCompassHeadingResponse() : GetCompassHeadingResponse(nullptr) {}
  ~GetCompassHeadingResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetCompassHeadingResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetCompassHeadingResponse(const GetCompassHeadingResponse& from)
      : GetCompassHeadingResponse(nullptr, from) {}
  GetCompassHeadingResponse(GetCompassHeadingResponse&& from) noexcept
    : GetCompassHeadingResponse() {
    *this = ::std::move(from);
  }

  inline GetCompassHeadingResponse& operator=(const GetCompassHeadingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCompassHeadingResponse& operator=(GetCompassHeadingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCompassHeadingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCompassHeadingResponse* internal_default_instance() {
    return reinterpret_cast<const GetCompassHeadingResponse*>(
               &_GetCompassHeadingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetCompassHeadingResponse& a, GetCompassHeadingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCompassHeadingResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCompassHeadingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCompassHeadingResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetCompassHeadingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCompassHeadingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetCompassHeadingResponse& from) {
    GetCompassHeadingResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetCompassHeadingResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetCompassHeadingResponse";
  }
  protected:
  explicit GetCompassHeadingResponse(::google::protobuf::Arena* arena);
  GetCompassHeadingResponse(::google::protobuf::Arena* arena, const GetCompassHeadingResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // double value = 1 [json_name = "value"];
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetCompassHeadingResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetAccuracyResponse_AccuracyEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GetAccuracyResponse_AccuracyEntry_DoNotUse, std::string, float,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GetAccuracyResponse_AccuracyEntry_DoNotUse, std::string, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>;
  GetAccuracyResponse_AccuracyEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAccuracyResponse_AccuracyEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetAccuracyResponse_AccuracyEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GetAccuracyResponse_AccuracyEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GetAccuracyResponse_AccuracyEntry_DoNotUse*>(
        &_GetAccuracyResponse_AccuracyEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "viam.component.movementsensor.v1.GetAccuracyResponse.AccuracyEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};
// -------------------------------------------------------------------

class GetPropertiesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetPropertiesRequest) */ {
 public:
  inline GetPropertiesRequest() : GetPropertiesRequest(nullptr) {}
  ~GetPropertiesRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPropertiesRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetPropertiesRequest(const GetPropertiesRequest& from)
      : GetPropertiesRequest(nullptr, from) {}
  GetPropertiesRequest(GetPropertiesRequest&& from) noexcept
    : GetPropertiesRequest() {
    *this = ::std::move(from);
  }

  inline GetPropertiesRequest& operator=(const GetPropertiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPropertiesRequest& operator=(GetPropertiesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPropertiesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPropertiesRequest* internal_default_instance() {
    return reinterpret_cast<const GetPropertiesRequest*>(
               &_GetPropertiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(GetPropertiesRequest& a, GetPropertiesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPropertiesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPropertiesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPropertiesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPropertiesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPropertiesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPropertiesRequest& from) {
    GetPropertiesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPropertiesRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetPropertiesRequest";
  }
  protected:
  explicit GetPropertiesRequest(::google::protobuf::Arena* arena);
  GetPropertiesRequest(::google::protobuf::Arena* arena, const GetPropertiesRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetPropertiesRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      66, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetPositionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetPositionResponse) */ {
 public:
  inline GetPositionResponse() : GetPositionResponse(nullptr) {}
  ~GetPositionResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPositionResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetPositionResponse(const GetPositionResponse& from)
      : GetPositionResponse(nullptr, from) {}
  GetPositionResponse(GetPositionResponse&& from) noexcept
    : GetPositionResponse() {
    *this = ::std::move(from);
  }

  inline GetPositionResponse& operator=(const GetPositionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPositionResponse& operator=(GetPositionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPositionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPositionResponse* internal_default_instance() {
    return reinterpret_cast<const GetPositionResponse*>(
               &_GetPositionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GetPositionResponse& a, GetPositionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPositionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPositionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPositionResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPositionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPositionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPositionResponse& from) {
    GetPositionResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPositionResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetPositionResponse";
  }
  protected:
  explicit GetPositionResponse(::google::protobuf::Arena* arena);
  GetPositionResponse(::google::protobuf::Arena* arena, const GetPositionResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCoordinateFieldNumber = 1,
    kAltitudeMFieldNumber = 2,
  };
  // .viam.common.v1.GeoPoint coordinate = 1 [json_name = "coordinate"];
  bool has_coordinate() const;
  void clear_coordinate() ;
  const ::viam::common::v1::GeoPoint& coordinate() const;
  PROTOBUF_NODISCARD ::viam::common::v1::GeoPoint* release_coordinate();
  ::viam::common::v1::GeoPoint* mutable_coordinate();
  void set_allocated_coordinate(::viam::common::v1::GeoPoint* value);
  void unsafe_arena_set_allocated_coordinate(::viam::common::v1::GeoPoint* value);
  ::viam::common::v1::GeoPoint* unsafe_arena_release_coordinate();

  private:
  const ::viam::common::v1::GeoPoint& _internal_coordinate() const;
  ::viam::common::v1::GeoPoint* _internal_mutable_coordinate();

  public:
  // float altitude_m = 2 [json_name = "altitudeM"];
  void clear_altitude_m() ;
  float altitude_m() const;
  void set_altitude_m(float value);

  private:
  float _internal_altitude_m() const;
  void _internal_set_altitude_m(float value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetPositionResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::common::v1::GeoPoint* coordinate_;
    float altitude_m_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetPositionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetPositionRequest) */ {
 public:
  inline GetPositionRequest() : GetPositionRequest(nullptr) {}
  ~GetPositionRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPositionRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetPositionRequest(const GetPositionRequest& from)
      : GetPositionRequest(nullptr, from) {}
  GetPositionRequest(GetPositionRequest&& from) noexcept
    : GetPositionRequest() {
    *this = ::std::move(from);
  }

  inline GetPositionRequest& operator=(const GetPositionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPositionRequest& operator=(GetPositionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPositionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPositionRequest* internal_default_instance() {
    return reinterpret_cast<const GetPositionRequest*>(
               &_GetPositionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GetPositionRequest& a, GetPositionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPositionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPositionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPositionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPositionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPositionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPositionRequest& from) {
    GetPositionRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPositionRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetPositionRequest";
  }
  protected:
  explicit GetPositionRequest(::google::protobuf::Arena* arena);
  GetPositionRequest(::google::protobuf::Arena* arena, const GetPositionRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetPositionRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      64, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetOrientationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetOrientationResponse) */ {
 public:
  inline GetOrientationResponse() : GetOrientationResponse(nullptr) {}
  ~GetOrientationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrientationResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetOrientationResponse(const GetOrientationResponse& from)
      : GetOrientationResponse(nullptr, from) {}
  GetOrientationResponse(GetOrientationResponse&& from) noexcept
    : GetOrientationResponse() {
    *this = ::std::move(from);
  }

  inline GetOrientationResponse& operator=(const GetOrientationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrientationResponse& operator=(GetOrientationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrientationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOrientationResponse* internal_default_instance() {
    return reinterpret_cast<const GetOrientationResponse*>(
               &_GetOrientationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GetOrientationResponse& a, GetOrientationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOrientationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrientationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrientationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetOrientationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrientationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetOrientationResponse& from) {
    GetOrientationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetOrientationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetOrientationResponse";
  }
  protected:
  explicit GetOrientationResponse(::google::protobuf::Arena* arena);
  GetOrientationResponse(::google::protobuf::Arena* arena, const GetOrientationResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrientationFieldNumber = 1,
  };
  // .viam.common.v1.Orientation orientation = 1 [json_name = "orientation"];
  bool has_orientation() const;
  void clear_orientation() ;
  const ::viam::common::v1::Orientation& orientation() const;
  PROTOBUF_NODISCARD ::viam::common::v1::Orientation* release_orientation();
  ::viam::common::v1::Orientation* mutable_orientation();
  void set_allocated_orientation(::viam::common::v1::Orientation* value);
  void unsafe_arena_set_allocated_orientation(::viam::common::v1::Orientation* value);
  ::viam::common::v1::Orientation* unsafe_arena_release_orientation();

  private:
  const ::viam::common::v1::Orientation& _internal_orientation() const;
  ::viam::common::v1::Orientation* _internal_mutable_orientation();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetOrientationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::common::v1::Orientation* orientation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetOrientationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetOrientationRequest) */ {
 public:
  inline GetOrientationRequest() : GetOrientationRequest(nullptr) {}
  ~GetOrientationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrientationRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetOrientationRequest(const GetOrientationRequest& from)
      : GetOrientationRequest(nullptr, from) {}
  GetOrientationRequest(GetOrientationRequest&& from) noexcept
    : GetOrientationRequest() {
    *this = ::std::move(from);
  }

  inline GetOrientationRequest& operator=(const GetOrientationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrientationRequest& operator=(GetOrientationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrientationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOrientationRequest* internal_default_instance() {
    return reinterpret_cast<const GetOrientationRequest*>(
               &_GetOrientationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetOrientationRequest& a, GetOrientationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOrientationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrientationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrientationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetOrientationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrientationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetOrientationRequest& from) {
    GetOrientationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetOrientationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetOrientationRequest";
  }
  protected:
  explicit GetOrientationRequest(::google::protobuf::Arena* arena);
  GetOrientationRequest(::google::protobuf::Arena* arena, const GetOrientationRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetOrientationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      67, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetLinearVelocityResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetLinearVelocityResponse) */ {
 public:
  inline GetLinearVelocityResponse() : GetLinearVelocityResponse(nullptr) {}
  ~GetLinearVelocityResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLinearVelocityResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetLinearVelocityResponse(const GetLinearVelocityResponse& from)
      : GetLinearVelocityResponse(nullptr, from) {}
  GetLinearVelocityResponse(GetLinearVelocityResponse&& from) noexcept
    : GetLinearVelocityResponse() {
    *this = ::std::move(from);
  }

  inline GetLinearVelocityResponse& operator=(const GetLinearVelocityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLinearVelocityResponse& operator=(GetLinearVelocityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLinearVelocityResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLinearVelocityResponse* internal_default_instance() {
    return reinterpret_cast<const GetLinearVelocityResponse*>(
               &_GetLinearVelocityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetLinearVelocityResponse& a, GetLinearVelocityResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLinearVelocityResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLinearVelocityResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLinearVelocityResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLinearVelocityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLinearVelocityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLinearVelocityResponse& from) {
    GetLinearVelocityResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetLinearVelocityResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetLinearVelocityResponse";
  }
  protected:
  explicit GetLinearVelocityResponse(::google::protobuf::Arena* arena);
  GetLinearVelocityResponse(::google::protobuf::Arena* arena, const GetLinearVelocityResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLinearVelocityFieldNumber = 1,
  };
  // .viam.common.v1.Vector3 linear_velocity = 1 [json_name = "linearVelocity"];
  bool has_linear_velocity() const;
  void clear_linear_velocity() ;
  const ::viam::common::v1::Vector3& linear_velocity() const;
  PROTOBUF_NODISCARD ::viam::common::v1::Vector3* release_linear_velocity();
  ::viam::common::v1::Vector3* mutable_linear_velocity();
  void set_allocated_linear_velocity(::viam::common::v1::Vector3* value);
  void unsafe_arena_set_allocated_linear_velocity(::viam::common::v1::Vector3* value);
  ::viam::common::v1::Vector3* unsafe_arena_release_linear_velocity();

  private:
  const ::viam::common::v1::Vector3& _internal_linear_velocity() const;
  ::viam::common::v1::Vector3* _internal_mutable_linear_velocity();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetLinearVelocityResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::common::v1::Vector3* linear_velocity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetLinearVelocityRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetLinearVelocityRequest) */ {
 public:
  inline GetLinearVelocityRequest() : GetLinearVelocityRequest(nullptr) {}
  ~GetLinearVelocityRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLinearVelocityRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetLinearVelocityRequest(const GetLinearVelocityRequest& from)
      : GetLinearVelocityRequest(nullptr, from) {}
  GetLinearVelocityRequest(GetLinearVelocityRequest&& from) noexcept
    : GetLinearVelocityRequest() {
    *this = ::std::move(from);
  }

  inline GetLinearVelocityRequest& operator=(const GetLinearVelocityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLinearVelocityRequest& operator=(GetLinearVelocityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLinearVelocityRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLinearVelocityRequest* internal_default_instance() {
    return reinterpret_cast<const GetLinearVelocityRequest*>(
               &_GetLinearVelocityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetLinearVelocityRequest& a, GetLinearVelocityRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLinearVelocityRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLinearVelocityRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLinearVelocityRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLinearVelocityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLinearVelocityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLinearVelocityRequest& from) {
    GetLinearVelocityRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetLinearVelocityRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetLinearVelocityRequest";
  }
  protected:
  explicit GetLinearVelocityRequest(::google::protobuf::Arena* arena);
  GetLinearVelocityRequest(::google::protobuf::Arena* arena, const GetLinearVelocityRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetLinearVelocityRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      70, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetLinearAccelerationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetLinearAccelerationResponse) */ {
 public:
  inline GetLinearAccelerationResponse() : GetLinearAccelerationResponse(nullptr) {}
  ~GetLinearAccelerationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLinearAccelerationResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetLinearAccelerationResponse(const GetLinearAccelerationResponse& from)
      : GetLinearAccelerationResponse(nullptr, from) {}
  GetLinearAccelerationResponse(GetLinearAccelerationResponse&& from) noexcept
    : GetLinearAccelerationResponse() {
    *this = ::std::move(from);
  }

  inline GetLinearAccelerationResponse& operator=(const GetLinearAccelerationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLinearAccelerationResponse& operator=(GetLinearAccelerationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLinearAccelerationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLinearAccelerationResponse* internal_default_instance() {
    return reinterpret_cast<const GetLinearAccelerationResponse*>(
               &_GetLinearAccelerationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(GetLinearAccelerationResponse& a, GetLinearAccelerationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLinearAccelerationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLinearAccelerationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLinearAccelerationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLinearAccelerationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLinearAccelerationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLinearAccelerationResponse& from) {
    GetLinearAccelerationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetLinearAccelerationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetLinearAccelerationResponse";
  }
  protected:
  explicit GetLinearAccelerationResponse(::google::protobuf::Arena* arena);
  GetLinearAccelerationResponse(::google::protobuf::Arena* arena, const GetLinearAccelerationResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLinearAccelerationFieldNumber = 1,
  };
  // .viam.common.v1.Vector3 linear_acceleration = 1 [json_name = "linearAcceleration"];
  bool has_linear_acceleration() const;
  void clear_linear_acceleration() ;
  const ::viam::common::v1::Vector3& linear_acceleration() const;
  PROTOBUF_NODISCARD ::viam::common::v1::Vector3* release_linear_acceleration();
  ::viam::common::v1::Vector3* mutable_linear_acceleration();
  void set_allocated_linear_acceleration(::viam::common::v1::Vector3* value);
  void unsafe_arena_set_allocated_linear_acceleration(::viam::common::v1::Vector3* value);
  ::viam::common::v1::Vector3* unsafe_arena_release_linear_acceleration();

  private:
  const ::viam::common::v1::Vector3& _internal_linear_acceleration() const;
  ::viam::common::v1::Vector3* _internal_mutable_linear_acceleration();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetLinearAccelerationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::common::v1::Vector3* linear_acceleration_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetLinearAccelerationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetLinearAccelerationRequest) */ {
 public:
  inline GetLinearAccelerationRequest() : GetLinearAccelerationRequest(nullptr) {}
  ~GetLinearAccelerationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetLinearAccelerationRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetLinearAccelerationRequest(const GetLinearAccelerationRequest& from)
      : GetLinearAccelerationRequest(nullptr, from) {}
  GetLinearAccelerationRequest(GetLinearAccelerationRequest&& from) noexcept
    : GetLinearAccelerationRequest() {
    *this = ::std::move(from);
  }

  inline GetLinearAccelerationRequest& operator=(const GetLinearAccelerationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLinearAccelerationRequest& operator=(GetLinearAccelerationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLinearAccelerationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLinearAccelerationRequest* internal_default_instance() {
    return reinterpret_cast<const GetLinearAccelerationRequest*>(
               &_GetLinearAccelerationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(GetLinearAccelerationRequest& a, GetLinearAccelerationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLinearAccelerationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLinearAccelerationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLinearAccelerationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLinearAccelerationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLinearAccelerationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetLinearAccelerationRequest& from) {
    GetLinearAccelerationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetLinearAccelerationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetLinearAccelerationRequest";
  }
  protected:
  explicit GetLinearAccelerationRequest(::google::protobuf::Arena* arena);
  GetLinearAccelerationRequest(::google::protobuf::Arena* arena, const GetLinearAccelerationRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetLinearAccelerationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      74, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetCompassHeadingRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetCompassHeadingRequest) */ {
 public:
  inline GetCompassHeadingRequest() : GetCompassHeadingRequest(nullptr) {}
  ~GetCompassHeadingRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetCompassHeadingRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetCompassHeadingRequest(const GetCompassHeadingRequest& from)
      : GetCompassHeadingRequest(nullptr, from) {}
  GetCompassHeadingRequest(GetCompassHeadingRequest&& from) noexcept
    : GetCompassHeadingRequest() {
    *this = ::std::move(from);
  }

  inline GetCompassHeadingRequest& operator=(const GetCompassHeadingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCompassHeadingRequest& operator=(GetCompassHeadingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCompassHeadingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCompassHeadingRequest* internal_default_instance() {
    return reinterpret_cast<const GetCompassHeadingRequest*>(
               &_GetCompassHeadingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetCompassHeadingRequest& a, GetCompassHeadingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCompassHeadingRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCompassHeadingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCompassHeadingRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetCompassHeadingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCompassHeadingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetCompassHeadingRequest& from) {
    GetCompassHeadingRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetCompassHeadingRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetCompassHeadingRequest";
  }
  protected:
  explicit GetCompassHeadingRequest(::google::protobuf::Arena* arena);
  GetCompassHeadingRequest(::google::protobuf::Arena* arena, const GetCompassHeadingRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetCompassHeadingRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      70, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetAngularVelocityResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetAngularVelocityResponse) */ {
 public:
  inline GetAngularVelocityResponse() : GetAngularVelocityResponse(nullptr) {}
  ~GetAngularVelocityResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetAngularVelocityResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetAngularVelocityResponse(const GetAngularVelocityResponse& from)
      : GetAngularVelocityResponse(nullptr, from) {}
  GetAngularVelocityResponse(GetAngularVelocityResponse&& from) noexcept
    : GetAngularVelocityResponse() {
    *this = ::std::move(from);
  }

  inline GetAngularVelocityResponse& operator=(const GetAngularVelocityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAngularVelocityResponse& operator=(GetAngularVelocityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAngularVelocityResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAngularVelocityResponse* internal_default_instance() {
    return reinterpret_cast<const GetAngularVelocityResponse*>(
               &_GetAngularVelocityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetAngularVelocityResponse& a, GetAngularVelocityResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAngularVelocityResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAngularVelocityResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAngularVelocityResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetAngularVelocityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAngularVelocityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetAngularVelocityResponse& from) {
    GetAngularVelocityResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetAngularVelocityResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetAngularVelocityResponse";
  }
  protected:
  explicit GetAngularVelocityResponse(::google::protobuf::Arena* arena);
  GetAngularVelocityResponse(::google::protobuf::Arena* arena, const GetAngularVelocityResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAngularVelocityFieldNumber = 1,
  };
  // .viam.common.v1.Vector3 angular_velocity = 1 [json_name = "angularVelocity"];
  bool has_angular_velocity() const;
  void clear_angular_velocity() ;
  const ::viam::common::v1::Vector3& angular_velocity() const;
  PROTOBUF_NODISCARD ::viam::common::v1::Vector3* release_angular_velocity();
  ::viam::common::v1::Vector3* mutable_angular_velocity();
  void set_allocated_angular_velocity(::viam::common::v1::Vector3* value);
  void unsafe_arena_set_allocated_angular_velocity(::viam::common::v1::Vector3* value);
  ::viam::common::v1::Vector3* unsafe_arena_release_angular_velocity();

  private:
  const ::viam::common::v1::Vector3& _internal_angular_velocity() const;
  ::viam::common::v1::Vector3* _internal_mutable_angular_velocity();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetAngularVelocityResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::viam::common::v1::Vector3* angular_velocity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetAngularVelocityRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetAngularVelocityRequest) */ {
 public:
  inline GetAngularVelocityRequest() : GetAngularVelocityRequest(nullptr) {}
  ~GetAngularVelocityRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetAngularVelocityRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetAngularVelocityRequest(const GetAngularVelocityRequest& from)
      : GetAngularVelocityRequest(nullptr, from) {}
  GetAngularVelocityRequest(GetAngularVelocityRequest&& from) noexcept
    : GetAngularVelocityRequest() {
    *this = ::std::move(from);
  }

  inline GetAngularVelocityRequest& operator=(const GetAngularVelocityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAngularVelocityRequest& operator=(GetAngularVelocityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAngularVelocityRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAngularVelocityRequest* internal_default_instance() {
    return reinterpret_cast<const GetAngularVelocityRequest*>(
               &_GetAngularVelocityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetAngularVelocityRequest& a, GetAngularVelocityRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAngularVelocityRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAngularVelocityRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAngularVelocityRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetAngularVelocityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAngularVelocityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetAngularVelocityRequest& from) {
    GetAngularVelocityRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetAngularVelocityRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetAngularVelocityRequest";
  }
  protected:
  explicit GetAngularVelocityRequest(::google::protobuf::Arena* arena);
  GetAngularVelocityRequest(::google::protobuf::Arena* arena, const GetAngularVelocityRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetAngularVelocityRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      71, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetAccuracyResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetAccuracyResponse) */ {
 public:
  inline GetAccuracyResponse() : GetAccuracyResponse(nullptr) {}
  ~GetAccuracyResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetAccuracyResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetAccuracyResponse(const GetAccuracyResponse& from)
      : GetAccuracyResponse(nullptr, from) {}
  GetAccuracyResponse(GetAccuracyResponse&& from) noexcept
    : GetAccuracyResponse() {
    *this = ::std::move(from);
  }

  inline GetAccuracyResponse& operator=(const GetAccuracyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAccuracyResponse& operator=(GetAccuracyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAccuracyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAccuracyResponse* internal_default_instance() {
    return reinterpret_cast<const GetAccuracyResponse*>(
               &_GetAccuracyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(GetAccuracyResponse& a, GetAccuracyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAccuracyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAccuracyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAccuracyResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetAccuracyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAccuracyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetAccuracyResponse& from) {
    GetAccuracyResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetAccuracyResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetAccuracyResponse";
  }
  protected:
  explicit GetAccuracyResponse(::google::protobuf::Arena* arena);
  GetAccuracyResponse(::google::protobuf::Arena* arena, const GetAccuracyResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kAccuracyFieldNumber = 1,
    kPositionHdopFieldNumber = 2,
    kPositionVdopFieldNumber = 3,
    kPositionNmeaGgaFixFieldNumber = 4,
    kCompassDegreesErrorFieldNumber = 5,
  };
  // map<string, float> accuracy = 1 [json_name = "accuracy"];
  int accuracy_size() const;
  private:
  int _internal_accuracy_size() const;

  public:
  void clear_accuracy() ;
  const ::google::protobuf::Map<std::string, float>& accuracy() const;
  ::google::protobuf::Map<std::string, float>* mutable_accuracy();

  private:
  const ::google::protobuf::Map<std::string, float>& _internal_accuracy() const;
  ::google::protobuf::Map<std::string, float>* _internal_mutable_accuracy();

  public:
  // optional float position_hdop = 2 [json_name = "positionHdop"];
  bool has_position_hdop() const;
  void clear_position_hdop() ;
  float position_hdop() const;
  void set_position_hdop(float value);

  private:
  float _internal_position_hdop() const;
  void _internal_set_position_hdop(float value);

  public:
  // optional float position_vdop = 3 [json_name = "positionVdop"];
  bool has_position_vdop() const;
  void clear_position_vdop() ;
  float position_vdop() const;
  void set_position_vdop(float value);

  private:
  float _internal_position_vdop() const;
  void _internal_set_position_vdop(float value);

  public:
  // optional int32 position_nmea_gga_fix = 4 [json_name = "positionNmeaGgaFix"];
  bool has_position_nmea_gga_fix() const;
  void clear_position_nmea_gga_fix() ;
  ::int32_t position_nmea_gga_fix() const;
  void set_position_nmea_gga_fix(::int32_t value);

  private:
  ::int32_t _internal_position_nmea_gga_fix() const;
  void _internal_set_position_nmea_gga_fix(::int32_t value);

  public:
  // optional float compass_degrees_error = 5 [json_name = "compassDegreesError"];
  bool has_compass_degrees_error() const;
  void clear_compass_degrees_error() ;
  float compass_degrees_error() const;
  void set_compass_degrees_error(float value);

  private:
  float _internal_compass_degrees_error() const;
  void _internal_set_compass_degrees_error(float value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetAccuracyResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 1,
      69, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<GetAccuracyResponse_AccuracyEntry_DoNotUse, std::string, float,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>
        accuracy_;
    float position_hdop_;
    float position_vdop_;
    ::int32_t position_nmea_gga_fix_;
    float compass_degrees_error_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};// -------------------------------------------------------------------

class GetAccuracyRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.movementsensor.v1.GetAccuracyRequest) */ {
 public:
  inline GetAccuracyRequest() : GetAccuracyRequest(nullptr) {}
  ~GetAccuracyRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetAccuracyRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetAccuracyRequest(const GetAccuracyRequest& from)
      : GetAccuracyRequest(nullptr, from) {}
  GetAccuracyRequest(GetAccuracyRequest&& from) noexcept
    : GetAccuracyRequest() {
    *this = ::std::move(from);
  }

  inline GetAccuracyRequest& operator=(const GetAccuracyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAccuracyRequest& operator=(GetAccuracyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAccuracyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAccuracyRequest* internal_default_instance() {
    return reinterpret_cast<const GetAccuracyRequest*>(
               &_GetAccuracyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GetAccuracyRequest& a, GetAccuracyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetAccuracyRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAccuracyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAccuracyRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetAccuracyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAccuracyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetAccuracyRequest& from) {
    GetAccuracyRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetAccuracyRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.movementsensor.v1.GetAccuracyRequest";
  }
  protected:
  explicit GetAccuracyRequest(::google::protobuf::Arena* arena);
  GetAccuracyRequest(::google::protobuf::Arena* arena, const GetAccuracyRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.movementsensor.v1.GetAccuracyRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      64, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetLinearVelocityRequest

// string name = 1 [json_name = "name"];
inline void GetLinearVelocityRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetLinearVelocityRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetLinearVelocityRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetLinearVelocityRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetLinearVelocityRequest.name)
}
inline std::string* GetLinearVelocityRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetLinearVelocityRequest.name)
  return _s;
}
inline const std::string& GetLinearVelocityRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetLinearVelocityRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetLinearVelocityRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetLinearVelocityRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetLinearVelocityRequest.name)
  return _impl_.name_.Release();
}
inline void GetLinearVelocityRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetLinearVelocityRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetLinearVelocityRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetLinearVelocityRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetLinearVelocityRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetLinearVelocityRequest.extra)
  return _internal_extra();
}
inline void GetLinearVelocityRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.movementsensor.v1.GetLinearVelocityRequest.extra)
}
inline ::google::protobuf::Struct* GetLinearVelocityRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetLinearVelocityRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetLinearVelocityRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetLinearVelocityRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetLinearVelocityRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetLinearVelocityRequest.extra)
  return _msg;
}
inline void GetLinearVelocityRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetLinearVelocityRequest.extra)
}

// -------------------------------------------------------------------

// GetLinearVelocityResponse

// .viam.common.v1.Vector3 linear_velocity = 1 [json_name = "linearVelocity"];
inline bool GetLinearVelocityResponse::has_linear_velocity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.linear_velocity_ != nullptr);
  return value;
}
inline const ::viam::common::v1::Vector3& GetLinearVelocityResponse::_internal_linear_velocity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::Vector3* p = _impl_.linear_velocity_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::Vector3&>(::viam::common::v1::_Vector3_default_instance_);
}
inline const ::viam::common::v1::Vector3& GetLinearVelocityResponse::linear_velocity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetLinearVelocityResponse.linear_velocity)
  return _internal_linear_velocity();
}
inline void GetLinearVelocityResponse::unsafe_arena_set_allocated_linear_velocity(::viam::common::v1::Vector3* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_velocity_);
  }
  _impl_.linear_velocity_ = reinterpret_cast<::viam::common::v1::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.movementsensor.v1.GetLinearVelocityResponse.linear_velocity)
}
inline ::viam::common::v1::Vector3* GetLinearVelocityResponse::release_linear_velocity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Vector3* released = _impl_.linear_velocity_;
  _impl_.linear_velocity_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::Vector3* GetLinearVelocityResponse::unsafe_arena_release_linear_velocity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetLinearVelocityResponse.linear_velocity)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Vector3* temp = _impl_.linear_velocity_;
  _impl_.linear_velocity_ = nullptr;
  return temp;
}
inline ::viam::common::v1::Vector3* GetLinearVelocityResponse::_internal_mutable_linear_velocity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.linear_velocity_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::Vector3>(GetArena());
    _impl_.linear_velocity_ = reinterpret_cast<::viam::common::v1::Vector3*>(p);
  }
  return _impl_.linear_velocity_;
}
inline ::viam::common::v1::Vector3* GetLinearVelocityResponse::mutable_linear_velocity() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::Vector3* _msg = _internal_mutable_linear_velocity();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetLinearVelocityResponse.linear_velocity)
  return _msg;
}
inline void GetLinearVelocityResponse::set_allocated_linear_velocity(::viam::common::v1::Vector3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_velocity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.linear_velocity_ = reinterpret_cast<::viam::common::v1::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetLinearVelocityResponse.linear_velocity)
}

// -------------------------------------------------------------------

// GetAngularVelocityRequest

// string name = 1 [json_name = "name"];
inline void GetAngularVelocityRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetAngularVelocityRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetAngularVelocityRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetAngularVelocityRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetAngularVelocityRequest.name)
}
inline std::string* GetAngularVelocityRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetAngularVelocityRequest.name)
  return _s;
}
inline const std::string& GetAngularVelocityRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetAngularVelocityRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetAngularVelocityRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetAngularVelocityRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetAngularVelocityRequest.name)
  return _impl_.name_.Release();
}
inline void GetAngularVelocityRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetAngularVelocityRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetAngularVelocityRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetAngularVelocityRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetAngularVelocityRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetAngularVelocityRequest.extra)
  return _internal_extra();
}
inline void GetAngularVelocityRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.movementsensor.v1.GetAngularVelocityRequest.extra)
}
inline ::google::protobuf::Struct* GetAngularVelocityRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetAngularVelocityRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetAngularVelocityRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetAngularVelocityRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetAngularVelocityRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetAngularVelocityRequest.extra)
  return _msg;
}
inline void GetAngularVelocityRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetAngularVelocityRequest.extra)
}

// -------------------------------------------------------------------

// GetAngularVelocityResponse

// .viam.common.v1.Vector3 angular_velocity = 1 [json_name = "angularVelocity"];
inline bool GetAngularVelocityResponse::has_angular_velocity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.angular_velocity_ != nullptr);
  return value;
}
inline const ::viam::common::v1::Vector3& GetAngularVelocityResponse::_internal_angular_velocity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::Vector3* p = _impl_.angular_velocity_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::Vector3&>(::viam::common::v1::_Vector3_default_instance_);
}
inline const ::viam::common::v1::Vector3& GetAngularVelocityResponse::angular_velocity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetAngularVelocityResponse.angular_velocity)
  return _internal_angular_velocity();
}
inline void GetAngularVelocityResponse::unsafe_arena_set_allocated_angular_velocity(::viam::common::v1::Vector3* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.angular_velocity_);
  }
  _impl_.angular_velocity_ = reinterpret_cast<::viam::common::v1::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.movementsensor.v1.GetAngularVelocityResponse.angular_velocity)
}
inline ::viam::common::v1::Vector3* GetAngularVelocityResponse::release_angular_velocity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Vector3* released = _impl_.angular_velocity_;
  _impl_.angular_velocity_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::Vector3* GetAngularVelocityResponse::unsafe_arena_release_angular_velocity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetAngularVelocityResponse.angular_velocity)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Vector3* temp = _impl_.angular_velocity_;
  _impl_.angular_velocity_ = nullptr;
  return temp;
}
inline ::viam::common::v1::Vector3* GetAngularVelocityResponse::_internal_mutable_angular_velocity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.angular_velocity_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::Vector3>(GetArena());
    _impl_.angular_velocity_ = reinterpret_cast<::viam::common::v1::Vector3*>(p);
  }
  return _impl_.angular_velocity_;
}
inline ::viam::common::v1::Vector3* GetAngularVelocityResponse::mutable_angular_velocity() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::Vector3* _msg = _internal_mutable_angular_velocity();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetAngularVelocityResponse.angular_velocity)
  return _msg;
}
inline void GetAngularVelocityResponse::set_allocated_angular_velocity(::viam::common::v1::Vector3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.angular_velocity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.angular_velocity_ = reinterpret_cast<::viam::common::v1::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetAngularVelocityResponse.angular_velocity)
}

// -------------------------------------------------------------------

// GetCompassHeadingRequest

// string name = 1 [json_name = "name"];
inline void GetCompassHeadingRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetCompassHeadingRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetCompassHeadingRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetCompassHeadingRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetCompassHeadingRequest.name)
}
inline std::string* GetCompassHeadingRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetCompassHeadingRequest.name)
  return _s;
}
inline const std::string& GetCompassHeadingRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetCompassHeadingRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetCompassHeadingRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetCompassHeadingRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetCompassHeadingRequest.name)
  return _impl_.name_.Release();
}
inline void GetCompassHeadingRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetCompassHeadingRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetCompassHeadingRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetCompassHeadingRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetCompassHeadingRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetCompassHeadingRequest.extra)
  return _internal_extra();
}
inline void GetCompassHeadingRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.movementsensor.v1.GetCompassHeadingRequest.extra)
}
inline ::google::protobuf::Struct* GetCompassHeadingRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetCompassHeadingRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetCompassHeadingRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetCompassHeadingRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetCompassHeadingRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetCompassHeadingRequest.extra)
  return _msg;
}
inline void GetCompassHeadingRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetCompassHeadingRequest.extra)
}

// -------------------------------------------------------------------

// GetCompassHeadingResponse

// double value = 1 [json_name = "value"];
inline void GetCompassHeadingResponse::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = 0;
}
inline double GetCompassHeadingResponse::value() const {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetCompassHeadingResponse.value)
  return _internal_value();
}
inline void GetCompassHeadingResponse::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetCompassHeadingResponse.value)
}
inline double GetCompassHeadingResponse::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void GetCompassHeadingResponse::_internal_set_value(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// GetOrientationRequest

// string name = 1 [json_name = "name"];
inline void GetOrientationRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetOrientationRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetOrientationRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetOrientationRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetOrientationRequest.name)
}
inline std::string* GetOrientationRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetOrientationRequest.name)
  return _s;
}
inline const std::string& GetOrientationRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetOrientationRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetOrientationRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetOrientationRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetOrientationRequest.name)
  return _impl_.name_.Release();
}
inline void GetOrientationRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetOrientationRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetOrientationRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetOrientationRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetOrientationRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetOrientationRequest.extra)
  return _internal_extra();
}
inline void GetOrientationRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.movementsensor.v1.GetOrientationRequest.extra)
}
inline ::google::protobuf::Struct* GetOrientationRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetOrientationRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetOrientationRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetOrientationRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetOrientationRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetOrientationRequest.extra)
  return _msg;
}
inline void GetOrientationRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetOrientationRequest.extra)
}

// -------------------------------------------------------------------

// GetOrientationResponse

// .viam.common.v1.Orientation orientation = 1 [json_name = "orientation"];
inline bool GetOrientationResponse::has_orientation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.orientation_ != nullptr);
  return value;
}
inline const ::viam::common::v1::Orientation& GetOrientationResponse::_internal_orientation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::Orientation* p = _impl_.orientation_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::Orientation&>(::viam::common::v1::_Orientation_default_instance_);
}
inline const ::viam::common::v1::Orientation& GetOrientationResponse::orientation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetOrientationResponse.orientation)
  return _internal_orientation();
}
inline void GetOrientationResponse::unsafe_arena_set_allocated_orientation(::viam::common::v1::Orientation* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.orientation_);
  }
  _impl_.orientation_ = reinterpret_cast<::viam::common::v1::Orientation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.movementsensor.v1.GetOrientationResponse.orientation)
}
inline ::viam::common::v1::Orientation* GetOrientationResponse::release_orientation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Orientation* released = _impl_.orientation_;
  _impl_.orientation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::Orientation* GetOrientationResponse::unsafe_arena_release_orientation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetOrientationResponse.orientation)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Orientation* temp = _impl_.orientation_;
  _impl_.orientation_ = nullptr;
  return temp;
}
inline ::viam::common::v1::Orientation* GetOrientationResponse::_internal_mutable_orientation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.orientation_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::Orientation>(GetArena());
    _impl_.orientation_ = reinterpret_cast<::viam::common::v1::Orientation*>(p);
  }
  return _impl_.orientation_;
}
inline ::viam::common::v1::Orientation* GetOrientationResponse::mutable_orientation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::Orientation* _msg = _internal_mutable_orientation();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetOrientationResponse.orientation)
  return _msg;
}
inline void GetOrientationResponse::set_allocated_orientation(::viam::common::v1::Orientation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.orientation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.orientation_ = reinterpret_cast<::viam::common::v1::Orientation*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetOrientationResponse.orientation)
}

// -------------------------------------------------------------------

// GetPositionRequest

// string name = 1 [json_name = "name"];
inline void GetPositionRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetPositionRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetPositionRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetPositionRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetPositionRequest.name)
}
inline std::string* GetPositionRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetPositionRequest.name)
  return _s;
}
inline const std::string& GetPositionRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetPositionRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetPositionRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetPositionRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetPositionRequest.name)
  return _impl_.name_.Release();
}
inline void GetPositionRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetPositionRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetPositionRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetPositionRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetPositionRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetPositionRequest.extra)
  return _internal_extra();
}
inline void GetPositionRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.movementsensor.v1.GetPositionRequest.extra)
}
inline ::google::protobuf::Struct* GetPositionRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetPositionRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetPositionRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetPositionRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetPositionRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetPositionRequest.extra)
  return _msg;
}
inline void GetPositionRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetPositionRequest.extra)
}

// -------------------------------------------------------------------

// GetPositionResponse

// .viam.common.v1.GeoPoint coordinate = 1 [json_name = "coordinate"];
inline bool GetPositionResponse::has_coordinate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.coordinate_ != nullptr);
  return value;
}
inline const ::viam::common::v1::GeoPoint& GetPositionResponse::_internal_coordinate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::GeoPoint* p = _impl_.coordinate_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::GeoPoint&>(::viam::common::v1::_GeoPoint_default_instance_);
}
inline const ::viam::common::v1::GeoPoint& GetPositionResponse::coordinate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetPositionResponse.coordinate)
  return _internal_coordinate();
}
inline void GetPositionResponse::unsafe_arena_set_allocated_coordinate(::viam::common::v1::GeoPoint* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.coordinate_);
  }
  _impl_.coordinate_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.movementsensor.v1.GetPositionResponse.coordinate)
}
inline ::viam::common::v1::GeoPoint* GetPositionResponse::release_coordinate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::GeoPoint* released = _impl_.coordinate_;
  _impl_.coordinate_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::GeoPoint* GetPositionResponse::unsafe_arena_release_coordinate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetPositionResponse.coordinate)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::GeoPoint* temp = _impl_.coordinate_;
  _impl_.coordinate_ = nullptr;
  return temp;
}
inline ::viam::common::v1::GeoPoint* GetPositionResponse::_internal_mutable_coordinate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.coordinate_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::GeoPoint>(GetArena());
    _impl_.coordinate_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(p);
  }
  return _impl_.coordinate_;
}
inline ::viam::common::v1::GeoPoint* GetPositionResponse::mutable_coordinate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::GeoPoint* _msg = _internal_mutable_coordinate();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetPositionResponse.coordinate)
  return _msg;
}
inline void GetPositionResponse::set_allocated_coordinate(::viam::common::v1::GeoPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.coordinate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.coordinate_ = reinterpret_cast<::viam::common::v1::GeoPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetPositionResponse.coordinate)
}

// float altitude_m = 2 [json_name = "altitudeM"];
inline void GetPositionResponse::clear_altitude_m() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.altitude_m_ = 0;
}
inline float GetPositionResponse::altitude_m() const {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetPositionResponse.altitude_m)
  return _internal_altitude_m();
}
inline void GetPositionResponse::set_altitude_m(float value) {
  _internal_set_altitude_m(value);
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetPositionResponse.altitude_m)
}
inline float GetPositionResponse::_internal_altitude_m() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.altitude_m_;
}
inline void GetPositionResponse::_internal_set_altitude_m(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.altitude_m_ = value;
}

// -------------------------------------------------------------------

// GetPropertiesRequest

// string name = 1 [json_name = "name"];
inline void GetPropertiesRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetPropertiesRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetPropertiesRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetPropertiesRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetPropertiesRequest.name)
}
inline std::string* GetPropertiesRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetPropertiesRequest.name)
  return _s;
}
inline const std::string& GetPropertiesRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetPropertiesRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetPropertiesRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetPropertiesRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetPropertiesRequest.name)
  return _impl_.name_.Release();
}
inline void GetPropertiesRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetPropertiesRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetPropertiesRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetPropertiesRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetPropertiesRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetPropertiesRequest.extra)
  return _internal_extra();
}
inline void GetPropertiesRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.movementsensor.v1.GetPropertiesRequest.extra)
}
inline ::google::protobuf::Struct* GetPropertiesRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetPropertiesRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetPropertiesRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetPropertiesRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetPropertiesRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetPropertiesRequest.extra)
  return _msg;
}
inline void GetPropertiesRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetPropertiesRequest.extra)
}

// -------------------------------------------------------------------

// GetPropertiesResponse

// bool linear_velocity_supported = 1 [json_name = "linearVelocitySupported"];
inline void GetPropertiesResponse::clear_linear_velocity_supported() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.linear_velocity_supported_ = false;
}
inline bool GetPropertiesResponse::linear_velocity_supported() const {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetPropertiesResponse.linear_velocity_supported)
  return _internal_linear_velocity_supported();
}
inline void GetPropertiesResponse::set_linear_velocity_supported(bool value) {
  _internal_set_linear_velocity_supported(value);
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetPropertiesResponse.linear_velocity_supported)
}
inline bool GetPropertiesResponse::_internal_linear_velocity_supported() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.linear_velocity_supported_;
}
inline void GetPropertiesResponse::_internal_set_linear_velocity_supported(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.linear_velocity_supported_ = value;
}

// bool angular_velocity_supported = 2 [json_name = "angularVelocitySupported"];
inline void GetPropertiesResponse::clear_angular_velocity_supported() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.angular_velocity_supported_ = false;
}
inline bool GetPropertiesResponse::angular_velocity_supported() const {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetPropertiesResponse.angular_velocity_supported)
  return _internal_angular_velocity_supported();
}
inline void GetPropertiesResponse::set_angular_velocity_supported(bool value) {
  _internal_set_angular_velocity_supported(value);
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetPropertiesResponse.angular_velocity_supported)
}
inline bool GetPropertiesResponse::_internal_angular_velocity_supported() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.angular_velocity_supported_;
}
inline void GetPropertiesResponse::_internal_set_angular_velocity_supported(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.angular_velocity_supported_ = value;
}

// bool orientation_supported = 3 [json_name = "orientationSupported"];
inline void GetPropertiesResponse::clear_orientation_supported() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.orientation_supported_ = false;
}
inline bool GetPropertiesResponse::orientation_supported() const {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetPropertiesResponse.orientation_supported)
  return _internal_orientation_supported();
}
inline void GetPropertiesResponse::set_orientation_supported(bool value) {
  _internal_set_orientation_supported(value);
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetPropertiesResponse.orientation_supported)
}
inline bool GetPropertiesResponse::_internal_orientation_supported() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.orientation_supported_;
}
inline void GetPropertiesResponse::_internal_set_orientation_supported(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.orientation_supported_ = value;
}

// bool position_supported = 4 [json_name = "positionSupported"];
inline void GetPropertiesResponse::clear_position_supported() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_supported_ = false;
}
inline bool GetPropertiesResponse::position_supported() const {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetPropertiesResponse.position_supported)
  return _internal_position_supported();
}
inline void GetPropertiesResponse::set_position_supported(bool value) {
  _internal_set_position_supported(value);
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetPropertiesResponse.position_supported)
}
inline bool GetPropertiesResponse::_internal_position_supported() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_supported_;
}
inline void GetPropertiesResponse::_internal_set_position_supported(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_supported_ = value;
}

// bool compass_heading_supported = 5 [json_name = "compassHeadingSupported"];
inline void GetPropertiesResponse::clear_compass_heading_supported() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.compass_heading_supported_ = false;
}
inline bool GetPropertiesResponse::compass_heading_supported() const {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetPropertiesResponse.compass_heading_supported)
  return _internal_compass_heading_supported();
}
inline void GetPropertiesResponse::set_compass_heading_supported(bool value) {
  _internal_set_compass_heading_supported(value);
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetPropertiesResponse.compass_heading_supported)
}
inline bool GetPropertiesResponse::_internal_compass_heading_supported() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.compass_heading_supported_;
}
inline void GetPropertiesResponse::_internal_set_compass_heading_supported(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.compass_heading_supported_ = value;
}

// bool linear_acceleration_supported = 6 [json_name = "linearAccelerationSupported"];
inline void GetPropertiesResponse::clear_linear_acceleration_supported() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.linear_acceleration_supported_ = false;
}
inline bool GetPropertiesResponse::linear_acceleration_supported() const {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetPropertiesResponse.linear_acceleration_supported)
  return _internal_linear_acceleration_supported();
}
inline void GetPropertiesResponse::set_linear_acceleration_supported(bool value) {
  _internal_set_linear_acceleration_supported(value);
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetPropertiesResponse.linear_acceleration_supported)
}
inline bool GetPropertiesResponse::_internal_linear_acceleration_supported() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.linear_acceleration_supported_;
}
inline void GetPropertiesResponse::_internal_set_linear_acceleration_supported(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.linear_acceleration_supported_ = value;
}

// -------------------------------------------------------------------

// GetAccuracyRequest

// string name = 1 [json_name = "name"];
inline void GetAccuracyRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetAccuracyRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetAccuracyRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetAccuracyRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetAccuracyRequest.name)
}
inline std::string* GetAccuracyRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetAccuracyRequest.name)
  return _s;
}
inline const std::string& GetAccuracyRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetAccuracyRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetAccuracyRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetAccuracyRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetAccuracyRequest.name)
  return _impl_.name_.Release();
}
inline void GetAccuracyRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetAccuracyRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetAccuracyRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetAccuracyRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetAccuracyRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetAccuracyRequest.extra)
  return _internal_extra();
}
inline void GetAccuracyRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.movementsensor.v1.GetAccuracyRequest.extra)
}
inline ::google::protobuf::Struct* GetAccuracyRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetAccuracyRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetAccuracyRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetAccuracyRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetAccuracyRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetAccuracyRequest.extra)
  return _msg;
}
inline void GetAccuracyRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetAccuracyRequest.extra)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetAccuracyResponse

// map<string, float> accuracy = 1 [json_name = "accuracy"];
inline int GetAccuracyResponse::_internal_accuracy_size() const {
  return _internal_accuracy().size();
}
inline int GetAccuracyResponse::accuracy_size() const {
  return _internal_accuracy_size();
}
inline void GetAccuracyResponse::clear_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.accuracy_.Clear();
}
inline const ::google::protobuf::Map<std::string, float>& GetAccuracyResponse::_internal_accuracy() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.accuracy_.GetMap();
}
inline const ::google::protobuf::Map<std::string, float>& GetAccuracyResponse::accuracy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:viam.component.movementsensor.v1.GetAccuracyResponse.accuracy)
  return _internal_accuracy();
}
inline ::google::protobuf::Map<std::string, float>* GetAccuracyResponse::_internal_mutable_accuracy() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.accuracy_.MutableMap();
}
inline ::google::protobuf::Map<std::string, float>* GetAccuracyResponse::mutable_accuracy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:viam.component.movementsensor.v1.GetAccuracyResponse.accuracy)
  return _internal_mutable_accuracy();
}

// optional float position_hdop = 2 [json_name = "positionHdop"];
inline bool GetAccuracyResponse::has_position_hdop() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void GetAccuracyResponse::clear_position_hdop() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_hdop_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float GetAccuracyResponse::position_hdop() const {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetAccuracyResponse.position_hdop)
  return _internal_position_hdop();
}
inline void GetAccuracyResponse::set_position_hdop(float value) {
  _internal_set_position_hdop(value);
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetAccuracyResponse.position_hdop)
}
inline float GetAccuracyResponse::_internal_position_hdop() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_hdop_;
}
inline void GetAccuracyResponse::_internal_set_position_hdop(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.position_hdop_ = value;
}

// optional float position_vdop = 3 [json_name = "positionVdop"];
inline bool GetAccuracyResponse::has_position_vdop() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void GetAccuracyResponse::clear_position_vdop() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_vdop_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float GetAccuracyResponse::position_vdop() const {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetAccuracyResponse.position_vdop)
  return _internal_position_vdop();
}
inline void GetAccuracyResponse::set_position_vdop(float value) {
  _internal_set_position_vdop(value);
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetAccuracyResponse.position_vdop)
}
inline float GetAccuracyResponse::_internal_position_vdop() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_vdop_;
}
inline void GetAccuracyResponse::_internal_set_position_vdop(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.position_vdop_ = value;
}

// optional int32 position_nmea_gga_fix = 4 [json_name = "positionNmeaGgaFix"];
inline bool GetAccuracyResponse::has_position_nmea_gga_fix() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void GetAccuracyResponse::clear_position_nmea_gga_fix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_nmea_gga_fix_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t GetAccuracyResponse::position_nmea_gga_fix() const {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetAccuracyResponse.position_nmea_gga_fix)
  return _internal_position_nmea_gga_fix();
}
inline void GetAccuracyResponse::set_position_nmea_gga_fix(::int32_t value) {
  _internal_set_position_nmea_gga_fix(value);
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetAccuracyResponse.position_nmea_gga_fix)
}
inline ::int32_t GetAccuracyResponse::_internal_position_nmea_gga_fix() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_nmea_gga_fix_;
}
inline void GetAccuracyResponse::_internal_set_position_nmea_gga_fix(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.position_nmea_gga_fix_ = value;
}

// optional float compass_degrees_error = 5 [json_name = "compassDegreesError"];
inline bool GetAccuracyResponse::has_compass_degrees_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void GetAccuracyResponse::clear_compass_degrees_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.compass_degrees_error_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float GetAccuracyResponse::compass_degrees_error() const {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetAccuracyResponse.compass_degrees_error)
  return _internal_compass_degrees_error();
}
inline void GetAccuracyResponse::set_compass_degrees_error(float value) {
  _internal_set_compass_degrees_error(value);
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetAccuracyResponse.compass_degrees_error)
}
inline float GetAccuracyResponse::_internal_compass_degrees_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.compass_degrees_error_;
}
inline void GetAccuracyResponse::_internal_set_compass_degrees_error(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.compass_degrees_error_ = value;
}

// -------------------------------------------------------------------

// GetLinearAccelerationRequest

// string name = 1 [json_name = "name"];
inline void GetLinearAccelerationRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetLinearAccelerationRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetLinearAccelerationRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetLinearAccelerationRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.movementsensor.v1.GetLinearAccelerationRequest.name)
}
inline std::string* GetLinearAccelerationRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetLinearAccelerationRequest.name)
  return _s;
}
inline const std::string& GetLinearAccelerationRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetLinearAccelerationRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetLinearAccelerationRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetLinearAccelerationRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetLinearAccelerationRequest.name)
  return _impl_.name_.Release();
}
inline void GetLinearAccelerationRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetLinearAccelerationRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetLinearAccelerationRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetLinearAccelerationRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetLinearAccelerationRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetLinearAccelerationRequest.extra)
  return _internal_extra();
}
inline void GetLinearAccelerationRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.movementsensor.v1.GetLinearAccelerationRequest.extra)
}
inline ::google::protobuf::Struct* GetLinearAccelerationRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetLinearAccelerationRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetLinearAccelerationRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetLinearAccelerationRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetLinearAccelerationRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetLinearAccelerationRequest.extra)
  return _msg;
}
inline void GetLinearAccelerationRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetLinearAccelerationRequest.extra)
}

// -------------------------------------------------------------------

// GetLinearAccelerationResponse

// .viam.common.v1.Vector3 linear_acceleration = 1 [json_name = "linearAcceleration"];
inline bool GetLinearAccelerationResponse::has_linear_acceleration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.linear_acceleration_ != nullptr);
  return value;
}
inline const ::viam::common::v1::Vector3& GetLinearAccelerationResponse::_internal_linear_acceleration() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::viam::common::v1::Vector3* p = _impl_.linear_acceleration_;
  return p != nullptr ? *p : reinterpret_cast<const ::viam::common::v1::Vector3&>(::viam::common::v1::_Vector3_default_instance_);
}
inline const ::viam::common::v1::Vector3& GetLinearAccelerationResponse::linear_acceleration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.movementsensor.v1.GetLinearAccelerationResponse.linear_acceleration)
  return _internal_linear_acceleration();
}
inline void GetLinearAccelerationResponse::unsafe_arena_set_allocated_linear_acceleration(::viam::common::v1::Vector3* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_acceleration_);
  }
  _impl_.linear_acceleration_ = reinterpret_cast<::viam::common::v1::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.movementsensor.v1.GetLinearAccelerationResponse.linear_acceleration)
}
inline ::viam::common::v1::Vector3* GetLinearAccelerationResponse::release_linear_acceleration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Vector3* released = _impl_.linear_acceleration_;
  _impl_.linear_acceleration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::viam::common::v1::Vector3* GetLinearAccelerationResponse::unsafe_arena_release_linear_acceleration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.movementsensor.v1.GetLinearAccelerationResponse.linear_acceleration)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::viam::common::v1::Vector3* temp = _impl_.linear_acceleration_;
  _impl_.linear_acceleration_ = nullptr;
  return temp;
}
inline ::viam::common::v1::Vector3* GetLinearAccelerationResponse::_internal_mutable_linear_acceleration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.linear_acceleration_ == nullptr) {
    auto* p = CreateMaybeMessage<::viam::common::v1::Vector3>(GetArena());
    _impl_.linear_acceleration_ = reinterpret_cast<::viam::common::v1::Vector3*>(p);
  }
  return _impl_.linear_acceleration_;
}
inline ::viam::common::v1::Vector3* GetLinearAccelerationResponse::mutable_linear_acceleration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::viam::common::v1::Vector3* _msg = _internal_mutable_linear_acceleration();
  // @@protoc_insertion_point(field_mutable:viam.component.movementsensor.v1.GetLinearAccelerationResponse.linear_acceleration)
  return _msg;
}
inline void GetLinearAccelerationResponse::set_allocated_linear_acceleration(::viam::common::v1::Vector3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.linear_acceleration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.linear_acceleration_ = reinterpret_cast<::viam::common::v1::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.movementsensor.v1.GetLinearAccelerationResponse.linear_acceleration)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace movementsensor
}  // namespace component
}  // namespace viam


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_2epb_2eh
