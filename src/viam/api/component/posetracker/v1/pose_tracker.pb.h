// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component/posetracker/v1/pose_tracker.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_component_2fposetracker_2fv1_2fpose_5ftracker_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_component_2fposetracker_2fv1_2fpose_5ftracker_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "common/v1/common.pb.h"
#include "google/api/annotations.pb.h"
#include "google/protobuf/struct.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_component_2fposetracker_2fv1_2fpose_5ftracker_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_component_2fposetracker_2fv1_2fpose_5ftracker_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_component_2fposetracker_2fv1_2fpose_5ftracker_2eproto;
namespace viam {
namespace component {
namespace posetracker {
namespace v1 {
class GetPosesRequest;
struct GetPosesRequestDefaultTypeInternal;
extern GetPosesRequestDefaultTypeInternal _GetPosesRequest_default_instance_;
class GetPosesResponse;
struct GetPosesResponseDefaultTypeInternal;
extern GetPosesResponseDefaultTypeInternal _GetPosesResponse_default_instance_;
class GetPosesResponse_BodyPosesEntry_DoNotUse;
struct GetPosesResponse_BodyPosesEntry_DoNotUseDefaultTypeInternal;
extern GetPosesResponse_BodyPosesEntry_DoNotUseDefaultTypeInternal _GetPosesResponse_BodyPosesEntry_DoNotUse_default_instance_;
}  // namespace v1
}  // namespace posetracker
}  // namespace component
}  // namespace viam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace viam {
namespace component {
namespace posetracker {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class GetPosesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.posetracker.v1.GetPosesRequest) */ {
 public:
  inline GetPosesRequest() : GetPosesRequest(nullptr) {}
  ~GetPosesRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPosesRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetPosesRequest(const GetPosesRequest& from)
      : GetPosesRequest(nullptr, from) {}
  GetPosesRequest(GetPosesRequest&& from) noexcept
    : GetPosesRequest() {
    *this = ::std::move(from);
  }

  inline GetPosesRequest& operator=(const GetPosesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPosesRequest& operator=(GetPosesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPosesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPosesRequest* internal_default_instance() {
    return reinterpret_cast<const GetPosesRequest*>(
               &_GetPosesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetPosesRequest& a, GetPosesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPosesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPosesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPosesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPosesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPosesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPosesRequest& from) {
    GetPosesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPosesRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.posetracker.v1.GetPosesRequest";
  }
  protected:
  explicit GetPosesRequest(::google::protobuf::Arena* arena);
  GetPosesRequest(::google::protobuf::Arena* arena, const GetPosesRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBodyNamesFieldNumber = 2,
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // repeated string body_names = 2 [json_name = "bodyNames"];
  int body_names_size() const;
  private:
  int _internal_body_names_size() const;

  public:
  void clear_body_names() ;
  const std::string& body_names(int index) const;
  std::string* mutable_body_names(int index);
  void set_body_names(int index, const std::string& value);
  void set_body_names(int index, std::string&& value);
  void set_body_names(int index, const char* value);
  void set_body_names(int index, const char* value, std::size_t size);
  void set_body_names(int index, absl::string_view value);
  std::string* add_body_names();
  void add_body_names(const std::string& value);
  void add_body_names(std::string&& value);
  void add_body_names(const char* value);
  void add_body_names(const char* value, std::size_t size);
  void add_body_names(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& body_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_body_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_body_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_body_names();

  public:
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.posetracker.v1.GetPosesRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      68, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> body_names_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fposetracker_2fv1_2fpose_5ftracker_2eproto;
};// -------------------------------------------------------------------

class GetPosesResponse_BodyPosesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GetPosesResponse_BodyPosesEntry_DoNotUse, std::string, ::viam::common::v1::PoseInFrame,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GetPosesResponse_BodyPosesEntry_DoNotUse, std::string, ::viam::common::v1::PoseInFrame,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  GetPosesResponse_BodyPosesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetPosesResponse_BodyPosesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetPosesResponse_BodyPosesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GetPosesResponse_BodyPosesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GetPosesResponse_BodyPosesEntry_DoNotUse*>(
        &_GetPosesResponse_BodyPosesEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "viam.component.posetracker.v1.GetPosesResponse.BodyPosesEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_component_2fposetracker_2fv1_2fpose_5ftracker_2eproto;
};
// -------------------------------------------------------------------

class GetPosesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.posetracker.v1.GetPosesResponse) */ {
 public:
  inline GetPosesResponse() : GetPosesResponse(nullptr) {}
  ~GetPosesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetPosesResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetPosesResponse(const GetPosesResponse& from)
      : GetPosesResponse(nullptr, from) {}
  GetPosesResponse(GetPosesResponse&& from) noexcept
    : GetPosesResponse() {
    *this = ::std::move(from);
  }

  inline GetPosesResponse& operator=(const GetPosesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPosesResponse& operator=(GetPosesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPosesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPosesResponse* internal_default_instance() {
    return reinterpret_cast<const GetPosesResponse*>(
               &_GetPosesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetPosesResponse& a, GetPosesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPosesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPosesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPosesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPosesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetPosesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetPosesResponse& from) {
    GetPosesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetPosesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.posetracker.v1.GetPosesResponse";
  }
  protected:
  explicit GetPosesResponse(::google::protobuf::Arena* arena);
  GetPosesResponse(::google::protobuf::Arena* arena, const GetPosesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kBodyPosesFieldNumber = 1,
  };
  // map<string, .viam.common.v1.PoseInFrame> body_poses = 1 [json_name = "bodyPoses"];
  int body_poses_size() const;
  private:
  int _internal_body_poses_size() const;

  public:
  void clear_body_poses() ;
  const ::google::protobuf::Map<std::string, ::viam::common::v1::PoseInFrame>& body_poses() const;
  ::google::protobuf::Map<std::string, ::viam::common::v1::PoseInFrame>* mutable_body_poses();

  private:
  const ::google::protobuf::Map<std::string, ::viam::common::v1::PoseInFrame>& _internal_body_poses() const;
  ::google::protobuf::Map<std::string, ::viam::common::v1::PoseInFrame>* _internal_mutable_body_poses();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.posetracker.v1.GetPosesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<GetPosesResponse_BodyPosesEntry_DoNotUse, std::string, ::viam::common::v1::PoseInFrame,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        body_poses_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fposetracker_2fv1_2fpose_5ftracker_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetPosesRequest

// string name = 1 [json_name = "name"];
inline void GetPosesRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetPosesRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.posetracker.v1.GetPosesRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetPosesRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.posetracker.v1.GetPosesRequest.name)
}
inline std::string* GetPosesRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.posetracker.v1.GetPosesRequest.name)
  return _s;
}
inline const std::string& GetPosesRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetPosesRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetPosesRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetPosesRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.posetracker.v1.GetPosesRequest.name)
  return _impl_.name_.Release();
}
inline void GetPosesRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.posetracker.v1.GetPosesRequest.name)
}

// repeated string body_names = 2 [json_name = "bodyNames"];
inline int GetPosesRequest::_internal_body_names_size() const {
  return _internal_body_names().size();
}
inline int GetPosesRequest::body_names_size() const {
  return _internal_body_names_size();
}
inline void GetPosesRequest::clear_body_names() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.body_names_.Clear();
}
inline std::string* GetPosesRequest::add_body_names()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_body_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:viam.component.posetracker.v1.GetPosesRequest.body_names)
  return _s;
}
inline const std::string& GetPosesRequest::body_names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.posetracker.v1.GetPosesRequest.body_names)
  return _internal_body_names().Get(index);
}
inline std::string* GetPosesRequest::mutable_body_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.component.posetracker.v1.GetPosesRequest.body_names)
  return _internal_mutable_body_names()->Mutable(index);
}
inline void GetPosesRequest::set_body_names(int index, const std::string& value) {
  _internal_mutable_body_names()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:viam.component.posetracker.v1.GetPosesRequest.body_names)
}
inline void GetPosesRequest::set_body_names(int index, std::string&& value) {
  _internal_mutable_body_names()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:viam.component.posetracker.v1.GetPosesRequest.body_names)
}
inline void GetPosesRequest::set_body_names(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_body_names()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:viam.component.posetracker.v1.GetPosesRequest.body_names)
}
inline void GetPosesRequest::set_body_names(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_body_names()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:viam.component.posetracker.v1.GetPosesRequest.body_names)
}
inline void GetPosesRequest::set_body_names(int index, absl::string_view value) {
  _internal_mutable_body_names()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:viam.component.posetracker.v1.GetPosesRequest.body_names)
}
inline void GetPosesRequest::add_body_names(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_body_names()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:viam.component.posetracker.v1.GetPosesRequest.body_names)
}
inline void GetPosesRequest::add_body_names(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_body_names()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:viam.component.posetracker.v1.GetPosesRequest.body_names)
}
inline void GetPosesRequest::add_body_names(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_body_names()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:viam.component.posetracker.v1.GetPosesRequest.body_names)
}
inline void GetPosesRequest::add_body_names(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_body_names()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:viam.component.posetracker.v1.GetPosesRequest.body_names)
}
inline void GetPosesRequest::add_body_names(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_body_names()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:viam.component.posetracker.v1.GetPosesRequest.body_names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetPosesRequest::body_names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.component.posetracker.v1.GetPosesRequest.body_names)
  return _internal_body_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetPosesRequest::mutable_body_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.component.posetracker.v1.GetPosesRequest.body_names)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_body_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetPosesRequest::_internal_body_names() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.body_names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetPosesRequest::_internal_mutable_body_names() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.body_names_;
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetPosesRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetPosesRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetPosesRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.posetracker.v1.GetPosesRequest.extra)
  return _internal_extra();
}
inline void GetPosesRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.posetracker.v1.GetPosesRequest.extra)
}
inline ::google::protobuf::Struct* GetPosesRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetPosesRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.posetracker.v1.GetPosesRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetPosesRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetPosesRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.posetracker.v1.GetPosesRequest.extra)
  return _msg;
}
inline void GetPosesRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.posetracker.v1.GetPosesRequest.extra)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetPosesResponse

// map<string, .viam.common.v1.PoseInFrame> body_poses = 1 [json_name = "bodyPoses"];
inline int GetPosesResponse::_internal_body_poses_size() const {
  return _internal_body_poses().size();
}
inline int GetPosesResponse::body_poses_size() const {
  return _internal_body_poses_size();
}
inline const ::google::protobuf::Map<std::string, ::viam::common::v1::PoseInFrame>& GetPosesResponse::_internal_body_poses() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.body_poses_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::viam::common::v1::PoseInFrame>& GetPosesResponse::body_poses() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:viam.component.posetracker.v1.GetPosesResponse.body_poses)
  return _internal_body_poses();
}
inline ::google::protobuf::Map<std::string, ::viam::common::v1::PoseInFrame>* GetPosesResponse::_internal_mutable_body_poses() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.body_poses_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::viam::common::v1::PoseInFrame>* GetPosesResponse::mutable_body_poses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:viam.component.posetracker.v1.GetPosesResponse.body_poses)
  return _internal_mutable_body_poses();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace posetracker
}  // namespace component
}  // namespace viam


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_component_2fposetracker_2fv1_2fpose_5ftracker_2eproto_2epb_2eh
