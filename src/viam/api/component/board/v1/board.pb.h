// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component/board/v1/board.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_component_2fboard_2fv1_2fboard_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_component_2fboard_2fv1_2fboard_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "common/v1/common.pb.h"
#include "google/api/annotations.pb.h"
#include "google/protobuf/duration.pb.h"
#include "google/protobuf/struct.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_component_2fboard_2fv1_2fboard_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_component_2fboard_2fv1_2fboard_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_component_2fboard_2fv1_2fboard_2eproto;
namespace viam {
namespace component {
namespace board {
namespace v1 {
class GetDigitalInterruptValueRequest;
struct GetDigitalInterruptValueRequestDefaultTypeInternal;
extern GetDigitalInterruptValueRequestDefaultTypeInternal _GetDigitalInterruptValueRequest_default_instance_;
class GetDigitalInterruptValueResponse;
struct GetDigitalInterruptValueResponseDefaultTypeInternal;
extern GetDigitalInterruptValueResponseDefaultTypeInternal _GetDigitalInterruptValueResponse_default_instance_;
class GetGPIORequest;
struct GetGPIORequestDefaultTypeInternal;
extern GetGPIORequestDefaultTypeInternal _GetGPIORequest_default_instance_;
class GetGPIOResponse;
struct GetGPIOResponseDefaultTypeInternal;
extern GetGPIOResponseDefaultTypeInternal _GetGPIOResponse_default_instance_;
class PWMFrequencyRequest;
struct PWMFrequencyRequestDefaultTypeInternal;
extern PWMFrequencyRequestDefaultTypeInternal _PWMFrequencyRequest_default_instance_;
class PWMFrequencyResponse;
struct PWMFrequencyResponseDefaultTypeInternal;
extern PWMFrequencyResponseDefaultTypeInternal _PWMFrequencyResponse_default_instance_;
class PWMRequest;
struct PWMRequestDefaultTypeInternal;
extern PWMRequestDefaultTypeInternal _PWMRequest_default_instance_;
class PWMResponse;
struct PWMResponseDefaultTypeInternal;
extern PWMResponseDefaultTypeInternal _PWMResponse_default_instance_;
class ReadAnalogReaderRequest;
struct ReadAnalogReaderRequestDefaultTypeInternal;
extern ReadAnalogReaderRequestDefaultTypeInternal _ReadAnalogReaderRequest_default_instance_;
class ReadAnalogReaderResponse;
struct ReadAnalogReaderResponseDefaultTypeInternal;
extern ReadAnalogReaderResponseDefaultTypeInternal _ReadAnalogReaderResponse_default_instance_;
class SetGPIORequest;
struct SetGPIORequestDefaultTypeInternal;
extern SetGPIORequestDefaultTypeInternal _SetGPIORequest_default_instance_;
class SetGPIOResponse;
struct SetGPIOResponseDefaultTypeInternal;
extern SetGPIOResponseDefaultTypeInternal _SetGPIOResponse_default_instance_;
class SetPWMFrequencyRequest;
struct SetPWMFrequencyRequestDefaultTypeInternal;
extern SetPWMFrequencyRequestDefaultTypeInternal _SetPWMFrequencyRequest_default_instance_;
class SetPWMFrequencyResponse;
struct SetPWMFrequencyResponseDefaultTypeInternal;
extern SetPWMFrequencyResponseDefaultTypeInternal _SetPWMFrequencyResponse_default_instance_;
class SetPWMRequest;
struct SetPWMRequestDefaultTypeInternal;
extern SetPWMRequestDefaultTypeInternal _SetPWMRequest_default_instance_;
class SetPWMResponse;
struct SetPWMResponseDefaultTypeInternal;
extern SetPWMResponseDefaultTypeInternal _SetPWMResponse_default_instance_;
class SetPowerModeRequest;
struct SetPowerModeRequestDefaultTypeInternal;
extern SetPowerModeRequestDefaultTypeInternal _SetPowerModeRequest_default_instance_;
class SetPowerModeResponse;
struct SetPowerModeResponseDefaultTypeInternal;
extern SetPowerModeResponseDefaultTypeInternal _SetPowerModeResponse_default_instance_;
class Status;
struct StatusDefaultTypeInternal;
extern StatusDefaultTypeInternal _Status_default_instance_;
class Status_AnalogsEntry_DoNotUse;
struct Status_AnalogsEntry_DoNotUseDefaultTypeInternal;
extern Status_AnalogsEntry_DoNotUseDefaultTypeInternal _Status_AnalogsEntry_DoNotUse_default_instance_;
class Status_DigitalInterruptsEntry_DoNotUse;
struct Status_DigitalInterruptsEntry_DoNotUseDefaultTypeInternal;
extern Status_DigitalInterruptsEntry_DoNotUseDefaultTypeInternal _Status_DigitalInterruptsEntry_DoNotUse_default_instance_;
class StreamTicksRequest;
struct StreamTicksRequestDefaultTypeInternal;
extern StreamTicksRequestDefaultTypeInternal _StreamTicksRequest_default_instance_;
class StreamTicksResponse;
struct StreamTicksResponseDefaultTypeInternal;
extern StreamTicksResponseDefaultTypeInternal _StreamTicksResponse_default_instance_;
class WriteAnalogRequest;
struct WriteAnalogRequestDefaultTypeInternal;
extern WriteAnalogRequestDefaultTypeInternal _WriteAnalogRequest_default_instance_;
class WriteAnalogResponse;
struct WriteAnalogResponseDefaultTypeInternal;
extern WriteAnalogResponseDefaultTypeInternal _WriteAnalogResponse_default_instance_;
}  // namespace v1
}  // namespace board
}  // namespace component
}  // namespace viam
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace viam {
namespace component {
namespace board {
namespace v1 {
enum PowerMode : int {
  POWER_MODE_UNSPECIFIED = 0,
  POWER_MODE_NORMAL = 1,
  POWER_MODE_OFFLINE_DEEP = 2,
  PowerMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PowerMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PowerMode_IsValid(int value);
extern const uint32_t PowerMode_internal_data_[];
constexpr PowerMode PowerMode_MIN = static_cast<PowerMode>(0);
constexpr PowerMode PowerMode_MAX = static_cast<PowerMode>(2);
constexpr int PowerMode_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
PowerMode_descriptor();
template <typename T>
const std::string& PowerMode_Name(T value) {
  static_assert(std::is_same<T, PowerMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PowerMode_Name().");
  return PowerMode_Name(static_cast<PowerMode>(value));
}
template <>
inline const std::string& PowerMode_Name(PowerMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PowerMode_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool PowerMode_Parse(absl::string_view name, PowerMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PowerMode>(
      PowerMode_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class WriteAnalogResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.component.board.v1.WriteAnalogResponse) */ {
 public:
  inline WriteAnalogResponse() : WriteAnalogResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WriteAnalogResponse(::google::protobuf::internal::ConstantInitialized);

  inline WriteAnalogResponse(const WriteAnalogResponse& from)
      : WriteAnalogResponse(nullptr, from) {}
  WriteAnalogResponse(WriteAnalogResponse&& from) noexcept
    : WriteAnalogResponse() {
    *this = ::std::move(from);
  }

  inline WriteAnalogResponse& operator=(const WriteAnalogResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WriteAnalogResponse& operator=(WriteAnalogResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WriteAnalogResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WriteAnalogResponse* internal_default_instance() {
    return reinterpret_cast<const WriteAnalogResponse*>(
               &_WriteAnalogResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(WriteAnalogResponse& a, WriteAnalogResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WriteAnalogResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WriteAnalogResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WriteAnalogResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WriteAnalogResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const WriteAnalogResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const WriteAnalogResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.WriteAnalogResponse";
  }
  protected:
  explicit WriteAnalogResponse(::google::protobuf::Arena* arena);
  WriteAnalogResponse(::google::protobuf::Arena* arena, const WriteAnalogResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.component.board.v1.WriteAnalogResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class StreamTicksResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.StreamTicksResponse) */ {
 public:
  inline StreamTicksResponse() : StreamTicksResponse(nullptr) {}
  ~StreamTicksResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StreamTicksResponse(::google::protobuf::internal::ConstantInitialized);

  inline StreamTicksResponse(const StreamTicksResponse& from)
      : StreamTicksResponse(nullptr, from) {}
  StreamTicksResponse(StreamTicksResponse&& from) noexcept
    : StreamTicksResponse() {
    *this = ::std::move(from);
  }

  inline StreamTicksResponse& operator=(const StreamTicksResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamTicksResponse& operator=(StreamTicksResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamTicksResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamTicksResponse* internal_default_instance() {
    return reinterpret_cast<const StreamTicksResponse*>(
               &_StreamTicksResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(StreamTicksResponse& a, StreamTicksResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamTicksResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamTicksResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamTicksResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StreamTicksResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamTicksResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StreamTicksResponse& from) {
    StreamTicksResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StreamTicksResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.StreamTicksResponse";
  }
  protected:
  explicit StreamTicksResponse(::google::protobuf::Arena* arena);
  StreamTicksResponse(::google::protobuf::Arena* arena, const StreamTicksResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPinNameFieldNumber = 1,
    kTimeFieldNumber = 2,
    kHighFieldNumber = 3,
  };
  // string pin_name = 1 [json_name = "pinName"];
  void clear_pin_name() ;
  const std::string& pin_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pin_name(Arg_&& arg, Args_... args);
  std::string* mutable_pin_name();
  PROTOBUF_NODISCARD std::string* release_pin_name();
  void set_allocated_pin_name(std::string* value);

  private:
  const std::string& _internal_pin_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pin_name(
      const std::string& value);
  std::string* _internal_mutable_pin_name();

  public:
  // uint64 time = 2 [json_name = "time"];
  void clear_time() ;
  ::uint64_t time() const;
  void set_time(::uint64_t value);

  private:
  ::uint64_t _internal_time() const;
  void _internal_set_time(::uint64_t value);

  public:
  // bool high = 3 [json_name = "high"];
  void clear_high() ;
  bool high() const;
  void set_high(bool value);

  private:
  bool _internal_high() const;
  void _internal_set_high(bool value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.StreamTicksResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr pin_name_;
    ::uint64_t time_;
    bool high_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class Status_DigitalInterruptsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Status_DigitalInterruptsEntry_DoNotUse, std::string, ::int64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Status_DigitalInterruptsEntry_DoNotUse, std::string, ::int64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>;
  Status_DigitalInterruptsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Status_DigitalInterruptsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Status_DigitalInterruptsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Status_DigitalInterruptsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Status_DigitalInterruptsEntry_DoNotUse*>(
        &_Status_DigitalInterruptsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "viam.component.board.v1.Status.DigitalInterruptsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};
// -------------------------------------------------------------------

class Status_AnalogsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Status_AnalogsEntry_DoNotUse, std::string, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Status_AnalogsEntry_DoNotUse, std::string, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  Status_AnalogsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Status_AnalogsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Status_AnalogsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Status_AnalogsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Status_AnalogsEntry_DoNotUse*>(
        &_Status_AnalogsEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "viam.component.board.v1.Status.AnalogsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};
// -------------------------------------------------------------------

class SetPowerModeResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.component.board.v1.SetPowerModeResponse) */ {
 public:
  inline SetPowerModeResponse() : SetPowerModeResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPowerModeResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetPowerModeResponse(const SetPowerModeResponse& from)
      : SetPowerModeResponse(nullptr, from) {}
  SetPowerModeResponse(SetPowerModeResponse&& from) noexcept
    : SetPowerModeResponse() {
    *this = ::std::move(from);
  }

  inline SetPowerModeResponse& operator=(const SetPowerModeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPowerModeResponse& operator=(SetPowerModeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPowerModeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPowerModeResponse* internal_default_instance() {
    return reinterpret_cast<const SetPowerModeResponse*>(
               &_SetPowerModeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(SetPowerModeResponse& a, SetPowerModeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPowerModeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPowerModeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPowerModeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPowerModeResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetPowerModeResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetPowerModeResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.SetPowerModeResponse";
  }
  protected:
  explicit SetPowerModeResponse(::google::protobuf::Arena* arena);
  SetPowerModeResponse(::google::protobuf::Arena* arena, const SetPowerModeResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.component.board.v1.SetPowerModeResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class SetPWMResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.component.board.v1.SetPWMResponse) */ {
 public:
  inline SetPWMResponse() : SetPWMResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPWMResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetPWMResponse(const SetPWMResponse& from)
      : SetPWMResponse(nullptr, from) {}
  SetPWMResponse(SetPWMResponse&& from) noexcept
    : SetPWMResponse() {
    *this = ::std::move(from);
  }

  inline SetPWMResponse& operator=(const SetPWMResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPWMResponse& operator=(SetPWMResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPWMResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPWMResponse* internal_default_instance() {
    return reinterpret_cast<const SetPWMResponse*>(
               &_SetPWMResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SetPWMResponse& a, SetPWMResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPWMResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPWMResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPWMResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPWMResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetPWMResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetPWMResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.SetPWMResponse";
  }
  protected:
  explicit SetPWMResponse(::google::protobuf::Arena* arena);
  SetPWMResponse(::google::protobuf::Arena* arena, const SetPWMResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.component.board.v1.SetPWMResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class SetPWMFrequencyResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.component.board.v1.SetPWMFrequencyResponse) */ {
 public:
  inline SetPWMFrequencyResponse() : SetPWMFrequencyResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPWMFrequencyResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetPWMFrequencyResponse(const SetPWMFrequencyResponse& from)
      : SetPWMFrequencyResponse(nullptr, from) {}
  SetPWMFrequencyResponse(SetPWMFrequencyResponse&& from) noexcept
    : SetPWMFrequencyResponse() {
    *this = ::std::move(from);
  }

  inline SetPWMFrequencyResponse& operator=(const SetPWMFrequencyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPWMFrequencyResponse& operator=(SetPWMFrequencyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPWMFrequencyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPWMFrequencyResponse* internal_default_instance() {
    return reinterpret_cast<const SetPWMFrequencyResponse*>(
               &_SetPWMFrequencyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(SetPWMFrequencyResponse& a, SetPWMFrequencyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPWMFrequencyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPWMFrequencyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPWMFrequencyResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPWMFrequencyResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetPWMFrequencyResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetPWMFrequencyResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.SetPWMFrequencyResponse";
  }
  protected:
  explicit SetPWMFrequencyResponse(::google::protobuf::Arena* arena);
  SetPWMFrequencyResponse(::google::protobuf::Arena* arena, const SetPWMFrequencyResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.component.board.v1.SetPWMFrequencyResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class SetGPIOResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.component.board.v1.SetGPIOResponse) */ {
 public:
  inline SetGPIOResponse() : SetGPIOResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetGPIOResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetGPIOResponse(const SetGPIOResponse& from)
      : SetGPIOResponse(nullptr, from) {}
  SetGPIOResponse(SetGPIOResponse&& from) noexcept
    : SetGPIOResponse() {
    *this = ::std::move(from);
  }

  inline SetGPIOResponse& operator=(const SetGPIOResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetGPIOResponse& operator=(SetGPIOResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetGPIOResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetGPIOResponse* internal_default_instance() {
    return reinterpret_cast<const SetGPIOResponse*>(
               &_SetGPIOResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SetGPIOResponse& a, SetGPIOResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetGPIOResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetGPIOResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetGPIOResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetGPIOResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetGPIOResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetGPIOResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.SetGPIOResponse";
  }
  protected:
  explicit SetGPIOResponse(::google::protobuf::Arena* arena);
  SetGPIOResponse(::google::protobuf::Arena* arena, const SetGPIOResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.component.board.v1.SetGPIOResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class ReadAnalogReaderResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.ReadAnalogReaderResponse) */ {
 public:
  inline ReadAnalogReaderResponse() : ReadAnalogReaderResponse(nullptr) {}
  ~ReadAnalogReaderResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReadAnalogReaderResponse(::google::protobuf::internal::ConstantInitialized);

  inline ReadAnalogReaderResponse(const ReadAnalogReaderResponse& from)
      : ReadAnalogReaderResponse(nullptr, from) {}
  ReadAnalogReaderResponse(ReadAnalogReaderResponse&& from) noexcept
    : ReadAnalogReaderResponse() {
    *this = ::std::move(from);
  }

  inline ReadAnalogReaderResponse& operator=(const ReadAnalogReaderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadAnalogReaderResponse& operator=(ReadAnalogReaderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReadAnalogReaderResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadAnalogReaderResponse* internal_default_instance() {
    return reinterpret_cast<const ReadAnalogReaderResponse*>(
               &_ReadAnalogReaderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(ReadAnalogReaderResponse& a, ReadAnalogReaderResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReadAnalogReaderResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadAnalogReaderResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReadAnalogReaderResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReadAnalogReaderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReadAnalogReaderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReadAnalogReaderResponse& from) {
    ReadAnalogReaderResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReadAnalogReaderResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.ReadAnalogReaderResponse";
  }
  protected:
  explicit ReadAnalogReaderResponse(::google::protobuf::Arena* arena);
  ReadAnalogReaderResponse(::google::protobuf::Arena* arena, const ReadAnalogReaderResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kMinRangeFieldNumber = 2,
    kMaxRangeFieldNumber = 3,
    kStepSizeFieldNumber = 4,
  };
  // int32 value = 1 [json_name = "value"];
  void clear_value() ;
  ::int32_t value() const;
  void set_value(::int32_t value);

  private:
  ::int32_t _internal_value() const;
  void _internal_set_value(::int32_t value);

  public:
  // float min_range = 2 [json_name = "minRange"];
  void clear_min_range() ;
  float min_range() const;
  void set_min_range(float value);

  private:
  float _internal_min_range() const;
  void _internal_set_min_range(float value);

  public:
  // float max_range = 3 [json_name = "maxRange"];
  void clear_max_range() ;
  float max_range() const;
  void set_max_range(float value);

  private:
  float _internal_max_range() const;
  void _internal_set_max_range(float value);

  public:
  // float step_size = 4 [json_name = "stepSize"];
  void clear_step_size() ;
  float step_size() const;
  void set_step_size(float value);

  private:
  float _internal_step_size() const;
  void _internal_set_step_size(float value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.ReadAnalogReaderResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t value_;
    float min_range_;
    float max_range_;
    float step_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class PWMResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.PWMResponse) */ {
 public:
  inline PWMResponse() : PWMResponse(nullptr) {}
  ~PWMResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PWMResponse(::google::protobuf::internal::ConstantInitialized);

  inline PWMResponse(const PWMResponse& from)
      : PWMResponse(nullptr, from) {}
  PWMResponse(PWMResponse&& from) noexcept
    : PWMResponse() {
    *this = ::std::move(from);
  }

  inline PWMResponse& operator=(const PWMResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PWMResponse& operator=(PWMResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PWMResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PWMResponse* internal_default_instance() {
    return reinterpret_cast<const PWMResponse*>(
               &_PWMResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(PWMResponse& a, PWMResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PWMResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PWMResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PWMResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PWMResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PWMResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PWMResponse& from) {
    PWMResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PWMResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.PWMResponse";
  }
  protected:
  explicit PWMResponse(::google::protobuf::Arena* arena);
  PWMResponse(::google::protobuf::Arena* arena, const PWMResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDutyCyclePctFieldNumber = 1,
  };
  // double duty_cycle_pct = 1 [json_name = "dutyCyclePct"];
  void clear_duty_cycle_pct() ;
  double duty_cycle_pct() const;
  void set_duty_cycle_pct(double value);

  private:
  double _internal_duty_cycle_pct() const;
  void _internal_set_duty_cycle_pct(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.PWMResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double duty_cycle_pct_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class PWMFrequencyResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.PWMFrequencyResponse) */ {
 public:
  inline PWMFrequencyResponse() : PWMFrequencyResponse(nullptr) {}
  ~PWMFrequencyResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PWMFrequencyResponse(::google::protobuf::internal::ConstantInitialized);

  inline PWMFrequencyResponse(const PWMFrequencyResponse& from)
      : PWMFrequencyResponse(nullptr, from) {}
  PWMFrequencyResponse(PWMFrequencyResponse&& from) noexcept
    : PWMFrequencyResponse() {
    *this = ::std::move(from);
  }

  inline PWMFrequencyResponse& operator=(const PWMFrequencyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PWMFrequencyResponse& operator=(PWMFrequencyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PWMFrequencyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PWMFrequencyResponse* internal_default_instance() {
    return reinterpret_cast<const PWMFrequencyResponse*>(
               &_PWMFrequencyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(PWMFrequencyResponse& a, PWMFrequencyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PWMFrequencyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PWMFrequencyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PWMFrequencyResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PWMFrequencyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PWMFrequencyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PWMFrequencyResponse& from) {
    PWMFrequencyResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PWMFrequencyResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.PWMFrequencyResponse";
  }
  protected:
  explicit PWMFrequencyResponse(::google::protobuf::Arena* arena);
  PWMFrequencyResponse(::google::protobuf::Arena* arena, const PWMFrequencyResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrequencyHzFieldNumber = 1,
  };
  // uint64 frequency_hz = 1 [json_name = "frequencyHz"];
  void clear_frequency_hz() ;
  ::uint64_t frequency_hz() const;
  void set_frequency_hz(::uint64_t value);

  private:
  ::uint64_t _internal_frequency_hz() const;
  void _internal_set_frequency_hz(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.PWMFrequencyResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t frequency_hz_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class GetGPIOResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.GetGPIOResponse) */ {
 public:
  inline GetGPIOResponse() : GetGPIOResponse(nullptr) {}
  ~GetGPIOResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetGPIOResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetGPIOResponse(const GetGPIOResponse& from)
      : GetGPIOResponse(nullptr, from) {}
  GetGPIOResponse(GetGPIOResponse&& from) noexcept
    : GetGPIOResponse() {
    *this = ::std::move(from);
  }

  inline GetGPIOResponse& operator=(const GetGPIOResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGPIOResponse& operator=(GetGPIOResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGPIOResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGPIOResponse* internal_default_instance() {
    return reinterpret_cast<const GetGPIOResponse*>(
               &_GetGPIOResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetGPIOResponse& a, GetGPIOResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetGPIOResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGPIOResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGPIOResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetGPIOResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGPIOResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetGPIOResponse& from) {
    GetGPIOResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetGPIOResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.GetGPIOResponse";
  }
  protected:
  explicit GetGPIOResponse(::google::protobuf::Arena* arena);
  GetGPIOResponse(::google::protobuf::Arena* arena, const GetGPIOResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHighFieldNumber = 1,
  };
  // bool high = 1 [json_name = "high"];
  void clear_high() ;
  bool high() const;
  void set_high(bool value);

  private:
  bool _internal_high() const;
  void _internal_set_high(bool value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.GetGPIOResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool high_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class GetDigitalInterruptValueResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.GetDigitalInterruptValueResponse) */ {
 public:
  inline GetDigitalInterruptValueResponse() : GetDigitalInterruptValueResponse(nullptr) {}
  ~GetDigitalInterruptValueResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetDigitalInterruptValueResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetDigitalInterruptValueResponse(const GetDigitalInterruptValueResponse& from)
      : GetDigitalInterruptValueResponse(nullptr, from) {}
  GetDigitalInterruptValueResponse(GetDigitalInterruptValueResponse&& from) noexcept
    : GetDigitalInterruptValueResponse() {
    *this = ::std::move(from);
  }

  inline GetDigitalInterruptValueResponse& operator=(const GetDigitalInterruptValueResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDigitalInterruptValueResponse& operator=(GetDigitalInterruptValueResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDigitalInterruptValueResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDigitalInterruptValueResponse* internal_default_instance() {
    return reinterpret_cast<const GetDigitalInterruptValueResponse*>(
               &_GetDigitalInterruptValueResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(GetDigitalInterruptValueResponse& a, GetDigitalInterruptValueResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDigitalInterruptValueResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDigitalInterruptValueResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDigitalInterruptValueResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetDigitalInterruptValueResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetDigitalInterruptValueResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetDigitalInterruptValueResponse& from) {
    GetDigitalInterruptValueResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetDigitalInterruptValueResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.GetDigitalInterruptValueResponse";
  }
  protected:
  explicit GetDigitalInterruptValueResponse(::google::protobuf::Arena* arena);
  GetDigitalInterruptValueResponse(::google::protobuf::Arena* arena, const GetDigitalInterruptValueResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int64 value = 1 [json_name = "value"];
  void clear_value() ;
  ::int64_t value() const;
  void set_value(::int64_t value);

  private:
  ::int64_t _internal_value() const;
  void _internal_set_value(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.GetDigitalInterruptValueResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class WriteAnalogRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.WriteAnalogRequest) */ {
 public:
  inline WriteAnalogRequest() : WriteAnalogRequest(nullptr) {}
  ~WriteAnalogRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WriteAnalogRequest(::google::protobuf::internal::ConstantInitialized);

  inline WriteAnalogRequest(const WriteAnalogRequest& from)
      : WriteAnalogRequest(nullptr, from) {}
  WriteAnalogRequest(WriteAnalogRequest&& from) noexcept
    : WriteAnalogRequest() {
    *this = ::std::move(from);
  }

  inline WriteAnalogRequest& operator=(const WriteAnalogRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WriteAnalogRequest& operator=(WriteAnalogRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WriteAnalogRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WriteAnalogRequest* internal_default_instance() {
    return reinterpret_cast<const WriteAnalogRequest*>(
               &_WriteAnalogRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(WriteAnalogRequest& a, WriteAnalogRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WriteAnalogRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WriteAnalogRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WriteAnalogRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WriteAnalogRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WriteAnalogRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WriteAnalogRequest& from) {
    WriteAnalogRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WriteAnalogRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.WriteAnalogRequest";
  }
  protected:
  explicit WriteAnalogRequest(::google::protobuf::Arena* arena);
  WriteAnalogRequest(::google::protobuf::Arena* arena, const WriteAnalogRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kPinFieldNumber = 2,
    kExtraFieldNumber = 99,
    kValueFieldNumber = 3,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string pin = 2 [json_name = "pin"];
  void clear_pin() ;
  const std::string& pin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pin(Arg_&& arg, Args_... args);
  std::string* mutable_pin();
  PROTOBUF_NODISCARD std::string* release_pin();
  void set_allocated_pin(std::string* value);

  private:
  const std::string& _internal_pin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pin(
      const std::string& value);
  std::string* _internal_mutable_pin();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // int32 value = 3 [json_name = "value"];
  void clear_value() ;
  ::int32_t value() const;
  void set_value(::int32_t value);

  private:
  ::int32_t _internal_value() const;
  void _internal_set_value(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.WriteAnalogRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      58, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr pin_;
    ::google::protobuf::Struct* extra_;
    ::int32_t value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class StreamTicksRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.StreamTicksRequest) */ {
 public:
  inline StreamTicksRequest() : StreamTicksRequest(nullptr) {}
  ~StreamTicksRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StreamTicksRequest(::google::protobuf::internal::ConstantInitialized);

  inline StreamTicksRequest(const StreamTicksRequest& from)
      : StreamTicksRequest(nullptr, from) {}
  StreamTicksRequest(StreamTicksRequest&& from) noexcept
    : StreamTicksRequest() {
    *this = ::std::move(from);
  }

  inline StreamTicksRequest& operator=(const StreamTicksRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamTicksRequest& operator=(StreamTicksRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamTicksRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamTicksRequest* internal_default_instance() {
    return reinterpret_cast<const StreamTicksRequest*>(
               &_StreamTicksRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(StreamTicksRequest& a, StreamTicksRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamTicksRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamTicksRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamTicksRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StreamTicksRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamTicksRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StreamTicksRequest& from) {
    StreamTicksRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StreamTicksRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.StreamTicksRequest";
  }
  protected:
  explicit StreamTicksRequest(::google::protobuf::Arena* arena);
  StreamTicksRequest(::google::protobuf::Arena* arena, const StreamTicksRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPinNamesFieldNumber = 2,
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // repeated string pin_names = 2 [json_name = "pinNames"];
  int pin_names_size() const;
  private:
  int _internal_pin_names_size() const;

  public:
  void clear_pin_names() ;
  const std::string& pin_names(int index) const;
  std::string* mutable_pin_names(int index);
  void set_pin_names(int index, const std::string& value);
  void set_pin_names(int index, std::string&& value);
  void set_pin_names(int index, const char* value);
  void set_pin_names(int index, const char* value, std::size_t size);
  void set_pin_names(int index, absl::string_view value);
  std::string* add_pin_names();
  void add_pin_names(const std::string& value);
  void add_pin_names(std::string&& value);
  void add_pin_names(const char* value);
  void add_pin_names(const char* value, std::size_t size);
  void add_pin_names(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& pin_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_pin_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_pin_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_pin_names();

  public:
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.StreamTicksRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      64, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> pin_names_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class Status final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.Status) */ {
 public:
  inline Status() : Status(nullptr) {}
  ~Status() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Status(::google::protobuf::internal::ConstantInitialized);

  inline Status(const Status& from)
      : Status(nullptr, from) {}
  Status(Status&& from) noexcept
    : Status() {
    *this = ::std::move(from);
  }

  inline Status& operator=(const Status& from) {
    CopyFrom(from);
    return *this;
  }
  inline Status& operator=(Status&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Status& default_instance() {
    return *internal_default_instance();
  }
  static inline const Status* internal_default_instance() {
    return reinterpret_cast<const Status*>(
               &_Status_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Status& a, Status& b) {
    a.Swap(&b);
  }
  inline void Swap(Status* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Status* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Status* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Status>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Status& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Status& from) {
    Status::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Status* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.Status";
  }
  protected:
  explicit Status(::google::protobuf::Arena* arena);
  Status(::google::protobuf::Arena* arena, const Status& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kAnalogsFieldNumber = 1,
    kDigitalInterruptsFieldNumber = 2,
  };
  // map<string, int32> analogs = 1 [json_name = "analogs"];
  int analogs_size() const;
  private:
  int _internal_analogs_size() const;

  public:
  void clear_analogs() ;
  const ::google::protobuf::Map<std::string, ::int32_t>& analogs() const;
  ::google::protobuf::Map<std::string, ::int32_t>* mutable_analogs();

  private:
  const ::google::protobuf::Map<std::string, ::int32_t>& _internal_analogs() const;
  ::google::protobuf::Map<std::string, ::int32_t>* _internal_mutable_analogs();

  public:
  // map<string, int64> digital_interrupts = 2 [json_name = "digitalInterrupts"];
  int digital_interrupts_size() const;
  private:
  int _internal_digital_interrupts_size() const;

  public:
  void clear_digital_interrupts() ;
  const ::google::protobuf::Map<std::string, ::int64_t>& digital_interrupts() const;
  ::google::protobuf::Map<std::string, ::int64_t>* mutable_digital_interrupts();

  private:
  const ::google::protobuf::Map<std::string, ::int64_t>& _internal_digital_interrupts() const;
  ::google::protobuf::Map<std::string, ::int64_t>* _internal_mutable_digital_interrupts();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.Status)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      64, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<Status_AnalogsEntry_DoNotUse, std::string, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        analogs_;
    ::google::protobuf::internal::MapField<Status_DigitalInterruptsEntry_DoNotUse, std::string, ::int64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>
        digital_interrupts_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class SetPowerModeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.SetPowerModeRequest) */ {
 public:
  inline SetPowerModeRequest() : SetPowerModeRequest(nullptr) {}
  ~SetPowerModeRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPowerModeRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetPowerModeRequest(const SetPowerModeRequest& from)
      : SetPowerModeRequest(nullptr, from) {}
  SetPowerModeRequest(SetPowerModeRequest&& from) noexcept
    : SetPowerModeRequest() {
    *this = ::std::move(from);
  }

  inline SetPowerModeRequest& operator=(const SetPowerModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPowerModeRequest& operator=(SetPowerModeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPowerModeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPowerModeRequest* internal_default_instance() {
    return reinterpret_cast<const SetPowerModeRequest*>(
               &_SetPowerModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(SetPowerModeRequest& a, SetPowerModeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPowerModeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPowerModeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPowerModeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPowerModeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPowerModeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetPowerModeRequest& from) {
    SetPowerModeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetPowerModeRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.SetPowerModeRequest";
  }
  protected:
  explicit SetPowerModeRequest(::google::protobuf::Arena* arena);
  SetPowerModeRequest(::google::protobuf::Arena* arena, const SetPowerModeRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kDurationFieldNumber = 3,
    kExtraFieldNumber = 99,
    kPowerModeFieldNumber = 2,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional .google.protobuf.Duration duration = 3 [json_name = "duration"];
  bool has_duration() const;
  void clear_duration() ;
  const ::google::protobuf::Duration& duration() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_duration();
  ::google::protobuf::Duration* mutable_duration();
  void set_allocated_duration(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_duration(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_duration();

  private:
  const ::google::protobuf::Duration& _internal_duration() const;
  ::google::protobuf::Duration* _internal_mutable_duration();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // .viam.component.board.v1.PowerMode power_mode = 2 [json_name = "powerMode"];
  void clear_power_mode() ;
  ::viam::component::board::v1::PowerMode power_mode() const;
  void set_power_mode(::viam::component::board::v1::PowerMode value);

  private:
  ::viam::component::board::v1::PowerMode _internal_power_mode() const;
  void _internal_set_power_mode(::viam::component::board::v1::PowerMode value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.SetPowerModeRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      56, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Duration* duration_;
    ::google::protobuf::Struct* extra_;
    int power_mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class SetPWMRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.SetPWMRequest) */ {
 public:
  inline SetPWMRequest() : SetPWMRequest(nullptr) {}
  ~SetPWMRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPWMRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetPWMRequest(const SetPWMRequest& from)
      : SetPWMRequest(nullptr, from) {}
  SetPWMRequest(SetPWMRequest&& from) noexcept
    : SetPWMRequest() {
    *this = ::std::move(from);
  }

  inline SetPWMRequest& operator=(const SetPWMRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPWMRequest& operator=(SetPWMRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPWMRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPWMRequest* internal_default_instance() {
    return reinterpret_cast<const SetPWMRequest*>(
               &_SetPWMRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SetPWMRequest& a, SetPWMRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPWMRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPWMRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPWMRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPWMRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPWMRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetPWMRequest& from) {
    SetPWMRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetPWMRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.SetPWMRequest";
  }
  protected:
  explicit SetPWMRequest(::google::protobuf::Arena* arena);
  SetPWMRequest(::google::protobuf::Arena* arena, const SetPWMRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kPinFieldNumber = 2,
    kExtraFieldNumber = 99,
    kDutyCyclePctFieldNumber = 3,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string pin = 2 [json_name = "pin"];
  void clear_pin() ;
  const std::string& pin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pin(Arg_&& arg, Args_... args);
  std::string* mutable_pin();
  PROTOBUF_NODISCARD std::string* release_pin();
  void set_allocated_pin(std::string* value);

  private:
  const std::string& _internal_pin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pin(
      const std::string& value);
  std::string* _internal_mutable_pin();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // double duty_cycle_pct = 3 [json_name = "dutyCyclePct"];
  void clear_duty_cycle_pct() ;
  double duty_cycle_pct() const;
  void set_duty_cycle_pct(double value);

  private:
  double _internal_duty_cycle_pct() const;
  void _internal_set_duty_cycle_pct(double value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.SetPWMRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      53, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr pin_;
    ::google::protobuf::Struct* extra_;
    double duty_cycle_pct_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class SetPWMFrequencyRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.SetPWMFrequencyRequest) */ {
 public:
  inline SetPWMFrequencyRequest() : SetPWMFrequencyRequest(nullptr) {}
  ~SetPWMFrequencyRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetPWMFrequencyRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetPWMFrequencyRequest(const SetPWMFrequencyRequest& from)
      : SetPWMFrequencyRequest(nullptr, from) {}
  SetPWMFrequencyRequest(SetPWMFrequencyRequest&& from) noexcept
    : SetPWMFrequencyRequest() {
    *this = ::std::move(from);
  }

  inline SetPWMFrequencyRequest& operator=(const SetPWMFrequencyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPWMFrequencyRequest& operator=(SetPWMFrequencyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPWMFrequencyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPWMFrequencyRequest* internal_default_instance() {
    return reinterpret_cast<const SetPWMFrequencyRequest*>(
               &_SetPWMFrequencyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(SetPWMFrequencyRequest& a, SetPWMFrequencyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPWMFrequencyRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPWMFrequencyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPWMFrequencyRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPWMFrequencyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPWMFrequencyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetPWMFrequencyRequest& from) {
    SetPWMFrequencyRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetPWMFrequencyRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.SetPWMFrequencyRequest";
  }
  protected:
  explicit SetPWMFrequencyRequest(::google::protobuf::Arena* arena);
  SetPWMFrequencyRequest(::google::protobuf::Arena* arena, const SetPWMFrequencyRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kPinFieldNumber = 2,
    kExtraFieldNumber = 99,
    kFrequencyHzFieldNumber = 3,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string pin = 2 [json_name = "pin"];
  void clear_pin() ;
  const std::string& pin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pin(Arg_&& arg, Args_... args);
  std::string* mutable_pin();
  PROTOBUF_NODISCARD std::string* release_pin();
  void set_allocated_pin(std::string* value);

  private:
  const std::string& _internal_pin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pin(
      const std::string& value);
  std::string* _internal_mutable_pin();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // uint64 frequency_hz = 3 [json_name = "frequencyHz"];
  void clear_frequency_hz() ;
  ::uint64_t frequency_hz() const;
  void set_frequency_hz(::uint64_t value);

  private:
  ::uint64_t _internal_frequency_hz() const;
  void _internal_set_frequency_hz(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.SetPWMFrequencyRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      62, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr pin_;
    ::google::protobuf::Struct* extra_;
    ::uint64_t frequency_hz_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class SetGPIORequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.SetGPIORequest) */ {
 public:
  inline SetGPIORequest() : SetGPIORequest(nullptr) {}
  ~SetGPIORequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetGPIORequest(::google::protobuf::internal::ConstantInitialized);

  inline SetGPIORequest(const SetGPIORequest& from)
      : SetGPIORequest(nullptr, from) {}
  SetGPIORequest(SetGPIORequest&& from) noexcept
    : SetGPIORequest() {
    *this = ::std::move(from);
  }

  inline SetGPIORequest& operator=(const SetGPIORequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetGPIORequest& operator=(SetGPIORequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetGPIORequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetGPIORequest* internal_default_instance() {
    return reinterpret_cast<const SetGPIORequest*>(
               &_SetGPIORequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SetGPIORequest& a, SetGPIORequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetGPIORequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetGPIORequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetGPIORequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetGPIORequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetGPIORequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetGPIORequest& from) {
    SetGPIORequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetGPIORequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.SetGPIORequest";
  }
  protected:
  explicit SetGPIORequest(::google::protobuf::Arena* arena);
  SetGPIORequest(::google::protobuf::Arena* arena, const SetGPIORequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kPinFieldNumber = 2,
    kExtraFieldNumber = 99,
    kHighFieldNumber = 3,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string pin = 2 [json_name = "pin"];
  void clear_pin() ;
  const std::string& pin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pin(Arg_&& arg, Args_... args);
  std::string* mutable_pin();
  PROTOBUF_NODISCARD std::string* release_pin();
  void set_allocated_pin(std::string* value);

  private:
  const std::string& _internal_pin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pin(
      const std::string& value);
  std::string* _internal_mutable_pin();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // bool high = 3 [json_name = "high"];
  void clear_high() ;
  bool high() const;
  void set_high(bool value);

  private:
  bool _internal_high() const;
  void _internal_set_high(bool value);

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.SetGPIORequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      54, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr pin_;
    ::google::protobuf::Struct* extra_;
    bool high_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class ReadAnalogReaderRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.ReadAnalogReaderRequest) */ {
 public:
  inline ReadAnalogReaderRequest() : ReadAnalogReaderRequest(nullptr) {}
  ~ReadAnalogReaderRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReadAnalogReaderRequest(::google::protobuf::internal::ConstantInitialized);

  inline ReadAnalogReaderRequest(const ReadAnalogReaderRequest& from)
      : ReadAnalogReaderRequest(nullptr, from) {}
  ReadAnalogReaderRequest(ReadAnalogReaderRequest&& from) noexcept
    : ReadAnalogReaderRequest() {
    *this = ::std::move(from);
  }

  inline ReadAnalogReaderRequest& operator=(const ReadAnalogReaderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadAnalogReaderRequest& operator=(ReadAnalogReaderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReadAnalogReaderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadAnalogReaderRequest* internal_default_instance() {
    return reinterpret_cast<const ReadAnalogReaderRequest*>(
               &_ReadAnalogReaderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ReadAnalogReaderRequest& a, ReadAnalogReaderRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReadAnalogReaderRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadAnalogReaderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReadAnalogReaderRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReadAnalogReaderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReadAnalogReaderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReadAnalogReaderRequest& from) {
    ReadAnalogReaderRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReadAnalogReaderRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.ReadAnalogReaderRequest";
  }
  protected:
  explicit ReadAnalogReaderRequest(::google::protobuf::Arena* arena);
  ReadAnalogReaderRequest(::google::protobuf::Arena* arena, const ReadAnalogReaderRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBoardNameFieldNumber = 1,
    kAnalogReaderNameFieldNumber = 2,
    kExtraFieldNumber = 99,
  };
  // string board_name = 1 [json_name = "boardName"];
  void clear_board_name() ;
  const std::string& board_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_board_name(Arg_&& arg, Args_... args);
  std::string* mutable_board_name();
  PROTOBUF_NODISCARD std::string* release_board_name();
  void set_allocated_board_name(std::string* value);

  private:
  const std::string& _internal_board_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_board_name(
      const std::string& value);
  std::string* _internal_mutable_board_name();

  public:
  // string analog_reader_name = 2 [json_name = "analogReaderName"];
  void clear_analog_reader_name() ;
  const std::string& analog_reader_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_analog_reader_name(Arg_&& arg, Args_... args);
  std::string* mutable_analog_reader_name();
  PROTOBUF_NODISCARD std::string* release_analog_reader_name();
  void set_allocated_analog_reader_name(std::string* value);

  private:
  const std::string& _internal_analog_reader_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_analog_reader_name(
      const std::string& value);
  std::string* _internal_mutable_analog_reader_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.ReadAnalogReaderRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      84, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr board_name_;
    ::google::protobuf::internal::ArenaStringPtr analog_reader_name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class PWMRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.PWMRequest) */ {
 public:
  inline PWMRequest() : PWMRequest(nullptr) {}
  ~PWMRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PWMRequest(::google::protobuf::internal::ConstantInitialized);

  inline PWMRequest(const PWMRequest& from)
      : PWMRequest(nullptr, from) {}
  PWMRequest(PWMRequest&& from) noexcept
    : PWMRequest() {
    *this = ::std::move(from);
  }

  inline PWMRequest& operator=(const PWMRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PWMRequest& operator=(PWMRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PWMRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PWMRequest* internal_default_instance() {
    return reinterpret_cast<const PWMRequest*>(
               &_PWMRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PWMRequest& a, PWMRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PWMRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PWMRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PWMRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PWMRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PWMRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PWMRequest& from) {
    PWMRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PWMRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.PWMRequest";
  }
  protected:
  explicit PWMRequest(::google::protobuf::Arena* arena);
  PWMRequest(::google::protobuf::Arena* arena, const PWMRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kPinFieldNumber = 2,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string pin = 2 [json_name = "pin"];
  void clear_pin() ;
  const std::string& pin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pin(Arg_&& arg, Args_... args);
  std::string* mutable_pin();
  PROTOBUF_NODISCARD std::string* release_pin();
  void set_allocated_pin(std::string* value);

  private:
  const std::string& _internal_pin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pin(
      const std::string& value);
  std::string* _internal_mutable_pin();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.PWMRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      50, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr pin_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class PWMFrequencyRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.PWMFrequencyRequest) */ {
 public:
  inline PWMFrequencyRequest() : PWMFrequencyRequest(nullptr) {}
  ~PWMFrequencyRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PWMFrequencyRequest(::google::protobuf::internal::ConstantInitialized);

  inline PWMFrequencyRequest(const PWMFrequencyRequest& from)
      : PWMFrequencyRequest(nullptr, from) {}
  PWMFrequencyRequest(PWMFrequencyRequest&& from) noexcept
    : PWMFrequencyRequest() {
    *this = ::std::move(from);
  }

  inline PWMFrequencyRequest& operator=(const PWMFrequencyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PWMFrequencyRequest& operator=(PWMFrequencyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PWMFrequencyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PWMFrequencyRequest* internal_default_instance() {
    return reinterpret_cast<const PWMFrequencyRequest*>(
               &_PWMFrequencyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(PWMFrequencyRequest& a, PWMFrequencyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PWMFrequencyRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PWMFrequencyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PWMFrequencyRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PWMFrequencyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PWMFrequencyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PWMFrequencyRequest& from) {
    PWMFrequencyRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PWMFrequencyRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.PWMFrequencyRequest";
  }
  protected:
  explicit PWMFrequencyRequest(::google::protobuf::Arena* arena);
  PWMFrequencyRequest(::google::protobuf::Arena* arena, const PWMFrequencyRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kPinFieldNumber = 2,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string pin = 2 [json_name = "pin"];
  void clear_pin() ;
  const std::string& pin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pin(Arg_&& arg, Args_... args);
  std::string* mutable_pin();
  PROTOBUF_NODISCARD std::string* release_pin();
  void set_allocated_pin(std::string* value);

  private:
  const std::string& _internal_pin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pin(
      const std::string& value);
  std::string* _internal_mutable_pin();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.PWMFrequencyRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      59, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr pin_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class GetGPIORequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.GetGPIORequest) */ {
 public:
  inline GetGPIORequest() : GetGPIORequest(nullptr) {}
  ~GetGPIORequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetGPIORequest(::google::protobuf::internal::ConstantInitialized);

  inline GetGPIORequest(const GetGPIORequest& from)
      : GetGPIORequest(nullptr, from) {}
  GetGPIORequest(GetGPIORequest&& from) noexcept
    : GetGPIORequest() {
    *this = ::std::move(from);
  }

  inline GetGPIORequest& operator=(const GetGPIORequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGPIORequest& operator=(GetGPIORequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGPIORequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGPIORequest* internal_default_instance() {
    return reinterpret_cast<const GetGPIORequest*>(
               &_GetGPIORequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetGPIORequest& a, GetGPIORequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetGPIORequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGPIORequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGPIORequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetGPIORequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGPIORequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetGPIORequest& from) {
    GetGPIORequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetGPIORequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.GetGPIORequest";
  }
  protected:
  explicit GetGPIORequest(::google::protobuf::Arena* arena);
  GetGPIORequest(::google::protobuf::Arena* arena, const GetGPIORequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kPinFieldNumber = 2,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string pin = 2 [json_name = "pin"];
  void clear_pin() ;
  const std::string& pin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pin(Arg_&& arg, Args_... args);
  std::string* mutable_pin();
  PROTOBUF_NODISCARD std::string* release_pin();
  void set_allocated_pin(std::string* value);

  private:
  const std::string& _internal_pin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pin(
      const std::string& value);
  std::string* _internal_mutable_pin();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.GetGPIORequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      54, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr pin_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};// -------------------------------------------------------------------

class GetDigitalInterruptValueRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:viam.component.board.v1.GetDigitalInterruptValueRequest) */ {
 public:
  inline GetDigitalInterruptValueRequest() : GetDigitalInterruptValueRequest(nullptr) {}
  ~GetDigitalInterruptValueRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetDigitalInterruptValueRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetDigitalInterruptValueRequest(const GetDigitalInterruptValueRequest& from)
      : GetDigitalInterruptValueRequest(nullptr, from) {}
  GetDigitalInterruptValueRequest(GetDigitalInterruptValueRequest&& from) noexcept
    : GetDigitalInterruptValueRequest() {
    *this = ::std::move(from);
  }

  inline GetDigitalInterruptValueRequest& operator=(const GetDigitalInterruptValueRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDigitalInterruptValueRequest& operator=(GetDigitalInterruptValueRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDigitalInterruptValueRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDigitalInterruptValueRequest* internal_default_instance() {
    return reinterpret_cast<const GetDigitalInterruptValueRequest*>(
               &_GetDigitalInterruptValueRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(GetDigitalInterruptValueRequest& a, GetDigitalInterruptValueRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDigitalInterruptValueRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDigitalInterruptValueRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDigitalInterruptValueRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetDigitalInterruptValueRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetDigitalInterruptValueRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetDigitalInterruptValueRequest& from) {
    GetDigitalInterruptValueRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetDigitalInterruptValueRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "viam.component.board.v1.GetDigitalInterruptValueRequest";
  }
  protected:
  explicit GetDigitalInterruptValueRequest(::google::protobuf::Arena* arena);
  GetDigitalInterruptValueRequest(::google::protobuf::Arena* arena, const GetDigitalInterruptValueRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBoardNameFieldNumber = 1,
    kDigitalInterruptNameFieldNumber = 2,
    kExtraFieldNumber = 99,
  };
  // string board_name = 1 [json_name = "boardName"];
  void clear_board_name() ;
  const std::string& board_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_board_name(Arg_&& arg, Args_... args);
  std::string* mutable_board_name();
  PROTOBUF_NODISCARD std::string* release_board_name();
  void set_allocated_board_name(std::string* value);

  private:
  const std::string& _internal_board_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_board_name(
      const std::string& value);
  std::string* _internal_mutable_board_name();

  public:
  // string digital_interrupt_name = 2 [json_name = "digitalInterruptName"];
  void clear_digital_interrupt_name() ;
  const std::string& digital_interrupt_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_digital_interrupt_name(Arg_&& arg, Args_... args);
  std::string* mutable_digital_interrupt_name();
  PROTOBUF_NODISCARD std::string* release_digital_interrupt_name();
  void set_allocated_digital_interrupt_name(std::string* value);

  private:
  const std::string& _internal_digital_interrupt_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_digital_interrupt_name(
      const std::string& value);
  std::string* _internal_mutable_digital_interrupt_name();

  public:
  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  void clear_extra() ;
  const ::google::protobuf::Struct& extra() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_extra();
  ::google::protobuf::Struct* mutable_extra();
  void set_allocated_extra(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_extra();

  private:
  const ::google::protobuf::Struct& _internal_extra() const;
  ::google::protobuf::Struct* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:viam.component.board.v1.GetDigitalInterruptValueRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      96, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr board_name_;
    ::google::protobuf::internal::ArenaStringPtr digital_interrupt_name_;
    ::google::protobuf::Struct* extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_component_2fboard_2fv1_2fboard_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Status

// map<string, int32> analogs = 1 [json_name = "analogs"];
inline int Status::_internal_analogs_size() const {
  return _internal_analogs().size();
}
inline int Status::analogs_size() const {
  return _internal_analogs_size();
}
inline void Status::clear_analogs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.analogs_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& Status::_internal_analogs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.analogs_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& Status::analogs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:viam.component.board.v1.Status.analogs)
  return _internal_analogs();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* Status::_internal_mutable_analogs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.analogs_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* Status::mutable_analogs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:viam.component.board.v1.Status.analogs)
  return _internal_mutable_analogs();
}

// map<string, int64> digital_interrupts = 2 [json_name = "digitalInterrupts"];
inline int Status::_internal_digital_interrupts_size() const {
  return _internal_digital_interrupts().size();
}
inline int Status::digital_interrupts_size() const {
  return _internal_digital_interrupts_size();
}
inline void Status::clear_digital_interrupts() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.digital_interrupts_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int64_t>& Status::_internal_digital_interrupts() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.digital_interrupts_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int64_t>& Status::digital_interrupts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:viam.component.board.v1.Status.digital_interrupts)
  return _internal_digital_interrupts();
}
inline ::google::protobuf::Map<std::string, ::int64_t>* Status::_internal_mutable_digital_interrupts() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.digital_interrupts_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int64_t>* Status::mutable_digital_interrupts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:viam.component.board.v1.Status.digital_interrupts)
  return _internal_mutable_digital_interrupts();
}

// -------------------------------------------------------------------

// SetGPIORequest

// string name = 1 [json_name = "name"];
inline void SetGPIORequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SetGPIORequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetGPIORequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetGPIORequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.SetGPIORequest.name)
}
inline std::string* SetGPIORequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.SetGPIORequest.name)
  return _s;
}
inline const std::string& SetGPIORequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SetGPIORequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SetGPIORequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SetGPIORequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.SetGPIORequest.name)
  return _impl_.name_.Release();
}
inline void SetGPIORequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.SetGPIORequest.name)
}

// string pin = 2 [json_name = "pin"];
inline void SetGPIORequest::clear_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.ClearToEmpty();
}
inline const std::string& SetGPIORequest::pin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetGPIORequest.pin)
  return _internal_pin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetGPIORequest::set_pin(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.SetGPIORequest.pin)
}
inline std::string* SetGPIORequest::mutable_pin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pin();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.SetGPIORequest.pin)
  return _s;
}
inline const std::string& SetGPIORequest::_internal_pin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pin_.Get();
}
inline void SetGPIORequest::_internal_set_pin(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(value, GetArena());
}
inline std::string* SetGPIORequest::_internal_mutable_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pin_.Mutable( GetArena());
}
inline std::string* SetGPIORequest::release_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.SetGPIORequest.pin)
  return _impl_.pin_.Release();
}
inline void SetGPIORequest::set_allocated_pin(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pin_.IsDefault()) {
          _impl_.pin_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.SetGPIORequest.pin)
}

// bool high = 3 [json_name = "high"];
inline void SetGPIORequest::clear_high() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.high_ = false;
}
inline bool SetGPIORequest::high() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetGPIORequest.high)
  return _internal_high();
}
inline void SetGPIORequest::set_high(bool value) {
  _internal_set_high(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.SetGPIORequest.high)
}
inline bool SetGPIORequest::_internal_high() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.high_;
}
inline void SetGPIORequest::_internal_set_high(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.high_ = value;
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool SetGPIORequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& SetGPIORequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& SetGPIORequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetGPIORequest.extra)
  return _internal_extra();
}
inline void SetGPIORequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.board.v1.SetGPIORequest.extra)
}
inline ::google::protobuf::Struct* SetGPIORequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* SetGPIORequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.SetGPIORequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* SetGPIORequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* SetGPIORequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.SetGPIORequest.extra)
  return _msg;
}
inline void SetGPIORequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.SetGPIORequest.extra)
}

// -------------------------------------------------------------------

// SetGPIOResponse

// -------------------------------------------------------------------

// GetGPIORequest

// string name = 1 [json_name = "name"];
inline void GetGPIORequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetGPIORequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.GetGPIORequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetGPIORequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.GetGPIORequest.name)
}
inline std::string* GetGPIORequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.GetGPIORequest.name)
  return _s;
}
inline const std::string& GetGPIORequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetGPIORequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetGPIORequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetGPIORequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.GetGPIORequest.name)
  return _impl_.name_.Release();
}
inline void GetGPIORequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.GetGPIORequest.name)
}

// string pin = 2 [json_name = "pin"];
inline void GetGPIORequest::clear_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.ClearToEmpty();
}
inline const std::string& GetGPIORequest::pin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.GetGPIORequest.pin)
  return _internal_pin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetGPIORequest::set_pin(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.GetGPIORequest.pin)
}
inline std::string* GetGPIORequest::mutable_pin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pin();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.GetGPIORequest.pin)
  return _s;
}
inline const std::string& GetGPIORequest::_internal_pin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pin_.Get();
}
inline void GetGPIORequest::_internal_set_pin(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(value, GetArena());
}
inline std::string* GetGPIORequest::_internal_mutable_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pin_.Mutable( GetArena());
}
inline std::string* GetGPIORequest::release_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.GetGPIORequest.pin)
  return _impl_.pin_.Release();
}
inline void GetGPIORequest::set_allocated_pin(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pin_.IsDefault()) {
          _impl_.pin_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.GetGPIORequest.pin)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetGPIORequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetGPIORequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetGPIORequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.GetGPIORequest.extra)
  return _internal_extra();
}
inline void GetGPIORequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.board.v1.GetGPIORequest.extra)
}
inline ::google::protobuf::Struct* GetGPIORequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetGPIORequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.GetGPIORequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetGPIORequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetGPIORequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.GetGPIORequest.extra)
  return _msg;
}
inline void GetGPIORequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.GetGPIORequest.extra)
}

// -------------------------------------------------------------------

// GetGPIOResponse

// bool high = 1 [json_name = "high"];
inline void GetGPIOResponse::clear_high() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.high_ = false;
}
inline bool GetGPIOResponse::high() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.GetGPIOResponse.high)
  return _internal_high();
}
inline void GetGPIOResponse::set_high(bool value) {
  _internal_set_high(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.GetGPIOResponse.high)
}
inline bool GetGPIOResponse::_internal_high() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.high_;
}
inline void GetGPIOResponse::_internal_set_high(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.high_ = value;
}

// -------------------------------------------------------------------

// PWMRequest

// string name = 1 [json_name = "name"];
inline void PWMRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& PWMRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.PWMRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PWMRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.PWMRequest.name)
}
inline std::string* PWMRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.PWMRequest.name)
  return _s;
}
inline const std::string& PWMRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void PWMRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PWMRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PWMRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.PWMRequest.name)
  return _impl_.name_.Release();
}
inline void PWMRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.PWMRequest.name)
}

// string pin = 2 [json_name = "pin"];
inline void PWMRequest::clear_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.ClearToEmpty();
}
inline const std::string& PWMRequest::pin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.PWMRequest.pin)
  return _internal_pin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PWMRequest::set_pin(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.PWMRequest.pin)
}
inline std::string* PWMRequest::mutable_pin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pin();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.PWMRequest.pin)
  return _s;
}
inline const std::string& PWMRequest::_internal_pin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pin_.Get();
}
inline void PWMRequest::_internal_set_pin(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(value, GetArena());
}
inline std::string* PWMRequest::_internal_mutable_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pin_.Mutable( GetArena());
}
inline std::string* PWMRequest::release_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.PWMRequest.pin)
  return _impl_.pin_.Release();
}
inline void PWMRequest::set_allocated_pin(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pin_.IsDefault()) {
          _impl_.pin_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.PWMRequest.pin)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool PWMRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& PWMRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& PWMRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.PWMRequest.extra)
  return _internal_extra();
}
inline void PWMRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.board.v1.PWMRequest.extra)
}
inline ::google::protobuf::Struct* PWMRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* PWMRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.PWMRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* PWMRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* PWMRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.PWMRequest.extra)
  return _msg;
}
inline void PWMRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.PWMRequest.extra)
}

// -------------------------------------------------------------------

// PWMResponse

// double duty_cycle_pct = 1 [json_name = "dutyCyclePct"];
inline void PWMResponse::clear_duty_cycle_pct() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.duty_cycle_pct_ = 0;
}
inline double PWMResponse::duty_cycle_pct() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.PWMResponse.duty_cycle_pct)
  return _internal_duty_cycle_pct();
}
inline void PWMResponse::set_duty_cycle_pct(double value) {
  _internal_set_duty_cycle_pct(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.PWMResponse.duty_cycle_pct)
}
inline double PWMResponse::_internal_duty_cycle_pct() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.duty_cycle_pct_;
}
inline void PWMResponse::_internal_set_duty_cycle_pct(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.duty_cycle_pct_ = value;
}

// -------------------------------------------------------------------

// SetPWMRequest

// string name = 1 [json_name = "name"];
inline void SetPWMRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SetPWMRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetPWMRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetPWMRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.SetPWMRequest.name)
}
inline std::string* SetPWMRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.SetPWMRequest.name)
  return _s;
}
inline const std::string& SetPWMRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SetPWMRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SetPWMRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SetPWMRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.SetPWMRequest.name)
  return _impl_.name_.Release();
}
inline void SetPWMRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.SetPWMRequest.name)
}

// string pin = 2 [json_name = "pin"];
inline void SetPWMRequest::clear_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.ClearToEmpty();
}
inline const std::string& SetPWMRequest::pin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetPWMRequest.pin)
  return _internal_pin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetPWMRequest::set_pin(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.SetPWMRequest.pin)
}
inline std::string* SetPWMRequest::mutable_pin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pin();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.SetPWMRequest.pin)
  return _s;
}
inline const std::string& SetPWMRequest::_internal_pin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pin_.Get();
}
inline void SetPWMRequest::_internal_set_pin(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(value, GetArena());
}
inline std::string* SetPWMRequest::_internal_mutable_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pin_.Mutable( GetArena());
}
inline std::string* SetPWMRequest::release_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.SetPWMRequest.pin)
  return _impl_.pin_.Release();
}
inline void SetPWMRequest::set_allocated_pin(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pin_.IsDefault()) {
          _impl_.pin_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.SetPWMRequest.pin)
}

// double duty_cycle_pct = 3 [json_name = "dutyCyclePct"];
inline void SetPWMRequest::clear_duty_cycle_pct() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.duty_cycle_pct_ = 0;
}
inline double SetPWMRequest::duty_cycle_pct() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetPWMRequest.duty_cycle_pct)
  return _internal_duty_cycle_pct();
}
inline void SetPWMRequest::set_duty_cycle_pct(double value) {
  _internal_set_duty_cycle_pct(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.SetPWMRequest.duty_cycle_pct)
}
inline double SetPWMRequest::_internal_duty_cycle_pct() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.duty_cycle_pct_;
}
inline void SetPWMRequest::_internal_set_duty_cycle_pct(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.duty_cycle_pct_ = value;
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool SetPWMRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& SetPWMRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& SetPWMRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetPWMRequest.extra)
  return _internal_extra();
}
inline void SetPWMRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.board.v1.SetPWMRequest.extra)
}
inline ::google::protobuf::Struct* SetPWMRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* SetPWMRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.SetPWMRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* SetPWMRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* SetPWMRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.SetPWMRequest.extra)
  return _msg;
}
inline void SetPWMRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.SetPWMRequest.extra)
}

// -------------------------------------------------------------------

// SetPWMResponse

// -------------------------------------------------------------------

// PWMFrequencyRequest

// string name = 1 [json_name = "name"];
inline void PWMFrequencyRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& PWMFrequencyRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.PWMFrequencyRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PWMFrequencyRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.PWMFrequencyRequest.name)
}
inline std::string* PWMFrequencyRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.PWMFrequencyRequest.name)
  return _s;
}
inline const std::string& PWMFrequencyRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void PWMFrequencyRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PWMFrequencyRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PWMFrequencyRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.PWMFrequencyRequest.name)
  return _impl_.name_.Release();
}
inline void PWMFrequencyRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.PWMFrequencyRequest.name)
}

// string pin = 2 [json_name = "pin"];
inline void PWMFrequencyRequest::clear_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.ClearToEmpty();
}
inline const std::string& PWMFrequencyRequest::pin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.PWMFrequencyRequest.pin)
  return _internal_pin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PWMFrequencyRequest::set_pin(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.PWMFrequencyRequest.pin)
}
inline std::string* PWMFrequencyRequest::mutable_pin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pin();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.PWMFrequencyRequest.pin)
  return _s;
}
inline const std::string& PWMFrequencyRequest::_internal_pin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pin_.Get();
}
inline void PWMFrequencyRequest::_internal_set_pin(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(value, GetArena());
}
inline std::string* PWMFrequencyRequest::_internal_mutable_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pin_.Mutable( GetArena());
}
inline std::string* PWMFrequencyRequest::release_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.PWMFrequencyRequest.pin)
  return _impl_.pin_.Release();
}
inline void PWMFrequencyRequest::set_allocated_pin(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pin_.IsDefault()) {
          _impl_.pin_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.PWMFrequencyRequest.pin)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool PWMFrequencyRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& PWMFrequencyRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& PWMFrequencyRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.PWMFrequencyRequest.extra)
  return _internal_extra();
}
inline void PWMFrequencyRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.board.v1.PWMFrequencyRequest.extra)
}
inline ::google::protobuf::Struct* PWMFrequencyRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* PWMFrequencyRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.PWMFrequencyRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* PWMFrequencyRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* PWMFrequencyRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.PWMFrequencyRequest.extra)
  return _msg;
}
inline void PWMFrequencyRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.PWMFrequencyRequest.extra)
}

// -------------------------------------------------------------------

// PWMFrequencyResponse

// uint64 frequency_hz = 1 [json_name = "frequencyHz"];
inline void PWMFrequencyResponse::clear_frequency_hz() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.frequency_hz_ = ::uint64_t{0u};
}
inline ::uint64_t PWMFrequencyResponse::frequency_hz() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.PWMFrequencyResponse.frequency_hz)
  return _internal_frequency_hz();
}
inline void PWMFrequencyResponse::set_frequency_hz(::uint64_t value) {
  _internal_set_frequency_hz(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.PWMFrequencyResponse.frequency_hz)
}
inline ::uint64_t PWMFrequencyResponse::_internal_frequency_hz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.frequency_hz_;
}
inline void PWMFrequencyResponse::_internal_set_frequency_hz(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.frequency_hz_ = value;
}

// -------------------------------------------------------------------

// SetPWMFrequencyRequest

// string name = 1 [json_name = "name"];
inline void SetPWMFrequencyRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SetPWMFrequencyRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetPWMFrequencyRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetPWMFrequencyRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.SetPWMFrequencyRequest.name)
}
inline std::string* SetPWMFrequencyRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.SetPWMFrequencyRequest.name)
  return _s;
}
inline const std::string& SetPWMFrequencyRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SetPWMFrequencyRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SetPWMFrequencyRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SetPWMFrequencyRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.SetPWMFrequencyRequest.name)
  return _impl_.name_.Release();
}
inline void SetPWMFrequencyRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.SetPWMFrequencyRequest.name)
}

// string pin = 2 [json_name = "pin"];
inline void SetPWMFrequencyRequest::clear_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.ClearToEmpty();
}
inline const std::string& SetPWMFrequencyRequest::pin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetPWMFrequencyRequest.pin)
  return _internal_pin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetPWMFrequencyRequest::set_pin(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.SetPWMFrequencyRequest.pin)
}
inline std::string* SetPWMFrequencyRequest::mutable_pin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pin();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.SetPWMFrequencyRequest.pin)
  return _s;
}
inline const std::string& SetPWMFrequencyRequest::_internal_pin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pin_.Get();
}
inline void SetPWMFrequencyRequest::_internal_set_pin(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(value, GetArena());
}
inline std::string* SetPWMFrequencyRequest::_internal_mutable_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pin_.Mutable( GetArena());
}
inline std::string* SetPWMFrequencyRequest::release_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.SetPWMFrequencyRequest.pin)
  return _impl_.pin_.Release();
}
inline void SetPWMFrequencyRequest::set_allocated_pin(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pin_.IsDefault()) {
          _impl_.pin_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.SetPWMFrequencyRequest.pin)
}

// uint64 frequency_hz = 3 [json_name = "frequencyHz"];
inline void SetPWMFrequencyRequest::clear_frequency_hz() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.frequency_hz_ = ::uint64_t{0u};
}
inline ::uint64_t SetPWMFrequencyRequest::frequency_hz() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetPWMFrequencyRequest.frequency_hz)
  return _internal_frequency_hz();
}
inline void SetPWMFrequencyRequest::set_frequency_hz(::uint64_t value) {
  _internal_set_frequency_hz(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.SetPWMFrequencyRequest.frequency_hz)
}
inline ::uint64_t SetPWMFrequencyRequest::_internal_frequency_hz() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.frequency_hz_;
}
inline void SetPWMFrequencyRequest::_internal_set_frequency_hz(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.frequency_hz_ = value;
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool SetPWMFrequencyRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& SetPWMFrequencyRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& SetPWMFrequencyRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetPWMFrequencyRequest.extra)
  return _internal_extra();
}
inline void SetPWMFrequencyRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.board.v1.SetPWMFrequencyRequest.extra)
}
inline ::google::protobuf::Struct* SetPWMFrequencyRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* SetPWMFrequencyRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.SetPWMFrequencyRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* SetPWMFrequencyRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* SetPWMFrequencyRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.SetPWMFrequencyRequest.extra)
  return _msg;
}
inline void SetPWMFrequencyRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.SetPWMFrequencyRequest.extra)
}

// -------------------------------------------------------------------

// SetPWMFrequencyResponse

// -------------------------------------------------------------------

// ReadAnalogReaderRequest

// string board_name = 1 [json_name = "boardName"];
inline void ReadAnalogReaderRequest::clear_board_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.board_name_.ClearToEmpty();
}
inline const std::string& ReadAnalogReaderRequest::board_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.ReadAnalogReaderRequest.board_name)
  return _internal_board_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReadAnalogReaderRequest::set_board_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.board_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.ReadAnalogReaderRequest.board_name)
}
inline std::string* ReadAnalogReaderRequest::mutable_board_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_board_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.ReadAnalogReaderRequest.board_name)
  return _s;
}
inline const std::string& ReadAnalogReaderRequest::_internal_board_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.board_name_.Get();
}
inline void ReadAnalogReaderRequest::_internal_set_board_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.board_name_.Set(value, GetArena());
}
inline std::string* ReadAnalogReaderRequest::_internal_mutable_board_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.board_name_.Mutable( GetArena());
}
inline std::string* ReadAnalogReaderRequest::release_board_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.ReadAnalogReaderRequest.board_name)
  return _impl_.board_name_.Release();
}
inline void ReadAnalogReaderRequest::set_allocated_board_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.board_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.board_name_.IsDefault()) {
          _impl_.board_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.ReadAnalogReaderRequest.board_name)
}

// string analog_reader_name = 2 [json_name = "analogReaderName"];
inline void ReadAnalogReaderRequest::clear_analog_reader_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.analog_reader_name_.ClearToEmpty();
}
inline const std::string& ReadAnalogReaderRequest::analog_reader_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.ReadAnalogReaderRequest.analog_reader_name)
  return _internal_analog_reader_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReadAnalogReaderRequest::set_analog_reader_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.analog_reader_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.ReadAnalogReaderRequest.analog_reader_name)
}
inline std::string* ReadAnalogReaderRequest::mutable_analog_reader_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_analog_reader_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.ReadAnalogReaderRequest.analog_reader_name)
  return _s;
}
inline const std::string& ReadAnalogReaderRequest::_internal_analog_reader_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.analog_reader_name_.Get();
}
inline void ReadAnalogReaderRequest::_internal_set_analog_reader_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.analog_reader_name_.Set(value, GetArena());
}
inline std::string* ReadAnalogReaderRequest::_internal_mutable_analog_reader_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.analog_reader_name_.Mutable( GetArena());
}
inline std::string* ReadAnalogReaderRequest::release_analog_reader_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.ReadAnalogReaderRequest.analog_reader_name)
  return _impl_.analog_reader_name_.Release();
}
inline void ReadAnalogReaderRequest::set_allocated_analog_reader_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.analog_reader_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.analog_reader_name_.IsDefault()) {
          _impl_.analog_reader_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.ReadAnalogReaderRequest.analog_reader_name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool ReadAnalogReaderRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& ReadAnalogReaderRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& ReadAnalogReaderRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.ReadAnalogReaderRequest.extra)
  return _internal_extra();
}
inline void ReadAnalogReaderRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.board.v1.ReadAnalogReaderRequest.extra)
}
inline ::google::protobuf::Struct* ReadAnalogReaderRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* ReadAnalogReaderRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.ReadAnalogReaderRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* ReadAnalogReaderRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* ReadAnalogReaderRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.ReadAnalogReaderRequest.extra)
  return _msg;
}
inline void ReadAnalogReaderRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.ReadAnalogReaderRequest.extra)
}

// -------------------------------------------------------------------

// ReadAnalogReaderResponse

// int32 value = 1 [json_name = "value"];
inline void ReadAnalogReaderResponse::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = 0;
}
inline ::int32_t ReadAnalogReaderResponse::value() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.ReadAnalogReaderResponse.value)
  return _internal_value();
}
inline void ReadAnalogReaderResponse::set_value(::int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.ReadAnalogReaderResponse.value)
}
inline ::int32_t ReadAnalogReaderResponse::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void ReadAnalogReaderResponse::_internal_set_value(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// float min_range = 2 [json_name = "minRange"];
inline void ReadAnalogReaderResponse::clear_min_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.min_range_ = 0;
}
inline float ReadAnalogReaderResponse::min_range() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.ReadAnalogReaderResponse.min_range)
  return _internal_min_range();
}
inline void ReadAnalogReaderResponse::set_min_range(float value) {
  _internal_set_min_range(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.ReadAnalogReaderResponse.min_range)
}
inline float ReadAnalogReaderResponse::_internal_min_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.min_range_;
}
inline void ReadAnalogReaderResponse::_internal_set_min_range(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.min_range_ = value;
}

// float max_range = 3 [json_name = "maxRange"];
inline void ReadAnalogReaderResponse::clear_max_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_range_ = 0;
}
inline float ReadAnalogReaderResponse::max_range() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.ReadAnalogReaderResponse.max_range)
  return _internal_max_range();
}
inline void ReadAnalogReaderResponse::set_max_range(float value) {
  _internal_set_max_range(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.ReadAnalogReaderResponse.max_range)
}
inline float ReadAnalogReaderResponse::_internal_max_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_range_;
}
inline void ReadAnalogReaderResponse::_internal_set_max_range(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_range_ = value;
}

// float step_size = 4 [json_name = "stepSize"];
inline void ReadAnalogReaderResponse::clear_step_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.step_size_ = 0;
}
inline float ReadAnalogReaderResponse::step_size() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.ReadAnalogReaderResponse.step_size)
  return _internal_step_size();
}
inline void ReadAnalogReaderResponse::set_step_size(float value) {
  _internal_set_step_size(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.ReadAnalogReaderResponse.step_size)
}
inline float ReadAnalogReaderResponse::_internal_step_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.step_size_;
}
inline void ReadAnalogReaderResponse::_internal_set_step_size(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.step_size_ = value;
}

// -------------------------------------------------------------------

// WriteAnalogRequest

// string name = 1 [json_name = "name"];
inline void WriteAnalogRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& WriteAnalogRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.WriteAnalogRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WriteAnalogRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.WriteAnalogRequest.name)
}
inline std::string* WriteAnalogRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.WriteAnalogRequest.name)
  return _s;
}
inline const std::string& WriteAnalogRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void WriteAnalogRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* WriteAnalogRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* WriteAnalogRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.WriteAnalogRequest.name)
  return _impl_.name_.Release();
}
inline void WriteAnalogRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.WriteAnalogRequest.name)
}

// string pin = 2 [json_name = "pin"];
inline void WriteAnalogRequest::clear_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.ClearToEmpty();
}
inline const std::string& WriteAnalogRequest::pin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.WriteAnalogRequest.pin)
  return _internal_pin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WriteAnalogRequest::set_pin(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.WriteAnalogRequest.pin)
}
inline std::string* WriteAnalogRequest::mutable_pin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pin();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.WriteAnalogRequest.pin)
  return _s;
}
inline const std::string& WriteAnalogRequest::_internal_pin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pin_.Get();
}
inline void WriteAnalogRequest::_internal_set_pin(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_.Set(value, GetArena());
}
inline std::string* WriteAnalogRequest::_internal_mutable_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pin_.Mutable( GetArena());
}
inline std::string* WriteAnalogRequest::release_pin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.WriteAnalogRequest.pin)
  return _impl_.pin_.Release();
}
inline void WriteAnalogRequest::set_allocated_pin(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pin_.IsDefault()) {
          _impl_.pin_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.WriteAnalogRequest.pin)
}

// int32 value = 3 [json_name = "value"];
inline void WriteAnalogRequest::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = 0;
}
inline ::int32_t WriteAnalogRequest::value() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.WriteAnalogRequest.value)
  return _internal_value();
}
inline void WriteAnalogRequest::set_value(::int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.WriteAnalogRequest.value)
}
inline ::int32_t WriteAnalogRequest::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void WriteAnalogRequest::_internal_set_value(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool WriteAnalogRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& WriteAnalogRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& WriteAnalogRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.WriteAnalogRequest.extra)
  return _internal_extra();
}
inline void WriteAnalogRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.board.v1.WriteAnalogRequest.extra)
}
inline ::google::protobuf::Struct* WriteAnalogRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* WriteAnalogRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.WriteAnalogRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* WriteAnalogRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* WriteAnalogRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.WriteAnalogRequest.extra)
  return _msg;
}
inline void WriteAnalogRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.WriteAnalogRequest.extra)
}

// -------------------------------------------------------------------

// WriteAnalogResponse

// -------------------------------------------------------------------

// GetDigitalInterruptValueRequest

// string board_name = 1 [json_name = "boardName"];
inline void GetDigitalInterruptValueRequest::clear_board_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.board_name_.ClearToEmpty();
}
inline const std::string& GetDigitalInterruptValueRequest::board_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.GetDigitalInterruptValueRequest.board_name)
  return _internal_board_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetDigitalInterruptValueRequest::set_board_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.board_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.GetDigitalInterruptValueRequest.board_name)
}
inline std::string* GetDigitalInterruptValueRequest::mutable_board_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_board_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.GetDigitalInterruptValueRequest.board_name)
  return _s;
}
inline const std::string& GetDigitalInterruptValueRequest::_internal_board_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.board_name_.Get();
}
inline void GetDigitalInterruptValueRequest::_internal_set_board_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.board_name_.Set(value, GetArena());
}
inline std::string* GetDigitalInterruptValueRequest::_internal_mutable_board_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.board_name_.Mutable( GetArena());
}
inline std::string* GetDigitalInterruptValueRequest::release_board_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.GetDigitalInterruptValueRequest.board_name)
  return _impl_.board_name_.Release();
}
inline void GetDigitalInterruptValueRequest::set_allocated_board_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.board_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.board_name_.IsDefault()) {
          _impl_.board_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.GetDigitalInterruptValueRequest.board_name)
}

// string digital_interrupt_name = 2 [json_name = "digitalInterruptName"];
inline void GetDigitalInterruptValueRequest::clear_digital_interrupt_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.digital_interrupt_name_.ClearToEmpty();
}
inline const std::string& GetDigitalInterruptValueRequest::digital_interrupt_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.GetDigitalInterruptValueRequest.digital_interrupt_name)
  return _internal_digital_interrupt_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetDigitalInterruptValueRequest::set_digital_interrupt_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.digital_interrupt_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.GetDigitalInterruptValueRequest.digital_interrupt_name)
}
inline std::string* GetDigitalInterruptValueRequest::mutable_digital_interrupt_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_digital_interrupt_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.GetDigitalInterruptValueRequest.digital_interrupt_name)
  return _s;
}
inline const std::string& GetDigitalInterruptValueRequest::_internal_digital_interrupt_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.digital_interrupt_name_.Get();
}
inline void GetDigitalInterruptValueRequest::_internal_set_digital_interrupt_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.digital_interrupt_name_.Set(value, GetArena());
}
inline std::string* GetDigitalInterruptValueRequest::_internal_mutable_digital_interrupt_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.digital_interrupt_name_.Mutable( GetArena());
}
inline std::string* GetDigitalInterruptValueRequest::release_digital_interrupt_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.GetDigitalInterruptValueRequest.digital_interrupt_name)
  return _impl_.digital_interrupt_name_.Release();
}
inline void GetDigitalInterruptValueRequest::set_allocated_digital_interrupt_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.digital_interrupt_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.digital_interrupt_name_.IsDefault()) {
          _impl_.digital_interrupt_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.GetDigitalInterruptValueRequest.digital_interrupt_name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetDigitalInterruptValueRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& GetDigitalInterruptValueRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& GetDigitalInterruptValueRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.GetDigitalInterruptValueRequest.extra)
  return _internal_extra();
}
inline void GetDigitalInterruptValueRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.board.v1.GetDigitalInterruptValueRequest.extra)
}
inline ::google::protobuf::Struct* GetDigitalInterruptValueRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* GetDigitalInterruptValueRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.GetDigitalInterruptValueRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* GetDigitalInterruptValueRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* GetDigitalInterruptValueRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.GetDigitalInterruptValueRequest.extra)
  return _msg;
}
inline void GetDigitalInterruptValueRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.GetDigitalInterruptValueRequest.extra)
}

// -------------------------------------------------------------------

// GetDigitalInterruptValueResponse

// int64 value = 1 [json_name = "value"];
inline void GetDigitalInterruptValueResponse::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = ::int64_t{0};
}
inline ::int64_t GetDigitalInterruptValueResponse::value() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.GetDigitalInterruptValueResponse.value)
  return _internal_value();
}
inline void GetDigitalInterruptValueResponse::set_value(::int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.GetDigitalInterruptValueResponse.value)
}
inline ::int64_t GetDigitalInterruptValueResponse::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void GetDigitalInterruptValueResponse::_internal_set_value(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// StreamTicksRequest

// string name = 1 [json_name = "name"];
inline void StreamTicksRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& StreamTicksRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.StreamTicksRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StreamTicksRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.StreamTicksRequest.name)
}
inline std::string* StreamTicksRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.StreamTicksRequest.name)
  return _s;
}
inline const std::string& StreamTicksRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void StreamTicksRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* StreamTicksRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* StreamTicksRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.StreamTicksRequest.name)
  return _impl_.name_.Release();
}
inline void StreamTicksRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.StreamTicksRequest.name)
}

// repeated string pin_names = 2 [json_name = "pinNames"];
inline int StreamTicksRequest::_internal_pin_names_size() const {
  return _internal_pin_names().size();
}
inline int StreamTicksRequest::pin_names_size() const {
  return _internal_pin_names_size();
}
inline void StreamTicksRequest::clear_pin_names() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_names_.Clear();
}
inline std::string* StreamTicksRequest::add_pin_names()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_pin_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:viam.component.board.v1.StreamTicksRequest.pin_names)
  return _s;
}
inline const std::string& StreamTicksRequest::pin_names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.StreamTicksRequest.pin_names)
  return _internal_pin_names().Get(index);
}
inline std::string* StreamTicksRequest::mutable_pin_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.StreamTicksRequest.pin_names)
  return _internal_mutable_pin_names()->Mutable(index);
}
inline void StreamTicksRequest::set_pin_names(int index, const std::string& value) {
  _internal_mutable_pin_names()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.StreamTicksRequest.pin_names)
}
inline void StreamTicksRequest::set_pin_names(int index, std::string&& value) {
  _internal_mutable_pin_names()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:viam.component.board.v1.StreamTicksRequest.pin_names)
}
inline void StreamTicksRequest::set_pin_names(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_pin_names()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:viam.component.board.v1.StreamTicksRequest.pin_names)
}
inline void StreamTicksRequest::set_pin_names(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_pin_names()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:viam.component.board.v1.StreamTicksRequest.pin_names)
}
inline void StreamTicksRequest::set_pin_names(int index, absl::string_view value) {
  _internal_mutable_pin_names()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:viam.component.board.v1.StreamTicksRequest.pin_names)
}
inline void StreamTicksRequest::add_pin_names(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_pin_names()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:viam.component.board.v1.StreamTicksRequest.pin_names)
}
inline void StreamTicksRequest::add_pin_names(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_pin_names()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:viam.component.board.v1.StreamTicksRequest.pin_names)
}
inline void StreamTicksRequest::add_pin_names(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_pin_names()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:viam.component.board.v1.StreamTicksRequest.pin_names)
}
inline void StreamTicksRequest::add_pin_names(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_pin_names()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:viam.component.board.v1.StreamTicksRequest.pin_names)
}
inline void StreamTicksRequest::add_pin_names(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_pin_names()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:viam.component.board.v1.StreamTicksRequest.pin_names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StreamTicksRequest::pin_names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:viam.component.board.v1.StreamTicksRequest.pin_names)
  return _internal_pin_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StreamTicksRequest::mutable_pin_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:viam.component.board.v1.StreamTicksRequest.pin_names)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pin_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StreamTicksRequest::_internal_pin_names() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pin_names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StreamTicksRequest::_internal_mutable_pin_names() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pin_names_;
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool StreamTicksRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& StreamTicksRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& StreamTicksRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.StreamTicksRequest.extra)
  return _internal_extra();
}
inline void StreamTicksRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.board.v1.StreamTicksRequest.extra)
}
inline ::google::protobuf::Struct* StreamTicksRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* StreamTicksRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.StreamTicksRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* StreamTicksRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* StreamTicksRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.StreamTicksRequest.extra)
  return _msg;
}
inline void StreamTicksRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.StreamTicksRequest.extra)
}

// -------------------------------------------------------------------

// StreamTicksResponse

// string pin_name = 1 [json_name = "pinName"];
inline void StreamTicksResponse::clear_pin_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_name_.ClearToEmpty();
}
inline const std::string& StreamTicksResponse::pin_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.StreamTicksResponse.pin_name)
  return _internal_pin_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StreamTicksResponse::set_pin_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.StreamTicksResponse.pin_name)
}
inline std::string* StreamTicksResponse::mutable_pin_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pin_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.StreamTicksResponse.pin_name)
  return _s;
}
inline const std::string& StreamTicksResponse::_internal_pin_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pin_name_.Get();
}
inline void StreamTicksResponse::_internal_set_pin_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pin_name_.Set(value, GetArena());
}
inline std::string* StreamTicksResponse::_internal_mutable_pin_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pin_name_.Mutable( GetArena());
}
inline std::string* StreamTicksResponse::release_pin_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.StreamTicksResponse.pin_name)
  return _impl_.pin_name_.Release();
}
inline void StreamTicksResponse::set_allocated_pin_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pin_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pin_name_.IsDefault()) {
          _impl_.pin_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.StreamTicksResponse.pin_name)
}

// uint64 time = 2 [json_name = "time"];
inline void StreamTicksResponse::clear_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_ = ::uint64_t{0u};
}
inline ::uint64_t StreamTicksResponse::time() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.StreamTicksResponse.time)
  return _internal_time();
}
inline void StreamTicksResponse::set_time(::uint64_t value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.StreamTicksResponse.time)
}
inline ::uint64_t StreamTicksResponse::_internal_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_;
}
inline void StreamTicksResponse::_internal_set_time(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_ = value;
}

// bool high = 3 [json_name = "high"];
inline void StreamTicksResponse::clear_high() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.high_ = false;
}
inline bool StreamTicksResponse::high() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.StreamTicksResponse.high)
  return _internal_high();
}
inline void StreamTicksResponse::set_high(bool value) {
  _internal_set_high(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.StreamTicksResponse.high)
}
inline bool StreamTicksResponse::_internal_high() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.high_;
}
inline void StreamTicksResponse::_internal_set_high(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.high_ = value;
}

// -------------------------------------------------------------------

// SetPowerModeRequest

// string name = 1 [json_name = "name"];
inline void SetPowerModeRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SetPowerModeRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetPowerModeRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetPowerModeRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:viam.component.board.v1.SetPowerModeRequest.name)
}
inline std::string* SetPowerModeRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.SetPowerModeRequest.name)
  return _s;
}
inline const std::string& SetPowerModeRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SetPowerModeRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SetPowerModeRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SetPowerModeRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.SetPowerModeRequest.name)
  return _impl_.name_.Release();
}
inline void SetPowerModeRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.SetPowerModeRequest.name)
}

// .viam.component.board.v1.PowerMode power_mode = 2 [json_name = "powerMode"];
inline void SetPowerModeRequest::clear_power_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.power_mode_ = 0;
}
inline ::viam::component::board::v1::PowerMode SetPowerModeRequest::power_mode() const {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetPowerModeRequest.power_mode)
  return _internal_power_mode();
}
inline void SetPowerModeRequest::set_power_mode(::viam::component::board::v1::PowerMode value) {
  _internal_set_power_mode(value);
  // @@protoc_insertion_point(field_set:viam.component.board.v1.SetPowerModeRequest.power_mode)
}
inline ::viam::component::board::v1::PowerMode SetPowerModeRequest::_internal_power_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::viam::component::board::v1::PowerMode>(_impl_.power_mode_);
}
inline void SetPowerModeRequest::_internal_set_power_mode(::viam::component::board::v1::PowerMode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.power_mode_ = value;
}

// optional .google.protobuf.Duration duration = 3 [json_name = "duration"];
inline bool SetPowerModeRequest::has_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.duration_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& SetPowerModeRequest::_internal_duration() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Duration* p = _impl_.duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& SetPowerModeRequest::duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetPowerModeRequest.duration)
  return _internal_duration();
}
inline void SetPowerModeRequest::unsafe_arena_set_allocated_duration(::google::protobuf::Duration* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }
  _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.board.v1.SetPowerModeRequest.duration)
}
inline ::google::protobuf::Duration* SetPowerModeRequest::release_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.duration_;
  _impl_.duration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* SetPowerModeRequest::unsafe_arena_release_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.SetPowerModeRequest.duration)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.duration_;
  _impl_.duration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* SetPowerModeRequest::_internal_mutable_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.duration_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArena());
    _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.duration_;
}
inline ::google::protobuf::Duration* SetPowerModeRequest::mutable_duration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Duration* _msg = _internal_mutable_duration();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.SetPowerModeRequest.duration)
  return _msg;
}
inline void SetPowerModeRequest::set_allocated_duration(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.SetPowerModeRequest.duration)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool SetPowerModeRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.extra_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& SetPowerModeRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Struct* p = _impl_.extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& SetPowerModeRequest::extra() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:viam.component.board.v1.SetPowerModeRequest.extra)
  return _internal_extra();
}
inline void SetPowerModeRequest::unsafe_arena_set_allocated_extra(::google::protobuf::Struct* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }
  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.board.v1.SetPowerModeRequest.extra)
}
inline ::google::protobuf::Struct* SetPowerModeRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* released = _impl_.extra_;
  _impl_.extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Struct* SetPowerModeRequest::unsafe_arena_release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:viam.component.board.v1.SetPowerModeRequest.extra)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* temp = _impl_.extra_;
  _impl_.extra_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* SetPowerModeRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Struct>(GetArena());
    _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.extra_;
}
inline ::google::protobuf::Struct* SetPowerModeRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.board.v1.SetPowerModeRequest.extra)
  return _msg;
}
inline void SetPowerModeRequest::set_allocated_extra(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.extra_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.extra_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:viam.component.board.v1.SetPowerModeRequest.extra)
}

// -------------------------------------------------------------------

// SetPowerModeResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace board
}  // namespace component
}  // namespace viam


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::viam::component::board::v1::PowerMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::viam::component::board::v1::PowerMode>() {
  return ::viam::component::board::v1::PowerMode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_component_2fboard_2fv1_2fboard_2eproto_2epb_2eh
