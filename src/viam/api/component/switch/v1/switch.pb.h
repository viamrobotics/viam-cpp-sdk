// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component/switch/v1/switch.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_component_2fswitch_2fv1_2fswitch_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_component_2fswitch_2fv1_2fswitch_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common/v1/common.pb.h"
#include "google/api/annotations.pb.h"
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_component_2fswitch_2fv1_2fswitch_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_component_2fswitch_2fv1_2fswitch_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_component_2fswitch_2fv1_2fswitch_2eproto;
namespace viam {
namespace component {
namespace switch {
namespace v1 {
class GetNumberOfPositionsRequest;
struct GetNumberOfPositionsRequestDefaultTypeInternal;
extern GetNumberOfPositionsRequestDefaultTypeInternal _GetNumberOfPositionsRequest_default_instance_;
class GetNumberOfPositionsResponse;
struct GetNumberOfPositionsResponseDefaultTypeInternal;
extern GetNumberOfPositionsResponseDefaultTypeInternal _GetNumberOfPositionsResponse_default_instance_;
class GetPositionRequest;
struct GetPositionRequestDefaultTypeInternal;
extern GetPositionRequestDefaultTypeInternal _GetPositionRequest_default_instance_;
class GetPositionResponse;
struct GetPositionResponseDefaultTypeInternal;
extern GetPositionResponseDefaultTypeInternal _GetPositionResponse_default_instance_;
class SetPositionRequest;
struct SetPositionRequestDefaultTypeInternal;
extern SetPositionRequestDefaultTypeInternal _SetPositionRequest_default_instance_;
class SetPositionResponse;
struct SetPositionResponseDefaultTypeInternal;
extern SetPositionResponseDefaultTypeInternal _SetPositionResponse_default_instance_;
}  // namespace v1
}  // namespace switch
}  // namespace component
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> ::viam::component::switch::v1::GetNumberOfPositionsRequest* Arena::CreateMaybeMessage<::viam::component::switch::v1::GetNumberOfPositionsRequest>(Arena*);
template<> ::viam::component::switch::v1::GetNumberOfPositionsResponse* Arena::CreateMaybeMessage<::viam::component::switch::v1::GetNumberOfPositionsResponse>(Arena*);
template<> ::viam::component::switch::v1::GetPositionRequest* Arena::CreateMaybeMessage<::viam::component::switch::v1::GetPositionRequest>(Arena*);
template<> ::viam::component::switch::v1::GetPositionResponse* Arena::CreateMaybeMessage<::viam::component::switch::v1::GetPositionResponse>(Arena*);
template<> ::viam::component::switch::v1::SetPositionRequest* Arena::CreateMaybeMessage<::viam::component::switch::v1::SetPositionRequest>(Arena*);
template<> ::viam::component::switch::v1::SetPositionResponse* Arena::CreateMaybeMessage<::viam::component::switch::v1::SetPositionResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace viam {
namespace component {
namespace switch {
namespace v1 {

// ===================================================================

class SetPositionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:viam.component.switch.v1.SetPositionRequest) */ {
 public:
  inline SetPositionRequest() : SetPositionRequest(nullptr) {}
  ~SetPositionRequest() override;
  explicit PROTOBUF_CONSTEXPR SetPositionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetPositionRequest(const SetPositionRequest& from);
  SetPositionRequest(SetPositionRequest&& from) noexcept
    : SetPositionRequest() {
    *this = ::std::move(from);
  }

  inline SetPositionRequest& operator=(const SetPositionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPositionRequest& operator=(SetPositionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPositionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPositionRequest* internal_default_instance() {
    return reinterpret_cast<const SetPositionRequest*>(
               &_SetPositionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SetPositionRequest& a, SetPositionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPositionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPositionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPositionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPositionRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SetPositionRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SetPositionRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetPositionRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "viam.component.switch.v1.SetPositionRequest";
  }
  protected:
  explicit SetPositionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
    kPositionFieldNumber = 2,
  };
  // string name = 1 [json_name = "name"];
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  private:
  bool _internal_has_extra() const;
  public:
  void clear_extra();
  const ::PROTOBUF_NAMESPACE_ID::Struct& extra() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Struct* release_extra();
  ::PROTOBUF_NAMESPACE_ID::Struct* mutable_extra();
  void set_allocated_extra(::PROTOBUF_NAMESPACE_ID::Struct* extra);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Struct& _internal_extra() const;
  ::PROTOBUF_NAMESPACE_ID::Struct* _internal_mutable_extra();
  public:
  void unsafe_arena_set_allocated_extra(
      ::PROTOBUF_NAMESPACE_ID::Struct* extra);
  ::PROTOBUF_NAMESPACE_ID::Struct* unsafe_arena_release_extra();

  // uint32 position = 2 [json_name = "position"];
  void clear_position();
  uint32_t position() const;
  void set_position(uint32_t value);
  private:
  uint32_t _internal_position() const;
  void _internal_set_position(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:viam.component.switch.v1.SetPositionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::Struct* extra_;
  uint32_t position_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_component_2fswitch_2fv1_2fswitch_2eproto;
};
// -------------------------------------------------------------------

class SetPositionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:viam.component.switch.v1.SetPositionResponse) */ {
 public:
  inline SetPositionResponse() : SetPositionResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR SetPositionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetPositionResponse(const SetPositionResponse& from);
  SetPositionResponse(SetPositionResponse&& from) noexcept
    : SetPositionResponse() {
    *this = ::std::move(from);
  }

  inline SetPositionResponse& operator=(const SetPositionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPositionResponse& operator=(SetPositionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPositionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPositionResponse* internal_default_instance() {
    return reinterpret_cast<const SetPositionResponse*>(
               &_SetPositionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SetPositionResponse& a, SetPositionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetPositionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPositionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPositionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetPositionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetPositionResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetPositionResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "viam.component.switch.v1.SetPositionResponse";
  }
  protected:
  explicit SetPositionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:viam.component.switch.v1.SetPositionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  friend struct ::TableStruct_component_2fswitch_2fv1_2fswitch_2eproto;
};
// -------------------------------------------------------------------

class GetPositionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:viam.component.switch.v1.GetPositionRequest) */ {
 public:
  inline GetPositionRequest() : GetPositionRequest(nullptr) {}
  ~GetPositionRequest() override;
  explicit PROTOBUF_CONSTEXPR GetPositionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetPositionRequest(const GetPositionRequest& from);
  GetPositionRequest(GetPositionRequest&& from) noexcept
    : GetPositionRequest() {
    *this = ::std::move(from);
  }

  inline GetPositionRequest& operator=(const GetPositionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPositionRequest& operator=(GetPositionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPositionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPositionRequest* internal_default_instance() {
    return reinterpret_cast<const GetPositionRequest*>(
               &_GetPositionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetPositionRequest& a, GetPositionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPositionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPositionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPositionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPositionRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetPositionRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetPositionRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPositionRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "viam.component.switch.v1.GetPositionRequest";
  }
  protected:
  explicit GetPositionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  private:
  bool _internal_has_extra() const;
  public:
  void clear_extra();
  const ::PROTOBUF_NAMESPACE_ID::Struct& extra() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Struct* release_extra();
  ::PROTOBUF_NAMESPACE_ID::Struct* mutable_extra();
  void set_allocated_extra(::PROTOBUF_NAMESPACE_ID::Struct* extra);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Struct& _internal_extra() const;
  ::PROTOBUF_NAMESPACE_ID::Struct* _internal_mutable_extra();
  public:
  void unsafe_arena_set_allocated_extra(
      ::PROTOBUF_NAMESPACE_ID::Struct* extra);
  ::PROTOBUF_NAMESPACE_ID::Struct* unsafe_arena_release_extra();

  // @@protoc_insertion_point(class_scope:viam.component.switch.v1.GetPositionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::Struct* extra_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_component_2fswitch_2fv1_2fswitch_2eproto;
};
// -------------------------------------------------------------------

class GetPositionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:viam.component.switch.v1.GetPositionResponse) */ {
 public:
  inline GetPositionResponse() : GetPositionResponse(nullptr) {}
  ~GetPositionResponse() override;
  explicit PROTOBUF_CONSTEXPR GetPositionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetPositionResponse(const GetPositionResponse& from);
  GetPositionResponse(GetPositionResponse&& from) noexcept
    : GetPositionResponse() {
    *this = ::std::move(from);
  }

  inline GetPositionResponse& operator=(const GetPositionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPositionResponse& operator=(GetPositionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPositionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPositionResponse* internal_default_instance() {
    return reinterpret_cast<const GetPositionResponse*>(
               &_GetPositionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetPositionResponse& a, GetPositionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPositionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPositionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPositionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPositionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetPositionResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetPositionResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPositionResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "viam.component.switch.v1.GetPositionResponse";
  }
  protected:
  explicit GetPositionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionFieldNumber = 1,
  };
  // uint32 position = 1 [json_name = "position"];
  void clear_position();
  uint32_t position() const;
  void set_position(uint32_t value);
  private:
  uint32_t _internal_position() const;
  void _internal_set_position(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:viam.component.switch.v1.GetPositionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t position_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_component_2fswitch_2fv1_2fswitch_2eproto;
};
// -------------------------------------------------------------------

class GetNumberOfPositionsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:viam.component.switch.v1.GetNumberOfPositionsRequest) */ {
 public:
  inline GetNumberOfPositionsRequest() : GetNumberOfPositionsRequest(nullptr) {}
  ~GetNumberOfPositionsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetNumberOfPositionsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetNumberOfPositionsRequest(const GetNumberOfPositionsRequest& from);
  GetNumberOfPositionsRequest(GetNumberOfPositionsRequest&& from) noexcept
    : GetNumberOfPositionsRequest() {
    *this = ::std::move(from);
  }

  inline GetNumberOfPositionsRequest& operator=(const GetNumberOfPositionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNumberOfPositionsRequest& operator=(GetNumberOfPositionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNumberOfPositionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNumberOfPositionsRequest* internal_default_instance() {
    return reinterpret_cast<const GetNumberOfPositionsRequest*>(
               &_GetNumberOfPositionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetNumberOfPositionsRequest& a, GetNumberOfPositionsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetNumberOfPositionsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNumberOfPositionsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNumberOfPositionsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetNumberOfPositionsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetNumberOfPositionsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetNumberOfPositionsRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetNumberOfPositionsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "viam.component.switch.v1.GetNumberOfPositionsRequest";
  }
  protected:
  explicit GetNumberOfPositionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kExtraFieldNumber = 99,
  };
  // string name = 1 [json_name = "name"];
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  bool has_extra() const;
  private:
  bool _internal_has_extra() const;
  public:
  void clear_extra();
  const ::PROTOBUF_NAMESPACE_ID::Struct& extra() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Struct* release_extra();
  ::PROTOBUF_NAMESPACE_ID::Struct* mutable_extra();
  void set_allocated_extra(::PROTOBUF_NAMESPACE_ID::Struct* extra);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Struct& _internal_extra() const;
  ::PROTOBUF_NAMESPACE_ID::Struct* _internal_mutable_extra();
  public:
  void unsafe_arena_set_allocated_extra(
      ::PROTOBUF_NAMESPACE_ID::Struct* extra);
  ::PROTOBUF_NAMESPACE_ID::Struct* unsafe_arena_release_extra();

  // @@protoc_insertion_point(class_scope:viam.component.switch.v1.GetNumberOfPositionsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::Struct* extra_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_component_2fswitch_2fv1_2fswitch_2eproto;
};
// -------------------------------------------------------------------

class GetNumberOfPositionsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:viam.component.switch.v1.GetNumberOfPositionsResponse) */ {
 public:
  inline GetNumberOfPositionsResponse() : GetNumberOfPositionsResponse(nullptr) {}
  ~GetNumberOfPositionsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetNumberOfPositionsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetNumberOfPositionsResponse(const GetNumberOfPositionsResponse& from);
  GetNumberOfPositionsResponse(GetNumberOfPositionsResponse&& from) noexcept
    : GetNumberOfPositionsResponse() {
    *this = ::std::move(from);
  }

  inline GetNumberOfPositionsResponse& operator=(const GetNumberOfPositionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNumberOfPositionsResponse& operator=(GetNumberOfPositionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNumberOfPositionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNumberOfPositionsResponse* internal_default_instance() {
    return reinterpret_cast<const GetNumberOfPositionsResponse*>(
               &_GetNumberOfPositionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetNumberOfPositionsResponse& a, GetNumberOfPositionsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetNumberOfPositionsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNumberOfPositionsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNumberOfPositionsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetNumberOfPositionsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetNumberOfPositionsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetNumberOfPositionsResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetNumberOfPositionsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "viam.component.switch.v1.GetNumberOfPositionsResponse";
  }
  protected:
  explicit GetNumberOfPositionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumberOfPositionsFieldNumber = 1,
  };
  // uint32 number_of_positions = 1 [json_name = "numberOfPositions"];
  void clear_number_of_positions();
  uint32_t number_of_positions() const;
  void set_number_of_positions(uint32_t value);
  private:
  uint32_t _internal_number_of_positions() const;
  void _internal_set_number_of_positions(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:viam.component.switch.v1.GetNumberOfPositionsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t number_of_positions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_component_2fswitch_2fv1_2fswitch_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SetPositionRequest

// string name = 1 [json_name = "name"];
inline void SetPositionRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& SetPositionRequest::name() const {
  // @@protoc_insertion_point(field_get:viam.component.switch.v1.SetPositionRequest.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SetPositionRequest::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:viam.component.switch.v1.SetPositionRequest.name)
}
inline std::string* SetPositionRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.switch.v1.SetPositionRequest.name)
  return _s;
}
inline const std::string& SetPositionRequest::_internal_name() const {
  return name_.Get();
}
inline void SetPositionRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(value, GetArenaForAllocation());
}
inline std::string* SetPositionRequest::_internal_mutable_name() {
  
  return name_.Mutable(GetArenaForAllocation());
}
inline std::string* SetPositionRequest::release_name() {
  // @@protoc_insertion_point(field_release:viam.component.switch.v1.SetPositionRequest.name)
  return name_.Release();
}
inline void SetPositionRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault()) {
    name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.switch.v1.SetPositionRequest.name)
}

// uint32 position = 2 [json_name = "position"];
inline void SetPositionRequest::clear_position() {
  position_ = 0u;
}
inline uint32_t SetPositionRequest::_internal_position() const {
  return position_;
}
inline uint32_t SetPositionRequest::position() const {
  // @@protoc_insertion_point(field_get:viam.component.switch.v1.SetPositionRequest.position)
  return _internal_position();
}
inline void SetPositionRequest::_internal_set_position(uint32_t value) {
  
  position_ = value;
}
inline void SetPositionRequest::set_position(uint32_t value) {
  _internal_set_position(value);
  // @@protoc_insertion_point(field_set:viam.component.switch.v1.SetPositionRequest.position)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool SetPositionRequest::_internal_has_extra() const {
  return this != internal_default_instance() && extra_ != nullptr;
}
inline bool SetPositionRequest::has_extra() const {
  return _internal_has_extra();
}
inline const ::PROTOBUF_NAMESPACE_ID::Struct& SetPositionRequest::_internal_extra() const {
  const ::PROTOBUF_NAMESPACE_ID::Struct* p = extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Struct&>(
      ::PROTOBUF_NAMESPACE_ID::_Struct_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Struct& SetPositionRequest::extra() const {
  // @@protoc_insertion_point(field_get:viam.component.switch.v1.SetPositionRequest.extra)
  return _internal_extra();
}
inline void SetPositionRequest::unsafe_arena_set_allocated_extra(
    ::PROTOBUF_NAMESPACE_ID::Struct* extra) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(extra_);
  }
  extra_ = extra;
  if (extra) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.switch.v1.SetPositionRequest.extra)
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* SetPositionRequest::release_extra() {
  
  ::PROTOBUF_NAMESPACE_ID::Struct* temp = extra_;
  extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* SetPositionRequest::unsafe_arena_release_extra() {
  // @@protoc_insertion_point(field_release:viam.component.switch.v1.SetPositionRequest.extra)
  
  ::PROTOBUF_NAMESPACE_ID::Struct* temp = extra_;
  extra_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* SetPositionRequest::_internal_mutable_extra() {
  
  if (extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Struct>(GetArenaForAllocation());
    extra_ = p;
  }
  return extra_;
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* SetPositionRequest::mutable_extra() {
  ::PROTOBUF_NAMESPACE_ID::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.switch.v1.SetPositionRequest.extra)
  return _msg;
}
inline void SetPositionRequest::set_allocated_extra(::PROTOBUF_NAMESPACE_ID::Struct* extra) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(extra_);
  }
  if (extra) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(extra));
    if (message_arena != submessage_arena) {
      extra = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, extra, submessage_arena);
    }
    
  } else {
    
  }
  extra_ = extra;
  // @@protoc_insertion_point(field_set_allocated:viam.component.switch.v1.SetPositionRequest.extra)
}

// -------------------------------------------------------------------

// SetPositionResponse

// -------------------------------------------------------------------

// GetPositionRequest

// string name = 1 [json_name = "name"];
inline void GetPositionRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& GetPositionRequest::name() const {
  // @@protoc_insertion_point(field_get:viam.component.switch.v1.GetPositionRequest.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetPositionRequest::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:viam.component.switch.v1.GetPositionRequest.name)
}
inline std::string* GetPositionRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.switch.v1.GetPositionRequest.name)
  return _s;
}
inline const std::string& GetPositionRequest::_internal_name() const {
  return name_.Get();
}
inline void GetPositionRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetPositionRequest::_internal_mutable_name() {
  
  return name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetPositionRequest::release_name() {
  // @@protoc_insertion_point(field_release:viam.component.switch.v1.GetPositionRequest.name)
  return name_.Release();
}
inline void GetPositionRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault()) {
    name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.switch.v1.GetPositionRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetPositionRequest::_internal_has_extra() const {
  return this != internal_default_instance() && extra_ != nullptr;
}
inline bool GetPositionRequest::has_extra() const {
  return _internal_has_extra();
}
inline const ::PROTOBUF_NAMESPACE_ID::Struct& GetPositionRequest::_internal_extra() const {
  const ::PROTOBUF_NAMESPACE_ID::Struct* p = extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Struct&>(
      ::PROTOBUF_NAMESPACE_ID::_Struct_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Struct& GetPositionRequest::extra() const {
  // @@protoc_insertion_point(field_get:viam.component.switch.v1.GetPositionRequest.extra)
  return _internal_extra();
}
inline void GetPositionRequest::unsafe_arena_set_allocated_extra(
    ::PROTOBUF_NAMESPACE_ID::Struct* extra) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(extra_);
  }
  extra_ = extra;
  if (extra) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.switch.v1.GetPositionRequest.extra)
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* GetPositionRequest::release_extra() {
  
  ::PROTOBUF_NAMESPACE_ID::Struct* temp = extra_;
  extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* GetPositionRequest::unsafe_arena_release_extra() {
  // @@protoc_insertion_point(field_release:viam.component.switch.v1.GetPositionRequest.extra)
  
  ::PROTOBUF_NAMESPACE_ID::Struct* temp = extra_;
  extra_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* GetPositionRequest::_internal_mutable_extra() {
  
  if (extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Struct>(GetArenaForAllocation());
    extra_ = p;
  }
  return extra_;
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* GetPositionRequest::mutable_extra() {
  ::PROTOBUF_NAMESPACE_ID::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.switch.v1.GetPositionRequest.extra)
  return _msg;
}
inline void GetPositionRequest::set_allocated_extra(::PROTOBUF_NAMESPACE_ID::Struct* extra) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(extra_);
  }
  if (extra) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(extra));
    if (message_arena != submessage_arena) {
      extra = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, extra, submessage_arena);
    }
    
  } else {
    
  }
  extra_ = extra;
  // @@protoc_insertion_point(field_set_allocated:viam.component.switch.v1.GetPositionRequest.extra)
}

// -------------------------------------------------------------------

// GetPositionResponse

// uint32 position = 1 [json_name = "position"];
inline void GetPositionResponse::clear_position() {
  position_ = 0u;
}
inline uint32_t GetPositionResponse::_internal_position() const {
  return position_;
}
inline uint32_t GetPositionResponse::position() const {
  // @@protoc_insertion_point(field_get:viam.component.switch.v1.GetPositionResponse.position)
  return _internal_position();
}
inline void GetPositionResponse::_internal_set_position(uint32_t value) {
  
  position_ = value;
}
inline void GetPositionResponse::set_position(uint32_t value) {
  _internal_set_position(value);
  // @@protoc_insertion_point(field_set:viam.component.switch.v1.GetPositionResponse.position)
}

// -------------------------------------------------------------------

// GetNumberOfPositionsRequest

// string name = 1 [json_name = "name"];
inline void GetNumberOfPositionsRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& GetNumberOfPositionsRequest::name() const {
  // @@protoc_insertion_point(field_get:viam.component.switch.v1.GetNumberOfPositionsRequest.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetNumberOfPositionsRequest::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:viam.component.switch.v1.GetNumberOfPositionsRequest.name)
}
inline std::string* GetNumberOfPositionsRequest::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:viam.component.switch.v1.GetNumberOfPositionsRequest.name)
  return _s;
}
inline const std::string& GetNumberOfPositionsRequest::_internal_name() const {
  return name_.Get();
}
inline void GetNumberOfPositionsRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetNumberOfPositionsRequest::_internal_mutable_name() {
  
  return name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetNumberOfPositionsRequest::release_name() {
  // @@protoc_insertion_point(field_release:viam.component.switch.v1.GetNumberOfPositionsRequest.name)
  return name_.Release();
}
inline void GetNumberOfPositionsRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (name_.IsDefault()) {
    name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:viam.component.switch.v1.GetNumberOfPositionsRequest.name)
}

// .google.protobuf.Struct extra = 99 [json_name = "extra"];
inline bool GetNumberOfPositionsRequest::_internal_has_extra() const {
  return this != internal_default_instance() && extra_ != nullptr;
}
inline bool GetNumberOfPositionsRequest::has_extra() const {
  return _internal_has_extra();
}
inline const ::PROTOBUF_NAMESPACE_ID::Struct& GetNumberOfPositionsRequest::_internal_extra() const {
  const ::PROTOBUF_NAMESPACE_ID::Struct* p = extra_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Struct&>(
      ::PROTOBUF_NAMESPACE_ID::_Struct_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Struct& GetNumberOfPositionsRequest::extra() const {
  // @@protoc_insertion_point(field_get:viam.component.switch.v1.GetNumberOfPositionsRequest.extra)
  return _internal_extra();
}
inline void GetNumberOfPositionsRequest::unsafe_arena_set_allocated_extra(
    ::PROTOBUF_NAMESPACE_ID::Struct* extra) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(extra_);
  }
  extra_ = extra;
  if (extra) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:viam.component.switch.v1.GetNumberOfPositionsRequest.extra)
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* GetNumberOfPositionsRequest::release_extra() {
  
  ::PROTOBUF_NAMESPACE_ID::Struct* temp = extra_;
  extra_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* GetNumberOfPositionsRequest::unsafe_arena_release_extra() {
  // @@protoc_insertion_point(field_release:viam.component.switch.v1.GetNumberOfPositionsRequest.extra)
  
  ::PROTOBUF_NAMESPACE_ID::Struct* temp = extra_;
  extra_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* GetNumberOfPositionsRequest::_internal_mutable_extra() {
  
  if (extra_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Struct>(GetArenaForAllocation());
    extra_ = p;
  }
  return extra_;
}
inline ::PROTOBUF_NAMESPACE_ID::Struct* GetNumberOfPositionsRequest::mutable_extra() {
  ::PROTOBUF_NAMESPACE_ID::Struct* _msg = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:viam.component.switch.v1.GetNumberOfPositionsRequest.extra)
  return _msg;
}
inline void GetNumberOfPositionsRequest::set_allocated_extra(::PROTOBUF_NAMESPACE_ID::Struct* extra) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(extra_);
  }
  if (extra) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(extra));
    if (message_arena != submessage_arena) {
      extra = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, extra, submessage_arena);
    }
    
  } else {
    
  }
  extra_ = extra;
  // @@protoc_insertion_point(field_set_allocated:viam.component.switch.v1.GetNumberOfPositionsRequest.extra)
}

// -------------------------------------------------------------------

// GetNumberOfPositionsResponse

// uint32 number_of_positions = 1 [json_name = "numberOfPositions"];
inline void GetNumberOfPositionsResponse::clear_number_of_positions() {
  number_of_positions_ = 0u;
}
inline uint32_t GetNumberOfPositionsResponse::_internal_number_of_positions() const {
  return number_of_positions_;
}
inline uint32_t GetNumberOfPositionsResponse::number_of_positions() const {
  // @@protoc_insertion_point(field_get:viam.component.switch.v1.GetNumberOfPositionsResponse.number_of_positions)
  return _internal_number_of_positions();
}
inline void GetNumberOfPositionsResponse::_internal_set_number_of_positions(uint32_t value) {
  
  number_of_positions_ = value;
}
inline void GetNumberOfPositionsResponse::set_number_of_positions(uint32_t value) {
  _internal_set_number_of_positions(value);
  // @@protoc_insertion_point(field_set:viam.component.switch.v1.GetNumberOfPositionsResponse.number_of_positions)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace switch
}  // namespace component
}  // namespace viam

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_component_2fswitch_2fv1_2fswitch_2eproto
