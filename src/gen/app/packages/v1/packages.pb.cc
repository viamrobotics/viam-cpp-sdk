// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/packages/v1/packages.proto

#include "app/packages/v1/packages.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace app {
namespace packages {
namespace v1 {
PROTOBUF_CONSTEXPR FileInfo::FileInfo(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , size_(uint64_t{0u}){}
struct FileInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileInfoDefaultTypeInternal() {}
  union {
    FileInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileInfoDefaultTypeInternal _FileInfo_default_instance_;
PROTOBUF_CONSTEXPR PackageInfo::PackageInfo(
    ::_pbi::ConstantInitialized)
  : files_()
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , metadata_(nullptr)
  , created_on_(nullptr)
  , type_(0)
{}
struct PackageInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PackageInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PackageInfoDefaultTypeInternal() {}
  union {
    PackageInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PackageInfoDefaultTypeInternal _PackageInfo_default_instance_;
PROTOBUF_CONSTEXPR CreatePackageRequest::CreatePackageRequest(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct CreatePackageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreatePackageRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreatePackageRequestDefaultTypeInternal() {}
  union {
    CreatePackageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreatePackageRequestDefaultTypeInternal _CreatePackageRequest_default_instance_;
PROTOBUF_CONSTEXPR CreatePackageResponse::CreatePackageResponse(
    ::_pbi::ConstantInitialized){}
struct CreatePackageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreatePackageResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreatePackageResponseDefaultTypeInternal() {}
  union {
    CreatePackageResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreatePackageResponseDefaultTypeInternal _CreatePackageResponse_default_instance_;
PROTOBUF_CONSTEXPR DeletePackageRequest::DeletePackageRequest(
    ::_pbi::ConstantInitialized)
  : versions_()
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeletePackageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeletePackageRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeletePackageRequestDefaultTypeInternal() {}
  union {
    DeletePackageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeletePackageRequestDefaultTypeInternal _DeletePackageRequest_default_instance_;
PROTOBUF_CONSTEXPR DeletePackageResponse::DeletePackageResponse(
    ::_pbi::ConstantInitialized)
  : deleted_count_(int64_t{0}){}
struct DeletePackageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeletePackageResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeletePackageResponseDefaultTypeInternal() {}
  union {
    DeletePackageResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeletePackageResponseDefaultTypeInternal _DeletePackageResponse_default_instance_;
PROTOBUF_CONSTEXPR Package::Package(
    ::_pbi::ConstantInitialized)
  : uri_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , info_(nullptr)
  , created_on_(nullptr){}
struct PackageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PackageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PackageDefaultTypeInternal() {}
  union {
    Package _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PackageDefaultTypeInternal _Package_default_instance_;
PROTOBUF_CONSTEXPR InternalPackage::InternalPackage(
    ::_pbi::ConstantInitialized)
  : files_()
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , blob_path_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , metadata_(nullptr)
  , created_on_(nullptr)
  , type_(0)
{}
struct InternalPackageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InternalPackageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InternalPackageDefaultTypeInternal() {}
  union {
    InternalPackage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InternalPackageDefaultTypeInternal _InternalPackage_default_instance_;
PROTOBUF_CONSTEXPR GetPackageRequest::GetPackageRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetPackageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPackageRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPackageRequestDefaultTypeInternal() {}
  union {
    GetPackageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPackageRequestDefaultTypeInternal _GetPackageRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPackageResponse::GetPackageResponse(
    ::_pbi::ConstantInitialized)
  : package_(nullptr){}
struct GetPackageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPackageResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPackageResponseDefaultTypeInternal() {}
  union {
    GetPackageResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPackageResponseDefaultTypeInternal _GetPackageResponse_default_instance_;
PROTOBUF_CONSTEXPR ListPackagesRequest::ListPackagesRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , type_(0)
{}
struct ListPackagesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListPackagesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListPackagesRequestDefaultTypeInternal() {}
  union {
    ListPackagesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListPackagesRequestDefaultTypeInternal _ListPackagesRequest_default_instance_;
PROTOBUF_CONSTEXPR ListPackagesResponse::ListPackagesResponse(
    ::_pbi::ConstantInitialized)
  : packages_(){}
struct ListPackagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListPackagesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListPackagesResponseDefaultTypeInternal() {}
  union {
    ListPackagesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListPackagesResponseDefaultTypeInternal _ListPackagesResponse_default_instance_;
}  // namespace v1
}  // namespace packages
}  // namespace app
}  // namespace viam
static ::_pb::Metadata file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto[12];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_app_2fpackages_2fv1_2fpackages_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_app_2fpackages_2fv1_2fpackages_2eproto = nullptr;

const uint32_t TableStruct_app_2fpackages_2fv1_2fpackages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::FileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::FileInfo, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::FileInfo, size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::PackageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::PackageInfo, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::PackageInfo, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::PackageInfo, version_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::PackageInfo, type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::PackageInfo, files_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::PackageInfo, metadata_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::PackageInfo, created_on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::CreatePackageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::CreatePackageRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::CreatePackageRequest, package_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::CreatePackageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::DeletePackageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::DeletePackageRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::DeletePackageRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::DeletePackageRequest, versions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::DeletePackageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::DeletePackageResponse, deleted_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::Package, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::Package, info_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::Package, uri_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::Package, created_on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::InternalPackage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::InternalPackage, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::InternalPackage, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::InternalPackage, version_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::InternalPackage, type_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::InternalPackage, files_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::InternalPackage, metadata_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::InternalPackage, blob_path_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::InternalPackage, created_on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::GetPackageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::GetPackageRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::GetPackageRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::GetPackageRequest, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::GetPackageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::GetPackageResponse, package_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::ListPackagesRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::ListPackagesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::ListPackagesRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::ListPackagesRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::ListPackagesRequest, version_),
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::ListPackagesRequest, type_),
  ~0u,
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::ListPackagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::packages::v1::ListPackagesResponse, packages_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::app::packages::v1::FileInfo)},
  { 8, -1, -1, sizeof(::viam::app::packages::v1::PackageInfo)},
  { 21, -1, -1, sizeof(::viam::app::packages::v1::CreatePackageRequest)},
  { 30, -1, -1, sizeof(::viam::app::packages::v1::CreatePackageResponse)},
  { 36, -1, -1, sizeof(::viam::app::packages::v1::DeletePackageRequest)},
  { 45, -1, -1, sizeof(::viam::app::packages::v1::DeletePackageResponse)},
  { 52, -1, -1, sizeof(::viam::app::packages::v1::Package)},
  { 61, -1, -1, sizeof(::viam::app::packages::v1::InternalPackage)},
  { 75, -1, -1, sizeof(::viam::app::packages::v1::GetPackageRequest)},
  { 84, -1, -1, sizeof(::viam::app::packages::v1::GetPackageResponse)},
  { 91, 101, -1, sizeof(::viam::app::packages::v1::ListPackagesRequest)},
  { 105, -1, -1, sizeof(::viam::app::packages::v1::ListPackagesResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::app::packages::v1::_FileInfo_default_instance_._instance,
  &::viam::app::packages::v1::_PackageInfo_default_instance_._instance,
  &::viam::app::packages::v1::_CreatePackageRequest_default_instance_._instance,
  &::viam::app::packages::v1::_CreatePackageResponse_default_instance_._instance,
  &::viam::app::packages::v1::_DeletePackageRequest_default_instance_._instance,
  &::viam::app::packages::v1::_DeletePackageResponse_default_instance_._instance,
  &::viam::app::packages::v1::_Package_default_instance_._instance,
  &::viam::app::packages::v1::_InternalPackage_default_instance_._instance,
  &::viam::app::packages::v1::_GetPackageRequest_default_instance_._instance,
  &::viam::app::packages::v1::_GetPackageResponse_default_instance_._instance,
  &::viam::app::packages::v1::_ListPackagesRequest_default_instance_._instance,
  &::viam::app::packages::v1::_ListPackagesResponse_default_instance_._instance,
};

const char descriptor_table_protodef_app_2fpackages_2fv1_2fpackages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036app/packages/v1/packages.proto\022\024viam.a"
  "pp.packages.v1\032\034google/api/annotations.p"
  "roto\032\034google/protobuf/struct.proto\032\037goog"
  "le/protobuf/timestamp.proto\032\026tagger/v1/t"
  "agger.proto\"2\n\010FileInfo\022\022\n\004name\030\001 \001(\tR\004n"
  "ame\022\022\n\004size\030\002 \001(\004R\004size\"\301\002\n\013PackageInfo\022"
  "\'\n\017organization_id\030\001 \001(\tR\016organizationId"
  "\022\022\n\004name\030\002 \001(\tR\004name\022\030\n\007version\030\003 \001(\tR\007v"
  "ersion\0225\n\004type\030\004 \001(\0162!.viam.app.packages"
  ".v1.PackageTypeR\004type\0224\n\005files\030\005 \003(\0132\036.v"
  "iam.app.packages.v1.FileInfoR\005files\0223\n\010m"
  "etadata\030\006 \001(\0132\027.google.protobuf.StructR\010"
  "metadata\0229\n\ncreated_on\030\007 \001(\0132\032.google.pr"
  "otobuf.TimestampR\tcreatedOn\"x\n\024CreatePac"
  "kageRequest\0227\n\004info\030\001 \001(\0132!.viam.app.pac"
  "kages.v1.PackageInfoH\000R\004info\022\034\n\010contents"
  "\030\002 \001(\014H\000R\010contentsB\t\n\007package\"\027\n\025CreateP"
  "ackageResponse\"o\n\024DeletePackageRequest\022\'"
  "\n\017organization_id\030\001 \001(\tR\016organizationId\022"
  "\022\n\004name\030\002 \001(\tR\004name\022\032\n\010versions\030\003 \003(\tR\010v"
  "ersions\"<\n\025DeletePackageResponse\022#\n\rdele"
  "ted_count\030\001 \001(\003R\014deletedCount\"\215\001\n\007Packag"
  "e\0225\n\004info\030\001 \001(\0132!.viam.app.packages.v1.P"
  "ackageInfoR\004info\022\020\n\003uri\030\002 \001(\tR\003uri\0229\n\ncr"
  "eated_on\030\003 \001(\0132\032.google.protobuf.Timesta"
  "mpR\tcreatedOn\"\374\004\n\017InternalPackage\022I\n\017org"
  "anization_id\030\001 \001(\tB \232\204\236\003\033bson:\"org_id\" j"
  "son:\"org_id\"R\016organizationId\0220\n\004name\030\002 \001"
  "(\tB\034\232\204\236\003\027bson:\"name\" json:\"name\"R\004name\022<"
  "\n\007version\030\003 \001(\tB\"\232\204\236\003\035bson:\"version\" jso"
  "n:\"version\"R\007version\022S\n\004type\030\004 \001(\0162!.via"
  "m.app.packages.v1.PackageTypeB\034\232\204\236\003\027bson"
  ":\"type\" json:\"type\"R\004type\022T\n\005files\030\005 \003(\013"
  "2\036.viam.app.packages.v1.FileInfoB\036\232\204\236\003\031b"
  "son:\"files\" json:\"files\"R\005files\022Y\n\010metad"
  "ata\030\006 \001(\0132\027.google.protobuf.StructB$\232\204\236\003"
  "\037bson:\"metadata\" json:\"metadata\"R\010metada"
  "ta\022C\n\tblob_path\030\007 \001(\tB&\232\204\236\003!bson:\"blob_p"
  "ath\" json:\"blob_path\"R\010blobPath\022c\n\ncreat"
  "ed_on\030\010 \001(\0132\032.google.protobuf.TimestampB"
  "(\232\204\236\003#bson:\"created_on\" json:\"created_on"
  "\"R\tcreatedOn\"j\n\021GetPackageRequest\022\'\n\017org"
  "anization_id\030\001 \001(\tR\016organizationId\022\022\n\004na"
  "me\030\002 \001(\tR\004name\022\030\n\007version\030\003 \001(\tR\007version"
  "\"M\n\022GetPackageResponse\0227\n\007package\030\001 \001(\0132"
  "\035.viam.app.packages.v1.PackageR\007package\""
  "\320\001\n\023ListPackagesRequest\022\'\n\017organization_"
  "id\030\001 \001(\tR\016organizationId\022\027\n\004name\030\002 \001(\tH\000"
  "R\004name\210\001\001\022\035\n\007version\030\003 \001(\tH\001R\007version\210\001\001"
  "\022:\n\004type\030\004 \001(\0162!.viam.app.packages.v1.Pa"
  "ckageTypeH\002R\004type\210\001\001B\007\n\005_nameB\n\n\010_versio"
  "nB\007\n\005_type\"Q\n\024ListPackagesResponse\0229\n\010pa"
  "ckages\030\001 \003(\0132\035.viam.app.packages.v1.Pack"
  "ageR\010packages*`\n\013PackageType\022\034\n\030PACKAGE_"
  "TYPE_UNSPECIFIED\020\000\022\030\n\024PACKAGE_TYPE_ARCHI"
  "VE\020\001\022\031\n\025PACKAGE_TYPE_ML_MODEL\020\0022\240\004\n\016Pack"
  "ageService\022\207\001\n\rCreatePackage\022*.viam.app."
  "packages.v1.CreatePackageRequest\032+.viam."
  "app.packages.v1.CreatePackageResponse\"\033\202"
  "\323\344\223\002\025\"\023/packages/v1/create(\001\022\205\001\n\rDeleteP"
  "ackage\022*.viam.app.packages.v1.DeletePack"
  "ageRequest\032+.viam.app.packages.v1.Delete"
  "PackageResponse\"\033\202\323\344\223\002\025*\023/packages/v1/de"
  "lete\022y\n\nGetPackage\022\'.viam.app.packages.v"
  "1.GetPackageRequest\032(.viam.app.packages."
  "v1.GetPackageResponse\"\030\202\323\344\223\002\022\022\020/packages"
  "/v1/get\022\200\001\n\014ListPackages\022).viam.app.pack"
  "ages.v1.ListPackagesRequest\032*.viam.app.p"
  "ackages.v1.ListPackagesResponse\"\031\202\323\344\223\002\023\022"
  "\021/packages/v1/listB!Z\037go.viam.com/api/ap"
  "p/packages/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_deps[4] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_tagger_2fv1_2ftagger_2eproto,
};
static ::_pbi::once_flag descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto = {
    false, false, 2821, descriptor_table_protodef_app_2fpackages_2fv1_2fpackages_2eproto,
    "app/packages/v1/packages.proto",
    &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once, descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_deps, 4, 12,
    schemas, file_default_instances, TableStruct_app_2fpackages_2fv1_2fpackages_2eproto::offsets,
    file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto, file_level_enum_descriptors_app_2fpackages_2fv1_2fpackages_2eproto,
    file_level_service_descriptors_app_2fpackages_2fv1_2fpackages_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_getter() {
  return &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_app_2fpackages_2fv1_2fpackages_2eproto(&descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto);
namespace viam {
namespace app {
namespace packages {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PackageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto);
  return file_level_enum_descriptors_app_2fpackages_2fv1_2fpackages_2eproto[0];
}
bool PackageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class FileInfo::_Internal {
 public:
};

FileInfo::FileInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.packages.v1.FileInfo)
}
FileInfo::FileInfo(const FileInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:viam.app.packages.v1.FileInfo)
}

inline void FileInfo::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
size_ = uint64_t{0u};
}

FileInfo::~FileInfo() {
  // @@protoc_insertion_point(destructor:viam.app.packages.v1.FileInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FileInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void FileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.packages.v1.FileInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  size_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.FileInfo.name"));
        } else
          goto handle_unusual;
        continue;
      // uint64 size = 2 [json_name = "size"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.packages.v1.FileInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.FileInfo.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // uint64 size = 2 [json_name = "size"];
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.packages.v1.FileInfo)
  return target;
}

size_t FileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.packages.v1.FileInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 size = 2 [json_name = "size"];
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileInfo::GetClassData() const { return &_class_data_; }

void FileInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileInfo *>(to)->MergeFrom(
      static_cast<const FileInfo &>(from));
}


void FileInfo::MergeFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.packages.v1.FileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_size() != 0) {
    _internal_set_size(from._internal_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileInfo::CopyFrom(const FileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.packages.v1.FileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileInfo::IsInitialized() const {
  return true;
}

void FileInfo::InternalSwap(FileInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(size_, other->size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_getter, &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once,
      file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto[0]);
}

// ===================================================================

class PackageInfo::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& metadata(const PackageInfo* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const PackageInfo* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
PackageInfo::_Internal::metadata(const PackageInfo* msg) {
  return *msg->metadata_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
PackageInfo::_Internal::created_on(const PackageInfo* msg) {
  return *msg->created_on_;
}
void PackageInfo::clear_metadata() {
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
void PackageInfo::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
PackageInfo::PackageInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  files_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.packages.v1.PackageInfo)
}
PackageInfo::PackageInfo(const PackageInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      files_(from.files_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:viam.app.packages.v1.PackageInfo)
}

inline void PackageInfo::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&metadata_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&metadata_)) + sizeof(type_));
}

PackageInfo::~PackageInfo() {
  // @@protoc_insertion_point(destructor:viam.app.packages.v1.PackageInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PackageInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  name_.Destroy();
  version_.Destroy();
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete created_on_;
}

void PackageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PackageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.packages.v1.PackageInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  organization_id_.ClearToEmpty();
  name_.ClearToEmpty();
  version_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PackageInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.PackageInfo.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.PackageInfo.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 3 [json_name = "version"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.PackageInfo.version"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.packages.v1.PackageType type = 4 [json_name = "type"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::viam::app::packages::v1::PackageType>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.packages.v1.FileInfo files = 5 [json_name = "files"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct metadata = 6 [json_name = "metadata"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 7 [json_name = "createdOn"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PackageInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.packages.v1.PackageInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.PackageInfo.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.PackageInfo.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string version = 3 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.PackageInfo.version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_version(), target);
  }

  // .viam.app.packages.v1.PackageType type = 4 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_type(), target);
  }

  // repeated .viam.app.packages.v1.FileInfo files = 5 [json_name = "files"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_files_size()); i < n; i++) {
    const auto& repfield = this->_internal_files(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct metadata = 6 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp created_on = 7 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.packages.v1.PackageInfo)
  return target;
}

size_t PackageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.packages.v1.PackageInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.packages.v1.FileInfo files = 5 [json_name = "files"];
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 3 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // .google.protobuf.Struct metadata = 6 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  // .google.protobuf.Timestamp created_on = 7 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // .viam.app.packages.v1.PackageType type = 4 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PackageInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PackageInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PackageInfo::GetClassData() const { return &_class_data_; }

void PackageInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PackageInfo *>(to)->MergeFrom(
      static_cast<const PackageInfo &>(from));
}


void PackageInfo::MergeFrom(const PackageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.packages.v1.PackageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  if (from._internal_has_metadata()) {
    _internal_mutable_metadata()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_metadata());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PackageInfo::CopyFrom(const PackageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.packages.v1.PackageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackageInfo::IsInitialized() const {
  return true;
}

void PackageInfo::InternalSwap(PackageInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  files_.InternalSwap(&other->files_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PackageInfo, type_)
      + sizeof(PackageInfo::type_)
      - PROTOBUF_FIELD_OFFSET(PackageInfo, metadata_)>(
          reinterpret_cast<char*>(&metadata_),
          reinterpret_cast<char*>(&other->metadata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PackageInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_getter, &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once,
      file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto[1]);
}

// ===================================================================

class CreatePackageRequest::_Internal {
 public:
  static const ::viam::app::packages::v1::PackageInfo& info(const CreatePackageRequest* msg);
};

const ::viam::app::packages::v1::PackageInfo&
CreatePackageRequest::_Internal::info(const CreatePackageRequest* msg) {
  return *msg->package_.info_;
}
void CreatePackageRequest::set_allocated_info(::viam::app::packages::v1::PackageInfo* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_package();
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(info);
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    set_has_info();
    package_.info_ = info;
  }
  // @@protoc_insertion_point(field_set_allocated:viam.app.packages.v1.CreatePackageRequest.info)
}
CreatePackageRequest::CreatePackageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.packages.v1.CreatePackageRequest)
}
CreatePackageRequest::CreatePackageRequest(const CreatePackageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_package();
  switch (from.package_case()) {
    case kInfo: {
      _internal_mutable_info()->::viam::app::packages::v1::PackageInfo::MergeFrom(from._internal_info());
      break;
    }
    case kContents: {
      _internal_set_contents(from._internal_contents());
      break;
    }
    case PACKAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.packages.v1.CreatePackageRequest)
}

inline void CreatePackageRequest::SharedCtor() {
clear_has_package();
}

CreatePackageRequest::~CreatePackageRequest() {
  // @@protoc_insertion_point(destructor:viam.app.packages.v1.CreatePackageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreatePackageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_package()) {
    clear_package();
  }
}

void CreatePackageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreatePackageRequest::clear_package() {
// @@protoc_insertion_point(one_of_clear_start:viam.app.packages.v1.CreatePackageRequest)
  switch (package_case()) {
    case kInfo: {
      if (GetArenaForAllocation() == nullptr) {
        delete package_.info_;
      }
      break;
    }
    case kContents: {
      package_.contents_.Destroy();
      break;
    }
    case PACKAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PACKAGE_NOT_SET;
}


void CreatePackageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.packages.v1.CreatePackageRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_package();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePackageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.packages.v1.PackageInfo info = 1 [json_name = "info"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes contents = 2 [json_name = "contents"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contents();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreatePackageRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.packages.v1.CreatePackageRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.packages.v1.PackageInfo info = 1 [json_name = "info"];
  if (_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  // bytes contents = 2 [json_name = "contents"];
  if (_internal_has_contents()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_contents(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.packages.v1.CreatePackageRequest)
  return target;
}

size_t CreatePackageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.packages.v1.CreatePackageRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (package_case()) {
    // .viam.app.packages.v1.PackageInfo info = 1 [json_name = "info"];
    case kInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *package_.info_);
      break;
    }
    // bytes contents = 2 [json_name = "contents"];
    case kContents: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_contents());
      break;
    }
    case PACKAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreatePackageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreatePackageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreatePackageRequest::GetClassData() const { return &_class_data_; }

void CreatePackageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreatePackageRequest *>(to)->MergeFrom(
      static_cast<const CreatePackageRequest &>(from));
}


void CreatePackageRequest::MergeFrom(const CreatePackageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.packages.v1.CreatePackageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.package_case()) {
    case kInfo: {
      _internal_mutable_info()->::viam::app::packages::v1::PackageInfo::MergeFrom(from._internal_info());
      break;
    }
    case kContents: {
      _internal_set_contents(from._internal_contents());
      break;
    }
    case PACKAGE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreatePackageRequest::CopyFrom(const CreatePackageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.packages.v1.CreatePackageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePackageRequest::IsInitialized() const {
  return true;
}

void CreatePackageRequest::InternalSwap(CreatePackageRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(package_, other->package_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePackageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_getter, &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once,
      file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto[2]);
}

// ===================================================================

class CreatePackageResponse::_Internal {
 public:
};

CreatePackageResponse::CreatePackageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.packages.v1.CreatePackageResponse)
}
CreatePackageResponse::CreatePackageResponse(const CreatePackageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.packages.v1.CreatePackageResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreatePackageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreatePackageResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CreatePackageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_getter, &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once,
      file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto[3]);
}

// ===================================================================

class DeletePackageRequest::_Internal {
 public:
};

DeletePackageRequest::DeletePackageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  versions_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.packages.v1.DeletePackageRequest)
}
DeletePackageRequest::DeletePackageRequest(const DeletePackageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      versions_(from.versions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.packages.v1.DeletePackageRequest)
}

inline void DeletePackageRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeletePackageRequest::~DeletePackageRequest() {
  // @@protoc_insertion_point(destructor:viam.app.packages.v1.DeletePackageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeletePackageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  name_.Destroy();
}

void DeletePackageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeletePackageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.packages.v1.DeletePackageRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  versions_.Clear();
  organization_id_.ClearToEmpty();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePackageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.DeletePackageRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.DeletePackageRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // repeated string versions = 3 [json_name = "versions"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_versions();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.DeletePackageRequest.versions"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeletePackageRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.packages.v1.DeletePackageRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.DeletePackageRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.DeletePackageRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated string versions = 3 [json_name = "versions"];
  for (int i = 0, n = this->_internal_versions_size(); i < n; i++) {
    const auto& s = this->_internal_versions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.DeletePackageRequest.versions");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.packages.v1.DeletePackageRequest)
  return target;
}

size_t DeletePackageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.packages.v1.DeletePackageRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string versions = 3 [json_name = "versions"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(versions_.size());
  for (int i = 0, n = versions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      versions_.Get(i));
  }

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeletePackageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeletePackageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeletePackageRequest::GetClassData() const { return &_class_data_; }

void DeletePackageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeletePackageRequest *>(to)->MergeFrom(
      static_cast<const DeletePackageRequest &>(from));
}


void DeletePackageRequest::MergeFrom(const DeletePackageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.packages.v1.DeletePackageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  versions_.MergeFrom(from.versions_);
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeletePackageRequest::CopyFrom(const DeletePackageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.packages.v1.DeletePackageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePackageRequest::IsInitialized() const {
  return true;
}

void DeletePackageRequest::InternalSwap(DeletePackageRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  versions_.InternalSwap(&other->versions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePackageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_getter, &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once,
      file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto[4]);
}

// ===================================================================

class DeletePackageResponse::_Internal {
 public:
};

DeletePackageResponse::DeletePackageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.packages.v1.DeletePackageResponse)
}
DeletePackageResponse::DeletePackageResponse(const DeletePackageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  deleted_count_ = from.deleted_count_;
  // @@protoc_insertion_point(copy_constructor:viam.app.packages.v1.DeletePackageResponse)
}

inline void DeletePackageResponse::SharedCtor() {
deleted_count_ = int64_t{0};
}

DeletePackageResponse::~DeletePackageResponse() {
  // @@protoc_insertion_point(destructor:viam.app.packages.v1.DeletePackageResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeletePackageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DeletePackageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeletePackageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.packages.v1.DeletePackageResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deleted_count_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePackageResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 deleted_count = 1 [json_name = "deletedCount"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          deleted_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeletePackageResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.packages.v1.DeletePackageResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 deleted_count = 1 [json_name = "deletedCount"];
  if (this->_internal_deleted_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_deleted_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.packages.v1.DeletePackageResponse)
  return target;
}

size_t DeletePackageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.packages.v1.DeletePackageResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 deleted_count = 1 [json_name = "deletedCount"];
  if (this->_internal_deleted_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_deleted_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeletePackageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeletePackageResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeletePackageResponse::GetClassData() const { return &_class_data_; }

void DeletePackageResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeletePackageResponse *>(to)->MergeFrom(
      static_cast<const DeletePackageResponse &>(from));
}


void DeletePackageResponse::MergeFrom(const DeletePackageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.packages.v1.DeletePackageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_deleted_count() != 0) {
    _internal_set_deleted_count(from._internal_deleted_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeletePackageResponse::CopyFrom(const DeletePackageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.packages.v1.DeletePackageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePackageResponse::IsInitialized() const {
  return true;
}

void DeletePackageResponse::InternalSwap(DeletePackageResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(deleted_count_, other->deleted_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePackageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_getter, &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once,
      file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto[5]);
}

// ===================================================================

class Package::_Internal {
 public:
  static const ::viam::app::packages::v1::PackageInfo& info(const Package* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const Package* msg);
};

const ::viam::app::packages::v1::PackageInfo&
Package::_Internal::info(const Package* msg) {
  return *msg->info_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Package::_Internal::created_on(const Package* msg) {
  return *msg->created_on_;
}
void Package::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
Package::Package(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.packages.v1.Package)
}
Package::Package(const Package& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uri().empty()) {
    uri_.Set(from._internal_uri(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_info()) {
    info_ = new ::viam::app::packages::v1::PackageInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.packages.v1.Package)
}

inline void Package::SharedCtor() {
uri_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  uri_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&info_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&created_on_) -
    reinterpret_cast<char*>(&info_)) + sizeof(created_on_));
}

Package::~Package() {
  // @@protoc_insertion_point(destructor:viam.app.packages.v1.Package)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Package::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  uri_.Destroy();
  if (this != internal_default_instance()) delete info_;
  if (this != internal_default_instance()) delete created_on_;
}

void Package::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Package::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.packages.v1.Package)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Package::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.packages.v1.PackageInfo info = 1 [json_name = "info"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string uri = 2 [json_name = "uri"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.Package.uri"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Package::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.packages.v1.Package)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.packages.v1.PackageInfo info = 1 [json_name = "info"];
  if (this->_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  // string uri = 2 [json_name = "uri"];
  if (!this->_internal_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.Package.uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_uri(), target);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.packages.v1.Package)
  return target;
}

size_t Package::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.packages.v1.Package)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 2 [json_name = "uri"];
  if (!this->_internal_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // .viam.app.packages.v1.PackageInfo info = 1 [json_name = "info"];
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Package::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Package::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Package::GetClassData() const { return &_class_data_; }

void Package::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Package *>(to)->MergeFrom(
      static_cast<const Package &>(from));
}


void Package::MergeFrom(const Package& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.packages.v1.Package)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uri().empty()) {
    _internal_set_uri(from._internal_uri());
  }
  if (from._internal_has_info()) {
    _internal_mutable_info()->::viam::app::packages::v1::PackageInfo::MergeFrom(from._internal_info());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Package::CopyFrom(const Package& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.packages.v1.Package)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Package::IsInitialized() const {
  return true;
}

void Package::InternalSwap(Package* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &uri_, lhs_arena,
      &other->uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Package, created_on_)
      + sizeof(Package::created_on_)
      - PROTOBUF_FIELD_OFFSET(Package, info_)>(
          reinterpret_cast<char*>(&info_),
          reinterpret_cast<char*>(&other->info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Package::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_getter, &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once,
      file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto[6]);
}

// ===================================================================

class InternalPackage::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& metadata(const InternalPackage* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const InternalPackage* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
InternalPackage::_Internal::metadata(const InternalPackage* msg) {
  return *msg->metadata_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
InternalPackage::_Internal::created_on(const InternalPackage* msg) {
  return *msg->created_on_;
}
void InternalPackage::clear_metadata() {
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
}
void InternalPackage::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
InternalPackage::InternalPackage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  files_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.packages.v1.InternalPackage)
}
InternalPackage::InternalPackage(const InternalPackage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      files_(from.files_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  blob_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    blob_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_blob_path().empty()) {
    blob_path_.Set(from._internal_blob_path(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:viam.app.packages.v1.InternalPackage)
}

inline void InternalPackage::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
blob_path_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  blob_path_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&metadata_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&metadata_)) + sizeof(type_));
}

InternalPackage::~InternalPackage() {
  // @@protoc_insertion_point(destructor:viam.app.packages.v1.InternalPackage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InternalPackage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  name_.Destroy();
  version_.Destroy();
  blob_path_.Destroy();
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete created_on_;
}

void InternalPackage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InternalPackage::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.packages.v1.InternalPackage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  organization_id_.ClearToEmpty();
  name_.ClearToEmpty();
  version_.ClearToEmpty();
  blob_path_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && metadata_ != nullptr) {
    delete metadata_;
  }
  metadata_ = nullptr;
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InternalPackage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId", (.tagger.v1.tags) = "bson:\"org_id\" json:\"org_id\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.InternalPackage.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.InternalPackage.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 3 [json_name = "version", (.tagger.v1.tags) = "bson:\"version\" json:\"version\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.InternalPackage.version"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.packages.v1.PackageType type = 4 [json_name = "type", (.tagger.v1.tags) = "bson:\"type\" json:\"type\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::viam::app::packages::v1::PackageType>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.packages.v1.FileInfo files = 5 [json_name = "files", (.tagger.v1.tags) = "bson:\"files\" json:\"files\""];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct metadata = 6 [json_name = "metadata", (.tagger.v1.tags) = "bson:\"metadata\" json:\"metadata\""];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string blob_path = 7 [json_name = "blobPath", (.tagger.v1.tags) = "bson:\"blob_path\" json:\"blob_path\""];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_blob_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.InternalPackage.blob_path"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 8 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\" json:\"created_on\""];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InternalPackage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.packages.v1.InternalPackage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId", (.tagger.v1.tags) = "bson:\"org_id\" json:\"org_id\""];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.InternalPackage.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.InternalPackage.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string version = 3 [json_name = "version", (.tagger.v1.tags) = "bson:\"version\" json:\"version\""];
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.InternalPackage.version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_version(), target);
  }

  // .viam.app.packages.v1.PackageType type = 4 [json_name = "type", (.tagger.v1.tags) = "bson:\"type\" json:\"type\""];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_type(), target);
  }

  // repeated .viam.app.packages.v1.FileInfo files = 5 [json_name = "files", (.tagger.v1.tags) = "bson:\"files\" json:\"files\""];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_files_size()); i < n; i++) {
    const auto& repfield = this->_internal_files(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct metadata = 6 [json_name = "metadata", (.tagger.v1.tags) = "bson:\"metadata\" json:\"metadata\""];
  if (this->_internal_has_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  // string blob_path = 7 [json_name = "blobPath", (.tagger.v1.tags) = "bson:\"blob_path\" json:\"blob_path\""];
  if (!this->_internal_blob_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_blob_path().data(), static_cast<int>(this->_internal_blob_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.InternalPackage.blob_path");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_blob_path(), target);
  }

  // .google.protobuf.Timestamp created_on = 8 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\" json:\"created_on\""];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.packages.v1.InternalPackage)
  return target;
}

size_t InternalPackage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.packages.v1.InternalPackage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.packages.v1.FileInfo files = 5 [json_name = "files", (.tagger.v1.tags) = "bson:\"files\" json:\"files\""];
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string organization_id = 1 [json_name = "organizationId", (.tagger.v1.tags) = "bson:\"org_id\" json:\"org_id\""];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 3 [json_name = "version", (.tagger.v1.tags) = "bson:\"version\" json:\"version\""];
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string blob_path = 7 [json_name = "blobPath", (.tagger.v1.tags) = "bson:\"blob_path\" json:\"blob_path\""];
  if (!this->_internal_blob_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_blob_path());
  }

  // .google.protobuf.Struct metadata = 6 [json_name = "metadata", (.tagger.v1.tags) = "bson:\"metadata\" json:\"metadata\""];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  // .google.protobuf.Timestamp created_on = 8 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\" json:\"created_on\""];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // .viam.app.packages.v1.PackageType type = 4 [json_name = "type", (.tagger.v1.tags) = "bson:\"type\" json:\"type\""];
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InternalPackage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InternalPackage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InternalPackage::GetClassData() const { return &_class_data_; }

void InternalPackage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InternalPackage *>(to)->MergeFrom(
      static_cast<const InternalPackage &>(from));
}


void InternalPackage::MergeFrom(const InternalPackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.packages.v1.InternalPackage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  if (!from._internal_blob_path().empty()) {
    _internal_set_blob_path(from._internal_blob_path());
  }
  if (from._internal_has_metadata()) {
    _internal_mutable_metadata()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_metadata());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InternalPackage::CopyFrom(const InternalPackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.packages.v1.InternalPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternalPackage::IsInitialized() const {
  return true;
}

void InternalPackage::InternalSwap(InternalPackage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  files_.InternalSwap(&other->files_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &blob_path_, lhs_arena,
      &other->blob_path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InternalPackage, type_)
      + sizeof(InternalPackage::type_)
      - PROTOBUF_FIELD_OFFSET(InternalPackage, metadata_)>(
          reinterpret_cast<char*>(&metadata_),
          reinterpret_cast<char*>(&other->metadata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InternalPackage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_getter, &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once,
      file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto[7]);
}

// ===================================================================

class GetPackageRequest::_Internal {
 public:
};

GetPackageRequest::GetPackageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.packages.v1.GetPackageRequest)
}
GetPackageRequest::GetPackageRequest(const GetPackageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.packages.v1.GetPackageRequest)
}

inline void GetPackageRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPackageRequest::~GetPackageRequest() {
  // @@protoc_insertion_point(destructor:viam.app.packages.v1.GetPackageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPackageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  name_.Destroy();
  version_.Destroy();
}

void GetPackageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPackageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.packages.v1.GetPackageRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  name_.ClearToEmpty();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.GetPackageRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.GetPackageRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 3 [json_name = "version"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.GetPackageRequest.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPackageRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.packages.v1.GetPackageRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.GetPackageRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.GetPackageRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string version = 3 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.GetPackageRequest.version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.packages.v1.GetPackageRequest)
  return target;
}

size_t GetPackageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.packages.v1.GetPackageRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 3 [json_name = "version"];
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPackageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPackageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPackageRequest::GetClassData() const { return &_class_data_; }

void GetPackageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPackageRequest *>(to)->MergeFrom(
      static_cast<const GetPackageRequest &>(from));
}


void GetPackageRequest::MergeFrom(const GetPackageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.packages.v1.GetPackageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPackageRequest::CopyFrom(const GetPackageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.packages.v1.GetPackageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackageRequest::IsInitialized() const {
  return true;
}

void GetPackageRequest::InternalSwap(GetPackageRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_getter, &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once,
      file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto[8]);
}

// ===================================================================

class GetPackageResponse::_Internal {
 public:
  static const ::viam::app::packages::v1::Package& package(const GetPackageResponse* msg);
};

const ::viam::app::packages::v1::Package&
GetPackageResponse::_Internal::package(const GetPackageResponse* msg) {
  return *msg->package_;
}
GetPackageResponse::GetPackageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.packages.v1.GetPackageResponse)
}
GetPackageResponse::GetPackageResponse(const GetPackageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_package()) {
    package_ = new ::viam::app::packages::v1::Package(*from.package_);
  } else {
    package_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.packages.v1.GetPackageResponse)
}

inline void GetPackageResponse::SharedCtor() {
package_ = nullptr;
}

GetPackageResponse::~GetPackageResponse() {
  // @@protoc_insertion_point(destructor:viam.app.packages.v1.GetPackageResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPackageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete package_;
}

void GetPackageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPackageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.packages.v1.GetPackageResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && package_ != nullptr) {
    delete package_;
  }
  package_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPackageResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.packages.v1.Package package = 1 [json_name = "package"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_package(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPackageResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.packages.v1.GetPackageResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.packages.v1.Package package = 1 [json_name = "package"];
  if (this->_internal_has_package()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::package(this),
        _Internal::package(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.packages.v1.GetPackageResponse)
  return target;
}

size_t GetPackageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.packages.v1.GetPackageResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.packages.v1.Package package = 1 [json_name = "package"];
  if (this->_internal_has_package()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *package_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPackageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPackageResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPackageResponse::GetClassData() const { return &_class_data_; }

void GetPackageResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPackageResponse *>(to)->MergeFrom(
      static_cast<const GetPackageResponse &>(from));
}


void GetPackageResponse::MergeFrom(const GetPackageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.packages.v1.GetPackageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_package()) {
    _internal_mutable_package()->::viam::app::packages::v1::Package::MergeFrom(from._internal_package());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPackageResponse::CopyFrom(const GetPackageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.packages.v1.GetPackageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPackageResponse::IsInitialized() const {
  return true;
}

void GetPackageResponse::InternalSwap(GetPackageResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(package_, other->package_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPackageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_getter, &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once,
      file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto[9]);
}

// ===================================================================

class ListPackagesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ListPackagesRequest>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

ListPackagesRequest::ListPackagesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.packages.v1.ListPackagesRequest)
}
ListPackagesRequest::ListPackagesRequest(const ListPackagesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_version()) {
    version_.Set(from._internal_version(), 
      GetArenaForAllocation());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:viam.app.packages.v1.ListPackagesRequest)
}

inline void ListPackagesRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_ = 0;
}

ListPackagesRequest::~ListPackagesRequest() {
  // @@protoc_insertion_point(destructor:viam.app.packages.v1.ListPackagesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListPackagesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  name_.Destroy();
  version_.Destroy();
}

void ListPackagesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListPackagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.packages.v1.ListPackagesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmpty();
    }
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListPackagesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.ListPackagesRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // optional string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.ListPackagesRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string version = 3 [json_name = "version"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.packages.v1.ListPackagesRequest.version"));
        } else
          goto handle_unusual;
        continue;
      // optional .viam.app.packages.v1.PackageType type = 4 [json_name = "type"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::viam::app::packages::v1::PackageType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListPackagesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.packages.v1.ListPackagesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.ListPackagesRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // optional string name = 2 [json_name = "name"];
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.ListPackagesRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string version = 3 [json_name = "version"];
  if (_internal_has_version()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.packages.v1.ListPackagesRequest.version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_version(), target);
  }

  // optional .viam.app.packages.v1.PackageType type = 4 [json_name = "type"];
  if (_internal_has_type()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.packages.v1.ListPackagesRequest)
  return target;
}

size_t ListPackagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.packages.v1.ListPackagesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string name = 2 [json_name = "name"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string version = 3 [json_name = "version"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_version());
    }

    // optional .viam.app.packages.v1.PackageType type = 4 [json_name = "type"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListPackagesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListPackagesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListPackagesRequest::GetClassData() const { return &_class_data_; }

void ListPackagesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListPackagesRequest *>(to)->MergeFrom(
      static_cast<const ListPackagesRequest &>(from));
}


void ListPackagesRequest::MergeFrom(const ListPackagesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.packages.v1.ListPackagesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListPackagesRequest::CopyFrom(const ListPackagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.packages.v1.ListPackagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPackagesRequest::IsInitialized() const {
  return true;
}

void ListPackagesRequest::InternalSwap(ListPackagesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListPackagesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_getter, &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once,
      file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto[10]);
}

// ===================================================================

class ListPackagesResponse::_Internal {
 public:
};

ListPackagesResponse::ListPackagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  packages_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.packages.v1.ListPackagesResponse)
}
ListPackagesResponse::ListPackagesResponse(const ListPackagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      packages_(from.packages_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.packages.v1.ListPackagesResponse)
}

inline void ListPackagesResponse::SharedCtor() {
}

ListPackagesResponse::~ListPackagesResponse() {
  // @@protoc_insertion_point(destructor:viam.app.packages.v1.ListPackagesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListPackagesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListPackagesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListPackagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.packages.v1.ListPackagesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListPackagesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.packages.v1.Package packages = 1 [json_name = "packages"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_packages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListPackagesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.packages.v1.ListPackagesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.packages.v1.Package packages = 1 [json_name = "packages"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_packages_size()); i < n; i++) {
    const auto& repfield = this->_internal_packages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.packages.v1.ListPackagesResponse)
  return target;
}

size_t ListPackagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.packages.v1.ListPackagesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.packages.v1.Package packages = 1 [json_name = "packages"];
  total_size += 1UL * this->_internal_packages_size();
  for (const auto& msg : this->packages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListPackagesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListPackagesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListPackagesResponse::GetClassData() const { return &_class_data_; }

void ListPackagesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListPackagesResponse *>(to)->MergeFrom(
      static_cast<const ListPackagesResponse &>(from));
}


void ListPackagesResponse::MergeFrom(const ListPackagesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.packages.v1.ListPackagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  packages_.MergeFrom(from.packages_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListPackagesResponse::CopyFrom(const ListPackagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.packages.v1.ListPackagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPackagesResponse::IsInitialized() const {
  return true;
}

void ListPackagesResponse::InternalSwap(ListPackagesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  packages_.InternalSwap(&other->packages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListPackagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_getter, &descriptor_table_app_2fpackages_2fv1_2fpackages_2eproto_once,
      file_level_metadata_app_2fpackages_2fv1_2fpackages_2eproto[11]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace packages
}  // namespace app
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::app::packages::v1::FileInfo*
Arena::CreateMaybeMessage< ::viam::app::packages::v1::FileInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::packages::v1::FileInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::packages::v1::PackageInfo*
Arena::CreateMaybeMessage< ::viam::app::packages::v1::PackageInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::packages::v1::PackageInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::packages::v1::CreatePackageRequest*
Arena::CreateMaybeMessage< ::viam::app::packages::v1::CreatePackageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::packages::v1::CreatePackageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::packages::v1::CreatePackageResponse*
Arena::CreateMaybeMessage< ::viam::app::packages::v1::CreatePackageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::packages::v1::CreatePackageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::packages::v1::DeletePackageRequest*
Arena::CreateMaybeMessage< ::viam::app::packages::v1::DeletePackageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::packages::v1::DeletePackageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::packages::v1::DeletePackageResponse*
Arena::CreateMaybeMessage< ::viam::app::packages::v1::DeletePackageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::packages::v1::DeletePackageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::packages::v1::Package*
Arena::CreateMaybeMessage< ::viam::app::packages::v1::Package >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::packages::v1::Package >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::packages::v1::InternalPackage*
Arena::CreateMaybeMessage< ::viam::app::packages::v1::InternalPackage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::packages::v1::InternalPackage >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::packages::v1::GetPackageRequest*
Arena::CreateMaybeMessage< ::viam::app::packages::v1::GetPackageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::packages::v1::GetPackageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::packages::v1::GetPackageResponse*
Arena::CreateMaybeMessage< ::viam::app::packages::v1::GetPackageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::packages::v1::GetPackageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::packages::v1::ListPackagesRequest*
Arena::CreateMaybeMessage< ::viam::app::packages::v1::ListPackagesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::packages::v1::ListPackagesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::packages::v1::ListPackagesResponse*
Arena::CreateMaybeMessage< ::viam::app::packages::v1::ListPackagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::packages::v1::ListPackagesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
