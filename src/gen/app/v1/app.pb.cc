// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/v1/app.proto

#include "app/v1/app.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace app {
namespace v1 {
PROTOBUF_CONSTEXPR Robot::Robot(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , last_access_(nullptr)
  , created_on_(nullptr){}
struct RobotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RobotDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RobotDefaultTypeInternal() {}
  union {
    Robot _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RobotDefaultTypeInternal _Robot_default_instance_;
PROTOBUF_CONSTEXPR RobotPart::RobotPart(
    ::_pbi::ConstantInitialized)
  : secrets_()
  , id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , secret_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , fqdn_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , dns_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , local_fqdn_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_config_(nullptr)
  , last_access_(nullptr)
  , user_supplied_info_(nullptr)
  , created_on_(nullptr)
  , main_part_(false){}
struct RobotPartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RobotPartDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RobotPartDefaultTypeInternal() {}
  union {
    RobotPart _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RobotPartDefaultTypeInternal _RobotPart_default_instance_;
PROTOBUF_CONSTEXPR RobotPartHistoryEntry::RobotPartHistoryEntry(
    ::_pbi::ConstantInitialized)
  : part_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , when_(nullptr)
  , old_(nullptr){}
struct RobotPartHistoryEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RobotPartHistoryEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RobotPartHistoryEntryDefaultTypeInternal() {}
  union {
    RobotPartHistoryEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RobotPartHistoryEntryDefaultTypeInternal _RobotPartHistoryEntry_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationsRequest::ListOrganizationsRequest(
    ::_pbi::ConstantInitialized){}
struct ListOrganizationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationsRequestDefaultTypeInternal() {}
  union {
    ListOrganizationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationsRequestDefaultTypeInternal _ListOrganizationsRequest_default_instance_;
PROTOBUF_CONSTEXPR Organization::Organization(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_on_(nullptr){}
struct OrganizationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrganizationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrganizationDefaultTypeInternal() {}
  union {
    Organization _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrganizationDefaultTypeInternal _Organization_default_instance_;
PROTOBUF_CONSTEXPR ListOrganizationsResponse::ListOrganizationsResponse(
    ::_pbi::ConstantInitialized)
  : organizations_(){}
struct ListOrganizationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListOrganizationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListOrganizationsResponseDefaultTypeInternal() {}
  union {
    ListOrganizationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListOrganizationsResponseDefaultTypeInternal _ListOrganizationsResponse_default_instance_;
PROTOBUF_CONSTEXPR Location::Location(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_on_(nullptr){}
struct LocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationDefaultTypeInternal() {}
  union {
    Location _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationDefaultTypeInternal _Location_default_instance_;
PROTOBUF_CONSTEXPR CreateLocationRequest::CreateLocationRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLocationRequestDefaultTypeInternal() {}
  union {
    CreateLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLocationRequestDefaultTypeInternal _CreateLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateLocationResponse::CreateLocationResponse(
    ::_pbi::ConstantInitialized)
  : location_(nullptr){}
struct CreateLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLocationResponseDefaultTypeInternal() {}
  union {
    CreateLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLocationResponseDefaultTypeInternal _CreateLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR ListLocationsRequest::ListLocationsRequest(
    ::_pbi::ConstantInitialized)
  : organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ListLocationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListLocationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListLocationsRequestDefaultTypeInternal() {}
  union {
    ListLocationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListLocationsRequestDefaultTypeInternal _ListLocationsRequest_default_instance_;
PROTOBUF_CONSTEXPR ShareLocationRequest::ShareLocationRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ShareLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareLocationRequestDefaultTypeInternal() {}
  union {
    ShareLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareLocationRequestDefaultTypeInternal _ShareLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR ShareLocationResponse::ShareLocationResponse(
    ::_pbi::ConstantInitialized){}
struct ShareLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareLocationResponseDefaultTypeInternal() {}
  union {
    ShareLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareLocationResponseDefaultTypeInternal _ShareLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR UnshareLocationRequest::UnshareLocationRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UnshareLocationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnshareLocationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnshareLocationRequestDefaultTypeInternal() {}
  union {
    UnshareLocationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnshareLocationRequestDefaultTypeInternal _UnshareLocationRequest_default_instance_;
PROTOBUF_CONSTEXPR UnshareLocationResponse::UnshareLocationResponse(
    ::_pbi::ConstantInitialized){}
struct UnshareLocationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnshareLocationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnshareLocationResponseDefaultTypeInternal() {}
  union {
    UnshareLocationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnshareLocationResponseDefaultTypeInternal _UnshareLocationResponse_default_instance_;
PROTOBUF_CONSTEXPR ListLocationsResponse::ListLocationsResponse(
    ::_pbi::ConstantInitialized)
  : locations_(){}
struct ListLocationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListLocationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListLocationsResponseDefaultTypeInternal() {}
  union {
    ListLocationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListLocationsResponseDefaultTypeInternal _ListLocationsResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateLocationSecretRequest::CreateLocationSecretRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateLocationSecretRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLocationSecretRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLocationSecretRequestDefaultTypeInternal() {}
  union {
    CreateLocationSecretRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLocationSecretRequestDefaultTypeInternal _CreateLocationSecretRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateLocationSecretResponse::CreateLocationSecretResponse(
    ::_pbi::ConstantInitialized)
  : auth_(nullptr){}
struct CreateLocationSecretResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLocationSecretResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLocationSecretResponseDefaultTypeInternal() {}
  union {
    CreateLocationSecretResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLocationSecretResponseDefaultTypeInternal _CreateLocationSecretResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteLocationSecretRequest::DeleteLocationSecretRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , secret_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteLocationSecretRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteLocationSecretRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteLocationSecretRequestDefaultTypeInternal() {}
  union {
    DeleteLocationSecretRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteLocationSecretRequestDefaultTypeInternal _DeleteLocationSecretRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteLocationSecretResponse::DeleteLocationSecretResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteLocationSecretResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteLocationSecretResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteLocationSecretResponseDefaultTypeInternal() {}
  union {
    DeleteLocationSecretResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteLocationSecretResponseDefaultTypeInternal _DeleteLocationSecretResponse_default_instance_;
PROTOBUF_CONSTEXPR LocationAuth::LocationAuth(
    ::_pbi::ConstantInitialized)
  : secrets_()
  , secret_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct LocationAuthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationAuthDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationAuthDefaultTypeInternal() {}
  union {
    LocationAuth _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationAuthDefaultTypeInternal _LocationAuth_default_instance_;
PROTOBUF_CONSTEXPR SharedSecret::SharedSecret(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , secret_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_on_(nullptr)
  , state_(0)
{}
struct SharedSecretDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SharedSecretDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SharedSecretDefaultTypeInternal() {}
  union {
    SharedSecret _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SharedSecretDefaultTypeInternal _SharedSecret_default_instance_;
PROTOBUF_CONSTEXPR LocationAuthRequest::LocationAuthRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct LocationAuthRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationAuthRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationAuthRequestDefaultTypeInternal() {}
  union {
    LocationAuthRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationAuthRequestDefaultTypeInternal _LocationAuthRequest_default_instance_;
PROTOBUF_CONSTEXPR LocationAuthResponse::LocationAuthResponse(
    ::_pbi::ConstantInitialized)
  : auth_(nullptr){}
struct LocationAuthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationAuthResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationAuthResponseDefaultTypeInternal() {}
  union {
    LocationAuthResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationAuthResponseDefaultTypeInternal _LocationAuthResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotRequest::GetRobotRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotRequestDefaultTypeInternal() {}
  union {
    GetRobotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotRequestDefaultTypeInternal _GetRobotRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRobotResponse::GetRobotResponse(
    ::_pbi::ConstantInitialized)
  : robot_(nullptr){}
struct GetRobotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotResponseDefaultTypeInternal() {}
  union {
    GetRobotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotResponseDefaultTypeInternal _GetRobotResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartsRequest::GetRobotPartsRequest(
    ::_pbi::ConstantInitialized)
  : robot_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotPartsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartsRequestDefaultTypeInternal() {}
  union {
    GetRobotPartsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartsRequestDefaultTypeInternal _GetRobotPartsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartsResponse::GetRobotPartsResponse(
    ::_pbi::ConstantInitialized)
  : parts_(){}
struct GetRobotPartsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartsResponseDefaultTypeInternal() {}
  union {
    GetRobotPartsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartsResponseDefaultTypeInternal _GetRobotPartsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartRequest::GetRobotPartRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotPartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartRequestDefaultTypeInternal() {}
  union {
    GetRobotPartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartRequestDefaultTypeInternal _GetRobotPartRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartResponse::GetRobotPartResponse(
    ::_pbi::ConstantInitialized)
  : config_json_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , part_(nullptr){}
struct GetRobotPartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartResponseDefaultTypeInternal() {}
  union {
    GetRobotPartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartResponseDefaultTypeInternal _GetRobotPartResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartLogsRequest::GetRobotPartLogsRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , errors_only_(false){}
struct GetRobotPartLogsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartLogsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartLogsRequestDefaultTypeInternal() {}
  union {
    GetRobotPartLogsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartLogsRequestDefaultTypeInternal _GetRobotPartLogsRequest_default_instance_;
PROTOBUF_CONSTEXPR LogEntry::LogEntry(
    ::_pbi::ConstantInitialized)
  : fields_()
  , host_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , level_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , logger_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , message_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , stack_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , time_(nullptr)
  , caller_(nullptr){}
struct LogEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogEntryDefaultTypeInternal() {}
  union {
    LogEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogEntryDefaultTypeInternal _LogEntry_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartLogsResponse::GetRobotPartLogsResponse(
    ::_pbi::ConstantInitialized)
  : logs_(){}
struct GetRobotPartLogsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartLogsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartLogsResponseDefaultTypeInternal() {}
  union {
    GetRobotPartLogsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartLogsResponseDefaultTypeInternal _GetRobotPartLogsResponse_default_instance_;
PROTOBUF_CONSTEXPR TailRobotPartLogsRequest::TailRobotPartLogsRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , errors_only_(false){}
struct TailRobotPartLogsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TailRobotPartLogsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TailRobotPartLogsRequestDefaultTypeInternal() {}
  union {
    TailRobotPartLogsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TailRobotPartLogsRequestDefaultTypeInternal _TailRobotPartLogsRequest_default_instance_;
PROTOBUF_CONSTEXPR TailRobotPartLogsResponse::TailRobotPartLogsResponse(
    ::_pbi::ConstantInitialized)
  : logs_(){}
struct TailRobotPartLogsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TailRobotPartLogsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TailRobotPartLogsResponseDefaultTypeInternal() {}
  union {
    TailRobotPartLogsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TailRobotPartLogsResponseDefaultTypeInternal _TailRobotPartLogsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartHistoryRequest::GetRobotPartHistoryRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetRobotPartHistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartHistoryRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartHistoryRequestDefaultTypeInternal() {}
  union {
    GetRobotPartHistoryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartHistoryRequestDefaultTypeInternal _GetRobotPartHistoryRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRobotPartHistoryResponse::GetRobotPartHistoryResponse(
    ::_pbi::ConstantInitialized)
  : history_(){}
struct GetRobotPartHistoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRobotPartHistoryResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRobotPartHistoryResponseDefaultTypeInternal() {}
  union {
    GetRobotPartHistoryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRobotPartHistoryResponseDefaultTypeInternal _GetRobotPartHistoryResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateRobotPartRequest::UpdateRobotPartRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , robot_config_(nullptr){}
struct UpdateRobotPartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRobotPartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRobotPartRequestDefaultTypeInternal() {}
  union {
    UpdateRobotPartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRobotPartRequestDefaultTypeInternal _UpdateRobotPartRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateRobotPartResponse::UpdateRobotPartResponse(
    ::_pbi::ConstantInitialized)
  : part_(nullptr){}
struct UpdateRobotPartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRobotPartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRobotPartResponseDefaultTypeInternal() {}
  union {
    UpdateRobotPartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRobotPartResponseDefaultTypeInternal _UpdateRobotPartResponse_default_instance_;
PROTOBUF_CONSTEXPR NewRobotPartRequest::NewRobotPartRequest(
    ::_pbi::ConstantInitialized)
  : robot_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , part_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct NewRobotPartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewRobotPartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewRobotPartRequestDefaultTypeInternal() {}
  union {
    NewRobotPartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewRobotPartRequestDefaultTypeInternal _NewRobotPartRequest_default_instance_;
PROTOBUF_CONSTEXPR NewRobotPartResponse::NewRobotPartResponse(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct NewRobotPartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewRobotPartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewRobotPartResponseDefaultTypeInternal() {}
  union {
    NewRobotPartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewRobotPartResponseDefaultTypeInternal _NewRobotPartResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotPartRequest::DeleteRobotPartRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteRobotPartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotPartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotPartRequestDefaultTypeInternal() {}
  union {
    DeleteRobotPartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotPartRequestDefaultTypeInternal _DeleteRobotPartRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotPartResponse::DeleteRobotPartResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteRobotPartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotPartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotPartResponseDefaultTypeInternal() {}
  union {
    DeleteRobotPartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotPartResponseDefaultTypeInternal _DeleteRobotPartResponse_default_instance_;
PROTOBUF_CONSTEXPR Fragment::Fragment(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , organization_owner_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , fragment_(nullptr)
  , created_on_(nullptr)
  , public__(false){}
struct FragmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FragmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FragmentDefaultTypeInternal() {}
  union {
    Fragment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FragmentDefaultTypeInternal _Fragment_default_instance_;
PROTOBUF_CONSTEXPR FindRobotsRequest::FindRobotsRequest(
    ::_pbi::ConstantInitialized)
  : location_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct FindRobotsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindRobotsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindRobotsRequestDefaultTypeInternal() {}
  union {
    FindRobotsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindRobotsRequestDefaultTypeInternal _FindRobotsRequest_default_instance_;
PROTOBUF_CONSTEXPR FindRobotsResponse::FindRobotsResponse(
    ::_pbi::ConstantInitialized)
  : robots_(){}
struct FindRobotsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindRobotsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindRobotsResponseDefaultTypeInternal() {}
  union {
    FindRobotsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindRobotsResponseDefaultTypeInternal _FindRobotsResponse_default_instance_;
PROTOBUF_CONSTEXPR NewRobotRequest::NewRobotRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct NewRobotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewRobotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewRobotRequestDefaultTypeInternal() {}
  union {
    NewRobotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewRobotRequestDefaultTypeInternal _NewRobotRequest_default_instance_;
PROTOBUF_CONSTEXPR NewRobotResponse::NewRobotResponse(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct NewRobotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewRobotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewRobotResponseDefaultTypeInternal() {}
  union {
    NewRobotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewRobotResponseDefaultTypeInternal _NewRobotResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateRobotRequest::UpdateRobotRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , location_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct UpdateRobotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRobotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRobotRequestDefaultTypeInternal() {}
  union {
    UpdateRobotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRobotRequestDefaultTypeInternal _UpdateRobotRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateRobotResponse::UpdateRobotResponse(
    ::_pbi::ConstantInitialized)
  : robot_(nullptr){}
struct UpdateRobotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRobotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRobotResponseDefaultTypeInternal() {}
  union {
    UpdateRobotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRobotResponseDefaultTypeInternal _UpdateRobotResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotRequest::DeleteRobotRequest(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteRobotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotRequestDefaultTypeInternal() {}
  union {
    DeleteRobotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotRequestDefaultTypeInternal _DeleteRobotRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotResponse::DeleteRobotResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteRobotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotResponseDefaultTypeInternal() {}
  union {
    DeleteRobotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotResponseDefaultTypeInternal _DeleteRobotResponse_default_instance_;
PROTOBUF_CONSTEXPR MarkPartAsMainRequest::MarkPartAsMainRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct MarkPartAsMainRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkPartAsMainRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkPartAsMainRequestDefaultTypeInternal() {}
  union {
    MarkPartAsMainRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkPartAsMainRequestDefaultTypeInternal _MarkPartAsMainRequest_default_instance_;
PROTOBUF_CONSTEXPR MarkPartAsMainResponse::MarkPartAsMainResponse(
    ::_pbi::ConstantInitialized){}
struct MarkPartAsMainResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkPartAsMainResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkPartAsMainResponseDefaultTypeInternal() {}
  union {
    MarkPartAsMainResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkPartAsMainResponseDefaultTypeInternal _MarkPartAsMainResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateRobotPartSecretRequest::CreateRobotPartSecretRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct CreateRobotPartSecretRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateRobotPartSecretRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateRobotPartSecretRequestDefaultTypeInternal() {}
  union {
    CreateRobotPartSecretRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateRobotPartSecretRequestDefaultTypeInternal _CreateRobotPartSecretRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateRobotPartSecretResponse::CreateRobotPartSecretResponse(
    ::_pbi::ConstantInitialized)
  : part_(nullptr){}
struct CreateRobotPartSecretResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateRobotPartSecretResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateRobotPartSecretResponseDefaultTypeInternal() {}
  union {
    CreateRobotPartSecretResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateRobotPartSecretResponseDefaultTypeInternal _CreateRobotPartSecretResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotPartSecretRequest::DeleteRobotPartSecretRequest(
    ::_pbi::ConstantInitialized)
  : part_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , secret_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct DeleteRobotPartSecretRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotPartSecretRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotPartSecretRequestDefaultTypeInternal() {}
  union {
    DeleteRobotPartSecretRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotPartSecretRequestDefaultTypeInternal _DeleteRobotPartSecretRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteRobotPartSecretResponse::DeleteRobotPartSecretResponse(
    ::_pbi::ConstantInitialized){}
struct DeleteRobotPartSecretResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRobotPartSecretResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRobotPartSecretResponseDefaultTypeInternal() {}
  union {
    DeleteRobotPartSecretResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRobotPartSecretResponseDefaultTypeInternal _DeleteRobotPartSecretResponse_default_instance_;
}  // namespace v1
}  // namespace app
}  // namespace viam
static ::_pb::Metadata file_level_metadata_app_2fv1_2fapp_2eproto[57];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_app_2fv1_2fapp_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_app_2fv1_2fapp_2eproto = nullptr;

const uint32_t TableStruct_app_2fv1_2fapp_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, location_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, last_access_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Robot, created_on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, dns_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, secret_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, robot_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, robot_config_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, last_access_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, user_supplied_info_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, main_part_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, fqdn_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, local_fqdn_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPart, secrets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, part_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, robot_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, when_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::RobotPartHistoryEntry, old_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Organization, created_on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListOrganizationsResponse, organizations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Location, created_on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationRequest, organization_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationResponse, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListLocationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListLocationsRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ShareLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ShareLocationRequest, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ShareLocationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ShareLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UnshareLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UnshareLocationRequest, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UnshareLocationRequest, organization_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UnshareLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListLocationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::ListLocationsResponse, locations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationSecretRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateLocationSecretResponse, auth_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationSecretRequest, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationSecretRequest, secret_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteLocationSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuth, secret_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuth, location_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuth, secrets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, secret_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, created_on_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::SharedSecret, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuthRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LocationAuthResponse, auth_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotResponse, robot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartsRequest, robot_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartsResponse, parts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartResponse, part_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartResponse, config_json_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsRequest, errors_only_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, host_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, level_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, time_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, logger_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, message_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, caller_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, stack_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::LogEntry, fields_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartLogsResponse, logs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsRequest, errors_only_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::TailRobotPartLogsResponse, logs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartHistoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartHistoryRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartHistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::GetRobotPartHistoryResponse, history_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartRequest, robot_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotPartResponse, part_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartRequest, robot_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartRequest, part_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotPartResponse, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartRequest, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, fragment_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, organization_owner_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, public__),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::Fragment, created_on_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FindRobotsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FindRobotsRequest, location_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FindRobotsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::FindRobotsResponse, robots_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotRequest, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::NewRobotResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotRequest, id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotRequest, location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::UpdateRobotResponse, robot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartAsMainRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartAsMainRequest, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::MarkPartAsMainResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRobotPartSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRobotPartSecretRequest, part_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRobotPartSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::CreateRobotPartSecretResponse, part_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartSecretRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartSecretRequest, part_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartSecretRequest, secret_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::v1::DeleteRobotPartSecretResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::app::v1::Robot)},
  { 11, -1, -1, sizeof(::viam::app::v1::RobotPart)},
  { 31, -1, -1, sizeof(::viam::app::v1::RobotPartHistoryEntry)},
  { 41, -1, -1, sizeof(::viam::app::v1::ListOrganizationsRequest)},
  { 47, -1, -1, sizeof(::viam::app::v1::Organization)},
  { 56, -1, -1, sizeof(::viam::app::v1::ListOrganizationsResponse)},
  { 63, -1, -1, sizeof(::viam::app::v1::Location)},
  { 72, -1, -1, sizeof(::viam::app::v1::CreateLocationRequest)},
  { 80, -1, -1, sizeof(::viam::app::v1::CreateLocationResponse)},
  { 87, -1, -1, sizeof(::viam::app::v1::ListLocationsRequest)},
  { 94, -1, -1, sizeof(::viam::app::v1::ShareLocationRequest)},
  { 102, -1, -1, sizeof(::viam::app::v1::ShareLocationResponse)},
  { 108, -1, -1, sizeof(::viam::app::v1::UnshareLocationRequest)},
  { 116, -1, -1, sizeof(::viam::app::v1::UnshareLocationResponse)},
  { 122, -1, -1, sizeof(::viam::app::v1::ListLocationsResponse)},
  { 129, -1, -1, sizeof(::viam::app::v1::CreateLocationSecretRequest)},
  { 136, -1, -1, sizeof(::viam::app::v1::CreateLocationSecretResponse)},
  { 143, -1, -1, sizeof(::viam::app::v1::DeleteLocationSecretRequest)},
  { 151, -1, -1, sizeof(::viam::app::v1::DeleteLocationSecretResponse)},
  { 157, -1, -1, sizeof(::viam::app::v1::LocationAuth)},
  { 166, -1, -1, sizeof(::viam::app::v1::SharedSecret)},
  { 176, -1, -1, sizeof(::viam::app::v1::LocationAuthRequest)},
  { 183, -1, -1, sizeof(::viam::app::v1::LocationAuthResponse)},
  { 190, -1, -1, sizeof(::viam::app::v1::GetRobotRequest)},
  { 197, -1, -1, sizeof(::viam::app::v1::GetRobotResponse)},
  { 204, -1, -1, sizeof(::viam::app::v1::GetRobotPartsRequest)},
  { 211, -1, -1, sizeof(::viam::app::v1::GetRobotPartsResponse)},
  { 218, -1, -1, sizeof(::viam::app::v1::GetRobotPartRequest)},
  { 225, -1, -1, sizeof(::viam::app::v1::GetRobotPartResponse)},
  { 233, -1, -1, sizeof(::viam::app::v1::GetRobotPartLogsRequest)},
  { 241, -1, -1, sizeof(::viam::app::v1::LogEntry)},
  { 255, -1, -1, sizeof(::viam::app::v1::GetRobotPartLogsResponse)},
  { 262, -1, -1, sizeof(::viam::app::v1::TailRobotPartLogsRequest)},
  { 270, -1, -1, sizeof(::viam::app::v1::TailRobotPartLogsResponse)},
  { 277, -1, -1, sizeof(::viam::app::v1::GetRobotPartHistoryRequest)},
  { 284, -1, -1, sizeof(::viam::app::v1::GetRobotPartHistoryResponse)},
  { 291, -1, -1, sizeof(::viam::app::v1::UpdateRobotPartRequest)},
  { 300, -1, -1, sizeof(::viam::app::v1::UpdateRobotPartResponse)},
  { 307, -1, -1, sizeof(::viam::app::v1::NewRobotPartRequest)},
  { 315, -1, -1, sizeof(::viam::app::v1::NewRobotPartResponse)},
  { 322, -1, -1, sizeof(::viam::app::v1::DeleteRobotPartRequest)},
  { 329, -1, -1, sizeof(::viam::app::v1::DeleteRobotPartResponse)},
  { 335, -1, -1, sizeof(::viam::app::v1::Fragment)},
  { 347, -1, -1, sizeof(::viam::app::v1::FindRobotsRequest)},
  { 354, -1, -1, sizeof(::viam::app::v1::FindRobotsResponse)},
  { 361, -1, -1, sizeof(::viam::app::v1::NewRobotRequest)},
  { 369, -1, -1, sizeof(::viam::app::v1::NewRobotResponse)},
  { 376, -1, -1, sizeof(::viam::app::v1::UpdateRobotRequest)},
  { 385, -1, -1, sizeof(::viam::app::v1::UpdateRobotResponse)},
  { 392, -1, -1, sizeof(::viam::app::v1::DeleteRobotRequest)},
  { 399, -1, -1, sizeof(::viam::app::v1::DeleteRobotResponse)},
  { 405, -1, -1, sizeof(::viam::app::v1::MarkPartAsMainRequest)},
  { 412, -1, -1, sizeof(::viam::app::v1::MarkPartAsMainResponse)},
  { 418, -1, -1, sizeof(::viam::app::v1::CreateRobotPartSecretRequest)},
  { 425, -1, -1, sizeof(::viam::app::v1::CreateRobotPartSecretResponse)},
  { 432, -1, -1, sizeof(::viam::app::v1::DeleteRobotPartSecretRequest)},
  { 440, -1, -1, sizeof(::viam::app::v1::DeleteRobotPartSecretResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::app::v1::_Robot_default_instance_._instance,
  &::viam::app::v1::_RobotPart_default_instance_._instance,
  &::viam::app::v1::_RobotPartHistoryEntry_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationsRequest_default_instance_._instance,
  &::viam::app::v1::_Organization_default_instance_._instance,
  &::viam::app::v1::_ListOrganizationsResponse_default_instance_._instance,
  &::viam::app::v1::_Location_default_instance_._instance,
  &::viam::app::v1::_CreateLocationRequest_default_instance_._instance,
  &::viam::app::v1::_CreateLocationResponse_default_instance_._instance,
  &::viam::app::v1::_ListLocationsRequest_default_instance_._instance,
  &::viam::app::v1::_ShareLocationRequest_default_instance_._instance,
  &::viam::app::v1::_ShareLocationResponse_default_instance_._instance,
  &::viam::app::v1::_UnshareLocationRequest_default_instance_._instance,
  &::viam::app::v1::_UnshareLocationResponse_default_instance_._instance,
  &::viam::app::v1::_ListLocationsResponse_default_instance_._instance,
  &::viam::app::v1::_CreateLocationSecretRequest_default_instance_._instance,
  &::viam::app::v1::_CreateLocationSecretResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteLocationSecretRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteLocationSecretResponse_default_instance_._instance,
  &::viam::app::v1::_LocationAuth_default_instance_._instance,
  &::viam::app::v1::_SharedSecret_default_instance_._instance,
  &::viam::app::v1::_LocationAuthRequest_default_instance_._instance,
  &::viam::app::v1::_LocationAuthResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotRequest_default_instance_._instance,
  &::viam::app::v1::_GetRobotResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartsRequest_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartsResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartRequest_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartLogsRequest_default_instance_._instance,
  &::viam::app::v1::_LogEntry_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartLogsResponse_default_instance_._instance,
  &::viam::app::v1::_TailRobotPartLogsRequest_default_instance_._instance,
  &::viam::app::v1::_TailRobotPartLogsResponse_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartHistoryRequest_default_instance_._instance,
  &::viam::app::v1::_GetRobotPartHistoryResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateRobotPartRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateRobotPartResponse_default_instance_._instance,
  &::viam::app::v1::_NewRobotPartRequest_default_instance_._instance,
  &::viam::app::v1::_NewRobotPartResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotPartRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotPartResponse_default_instance_._instance,
  &::viam::app::v1::_Fragment_default_instance_._instance,
  &::viam::app::v1::_FindRobotsRequest_default_instance_._instance,
  &::viam::app::v1::_FindRobotsResponse_default_instance_._instance,
  &::viam::app::v1::_NewRobotRequest_default_instance_._instance,
  &::viam::app::v1::_NewRobotResponse_default_instance_._instance,
  &::viam::app::v1::_UpdateRobotRequest_default_instance_._instance,
  &::viam::app::v1::_UpdateRobotResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotResponse_default_instance_._instance,
  &::viam::app::v1::_MarkPartAsMainRequest_default_instance_._instance,
  &::viam::app::v1::_MarkPartAsMainResponse_default_instance_._instance,
  &::viam::app::v1::_CreateRobotPartSecretRequest_default_instance_._instance,
  &::viam::app::v1::_CreateRobotPartSecretResponse_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotPartSecretRequest_default_instance_._instance,
  &::viam::app::v1::_DeleteRobotPartSecretResponse_default_instance_._instance,
};

const char descriptor_table_protodef_app_2fv1_2fapp_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020app/v1/app.proto\022\013viam.app.v1\032\034google/"
  "protobuf/struct.proto\032\037google/protobuf/t"
  "imestamp.proto\032\026tagger/v1/tagger.proto\"\354"
  "\002\n\005Robot\0223\n\002id\030\001 \001(\tB#\232\204\236\003\036bson:\"_id\" js"
  "on:\"id,omitempty\"R\002id\0220\n\004name\030\002 \001(\tB\034\232\204\236"
  "\003\027bson:\"name\" json:\"name\"R\004name\022@\n\010locat"
  "ion\030\003 \001(\tB$\232\204\236\003\037bson:\"location\" json:\"lo"
  "cation\"R\010location\022g\n\013last_access\030\004 \001(\0132\032"
  ".google.protobuf.TimestampB*\232\204\236\003%bson:\"l"
  "ast_access\" json:\"last_access\"R\nlastAcce"
  "ss\022Q\n\ncreated_on\030\005 \001(\0132\032.google.protobuf"
  ".TimestampB\026\232\204\236\003\021bson:\"created_on\"R\tcrea"
  "tedOn\"\323\007\n\tRobotPart\0223\n\002id\030\001 \001(\tB#\232\204\236\003\036bs"
  "on:\"_id\" json:\"id,omitempty\"R\002id\0220\n\004name"
  "\030\002 \001(\tB\034\232\204\236\003\027bson:\"name\" json:\"name\"R\004na"
  "me\022\?\n\010dns_name\030\n \001(\tB$\232\204\236\003\037bson:\"dns_nam"
  "e\" json:\"dns_name\"R\007dnsName\022B\n\006secret\030\003 "
  "\001(\tB*\232\204\236\003%bson:\"secret\" json:\"secret,omi"
  "tempty\"R\006secret\0224\n\005robot\030\004 \001(\tB\036\232\204\236\003\031bso"
  "n:\"robot\" json:\"robot\"R\005robot\022A\n\013locatio"
  "n_id\030\014 \001(\tB \232\204\236\003\033bson:\"location_id\" json"
  ":\"-\"R\nlocationId\022b\n\014robot_config\030\005 \001(\0132\027"
  ".google.protobuf.StructB&\232\204\236\003!bson:\"conf"
  "ig\" json:\"robot_config\"R\013robotConfig\022g\n\013"
  "last_access\030\006 \001(\0132\032.google.protobuf.Time"
  "stampB*\232\204\236\003%bson:\"last_access\" json:\"las"
  "t_access\"R\nlastAccess\022\177\n\022user_supplied_i"
  "nfo\030\007 \001(\0132\027.google.protobuf.StructB8\232\204\236\003"
  "3bson:\"user_supplied_info\" json:\"user_su"
  "pplied_info\"R\020userSuppliedInfo\022C\n\tmain_p"
  "art\030\010 \001(\010B&\232\204\236\003!bson:\"main_part\" json:\"m"
  "ain_part\"R\010mainPart\022\022\n\004fqdn\030\t \001(\tR\004fqdn\022"
  "\035\n\nlocal_fqdn\030\013 \001(\tR\tlocalFqdn\022Q\n\ncreate"
  "d_on\030\r \001(\0132\032.google.protobuf.TimestampB\026"
  "\232\204\236\003\021bson:\"created_on\"R\tcreatedOn\022H\n\007sec"
  "rets\030\016 \003(\0132\031.viam.app.v1.SharedSecretB\023\232"
  "\204\236\003\016bson:\"secrets\"R\007secrets\"\223\002\n\025RobotPar"
  "tHistoryEntry\0220\n\004part\030\001 \001(\tB\034\232\204\236\003\027bson:\""
  "part\" json:\"part\"R\004part\0224\n\005robot\030\002 \001(\tB\036"
  "\232\204\236\003\031bson:\"robot\" json:\"robot\"R\005robot\022L\n"
  "\004when\030\003 \001(\0132\032.google.protobuf.TimestampB"
  "\034\232\204\236\003\027bson:\"when\" json:\"when\"R\004when\022D\n\003o"
  "ld\030\004 \001(\0132\026.viam.app.v1.RobotPartB\032\232\204\236\003\025b"
  "son:\"old\" json:\"old\"R\003old\"\032\n\030ListOrganiz"
  "ationsRequest\"m\n\014Organization\022\016\n\002id\030\001 \001("
  "\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\0229\n\ncreated_on\030"
  "\003 \001(\0132\032.google.protobuf.TimestampR\tcreat"
  "edOn\"\\\n\031ListOrganizationsResponse\022\?\n\rorg"
  "anizations\030\001 \003(\0132\031.viam.app.v1.Organizat"
  "ionR\rorganizations\"i\n\010Location\022\016\n\002id\030\001 \001"
  "(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\0229\n\ncreated_on"
  "\030\003 \001(\0132\032.google.protobuf.TimestampR\tcrea"
  "tedOn\"T\n\025CreateLocationRequest\022\'\n\017organi"
  "zation_id\030\001 \001(\tR\016organizationId\022\022\n\004name\030"
  "\002 \001(\tR\004name\"K\n\026CreateLocationResponse\0221\n"
  "\010location\030\001 \001(\0132\025.viam.app.v1.LocationR\010"
  "location\"\?\n\024ListLocationsRequest\022\'\n\017orga"
  "nization_id\030\001 \001(\tR\016organizationId\"`\n\024Sha"
  "reLocationRequest\022\037\n\013location_id\030\001 \001(\tR\n"
  "locationId\022\'\n\017organization_id\030\002 \001(\tR\016org"
  "anizationId\"\027\n\025ShareLocationResponse\"b\n\026"
  "UnshareLocationRequest\022\037\n\013location_id\030\001 "
  "\001(\tR\nlocationId\022\'\n\017organization_id\030\002 \001(\t"
  "R\016organizationId\"\031\n\027UnshareLocationRespo"
  "nse\"L\n\025ListLocationsResponse\0223\n\tlocation"
  "s\030\001 \003(\0132\025.viam.app.v1.LocationR\tlocation"
  "s\">\n\033CreateLocationSecretRequest\022\037\n\013loca"
  "tion_id\030\001 \001(\tR\nlocationId\"M\n\034CreateLocat"
  "ionSecretResponse\022-\n\004auth\030\001 \001(\0132\031.viam.a"
  "pp.v1.LocationAuthR\004auth\"[\n\033DeleteLocati"
  "onSecretRequest\022\037\n\013location_id\030\001 \001(\tR\nlo"
  "cationId\022\033\n\tsecret_id\030\002 \001(\tR\010secretId\"\036\n"
  "\034DeleteLocationSecretResponse\"\200\001\n\014Locati"
  "onAuth\022\032\n\006secret\030\001 \001(\tB\002\030\001R\006secret\022\037\n\013lo"
  "cation_id\030\002 \001(\tR\nlocationId\0223\n\007secrets\030\003"
  " \003(\0132\031.viam.app.v1.SharedSecretR\007secrets"
  "\"\320\002\n\014SharedSecret\022\036\n\002id\030\001 \001(\tB\016\232\204\236\003\tbson"
  ":\"id\"R\002id\022*\n\006secret\030\002 \001(\tB\022\232\204\236\003\rbson:\"se"
  "cret\"R\006secret\022c\n\ncreated_on\030\003 \001(\0132\032.goog"
  "le.protobuf.TimestampB(\232\204\236\003#bson:\"create"
  "d_on\" json:\"created_on\"R\tcreatedOn\022H\n\005st"
  "ate\030\004 \001(\0162\037.viam.app.v1.SharedSecret.Sta"
  "teB\021\232\204\236\003\014bson:\"state\"R\005state\"E\n\005State\022\025\n"
  "\021STATE_UNSPECIFIED\020\000\022\021\n\rSTATE_ENABLED\020\001\022"
  "\022\n\016STATE_DISABLED\020\002\"6\n\023LocationAuthReque"
  "st\022\037\n\013location_id\030\001 \001(\tR\nlocationId\"E\n\024L"
  "ocationAuthResponse\022-\n\004auth\030\001 \001(\0132\031.viam"
  ".app.v1.LocationAuthR\004auth\"!\n\017GetRobotRe"
  "quest\022\016\n\002id\030\001 \001(\tR\002id\"<\n\020GetRobotRespons"
  "e\022(\n\005robot\030\001 \001(\0132\022.viam.app.v1.RobotR\005ro"
  "bot\"1\n\024GetRobotPartsRequest\022\031\n\010robot_id\030"
  "\001 \001(\tR\007robotId\"E\n\025GetRobotPartsResponse\022"
  ",\n\005parts\030\001 \003(\0132\026.viam.app.v1.RobotPartR\005"
  "parts\"%\n\023GetRobotPartRequest\022\016\n\002id\030\001 \001(\t"
  "R\002id\"c\n\024GetRobotPartResponse\022*\n\004part\030\001 \001"
  "(\0132\026.viam.app.v1.RobotPartR\004part\022\037\n\013conf"
  "ig_json\030\002 \001(\tR\nconfigJson\"J\n\027GetRobotPar"
  "tLogsRequest\022\016\n\002id\030\001 \001(\tR\002id\022\037\n\013errors_o"
  "nly\030\002 \001(\010R\nerrorsOnly\"\227\002\n\010LogEntry\022\022\n\004ho"
  "st\030\001 \001(\tR\004host\022\024\n\005level\030\002 \001(\tR\005level\022.\n\004"
  "time\030\003 \001(\0132\032.google.protobuf.TimestampR\004"
  "time\022\037\n\013logger_name\030\004 \001(\tR\nloggerName\022\030\n"
  "\007message\030\005 \001(\tR\007message\022/\n\006caller\030\006 \001(\0132"
  "\027.google.protobuf.StructR\006caller\022\024\n\005stac"
  "k\030\007 \001(\tR\005stack\022/\n\006fields\030\010 \003(\0132\027.google."
  "protobuf.StructR\006fields\"E\n\030GetRobotPartL"
  "ogsResponse\022)\n\004logs\030\001 \003(\0132\025.viam.app.v1."
  "LogEntryR\004logs\"K\n\030TailRobotPartLogsReque"
  "st\022\016\n\002id\030\001 \001(\tR\002id\022\037\n\013errors_only\030\002 \001(\010R"
  "\nerrorsOnly\"F\n\031TailRobotPartLogsResponse"
  "\022)\n\004logs\030\001 \003(\0132\025.viam.app.v1.LogEntryR\004l"
  "ogs\",\n\032GetRobotPartHistoryRequest\022\016\n\002id\030"
  "\001 \001(\tR\002id\"[\n\033GetRobotPartHistoryResponse"
  "\022<\n\007history\030\001 \003(\0132\".viam.app.v1.RobotPar"
  "tHistoryEntryR\007history\"x\n\026UpdateRobotPar"
  "tRequest\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004"
  "name\022:\n\014robot_config\030\003 \001(\0132\027.google.prot"
  "obuf.StructR\013robotConfig\"E\n\027UpdateRobotP"
  "artResponse\022*\n\004part\030\001 \001(\0132\026.viam.app.v1."
  "RobotPartR\004part\"M\n\023NewRobotPartRequest\022\031"
  "\n\010robot_id\030\001 \001(\tR\007robotId\022\033\n\tpart_name\030\002"
  " \001(\tR\010partName\"/\n\024NewRobotPartResponse\022\027"
  "\n\007part_id\030\001 \001(\tR\006partId\"1\n\026DeleteRobotPa"
  "rtRequest\022\027\n\007part_id\030\001 \001(\tR\006partId\"\031\n\027De"
  "leteRobotPartResponse\"\265\003\n\010Fragment\0223\n\002id"
  "\030\001 \001(\tB#\232\204\236\003\036bson:\"_id\" json:\"id,omitemp"
  "ty\"R\002id\0220\n\004name\030\002 \001(\tB\034\232\204\236\003\027bson:\"name\" "
  "json:\"name\"R\004name\022Y\n\010fragment\030\003 \001(\0132\027.go"
  "ogle.protobuf.StructB$\232\204\236\003\037bson:\"fragmen"
  "t\" json:\"fragment\"R\010fragment\022Z\n\022organiza"
  "tion_owner\030\004 \001(\tB+\232\204\236\003&bson:\"organizatio"
  "n_owner\" json:\"owner\"R\021organizationOwner"
  "\0228\n\006public\030\005 \001(\010B \232\204\236\003\033bson:\"public\" jso"
  "n:\"public\"R\006public\022Q\n\ncreated_on\030\006 \001(\0132\032"
  ".google.protobuf.TimestampB\026\232\204\236\003\021bson:\"c"
  "reated_on\"R\tcreatedOn\"4\n\021FindRobotsReque"
  "st\022\037\n\013location_id\030\001 \001(\tR\nlocationId\"@\n\022F"
  "indRobotsResponse\022*\n\006robots\030\001 \003(\0132\022.viam"
  ".app.v1.RobotR\006robots\"A\n\017NewRobotRequest"
  "\022\022\n\004name\030\001 \001(\tR\004name\022\032\n\010location\030\002 \001(\tR\010"
  "location\"\"\n\020NewRobotResponse\022\016\n\002id\030\001 \001(\t"
  "R\002id\"T\n\022UpdateRobotRequest\022\016\n\002id\030\001 \001(\tR\002"
  "id\022\022\n\004name\030\002 \001(\tR\004name\022\032\n\010location\030\003 \001(\t"
  "R\010location\"\?\n\023UpdateRobotResponse\022(\n\005rob"
  "ot\030\001 \001(\0132\022.viam.app.v1.RobotR\005robot\"$\n\022D"
  "eleteRobotRequest\022\016\n\002id\030\001 \001(\tR\002id\"\025\n\023Del"
  "eteRobotResponse\"0\n\025MarkPartAsMainReques"
  "t\022\027\n\007part_id\030\001 \001(\tR\006partId\"\030\n\026MarkPartAs"
  "MainResponse\"7\n\034CreateRobotPartSecretReq"
  "uest\022\027\n\007part_id\030\001 \001(\tR\006partId\"K\n\035CreateR"
  "obotPartSecretResponse\022*\n\004part\030\001 \001(\0132\026.v"
  "iam.app.v1.RobotPartR\004part\"T\n\034DeleteRobo"
  "tPartSecretRequest\022\027\n\007part_id\030\001 \001(\tR\006par"
  "tId\022\033\n\tsecret_id\030\002 \001(\tR\010secretId\"\037\n\035Dele"
  "teRobotPartSecretResponse2\267\021\n\nAppService"
  "\022Y\n\016CreateLocation\022\".viam.app.v1.CreateL"
  "ocationRequest\032#.viam.app.v1.CreateLocat"
  "ionResponse\022b\n\021ListOrganizations\022%.viam."
  "app.v1.ListOrganizationsRequest\032&.viam.a"
  "pp.v1.ListOrganizationsResponse\022V\n\rListL"
  "ocations\022!.viam.app.v1.ListLocationsRequ"
  "est\032\".viam.app.v1.ListLocationsResponse\022"
  "V\n\rShareLocation\022!.viam.app.v1.ShareLoca"
  "tionRequest\032\".viam.app.v1.ShareLocationR"
  "esponse\022\\\n\017UnshareLocation\022#.viam.app.v1"
  ".UnshareLocationRequest\032$.viam.app.v1.Un"
  "shareLocationResponse\022S\n\014LocationAuth\022 ."
  "viam.app.v1.LocationAuthRequest\032!.viam.a"
  "pp.v1.LocationAuthResponse\022k\n\024CreateLoca"
  "tionSecret\022(.viam.app.v1.CreateLocationS"
  "ecretRequest\032).viam.app.v1.CreateLocatio"
  "nSecretResponse\022k\n\024DeleteLocationSecret\022"
  "(.viam.app.v1.DeleteLocationSecretReques"
  "t\032).viam.app.v1.DeleteLocationSecretResp"
  "onse\022G\n\010GetRobot\022\034.viam.app.v1.GetRobotR"
  "equest\032\035.viam.app.v1.GetRobotResponse\022V\n"
  "\rGetRobotParts\022!.viam.app.v1.GetRobotPar"
  "tsRequest\032\".viam.app.v1.GetRobotPartsRes"
  "ponse\022S\n\014GetRobotPart\022 .viam.app.v1.GetR"
  "obotPartRequest\032!.viam.app.v1.GetRobotPa"
  "rtResponse\022_\n\020GetRobotPartLogs\022$.viam.ap"
  "p.v1.GetRobotPartLogsRequest\032%.viam.app."
  "v1.GetRobotPartLogsResponse\022d\n\021TailRobot"
  "PartLogs\022%.viam.app.v1.TailRobotPartLogs"
  "Request\032&.viam.app.v1.TailRobotPartLogsR"
  "esponse0\001\022h\n\023GetRobotPartHistory\022\'.viam."
  "app.v1.GetRobotPartHistoryRequest\032(.viam"
  ".app.v1.GetRobotPartHistoryResponse\022\\\n\017U"
  "pdateRobotPart\022#.viam.app.v1.UpdateRobot"
  "PartRequest\032$.viam.app.v1.UpdateRobotPar"
  "tResponse\022S\n\014NewRobotPart\022 .viam.app.v1."
  "NewRobotPartRequest\032!.viam.app.v1.NewRob"
  "otPartResponse\022\\\n\017DeleteRobotPart\022#.viam"
  ".app.v1.DeleteRobotPartRequest\032$.viam.ap"
  "p.v1.DeleteRobotPartResponse\022Y\n\016MarkPart"
  "AsMain\022\".viam.app.v1.MarkPartAsMainReque"
  "st\032#.viam.app.v1.MarkPartAsMainResponse\022"
  "n\n\025CreateRobotPartSecret\022).viam.app.v1.C"
  "reateRobotPartSecretRequest\032*.viam.app.v"
  "1.CreateRobotPartSecretResponse\022n\n\025Delet"
  "eRobotPartSecret\022).viam.app.v1.DeleteRob"
  "otPartSecretRequest\032*.viam.app.v1.Delete"
  "RobotPartSecretResponse\022M\n\nFindRobots\022\036."
  "viam.app.v1.FindRobotsRequest\032\037.viam.app"
  ".v1.FindRobotsResponse\022G\n\010NewRobot\022\034.via"
  "m.app.v1.NewRobotRequest\032\035.viam.app.v1.N"
  "ewRobotResponse\022P\n\013UpdateRobot\022\037.viam.ap"
  "p.v1.UpdateRobotRequest\032 .viam.app.v1.Up"
  "dateRobotResponse\022P\n\013DeleteRobot\022\037.viam."
  "app.v1.DeleteRobotRequest\032 .viam.app.v1."
  "DeleteRobotResponseB\030Z\026go.viam.com/api/a"
  "pp/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_app_2fv1_2fapp_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_tagger_2fv1_2ftagger_2eproto,
};
static ::_pbi::once_flag descriptor_table_app_2fv1_2fapp_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_app_2fv1_2fapp_2eproto = {
    false, false, 8453, descriptor_table_protodef_app_2fv1_2fapp_2eproto,
    "app/v1/app.proto",
    &descriptor_table_app_2fv1_2fapp_2eproto_once, descriptor_table_app_2fv1_2fapp_2eproto_deps, 3, 57,
    schemas, file_default_instances, TableStruct_app_2fv1_2fapp_2eproto::offsets,
    file_level_metadata_app_2fv1_2fapp_2eproto, file_level_enum_descriptors_app_2fv1_2fapp_2eproto,
    file_level_service_descriptors_app_2fv1_2fapp_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_app_2fv1_2fapp_2eproto_getter() {
  return &descriptor_table_app_2fv1_2fapp_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_app_2fv1_2fapp_2eproto(&descriptor_table_app_2fv1_2fapp_2eproto);
namespace viam {
namespace app {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SharedSecret_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fv1_2fapp_2eproto);
  return file_level_enum_descriptors_app_2fv1_2fapp_2eproto[0];
}
bool SharedSecret_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr SharedSecret_State SharedSecret::STATE_UNSPECIFIED;
constexpr SharedSecret_State SharedSecret::STATE_ENABLED;
constexpr SharedSecret_State SharedSecret::STATE_DISABLED;
constexpr SharedSecret_State SharedSecret::State_MIN;
constexpr SharedSecret_State SharedSecret::State_MAX;
constexpr int SharedSecret::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class Robot::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_access(const Robot* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const Robot* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Robot::_Internal::last_access(const Robot* msg) {
  return *msg->last_access_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Robot::_Internal::created_on(const Robot* msg) {
  return *msg->created_on_;
}
void Robot::clear_last_access() {
  if (GetArenaForAllocation() == nullptr && last_access_ != nullptr) {
    delete last_access_;
  }
  last_access_ = nullptr;
}
void Robot::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
Robot::Robot(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Robot)
}
Robot::Robot(const Robot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    location_.Set(from._internal_location(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_last_access()) {
    last_access_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_access_);
  } else {
    last_access_ = nullptr;
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Robot)
}

inline void Robot::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&last_access_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&created_on_) -
    reinterpret_cast<char*>(&last_access_)) + sizeof(created_on_));
}

Robot::~Robot() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Robot)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Robot::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  location_.Destroy();
  if (this != internal_default_instance()) delete last_access_;
  if (this != internal_default_instance()) delete created_on_;
}

void Robot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Robot::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Robot)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  location_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && last_access_ != nullptr) {
    delete last_access_;
  }
  last_access_ = nullptr;
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Robot::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Robot.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Robot.name"));
        } else
          goto handle_unusual;
        continue;
      // string location = 3 [json_name = "location", (.tagger.v1.tags) = "bson:\"location\" json:\"location\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Robot.location"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_access = 4 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_access(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 5 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Robot::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Robot)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Robot.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Robot.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string location = 3 [json_name = "location", (.tagger.v1.tags) = "bson:\"location\" json:\"location\""];
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Robot.location");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_location(), target);
  }

  // .google.protobuf.Timestamp last_access = 4 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
  if (this->_internal_has_last_access()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::last_access(this),
        _Internal::last_access(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp created_on = 5 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Robot)
  return target;
}

size_t Robot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Robot)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string location = 3 [json_name = "location", (.tagger.v1.tags) = "bson:\"location\" json:\"location\""];
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // .google.protobuf.Timestamp last_access = 4 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
  if (this->_internal_has_last_access()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_access_);
  }

  // .google.protobuf.Timestamp created_on = 5 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Robot::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Robot::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Robot::GetClassData() const { return &_class_data_; }

void Robot::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Robot *>(to)->MergeFrom(
      static_cast<const Robot &>(from));
}


void Robot::MergeFrom(const Robot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Robot)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_location().empty()) {
    _internal_set_location(from._internal_location());
  }
  if (from._internal_has_last_access()) {
    _internal_mutable_last_access()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_access());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Robot::CopyFrom(const Robot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Robot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Robot::IsInitialized() const {
  return true;
}

void Robot::InternalSwap(Robot* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_, lhs_arena,
      &other->location_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Robot, created_on_)
      + sizeof(Robot::created_on_)
      - PROTOBUF_FIELD_OFFSET(Robot, last_access_)>(
          reinterpret_cast<char*>(&last_access_),
          reinterpret_cast<char*>(&other->last_access_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Robot::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[0]);
}

// ===================================================================

class RobotPart::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& robot_config(const RobotPart* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_access(const RobotPart* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& user_supplied_info(const RobotPart* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const RobotPart* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
RobotPart::_Internal::robot_config(const RobotPart* msg) {
  return *msg->robot_config_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RobotPart::_Internal::last_access(const RobotPart* msg) {
  return *msg->last_access_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
RobotPart::_Internal::user_supplied_info(const RobotPart* msg) {
  return *msg->user_supplied_info_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RobotPart::_Internal::created_on(const RobotPart* msg) {
  return *msg->created_on_;
}
void RobotPart::clear_robot_config() {
  if (GetArenaForAllocation() == nullptr && robot_config_ != nullptr) {
    delete robot_config_;
  }
  robot_config_ = nullptr;
}
void RobotPart::clear_last_access() {
  if (GetArenaForAllocation() == nullptr && last_access_ != nullptr) {
    delete last_access_;
  }
  last_access_ = nullptr;
}
void RobotPart::clear_user_supplied_info() {
  if (GetArenaForAllocation() == nullptr && user_supplied_info_ != nullptr) {
    delete user_supplied_info_;
  }
  user_supplied_info_ = nullptr;
}
void RobotPart::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
RobotPart::RobotPart(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  secrets_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RobotPart)
}
RobotPart::RobotPart(const RobotPart& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      secrets_(from.secrets_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  secret_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret().empty()) {
    secret_.Set(from._internal_secret(), 
      GetArenaForAllocation());
  }
  robot_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot().empty()) {
    robot_.Set(from._internal_robot(), 
      GetArenaForAllocation());
  }
  fqdn_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    fqdn_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_fqdn().empty()) {
    fqdn_.Set(from._internal_fqdn(), 
      GetArenaForAllocation());
  }
  dns_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    dns_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dns_name().empty()) {
    dns_name_.Set(from._internal_dns_name(), 
      GetArenaForAllocation());
  }
  local_fqdn_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    local_fqdn_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_local_fqdn().empty()) {
    local_fqdn_.Set(from._internal_local_fqdn(), 
      GetArenaForAllocation());
  }
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_robot_config()) {
    robot_config_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.robot_config_);
  } else {
    robot_config_ = nullptr;
  }
  if (from._internal_has_last_access()) {
    last_access_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.last_access_);
  } else {
    last_access_ = nullptr;
  }
  if (from._internal_has_user_supplied_info()) {
    user_supplied_info_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.user_supplied_info_);
  } else {
    user_supplied_info_ = nullptr;
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  main_part_ = from.main_part_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RobotPart)
}

inline void RobotPart::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
secret_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
robot_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
fqdn_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  fqdn_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
dns_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  dns_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
local_fqdn_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  local_fqdn_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&robot_config_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&main_part_) -
    reinterpret_cast<char*>(&robot_config_)) + sizeof(main_part_));
}

RobotPart::~RobotPart() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RobotPart)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RobotPart::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  secret_.Destroy();
  robot_.Destroy();
  fqdn_.Destroy();
  dns_name_.Destroy();
  local_fqdn_.Destroy();
  location_id_.Destroy();
  if (this != internal_default_instance()) delete robot_config_;
  if (this != internal_default_instance()) delete last_access_;
  if (this != internal_default_instance()) delete user_supplied_info_;
  if (this != internal_default_instance()) delete created_on_;
}

void RobotPart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RobotPart::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RobotPart)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secrets_.Clear();
  id_.ClearToEmpty();
  name_.ClearToEmpty();
  secret_.ClearToEmpty();
  robot_.ClearToEmpty();
  fqdn_.ClearToEmpty();
  dns_name_.ClearToEmpty();
  local_fqdn_.ClearToEmpty();
  location_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && robot_config_ != nullptr) {
    delete robot_config_;
  }
  robot_config_ = nullptr;
  if (GetArenaForAllocation() == nullptr && last_access_ != nullptr) {
    delete last_access_;
  }
  last_access_ = nullptr;
  if (GetArenaForAllocation() == nullptr && user_supplied_info_ != nullptr) {
    delete user_supplied_info_;
  }
  user_supplied_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  main_part_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RobotPart::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.name"));
        } else
          goto handle_unusual;
        continue;
      // string secret = 3 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\" json:\"secret,omitempty\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_secret();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.secret"));
        } else
          goto handle_unusual;
        continue;
      // string robot = 4 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_robot();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.robot"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct robot_config = 5 [json_name = "robotConfig", (.tagger.v1.tags) = "bson:\"config\" json:\"robot_config\""];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_access = 6 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_access(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct user_supplied_info = 7 [json_name = "userSuppliedInfo", (.tagger.v1.tags) = "bson:\"user_supplied_info\" json:\"user_supplied_info\""];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_supplied_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool main_part = 8 [json_name = "mainPart", (.tagger.v1.tags) = "bson:\"main_part\" json:\"main_part\""];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          main_part_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string fqdn = 9 [json_name = "fqdn"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_fqdn();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.fqdn"));
        } else
          goto handle_unusual;
        continue;
      // string dns_name = 10 [json_name = "dnsName", (.tagger.v1.tags) = "bson:\"dns_name\" json:\"dns_name\""];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_dns_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.dns_name"));
        } else
          goto handle_unusual;
        continue;
      // string local_fqdn = 11 [json_name = "localFqdn"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_local_fqdn();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.local_fqdn"));
        } else
          goto handle_unusual;
        continue;
      // string location_id = 12 [json_name = "locationId", (.tagger.v1.tags) = "bson:\"location_id\" json:\"-\""];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPart.location_id"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 13 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.SharedSecret secrets = 14 [json_name = "secrets", (.tagger.v1.tags) = "bson:\"secrets\""];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_secrets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RobotPart::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RobotPart)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string secret = 3 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\" json:\"secret,omitempty\""];
  if (!this->_internal_secret().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret().data(), static_cast<int>(this->_internal_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.secret");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_secret(), target);
  }

  // string robot = 4 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
  if (!this->_internal_robot().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot().data(), static_cast<int>(this->_internal_robot().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.robot");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_robot(), target);
  }

  // .google.protobuf.Struct robot_config = 5 [json_name = "robotConfig", (.tagger.v1.tags) = "bson:\"config\" json:\"robot_config\""];
  if (this->_internal_has_robot_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::robot_config(this),
        _Internal::robot_config(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp last_access = 6 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
  if (this->_internal_has_last_access()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::last_access(this),
        _Internal::last_access(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct user_supplied_info = 7 [json_name = "userSuppliedInfo", (.tagger.v1.tags) = "bson:\"user_supplied_info\" json:\"user_supplied_info\""];
  if (this->_internal_has_user_supplied_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::user_supplied_info(this),
        _Internal::user_supplied_info(this).GetCachedSize(), target, stream);
  }

  // bool main_part = 8 [json_name = "mainPart", (.tagger.v1.tags) = "bson:\"main_part\" json:\"main_part\""];
  if (this->_internal_main_part() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_main_part(), target);
  }

  // string fqdn = 9 [json_name = "fqdn"];
  if (!this->_internal_fqdn().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fqdn().data(), static_cast<int>(this->_internal_fqdn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.fqdn");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_fqdn(), target);
  }

  // string dns_name = 10 [json_name = "dnsName", (.tagger.v1.tags) = "bson:\"dns_name\" json:\"dns_name\""];
  if (!this->_internal_dns_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dns_name().data(), static_cast<int>(this->_internal_dns_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.dns_name");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_dns_name(), target);
  }

  // string local_fqdn = 11 [json_name = "localFqdn"];
  if (!this->_internal_local_fqdn().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_local_fqdn().data(), static_cast<int>(this->_internal_local_fqdn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.local_fqdn");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_local_fqdn(), target);
  }

  // string location_id = 12 [json_name = "locationId", (.tagger.v1.tags) = "bson:\"location_id\" json:\"-\""];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPart.location_id");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_location_id(), target);
  }

  // .google.protobuf.Timestamp created_on = 13 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // repeated .viam.app.v1.SharedSecret secrets = 14 [json_name = "secrets", (.tagger.v1.tags) = "bson:\"secrets\""];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_secrets_size()); i < n; i++) {
    const auto& repfield = this->_internal_secrets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(14, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RobotPart)
  return target;
}

size_t RobotPart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RobotPart)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.SharedSecret secrets = 14 [json_name = "secrets", (.tagger.v1.tags) = "bson:\"secrets\""];
  total_size += 1UL * this->_internal_secrets_size();
  for (const auto& msg : this->secrets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string secret = 3 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\" json:\"secret,omitempty\""];
  if (!this->_internal_secret().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret());
  }

  // string robot = 4 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
  if (!this->_internal_robot().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot());
  }

  // string fqdn = 9 [json_name = "fqdn"];
  if (!this->_internal_fqdn().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fqdn());
  }

  // string dns_name = 10 [json_name = "dnsName", (.tagger.v1.tags) = "bson:\"dns_name\" json:\"dns_name\""];
  if (!this->_internal_dns_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dns_name());
  }

  // string local_fqdn = 11 [json_name = "localFqdn"];
  if (!this->_internal_local_fqdn().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_local_fqdn());
  }

  // string location_id = 12 [json_name = "locationId", (.tagger.v1.tags) = "bson:\"location_id\" json:\"-\""];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // .google.protobuf.Struct robot_config = 5 [json_name = "robotConfig", (.tagger.v1.tags) = "bson:\"config\" json:\"robot_config\""];
  if (this->_internal_has_robot_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_config_);
  }

  // .google.protobuf.Timestamp last_access = 6 [json_name = "lastAccess", (.tagger.v1.tags) = "bson:\"last_access\" json:\"last_access\""];
  if (this->_internal_has_last_access()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *last_access_);
  }

  // .google.protobuf.Struct user_supplied_info = 7 [json_name = "userSuppliedInfo", (.tagger.v1.tags) = "bson:\"user_supplied_info\" json:\"user_supplied_info\""];
  if (this->_internal_has_user_supplied_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *user_supplied_info_);
  }

  // .google.protobuf.Timestamp created_on = 13 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // bool main_part = 8 [json_name = "mainPart", (.tagger.v1.tags) = "bson:\"main_part\" json:\"main_part\""];
  if (this->_internal_main_part() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RobotPart::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RobotPart::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RobotPart::GetClassData() const { return &_class_data_; }

void RobotPart::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RobotPart *>(to)->MergeFrom(
      static_cast<const RobotPart &>(from));
}


void RobotPart::MergeFrom(const RobotPart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RobotPart)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  secrets_.MergeFrom(from.secrets_);
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_secret().empty()) {
    _internal_set_secret(from._internal_secret());
  }
  if (!from._internal_robot().empty()) {
    _internal_set_robot(from._internal_robot());
  }
  if (!from._internal_fqdn().empty()) {
    _internal_set_fqdn(from._internal_fqdn());
  }
  if (!from._internal_dns_name().empty()) {
    _internal_set_dns_name(from._internal_dns_name());
  }
  if (!from._internal_local_fqdn().empty()) {
    _internal_set_local_fqdn(from._internal_local_fqdn());
  }
  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (from._internal_has_robot_config()) {
    _internal_mutable_robot_config()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_robot_config());
  }
  if (from._internal_has_last_access()) {
    _internal_mutable_last_access()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_last_access());
  }
  if (from._internal_has_user_supplied_info()) {
    _internal_mutable_user_supplied_info()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_user_supplied_info());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_main_part() != 0) {
    _internal_set_main_part(from._internal_main_part());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RobotPart::CopyFrom(const RobotPart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RobotPart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotPart::IsInitialized() const {
  return true;
}

void RobotPart::InternalSwap(RobotPart* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  secrets_.InternalSwap(&other->secrets_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_, lhs_arena,
      &other->secret_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_, lhs_arena,
      &other->robot_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &fqdn_, lhs_arena,
      &other->fqdn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &dns_name_, lhs_arena,
      &other->dns_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &local_fqdn_, lhs_arena,
      &other->local_fqdn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RobotPart, main_part_)
      + sizeof(RobotPart::main_part_)
      - PROTOBUF_FIELD_OFFSET(RobotPart, robot_config_)>(
          reinterpret_cast<char*>(&robot_config_),
          reinterpret_cast<char*>(&other->robot_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RobotPart::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[1]);
}

// ===================================================================

class RobotPartHistoryEntry::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& when(const RobotPartHistoryEntry* msg);
  static const ::viam::app::v1::RobotPart& old(const RobotPartHistoryEntry* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RobotPartHistoryEntry::_Internal::when(const RobotPartHistoryEntry* msg) {
  return *msg->when_;
}
const ::viam::app::v1::RobotPart&
RobotPartHistoryEntry::_Internal::old(const RobotPartHistoryEntry* msg) {
  return *msg->old_;
}
void RobotPartHistoryEntry::clear_when() {
  if (GetArenaForAllocation() == nullptr && when_ != nullptr) {
    delete when_;
  }
  when_ = nullptr;
}
RobotPartHistoryEntry::RobotPartHistoryEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.RobotPartHistoryEntry)
}
RobotPartHistoryEntry::RobotPartHistoryEntry(const RobotPartHistoryEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part().empty()) {
    part_.Set(from._internal_part(), 
      GetArenaForAllocation());
  }
  robot_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot().empty()) {
    robot_.Set(from._internal_robot(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_when()) {
    when_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.when_);
  } else {
    when_ = nullptr;
  }
  if (from._internal_has_old()) {
    old_ = new ::viam::app::v1::RobotPart(*from.old_);
  } else {
    old_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.RobotPartHistoryEntry)
}

inline void RobotPartHistoryEntry::SharedCtor() {
part_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
robot_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&when_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&old_) -
    reinterpret_cast<char*>(&when_)) + sizeof(old_));
}

RobotPartHistoryEntry::~RobotPartHistoryEntry() {
  // @@protoc_insertion_point(destructor:viam.app.v1.RobotPartHistoryEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RobotPartHistoryEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_.Destroy();
  robot_.Destroy();
  if (this != internal_default_instance()) delete when_;
  if (this != internal_default_instance()) delete old_;
}

void RobotPartHistoryEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RobotPartHistoryEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.RobotPartHistoryEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_.ClearToEmpty();
  robot_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && when_ != nullptr) {
    delete when_;
  }
  when_ = nullptr;
  if (GetArenaForAllocation() == nullptr && old_ != nullptr) {
    delete old_;
  }
  old_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RobotPartHistoryEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part = 1 [json_name = "part", (.tagger.v1.tags) = "bson:\"part\" json:\"part\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPartHistoryEntry.part"));
        } else
          goto handle_unusual;
        continue;
      // string robot = 2 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_robot();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.RobotPartHistoryEntry.robot"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp when = 3 [json_name = "when", (.tagger.v1.tags) = "bson:\"when\" json:\"when\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_when(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.RobotPart old = 4 [json_name = "old", (.tagger.v1.tags) = "bson:\"old\" json:\"old\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_old(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RobotPartHistoryEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.RobotPartHistoryEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part = 1 [json_name = "part", (.tagger.v1.tags) = "bson:\"part\" json:\"part\""];
  if (!this->_internal_part().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part().data(), static_cast<int>(this->_internal_part().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPartHistoryEntry.part");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part(), target);
  }

  // string robot = 2 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
  if (!this->_internal_robot().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot().data(), static_cast<int>(this->_internal_robot().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.RobotPartHistoryEntry.robot");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_robot(), target);
  }

  // .google.protobuf.Timestamp when = 3 [json_name = "when", (.tagger.v1.tags) = "bson:\"when\" json:\"when\""];
  if (this->_internal_has_when()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::when(this),
        _Internal::when(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.RobotPart old = 4 [json_name = "old", (.tagger.v1.tags) = "bson:\"old\" json:\"old\""];
  if (this->_internal_has_old()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::old(this),
        _Internal::old(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.RobotPartHistoryEntry)
  return target;
}

size_t RobotPartHistoryEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.RobotPartHistoryEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part = 1 [json_name = "part", (.tagger.v1.tags) = "bson:\"part\" json:\"part\""];
  if (!this->_internal_part().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part());
  }

  // string robot = 2 [json_name = "robot", (.tagger.v1.tags) = "bson:\"robot\" json:\"robot\""];
  if (!this->_internal_robot().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot());
  }

  // .google.protobuf.Timestamp when = 3 [json_name = "when", (.tagger.v1.tags) = "bson:\"when\" json:\"when\""];
  if (this->_internal_has_when()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *when_);
  }

  // .viam.app.v1.RobotPart old = 4 [json_name = "old", (.tagger.v1.tags) = "bson:\"old\" json:\"old\""];
  if (this->_internal_has_old()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *old_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RobotPartHistoryEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RobotPartHistoryEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RobotPartHistoryEntry::GetClassData() const { return &_class_data_; }

void RobotPartHistoryEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RobotPartHistoryEntry *>(to)->MergeFrom(
      static_cast<const RobotPartHistoryEntry &>(from));
}


void RobotPartHistoryEntry::MergeFrom(const RobotPartHistoryEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.RobotPartHistoryEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part().empty()) {
    _internal_set_part(from._internal_part());
  }
  if (!from._internal_robot().empty()) {
    _internal_set_robot(from._internal_robot());
  }
  if (from._internal_has_when()) {
    _internal_mutable_when()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_when());
  }
  if (from._internal_has_old()) {
    _internal_mutable_old()->::viam::app::v1::RobotPart::MergeFrom(from._internal_old());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RobotPartHistoryEntry::CopyFrom(const RobotPartHistoryEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.RobotPartHistoryEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotPartHistoryEntry::IsInitialized() const {
  return true;
}

void RobotPartHistoryEntry::InternalSwap(RobotPartHistoryEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_, lhs_arena,
      &other->part_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_, lhs_arena,
      &other->robot_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RobotPartHistoryEntry, old_)
      + sizeof(RobotPartHistoryEntry::old_)
      - PROTOBUF_FIELD_OFFSET(RobotPartHistoryEntry, when_)>(
          reinterpret_cast<char*>(&when_),
          reinterpret_cast<char*>(&other->when_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RobotPartHistoryEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[2]);
}

// ===================================================================

class ListOrganizationsRequest::_Internal {
 public:
};

ListOrganizationsRequest::ListOrganizationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationsRequest)
}
ListOrganizationsRequest::ListOrganizationsRequest(const ListOrganizationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[3]);
}

// ===================================================================

class Organization::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const Organization* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Organization::_Internal::created_on(const Organization* msg) {
  return *msg->created_on_;
}
void Organization::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
Organization::Organization(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Organization)
}
Organization::Organization(const Organization& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Organization)
}

inline void Organization::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
created_on_ = nullptr;
}

Organization::~Organization() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Organization)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Organization::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  if (this != internal_default_instance()) delete created_on_;
}

void Organization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Organization::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Organization)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Organization::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Organization.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Organization.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Organization::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Organization)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Organization.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Organization.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Organization)
  return target;
}

size_t Organization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Organization)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Organization::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Organization::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Organization::GetClassData() const { return &_class_data_; }

void Organization::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Organization *>(to)->MergeFrom(
      static_cast<const Organization &>(from));
}


void Organization::MergeFrom(const Organization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Organization)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Organization::CopyFrom(const Organization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Organization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Organization::IsInitialized() const {
  return true;
}

void Organization::InternalSwap(Organization* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(created_on_, other->created_on_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Organization::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[4]);
}

// ===================================================================

class ListOrganizationsResponse::_Internal {
 public:
};

ListOrganizationsResponse::ListOrganizationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  organizations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListOrganizationsResponse)
}
ListOrganizationsResponse::ListOrganizationsResponse(const ListOrganizationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      organizations_(from.organizations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListOrganizationsResponse)
}

inline void ListOrganizationsResponse::SharedCtor() {
}

ListOrganizationsResponse::~ListOrganizationsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListOrganizationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListOrganizationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListOrganizationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListOrganizationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListOrganizationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organizations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListOrganizationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Organization organizations = 1 [json_name = "organizations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_organizations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListOrganizationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListOrganizationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Organization organizations = 1 [json_name = "organizations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_organizations_size()); i < n; i++) {
    const auto& repfield = this->_internal_organizations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListOrganizationsResponse)
  return target;
}

size_t ListOrganizationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListOrganizationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Organization organizations = 1 [json_name = "organizations"];
  total_size += 1UL * this->_internal_organizations_size();
  for (const auto& msg : this->organizations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListOrganizationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListOrganizationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListOrganizationsResponse::GetClassData() const { return &_class_data_; }

void ListOrganizationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListOrganizationsResponse *>(to)->MergeFrom(
      static_cast<const ListOrganizationsResponse &>(from));
}


void ListOrganizationsResponse::MergeFrom(const ListOrganizationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListOrganizationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  organizations_.MergeFrom(from.organizations_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListOrganizationsResponse::CopyFrom(const ListOrganizationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListOrganizationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListOrganizationsResponse::IsInitialized() const {
  return true;
}

void ListOrganizationsResponse::InternalSwap(ListOrganizationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  organizations_.InternalSwap(&other->organizations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListOrganizationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[5]);
}

// ===================================================================

class Location::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const Location* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Location::_Internal::created_on(const Location* msg) {
  return *msg->created_on_;
}
void Location::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
Location::Location(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Location)
}
Location::Location(const Location& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Location)
}

inline void Location::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
created_on_ = nullptr;
}

Location::~Location() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Location)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Location::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  if (this != internal_default_instance()) delete created_on_;
}

void Location::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Location)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Location::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Location.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Location.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Location::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Location)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Location.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Location.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Location)
  return target;
}

size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Location)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn"];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Location::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Location::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Location::GetClassData() const { return &_class_data_; }

void Location::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Location *>(to)->MergeFrom(
      static_cast<const Location &>(from));
}


void Location::MergeFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Location)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location::IsInitialized() const {
  return true;
}

void Location::InternalSwap(Location* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(created_on_, other->created_on_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Location::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[6]);
}

// ===================================================================

class CreateLocationRequest::_Internal {
 public:
};

CreateLocationRequest::CreateLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateLocationRequest)
}
CreateLocationRequest::CreateLocationRequest(const CreateLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateLocationRequest)
}

inline void CreateLocationRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateLocationRequest::~CreateLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
  name_.Destroy();
}

void CreateLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateLocationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateLocationRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateLocationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateLocationRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateLocationRequest)
  return target;
}

size_t CreateLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLocationRequest::GetClassData() const { return &_class_data_; }

void CreateLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateLocationRequest *>(to)->MergeFrom(
      static_cast<const CreateLocationRequest &>(from));
}


void CreateLocationRequest::MergeFrom(const CreateLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLocationRequest::CopyFrom(const CreateLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLocationRequest::IsInitialized() const {
  return true;
}

void CreateLocationRequest::InternalSwap(CreateLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[7]);
}

// ===================================================================

class CreateLocationResponse::_Internal {
 public:
  static const ::viam::app::v1::Location& location(const CreateLocationResponse* msg);
};

const ::viam::app::v1::Location&
CreateLocationResponse::_Internal::location(const CreateLocationResponse* msg) {
  return *msg->location_;
}
CreateLocationResponse::CreateLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateLocationResponse)
}
CreateLocationResponse::CreateLocationResponse(const CreateLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_location()) {
    location_ = new ::viam::app::v1::Location(*from.location_);
  } else {
    location_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateLocationResponse)
}

inline void CreateLocationResponse::SharedCtor() {
location_ = nullptr;
}

CreateLocationResponse::~CreateLocationResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateLocationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLocationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete location_;
}

void CreateLocationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateLocationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLocationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Location location = 1 [json_name = "location"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLocationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateLocationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::location(this),
        _Internal::location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateLocationResponse)
  return target;
}

size_t CreateLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateLocationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Location location = 1 [json_name = "location"];
  if (this->_internal_has_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *location_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateLocationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLocationResponse::GetClassData() const { return &_class_data_; }

void CreateLocationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateLocationResponse *>(to)->MergeFrom(
      static_cast<const CreateLocationResponse &>(from));
}


void CreateLocationResponse::MergeFrom(const CreateLocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_location()) {
    _internal_mutable_location()->::viam::app::v1::Location::MergeFrom(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLocationResponse::CopyFrom(const CreateLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLocationResponse::IsInitialized() const {
  return true;
}

void CreateLocationResponse::InternalSwap(CreateLocationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(location_, other->location_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[8]);
}

// ===================================================================

class ListLocationsRequest::_Internal {
 public:
};

ListLocationsRequest::ListLocationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListLocationsRequest)
}
ListLocationsRequest::ListLocationsRequest(const ListLocationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListLocationsRequest)
}

inline void ListLocationsRequest::SharedCtor() {
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListLocationsRequest::~ListLocationsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListLocationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListLocationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  organization_id_.Destroy();
}

void ListLocationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListLocationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListLocationsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListLocationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string organization_id = 1 [json_name = "organizationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ListLocationsRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListLocationsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListLocationsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ListLocationsRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListLocationsRequest)
  return target;
}

size_t ListLocationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListLocationsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string organization_id = 1 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListLocationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListLocationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListLocationsRequest::GetClassData() const { return &_class_data_; }

void ListLocationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListLocationsRequest *>(to)->MergeFrom(
      static_cast<const ListLocationsRequest &>(from));
}


void ListLocationsRequest::MergeFrom(const ListLocationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListLocationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListLocationsRequest::CopyFrom(const ListLocationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListLocationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLocationsRequest::IsInitialized() const {
  return true;
}

void ListLocationsRequest::InternalSwap(ListLocationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListLocationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[9]);
}

// ===================================================================

class ShareLocationRequest::_Internal {
 public:
};

ShareLocationRequest::ShareLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ShareLocationRequest)
}
ShareLocationRequest::ShareLocationRequest(const ShareLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ShareLocationRequest)
}

inline void ShareLocationRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ShareLocationRequest::~ShareLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ShareLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShareLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
  organization_id_.Destroy();
}

void ShareLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ShareLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ShareLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ShareLocationRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 2 [json_name = "organizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.ShareLocationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShareLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ShareLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ShareLocationRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.ShareLocationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ShareLocationRequest)
  return target;
}

size_t ShareLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ShareLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ShareLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareLocationRequest::GetClassData() const { return &_class_data_; }

void ShareLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ShareLocationRequest *>(to)->MergeFrom(
      static_cast<const ShareLocationRequest &>(from));
}


void ShareLocationRequest::MergeFrom(const ShareLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ShareLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShareLocationRequest::CopyFrom(const ShareLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ShareLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareLocationRequest::IsInitialized() const {
  return true;
}

void ShareLocationRequest::InternalSwap(ShareLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[10]);
}

// ===================================================================

class ShareLocationResponse::_Internal {
 public:
};

ShareLocationResponse::ShareLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ShareLocationResponse)
}
ShareLocationResponse::ShareLocationResponse(const ShareLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ShareLocationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareLocationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ShareLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[11]);
}

// ===================================================================

class UnshareLocationRequest::_Internal {
 public:
};

UnshareLocationRequest::UnshareLocationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UnshareLocationRequest)
}
UnshareLocationRequest::UnshareLocationRequest(const UnshareLocationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  organization_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_id().empty()) {
    organization_id_.Set(from._internal_organization_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UnshareLocationRequest)
}

inline void UnshareLocationRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UnshareLocationRequest::~UnshareLocationRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UnshareLocationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnshareLocationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
  organization_id_.Destroy();
}

void UnshareLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnshareLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UnshareLocationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  organization_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnshareLocationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UnshareLocationRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      // string organization_id = 2 [json_name = "organizationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_organization_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UnshareLocationRequest.organization_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnshareLocationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UnshareLocationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UnshareLocationRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_id().data(), static_cast<int>(this->_internal_organization_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UnshareLocationRequest.organization_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_organization_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UnshareLocationRequest)
  return target;
}

size_t UnshareLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UnshareLocationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // string organization_id = 2 [json_name = "organizationId"];
  if (!this->_internal_organization_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnshareLocationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UnshareLocationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnshareLocationRequest::GetClassData() const { return &_class_data_; }

void UnshareLocationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UnshareLocationRequest *>(to)->MergeFrom(
      static_cast<const UnshareLocationRequest &>(from));
}


void UnshareLocationRequest::MergeFrom(const UnshareLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UnshareLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (!from._internal_organization_id().empty()) {
    _internal_set_organization_id(from._internal_organization_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnshareLocationRequest::CopyFrom(const UnshareLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UnshareLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnshareLocationRequest::IsInitialized() const {
  return true;
}

void UnshareLocationRequest::InternalSwap(UnshareLocationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_id_, lhs_arena,
      &other->organization_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UnshareLocationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[12]);
}

// ===================================================================

class UnshareLocationResponse::_Internal {
 public:
};

UnshareLocationResponse::UnshareLocationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UnshareLocationResponse)
}
UnshareLocationResponse::UnshareLocationResponse(const UnshareLocationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UnshareLocationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnshareLocationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnshareLocationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UnshareLocationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[13]);
}

// ===================================================================

class ListLocationsResponse::_Internal {
 public:
};

ListLocationsResponse::ListLocationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  locations_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.ListLocationsResponse)
}
ListLocationsResponse::ListLocationsResponse(const ListLocationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      locations_(from.locations_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.ListLocationsResponse)
}

inline void ListLocationsResponse::SharedCtor() {
}

ListLocationsResponse::~ListLocationsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.ListLocationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListLocationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListLocationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListLocationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.ListLocationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListLocationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Location locations = 1 [json_name = "locations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_locations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListLocationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.ListLocationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Location locations = 1 [json_name = "locations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_locations_size()); i < n; i++) {
    const auto& repfield = this->_internal_locations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.ListLocationsResponse)
  return target;
}

size_t ListLocationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.ListLocationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Location locations = 1 [json_name = "locations"];
  total_size += 1UL * this->_internal_locations_size();
  for (const auto& msg : this->locations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListLocationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListLocationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListLocationsResponse::GetClassData() const { return &_class_data_; }

void ListLocationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListLocationsResponse *>(to)->MergeFrom(
      static_cast<const ListLocationsResponse &>(from));
}


void ListLocationsResponse::MergeFrom(const ListLocationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.ListLocationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListLocationsResponse::CopyFrom(const ListLocationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.ListLocationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLocationsResponse::IsInitialized() const {
  return true;
}

void ListLocationsResponse::InternalSwap(ListLocationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  locations_.InternalSwap(&other->locations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListLocationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[14]);
}

// ===================================================================

class CreateLocationSecretRequest::_Internal {
 public:
};

CreateLocationSecretRequest::CreateLocationSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateLocationSecretRequest)
}
CreateLocationSecretRequest::CreateLocationSecretRequest(const CreateLocationSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateLocationSecretRequest)
}

inline void CreateLocationSecretRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateLocationSecretRequest::~CreateLocationSecretRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateLocationSecretRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLocationSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void CreateLocationSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateLocationSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateLocationSecretRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLocationSecretRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateLocationSecretRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLocationSecretRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateLocationSecretRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateLocationSecretRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateLocationSecretRequest)
  return target;
}

size_t CreateLocationSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateLocationSecretRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLocationSecretRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateLocationSecretRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLocationSecretRequest::GetClassData() const { return &_class_data_; }

void CreateLocationSecretRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateLocationSecretRequest *>(to)->MergeFrom(
      static_cast<const CreateLocationSecretRequest &>(from));
}


void CreateLocationSecretRequest::MergeFrom(const CreateLocationSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateLocationSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLocationSecretRequest::CopyFrom(const CreateLocationSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateLocationSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLocationSecretRequest::IsInitialized() const {
  return true;
}

void CreateLocationSecretRequest::InternalSwap(CreateLocationSecretRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLocationSecretRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[15]);
}

// ===================================================================

class CreateLocationSecretResponse::_Internal {
 public:
  static const ::viam::app::v1::LocationAuth& auth(const CreateLocationSecretResponse* msg);
};

const ::viam::app::v1::LocationAuth&
CreateLocationSecretResponse::_Internal::auth(const CreateLocationSecretResponse* msg) {
  return *msg->auth_;
}
CreateLocationSecretResponse::CreateLocationSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateLocationSecretResponse)
}
CreateLocationSecretResponse::CreateLocationSecretResponse(const CreateLocationSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_auth()) {
    auth_ = new ::viam::app::v1::LocationAuth(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateLocationSecretResponse)
}

inline void CreateLocationSecretResponse::SharedCtor() {
auth_ = nullptr;
}

CreateLocationSecretResponse::~CreateLocationSecretResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateLocationSecretResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLocationSecretResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete auth_;
}

void CreateLocationSecretResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateLocationSecretResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateLocationSecretResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLocationSecretResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLocationSecretResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateLocationSecretResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::auth(this),
        _Internal::auth(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateLocationSecretResponse)
  return target;
}

size_t CreateLocationSecretResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateLocationSecretResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLocationSecretResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateLocationSecretResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLocationSecretResponse::GetClassData() const { return &_class_data_; }

void CreateLocationSecretResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateLocationSecretResponse *>(to)->MergeFrom(
      static_cast<const CreateLocationSecretResponse &>(from));
}


void CreateLocationSecretResponse::MergeFrom(const CreateLocationSecretResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateLocationSecretResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_auth()) {
    _internal_mutable_auth()->::viam::app::v1::LocationAuth::MergeFrom(from._internal_auth());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLocationSecretResponse::CopyFrom(const CreateLocationSecretResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateLocationSecretResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLocationSecretResponse::IsInitialized() const {
  return true;
}

void CreateLocationSecretResponse::InternalSwap(CreateLocationSecretResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(auth_, other->auth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLocationSecretResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[16]);
}

// ===================================================================

class DeleteLocationSecretRequest::_Internal {
 public:
};

DeleteLocationSecretRequest::DeleteLocationSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteLocationSecretRequest)
}
DeleteLocationSecretRequest::DeleteLocationSecretRequest(const DeleteLocationSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  secret_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret_id().empty()) {
    secret_id_.Set(from._internal_secret_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteLocationSecretRequest)
}

inline void DeleteLocationSecretRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
secret_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteLocationSecretRequest::~DeleteLocationSecretRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteLocationSecretRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteLocationSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
  secret_id_.Destroy();
}

void DeleteLocationSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteLocationSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteLocationSecretRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  secret_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteLocationSecretRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteLocationSecretRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      // string secret_id = 2 [json_name = "secretId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_secret_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteLocationSecretRequest.secret_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteLocationSecretRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteLocationSecretRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteLocationSecretRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  // string secret_id = 2 [json_name = "secretId"];
  if (!this->_internal_secret_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret_id().data(), static_cast<int>(this->_internal_secret_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteLocationSecretRequest.secret_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_secret_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteLocationSecretRequest)
  return target;
}

size_t DeleteLocationSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteLocationSecretRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  // string secret_id = 2 [json_name = "secretId"];
  if (!this->_internal_secret_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteLocationSecretRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteLocationSecretRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteLocationSecretRequest::GetClassData() const { return &_class_data_; }

void DeleteLocationSecretRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteLocationSecretRequest *>(to)->MergeFrom(
      static_cast<const DeleteLocationSecretRequest &>(from));
}


void DeleteLocationSecretRequest::MergeFrom(const DeleteLocationSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteLocationSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  if (!from._internal_secret_id().empty()) {
    _internal_set_secret_id(from._internal_secret_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteLocationSecretRequest::CopyFrom(const DeleteLocationSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteLocationSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLocationSecretRequest::IsInitialized() const {
  return true;
}

void DeleteLocationSecretRequest::InternalSwap(DeleteLocationSecretRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_id_, lhs_arena,
      &other->secret_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteLocationSecretRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[17]);
}

// ===================================================================

class DeleteLocationSecretResponse::_Internal {
 public:
};

DeleteLocationSecretResponse::DeleteLocationSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteLocationSecretResponse)
}
DeleteLocationSecretResponse::DeleteLocationSecretResponse(const DeleteLocationSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteLocationSecretResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteLocationSecretResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteLocationSecretResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteLocationSecretResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[18]);
}

// ===================================================================

class LocationAuth::_Internal {
 public:
};

LocationAuth::LocationAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  secrets_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.LocationAuth)
}
LocationAuth::LocationAuth(const LocationAuth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      secrets_(from.secrets_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  secret_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret().empty()) {
    secret_.Set(from._internal_secret(), 
      GetArenaForAllocation());
  }
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.LocationAuth)
}

inline void LocationAuth::SharedCtor() {
secret_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LocationAuth::~LocationAuth() {
  // @@protoc_insertion_point(destructor:viam.app.v1.LocationAuth)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocationAuth::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  secret_.Destroy();
  location_id_.Destroy();
}

void LocationAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocationAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.LocationAuth)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secrets_.Clear();
  secret_.ClearToEmpty();
  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationAuth::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string secret = 1 [json_name = "secret", deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_secret();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LocationAuth.secret"));
        } else
          goto handle_unusual;
        continue;
      // string location_id = 2 [json_name = "locationId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LocationAuth.location_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.app.v1.SharedSecret secrets = 3 [json_name = "secrets"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_secrets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocationAuth::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.LocationAuth)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string secret = 1 [json_name = "secret", deprecated = true];
  if (!this->_internal_secret().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret().data(), static_cast<int>(this->_internal_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LocationAuth.secret");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_secret(), target);
  }

  // string location_id = 2 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LocationAuth.location_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_location_id(), target);
  }

  // repeated .viam.app.v1.SharedSecret secrets = 3 [json_name = "secrets"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_secrets_size()); i < n; i++) {
    const auto& repfield = this->_internal_secrets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.LocationAuth)
  return target;
}

size_t LocationAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.LocationAuth)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.SharedSecret secrets = 3 [json_name = "secrets"];
  total_size += 1UL * this->_internal_secrets_size();
  for (const auto& msg : this->secrets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string secret = 1 [json_name = "secret", deprecated = true];
  if (!this->_internal_secret().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret());
  }

  // string location_id = 2 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocationAuth::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocationAuth::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocationAuth::GetClassData() const { return &_class_data_; }

void LocationAuth::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocationAuth *>(to)->MergeFrom(
      static_cast<const LocationAuth &>(from));
}


void LocationAuth::MergeFrom(const LocationAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.LocationAuth)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  secrets_.MergeFrom(from.secrets_);
  if (!from._internal_secret().empty()) {
    _internal_set_secret(from._internal_secret());
  }
  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocationAuth::CopyFrom(const LocationAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.LocationAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationAuth::IsInitialized() const {
  return true;
}

void LocationAuth::InternalSwap(LocationAuth* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  secrets_.InternalSwap(&other->secrets_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_, lhs_arena,
      &other->secret_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationAuth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[19]);
}

// ===================================================================

class SharedSecret::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const SharedSecret* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SharedSecret::_Internal::created_on(const SharedSecret* msg) {
  return *msg->created_on_;
}
void SharedSecret::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
SharedSecret::SharedSecret(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.SharedSecret)
}
SharedSecret::SharedSecret(const SharedSecret& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  secret_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret().empty()) {
    secret_.Set(from._internal_secret(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.SharedSecret)
}

inline void SharedSecret::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
secret_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&created_on_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&created_on_)) + sizeof(state_));
}

SharedSecret::~SharedSecret() {
  // @@protoc_insertion_point(destructor:viam.app.v1.SharedSecret)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SharedSecret::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  secret_.Destroy();
  if (this != internal_default_instance()) delete created_on_;
}

void SharedSecret::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SharedSecret::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.SharedSecret)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  secret_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SharedSecret::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"id\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.SharedSecret.id"));
        } else
          goto handle_unusual;
        continue;
      // string secret = 2 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_secret();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.SharedSecret.secret"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\" json:\"created_on\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.v1.SharedSecret.State state = 4 [json_name = "state", (.tagger.v1.tags) = "bson:\"state\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::viam::app::v1::SharedSecret_State>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SharedSecret::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.SharedSecret)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"id\""];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.SharedSecret.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string secret = 2 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\""];
  if (!this->_internal_secret().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret().data(), static_cast<int>(this->_internal_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.SharedSecret.secret");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_secret(), target);
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\" json:\"created_on\""];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  // .viam.app.v1.SharedSecret.State state = 4 [json_name = "state", (.tagger.v1.tags) = "bson:\"state\""];
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.SharedSecret)
  return target;
}

size_t SharedSecret::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.SharedSecret)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"id\""];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string secret = 2 [json_name = "secret", (.tagger.v1.tags) = "bson:\"secret\""];
  if (!this->_internal_secret().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret());
  }

  // .google.protobuf.Timestamp created_on = 3 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\" json:\"created_on\""];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // .viam.app.v1.SharedSecret.State state = 4 [json_name = "state", (.tagger.v1.tags) = "bson:\"state\""];
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SharedSecret::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SharedSecret::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SharedSecret::GetClassData() const { return &_class_data_; }

void SharedSecret::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SharedSecret *>(to)->MergeFrom(
      static_cast<const SharedSecret &>(from));
}


void SharedSecret::MergeFrom(const SharedSecret& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.SharedSecret)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_secret().empty()) {
    _internal_set_secret(from._internal_secret());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SharedSecret::CopyFrom(const SharedSecret& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.SharedSecret)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SharedSecret::IsInitialized() const {
  return true;
}

void SharedSecret::InternalSwap(SharedSecret* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_, lhs_arena,
      &other->secret_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SharedSecret, state_)
      + sizeof(SharedSecret::state_)
      - PROTOBUF_FIELD_OFFSET(SharedSecret, created_on_)>(
          reinterpret_cast<char*>(&created_on_),
          reinterpret_cast<char*>(&other->created_on_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SharedSecret::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[20]);
}

// ===================================================================

class LocationAuthRequest::_Internal {
 public:
};

LocationAuthRequest::LocationAuthRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.LocationAuthRequest)
}
LocationAuthRequest::LocationAuthRequest(const LocationAuthRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.LocationAuthRequest)
}

inline void LocationAuthRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LocationAuthRequest::~LocationAuthRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.LocationAuthRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocationAuthRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void LocationAuthRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocationAuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.LocationAuthRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationAuthRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LocationAuthRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocationAuthRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.LocationAuthRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LocationAuthRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.LocationAuthRequest)
  return target;
}

size_t LocationAuthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.LocationAuthRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocationAuthRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocationAuthRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocationAuthRequest::GetClassData() const { return &_class_data_; }

void LocationAuthRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocationAuthRequest *>(to)->MergeFrom(
      static_cast<const LocationAuthRequest &>(from));
}


void LocationAuthRequest::MergeFrom(const LocationAuthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.LocationAuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocationAuthRequest::CopyFrom(const LocationAuthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.LocationAuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationAuthRequest::IsInitialized() const {
  return true;
}

void LocationAuthRequest::InternalSwap(LocationAuthRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationAuthRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[21]);
}

// ===================================================================

class LocationAuthResponse::_Internal {
 public:
  static const ::viam::app::v1::LocationAuth& auth(const LocationAuthResponse* msg);
};

const ::viam::app::v1::LocationAuth&
LocationAuthResponse::_Internal::auth(const LocationAuthResponse* msg) {
  return *msg->auth_;
}
LocationAuthResponse::LocationAuthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.LocationAuthResponse)
}
LocationAuthResponse::LocationAuthResponse(const LocationAuthResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_auth()) {
    auth_ = new ::viam::app::v1::LocationAuth(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.LocationAuthResponse)
}

inline void LocationAuthResponse::SharedCtor() {
auth_ = nullptr;
}

LocationAuthResponse::~LocationAuthResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.LocationAuthResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LocationAuthResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete auth_;
}

void LocationAuthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocationAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.LocationAuthResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationAuthResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocationAuthResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.LocationAuthResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::auth(this),
        _Internal::auth(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.LocationAuthResponse)
  return target;
}

size_t LocationAuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.LocationAuthResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.LocationAuth auth = 1 [json_name = "auth"];
  if (this->_internal_has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocationAuthResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocationAuthResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocationAuthResponse::GetClassData() const { return &_class_data_; }

void LocationAuthResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocationAuthResponse *>(to)->MergeFrom(
      static_cast<const LocationAuthResponse &>(from));
}


void LocationAuthResponse::MergeFrom(const LocationAuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.LocationAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_auth()) {
    _internal_mutable_auth()->::viam::app::v1::LocationAuth::MergeFrom(from._internal_auth());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocationAuthResponse::CopyFrom(const LocationAuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.LocationAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationAuthResponse::IsInitialized() const {
  return true;
}

void LocationAuthResponse::InternalSwap(LocationAuthResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(auth_, other->auth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationAuthResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[22]);
}

// ===================================================================

class GetRobotRequest::_Internal {
 public:
};

GetRobotRequest::GetRobotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotRequest)
}
GetRobotRequest::GetRobotRequest(const GetRobotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotRequest)
}

inline void GetRobotRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotRequest::~GetRobotRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void GetRobotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotRequest)
  return target;
}

size_t GetRobotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotRequest::GetClassData() const { return &_class_data_; }

void GetRobotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotRequest *>(to)->MergeFrom(
      static_cast<const GetRobotRequest &>(from));
}


void GetRobotRequest::MergeFrom(const GetRobotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotRequest::CopyFrom(const GetRobotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotRequest::IsInitialized() const {
  return true;
}

void GetRobotRequest::InternalSwap(GetRobotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[23]);
}

// ===================================================================

class GetRobotResponse::_Internal {
 public:
  static const ::viam::app::v1::Robot& robot(const GetRobotResponse* msg);
};

const ::viam::app::v1::Robot&
GetRobotResponse::_Internal::robot(const GetRobotResponse* msg) {
  return *msg->robot_;
}
GetRobotResponse::GetRobotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotResponse)
}
GetRobotResponse::GetRobotResponse(const GetRobotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_robot()) {
    robot_ = new ::viam::app::v1::Robot(*from.robot_);
  } else {
    robot_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotResponse)
}

inline void GetRobotResponse::SharedCtor() {
robot_ = nullptr;
}

GetRobotResponse::~GetRobotResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete robot_;
}

void GetRobotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && robot_ != nullptr) {
    delete robot_;
  }
  robot_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
  if (this->_internal_has_robot()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::robot(this),
        _Internal::robot(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotResponse)
  return target;
}

size_t GetRobotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
  if (this->_internal_has_robot()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotResponse::GetClassData() const { return &_class_data_; }

void GetRobotResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotResponse *>(to)->MergeFrom(
      static_cast<const GetRobotResponse &>(from));
}


void GetRobotResponse::MergeFrom(const GetRobotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_robot()) {
    _internal_mutable_robot()->::viam::app::v1::Robot::MergeFrom(from._internal_robot());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotResponse::CopyFrom(const GetRobotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotResponse::IsInitialized() const {
  return true;
}

void GetRobotResponse::InternalSwap(GetRobotResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(robot_, other->robot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[24]);
}

// ===================================================================

class GetRobotPartsRequest::_Internal {
 public:
};

GetRobotPartsRequest::GetRobotPartsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartsRequest)
}
GetRobotPartsRequest::GetRobotPartsRequest(const GetRobotPartsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  robot_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_id().empty()) {
    robot_id_.Set(from._internal_robot_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartsRequest)
}

inline void GetRobotPartsRequest::SharedCtor() {
robot_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotPartsRequest::~GetRobotPartsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  robot_id_.Destroy();
}

void GetRobotPartsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robot_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string robot_id = 1 [json_name = "robotId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_robot_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartsRequest.robot_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_id().data(), static_cast<int>(this->_internal_robot_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartsRequest.robot_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_robot_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartsRequest)
  return target;
}

size_t GetRobotPartsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartsRequest::GetClassData() const { return &_class_data_; }

void GetRobotPartsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartsRequest *>(to)->MergeFrom(
      static_cast<const GetRobotPartsRequest &>(from));
}


void GetRobotPartsRequest::MergeFrom(const GetRobotPartsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_robot_id().empty()) {
    _internal_set_robot_id(from._internal_robot_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartsRequest::CopyFrom(const GetRobotPartsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartsRequest::IsInitialized() const {
  return true;
}

void GetRobotPartsRequest::InternalSwap(GetRobotPartsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_id_, lhs_arena,
      &other->robot_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[25]);
}

// ===================================================================

class GetRobotPartsResponse::_Internal {
 public:
};

GetRobotPartsResponse::GetRobotPartsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  parts_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartsResponse)
}
GetRobotPartsResponse::GetRobotPartsResponse(const GetRobotPartsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      parts_(from.parts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartsResponse)
}

inline void GetRobotPartsResponse::SharedCtor() {
}

GetRobotPartsResponse::~GetRobotPartsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRobotPartsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.RobotPart parts = 1 [json_name = "parts"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_parts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.RobotPart parts = 1 [json_name = "parts"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_parts_size()); i < n; i++) {
    const auto& repfield = this->_internal_parts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartsResponse)
  return target;
}

size_t GetRobotPartsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.RobotPart parts = 1 [json_name = "parts"];
  total_size += 1UL * this->_internal_parts_size();
  for (const auto& msg : this->parts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartsResponse::GetClassData() const { return &_class_data_; }

void GetRobotPartsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartsResponse *>(to)->MergeFrom(
      static_cast<const GetRobotPartsResponse &>(from));
}


void GetRobotPartsResponse::MergeFrom(const GetRobotPartsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  parts_.MergeFrom(from.parts_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartsResponse::CopyFrom(const GetRobotPartsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartsResponse::IsInitialized() const {
  return true;
}

void GetRobotPartsResponse::InternalSwap(GetRobotPartsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  parts_.InternalSwap(&other->parts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[26]);
}

// ===================================================================

class GetRobotPartRequest::_Internal {
 public:
};

GetRobotPartRequest::GetRobotPartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartRequest)
}
GetRobotPartRequest::GetRobotPartRequest(const GetRobotPartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartRequest)
}

inline void GetRobotPartRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotPartRequest::~GetRobotPartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void GetRobotPartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartRequest)
  return target;
}

size_t GetRobotPartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartRequest::GetClassData() const { return &_class_data_; }

void GetRobotPartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartRequest *>(to)->MergeFrom(
      static_cast<const GetRobotPartRequest &>(from));
}


void GetRobotPartRequest::MergeFrom(const GetRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartRequest::CopyFrom(const GetRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartRequest::IsInitialized() const {
  return true;
}

void GetRobotPartRequest::InternalSwap(GetRobotPartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[27]);
}

// ===================================================================

class GetRobotPartResponse::_Internal {
 public:
  static const ::viam::app::v1::RobotPart& part(const GetRobotPartResponse* msg);
};

const ::viam::app::v1::RobotPart&
GetRobotPartResponse::_Internal::part(const GetRobotPartResponse* msg) {
  return *msg->part_;
}
GetRobotPartResponse::GetRobotPartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartResponse)
}
GetRobotPartResponse::GetRobotPartResponse(const GetRobotPartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  config_json_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    config_json_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_json().empty()) {
    config_json_.Set(from._internal_config_json(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_part()) {
    part_ = new ::viam::app::v1::RobotPart(*from.part_);
  } else {
    part_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartResponse)
}

inline void GetRobotPartResponse::SharedCtor() {
config_json_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  config_json_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
part_ = nullptr;
}

GetRobotPartResponse::~GetRobotPartResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  config_json_.Destroy();
  if (this != internal_default_instance()) delete part_;
}

void GetRobotPartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_json_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && part_ != nullptr) {
    delete part_;
  }
  part_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_part(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string config_json = 2 [json_name = "configJson"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_config_json();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartResponse.config_json"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::part(this),
        _Internal::part(this).GetCachedSize(), target, stream);
  }

  // string config_json = 2 [json_name = "configJson"];
  if (!this->_internal_config_json().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_json().data(), static_cast<int>(this->_internal_config_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartResponse.config_json");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_config_json(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartResponse)
  return target;
}

size_t GetRobotPartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string config_json = 2 [json_name = "configJson"];
  if (!this->_internal_config_json().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_json());
  }

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *part_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartResponse::GetClassData() const { return &_class_data_; }

void GetRobotPartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartResponse *>(to)->MergeFrom(
      static_cast<const GetRobotPartResponse &>(from));
}


void GetRobotPartResponse::MergeFrom(const GetRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_config_json().empty()) {
    _internal_set_config_json(from._internal_config_json());
  }
  if (from._internal_has_part()) {
    _internal_mutable_part()->::viam::app::v1::RobotPart::MergeFrom(from._internal_part());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartResponse::CopyFrom(const GetRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartResponse::IsInitialized() const {
  return true;
}

void GetRobotPartResponse::InternalSwap(GetRobotPartResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &config_json_, lhs_arena,
      &other->config_json_, rhs_arena
  );
  swap(part_, other->part_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[28]);
}

// ===================================================================

class GetRobotPartLogsRequest::_Internal {
 public:
};

GetRobotPartLogsRequest::GetRobotPartLogsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartLogsRequest)
}
GetRobotPartLogsRequest::GetRobotPartLogsRequest(const GetRobotPartLogsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  errors_only_ = from.errors_only_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartLogsRequest)
}

inline void GetRobotPartLogsRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
errors_only_ = false;
}

GetRobotPartLogsRequest::~GetRobotPartLogsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartLogsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartLogsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void GetRobotPartLogsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartLogsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartLogsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  errors_only_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartLogsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartLogsRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // bool errors_only = 2 [json_name = "errorsOnly"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          errors_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartLogsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartLogsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartLogsRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bool errors_only = 2 [json_name = "errorsOnly"];
  if (this->_internal_errors_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_errors_only(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartLogsRequest)
  return target;
}

size_t GetRobotPartLogsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartLogsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // bool errors_only = 2 [json_name = "errorsOnly"];
  if (this->_internal_errors_only() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartLogsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartLogsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartLogsRequest::GetClassData() const { return &_class_data_; }

void GetRobotPartLogsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartLogsRequest *>(to)->MergeFrom(
      static_cast<const GetRobotPartLogsRequest &>(from));
}


void GetRobotPartLogsRequest::MergeFrom(const GetRobotPartLogsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartLogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_errors_only() != 0) {
    _internal_set_errors_only(from._internal_errors_only());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartLogsRequest::CopyFrom(const GetRobotPartLogsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartLogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartLogsRequest::IsInitialized() const {
  return true;
}

void GetRobotPartLogsRequest::InternalSwap(GetRobotPartLogsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  swap(errors_only_, other->errors_only_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartLogsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[29]);
}

// ===================================================================

class LogEntry::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& time(const LogEntry* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& caller(const LogEntry* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
LogEntry::_Internal::time(const LogEntry* msg) {
  return *msg->time_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
LogEntry::_Internal::caller(const LogEntry* msg) {
  return *msg->caller_;
}
void LogEntry::clear_time() {
  if (GetArenaForAllocation() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
}
void LogEntry::clear_caller() {
  if (GetArenaForAllocation() == nullptr && caller_ != nullptr) {
    delete caller_;
  }
  caller_ = nullptr;
}
void LogEntry::clear_fields() {
  fields_.Clear();
}
LogEntry::LogEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  fields_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.LogEntry)
}
LogEntry::LogEntry(const LogEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_host().empty()) {
    host_.Set(from._internal_host(), 
      GetArenaForAllocation());
  }
  level_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    level_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_level().empty()) {
    level_.Set(from._internal_level(), 
      GetArenaForAllocation());
  }
  logger_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    logger_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_logger_name().empty()) {
    logger_name_.Set(from._internal_logger_name(), 
      GetArenaForAllocation());
  }
  message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(from._internal_message(), 
      GetArenaForAllocation());
  }
  stack_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    stack_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stack().empty()) {
    stack_.Set(from._internal_stack(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_time()) {
    time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.time_);
  } else {
    time_ = nullptr;
  }
  if (from._internal_has_caller()) {
    caller_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.caller_);
  } else {
    caller_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.LogEntry)
}

inline void LogEntry::SharedCtor() {
host_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  host_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
level_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  level_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
logger_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  logger_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
message_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
stack_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  stack_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&time_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&caller_) -
    reinterpret_cast<char*>(&time_)) + sizeof(caller_));
}

LogEntry::~LogEntry() {
  // @@protoc_insertion_point(destructor:viam.app.v1.LogEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  host_.Destroy();
  level_.Destroy();
  logger_name_.Destroy();
  message_.Destroy();
  stack_.Destroy();
  if (this != internal_default_instance()) delete time_;
  if (this != internal_default_instance()) delete caller_;
}

void LogEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.LogEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  host_.ClearToEmpty();
  level_.ClearToEmpty();
  logger_name_.ClearToEmpty();
  message_.ClearToEmpty();
  stack_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
  if (GetArenaForAllocation() == nullptr && caller_ != nullptr) {
    delete caller_;
  }
  caller_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string host = 1 [json_name = "host"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_host();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LogEntry.host"));
        } else
          goto handle_unusual;
        continue;
      // string level = 2 [json_name = "level"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_level();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LogEntry.level"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp time = 3 [json_name = "time"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string logger_name = 4 [json_name = "loggerName"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_logger_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LogEntry.logger_name"));
        } else
          goto handle_unusual;
        continue;
      // string message = 5 [json_name = "message"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LogEntry.message"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct caller = 6 [json_name = "caller"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_caller(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string stack = 7 [json_name = "stack"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_stack();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.LogEntry.stack"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.protobuf.Struct fields = 8 [json_name = "fields"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fields(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.LogEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1 [json_name = "host"];
  if (!this->_internal_host().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LogEntry.host");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_host(), target);
  }

  // string level = 2 [json_name = "level"];
  if (!this->_internal_level().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_level().data(), static_cast<int>(this->_internal_level().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LogEntry.level");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_level(), target);
  }

  // .google.protobuf.Timestamp time = 3 [json_name = "time"];
  if (this->_internal_has_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::time(this),
        _Internal::time(this).GetCachedSize(), target, stream);
  }

  // string logger_name = 4 [json_name = "loggerName"];
  if (!this->_internal_logger_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_logger_name().data(), static_cast<int>(this->_internal_logger_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LogEntry.logger_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_logger_name(), target);
  }

  // string message = 5 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LogEntry.message");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_message(), target);
  }

  // .google.protobuf.Struct caller = 6 [json_name = "caller"];
  if (this->_internal_has_caller()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::caller(this),
        _Internal::caller(this).GetCachedSize(), target, stream);
  }

  // string stack = 7 [json_name = "stack"];
  if (!this->_internal_stack().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stack().data(), static_cast<int>(this->_internal_stack().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.LogEntry.stack");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_stack(), target);
  }

  // repeated .google.protobuf.Struct fields = 8 [json_name = "fields"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fields_size()); i < n; i++) {
    const auto& repfield = this->_internal_fields(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.LogEntry)
  return target;
}

size_t LogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.LogEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Struct fields = 8 [json_name = "fields"];
  total_size += 1UL * this->_internal_fields_size();
  for (const auto& msg : this->fields_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string host = 1 [json_name = "host"];
  if (!this->_internal_host().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  // string level = 2 [json_name = "level"];
  if (!this->_internal_level().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_level());
  }

  // string logger_name = 4 [json_name = "loggerName"];
  if (!this->_internal_logger_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_logger_name());
  }

  // string message = 5 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // string stack = 7 [json_name = "stack"];
  if (!this->_internal_stack().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stack());
  }

  // .google.protobuf.Timestamp time = 3 [json_name = "time"];
  if (this->_internal_has_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // .google.protobuf.Struct caller = 6 [json_name = "caller"];
  if (this->_internal_has_caller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *caller_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LogEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogEntry::GetClassData() const { return &_class_data_; }

void LogEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LogEntry *>(to)->MergeFrom(
      static_cast<const LogEntry &>(from));
}


void LogEntry::MergeFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.LogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  if (!from._internal_host().empty()) {
    _internal_set_host(from._internal_host());
  }
  if (!from._internal_level().empty()) {
    _internal_set_level(from._internal_level());
  }
  if (!from._internal_logger_name().empty()) {
    _internal_set_logger_name(from._internal_logger_name());
  }
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (!from._internal_stack().empty()) {
    _internal_set_stack(from._internal_stack());
  }
  if (from._internal_has_time()) {
    _internal_mutable_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_time());
  }
  if (from._internal_has_caller()) {
    _internal_mutable_caller()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_caller());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogEntry::CopyFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogEntry::IsInitialized() const {
  return true;
}

void LogEntry::InternalSwap(LogEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  fields_.InternalSwap(&other->fields_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &host_, lhs_arena,
      &other->host_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &level_, lhs_arena,
      &other->level_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &logger_name_, lhs_arena,
      &other->logger_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &stack_, lhs_arena,
      &other->stack_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LogEntry, caller_)
      + sizeof(LogEntry::caller_)
      - PROTOBUF_FIELD_OFFSET(LogEntry, time_)>(
          reinterpret_cast<char*>(&time_),
          reinterpret_cast<char*>(&other->time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LogEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[30]);
}

// ===================================================================

class GetRobotPartLogsResponse::_Internal {
 public:
};

GetRobotPartLogsResponse::GetRobotPartLogsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  logs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartLogsResponse)
}
GetRobotPartLogsResponse::GetRobotPartLogsResponse(const GetRobotPartLogsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      logs_(from.logs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartLogsResponse)
}

inline void GetRobotPartLogsResponse::SharedCtor() {
}

GetRobotPartLogsResponse::~GetRobotPartLogsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartLogsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartLogsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRobotPartLogsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartLogsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartLogsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartLogsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.LogEntry logs = 1 [json_name = "logs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_logs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartLogsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartLogsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.LogEntry logs = 1 [json_name = "logs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_logs_size()); i < n; i++) {
    const auto& repfield = this->_internal_logs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartLogsResponse)
  return target;
}

size_t GetRobotPartLogsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartLogsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.LogEntry logs = 1 [json_name = "logs"];
  total_size += 1UL * this->_internal_logs_size();
  for (const auto& msg : this->logs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartLogsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartLogsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartLogsResponse::GetClassData() const { return &_class_data_; }

void GetRobotPartLogsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartLogsResponse *>(to)->MergeFrom(
      static_cast<const GetRobotPartLogsResponse &>(from));
}


void GetRobotPartLogsResponse::MergeFrom(const GetRobotPartLogsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartLogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  logs_.MergeFrom(from.logs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartLogsResponse::CopyFrom(const GetRobotPartLogsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartLogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartLogsResponse::IsInitialized() const {
  return true;
}

void GetRobotPartLogsResponse::InternalSwap(GetRobotPartLogsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  logs_.InternalSwap(&other->logs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartLogsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[31]);
}

// ===================================================================

class TailRobotPartLogsRequest::_Internal {
 public:
};

TailRobotPartLogsRequest::TailRobotPartLogsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.TailRobotPartLogsRequest)
}
TailRobotPartLogsRequest::TailRobotPartLogsRequest(const TailRobotPartLogsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  errors_only_ = from.errors_only_;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.TailRobotPartLogsRequest)
}

inline void TailRobotPartLogsRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
errors_only_ = false;
}

TailRobotPartLogsRequest::~TailRobotPartLogsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.TailRobotPartLogsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TailRobotPartLogsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void TailRobotPartLogsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TailRobotPartLogsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.TailRobotPartLogsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  errors_only_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TailRobotPartLogsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.TailRobotPartLogsRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // bool errors_only = 2 [json_name = "errorsOnly"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          errors_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TailRobotPartLogsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.TailRobotPartLogsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.TailRobotPartLogsRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bool errors_only = 2 [json_name = "errorsOnly"];
  if (this->_internal_errors_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_errors_only(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.TailRobotPartLogsRequest)
  return target;
}

size_t TailRobotPartLogsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.TailRobotPartLogsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // bool errors_only = 2 [json_name = "errorsOnly"];
  if (this->_internal_errors_only() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TailRobotPartLogsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TailRobotPartLogsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TailRobotPartLogsRequest::GetClassData() const { return &_class_data_; }

void TailRobotPartLogsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TailRobotPartLogsRequest *>(to)->MergeFrom(
      static_cast<const TailRobotPartLogsRequest &>(from));
}


void TailRobotPartLogsRequest::MergeFrom(const TailRobotPartLogsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.TailRobotPartLogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_errors_only() != 0) {
    _internal_set_errors_only(from._internal_errors_only());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TailRobotPartLogsRequest::CopyFrom(const TailRobotPartLogsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.TailRobotPartLogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TailRobotPartLogsRequest::IsInitialized() const {
  return true;
}

void TailRobotPartLogsRequest::InternalSwap(TailRobotPartLogsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  swap(errors_only_, other->errors_only_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TailRobotPartLogsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[32]);
}

// ===================================================================

class TailRobotPartLogsResponse::_Internal {
 public:
};

TailRobotPartLogsResponse::TailRobotPartLogsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  logs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.TailRobotPartLogsResponse)
}
TailRobotPartLogsResponse::TailRobotPartLogsResponse(const TailRobotPartLogsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      logs_(from.logs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.TailRobotPartLogsResponse)
}

inline void TailRobotPartLogsResponse::SharedCtor() {
}

TailRobotPartLogsResponse::~TailRobotPartLogsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.TailRobotPartLogsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TailRobotPartLogsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TailRobotPartLogsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TailRobotPartLogsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.TailRobotPartLogsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  logs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TailRobotPartLogsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.LogEntry logs = 1 [json_name = "logs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_logs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TailRobotPartLogsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.TailRobotPartLogsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.LogEntry logs = 1 [json_name = "logs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_logs_size()); i < n; i++) {
    const auto& repfield = this->_internal_logs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.TailRobotPartLogsResponse)
  return target;
}

size_t TailRobotPartLogsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.TailRobotPartLogsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.LogEntry logs = 1 [json_name = "logs"];
  total_size += 1UL * this->_internal_logs_size();
  for (const auto& msg : this->logs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TailRobotPartLogsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TailRobotPartLogsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TailRobotPartLogsResponse::GetClassData() const { return &_class_data_; }

void TailRobotPartLogsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TailRobotPartLogsResponse *>(to)->MergeFrom(
      static_cast<const TailRobotPartLogsResponse &>(from));
}


void TailRobotPartLogsResponse::MergeFrom(const TailRobotPartLogsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.TailRobotPartLogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  logs_.MergeFrom(from.logs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TailRobotPartLogsResponse::CopyFrom(const TailRobotPartLogsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.TailRobotPartLogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TailRobotPartLogsResponse::IsInitialized() const {
  return true;
}

void TailRobotPartLogsResponse::InternalSwap(TailRobotPartLogsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  logs_.InternalSwap(&other->logs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TailRobotPartLogsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[33]);
}

// ===================================================================

class GetRobotPartHistoryRequest::_Internal {
 public:
};

GetRobotPartHistoryRequest::GetRobotPartHistoryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartHistoryRequest)
}
GetRobotPartHistoryRequest::GetRobotPartHistoryRequest(const GetRobotPartHistoryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartHistoryRequest)
}

inline void GetRobotPartHistoryRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRobotPartHistoryRequest::~GetRobotPartHistoryRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartHistoryRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartHistoryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void GetRobotPartHistoryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartHistoryRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartHistoryRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.GetRobotPartHistoryRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartHistoryRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartHistoryRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.GetRobotPartHistoryRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartHistoryRequest)
  return target;
}

size_t GetRobotPartHistoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartHistoryRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartHistoryRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartHistoryRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartHistoryRequest::GetClassData() const { return &_class_data_; }

void GetRobotPartHistoryRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartHistoryRequest *>(to)->MergeFrom(
      static_cast<const GetRobotPartHistoryRequest &>(from));
}


void GetRobotPartHistoryRequest::MergeFrom(const GetRobotPartHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartHistoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartHistoryRequest::CopyFrom(const GetRobotPartHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartHistoryRequest::IsInitialized() const {
  return true;
}

void GetRobotPartHistoryRequest::InternalSwap(GetRobotPartHistoryRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartHistoryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[34]);
}

// ===================================================================

class GetRobotPartHistoryResponse::_Internal {
 public:
};

GetRobotPartHistoryResponse::GetRobotPartHistoryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  history_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.GetRobotPartHistoryResponse)
}
GetRobotPartHistoryResponse::GetRobotPartHistoryResponse(const GetRobotPartHistoryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      history_(from.history_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.GetRobotPartHistoryResponse)
}

inline void GetRobotPartHistoryResponse::SharedCtor() {
}

GetRobotPartHistoryResponse::~GetRobotPartHistoryResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.GetRobotPartHistoryResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRobotPartHistoryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetRobotPartHistoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetRobotPartHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.GetRobotPartHistoryResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  history_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRobotPartHistoryResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.RobotPartHistoryEntry history = 1 [json_name = "history"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_history(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRobotPartHistoryResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.GetRobotPartHistoryResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.RobotPartHistoryEntry history = 1 [json_name = "history"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_history_size()); i < n; i++) {
    const auto& repfield = this->_internal_history(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.GetRobotPartHistoryResponse)
  return target;
}

size_t GetRobotPartHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.GetRobotPartHistoryResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.RobotPartHistoryEntry history = 1 [json_name = "history"];
  total_size += 1UL * this->_internal_history_size();
  for (const auto& msg : this->history_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRobotPartHistoryResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetRobotPartHistoryResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRobotPartHistoryResponse::GetClassData() const { return &_class_data_; }

void GetRobotPartHistoryResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetRobotPartHistoryResponse *>(to)->MergeFrom(
      static_cast<const GetRobotPartHistoryResponse &>(from));
}


void GetRobotPartHistoryResponse::MergeFrom(const GetRobotPartHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.GetRobotPartHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  history_.MergeFrom(from.history_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRobotPartHistoryResponse::CopyFrom(const GetRobotPartHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.GetRobotPartHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRobotPartHistoryResponse::IsInitialized() const {
  return true;
}

void GetRobotPartHistoryResponse::InternalSwap(GetRobotPartHistoryResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  history_.InternalSwap(&other->history_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRobotPartHistoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[35]);
}

// ===================================================================

class UpdateRobotPartRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& robot_config(const UpdateRobotPartRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
UpdateRobotPartRequest::_Internal::robot_config(const UpdateRobotPartRequest* msg) {
  return *msg->robot_config_;
}
void UpdateRobotPartRequest::clear_robot_config() {
  if (GetArenaForAllocation() == nullptr && robot_config_ != nullptr) {
    delete robot_config_;
  }
  robot_config_ = nullptr;
}
UpdateRobotPartRequest::UpdateRobotPartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRobotPartRequest)
}
UpdateRobotPartRequest::UpdateRobotPartRequest(const UpdateRobotPartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_robot_config()) {
    robot_config_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.robot_config_);
  } else {
    robot_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRobotPartRequest)
}

inline void UpdateRobotPartRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
robot_config_ = nullptr;
}

UpdateRobotPartRequest::~UpdateRobotPartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateRobotPartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRobotPartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  if (this != internal_default_instance()) delete robot_config_;
}

void UpdateRobotPartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRobotPartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateRobotPartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && robot_config_ != nullptr) {
    delete robot_config_;
  }
  robot_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRobotPartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotPartRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotPartRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct robot_config = 3 [json_name = "robotConfig"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRobotPartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateRobotPartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotPartRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotPartRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Struct robot_config = 3 [json_name = "robotConfig"];
  if (this->_internal_has_robot_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::robot_config(this),
        _Internal::robot_config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateRobotPartRequest)
  return target;
}

size_t UpdateRobotPartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateRobotPartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct robot_config = 3 [json_name = "robotConfig"];
  if (this->_internal_has_robot_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRobotPartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRobotPartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRobotPartRequest::GetClassData() const { return &_class_data_; }

void UpdateRobotPartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRobotPartRequest *>(to)->MergeFrom(
      static_cast<const UpdateRobotPartRequest &>(from));
}


void UpdateRobotPartRequest::MergeFrom(const UpdateRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateRobotPartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_robot_config()) {
    _internal_mutable_robot_config()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_robot_config());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRobotPartRequest::CopyFrom(const UpdateRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateRobotPartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRobotPartRequest::IsInitialized() const {
  return true;
}

void UpdateRobotPartRequest::InternalSwap(UpdateRobotPartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(robot_config_, other->robot_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRobotPartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[36]);
}

// ===================================================================

class UpdateRobotPartResponse::_Internal {
 public:
  static const ::viam::app::v1::RobotPart& part(const UpdateRobotPartResponse* msg);
};

const ::viam::app::v1::RobotPart&
UpdateRobotPartResponse::_Internal::part(const UpdateRobotPartResponse* msg) {
  return *msg->part_;
}
UpdateRobotPartResponse::UpdateRobotPartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRobotPartResponse)
}
UpdateRobotPartResponse::UpdateRobotPartResponse(const UpdateRobotPartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_part()) {
    part_ = new ::viam::app::v1::RobotPart(*from.part_);
  } else {
    part_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRobotPartResponse)
}

inline void UpdateRobotPartResponse::SharedCtor() {
part_ = nullptr;
}

UpdateRobotPartResponse::~UpdateRobotPartResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateRobotPartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRobotPartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete part_;
}

void UpdateRobotPartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRobotPartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateRobotPartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && part_ != nullptr) {
    delete part_;
  }
  part_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRobotPartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_part(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRobotPartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateRobotPartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::part(this),
        _Internal::part(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateRobotPartResponse)
  return target;
}

size_t UpdateRobotPartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateRobotPartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *part_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRobotPartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRobotPartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRobotPartResponse::GetClassData() const { return &_class_data_; }

void UpdateRobotPartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRobotPartResponse *>(to)->MergeFrom(
      static_cast<const UpdateRobotPartResponse &>(from));
}


void UpdateRobotPartResponse::MergeFrom(const UpdateRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateRobotPartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_part()) {
    _internal_mutable_part()->::viam::app::v1::RobotPart::MergeFrom(from._internal_part());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRobotPartResponse::CopyFrom(const UpdateRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateRobotPartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRobotPartResponse::IsInitialized() const {
  return true;
}

void UpdateRobotPartResponse::InternalSwap(UpdateRobotPartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(part_, other->part_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRobotPartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[37]);
}

// ===================================================================

class NewRobotPartRequest::_Internal {
 public:
};

NewRobotPartRequest::NewRobotPartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.NewRobotPartRequest)
}
NewRobotPartRequest::NewRobotPartRequest(const NewRobotPartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  robot_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    robot_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_robot_id().empty()) {
    robot_id_.Set(from._internal_robot_id(), 
      GetArenaForAllocation());
  }
  part_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_name().empty()) {
    part_name_.Set(from._internal_part_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.NewRobotPartRequest)
}

inline void NewRobotPartRequest::SharedCtor() {
robot_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  robot_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
part_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewRobotPartRequest::~NewRobotPartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.NewRobotPartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewRobotPartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  robot_id_.Destroy();
  part_name_.Destroy();
}

void NewRobotPartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewRobotPartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.NewRobotPartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robot_id_.ClearToEmpty();
  part_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewRobotPartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string robot_id = 1 [json_name = "robotId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_robot_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotPartRequest.robot_id"));
        } else
          goto handle_unusual;
        continue;
      // string part_name = 2 [json_name = "partName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_part_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotPartRequest.part_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewRobotPartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.NewRobotPartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_robot_id().data(), static_cast<int>(this->_internal_robot_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotPartRequest.robot_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_robot_id(), target);
  }

  // string part_name = 2 [json_name = "partName"];
  if (!this->_internal_part_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_name().data(), static_cast<int>(this->_internal_part_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotPartRequest.part_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_part_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.NewRobotPartRequest)
  return target;
}

size_t NewRobotPartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.NewRobotPartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string robot_id = 1 [json_name = "robotId"];
  if (!this->_internal_robot_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_robot_id());
  }

  // string part_name = 2 [json_name = "partName"];
  if (!this->_internal_part_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewRobotPartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NewRobotPartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewRobotPartRequest::GetClassData() const { return &_class_data_; }

void NewRobotPartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NewRobotPartRequest *>(to)->MergeFrom(
      static_cast<const NewRobotPartRequest &>(from));
}


void NewRobotPartRequest::MergeFrom(const NewRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.NewRobotPartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_robot_id().empty()) {
    _internal_set_robot_id(from._internal_robot_id());
  }
  if (!from._internal_part_name().empty()) {
    _internal_set_part_name(from._internal_part_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewRobotPartRequest::CopyFrom(const NewRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.NewRobotPartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewRobotPartRequest::IsInitialized() const {
  return true;
}

void NewRobotPartRequest::InternalSwap(NewRobotPartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &robot_id_, lhs_arena,
      &other->robot_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_name_, lhs_arena,
      &other->part_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NewRobotPartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[38]);
}

// ===================================================================

class NewRobotPartResponse::_Internal {
 public:
};

NewRobotPartResponse::NewRobotPartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.NewRobotPartResponse)
}
NewRobotPartResponse::NewRobotPartResponse(const NewRobotPartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.NewRobotPartResponse)
}

inline void NewRobotPartResponse::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewRobotPartResponse::~NewRobotPartResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.NewRobotPartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewRobotPartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void NewRobotPartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewRobotPartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.NewRobotPartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewRobotPartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotPartResponse.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewRobotPartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.NewRobotPartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotPartResponse.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.NewRobotPartResponse)
  return target;
}

size_t NewRobotPartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.NewRobotPartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewRobotPartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NewRobotPartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewRobotPartResponse::GetClassData() const { return &_class_data_; }

void NewRobotPartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NewRobotPartResponse *>(to)->MergeFrom(
      static_cast<const NewRobotPartResponse &>(from));
}


void NewRobotPartResponse::MergeFrom(const NewRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.NewRobotPartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewRobotPartResponse::CopyFrom(const NewRobotPartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.NewRobotPartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewRobotPartResponse::IsInitialized() const {
  return true;
}

void NewRobotPartResponse::InternalSwap(NewRobotPartResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NewRobotPartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[39]);
}

// ===================================================================

class DeleteRobotPartRequest::_Internal {
 public:
};

DeleteRobotPartRequest::DeleteRobotPartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotPartRequest)
}
DeleteRobotPartRequest::DeleteRobotPartRequest(const DeleteRobotPartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotPartRequest)
}

inline void DeleteRobotPartRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRobotPartRequest::~DeleteRobotPartRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteRobotPartRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRobotPartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void DeleteRobotPartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRobotPartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteRobotPartRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRobotPartRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteRobotPartRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRobotPartRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteRobotPartRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteRobotPartRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteRobotPartRequest)
  return target;
}

size_t DeleteRobotPartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteRobotPartRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotPartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRobotPartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotPartRequest::GetClassData() const { return &_class_data_; }

void DeleteRobotPartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteRobotPartRequest *>(to)->MergeFrom(
      static_cast<const DeleteRobotPartRequest &>(from));
}


void DeleteRobotPartRequest::MergeFrom(const DeleteRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteRobotPartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRobotPartRequest::CopyFrom(const DeleteRobotPartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteRobotPartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRobotPartRequest::IsInitialized() const {
  return true;
}

void DeleteRobotPartRequest::InternalSwap(DeleteRobotPartRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotPartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[40]);
}

// ===================================================================

class DeleteRobotPartResponse::_Internal {
 public:
};

DeleteRobotPartResponse::DeleteRobotPartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotPartResponse)
}
DeleteRobotPartResponse::DeleteRobotPartResponse(const DeleteRobotPartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotPartResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotPartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotPartResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotPartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[41]);
}

// ===================================================================

class Fragment::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& fragment(const Fragment* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_on(const Fragment* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
Fragment::_Internal::fragment(const Fragment* msg) {
  return *msg->fragment_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Fragment::_Internal::created_on(const Fragment* msg) {
  return *msg->created_on_;
}
void Fragment::clear_fragment() {
  if (GetArenaForAllocation() == nullptr && fragment_ != nullptr) {
    delete fragment_;
  }
  fragment_ = nullptr;
}
void Fragment::clear_created_on() {
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
}
Fragment::Fragment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.Fragment)
}
Fragment::Fragment(const Fragment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  organization_owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    organization_owner_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_organization_owner().empty()) {
    organization_owner_.Set(from._internal_organization_owner(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_fragment()) {
    fragment_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.fragment_);
  } else {
    fragment_ = nullptr;
  }
  if (from._internal_has_created_on()) {
    created_on_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_on_);
  } else {
    created_on_ = nullptr;
  }
  public__ = from.public__;
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.Fragment)
}

inline void Fragment::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
organization_owner_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  organization_owner_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&fragment_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&public__) -
    reinterpret_cast<char*>(&fragment_)) + sizeof(public__));
}

Fragment::~Fragment() {
  // @@protoc_insertion_point(destructor:viam.app.v1.Fragment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Fragment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  organization_owner_.Destroy();
  if (this != internal_default_instance()) delete fragment_;
  if (this != internal_default_instance()) delete created_on_;
}

void Fragment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Fragment::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.Fragment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  organization_owner_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && fragment_ != nullptr) {
    delete fragment_;
  }
  fragment_ = nullptr;
  if (GetArenaForAllocation() == nullptr && created_on_ != nullptr) {
    delete created_on_;
  }
  created_on_ = nullptr;
  public__ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Fragment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Fragment.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Fragment.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct fragment = 3 [json_name = "fragment", (.tagger.v1.tags) = "bson:\"fragment\" json:\"fragment\""];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_fragment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string organization_owner = 4 [json_name = "organizationOwner", (.tagger.v1.tags) = "bson:\"organization_owner\" json:\"owner\""];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_organization_owner();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.Fragment.organization_owner"));
        } else
          goto handle_unusual;
        continue;
      // bool public = 5 [json_name = "public", (.tagger.v1.tags) = "bson:\"public\" json:\"public\""];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          public__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_on = 6 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_on(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Fragment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.Fragment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Fragment.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Fragment.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .google.protobuf.Struct fragment = 3 [json_name = "fragment", (.tagger.v1.tags) = "bson:\"fragment\" json:\"fragment\""];
  if (this->_internal_has_fragment()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::fragment(this),
        _Internal::fragment(this).GetCachedSize(), target, stream);
  }

  // string organization_owner = 4 [json_name = "organizationOwner", (.tagger.v1.tags) = "bson:\"organization_owner\" json:\"owner\""];
  if (!this->_internal_organization_owner().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization_owner().data(), static_cast<int>(this->_internal_organization_owner().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.Fragment.organization_owner");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_organization_owner(), target);
  }

  // bool public = 5 [json_name = "public", (.tagger.v1.tags) = "bson:\"public\" json:\"public\""];
  if (this->_internal_public_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_public_(), target);
  }

  // .google.protobuf.Timestamp created_on = 6 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::created_on(this),
        _Internal::created_on(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.Fragment)
  return target;
}

size_t Fragment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.Fragment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id", (.tagger.v1.tags) = "bson:\"_id\" json:\"id,omitempty\""];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name", (.tagger.v1.tags) = "bson:\"name\" json:\"name\""];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string organization_owner = 4 [json_name = "organizationOwner", (.tagger.v1.tags) = "bson:\"organization_owner\" json:\"owner\""];
  if (!this->_internal_organization_owner().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization_owner());
  }

  // .google.protobuf.Struct fragment = 3 [json_name = "fragment", (.tagger.v1.tags) = "bson:\"fragment\" json:\"fragment\""];
  if (this->_internal_has_fragment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fragment_);
  }

  // .google.protobuf.Timestamp created_on = 6 [json_name = "createdOn", (.tagger.v1.tags) = "bson:\"created_on\""];
  if (this->_internal_has_created_on()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_on_);
  }

  // bool public = 5 [json_name = "public", (.tagger.v1.tags) = "bson:\"public\" json:\"public\""];
  if (this->_internal_public_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Fragment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Fragment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Fragment::GetClassData() const { return &_class_data_; }

void Fragment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Fragment *>(to)->MergeFrom(
      static_cast<const Fragment &>(from));
}


void Fragment::MergeFrom(const Fragment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.Fragment)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_organization_owner().empty()) {
    _internal_set_organization_owner(from._internal_organization_owner());
  }
  if (from._internal_has_fragment()) {
    _internal_mutable_fragment()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_fragment());
  }
  if (from._internal_has_created_on()) {
    _internal_mutable_created_on()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_on());
  }
  if (from._internal_public_() != 0) {
    _internal_set_public_(from._internal_public_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Fragment::CopyFrom(const Fragment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.Fragment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fragment::IsInitialized() const {
  return true;
}

void Fragment::InternalSwap(Fragment* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &organization_owner_, lhs_arena,
      &other->organization_owner_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Fragment, public__)
      + sizeof(Fragment::public__)
      - PROTOBUF_FIELD_OFFSET(Fragment, fragment_)>(
          reinterpret_cast<char*>(&fragment_),
          reinterpret_cast<char*>(&other->fragment_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Fragment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[42]);
}

// ===================================================================

class FindRobotsRequest::_Internal {
 public:
};

FindRobotsRequest::FindRobotsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.FindRobotsRequest)
}
FindRobotsRequest::FindRobotsRequest(const FindRobotsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location_id().empty()) {
    location_id_.Set(from._internal_location_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.FindRobotsRequest)
}

inline void FindRobotsRequest::SharedCtor() {
location_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindRobotsRequest::~FindRobotsRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.FindRobotsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindRobotsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  location_id_.Destroy();
}

void FindRobotsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FindRobotsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.FindRobotsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindRobotsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location_id = 1 [json_name = "locationId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.FindRobotsRequest.location_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindRobotsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.FindRobotsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location_id().data(), static_cast<int>(this->_internal_location_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.FindRobotsRequest.location_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.FindRobotsRequest)
  return target;
}

size_t FindRobotsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.FindRobotsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location_id = 1 [json_name = "locationId"];
  if (!this->_internal_location_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindRobotsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FindRobotsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindRobotsRequest::GetClassData() const { return &_class_data_; }

void FindRobotsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FindRobotsRequest *>(to)->MergeFrom(
      static_cast<const FindRobotsRequest &>(from));
}


void FindRobotsRequest::MergeFrom(const FindRobotsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.FindRobotsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location_id().empty()) {
    _internal_set_location_id(from._internal_location_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindRobotsRequest::CopyFrom(const FindRobotsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.FindRobotsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindRobotsRequest::IsInitialized() const {
  return true;
}

void FindRobotsRequest::InternalSwap(FindRobotsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_id_, lhs_arena,
      &other->location_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FindRobotsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[43]);
}

// ===================================================================

class FindRobotsResponse::_Internal {
 public:
};

FindRobotsResponse::FindRobotsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  robots_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.FindRobotsResponse)
}
FindRobotsResponse::FindRobotsResponse(const FindRobotsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      robots_(from.robots_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.FindRobotsResponse)
}

inline void FindRobotsResponse::SharedCtor() {
}

FindRobotsResponse::~FindRobotsResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.FindRobotsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindRobotsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FindRobotsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FindRobotsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.FindRobotsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  robots_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindRobotsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.app.v1.Robot robots = 1 [json_name = "robots"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_robots(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindRobotsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.FindRobotsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.app.v1.Robot robots = 1 [json_name = "robots"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_robots_size()); i < n; i++) {
    const auto& repfield = this->_internal_robots(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.FindRobotsResponse)
  return target;
}

size_t FindRobotsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.FindRobotsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.app.v1.Robot robots = 1 [json_name = "robots"];
  total_size += 1UL * this->_internal_robots_size();
  for (const auto& msg : this->robots_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindRobotsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FindRobotsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindRobotsResponse::GetClassData() const { return &_class_data_; }

void FindRobotsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FindRobotsResponse *>(to)->MergeFrom(
      static_cast<const FindRobotsResponse &>(from));
}


void FindRobotsResponse::MergeFrom(const FindRobotsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.FindRobotsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  robots_.MergeFrom(from.robots_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindRobotsResponse::CopyFrom(const FindRobotsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.FindRobotsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindRobotsResponse::IsInitialized() const {
  return true;
}

void FindRobotsResponse::InternalSwap(FindRobotsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  robots_.InternalSwap(&other->robots_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FindRobotsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[44]);
}

// ===================================================================

class NewRobotRequest::_Internal {
 public:
};

NewRobotRequest::NewRobotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.NewRobotRequest)
}
NewRobotRequest::NewRobotRequest(const NewRobotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    location_.Set(from._internal_location(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.NewRobotRequest)
}

inline void NewRobotRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewRobotRequest::~NewRobotRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.NewRobotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewRobotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  location_.Destroy();
}

void NewRobotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewRobotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.NewRobotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  location_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewRobotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string location = 2 [json_name = "location"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotRequest.location"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewRobotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.NewRobotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string location = 2 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotRequest.location");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_location(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.NewRobotRequest)
  return target;
}

size_t NewRobotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.NewRobotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string location = 2 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewRobotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NewRobotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewRobotRequest::GetClassData() const { return &_class_data_; }

void NewRobotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NewRobotRequest *>(to)->MergeFrom(
      static_cast<const NewRobotRequest &>(from));
}


void NewRobotRequest::MergeFrom(const NewRobotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.NewRobotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_location().empty()) {
    _internal_set_location(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewRobotRequest::CopyFrom(const NewRobotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.NewRobotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewRobotRequest::IsInitialized() const {
  return true;
}

void NewRobotRequest::InternalSwap(NewRobotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_, lhs_arena,
      &other->location_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NewRobotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[45]);
}

// ===================================================================

class NewRobotResponse::_Internal {
 public:
};

NewRobotResponse::NewRobotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.NewRobotResponse)
}
NewRobotResponse::NewRobotResponse(const NewRobotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.NewRobotResponse)
}

inline void NewRobotResponse::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NewRobotResponse::~NewRobotResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.NewRobotResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NewRobotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void NewRobotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NewRobotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.NewRobotResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NewRobotResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.NewRobotResponse.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NewRobotResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.NewRobotResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.NewRobotResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.NewRobotResponse)
  return target;
}

size_t NewRobotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.NewRobotResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewRobotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NewRobotResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewRobotResponse::GetClassData() const { return &_class_data_; }

void NewRobotResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NewRobotResponse *>(to)->MergeFrom(
      static_cast<const NewRobotResponse &>(from));
}


void NewRobotResponse::MergeFrom(const NewRobotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.NewRobotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NewRobotResponse::CopyFrom(const NewRobotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.NewRobotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewRobotResponse::IsInitialized() const {
  return true;
}

void NewRobotResponse::InternalSwap(NewRobotResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata NewRobotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[46]);
}

// ===================================================================

class UpdateRobotRequest::_Internal {
 public:
};

UpdateRobotRequest::UpdateRobotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRobotRequest)
}
UpdateRobotRequest::UpdateRobotRequest(const UpdateRobotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    location_.Set(from._internal_location(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRobotRequest)
}

inline void UpdateRobotRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
location_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  location_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateRobotRequest::~UpdateRobotRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateRobotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRobotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  name_.Destroy();
  location_.Destroy();
}

void UpdateRobotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRobotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateRobotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  name_.ClearToEmpty();
  location_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRobotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2 [json_name = "name"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string location = 3 [json_name = "location"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.UpdateRobotRequest.location"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRobotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateRobotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string location = 3 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.UpdateRobotRequest.location");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_location(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateRobotRequest)
  return target;
}

size_t UpdateRobotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateRobotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string location = 3 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRobotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRobotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRobotRequest::GetClassData() const { return &_class_data_; }

void UpdateRobotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRobotRequest *>(to)->MergeFrom(
      static_cast<const UpdateRobotRequest &>(from));
}


void UpdateRobotRequest::MergeFrom(const UpdateRobotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateRobotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_location().empty()) {
    _internal_set_location(from._internal_location());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRobotRequest::CopyFrom(const UpdateRobotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateRobotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRobotRequest::IsInitialized() const {
  return true;
}

void UpdateRobotRequest::InternalSwap(UpdateRobotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &location_, lhs_arena,
      &other->location_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRobotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[47]);
}

// ===================================================================

class UpdateRobotResponse::_Internal {
 public:
  static const ::viam::app::v1::Robot& robot(const UpdateRobotResponse* msg);
};

const ::viam::app::v1::Robot&
UpdateRobotResponse::_Internal::robot(const UpdateRobotResponse* msg) {
  return *msg->robot_;
}
UpdateRobotResponse::UpdateRobotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.UpdateRobotResponse)
}
UpdateRobotResponse::UpdateRobotResponse(const UpdateRobotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_robot()) {
    robot_ = new ::viam::app::v1::Robot(*from.robot_);
  } else {
    robot_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.UpdateRobotResponse)
}

inline void UpdateRobotResponse::SharedCtor() {
robot_ = nullptr;
}

UpdateRobotResponse::~UpdateRobotResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.UpdateRobotResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRobotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete robot_;
}

void UpdateRobotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRobotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.UpdateRobotResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && robot_ != nullptr) {
    delete robot_;
  }
  robot_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRobotResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRobotResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.UpdateRobotResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
  if (this->_internal_has_robot()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::robot(this),
        _Internal::robot(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.UpdateRobotResponse)
  return target;
}

size_t UpdateRobotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.UpdateRobotResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.Robot robot = 1 [json_name = "robot"];
  if (this->_internal_has_robot()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRobotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRobotResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRobotResponse::GetClassData() const { return &_class_data_; }

void UpdateRobotResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRobotResponse *>(to)->MergeFrom(
      static_cast<const UpdateRobotResponse &>(from));
}


void UpdateRobotResponse::MergeFrom(const UpdateRobotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.UpdateRobotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_robot()) {
    _internal_mutable_robot()->::viam::app::v1::Robot::MergeFrom(from._internal_robot());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRobotResponse::CopyFrom(const UpdateRobotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.UpdateRobotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRobotResponse::IsInitialized() const {
  return true;
}

void UpdateRobotResponse::InternalSwap(UpdateRobotResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(robot_, other->robot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRobotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[48]);
}

// ===================================================================

class DeleteRobotRequest::_Internal {
 public:
};

DeleteRobotRequest::DeleteRobotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotRequest)
}
DeleteRobotRequest::DeleteRobotRequest(const DeleteRobotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotRequest)
}

inline void DeleteRobotRequest::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRobotRequest::~DeleteRobotRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteRobotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRobotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
}

void DeleteRobotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRobotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteRobotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRobotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteRobotRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRobotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteRobotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteRobotRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteRobotRequest)
  return target;
}

size_t DeleteRobotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteRobotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRobotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotRequest::GetClassData() const { return &_class_data_; }

void DeleteRobotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteRobotRequest *>(to)->MergeFrom(
      static_cast<const DeleteRobotRequest &>(from));
}


void DeleteRobotRequest::MergeFrom(const DeleteRobotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteRobotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRobotRequest::CopyFrom(const DeleteRobotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteRobotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRobotRequest::IsInitialized() const {
  return true;
}

void DeleteRobotRequest::InternalSwap(DeleteRobotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[49]);
}

// ===================================================================

class DeleteRobotResponse::_Internal {
 public:
};

DeleteRobotResponse::DeleteRobotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotResponse)
}
DeleteRobotResponse::DeleteRobotResponse(const DeleteRobotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[50]);
}

// ===================================================================

class MarkPartAsMainRequest::_Internal {
 public:
};

MarkPartAsMainRequest::MarkPartAsMainRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.MarkPartAsMainRequest)
}
MarkPartAsMainRequest::MarkPartAsMainRequest(const MarkPartAsMainRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.MarkPartAsMainRequest)
}

inline void MarkPartAsMainRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MarkPartAsMainRequest::~MarkPartAsMainRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.MarkPartAsMainRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MarkPartAsMainRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void MarkPartAsMainRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MarkPartAsMainRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.MarkPartAsMainRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MarkPartAsMainRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.MarkPartAsMainRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MarkPartAsMainRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.MarkPartAsMainRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.MarkPartAsMainRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.MarkPartAsMainRequest)
  return target;
}

size_t MarkPartAsMainRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.MarkPartAsMainRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MarkPartAsMainRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MarkPartAsMainRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MarkPartAsMainRequest::GetClassData() const { return &_class_data_; }

void MarkPartAsMainRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MarkPartAsMainRequest *>(to)->MergeFrom(
      static_cast<const MarkPartAsMainRequest &>(from));
}


void MarkPartAsMainRequest::MergeFrom(const MarkPartAsMainRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.MarkPartAsMainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MarkPartAsMainRequest::CopyFrom(const MarkPartAsMainRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.MarkPartAsMainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkPartAsMainRequest::IsInitialized() const {
  return true;
}

void MarkPartAsMainRequest::InternalSwap(MarkPartAsMainRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MarkPartAsMainRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[51]);
}

// ===================================================================

class MarkPartAsMainResponse::_Internal {
 public:
};

MarkPartAsMainResponse::MarkPartAsMainResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.MarkPartAsMainResponse)
}
MarkPartAsMainResponse::MarkPartAsMainResponse(const MarkPartAsMainResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.MarkPartAsMainResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MarkPartAsMainResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MarkPartAsMainResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MarkPartAsMainResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[52]);
}

// ===================================================================

class CreateRobotPartSecretRequest::_Internal {
 public:
};

CreateRobotPartSecretRequest::CreateRobotPartSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateRobotPartSecretRequest)
}
CreateRobotPartSecretRequest::CreateRobotPartSecretRequest(const CreateRobotPartSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateRobotPartSecretRequest)
}

inline void CreateRobotPartSecretRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateRobotPartSecretRequest::~CreateRobotPartSecretRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateRobotPartSecretRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateRobotPartSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
}

void CreateRobotPartSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRobotPartSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateRobotPartSecretRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRobotPartSecretRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.CreateRobotPartSecretRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateRobotPartSecretRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateRobotPartSecretRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.CreateRobotPartSecretRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateRobotPartSecretRequest)
  return target;
}

size_t CreateRobotPartSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateRobotPartSecretRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRobotPartSecretRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateRobotPartSecretRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRobotPartSecretRequest::GetClassData() const { return &_class_data_; }

void CreateRobotPartSecretRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateRobotPartSecretRequest *>(to)->MergeFrom(
      static_cast<const CreateRobotPartSecretRequest &>(from));
}


void CreateRobotPartSecretRequest::MergeFrom(const CreateRobotPartSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateRobotPartSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRobotPartSecretRequest::CopyFrom(const CreateRobotPartSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateRobotPartSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRobotPartSecretRequest::IsInitialized() const {
  return true;
}

void CreateRobotPartSecretRequest::InternalSwap(CreateRobotPartSecretRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRobotPartSecretRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[53]);
}

// ===================================================================

class CreateRobotPartSecretResponse::_Internal {
 public:
  static const ::viam::app::v1::RobotPart& part(const CreateRobotPartSecretResponse* msg);
};

const ::viam::app::v1::RobotPart&
CreateRobotPartSecretResponse::_Internal::part(const CreateRobotPartSecretResponse* msg) {
  return *msg->part_;
}
CreateRobotPartSecretResponse::CreateRobotPartSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.CreateRobotPartSecretResponse)
}
CreateRobotPartSecretResponse::CreateRobotPartSecretResponse(const CreateRobotPartSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_part()) {
    part_ = new ::viam::app::v1::RobotPart(*from.part_);
  } else {
    part_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.CreateRobotPartSecretResponse)
}

inline void CreateRobotPartSecretResponse::SharedCtor() {
part_ = nullptr;
}

CreateRobotPartSecretResponse::~CreateRobotPartSecretResponse() {
  // @@protoc_insertion_point(destructor:viam.app.v1.CreateRobotPartSecretResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateRobotPartSecretResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete part_;
}

void CreateRobotPartSecretResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateRobotPartSecretResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.CreateRobotPartSecretResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && part_ != nullptr) {
    delete part_;
  }
  part_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateRobotPartSecretResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_part(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateRobotPartSecretResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.CreateRobotPartSecretResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::part(this),
        _Internal::part(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.CreateRobotPartSecretResponse)
  return target;
}

size_t CreateRobotPartSecretResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.CreateRobotPartSecretResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.v1.RobotPart part = 1 [json_name = "part"];
  if (this->_internal_has_part()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *part_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateRobotPartSecretResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreateRobotPartSecretResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateRobotPartSecretResponse::GetClassData() const { return &_class_data_; }

void CreateRobotPartSecretResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreateRobotPartSecretResponse *>(to)->MergeFrom(
      static_cast<const CreateRobotPartSecretResponse &>(from));
}


void CreateRobotPartSecretResponse::MergeFrom(const CreateRobotPartSecretResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.CreateRobotPartSecretResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_part()) {
    _internal_mutable_part()->::viam::app::v1::RobotPart::MergeFrom(from._internal_part());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateRobotPartSecretResponse::CopyFrom(const CreateRobotPartSecretResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.CreateRobotPartSecretResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRobotPartSecretResponse::IsInitialized() const {
  return true;
}

void CreateRobotPartSecretResponse::InternalSwap(CreateRobotPartSecretResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(part_, other->part_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateRobotPartSecretResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[54]);
}

// ===================================================================

class DeleteRobotPartSecretRequest::_Internal {
 public:
};

DeleteRobotPartSecretRequest::DeleteRobotPartSecretRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotPartSecretRequest)
}
DeleteRobotPartSecretRequest::DeleteRobotPartSecretRequest(const DeleteRobotPartSecretRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  part_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    part_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_part_id().empty()) {
    part_id_.Set(from._internal_part_id(), 
      GetArenaForAllocation());
  }
  secret_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    secret_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_secret_id().empty()) {
    secret_id_.Set(from._internal_secret_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotPartSecretRequest)
}

inline void DeleteRobotPartSecretRequest::SharedCtor() {
part_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  part_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
secret_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  secret_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRobotPartSecretRequest::~DeleteRobotPartSecretRequest() {
  // @@protoc_insertion_point(destructor:viam.app.v1.DeleteRobotPartSecretRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRobotPartSecretRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  part_id_.Destroy();
  secret_id_.Destroy();
}

void DeleteRobotPartSecretRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteRobotPartSecretRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.v1.DeleteRobotPartSecretRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  part_id_.ClearToEmpty();
  secret_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRobotPartSecretRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string part_id = 1 [json_name = "partId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_part_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteRobotPartSecretRequest.part_id"));
        } else
          goto handle_unusual;
        continue;
      // string secret_id = 2 [json_name = "secretId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_secret_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.v1.DeleteRobotPartSecretRequest.secret_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRobotPartSecretRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.v1.DeleteRobotPartSecretRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_part_id().data(), static_cast<int>(this->_internal_part_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteRobotPartSecretRequest.part_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_part_id(), target);
  }

  // string secret_id = 2 [json_name = "secretId"];
  if (!this->_internal_secret_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secret_id().data(), static_cast<int>(this->_internal_secret_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.v1.DeleteRobotPartSecretRequest.secret_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_secret_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.v1.DeleteRobotPartSecretRequest)
  return target;
}

size_t DeleteRobotPartSecretRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.v1.DeleteRobotPartSecretRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string part_id = 1 [json_name = "partId"];
  if (!this->_internal_part_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_part_id());
  }

  // string secret_id = 2 [json_name = "secretId"];
  if (!this->_internal_secret_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secret_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotPartSecretRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeleteRobotPartSecretRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotPartSecretRequest::GetClassData() const { return &_class_data_; }

void DeleteRobotPartSecretRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeleteRobotPartSecretRequest *>(to)->MergeFrom(
      static_cast<const DeleteRobotPartSecretRequest &>(from));
}


void DeleteRobotPartSecretRequest::MergeFrom(const DeleteRobotPartSecretRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.app.v1.DeleteRobotPartSecretRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_part_id().empty()) {
    _internal_set_part_id(from._internal_part_id());
  }
  if (!from._internal_secret_id().empty()) {
    _internal_set_secret_id(from._internal_secret_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRobotPartSecretRequest::CopyFrom(const DeleteRobotPartSecretRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.v1.DeleteRobotPartSecretRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRobotPartSecretRequest::IsInitialized() const {
  return true;
}

void DeleteRobotPartSecretRequest::InternalSwap(DeleteRobotPartSecretRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &part_id_, lhs_arena,
      &other->part_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &secret_id_, lhs_arena,
      &other->secret_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotPartSecretRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[55]);
}

// ===================================================================

class DeleteRobotPartSecretResponse::_Internal {
 public:
};

DeleteRobotPartSecretResponse::DeleteRobotPartSecretResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.app.v1.DeleteRobotPartSecretResponse)
}
DeleteRobotPartSecretResponse::DeleteRobotPartSecretResponse(const DeleteRobotPartSecretResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.app.v1.DeleteRobotPartSecretResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRobotPartSecretResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRobotPartSecretResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeleteRobotPartSecretResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fv1_2fapp_2eproto_getter, &descriptor_table_app_2fv1_2fapp_2eproto_once,
      file_level_metadata_app_2fv1_2fapp_2eproto[56]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace app
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::app::v1::Robot*
Arena::CreateMaybeMessage< ::viam::app::v1::Robot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Robot >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RobotPart*
Arena::CreateMaybeMessage< ::viam::app::v1::RobotPart >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RobotPart >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::RobotPartHistoryEntry*
Arena::CreateMaybeMessage< ::viam::app::v1::RobotPartHistoryEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::RobotPartHistoryEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Organization*
Arena::CreateMaybeMessage< ::viam::app::v1::Organization >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Organization >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListOrganizationsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListOrganizationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListOrganizationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Location*
Arena::CreateMaybeMessage< ::viam::app::v1::Location >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Location >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListLocationsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ListLocationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListLocationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ShareLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::ShareLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ShareLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ShareLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ShareLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ShareLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UnshareLocationRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UnshareLocationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UnshareLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UnshareLocationResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UnshareLocationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UnshareLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::ListLocationsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::ListLocationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::ListLocationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateLocationSecretRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateLocationSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateLocationSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateLocationSecretResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateLocationSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateLocationSecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteLocationSecretRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteLocationSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteLocationSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteLocationSecretResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteLocationSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteLocationSecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::LocationAuth*
Arena::CreateMaybeMessage< ::viam::app::v1::LocationAuth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::LocationAuth >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::SharedSecret*
Arena::CreateMaybeMessage< ::viam::app::v1::SharedSecret >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::SharedSecret >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::LocationAuthRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::LocationAuthRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::LocationAuthRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::LocationAuthResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::LocationAuthResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::LocationAuthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartLogsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartLogsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartLogsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::LogEntry*
Arena::CreateMaybeMessage< ::viam::app::v1::LogEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::LogEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartLogsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartLogsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartLogsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::TailRobotPartLogsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::TailRobotPartLogsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::TailRobotPartLogsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::TailRobotPartLogsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::TailRobotPartLogsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::TailRobotPartLogsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartHistoryRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartHistoryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartHistoryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::GetRobotPartHistoryResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::GetRobotPartHistoryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::GetRobotPartHistoryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRobotPartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRobotPartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRobotPartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRobotPartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRobotPartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRobotPartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::NewRobotPartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::NewRobotPartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::NewRobotPartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::NewRobotPartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::NewRobotPartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::NewRobotPartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotPartRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotPartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotPartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotPartResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotPartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotPartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::Fragment*
Arena::CreateMaybeMessage< ::viam::app::v1::Fragment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::Fragment >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::FindRobotsRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::FindRobotsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::FindRobotsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::FindRobotsResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::FindRobotsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::FindRobotsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::NewRobotRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::NewRobotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::NewRobotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::NewRobotResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::NewRobotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::NewRobotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRobotRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRobotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRobotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::UpdateRobotResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::UpdateRobotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::UpdateRobotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::MarkPartAsMainRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::MarkPartAsMainRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::MarkPartAsMainRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::MarkPartAsMainResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::MarkPartAsMainResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::MarkPartAsMainResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateRobotPartSecretRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateRobotPartSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateRobotPartSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::CreateRobotPartSecretResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::CreateRobotPartSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::CreateRobotPartSecretResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotPartSecretRequest*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotPartSecretRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotPartSecretRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::v1::DeleteRobotPartSecretResponse*
Arena::CreateMaybeMessage< ::viam::app::v1::DeleteRobotPartSecretResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::v1::DeleteRobotPartSecretResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
