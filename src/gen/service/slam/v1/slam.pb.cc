// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/slam/v1/slam.proto

#include "service/slam/v1/slam.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace service {
namespace slam {
namespace v1 {
PROTOBUF_CONSTEXPR GetPositionRequest::GetPositionRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetPositionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPositionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPositionRequestDefaultTypeInternal() {}
  union {
    GetPositionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPositionRequestDefaultTypeInternal _GetPositionRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPositionResponse::GetPositionResponse(
    ::_pbi::ConstantInitialized)
  : component_reference_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pose_(nullptr)
  , extra_(nullptr){}
struct GetPositionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPositionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPositionResponseDefaultTypeInternal() {}
  union {
    GetPositionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPositionResponseDefaultTypeInternal _GetPositionResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPointCloudMapRequest::GetPointCloudMapRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetPointCloudMapRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPointCloudMapRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPointCloudMapRequestDefaultTypeInternal() {}
  union {
    GetPointCloudMapRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPointCloudMapRequestDefaultTypeInternal _GetPointCloudMapRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPointCloudMapResponse::GetPointCloudMapResponse(
    ::_pbi::ConstantInitialized)
  : point_cloud_pcd_chunk_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetPointCloudMapResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPointCloudMapResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPointCloudMapResponseDefaultTypeInternal() {}
  union {
    GetPointCloudMapResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPointCloudMapResponseDefaultTypeInternal _GetPointCloudMapResponse_default_instance_;
PROTOBUF_CONSTEXPR GetInternalStateRequest::GetInternalStateRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetInternalStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInternalStateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInternalStateRequestDefaultTypeInternal() {}
  union {
    GetInternalStateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInternalStateRequestDefaultTypeInternal _GetInternalStateRequest_default_instance_;
PROTOBUF_CONSTEXPR GetInternalStateResponse::GetInternalStateResponse(
    ::_pbi::ConstantInitialized)
  : internal_state_chunk_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetInternalStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInternalStateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInternalStateResponseDefaultTypeInternal() {}
  union {
    GetInternalStateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInternalStateResponseDefaultTypeInternal _GetInternalStateResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPositionNewRequest::GetPositionNewRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetPositionNewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPositionNewRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPositionNewRequestDefaultTypeInternal() {}
  union {
    GetPositionNewRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPositionNewRequestDefaultTypeInternal _GetPositionNewRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPositionNewResponse::GetPositionNewResponse(
    ::_pbi::ConstantInitialized)
  : component_reference_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pose_(nullptr)
  , extra_(nullptr){}
struct GetPositionNewResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPositionNewResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPositionNewResponseDefaultTypeInternal() {}
  union {
    GetPositionNewResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPositionNewResponseDefaultTypeInternal _GetPositionNewResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPointCloudMapStreamRequest::GetPointCloudMapStreamRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetPointCloudMapStreamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPointCloudMapStreamRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPointCloudMapStreamRequestDefaultTypeInternal() {}
  union {
    GetPointCloudMapStreamRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPointCloudMapStreamRequestDefaultTypeInternal _GetPointCloudMapStreamRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPointCloudMapStreamResponse::GetPointCloudMapStreamResponse(
    ::_pbi::ConstantInitialized)
  : point_cloud_pcd_chunk_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetPointCloudMapStreamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPointCloudMapStreamResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPointCloudMapStreamResponseDefaultTypeInternal() {}
  union {
    GetPointCloudMapStreamResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPointCloudMapStreamResponseDefaultTypeInternal _GetPointCloudMapStreamResponse_default_instance_;
PROTOBUF_CONSTEXPR GetInternalStateStreamRequest::GetInternalStateStreamRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetInternalStateStreamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInternalStateStreamRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInternalStateStreamRequestDefaultTypeInternal() {}
  union {
    GetInternalStateStreamRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInternalStateStreamRequestDefaultTypeInternal _GetInternalStateStreamRequest_default_instance_;
PROTOBUF_CONSTEXPR GetInternalStateStreamResponse::GetInternalStateStreamResponse(
    ::_pbi::ConstantInitialized)
  : internal_state_chunk_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct GetInternalStateStreamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInternalStateStreamResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInternalStateStreamResponseDefaultTypeInternal() {}
  union {
    GetInternalStateStreamResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInternalStateStreamResponseDefaultTypeInternal _GetInternalStateStreamResponse_default_instance_;
}  // namespace v1
}  // namespace slam
}  // namespace service
}  // namespace viam
static ::_pb::Metadata file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[12];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_service_2fslam_2fv1_2fslam_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_service_2fslam_2fv1_2fslam_2eproto = nullptr;

const uint32_t TableStruct_service_2fslam_2fv1_2fslam_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionResponse, pose_),
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionResponse, component_reference_),
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionResponse, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapResponse, point_cloud_pcd_chunk_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetInternalStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetInternalStateRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetInternalStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetInternalStateResponse, internal_state_chunk_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionNewRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionNewRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionNewResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionNewResponse, pose_),
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionNewResponse, component_reference_),
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPositionNewResponse, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapStreamRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapStreamRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapStreamResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetPointCloudMapStreamResponse, point_cloud_pcd_chunk_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetInternalStateStreamRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetInternalStateStreamRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetInternalStateStreamResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::service::slam::v1::GetInternalStateStreamResponse, internal_state_chunk_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::service::slam::v1::GetPositionRequest)},
  { 7, -1, -1, sizeof(::viam::service::slam::v1::GetPositionResponse)},
  { 16, -1, -1, sizeof(::viam::service::slam::v1::GetPointCloudMapRequest)},
  { 23, -1, -1, sizeof(::viam::service::slam::v1::GetPointCloudMapResponse)},
  { 30, -1, -1, sizeof(::viam::service::slam::v1::GetInternalStateRequest)},
  { 37, -1, -1, sizeof(::viam::service::slam::v1::GetInternalStateResponse)},
  { 44, -1, -1, sizeof(::viam::service::slam::v1::GetPositionNewRequest)},
  { 51, -1, -1, sizeof(::viam::service::slam::v1::GetPositionNewResponse)},
  { 60, -1, -1, sizeof(::viam::service::slam::v1::GetPointCloudMapStreamRequest)},
  { 67, -1, -1, sizeof(::viam::service::slam::v1::GetPointCloudMapStreamResponse)},
  { 74, -1, -1, sizeof(::viam::service::slam::v1::GetInternalStateStreamRequest)},
  { 81, -1, -1, sizeof(::viam::service::slam::v1::GetInternalStateStreamResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::service::slam::v1::_GetPositionRequest_default_instance_._instance,
  &::viam::service::slam::v1::_GetPositionResponse_default_instance_._instance,
  &::viam::service::slam::v1::_GetPointCloudMapRequest_default_instance_._instance,
  &::viam::service::slam::v1::_GetPointCloudMapResponse_default_instance_._instance,
  &::viam::service::slam::v1::_GetInternalStateRequest_default_instance_._instance,
  &::viam::service::slam::v1::_GetInternalStateResponse_default_instance_._instance,
  &::viam::service::slam::v1::_GetPositionNewRequest_default_instance_._instance,
  &::viam::service::slam::v1::_GetPositionNewResponse_default_instance_._instance,
  &::viam::service::slam::v1::_GetPointCloudMapStreamRequest_default_instance_._instance,
  &::viam::service::slam::v1::_GetPointCloudMapStreamResponse_default_instance_._instance,
  &::viam::service::slam::v1::_GetInternalStateStreamRequest_default_instance_._instance,
  &::viam::service::slam::v1::_GetInternalStateStreamResponse_default_instance_._instance,
};

const char descriptor_table_protodef_service_2fslam_2fv1_2fslam_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032service/slam/v1/slam.proto\022\024viam.servi"
  "ce.slam.v1\032\026common/v1/common.proto\032\034goog"
  "le/api/annotations.proto\032\034google/protobu"
  "f/struct.proto\"(\n\022GetPositionRequest\022\022\n\004"
  "name\030\001 \001(\tR\004name\"\237\001\n\023GetPositionResponse"
  "\022(\n\004pose\030\001 \001(\0132\024.viam.common.v1.PoseR\004po"
  "se\022/\n\023component_reference\030\002 \001(\tR\022compone"
  "ntReference\022-\n\005extra\030c \001(\0132\027.google.prot"
  "obuf.StructR\005extra\"-\n\027GetPointCloudMapRe"
  "quest\022\022\n\004name\030\001 \001(\tR\004name\"M\n\030GetPointClo"
  "udMapResponse\0221\n\025point_cloud_pcd_chunk\030\001"
  " \001(\014R\022pointCloudPcdChunk\"-\n\027GetInternalS"
  "tateRequest\022\022\n\004name\030\001 \001(\tR\004name\"L\n\030GetIn"
  "ternalStateResponse\0220\n\024internal_state_ch"
  "unk\030\001 \001(\014R\022internalStateChunk\"/\n\025GetPosi"
  "tionNewRequest\022\022\n\004name\030\001 \001(\tR\004name:\002\030\001\"\246"
  "\001\n\026GetPositionNewResponse\022(\n\004pose\030\001 \001(\0132"
  "\024.viam.common.v1.PoseR\004pose\022/\n\023component"
  "_reference\030\002 \001(\tR\022componentReference\022-\n\005"
  "extra\030c \001(\0132\027.google.protobuf.StructR\005ex"
  "tra:\002\030\001\"7\n\035GetPointCloudMapStreamRequest"
  "\022\022\n\004name\030\001 \001(\tR\004name:\002\030\001\"W\n\036GetPointClou"
  "dMapStreamResponse\0221\n\025point_cloud_pcd_ch"
  "unk\030\001 \001(\014R\022pointCloudPcdChunk:\002\030\001\"7\n\035Get"
  "InternalStateStreamRequest\022\022\n\004name\030\001 \001(\t"
  "R\004name:\002\030\001\"V\n\036GetInternalStateStreamResp"
  "onse\0220\n\024internal_state_chunk\030\001 \001(\014R\022inte"
  "rnalStateChunk:\002\030\0012\313\t\n\013SLAMService\022\225\001\n\013G"
  "etPosition\022(.viam.service.slam.v1.GetPos"
  "itionRequest\032).viam.service.slam.v1.GetP"
  "ositionResponse\"1\202\323\344\223\002+\022)/viam/api/v1/se"
  "rvice/slam/{name}/position\022\255\001\n\020GetPointC"
  "loudMap\022-.viam.service.slam.v1.GetPointC"
  "loudMapRequest\032..viam.service.slam.v1.Ge"
  "tPointCloudMapResponse\"8\202\323\344\223\0022\0220/viam/ap"
  "i/v1/service/slam/{name}/point_cloud_map"
  "0\001\022\254\001\n\020GetInternalState\022-.viam.service.s"
  "lam.v1.GetInternalStateRequest\032..viam.se"
  "rvice.slam.v1.GetInternalStateResponse\"7"
  "\202\323\344\223\0021\022//viam/api/v1/service/slam/{name}"
  "/internal_state0\001\022\245\001\n\016GetPositionNew\022+.v"
  "iam.service.slam.v1.GetPositionNewReques"
  "t\032,.viam.service.slam.v1.GetPositionNewR"
  "esponse\"8\210\002\001\202\323\344\223\002/\022-/viam/api/v1/service"
  "/slam/{name}/position_new\022\311\001\n\026GetPointCl"
  "oudMapStream\0223.viam.service.slam.v1.GetP"
  "ointCloudMapStreamRequest\0324.viam.service"
  ".slam.v1.GetPointCloudMapStreamResponse\""
  "B\210\002\001\202\323\344\223\0029\0227/viam/api/v1/service/slam/{n"
  "ame}/point_cloud_map_stream0\001\022\310\001\n\026GetInt"
  "ernalStateStream\0223.viam.service.slam.v1."
  "GetInternalStateStreamRequest\0324.viam.ser"
  "vice.slam.v1.GetInternalStateStreamRespo"
  "nse\"A\210\002\001\202\323\344\223\0028\0226/viam/api/v1/service/sla"
  "m/{name}/internal_state_stream0\001\022\205\001\n\tDoC"
  "ommand\022 .viam.common.v1.DoCommandRequest"
  "\032!.viam.common.v1.DoCommandResponse\"3\202\323\344"
  "\223\002-\"+/viam/api/v1/service/slam/{name}/do"
  "_commandB;\n\030com.viam.service.slam.v1Z\037go"
  ".viam.com/api/service/slam/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_service_2fslam_2fv1_2fslam_2eproto_deps[3] = {
  &::descriptor_table_common_2fv1_2fcommon_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_service_2fslam_2fv1_2fslam_2eproto = {
    false, false, 2397, descriptor_table_protodef_service_2fslam_2fv1_2fslam_2eproto,
    "service/slam/v1/slam.proto",
    &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once, descriptor_table_service_2fslam_2fv1_2fslam_2eproto_deps, 3, 12,
    schemas, file_default_instances, TableStruct_service_2fslam_2fv1_2fslam_2eproto::offsets,
    file_level_metadata_service_2fslam_2fv1_2fslam_2eproto, file_level_enum_descriptors_service_2fslam_2fv1_2fslam_2eproto,
    file_level_service_descriptors_service_2fslam_2fv1_2fslam_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter() {
  return &descriptor_table_service_2fslam_2fv1_2fslam_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_service_2fslam_2fv1_2fslam_2eproto(&descriptor_table_service_2fslam_2fv1_2fslam_2eproto);
namespace viam {
namespace service {
namespace slam {
namespace v1 {

// ===================================================================

class GetPositionRequest::_Internal {
 public:
};

GetPositionRequest::GetPositionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPositionRequest)
}
GetPositionRequest::GetPositionRequest(const GetPositionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPositionRequest)
}

inline void GetPositionRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPositionRequest::~GetPositionRequest() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPositionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPositionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void GetPositionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPositionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPositionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPositionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.service.slam.v1.GetPositionRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPositionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPositionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.service.slam.v1.GetPositionRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPositionRequest)
  return target;
}

size_t GetPositionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPositionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPositionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPositionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPositionRequest::GetClassData() const { return &_class_data_; }

void GetPositionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPositionRequest *>(to)->MergeFrom(
      static_cast<const GetPositionRequest &>(from));
}


void GetPositionRequest::MergeFrom(const GetPositionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPositionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPositionRequest::CopyFrom(const GetPositionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPositionRequest::IsInitialized() const {
  return true;
}

void GetPositionRequest::InternalSwap(GetPositionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPositionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[0]);
}

// ===================================================================

class GetPositionResponse::_Internal {
 public:
  static const ::viam::common::v1::Pose& pose(const GetPositionResponse* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetPositionResponse* msg);
};

const ::viam::common::v1::Pose&
GetPositionResponse::_Internal::pose(const GetPositionResponse* msg) {
  return *msg->pose_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
GetPositionResponse::_Internal::extra(const GetPositionResponse* msg) {
  return *msg->extra_;
}
void GetPositionResponse::clear_pose() {
  if (GetArenaForAllocation() == nullptr && pose_ != nullptr) {
    delete pose_;
  }
  pose_ = nullptr;
}
void GetPositionResponse::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetPositionResponse::GetPositionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPositionResponse)
}
GetPositionResponse::GetPositionResponse(const GetPositionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_reference_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    component_reference_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_component_reference().empty()) {
    component_reference_.Set(from._internal_component_reference(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_pose()) {
    pose_ = new ::viam::common::v1::Pose(*from.pose_);
  } else {
    pose_ = nullptr;
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPositionResponse)
}

inline void GetPositionResponse::SharedCtor() {
component_reference_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  component_reference_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&pose_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&extra_) -
    reinterpret_cast<char*>(&pose_)) + sizeof(extra_));
}

GetPositionResponse::~GetPositionResponse() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPositionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPositionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  component_reference_.Destroy();
  if (this != internal_default_instance()) delete pose_;
  if (this != internal_default_instance()) delete extra_;
}

void GetPositionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPositionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPositionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_reference_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && pose_ != nullptr) {
    delete pose_;
  }
  pose_ = nullptr;
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPositionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.Pose pose = 1 [json_name = "pose"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pose(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string component_reference = 2 [json_name = "componentReference"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_component_reference();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.service.slam.v1.GetPositionResponse.component_reference"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPositionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPositionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.Pose pose = 1 [json_name = "pose"];
  if (this->_internal_has_pose()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pose(this),
        _Internal::pose(this).GetCachedSize(), target, stream);
  }

  // string component_reference = 2 [json_name = "componentReference"];
  if (!this->_internal_component_reference().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_component_reference().data(), static_cast<int>(this->_internal_component_reference().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.service.slam.v1.GetPositionResponse.component_reference");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_component_reference(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPositionResponse)
  return target;
}

size_t GetPositionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPositionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string component_reference = 2 [json_name = "componentReference"];
  if (!this->_internal_component_reference().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_component_reference());
  }

  // .viam.common.v1.Pose pose = 1 [json_name = "pose"];
  if (this->_internal_has_pose()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPositionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPositionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPositionResponse::GetClassData() const { return &_class_data_; }

void GetPositionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPositionResponse *>(to)->MergeFrom(
      static_cast<const GetPositionResponse &>(from));
}


void GetPositionResponse::MergeFrom(const GetPositionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPositionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_component_reference().empty()) {
    _internal_set_component_reference(from._internal_component_reference());
  }
  if (from._internal_has_pose()) {
    _internal_mutable_pose()->::viam::common::v1::Pose::MergeFrom(from._internal_pose());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPositionResponse::CopyFrom(const GetPositionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPositionResponse::IsInitialized() const {
  return true;
}

void GetPositionResponse::InternalSwap(GetPositionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &component_reference_, lhs_arena,
      &other->component_reference_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPositionResponse, extra_)
      + sizeof(GetPositionResponse::extra_)
      - PROTOBUF_FIELD_OFFSET(GetPositionResponse, pose_)>(
          reinterpret_cast<char*>(&pose_),
          reinterpret_cast<char*>(&other->pose_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPositionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[1]);
}

// ===================================================================

class GetPointCloudMapRequest::_Internal {
 public:
};

GetPointCloudMapRequest::GetPointCloudMapRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPointCloudMapRequest)
}
GetPointCloudMapRequest::GetPointCloudMapRequest(const GetPointCloudMapRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPointCloudMapRequest)
}

inline void GetPointCloudMapRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPointCloudMapRequest::~GetPointCloudMapRequest() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPointCloudMapRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPointCloudMapRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void GetPointCloudMapRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPointCloudMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPointCloudMapRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPointCloudMapRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.service.slam.v1.GetPointCloudMapRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPointCloudMapRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPointCloudMapRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.service.slam.v1.GetPointCloudMapRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPointCloudMapRequest)
  return target;
}

size_t GetPointCloudMapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPointCloudMapRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPointCloudMapRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPointCloudMapRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPointCloudMapRequest::GetClassData() const { return &_class_data_; }

void GetPointCloudMapRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPointCloudMapRequest *>(to)->MergeFrom(
      static_cast<const GetPointCloudMapRequest &>(from));
}


void GetPointCloudMapRequest::MergeFrom(const GetPointCloudMapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPointCloudMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPointCloudMapRequest::CopyFrom(const GetPointCloudMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPointCloudMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPointCloudMapRequest::IsInitialized() const {
  return true;
}

void GetPointCloudMapRequest::InternalSwap(GetPointCloudMapRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPointCloudMapRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[2]);
}

// ===================================================================

class GetPointCloudMapResponse::_Internal {
 public:
};

GetPointCloudMapResponse::GetPointCloudMapResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPointCloudMapResponse)
}
GetPointCloudMapResponse::GetPointCloudMapResponse(const GetPointCloudMapResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  point_cloud_pcd_chunk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    point_cloud_pcd_chunk_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_point_cloud_pcd_chunk().empty()) {
    point_cloud_pcd_chunk_.Set(from._internal_point_cloud_pcd_chunk(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPointCloudMapResponse)
}

inline void GetPointCloudMapResponse::SharedCtor() {
point_cloud_pcd_chunk_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  point_cloud_pcd_chunk_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPointCloudMapResponse::~GetPointCloudMapResponse() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPointCloudMapResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPointCloudMapResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  point_cloud_pcd_chunk_.Destroy();
}

void GetPointCloudMapResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPointCloudMapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPointCloudMapResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_cloud_pcd_chunk_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPointCloudMapResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes point_cloud_pcd_chunk = 1 [json_name = "pointCloudPcdChunk"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_point_cloud_pcd_chunk();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPointCloudMapResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPointCloudMapResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes point_cloud_pcd_chunk = 1 [json_name = "pointCloudPcdChunk"];
  if (!this->_internal_point_cloud_pcd_chunk().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_point_cloud_pcd_chunk(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPointCloudMapResponse)
  return target;
}

size_t GetPointCloudMapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPointCloudMapResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes point_cloud_pcd_chunk = 1 [json_name = "pointCloudPcdChunk"];
  if (!this->_internal_point_cloud_pcd_chunk().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_point_cloud_pcd_chunk());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPointCloudMapResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPointCloudMapResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPointCloudMapResponse::GetClassData() const { return &_class_data_; }

void GetPointCloudMapResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPointCloudMapResponse *>(to)->MergeFrom(
      static_cast<const GetPointCloudMapResponse &>(from));
}


void GetPointCloudMapResponse::MergeFrom(const GetPointCloudMapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPointCloudMapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_point_cloud_pcd_chunk().empty()) {
    _internal_set_point_cloud_pcd_chunk(from._internal_point_cloud_pcd_chunk());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPointCloudMapResponse::CopyFrom(const GetPointCloudMapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPointCloudMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPointCloudMapResponse::IsInitialized() const {
  return true;
}

void GetPointCloudMapResponse::InternalSwap(GetPointCloudMapResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &point_cloud_pcd_chunk_, lhs_arena,
      &other->point_cloud_pcd_chunk_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPointCloudMapResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[3]);
}

// ===================================================================

class GetInternalStateRequest::_Internal {
 public:
};

GetInternalStateRequest::GetInternalStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetInternalStateRequest)
}
GetInternalStateRequest::GetInternalStateRequest(const GetInternalStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetInternalStateRequest)
}

inline void GetInternalStateRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetInternalStateRequest::~GetInternalStateRequest() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetInternalStateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetInternalStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void GetInternalStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetInternalStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetInternalStateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInternalStateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.service.slam.v1.GetInternalStateRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetInternalStateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetInternalStateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.service.slam.v1.GetInternalStateRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetInternalStateRequest)
  return target;
}

size_t GetInternalStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetInternalStateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInternalStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetInternalStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInternalStateRequest::GetClassData() const { return &_class_data_; }

void GetInternalStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetInternalStateRequest *>(to)->MergeFrom(
      static_cast<const GetInternalStateRequest &>(from));
}


void GetInternalStateRequest::MergeFrom(const GetInternalStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetInternalStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInternalStateRequest::CopyFrom(const GetInternalStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetInternalStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInternalStateRequest::IsInitialized() const {
  return true;
}

void GetInternalStateRequest::InternalSwap(GetInternalStateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInternalStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[4]);
}

// ===================================================================

class GetInternalStateResponse::_Internal {
 public:
};

GetInternalStateResponse::GetInternalStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetInternalStateResponse)
}
GetInternalStateResponse::GetInternalStateResponse(const GetInternalStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  internal_state_chunk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    internal_state_chunk_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_internal_state_chunk().empty()) {
    internal_state_chunk_.Set(from._internal_internal_state_chunk(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetInternalStateResponse)
}

inline void GetInternalStateResponse::SharedCtor() {
internal_state_chunk_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  internal_state_chunk_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetInternalStateResponse::~GetInternalStateResponse() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetInternalStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetInternalStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  internal_state_chunk_.Destroy();
}

void GetInternalStateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetInternalStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetInternalStateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  internal_state_chunk_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInternalStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes internal_state_chunk = 1 [json_name = "internalStateChunk"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_internal_state_chunk();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetInternalStateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetInternalStateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes internal_state_chunk = 1 [json_name = "internalStateChunk"];
  if (!this->_internal_internal_state_chunk().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_internal_state_chunk(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetInternalStateResponse)
  return target;
}

size_t GetInternalStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetInternalStateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes internal_state_chunk = 1 [json_name = "internalStateChunk"];
  if (!this->_internal_internal_state_chunk().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_internal_state_chunk());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInternalStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetInternalStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInternalStateResponse::GetClassData() const { return &_class_data_; }

void GetInternalStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetInternalStateResponse *>(to)->MergeFrom(
      static_cast<const GetInternalStateResponse &>(from));
}


void GetInternalStateResponse::MergeFrom(const GetInternalStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetInternalStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_internal_state_chunk().empty()) {
    _internal_set_internal_state_chunk(from._internal_internal_state_chunk());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInternalStateResponse::CopyFrom(const GetInternalStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetInternalStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInternalStateResponse::IsInitialized() const {
  return true;
}

void GetInternalStateResponse::InternalSwap(GetInternalStateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &internal_state_chunk_, lhs_arena,
      &other->internal_state_chunk_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInternalStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[5]);
}

// ===================================================================

class GetPositionNewRequest::_Internal {
 public:
};

GetPositionNewRequest::GetPositionNewRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPositionNewRequest)
}
GetPositionNewRequest::GetPositionNewRequest(const GetPositionNewRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPositionNewRequest)
}

inline void GetPositionNewRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPositionNewRequest::~GetPositionNewRequest() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPositionNewRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPositionNewRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void GetPositionNewRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPositionNewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPositionNewRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPositionNewRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.service.slam.v1.GetPositionNewRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPositionNewRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPositionNewRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.service.slam.v1.GetPositionNewRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPositionNewRequest)
  return target;
}

size_t GetPositionNewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPositionNewRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPositionNewRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPositionNewRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPositionNewRequest::GetClassData() const { return &_class_data_; }

void GetPositionNewRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPositionNewRequest *>(to)->MergeFrom(
      static_cast<const GetPositionNewRequest &>(from));
}


void GetPositionNewRequest::MergeFrom(const GetPositionNewRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPositionNewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPositionNewRequest::CopyFrom(const GetPositionNewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPositionNewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPositionNewRequest::IsInitialized() const {
  return true;
}

void GetPositionNewRequest::InternalSwap(GetPositionNewRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPositionNewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[6]);
}

// ===================================================================

class GetPositionNewResponse::_Internal {
 public:
  static const ::viam::common::v1::Pose& pose(const GetPositionNewResponse* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetPositionNewResponse* msg);
};

const ::viam::common::v1::Pose&
GetPositionNewResponse::_Internal::pose(const GetPositionNewResponse* msg) {
  return *msg->pose_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
GetPositionNewResponse::_Internal::extra(const GetPositionNewResponse* msg) {
  return *msg->extra_;
}
void GetPositionNewResponse::clear_pose() {
  if (GetArenaForAllocation() == nullptr && pose_ != nullptr) {
    delete pose_;
  }
  pose_ = nullptr;
}
void GetPositionNewResponse::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetPositionNewResponse::GetPositionNewResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPositionNewResponse)
}
GetPositionNewResponse::GetPositionNewResponse(const GetPositionNewResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  component_reference_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    component_reference_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_component_reference().empty()) {
    component_reference_.Set(from._internal_component_reference(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_pose()) {
    pose_ = new ::viam::common::v1::Pose(*from.pose_);
  } else {
    pose_ = nullptr;
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPositionNewResponse)
}

inline void GetPositionNewResponse::SharedCtor() {
component_reference_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  component_reference_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&pose_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&extra_) -
    reinterpret_cast<char*>(&pose_)) + sizeof(extra_));
}

GetPositionNewResponse::~GetPositionNewResponse() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPositionNewResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPositionNewResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  component_reference_.Destroy();
  if (this != internal_default_instance()) delete pose_;
  if (this != internal_default_instance()) delete extra_;
}

void GetPositionNewResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPositionNewResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPositionNewResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_reference_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && pose_ != nullptr) {
    delete pose_;
  }
  pose_ = nullptr;
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPositionNewResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.Pose pose = 1 [json_name = "pose"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pose(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string component_reference = 2 [json_name = "componentReference"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_component_reference();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.service.slam.v1.GetPositionNewResponse.component_reference"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPositionNewResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPositionNewResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.Pose pose = 1 [json_name = "pose"];
  if (this->_internal_has_pose()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pose(this),
        _Internal::pose(this).GetCachedSize(), target, stream);
  }

  // string component_reference = 2 [json_name = "componentReference"];
  if (!this->_internal_component_reference().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_component_reference().data(), static_cast<int>(this->_internal_component_reference().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.service.slam.v1.GetPositionNewResponse.component_reference");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_component_reference(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPositionNewResponse)
  return target;
}

size_t GetPositionNewResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPositionNewResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string component_reference = 2 [json_name = "componentReference"];
  if (!this->_internal_component_reference().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_component_reference());
  }

  // .viam.common.v1.Pose pose = 1 [json_name = "pose"];
  if (this->_internal_has_pose()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPositionNewResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPositionNewResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPositionNewResponse::GetClassData() const { return &_class_data_; }

void GetPositionNewResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPositionNewResponse *>(to)->MergeFrom(
      static_cast<const GetPositionNewResponse &>(from));
}


void GetPositionNewResponse::MergeFrom(const GetPositionNewResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPositionNewResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_component_reference().empty()) {
    _internal_set_component_reference(from._internal_component_reference());
  }
  if (from._internal_has_pose()) {
    _internal_mutable_pose()->::viam::common::v1::Pose::MergeFrom(from._internal_pose());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPositionNewResponse::CopyFrom(const GetPositionNewResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPositionNewResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPositionNewResponse::IsInitialized() const {
  return true;
}

void GetPositionNewResponse::InternalSwap(GetPositionNewResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &component_reference_, lhs_arena,
      &other->component_reference_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPositionNewResponse, extra_)
      + sizeof(GetPositionNewResponse::extra_)
      - PROTOBUF_FIELD_OFFSET(GetPositionNewResponse, pose_)>(
          reinterpret_cast<char*>(&pose_),
          reinterpret_cast<char*>(&other->pose_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPositionNewResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[7]);
}

// ===================================================================

class GetPointCloudMapStreamRequest::_Internal {
 public:
};

GetPointCloudMapStreamRequest::GetPointCloudMapStreamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPointCloudMapStreamRequest)
}
GetPointCloudMapStreamRequest::GetPointCloudMapStreamRequest(const GetPointCloudMapStreamRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPointCloudMapStreamRequest)
}

inline void GetPointCloudMapStreamRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPointCloudMapStreamRequest::~GetPointCloudMapStreamRequest() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPointCloudMapStreamRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPointCloudMapStreamRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void GetPointCloudMapStreamRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPointCloudMapStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPointCloudMapStreamRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPointCloudMapStreamRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.service.slam.v1.GetPointCloudMapStreamRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPointCloudMapStreamRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPointCloudMapStreamRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.service.slam.v1.GetPointCloudMapStreamRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPointCloudMapStreamRequest)
  return target;
}

size_t GetPointCloudMapStreamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPointCloudMapStreamRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPointCloudMapStreamRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPointCloudMapStreamRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPointCloudMapStreamRequest::GetClassData() const { return &_class_data_; }

void GetPointCloudMapStreamRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPointCloudMapStreamRequest *>(to)->MergeFrom(
      static_cast<const GetPointCloudMapStreamRequest &>(from));
}


void GetPointCloudMapStreamRequest::MergeFrom(const GetPointCloudMapStreamRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPointCloudMapStreamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPointCloudMapStreamRequest::CopyFrom(const GetPointCloudMapStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPointCloudMapStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPointCloudMapStreamRequest::IsInitialized() const {
  return true;
}

void GetPointCloudMapStreamRequest::InternalSwap(GetPointCloudMapStreamRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPointCloudMapStreamRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[8]);
}

// ===================================================================

class GetPointCloudMapStreamResponse::_Internal {
 public:
};

GetPointCloudMapStreamResponse::GetPointCloudMapStreamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetPointCloudMapStreamResponse)
}
GetPointCloudMapStreamResponse::GetPointCloudMapStreamResponse(const GetPointCloudMapStreamResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  point_cloud_pcd_chunk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    point_cloud_pcd_chunk_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_point_cloud_pcd_chunk().empty()) {
    point_cloud_pcd_chunk_.Set(from._internal_point_cloud_pcd_chunk(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetPointCloudMapStreamResponse)
}

inline void GetPointCloudMapStreamResponse::SharedCtor() {
point_cloud_pcd_chunk_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  point_cloud_pcd_chunk_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPointCloudMapStreamResponse::~GetPointCloudMapStreamResponse() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetPointCloudMapStreamResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPointCloudMapStreamResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  point_cloud_pcd_chunk_.Destroy();
}

void GetPointCloudMapStreamResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPointCloudMapStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetPointCloudMapStreamResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_cloud_pcd_chunk_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPointCloudMapStreamResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes point_cloud_pcd_chunk = 1 [json_name = "pointCloudPcdChunk"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_point_cloud_pcd_chunk();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPointCloudMapStreamResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetPointCloudMapStreamResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes point_cloud_pcd_chunk = 1 [json_name = "pointCloudPcdChunk"];
  if (!this->_internal_point_cloud_pcd_chunk().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_point_cloud_pcd_chunk(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetPointCloudMapStreamResponse)
  return target;
}

size_t GetPointCloudMapStreamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetPointCloudMapStreamResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes point_cloud_pcd_chunk = 1 [json_name = "pointCloudPcdChunk"];
  if (!this->_internal_point_cloud_pcd_chunk().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_point_cloud_pcd_chunk());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPointCloudMapStreamResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPointCloudMapStreamResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPointCloudMapStreamResponse::GetClassData() const { return &_class_data_; }

void GetPointCloudMapStreamResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPointCloudMapStreamResponse *>(to)->MergeFrom(
      static_cast<const GetPointCloudMapStreamResponse &>(from));
}


void GetPointCloudMapStreamResponse::MergeFrom(const GetPointCloudMapStreamResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetPointCloudMapStreamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_point_cloud_pcd_chunk().empty()) {
    _internal_set_point_cloud_pcd_chunk(from._internal_point_cloud_pcd_chunk());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPointCloudMapStreamResponse::CopyFrom(const GetPointCloudMapStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetPointCloudMapStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPointCloudMapStreamResponse::IsInitialized() const {
  return true;
}

void GetPointCloudMapStreamResponse::InternalSwap(GetPointCloudMapStreamResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &point_cloud_pcd_chunk_, lhs_arena,
      &other->point_cloud_pcd_chunk_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPointCloudMapStreamResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[9]);
}

// ===================================================================

class GetInternalStateStreamRequest::_Internal {
 public:
};

GetInternalStateStreamRequest::GetInternalStateStreamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetInternalStateStreamRequest)
}
GetInternalStateStreamRequest::GetInternalStateStreamRequest(const GetInternalStateStreamRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetInternalStateStreamRequest)
}

inline void GetInternalStateStreamRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetInternalStateStreamRequest::~GetInternalStateStreamRequest() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetInternalStateStreamRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetInternalStateStreamRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void GetInternalStateStreamRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetInternalStateStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetInternalStateStreamRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInternalStateStreamRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.service.slam.v1.GetInternalStateStreamRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetInternalStateStreamRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetInternalStateStreamRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.service.slam.v1.GetInternalStateStreamRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetInternalStateStreamRequest)
  return target;
}

size_t GetInternalStateStreamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetInternalStateStreamRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInternalStateStreamRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetInternalStateStreamRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInternalStateStreamRequest::GetClassData() const { return &_class_data_; }

void GetInternalStateStreamRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetInternalStateStreamRequest *>(to)->MergeFrom(
      static_cast<const GetInternalStateStreamRequest &>(from));
}


void GetInternalStateStreamRequest::MergeFrom(const GetInternalStateStreamRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetInternalStateStreamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInternalStateStreamRequest::CopyFrom(const GetInternalStateStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetInternalStateStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInternalStateStreamRequest::IsInitialized() const {
  return true;
}

void GetInternalStateStreamRequest::InternalSwap(GetInternalStateStreamRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInternalStateStreamRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[10]);
}

// ===================================================================

class GetInternalStateStreamResponse::_Internal {
 public:
};

GetInternalStateStreamResponse::GetInternalStateStreamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.service.slam.v1.GetInternalStateStreamResponse)
}
GetInternalStateStreamResponse::GetInternalStateStreamResponse(const GetInternalStateStreamResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  internal_state_chunk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    internal_state_chunk_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_internal_state_chunk().empty()) {
    internal_state_chunk_.Set(from._internal_internal_state_chunk(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.service.slam.v1.GetInternalStateStreamResponse)
}

inline void GetInternalStateStreamResponse::SharedCtor() {
internal_state_chunk_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  internal_state_chunk_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetInternalStateStreamResponse::~GetInternalStateStreamResponse() {
  // @@protoc_insertion_point(destructor:viam.service.slam.v1.GetInternalStateStreamResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetInternalStateStreamResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  internal_state_chunk_.Destroy();
}

void GetInternalStateStreamResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetInternalStateStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.service.slam.v1.GetInternalStateStreamResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  internal_state_chunk_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInternalStateStreamResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes internal_state_chunk = 1 [json_name = "internalStateChunk"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_internal_state_chunk();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetInternalStateStreamResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.service.slam.v1.GetInternalStateStreamResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes internal_state_chunk = 1 [json_name = "internalStateChunk"];
  if (!this->_internal_internal_state_chunk().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_internal_state_chunk(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.service.slam.v1.GetInternalStateStreamResponse)
  return target;
}

size_t GetInternalStateStreamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.service.slam.v1.GetInternalStateStreamResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes internal_state_chunk = 1 [json_name = "internalStateChunk"];
  if (!this->_internal_internal_state_chunk().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_internal_state_chunk());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInternalStateStreamResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetInternalStateStreamResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInternalStateStreamResponse::GetClassData() const { return &_class_data_; }

void GetInternalStateStreamResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetInternalStateStreamResponse *>(to)->MergeFrom(
      static_cast<const GetInternalStateStreamResponse &>(from));
}


void GetInternalStateStreamResponse::MergeFrom(const GetInternalStateStreamResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.service.slam.v1.GetInternalStateStreamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_internal_state_chunk().empty()) {
    _internal_set_internal_state_chunk(from._internal_internal_state_chunk());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInternalStateStreamResponse::CopyFrom(const GetInternalStateStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.service.slam.v1.GetInternalStateStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInternalStateStreamResponse::IsInitialized() const {
  return true;
}

void GetInternalStateStreamResponse::InternalSwap(GetInternalStateStreamResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &internal_state_chunk_, lhs_arena,
      &other->internal_state_chunk_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInternalStateStreamResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_getter, &descriptor_table_service_2fslam_2fv1_2fslam_2eproto_once,
      file_level_metadata_service_2fslam_2fv1_2fslam_2eproto[11]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace slam
}  // namespace service
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::service::slam::v1::GetPositionRequest*
Arena::CreateMaybeMessage< ::viam::service::slam::v1::GetPositionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::slam::v1::GetPositionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::slam::v1::GetPositionResponse*
Arena::CreateMaybeMessage< ::viam::service::slam::v1::GetPositionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::slam::v1::GetPositionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::slam::v1::GetPointCloudMapRequest*
Arena::CreateMaybeMessage< ::viam::service::slam::v1::GetPointCloudMapRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::slam::v1::GetPointCloudMapRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::slam::v1::GetPointCloudMapResponse*
Arena::CreateMaybeMessage< ::viam::service::slam::v1::GetPointCloudMapResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::slam::v1::GetPointCloudMapResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::slam::v1::GetInternalStateRequest*
Arena::CreateMaybeMessage< ::viam::service::slam::v1::GetInternalStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::slam::v1::GetInternalStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::slam::v1::GetInternalStateResponse*
Arena::CreateMaybeMessage< ::viam::service::slam::v1::GetInternalStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::slam::v1::GetInternalStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::slam::v1::GetPositionNewRequest*
Arena::CreateMaybeMessage< ::viam::service::slam::v1::GetPositionNewRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::slam::v1::GetPositionNewRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::slam::v1::GetPositionNewResponse*
Arena::CreateMaybeMessage< ::viam::service::slam::v1::GetPositionNewResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::slam::v1::GetPositionNewResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::slam::v1::GetPointCloudMapStreamRequest*
Arena::CreateMaybeMessage< ::viam::service::slam::v1::GetPointCloudMapStreamRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::slam::v1::GetPointCloudMapStreamRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::slam::v1::GetPointCloudMapStreamResponse*
Arena::CreateMaybeMessage< ::viam::service::slam::v1::GetPointCloudMapStreamResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::slam::v1::GetPointCloudMapStreamResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::slam::v1::GetInternalStateStreamRequest*
Arena::CreateMaybeMessage< ::viam::service::slam::v1::GetInternalStateStreamRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::slam::v1::GetInternalStateStreamRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::service::slam::v1::GetInternalStateStreamResponse*
Arena::CreateMaybeMessage< ::viam::service::slam::v1::GetInternalStateStreamResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::service::slam::v1::GetInternalStateStreamResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
