// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component/board/v1/board.proto

#include "component/board/v1/board.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace component {
namespace board {
namespace v1 {
PROTOBUF_CONSTEXPR StatusRequest::StatusRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct StatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusRequestDefaultTypeInternal() {}
  union {
    StatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusRequestDefaultTypeInternal _StatusRequest_default_instance_;
PROTOBUF_CONSTEXPR StatusResponse::StatusResponse(
    ::_pbi::ConstantInitialized)
  : status_(nullptr){}
struct StatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusResponseDefaultTypeInternal() {}
  union {
    StatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
PROTOBUF_CONSTEXPR SetGPIORequest::SetGPIORequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pin_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr)
  , high_(false){}
struct SetGPIORequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGPIORequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGPIORequestDefaultTypeInternal() {}
  union {
    SetGPIORequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGPIORequestDefaultTypeInternal _SetGPIORequest_default_instance_;
PROTOBUF_CONSTEXPR SetGPIOResponse::SetGPIOResponse(
    ::_pbi::ConstantInitialized){}
struct SetGPIOResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGPIOResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGPIOResponseDefaultTypeInternal() {}
  union {
    SetGPIOResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGPIOResponseDefaultTypeInternal _SetGPIOResponse_default_instance_;
PROTOBUF_CONSTEXPR GetGPIORequest::GetGPIORequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pin_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetGPIORequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGPIORequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGPIORequestDefaultTypeInternal() {}
  union {
    GetGPIORequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGPIORequestDefaultTypeInternal _GetGPIORequest_default_instance_;
PROTOBUF_CONSTEXPR GetGPIOResponse::GetGPIOResponse(
    ::_pbi::ConstantInitialized)
  : high_(false){}
struct GetGPIOResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetGPIOResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetGPIOResponseDefaultTypeInternal() {}
  union {
    GetGPIOResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetGPIOResponseDefaultTypeInternal _GetGPIOResponse_default_instance_;
PROTOBUF_CONSTEXPR PWMRequest::PWMRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pin_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct PWMRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PWMRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PWMRequestDefaultTypeInternal() {}
  union {
    PWMRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PWMRequestDefaultTypeInternal _PWMRequest_default_instance_;
PROTOBUF_CONSTEXPR PWMResponse::PWMResponse(
    ::_pbi::ConstantInitialized)
  : duty_cycle_pct_(0){}
struct PWMResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PWMResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PWMResponseDefaultTypeInternal() {}
  union {
    PWMResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PWMResponseDefaultTypeInternal _PWMResponse_default_instance_;
PROTOBUF_CONSTEXPR SetPWMRequest::SetPWMRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pin_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr)
  , duty_cycle_pct_(0){}
struct SetPWMRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPWMRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPWMRequestDefaultTypeInternal() {}
  union {
    SetPWMRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPWMRequestDefaultTypeInternal _SetPWMRequest_default_instance_;
PROTOBUF_CONSTEXPR SetPWMResponse::SetPWMResponse(
    ::_pbi::ConstantInitialized){}
struct SetPWMResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPWMResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPWMResponseDefaultTypeInternal() {}
  union {
    SetPWMResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPWMResponseDefaultTypeInternal _SetPWMResponse_default_instance_;
PROTOBUF_CONSTEXPR PWMFrequencyRequest::PWMFrequencyRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pin_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct PWMFrequencyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PWMFrequencyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PWMFrequencyRequestDefaultTypeInternal() {}
  union {
    PWMFrequencyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PWMFrequencyRequestDefaultTypeInternal _PWMFrequencyRequest_default_instance_;
PROTOBUF_CONSTEXPR PWMFrequencyResponse::PWMFrequencyResponse(
    ::_pbi::ConstantInitialized)
  : frequency_hz_(uint64_t{0u}){}
struct PWMFrequencyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PWMFrequencyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PWMFrequencyResponseDefaultTypeInternal() {}
  union {
    PWMFrequencyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PWMFrequencyResponseDefaultTypeInternal _PWMFrequencyResponse_default_instance_;
PROTOBUF_CONSTEXPR SetPWMFrequencyRequest::SetPWMFrequencyRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pin_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr)
  , frequency_hz_(uint64_t{0u}){}
struct SetPWMFrequencyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPWMFrequencyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPWMFrequencyRequestDefaultTypeInternal() {}
  union {
    SetPWMFrequencyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPWMFrequencyRequestDefaultTypeInternal _SetPWMFrequencyRequest_default_instance_;
PROTOBUF_CONSTEXPR SetPWMFrequencyResponse::SetPWMFrequencyResponse(
    ::_pbi::ConstantInitialized){}
struct SetPWMFrequencyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPWMFrequencyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPWMFrequencyResponseDefaultTypeInternal() {}
  union {
    SetPWMFrequencyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPWMFrequencyResponseDefaultTypeInternal _SetPWMFrequencyResponse_default_instance_;
PROTOBUF_CONSTEXPR ReadAnalogReaderRequest::ReadAnalogReaderRequest(
    ::_pbi::ConstantInitialized)
  : board_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , analog_reader_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct ReadAnalogReaderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadAnalogReaderRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadAnalogReaderRequestDefaultTypeInternal() {}
  union {
    ReadAnalogReaderRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadAnalogReaderRequestDefaultTypeInternal _ReadAnalogReaderRequest_default_instance_;
PROTOBUF_CONSTEXPR ReadAnalogReaderResponse::ReadAnalogReaderResponse(
    ::_pbi::ConstantInitialized)
  : value_(0){}
struct ReadAnalogReaderResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadAnalogReaderResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadAnalogReaderResponseDefaultTypeInternal() {}
  union {
    ReadAnalogReaderResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadAnalogReaderResponseDefaultTypeInternal _ReadAnalogReaderResponse_default_instance_;
PROTOBUF_CONSTEXPR GetDigitalInterruptValueRequest::GetDigitalInterruptValueRequest(
    ::_pbi::ConstantInitialized)
  : board_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , digital_interrupt_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetDigitalInterruptValueRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDigitalInterruptValueRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDigitalInterruptValueRequestDefaultTypeInternal() {}
  union {
    GetDigitalInterruptValueRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDigitalInterruptValueRequestDefaultTypeInternal _GetDigitalInterruptValueRequest_default_instance_;
PROTOBUF_CONSTEXPR GetDigitalInterruptValueResponse::GetDigitalInterruptValueResponse(
    ::_pbi::ConstantInitialized)
  : value_(int64_t{0}){}
struct GetDigitalInterruptValueResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDigitalInterruptValueResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDigitalInterruptValueResponseDefaultTypeInternal() {}
  union {
    GetDigitalInterruptValueResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDigitalInterruptValueResponseDefaultTypeInternal _GetDigitalInterruptValueResponse_default_instance_;
PROTOBUF_CONSTEXPR SetPowerModeRequest::SetPowerModeRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , duration_(nullptr)
  , extra_(nullptr)
  , power_mode_(0)
{}
struct SetPowerModeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPowerModeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPowerModeRequestDefaultTypeInternal() {}
  union {
    SetPowerModeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPowerModeRequestDefaultTypeInternal _SetPowerModeRequest_default_instance_;
PROTOBUF_CONSTEXPR SetPowerModeResponse::SetPowerModeResponse(
    ::_pbi::ConstantInitialized){}
struct SetPowerModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPowerModeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPowerModeResponseDefaultTypeInternal() {}
  union {
    SetPowerModeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPowerModeResponseDefaultTypeInternal _SetPowerModeResponse_default_instance_;
}  // namespace v1
}  // namespace board
}  // namespace component
}  // namespace viam
static ::_pb::Metadata file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[20];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_component_2fboard_2fv1_2fboard_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_component_2fboard_2fv1_2fboard_2eproto = nullptr;

const uint32_t TableStruct_component_2fboard_2fv1_2fboard_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::StatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::StatusRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::StatusRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::StatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::StatusResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetGPIORequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetGPIORequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetGPIORequest, pin_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetGPIORequest, high_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetGPIORequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetGPIOResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::GetGPIORequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::GetGPIORequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::GetGPIORequest, pin_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::GetGPIORequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::GetGPIOResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::GetGPIOResponse, high_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::PWMRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::PWMRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::PWMRequest, pin_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::PWMRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::PWMResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::PWMResponse, duty_cycle_pct_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPWMRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPWMRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPWMRequest, pin_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPWMRequest, duty_cycle_pct_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPWMRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPWMResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::PWMFrequencyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::PWMFrequencyRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::PWMFrequencyRequest, pin_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::PWMFrequencyRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::PWMFrequencyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::PWMFrequencyResponse, frequency_hz_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPWMFrequencyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPWMFrequencyRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPWMFrequencyRequest, pin_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPWMFrequencyRequest, frequency_hz_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPWMFrequencyRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPWMFrequencyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::ReadAnalogReaderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::ReadAnalogReaderRequest, board_name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::ReadAnalogReaderRequest, analog_reader_name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::ReadAnalogReaderRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::ReadAnalogReaderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::ReadAnalogReaderResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::GetDigitalInterruptValueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::GetDigitalInterruptValueRequest, board_name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::GetDigitalInterruptValueRequest, digital_interrupt_name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::GetDigitalInterruptValueRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::GetDigitalInterruptValueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::GetDigitalInterruptValueResponse, value_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPowerModeRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPowerModeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPowerModeRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPowerModeRequest, power_mode_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPowerModeRequest, duration_),
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPowerModeRequest, extra_),
  ~0u,
  ~0u,
  0,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::board::v1::SetPowerModeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::component::board::v1::StatusRequest)},
  { 8, -1, -1, sizeof(::viam::component::board::v1::StatusResponse)},
  { 15, -1, -1, sizeof(::viam::component::board::v1::SetGPIORequest)},
  { 25, -1, -1, sizeof(::viam::component::board::v1::SetGPIOResponse)},
  { 31, -1, -1, sizeof(::viam::component::board::v1::GetGPIORequest)},
  { 40, -1, -1, sizeof(::viam::component::board::v1::GetGPIOResponse)},
  { 47, -1, -1, sizeof(::viam::component::board::v1::PWMRequest)},
  { 56, -1, -1, sizeof(::viam::component::board::v1::PWMResponse)},
  { 63, -1, -1, sizeof(::viam::component::board::v1::SetPWMRequest)},
  { 73, -1, -1, sizeof(::viam::component::board::v1::SetPWMResponse)},
  { 79, -1, -1, sizeof(::viam::component::board::v1::PWMFrequencyRequest)},
  { 88, -1, -1, sizeof(::viam::component::board::v1::PWMFrequencyResponse)},
  { 95, -1, -1, sizeof(::viam::component::board::v1::SetPWMFrequencyRequest)},
  { 105, -1, -1, sizeof(::viam::component::board::v1::SetPWMFrequencyResponse)},
  { 111, -1, -1, sizeof(::viam::component::board::v1::ReadAnalogReaderRequest)},
  { 120, -1, -1, sizeof(::viam::component::board::v1::ReadAnalogReaderResponse)},
  { 127, -1, -1, sizeof(::viam::component::board::v1::GetDigitalInterruptValueRequest)},
  { 136, -1, -1, sizeof(::viam::component::board::v1::GetDigitalInterruptValueResponse)},
  { 143, 153, -1, sizeof(::viam::component::board::v1::SetPowerModeRequest)},
  { 157, -1, -1, sizeof(::viam::component::board::v1::SetPowerModeResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::component::board::v1::_StatusRequest_default_instance_._instance,
  &::viam::component::board::v1::_StatusResponse_default_instance_._instance,
  &::viam::component::board::v1::_SetGPIORequest_default_instance_._instance,
  &::viam::component::board::v1::_SetGPIOResponse_default_instance_._instance,
  &::viam::component::board::v1::_GetGPIORequest_default_instance_._instance,
  &::viam::component::board::v1::_GetGPIOResponse_default_instance_._instance,
  &::viam::component::board::v1::_PWMRequest_default_instance_._instance,
  &::viam::component::board::v1::_PWMResponse_default_instance_._instance,
  &::viam::component::board::v1::_SetPWMRequest_default_instance_._instance,
  &::viam::component::board::v1::_SetPWMResponse_default_instance_._instance,
  &::viam::component::board::v1::_PWMFrequencyRequest_default_instance_._instance,
  &::viam::component::board::v1::_PWMFrequencyResponse_default_instance_._instance,
  &::viam::component::board::v1::_SetPWMFrequencyRequest_default_instance_._instance,
  &::viam::component::board::v1::_SetPWMFrequencyResponse_default_instance_._instance,
  &::viam::component::board::v1::_ReadAnalogReaderRequest_default_instance_._instance,
  &::viam::component::board::v1::_ReadAnalogReaderResponse_default_instance_._instance,
  &::viam::component::board::v1::_GetDigitalInterruptValueRequest_default_instance_._instance,
  &::viam::component::board::v1::_GetDigitalInterruptValueResponse_default_instance_._instance,
  &::viam::component::board::v1::_SetPowerModeRequest_default_instance_._instance,
  &::viam::component::board::v1::_SetPowerModeResponse_default_instance_._instance,
};

const char descriptor_table_protodef_component_2fboard_2fv1_2fboard_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036component/board/v1/board.proto\022\027viam.c"
  "omponent.board.v1\032\026common/v1/common.prot"
  "o\032\034google/api/annotations.proto\032\036google/"
  "protobuf/duration.proto\032\034google/protobuf"
  "/struct.proto\"R\n\rStatusRequest\022\022\n\004name\030\001"
  " \001(\tR\004name\022-\n\005extra\030c \001(\0132\027.google.proto"
  "buf.StructR\005extra\"E\n\016StatusResponse\0223\n\006s"
  "tatus\030\001 \001(\0132\033.viam.common.v1.BoardStatus"
  "R\006status\"y\n\016SetGPIORequest\022\022\n\004name\030\001 \001(\t"
  "R\004name\022\020\n\003pin\030\002 \001(\tR\003pin\022\022\n\004high\030\003 \001(\010R\004"
  "high\022-\n\005extra\030c \001(\0132\027.google.protobuf.St"
  "ructR\005extra\"\021\n\017SetGPIOResponse\"e\n\016GetGPI"
  "ORequest\022\022\n\004name\030\001 \001(\tR\004name\022\020\n\003pin\030\002 \001("
  "\tR\003pin\022-\n\005extra\030c \001(\0132\027.google.protobuf."
  "StructR\005extra\"%\n\017GetGPIOResponse\022\022\n\004high"
  "\030\001 \001(\010R\004high\"a\n\nPWMRequest\022\022\n\004name\030\001 \001(\t"
  "R\004name\022\020\n\003pin\030\002 \001(\tR\003pin\022-\n\005extra\030c \001(\0132"
  "\027.google.protobuf.StructR\005extra\"3\n\013PWMRe"
  "sponse\022$\n\016duty_cycle_pct\030\001 \001(\001R\014dutyCycl"
  "ePct\"\212\001\n\rSetPWMRequest\022\022\n\004name\030\001 \001(\tR\004na"
  "me\022\020\n\003pin\030\002 \001(\tR\003pin\022$\n\016duty_cycle_pct\030\003"
  " \001(\001R\014dutyCyclePct\022-\n\005extra\030c \001(\0132\027.goog"
  "le.protobuf.StructR\005extra\"\020\n\016SetPWMRespo"
  "nse\"j\n\023PWMFrequencyRequest\022\022\n\004name\030\001 \001(\t"
  "R\004name\022\020\n\003pin\030\002 \001(\tR\003pin\022-\n\005extra\030c \001(\0132"
  "\027.google.protobuf.StructR\005extra\"9\n\024PWMFr"
  "equencyResponse\022!\n\014frequency_hz\030\001 \001(\004R\013f"
  "requencyHz\"\220\001\n\026SetPWMFrequencyRequest\022\022\n"
  "\004name\030\001 \001(\tR\004name\022\020\n\003pin\030\002 \001(\tR\003pin\022!\n\014f"
  "requency_hz\030\003 \001(\004R\013frequencyHz\022-\n\005extra\030"
  "c \001(\0132\027.google.protobuf.StructR\005extra\"\031\n"
  "\027SetPWMFrequencyResponse\"\225\001\n\027ReadAnalogR"
  "eaderRequest\022\035\n\nboard_name\030\001 \001(\tR\tboardN"
  "ame\022,\n\022analog_reader_name\030\002 \001(\tR\020analogR"
  "eaderName\022-\n\005extra\030c \001(\0132\027.google.protob"
  "uf.StructR\005extra\"0\n\030ReadAnalogReaderResp"
  "onse\022\024\n\005value\030\001 \001(\005R\005value\"\245\001\n\037GetDigita"
  "lInterruptValueRequest\022\035\n\nboard_name\030\001 \001"
  "(\tR\tboardName\0224\n\026digital_interrupt_name\030"
  "\002 \001(\tR\024digitalInterruptName\022-\n\005extra\030c \001"
  "(\0132\027.google.protobuf.StructR\005extra\"8\n Ge"
  "tDigitalInterruptValueResponse\022\024\n\005value\030"
  "\001 \001(\003R\005value\"\344\001\n\023SetPowerModeRequest\022\022\n\004"
  "name\030\001 \001(\tR\004name\022A\n\npower_mode\030\002 \001(\0162\".v"
  "iam.component.board.v1.PowerModeR\tpowerM"
  "ode\022:\n\010duration\030\003 \001(\0132\031.google.protobuf."
  "DurationH\000R\010duration\210\001\001\022-\n\005extra\030c \001(\0132\027"
  ".google.protobuf.StructR\005extraB\013\n\t_durat"
  "ion\"\026\n\024SetPowerModeResponse*[\n\tPowerMode"
  "\022\032\n\026POWER_MODE_UNSPECIFIED\020\000\022\025\n\021POWER_MO"
  "DE_NORMAL\020\001\022\033\n\027POWER_MODE_OFFLINE_DEEP\020\002"
  "2\236\016\n\014BoardService\022\215\001\n\006Status\022&.viam.comp"
  "onent.board.v1.StatusRequest\032\'.viam.comp"
  "onent.board.v1.StatusResponse\"2\202\323\344\223\002,\022*/"
  "viam/api/v1/component/board/{name}/statu"
  "s\022\216\001\n\007SetGPIO\022\'.viam.component.board.v1."
  "SetGPIORequest\032(.viam.component.board.v1"
  ".SetGPIOResponse\"0\202\323\344\223\002*\032(/viam/api/v1/c"
  "omponent/board/{name}/gpio\022\216\001\n\007GetGPIO\022\'"
  ".viam.component.board.v1.GetGPIORequest\032"
  "(.viam.component.board.v1.GetGPIORespons"
  "e\"0\202\323\344\223\002*\022(/viam/api/v1/component/board/"
  "{name}/gpio\022\201\001\n\003PWM\022#.viam.component.boa"
  "rd.v1.PWMRequest\032$.viam.component.board."
  "v1.PWMResponse\"/\202\323\344\223\002)\022\'/viam/api/v1/com"
  "ponent/board/{name}/pwm\022\212\001\n\006SetPWM\022&.via"
  "m.component.board.v1.SetPWMRequest\032\'.via"
  "m.component.board.v1.SetPWMResponse\"/\202\323\344"
  "\223\002)\032\'/viam/api/v1/component/board/{name}"
  "/pwm\022\241\001\n\014PWMFrequency\022,.viam.component.b"
  "oard.v1.PWMFrequencyRequest\032-.viam.compo"
  "nent.board.v1.PWMFrequencyResponse\"4\202\323\344\223"
  "\002.\022,/viam/api/v1/component/board/{name}/"
  "pwm_freq\022\252\001\n\017SetPWMFrequency\022/.viam.comp"
  "onent.board.v1.SetPWMFrequencyRequest\0320."
  "viam.component.board.v1.SetPWMFrequencyR"
  "esponse\"4\202\323\344\223\002.\032,/viam/api/v1/component/"
  "board/{name}/pwm_freq\022\210\001\n\tDoCommand\022 .vi"
  "am.common.v1.DoCommandRequest\032!.viam.com"
  "mon.v1.DoCommandResponse\"6\202\323\344\223\0020\"./viam/"
  "api/v1/component/board/{name}/do_command"
  "\022\322\001\n\020ReadAnalogReader\0220.viam.component.b"
  "oard.v1.ReadAnalogReaderRequest\0321.viam.c"
  "omponent.board.v1.ReadAnalogReaderRespon"
  "se\"Y\202\323\344\223\002S\022Q/viam/api/v1/component/board"
  "/{board_name}/analog_reader/{analog_read"
  "er_name}/read\022\363\001\n\030GetDigitalInterruptVal"
  "ue\0228.viam.component.board.v1.GetDigitalI"
  "nterruptValueRequest\0329.viam.component.bo"
  "ard.v1.GetDigitalInterruptValueResponse\""
  "b\202\323\344\223\002\\\022Z/viam/api/v1/component/board/{b"
  "oard_name}/digital_interrupt/{digital_in"
  "terrupt_name}/value\022\243\001\n\014SetPowerMode\022,.v"
  "iam.component.board.v1.SetPowerModeReque"
  "st\032-.viam.component.board.v1.SetPowerMod"
  "eResponse\"6\202\323\344\223\0020\032./viam/api/v1/componen"
  "t/board/{name}/power_modeBA\n\033com.viam.co"
  "mponent.board.v1Z\"go.viam.com/api/compon"
  "ent/board/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_component_2fboard_2fv1_2fboard_2eproto_deps[4] = {
  &::descriptor_table_common_2fv1_2fcommon_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_component_2fboard_2fv1_2fboard_2eproto = {
    false, false, 3940, descriptor_table_protodef_component_2fboard_2fv1_2fboard_2eproto,
    "component/board/v1/board.proto",
    &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once, descriptor_table_component_2fboard_2fv1_2fboard_2eproto_deps, 4, 20,
    schemas, file_default_instances, TableStruct_component_2fboard_2fv1_2fboard_2eproto::offsets,
    file_level_metadata_component_2fboard_2fv1_2fboard_2eproto, file_level_enum_descriptors_component_2fboard_2fv1_2fboard_2eproto,
    file_level_service_descriptors_component_2fboard_2fv1_2fboard_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter() {
  return &descriptor_table_component_2fboard_2fv1_2fboard_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_component_2fboard_2fv1_2fboard_2eproto(&descriptor_table_component_2fboard_2fv1_2fboard_2eproto);
namespace viam {
namespace component {
namespace board {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PowerMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_component_2fboard_2fv1_2fboard_2eproto);
  return file_level_enum_descriptors_component_2fboard_2fv1_2fboard_2eproto[0];
}
bool PowerMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class StatusRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const StatusRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
StatusRequest::_Internal::extra(const StatusRequest* msg) {
  return *msg->extra_;
}
void StatusRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
StatusRequest::StatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.StatusRequest)
}
StatusRequest::StatusRequest(const StatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.StatusRequest)
}

inline void StatusRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

StatusRequest::~StatusRequest() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.StatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void StatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.StatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.StatusRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.StatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.StatusRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.StatusRequest)
  return target;
}

size_t StatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.StatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatusRequest::GetClassData() const { return &_class_data_; }

void StatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StatusRequest *>(to)->MergeFrom(
      static_cast<const StatusRequest &>(from));
}


void StatusRequest::MergeFrom(const StatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.StatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatusRequest::CopyFrom(const StatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.StatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusRequest::IsInitialized() const {
  return true;
}

void StatusRequest::InternalSwap(StatusRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[0]);
}

// ===================================================================

class StatusResponse::_Internal {
 public:
  static const ::viam::common::v1::BoardStatus& status(const StatusResponse* msg);
};

const ::viam::common::v1::BoardStatus&
StatusResponse::_Internal::status(const StatusResponse* msg) {
  return *msg->status_;
}
void StatusResponse::clear_status() {
  if (GetArenaForAllocation() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
StatusResponse::StatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.StatusResponse)
}
StatusResponse::StatusResponse(const StatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::viam::common::v1::BoardStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.StatusResponse)
}

inline void StatusResponse::SharedCtor() {
status_ = nullptr;
}

StatusResponse::~StatusResponse() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.StatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void StatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.StatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.BoardStatus status = 1 [json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.StatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.BoardStatus status = 1 [json_name = "status"];
  if (this->_internal_has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.StatusResponse)
  return target;
}

size_t StatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.StatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.BoardStatus status = 1 [json_name = "status"];
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StatusResponse::GetClassData() const { return &_class_data_; }

void StatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StatusResponse *>(to)->MergeFrom(
      static_cast<const StatusResponse &>(from));
}


void StatusResponse::MergeFrom(const StatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.StatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_status()) {
    _internal_mutable_status()->::viam::common::v1::BoardStatus::MergeFrom(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StatusResponse::CopyFrom(const StatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.StatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusResponse::IsInitialized() const {
  return true;
}

void StatusResponse::InternalSwap(StatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[1]);
}

// ===================================================================

class SetGPIORequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const SetGPIORequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
SetGPIORequest::_Internal::extra(const SetGPIORequest* msg) {
  return *msg->extra_;
}
void SetGPIORequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
SetGPIORequest::SetGPIORequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.SetGPIORequest)
}
SetGPIORequest::SetGPIORequest(const SetGPIORequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  pin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pin().empty()) {
    pin_.Set(from._internal_pin(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  high_ = from.high_;
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.SetGPIORequest)
}

inline void SetGPIORequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pin_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pin_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&extra_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&high_) -
    reinterpret_cast<char*>(&extra_)) + sizeof(high_));
}

SetGPIORequest::~SetGPIORequest() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.SetGPIORequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGPIORequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  pin_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void SetGPIORequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetGPIORequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.SetGPIORequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  pin_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  high_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGPIORequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.SetGPIORequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string pin = 2 [json_name = "pin"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.SetGPIORequest.pin"));
        } else
          goto handle_unusual;
        continue;
      // bool high = 3 [json_name = "high"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          high_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGPIORequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.SetGPIORequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.SetGPIORequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string pin = 2 [json_name = "pin"];
  if (!this->_internal_pin().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pin().data(), static_cast<int>(this->_internal_pin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.SetGPIORequest.pin");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pin(), target);
  }

  // bool high = 3 [json_name = "high"];
  if (this->_internal_high() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_high(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.SetGPIORequest)
  return target;
}

size_t SetGPIORequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.SetGPIORequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string pin = 2 [json_name = "pin"];
  if (!this->_internal_pin().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pin());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  // bool high = 3 [json_name = "high"];
  if (this->_internal_high() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGPIORequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetGPIORequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGPIORequest::GetClassData() const { return &_class_data_; }

void SetGPIORequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetGPIORequest *>(to)->MergeFrom(
      static_cast<const SetGPIORequest &>(from));
}


void SetGPIORequest::MergeFrom(const SetGPIORequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.SetGPIORequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_pin().empty()) {
    _internal_set_pin(from._internal_pin());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  if (from._internal_high() != 0) {
    _internal_set_high(from._internal_high());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGPIORequest::CopyFrom(const SetGPIORequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.SetGPIORequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGPIORequest::IsInitialized() const {
  return true;
}

void SetGPIORequest::InternalSwap(SetGPIORequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pin_, lhs_arena,
      &other->pin_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetGPIORequest, high_)
      + sizeof(SetGPIORequest::high_)
      - PROTOBUF_FIELD_OFFSET(SetGPIORequest, extra_)>(
          reinterpret_cast<char*>(&extra_),
          reinterpret_cast<char*>(&other->extra_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGPIORequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[2]);
}

// ===================================================================

class SetGPIOResponse::_Internal {
 public:
};

SetGPIOResponse::SetGPIOResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.SetGPIOResponse)
}
SetGPIOResponse::SetGPIOResponse(const SetGPIOResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.SetGPIOResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGPIOResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGPIOResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetGPIOResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[3]);
}

// ===================================================================

class GetGPIORequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetGPIORequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetGPIORequest::_Internal::extra(const GetGPIORequest* msg) {
  return *msg->extra_;
}
void GetGPIORequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetGPIORequest::GetGPIORequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.GetGPIORequest)
}
GetGPIORequest::GetGPIORequest(const GetGPIORequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  pin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pin().empty()) {
    pin_.Set(from._internal_pin(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.GetGPIORequest)
}

inline void GetGPIORequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pin_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pin_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetGPIORequest::~GetGPIORequest() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.GetGPIORequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGPIORequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  pin_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetGPIORequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetGPIORequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.GetGPIORequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  pin_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGPIORequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.GetGPIORequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string pin = 2 [json_name = "pin"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.GetGPIORequest.pin"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGPIORequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.GetGPIORequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.GetGPIORequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string pin = 2 [json_name = "pin"];
  if (!this->_internal_pin().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pin().data(), static_cast<int>(this->_internal_pin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.GetGPIORequest.pin");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pin(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.GetGPIORequest)
  return target;
}

size_t GetGPIORequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.GetGPIORequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string pin = 2 [json_name = "pin"];
  if (!this->_internal_pin().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pin());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGPIORequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetGPIORequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGPIORequest::GetClassData() const { return &_class_data_; }

void GetGPIORequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetGPIORequest *>(to)->MergeFrom(
      static_cast<const GetGPIORequest &>(from));
}


void GetGPIORequest::MergeFrom(const GetGPIORequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.GetGPIORequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_pin().empty()) {
    _internal_set_pin(from._internal_pin());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGPIORequest::CopyFrom(const GetGPIORequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.GetGPIORequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGPIORequest::IsInitialized() const {
  return true;
}

void GetGPIORequest::InternalSwap(GetGPIORequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pin_, lhs_arena,
      &other->pin_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGPIORequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[4]);
}

// ===================================================================

class GetGPIOResponse::_Internal {
 public:
};

GetGPIOResponse::GetGPIOResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.GetGPIOResponse)
}
GetGPIOResponse::GetGPIOResponse(const GetGPIOResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  high_ = from.high_;
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.GetGPIOResponse)
}

inline void GetGPIOResponse::SharedCtor() {
high_ = false;
}

GetGPIOResponse::~GetGPIOResponse() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.GetGPIOResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetGPIOResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetGPIOResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetGPIOResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.GetGPIOResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  high_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetGPIOResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool high = 1 [json_name = "high"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          high_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetGPIOResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.GetGPIOResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool high = 1 [json_name = "high"];
  if (this->_internal_high() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_high(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.GetGPIOResponse)
  return target;
}

size_t GetGPIOResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.GetGPIOResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool high = 1 [json_name = "high"];
  if (this->_internal_high() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetGPIOResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetGPIOResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetGPIOResponse::GetClassData() const { return &_class_data_; }

void GetGPIOResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetGPIOResponse *>(to)->MergeFrom(
      static_cast<const GetGPIOResponse &>(from));
}


void GetGPIOResponse::MergeFrom(const GetGPIOResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.GetGPIOResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_high() != 0) {
    _internal_set_high(from._internal_high());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetGPIOResponse::CopyFrom(const GetGPIOResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.GetGPIOResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGPIOResponse::IsInitialized() const {
  return true;
}

void GetGPIOResponse::InternalSwap(GetGPIOResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(high_, other->high_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetGPIOResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[5]);
}

// ===================================================================

class PWMRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const PWMRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
PWMRequest::_Internal::extra(const PWMRequest* msg) {
  return *msg->extra_;
}
void PWMRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
PWMRequest::PWMRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.PWMRequest)
}
PWMRequest::PWMRequest(const PWMRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  pin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pin().empty()) {
    pin_.Set(from._internal_pin(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.PWMRequest)
}

inline void PWMRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pin_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pin_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

PWMRequest::~PWMRequest() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.PWMRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PWMRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  pin_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void PWMRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PWMRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.PWMRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  pin_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PWMRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.PWMRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string pin = 2 [json_name = "pin"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.PWMRequest.pin"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PWMRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.PWMRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.PWMRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string pin = 2 [json_name = "pin"];
  if (!this->_internal_pin().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pin().data(), static_cast<int>(this->_internal_pin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.PWMRequest.pin");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pin(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.PWMRequest)
  return target;
}

size_t PWMRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.PWMRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string pin = 2 [json_name = "pin"];
  if (!this->_internal_pin().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pin());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PWMRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PWMRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PWMRequest::GetClassData() const { return &_class_data_; }

void PWMRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PWMRequest *>(to)->MergeFrom(
      static_cast<const PWMRequest &>(from));
}


void PWMRequest::MergeFrom(const PWMRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.PWMRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_pin().empty()) {
    _internal_set_pin(from._internal_pin());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PWMRequest::CopyFrom(const PWMRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.PWMRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PWMRequest::IsInitialized() const {
  return true;
}

void PWMRequest::InternalSwap(PWMRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pin_, lhs_arena,
      &other->pin_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PWMRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[6]);
}

// ===================================================================

class PWMResponse::_Internal {
 public:
};

PWMResponse::PWMResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.PWMResponse)
}
PWMResponse::PWMResponse(const PWMResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  duty_cycle_pct_ = from.duty_cycle_pct_;
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.PWMResponse)
}

inline void PWMResponse::SharedCtor() {
duty_cycle_pct_ = 0;
}

PWMResponse::~PWMResponse() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.PWMResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PWMResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PWMResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PWMResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.PWMResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  duty_cycle_pct_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PWMResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double duty_cycle_pct = 1 [json_name = "dutyCyclePct"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          duty_cycle_pct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PWMResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.PWMResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double duty_cycle_pct = 1 [json_name = "dutyCyclePct"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duty_cycle_pct = this->_internal_duty_cycle_pct();
  uint64_t raw_duty_cycle_pct;
  memcpy(&raw_duty_cycle_pct, &tmp_duty_cycle_pct, sizeof(tmp_duty_cycle_pct));
  if (raw_duty_cycle_pct != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_duty_cycle_pct(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.PWMResponse)
  return target;
}

size_t PWMResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.PWMResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double duty_cycle_pct = 1 [json_name = "dutyCyclePct"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duty_cycle_pct = this->_internal_duty_cycle_pct();
  uint64_t raw_duty_cycle_pct;
  memcpy(&raw_duty_cycle_pct, &tmp_duty_cycle_pct, sizeof(tmp_duty_cycle_pct));
  if (raw_duty_cycle_pct != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PWMResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PWMResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PWMResponse::GetClassData() const { return &_class_data_; }

void PWMResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PWMResponse *>(to)->MergeFrom(
      static_cast<const PWMResponse &>(from));
}


void PWMResponse::MergeFrom(const PWMResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.PWMResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duty_cycle_pct = from._internal_duty_cycle_pct();
  uint64_t raw_duty_cycle_pct;
  memcpy(&raw_duty_cycle_pct, &tmp_duty_cycle_pct, sizeof(tmp_duty_cycle_pct));
  if (raw_duty_cycle_pct != 0) {
    _internal_set_duty_cycle_pct(from._internal_duty_cycle_pct());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PWMResponse::CopyFrom(const PWMResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.PWMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PWMResponse::IsInitialized() const {
  return true;
}

void PWMResponse::InternalSwap(PWMResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(duty_cycle_pct_, other->duty_cycle_pct_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PWMResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[7]);
}

// ===================================================================

class SetPWMRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const SetPWMRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
SetPWMRequest::_Internal::extra(const SetPWMRequest* msg) {
  return *msg->extra_;
}
void SetPWMRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
SetPWMRequest::SetPWMRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.SetPWMRequest)
}
SetPWMRequest::SetPWMRequest(const SetPWMRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  pin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pin().empty()) {
    pin_.Set(from._internal_pin(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  duty_cycle_pct_ = from.duty_cycle_pct_;
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.SetPWMRequest)
}

inline void SetPWMRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pin_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pin_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&extra_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&duty_cycle_pct_) -
    reinterpret_cast<char*>(&extra_)) + sizeof(duty_cycle_pct_));
}

SetPWMRequest::~SetPWMRequest() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.SetPWMRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetPWMRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  pin_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void SetPWMRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetPWMRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.SetPWMRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  pin_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  duty_cycle_pct_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPWMRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.SetPWMRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string pin = 2 [json_name = "pin"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.SetPWMRequest.pin"));
        } else
          goto handle_unusual;
        continue;
      // double duty_cycle_pct = 3 [json_name = "dutyCyclePct"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          duty_cycle_pct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetPWMRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.SetPWMRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.SetPWMRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string pin = 2 [json_name = "pin"];
  if (!this->_internal_pin().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pin().data(), static_cast<int>(this->_internal_pin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.SetPWMRequest.pin");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pin(), target);
  }

  // double duty_cycle_pct = 3 [json_name = "dutyCyclePct"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duty_cycle_pct = this->_internal_duty_cycle_pct();
  uint64_t raw_duty_cycle_pct;
  memcpy(&raw_duty_cycle_pct, &tmp_duty_cycle_pct, sizeof(tmp_duty_cycle_pct));
  if (raw_duty_cycle_pct != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_duty_cycle_pct(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.SetPWMRequest)
  return target;
}

size_t SetPWMRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.SetPWMRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string pin = 2 [json_name = "pin"];
  if (!this->_internal_pin().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pin());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  // double duty_cycle_pct = 3 [json_name = "dutyCyclePct"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duty_cycle_pct = this->_internal_duty_cycle_pct();
  uint64_t raw_duty_cycle_pct;
  memcpy(&raw_duty_cycle_pct, &tmp_duty_cycle_pct, sizeof(tmp_duty_cycle_pct));
  if (raw_duty_cycle_pct != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPWMRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetPWMRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPWMRequest::GetClassData() const { return &_class_data_; }

void SetPWMRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetPWMRequest *>(to)->MergeFrom(
      static_cast<const SetPWMRequest &>(from));
}


void SetPWMRequest::MergeFrom(const SetPWMRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.SetPWMRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_pin().empty()) {
    _internal_set_pin(from._internal_pin());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duty_cycle_pct = from._internal_duty_cycle_pct();
  uint64_t raw_duty_cycle_pct;
  memcpy(&raw_duty_cycle_pct, &tmp_duty_cycle_pct, sizeof(tmp_duty_cycle_pct));
  if (raw_duty_cycle_pct != 0) {
    _internal_set_duty_cycle_pct(from._internal_duty_cycle_pct());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetPWMRequest::CopyFrom(const SetPWMRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.SetPWMRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPWMRequest::IsInitialized() const {
  return true;
}

void SetPWMRequest::InternalSwap(SetPWMRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pin_, lhs_arena,
      &other->pin_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetPWMRequest, duty_cycle_pct_)
      + sizeof(SetPWMRequest::duty_cycle_pct_)
      - PROTOBUF_FIELD_OFFSET(SetPWMRequest, extra_)>(
          reinterpret_cast<char*>(&extra_),
          reinterpret_cast<char*>(&other->extra_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPWMRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[8]);
}

// ===================================================================

class SetPWMResponse::_Internal {
 public:
};

SetPWMResponse::SetPWMResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.SetPWMResponse)
}
SetPWMResponse::SetPWMResponse(const SetPWMResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.SetPWMResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPWMResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPWMResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetPWMResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[9]);
}

// ===================================================================

class PWMFrequencyRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const PWMFrequencyRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
PWMFrequencyRequest::_Internal::extra(const PWMFrequencyRequest* msg) {
  return *msg->extra_;
}
void PWMFrequencyRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
PWMFrequencyRequest::PWMFrequencyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.PWMFrequencyRequest)
}
PWMFrequencyRequest::PWMFrequencyRequest(const PWMFrequencyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  pin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pin().empty()) {
    pin_.Set(from._internal_pin(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.PWMFrequencyRequest)
}

inline void PWMFrequencyRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pin_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pin_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

PWMFrequencyRequest::~PWMFrequencyRequest() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.PWMFrequencyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PWMFrequencyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  pin_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void PWMFrequencyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PWMFrequencyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.PWMFrequencyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  pin_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PWMFrequencyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.PWMFrequencyRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string pin = 2 [json_name = "pin"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.PWMFrequencyRequest.pin"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PWMFrequencyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.PWMFrequencyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.PWMFrequencyRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string pin = 2 [json_name = "pin"];
  if (!this->_internal_pin().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pin().data(), static_cast<int>(this->_internal_pin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.PWMFrequencyRequest.pin");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pin(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.PWMFrequencyRequest)
  return target;
}

size_t PWMFrequencyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.PWMFrequencyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string pin = 2 [json_name = "pin"];
  if (!this->_internal_pin().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pin());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PWMFrequencyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PWMFrequencyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PWMFrequencyRequest::GetClassData() const { return &_class_data_; }

void PWMFrequencyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PWMFrequencyRequest *>(to)->MergeFrom(
      static_cast<const PWMFrequencyRequest &>(from));
}


void PWMFrequencyRequest::MergeFrom(const PWMFrequencyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.PWMFrequencyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_pin().empty()) {
    _internal_set_pin(from._internal_pin());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PWMFrequencyRequest::CopyFrom(const PWMFrequencyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.PWMFrequencyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PWMFrequencyRequest::IsInitialized() const {
  return true;
}

void PWMFrequencyRequest::InternalSwap(PWMFrequencyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pin_, lhs_arena,
      &other->pin_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PWMFrequencyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[10]);
}

// ===================================================================

class PWMFrequencyResponse::_Internal {
 public:
};

PWMFrequencyResponse::PWMFrequencyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.PWMFrequencyResponse)
}
PWMFrequencyResponse::PWMFrequencyResponse(const PWMFrequencyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  frequency_hz_ = from.frequency_hz_;
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.PWMFrequencyResponse)
}

inline void PWMFrequencyResponse::SharedCtor() {
frequency_hz_ = uint64_t{0u};
}

PWMFrequencyResponse::~PWMFrequencyResponse() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.PWMFrequencyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PWMFrequencyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PWMFrequencyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PWMFrequencyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.PWMFrequencyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frequency_hz_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PWMFrequencyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 frequency_hz = 1 [json_name = "frequencyHz"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          frequency_hz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PWMFrequencyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.PWMFrequencyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 frequency_hz = 1 [json_name = "frequencyHz"];
  if (this->_internal_frequency_hz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_frequency_hz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.PWMFrequencyResponse)
  return target;
}

size_t PWMFrequencyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.PWMFrequencyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 frequency_hz = 1 [json_name = "frequencyHz"];
  if (this->_internal_frequency_hz() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_frequency_hz());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PWMFrequencyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PWMFrequencyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PWMFrequencyResponse::GetClassData() const { return &_class_data_; }

void PWMFrequencyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PWMFrequencyResponse *>(to)->MergeFrom(
      static_cast<const PWMFrequencyResponse &>(from));
}


void PWMFrequencyResponse::MergeFrom(const PWMFrequencyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.PWMFrequencyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_frequency_hz() != 0) {
    _internal_set_frequency_hz(from._internal_frequency_hz());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PWMFrequencyResponse::CopyFrom(const PWMFrequencyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.PWMFrequencyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PWMFrequencyResponse::IsInitialized() const {
  return true;
}

void PWMFrequencyResponse::InternalSwap(PWMFrequencyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(frequency_hz_, other->frequency_hz_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PWMFrequencyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[11]);
}

// ===================================================================

class SetPWMFrequencyRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const SetPWMFrequencyRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
SetPWMFrequencyRequest::_Internal::extra(const SetPWMFrequencyRequest* msg) {
  return *msg->extra_;
}
void SetPWMFrequencyRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
SetPWMFrequencyRequest::SetPWMFrequencyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.SetPWMFrequencyRequest)
}
SetPWMFrequencyRequest::SetPWMFrequencyRequest(const SetPWMFrequencyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  pin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pin().empty()) {
    pin_.Set(from._internal_pin(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  frequency_hz_ = from.frequency_hz_;
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.SetPWMFrequencyRequest)
}

inline void SetPWMFrequencyRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pin_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pin_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&extra_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&frequency_hz_) -
    reinterpret_cast<char*>(&extra_)) + sizeof(frequency_hz_));
}

SetPWMFrequencyRequest::~SetPWMFrequencyRequest() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.SetPWMFrequencyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetPWMFrequencyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  pin_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void SetPWMFrequencyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetPWMFrequencyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.SetPWMFrequencyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  pin_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  frequency_hz_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPWMFrequencyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.SetPWMFrequencyRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string pin = 2 [json_name = "pin"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.SetPWMFrequencyRequest.pin"));
        } else
          goto handle_unusual;
        continue;
      // uint64 frequency_hz = 3 [json_name = "frequencyHz"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          frequency_hz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetPWMFrequencyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.SetPWMFrequencyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.SetPWMFrequencyRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string pin = 2 [json_name = "pin"];
  if (!this->_internal_pin().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pin().data(), static_cast<int>(this->_internal_pin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.SetPWMFrequencyRequest.pin");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pin(), target);
  }

  // uint64 frequency_hz = 3 [json_name = "frequencyHz"];
  if (this->_internal_frequency_hz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_frequency_hz(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.SetPWMFrequencyRequest)
  return target;
}

size_t SetPWMFrequencyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.SetPWMFrequencyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string pin = 2 [json_name = "pin"];
  if (!this->_internal_pin().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pin());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  // uint64 frequency_hz = 3 [json_name = "frequencyHz"];
  if (this->_internal_frequency_hz() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_frequency_hz());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPWMFrequencyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetPWMFrequencyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPWMFrequencyRequest::GetClassData() const { return &_class_data_; }

void SetPWMFrequencyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetPWMFrequencyRequest *>(to)->MergeFrom(
      static_cast<const SetPWMFrequencyRequest &>(from));
}


void SetPWMFrequencyRequest::MergeFrom(const SetPWMFrequencyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.SetPWMFrequencyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_pin().empty()) {
    _internal_set_pin(from._internal_pin());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  if (from._internal_frequency_hz() != 0) {
    _internal_set_frequency_hz(from._internal_frequency_hz());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetPWMFrequencyRequest::CopyFrom(const SetPWMFrequencyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.SetPWMFrequencyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPWMFrequencyRequest::IsInitialized() const {
  return true;
}

void SetPWMFrequencyRequest::InternalSwap(SetPWMFrequencyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pin_, lhs_arena,
      &other->pin_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetPWMFrequencyRequest, frequency_hz_)
      + sizeof(SetPWMFrequencyRequest::frequency_hz_)
      - PROTOBUF_FIELD_OFFSET(SetPWMFrequencyRequest, extra_)>(
          reinterpret_cast<char*>(&extra_),
          reinterpret_cast<char*>(&other->extra_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPWMFrequencyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[12]);
}

// ===================================================================

class SetPWMFrequencyResponse::_Internal {
 public:
};

SetPWMFrequencyResponse::SetPWMFrequencyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.SetPWMFrequencyResponse)
}
SetPWMFrequencyResponse::SetPWMFrequencyResponse(const SetPWMFrequencyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.SetPWMFrequencyResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPWMFrequencyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPWMFrequencyResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetPWMFrequencyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[13]);
}

// ===================================================================

class ReadAnalogReaderRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const ReadAnalogReaderRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
ReadAnalogReaderRequest::_Internal::extra(const ReadAnalogReaderRequest* msg) {
  return *msg->extra_;
}
void ReadAnalogReaderRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
ReadAnalogReaderRequest::ReadAnalogReaderRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.ReadAnalogReaderRequest)
}
ReadAnalogReaderRequest::ReadAnalogReaderRequest(const ReadAnalogReaderRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  board_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    board_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_board_name().empty()) {
    board_name_.Set(from._internal_board_name(), 
      GetArenaForAllocation());
  }
  analog_reader_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    analog_reader_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_analog_reader_name().empty()) {
    analog_reader_name_.Set(from._internal_analog_reader_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.ReadAnalogReaderRequest)
}

inline void ReadAnalogReaderRequest::SharedCtor() {
board_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  board_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
analog_reader_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  analog_reader_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

ReadAnalogReaderRequest::~ReadAnalogReaderRequest() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.ReadAnalogReaderRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadAnalogReaderRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  board_name_.Destroy();
  analog_reader_name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void ReadAnalogReaderRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadAnalogReaderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.ReadAnalogReaderRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  board_name_.ClearToEmpty();
  analog_reader_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadAnalogReaderRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string board_name = 1 [json_name = "boardName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_board_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.ReadAnalogReaderRequest.board_name"));
        } else
          goto handle_unusual;
        continue;
      // string analog_reader_name = 2 [json_name = "analogReaderName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_analog_reader_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.ReadAnalogReaderRequest.analog_reader_name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadAnalogReaderRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.ReadAnalogReaderRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string board_name = 1 [json_name = "boardName"];
  if (!this->_internal_board_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_board_name().data(), static_cast<int>(this->_internal_board_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.ReadAnalogReaderRequest.board_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_board_name(), target);
  }

  // string analog_reader_name = 2 [json_name = "analogReaderName"];
  if (!this->_internal_analog_reader_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_analog_reader_name().data(), static_cast<int>(this->_internal_analog_reader_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.ReadAnalogReaderRequest.analog_reader_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_analog_reader_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.ReadAnalogReaderRequest)
  return target;
}

size_t ReadAnalogReaderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.ReadAnalogReaderRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string board_name = 1 [json_name = "boardName"];
  if (!this->_internal_board_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_board_name());
  }

  // string analog_reader_name = 2 [json_name = "analogReaderName"];
  if (!this->_internal_analog_reader_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_analog_reader_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadAnalogReaderRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReadAnalogReaderRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadAnalogReaderRequest::GetClassData() const { return &_class_data_; }

void ReadAnalogReaderRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReadAnalogReaderRequest *>(to)->MergeFrom(
      static_cast<const ReadAnalogReaderRequest &>(from));
}


void ReadAnalogReaderRequest::MergeFrom(const ReadAnalogReaderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.ReadAnalogReaderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_board_name().empty()) {
    _internal_set_board_name(from._internal_board_name());
  }
  if (!from._internal_analog_reader_name().empty()) {
    _internal_set_analog_reader_name(from._internal_analog_reader_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadAnalogReaderRequest::CopyFrom(const ReadAnalogReaderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.ReadAnalogReaderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadAnalogReaderRequest::IsInitialized() const {
  return true;
}

void ReadAnalogReaderRequest::InternalSwap(ReadAnalogReaderRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &board_name_, lhs_arena,
      &other->board_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &analog_reader_name_, lhs_arena,
      &other->analog_reader_name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadAnalogReaderRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[14]);
}

// ===================================================================

class ReadAnalogReaderResponse::_Internal {
 public:
};

ReadAnalogReaderResponse::ReadAnalogReaderResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.ReadAnalogReaderResponse)
}
ReadAnalogReaderResponse::ReadAnalogReaderResponse(const ReadAnalogReaderResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.ReadAnalogReaderResponse)
}

inline void ReadAnalogReaderResponse::SharedCtor() {
value_ = 0;
}

ReadAnalogReaderResponse::~ReadAnalogReaderResponse() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.ReadAnalogReaderResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadAnalogReaderResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReadAnalogReaderResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadAnalogReaderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.ReadAnalogReaderResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadAnalogReaderResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 value = 1 [json_name = "value"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadAnalogReaderResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.ReadAnalogReaderResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1 [json_name = "value"];
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.ReadAnalogReaderResponse)
  return target;
}

size_t ReadAnalogReaderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.ReadAnalogReaderResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1 [json_name = "value"];
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadAnalogReaderResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReadAnalogReaderResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadAnalogReaderResponse::GetClassData() const { return &_class_data_; }

void ReadAnalogReaderResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReadAnalogReaderResponse *>(to)->MergeFrom(
      static_cast<const ReadAnalogReaderResponse &>(from));
}


void ReadAnalogReaderResponse::MergeFrom(const ReadAnalogReaderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.ReadAnalogReaderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadAnalogReaderResponse::CopyFrom(const ReadAnalogReaderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.ReadAnalogReaderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadAnalogReaderResponse::IsInitialized() const {
  return true;
}

void ReadAnalogReaderResponse::InternalSwap(ReadAnalogReaderResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadAnalogReaderResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[15]);
}

// ===================================================================

class GetDigitalInterruptValueRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetDigitalInterruptValueRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetDigitalInterruptValueRequest::_Internal::extra(const GetDigitalInterruptValueRequest* msg) {
  return *msg->extra_;
}
void GetDigitalInterruptValueRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetDigitalInterruptValueRequest::GetDigitalInterruptValueRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.GetDigitalInterruptValueRequest)
}
GetDigitalInterruptValueRequest::GetDigitalInterruptValueRequest(const GetDigitalInterruptValueRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  board_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    board_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_board_name().empty()) {
    board_name_.Set(from._internal_board_name(), 
      GetArenaForAllocation());
  }
  digital_interrupt_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    digital_interrupt_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_digital_interrupt_name().empty()) {
    digital_interrupt_name_.Set(from._internal_digital_interrupt_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.GetDigitalInterruptValueRequest)
}

inline void GetDigitalInterruptValueRequest::SharedCtor() {
board_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  board_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
digital_interrupt_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  digital_interrupt_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetDigitalInterruptValueRequest::~GetDigitalInterruptValueRequest() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.GetDigitalInterruptValueRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetDigitalInterruptValueRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  board_name_.Destroy();
  digital_interrupt_name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetDigitalInterruptValueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetDigitalInterruptValueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.GetDigitalInterruptValueRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  board_name_.ClearToEmpty();
  digital_interrupt_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDigitalInterruptValueRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string board_name = 1 [json_name = "boardName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_board_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.GetDigitalInterruptValueRequest.board_name"));
        } else
          goto handle_unusual;
        continue;
      // string digital_interrupt_name = 2 [json_name = "digitalInterruptName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_digital_interrupt_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.GetDigitalInterruptValueRequest.digital_interrupt_name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDigitalInterruptValueRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.GetDigitalInterruptValueRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string board_name = 1 [json_name = "boardName"];
  if (!this->_internal_board_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_board_name().data(), static_cast<int>(this->_internal_board_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.GetDigitalInterruptValueRequest.board_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_board_name(), target);
  }

  // string digital_interrupt_name = 2 [json_name = "digitalInterruptName"];
  if (!this->_internal_digital_interrupt_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_digital_interrupt_name().data(), static_cast<int>(this->_internal_digital_interrupt_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.GetDigitalInterruptValueRequest.digital_interrupt_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_digital_interrupt_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.GetDigitalInterruptValueRequest)
  return target;
}

size_t GetDigitalInterruptValueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.GetDigitalInterruptValueRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string board_name = 1 [json_name = "boardName"];
  if (!this->_internal_board_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_board_name());
  }

  // string digital_interrupt_name = 2 [json_name = "digitalInterruptName"];
  if (!this->_internal_digital_interrupt_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_digital_interrupt_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDigitalInterruptValueRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetDigitalInterruptValueRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDigitalInterruptValueRequest::GetClassData() const { return &_class_data_; }

void GetDigitalInterruptValueRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetDigitalInterruptValueRequest *>(to)->MergeFrom(
      static_cast<const GetDigitalInterruptValueRequest &>(from));
}


void GetDigitalInterruptValueRequest::MergeFrom(const GetDigitalInterruptValueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.GetDigitalInterruptValueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_board_name().empty()) {
    _internal_set_board_name(from._internal_board_name());
  }
  if (!from._internal_digital_interrupt_name().empty()) {
    _internal_set_digital_interrupt_name(from._internal_digital_interrupt_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDigitalInterruptValueRequest::CopyFrom(const GetDigitalInterruptValueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.GetDigitalInterruptValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDigitalInterruptValueRequest::IsInitialized() const {
  return true;
}

void GetDigitalInterruptValueRequest::InternalSwap(GetDigitalInterruptValueRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &board_name_, lhs_arena,
      &other->board_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &digital_interrupt_name_, lhs_arena,
      &other->digital_interrupt_name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDigitalInterruptValueRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[16]);
}

// ===================================================================

class GetDigitalInterruptValueResponse::_Internal {
 public:
};

GetDigitalInterruptValueResponse::GetDigitalInterruptValueResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.GetDigitalInterruptValueResponse)
}
GetDigitalInterruptValueResponse::GetDigitalInterruptValueResponse(const GetDigitalInterruptValueResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.GetDigitalInterruptValueResponse)
}

inline void GetDigitalInterruptValueResponse::SharedCtor() {
value_ = int64_t{0};
}

GetDigitalInterruptValueResponse::~GetDigitalInterruptValueResponse() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.GetDigitalInterruptValueResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetDigitalInterruptValueResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetDigitalInterruptValueResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetDigitalInterruptValueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.GetDigitalInterruptValueResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDigitalInterruptValueResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 value = 1 [json_name = "value"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDigitalInterruptValueResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.GetDigitalInterruptValueResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1 [json_name = "value"];
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.GetDigitalInterruptValueResponse)
  return target;
}

size_t GetDigitalInterruptValueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.GetDigitalInterruptValueResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 value = 1 [json_name = "value"];
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDigitalInterruptValueResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetDigitalInterruptValueResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDigitalInterruptValueResponse::GetClassData() const { return &_class_data_; }

void GetDigitalInterruptValueResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetDigitalInterruptValueResponse *>(to)->MergeFrom(
      static_cast<const GetDigitalInterruptValueResponse &>(from));
}


void GetDigitalInterruptValueResponse::MergeFrom(const GetDigitalInterruptValueResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.GetDigitalInterruptValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDigitalInterruptValueResponse::CopyFrom(const GetDigitalInterruptValueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.GetDigitalInterruptValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDigitalInterruptValueResponse::IsInitialized() const {
  return true;
}

void GetDigitalInterruptValueResponse::InternalSwap(GetDigitalInterruptValueResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDigitalInterruptValueResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[17]);
}

// ===================================================================

class SetPowerModeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetPowerModeRequest>()._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Duration& duration(const SetPowerModeRequest* msg);
  static void set_has_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const SetPowerModeRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Duration&
SetPowerModeRequest::_Internal::duration(const SetPowerModeRequest* msg) {
  return *msg->duration_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
SetPowerModeRequest::_Internal::extra(const SetPowerModeRequest* msg) {
  return *msg->extra_;
}
void SetPowerModeRequest::clear_duration() {
  if (duration_ != nullptr) duration_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void SetPowerModeRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
SetPowerModeRequest::SetPowerModeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.SetPowerModeRequest)
}
SetPowerModeRequest::SetPowerModeRequest(const SetPowerModeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_duration()) {
    duration_ = new ::PROTOBUF_NAMESPACE_ID::Duration(*from.duration_);
  } else {
    duration_ = nullptr;
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  power_mode_ = from.power_mode_;
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.SetPowerModeRequest)
}

inline void SetPowerModeRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&duration_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&power_mode_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(power_mode_));
}

SetPowerModeRequest::~SetPowerModeRequest() {
  // @@protoc_insertion_point(destructor:viam.component.board.v1.SetPowerModeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetPowerModeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete duration_;
  if (this != internal_default_instance()) delete extra_;
}

void SetPowerModeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetPowerModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.board.v1.SetPowerModeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(duration_ != nullptr);
    duration_->Clear();
  }
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  power_mode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPowerModeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.board.v1.SetPowerModeRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .viam.component.board.v1.PowerMode power_mode = 2 [json_name = "powerMode"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_power_mode(static_cast<::viam::component::board::v1::PowerMode>(val));
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.Duration duration = 3 [json_name = "duration"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_duration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetPowerModeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.board.v1.SetPowerModeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.board.v1.SetPowerModeRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .viam.component.board.v1.PowerMode power_mode = 2 [json_name = "powerMode"];
  if (this->_internal_power_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_power_mode(), target);
  }

  // optional .google.protobuf.Duration duration = 3 [json_name = "duration"];
  if (_internal_has_duration()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::duration(this),
        _Internal::duration(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.board.v1.SetPowerModeRequest)
  return target;
}

size_t SetPowerModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.board.v1.SetPowerModeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // optional .google.protobuf.Duration duration = 3 [json_name = "duration"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *duration_);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  // .viam.component.board.v1.PowerMode power_mode = 2 [json_name = "powerMode"];
  if (this->_internal_power_mode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_power_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPowerModeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetPowerModeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPowerModeRequest::GetClassData() const { return &_class_data_; }

void SetPowerModeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetPowerModeRequest *>(to)->MergeFrom(
      static_cast<const SetPowerModeRequest &>(from));
}


void SetPowerModeRequest::MergeFrom(const SetPowerModeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.board.v1.SetPowerModeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_duration()) {
    _internal_mutable_duration()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_duration());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  if (from._internal_power_mode() != 0) {
    _internal_set_power_mode(from._internal_power_mode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetPowerModeRequest::CopyFrom(const SetPowerModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.board.v1.SetPowerModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPowerModeRequest::IsInitialized() const {
  return true;
}

void SetPowerModeRequest::InternalSwap(SetPowerModeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetPowerModeRequest, power_mode_)
      + sizeof(SetPowerModeRequest::power_mode_)
      - PROTOBUF_FIELD_OFFSET(SetPowerModeRequest, duration_)>(
          reinterpret_cast<char*>(&duration_),
          reinterpret_cast<char*>(&other->duration_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPowerModeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[18]);
}

// ===================================================================

class SetPowerModeResponse::_Internal {
 public:
};

SetPowerModeResponse::SetPowerModeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.component.board.v1.SetPowerModeResponse)
}
SetPowerModeResponse::SetPowerModeResponse(const SetPowerModeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.component.board.v1.SetPowerModeResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPowerModeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPowerModeResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetPowerModeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_getter, &descriptor_table_component_2fboard_2fv1_2fboard_2eproto_once,
      file_level_metadata_component_2fboard_2fv1_2fboard_2eproto[19]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace board
}  // namespace component
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::StatusRequest*
Arena::CreateMaybeMessage< ::viam::component::board::v1::StatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::StatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::StatusResponse*
Arena::CreateMaybeMessage< ::viam::component::board::v1::StatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::StatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::SetGPIORequest*
Arena::CreateMaybeMessage< ::viam::component::board::v1::SetGPIORequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::SetGPIORequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::SetGPIOResponse*
Arena::CreateMaybeMessage< ::viam::component::board::v1::SetGPIOResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::SetGPIOResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::GetGPIORequest*
Arena::CreateMaybeMessage< ::viam::component::board::v1::GetGPIORequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::GetGPIORequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::GetGPIOResponse*
Arena::CreateMaybeMessage< ::viam::component::board::v1::GetGPIOResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::GetGPIOResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::PWMRequest*
Arena::CreateMaybeMessage< ::viam::component::board::v1::PWMRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::PWMRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::PWMResponse*
Arena::CreateMaybeMessage< ::viam::component::board::v1::PWMResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::PWMResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::SetPWMRequest*
Arena::CreateMaybeMessage< ::viam::component::board::v1::SetPWMRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::SetPWMRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::SetPWMResponse*
Arena::CreateMaybeMessage< ::viam::component::board::v1::SetPWMResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::SetPWMResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::PWMFrequencyRequest*
Arena::CreateMaybeMessage< ::viam::component::board::v1::PWMFrequencyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::PWMFrequencyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::PWMFrequencyResponse*
Arena::CreateMaybeMessage< ::viam::component::board::v1::PWMFrequencyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::PWMFrequencyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::SetPWMFrequencyRequest*
Arena::CreateMaybeMessage< ::viam::component::board::v1::SetPWMFrequencyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::SetPWMFrequencyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::SetPWMFrequencyResponse*
Arena::CreateMaybeMessage< ::viam::component::board::v1::SetPWMFrequencyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::SetPWMFrequencyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::ReadAnalogReaderRequest*
Arena::CreateMaybeMessage< ::viam::component::board::v1::ReadAnalogReaderRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::ReadAnalogReaderRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::ReadAnalogReaderResponse*
Arena::CreateMaybeMessage< ::viam::component::board::v1::ReadAnalogReaderResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::ReadAnalogReaderResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::GetDigitalInterruptValueRequest*
Arena::CreateMaybeMessage< ::viam::component::board::v1::GetDigitalInterruptValueRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::GetDigitalInterruptValueRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::GetDigitalInterruptValueResponse*
Arena::CreateMaybeMessage< ::viam::component::board::v1::GetDigitalInterruptValueResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::GetDigitalInterruptValueResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::SetPowerModeRequest*
Arena::CreateMaybeMessage< ::viam::component::board::v1::SetPowerModeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::SetPowerModeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::board::v1::SetPowerModeResponse*
Arena::CreateMaybeMessage< ::viam::component::board::v1::SetPowerModeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::board::v1::SetPowerModeResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
