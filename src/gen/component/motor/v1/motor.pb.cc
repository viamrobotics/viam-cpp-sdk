// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component/motor/v1/motor.proto

#include "component/motor/v1/motor.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace component {
namespace motor {
namespace v1 {
PROTOBUF_CONSTEXPR SetPowerRequest::SetPowerRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr)
  , power_pct_(0){}
struct SetPowerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPowerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPowerRequestDefaultTypeInternal() {}
  union {
    SetPowerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPowerRequestDefaultTypeInternal _SetPowerRequest_default_instance_;
PROTOBUF_CONSTEXPR SetPowerResponse::SetPowerResponse(
    ::_pbi::ConstantInitialized){}
struct SetPowerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPowerResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPowerResponseDefaultTypeInternal() {}
  union {
    SetPowerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPowerResponseDefaultTypeInternal _SetPowerResponse_default_instance_;
PROTOBUF_CONSTEXPR GoForRequest::GoForRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr)
  , rpm_(0)
  , revolutions_(0){}
struct GoForRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GoForRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GoForRequestDefaultTypeInternal() {}
  union {
    GoForRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GoForRequestDefaultTypeInternal _GoForRequest_default_instance_;
PROTOBUF_CONSTEXPR GoForResponse::GoForResponse(
    ::_pbi::ConstantInitialized){}
struct GoForResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GoForResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GoForResponseDefaultTypeInternal() {}
  union {
    GoForResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GoForResponseDefaultTypeInternal _GoForResponse_default_instance_;
PROTOBUF_CONSTEXPR GoToRequest::GoToRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr)
  , rpm_(0)
  , position_revolutions_(0){}
struct GoToRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GoToRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GoToRequestDefaultTypeInternal() {}
  union {
    GoToRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GoToRequestDefaultTypeInternal _GoToRequest_default_instance_;
PROTOBUF_CONSTEXPR GoToResponse::GoToResponse(
    ::_pbi::ConstantInitialized){}
struct GoToResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GoToResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GoToResponseDefaultTypeInternal() {}
  union {
    GoToResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GoToResponseDefaultTypeInternal _GoToResponse_default_instance_;
PROTOBUF_CONSTEXPR ResetZeroPositionRequest::ResetZeroPositionRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr)
  , offset_(0){}
struct ResetZeroPositionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetZeroPositionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetZeroPositionRequestDefaultTypeInternal() {}
  union {
    ResetZeroPositionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetZeroPositionRequestDefaultTypeInternal _ResetZeroPositionRequest_default_instance_;
PROTOBUF_CONSTEXPR ResetZeroPositionResponse::ResetZeroPositionResponse(
    ::_pbi::ConstantInitialized){}
struct ResetZeroPositionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetZeroPositionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetZeroPositionResponseDefaultTypeInternal() {}
  union {
    ResetZeroPositionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetZeroPositionResponseDefaultTypeInternal _ResetZeroPositionResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPositionRequest::GetPositionRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetPositionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPositionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPositionRequestDefaultTypeInternal() {}
  union {
    GetPositionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPositionRequestDefaultTypeInternal _GetPositionRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPositionResponse::GetPositionResponse(
    ::_pbi::ConstantInitialized)
  : position_(0){}
struct GetPositionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPositionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPositionResponseDefaultTypeInternal() {}
  union {
    GetPositionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPositionResponseDefaultTypeInternal _GetPositionResponse_default_instance_;
PROTOBUF_CONSTEXPR StopRequest::StopRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct StopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopRequestDefaultTypeInternal() {}
  union {
    StopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopRequestDefaultTypeInternal _StopRequest_default_instance_;
PROTOBUF_CONSTEXPR StopResponse::StopResponse(
    ::_pbi::ConstantInitialized){}
struct StopResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopResponseDefaultTypeInternal() {}
  union {
    StopResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopResponseDefaultTypeInternal _StopResponse_default_instance_;
PROTOBUF_CONSTEXPR IsPoweredRequest::IsPoweredRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct IsPoweredRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsPoweredRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsPoweredRequestDefaultTypeInternal() {}
  union {
    IsPoweredRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsPoweredRequestDefaultTypeInternal _IsPoweredRequest_default_instance_;
PROTOBUF_CONSTEXPR IsPoweredResponse::IsPoweredResponse(
    ::_pbi::ConstantInitialized)
  : power_pct_(0)
  , is_on_(false){}
struct IsPoweredResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsPoweredResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsPoweredResponseDefaultTypeInternal() {}
  union {
    IsPoweredResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsPoweredResponseDefaultTypeInternal _IsPoweredResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPropertiesRequest::GetPropertiesRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetPropertiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPropertiesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPropertiesRequestDefaultTypeInternal() {}
  union {
    GetPropertiesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPropertiesRequestDefaultTypeInternal _GetPropertiesRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPropertiesResponse::GetPropertiesResponse(
    ::_pbi::ConstantInitialized)
  : position_reporting_(false){}
struct GetPropertiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPropertiesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPropertiesResponseDefaultTypeInternal() {}
  union {
    GetPropertiesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPropertiesResponseDefaultTypeInternal _GetPropertiesResponse_default_instance_;
PROTOBUF_CONSTEXPR Status::Status(
    ::_pbi::ConstantInitialized)
  : position_(0)
  , is_powered_(false)
  , is_moving_(false){}
struct StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusDefaultTypeInternal _Status_default_instance_;
PROTOBUF_CONSTEXPR IsMovingRequest::IsMovingRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct IsMovingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsMovingRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsMovingRequestDefaultTypeInternal() {}
  union {
    IsMovingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsMovingRequestDefaultTypeInternal _IsMovingRequest_default_instance_;
PROTOBUF_CONSTEXPR IsMovingResponse::IsMovingResponse(
    ::_pbi::ConstantInitialized)
  : is_moving_(false){}
struct IsMovingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsMovingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsMovingResponseDefaultTypeInternal() {}
  union {
    IsMovingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsMovingResponseDefaultTypeInternal _IsMovingResponse_default_instance_;
}  // namespace v1
}  // namespace motor
}  // namespace component
}  // namespace viam
static ::_pb::Metadata file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[19];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_component_2fmotor_2fv1_2fmotor_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_component_2fmotor_2fv1_2fmotor_2eproto = nullptr;

const uint32_t TableStruct_component_2fmotor_2fv1_2fmotor_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::SetPowerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::SetPowerRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::SetPowerRequest, power_pct_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::SetPowerRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::SetPowerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GoForRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GoForRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GoForRequest, rpm_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GoForRequest, revolutions_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GoForRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GoForResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GoToRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GoToRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GoToRequest, rpm_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GoToRequest, position_revolutions_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GoToRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GoToResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::ResetZeroPositionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::ResetZeroPositionRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::ResetZeroPositionRequest, offset_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::ResetZeroPositionRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::ResetZeroPositionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GetPositionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GetPositionRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GetPositionRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GetPositionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GetPositionResponse, position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::StopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::StopRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::StopRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::StopResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::IsPoweredRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::IsPoweredRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::IsPoweredRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::IsPoweredResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::IsPoweredResponse, is_on_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::IsPoweredResponse, power_pct_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GetPropertiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GetPropertiesRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GetPropertiesRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GetPropertiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::GetPropertiesResponse, position_reporting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::Status, is_powered_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::Status, position_),
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::Status, is_moving_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::IsMovingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::IsMovingRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::IsMovingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::motor::v1::IsMovingResponse, is_moving_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::component::motor::v1::SetPowerRequest)},
  { 9, -1, -1, sizeof(::viam::component::motor::v1::SetPowerResponse)},
  { 15, -1, -1, sizeof(::viam::component::motor::v1::GoForRequest)},
  { 25, -1, -1, sizeof(::viam::component::motor::v1::GoForResponse)},
  { 31, -1, -1, sizeof(::viam::component::motor::v1::GoToRequest)},
  { 41, -1, -1, sizeof(::viam::component::motor::v1::GoToResponse)},
  { 47, -1, -1, sizeof(::viam::component::motor::v1::ResetZeroPositionRequest)},
  { 56, -1, -1, sizeof(::viam::component::motor::v1::ResetZeroPositionResponse)},
  { 62, -1, -1, sizeof(::viam::component::motor::v1::GetPositionRequest)},
  { 70, -1, -1, sizeof(::viam::component::motor::v1::GetPositionResponse)},
  { 77, -1, -1, sizeof(::viam::component::motor::v1::StopRequest)},
  { 85, -1, -1, sizeof(::viam::component::motor::v1::StopResponse)},
  { 91, -1, -1, sizeof(::viam::component::motor::v1::IsPoweredRequest)},
  { 99, -1, -1, sizeof(::viam::component::motor::v1::IsPoweredResponse)},
  { 107, -1, -1, sizeof(::viam::component::motor::v1::GetPropertiesRequest)},
  { 115, -1, -1, sizeof(::viam::component::motor::v1::GetPropertiesResponse)},
  { 122, -1, -1, sizeof(::viam::component::motor::v1::Status)},
  { 131, -1, -1, sizeof(::viam::component::motor::v1::IsMovingRequest)},
  { 138, -1, -1, sizeof(::viam::component::motor::v1::IsMovingResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::component::motor::v1::_SetPowerRequest_default_instance_._instance,
  &::viam::component::motor::v1::_SetPowerResponse_default_instance_._instance,
  &::viam::component::motor::v1::_GoForRequest_default_instance_._instance,
  &::viam::component::motor::v1::_GoForResponse_default_instance_._instance,
  &::viam::component::motor::v1::_GoToRequest_default_instance_._instance,
  &::viam::component::motor::v1::_GoToResponse_default_instance_._instance,
  &::viam::component::motor::v1::_ResetZeroPositionRequest_default_instance_._instance,
  &::viam::component::motor::v1::_ResetZeroPositionResponse_default_instance_._instance,
  &::viam::component::motor::v1::_GetPositionRequest_default_instance_._instance,
  &::viam::component::motor::v1::_GetPositionResponse_default_instance_._instance,
  &::viam::component::motor::v1::_StopRequest_default_instance_._instance,
  &::viam::component::motor::v1::_StopResponse_default_instance_._instance,
  &::viam::component::motor::v1::_IsPoweredRequest_default_instance_._instance,
  &::viam::component::motor::v1::_IsPoweredResponse_default_instance_._instance,
  &::viam::component::motor::v1::_GetPropertiesRequest_default_instance_._instance,
  &::viam::component::motor::v1::_GetPropertiesResponse_default_instance_._instance,
  &::viam::component::motor::v1::_Status_default_instance_._instance,
  &::viam::component::motor::v1::_IsMovingRequest_default_instance_._instance,
  &::viam::component::motor::v1::_IsMovingResponse_default_instance_._instance,
};

const char descriptor_table_protodef_component_2fmotor_2fv1_2fmotor_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036component/motor/v1/motor.proto\022\027viam.c"
  "omponent.motor.v1\032\026common/v1/common.prot"
  "o\032\034google/api/annotations.proto\032\034google/"
  "protobuf/struct.proto\"q\n\017SetPowerRequest"
  "\022\022\n\004name\030\001 \001(\tR\004name\022\033\n\tpower_pct\030\002 \001(\001R"
  "\010powerPct\022-\n\005extra\030c \001(\0132\027.google.protob"
  "uf.StructR\005extra\"\022\n\020SetPowerResponse\"\205\001\n"
  "\014GoForRequest\022\022\n\004name\030\001 \001(\tR\004name\022\020\n\003rpm"
  "\030\002 \001(\001R\003rpm\022 \n\013revolutions\030\003 \001(\001R\013revolu"
  "tions\022-\n\005extra\030c \001(\0132\027.google.protobuf.S"
  "tructR\005extra\"\017\n\rGoForResponse\"\225\001\n\013GoToRe"
  "quest\022\022\n\004name\030\001 \001(\tR\004name\022\020\n\003rpm\030\002 \001(\001R\003"
  "rpm\0221\n\024position_revolutions\030\003 \001(\001R\023posit"
  "ionRevolutions\022-\n\005extra\030c \001(\0132\027.google.p"
  "rotobuf.StructR\005extra\"\016\n\014GoToResponse\"u\n"
  "\030ResetZeroPositionRequest\022\022\n\004name\030\001 \001(\tR"
  "\004name\022\026\n\006offset\030\002 \001(\001R\006offset\022-\n\005extra\030c"
  " \001(\0132\027.google.protobuf.StructR\005extra\"\033\n\031"
  "ResetZeroPositionResponse\"W\n\022GetPosition"
  "Request\022\022\n\004name\030\001 \001(\tR\004name\022-\n\005extra\030c \001"
  "(\0132\027.google.protobuf.StructR\005extra\"1\n\023Ge"
  "tPositionResponse\022\032\n\010position\030\001 \001(\001R\010pos"
  "ition\"P\n\013StopRequest\022\022\n\004name\030\001 \001(\tR\004name"
  "\022-\n\005extra\030c \001(\0132\027.google.protobuf.Struct"
  "R\005extra\"\016\n\014StopResponse\"U\n\020IsPoweredRequ"
  "est\022\022\n\004name\030\001 \001(\tR\004name\022-\n\005extra\030c \001(\0132\027"
  ".google.protobuf.StructR\005extra\"E\n\021IsPowe"
  "redResponse\022\023\n\005is_on\030\001 \001(\010R\004isOn\022\033\n\tpowe"
  "r_pct\030\002 \001(\001R\010powerPct\"Y\n\024GetPropertiesRe"
  "quest\022\022\n\004name\030\001 \001(\tR\004name\022-\n\005extra\030c \001(\013"
  "2\027.google.protobuf.StructR\005extra\"F\n\025GetP"
  "ropertiesResponse\022-\n\022position_reporting\030"
  "\001 \001(\010R\021positionReporting\"`\n\006Status\022\035\n\nis"
  "_powered\030\001 \001(\010R\tisPowered\022\032\n\010position\030\003 "
  "\001(\001R\010position\022\033\n\tis_moving\030\004 \001(\010R\010isMovi"
  "ng\"%\n\017IsMovingRequest\022\022\n\004name\030\001 \001(\tR\004nam"
  "e\"/\n\020IsMovingResponse\022\033\n\tis_moving\030\001 \001(\010"
  "R\010isMoving2\202\014\n\014MotorService\022\226\001\n\010SetPower"
  "\022(.viam.component.motor.v1.SetPowerReque"
  "st\032).viam.component.motor.v1.SetPowerRes"
  "ponse\"5\240\222)\001\202\323\344\223\002+\032)/viam/api/v1/componen"
  "t/motor/{name}/power\022\216\001\n\005GoFor\022%.viam.co"
  "mponent.motor.v1.GoForRequest\032&.viam.com"
  "ponent.motor.v1.GoForResponse\"6\240\222)\001\202\323\344\223\002"
  ",\032*/viam/api/v1/component/motor/{name}/g"
  "o_for\022\212\001\n\004GoTo\022$.viam.component.motor.v1"
  ".GoToRequest\032%.viam.component.motor.v1.G"
  "oToResponse\"5\240\222)\001\202\323\344\223\002+\032)/viam/api/v1/co"
  "mponent/motor/{name}/go_to\022\254\001\n\021ResetZero"
  "Position\0221.viam.component.motor.v1.Reset"
  "ZeroPositionRequest\0322.viam.component.mot"
  "or.v1.ResetZeroPositionResponse\"0\202\323\344\223\002*\032"
  "(/viam/api/v1/component/motor/{name}/zer"
  "o\022\236\001\n\013GetPosition\022+.viam.component.motor"
  ".v1.GetPositionRequest\032,.viam.component."
  "motor.v1.GetPositionResponse\"4\202\323\344\223\002.\022,/v"
  "iam/api/v1/component/motor/{name}/positi"
  "on\022\244\001\n\rGetProperties\022-.viam.component.mo"
  "tor.v1.GetPropertiesRequest\032..viam.compo"
  "nent.motor.v1.GetPropertiesResponse\"4\202\323\344"
  "\223\002.\022,/viam/api/v1/component/motor/{name}"
  "/features\022\205\001\n\004Stop\022$.viam.component.moto"
  "r.v1.StopRequest\032%.viam.component.motor."
  "v1.StopResponse\"0\202\323\344\223\002*\032(/viam/api/v1/co"
  "mponent/motor/{name}/stop\022\227\001\n\tIsPowered\022"
  ").viam.component.motor.v1.IsPoweredReque"
  "st\032*.viam.component.motor.v1.IsPoweredRe"
  "sponse\"3\202\323\344\223\002-\022+/viam/api/v1/component/m"
  "otor/{name}/powered\022\226\001\n\010IsMoving\022(.viam."
  "component.motor.v1.IsMovingRequest\032).via"
  "m.component.motor.v1.IsMovingResponse\"5\202"
  "\323\344\223\002/\022-/viam/api/v1/component/motor/{nam"
  "e}/is_moving\022\210\001\n\tDoCommand\022 .viam.common"
  ".v1.DoCommandRequest\032!.viam.common.v1.Do"
  "CommandResponse\"6\202\323\344\223\0020\"./viam/api/v1/co"
  "mponent/motor/{name}/do_commandBA\n\033com.v"
  "iam.component.motor.v1Z\"go.viam.com/api/"
  "component/motor/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_deps[3] = {
  &::descriptor_table_common_2fv1_2fcommon_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto = {
    false, false, 3106, descriptor_table_protodef_component_2fmotor_2fv1_2fmotor_2eproto,
    "component/motor/v1/motor.proto",
    &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once, descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_deps, 3, 19,
    schemas, file_default_instances, TableStruct_component_2fmotor_2fv1_2fmotor_2eproto::offsets,
    file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto, file_level_enum_descriptors_component_2fmotor_2fv1_2fmotor_2eproto,
    file_level_service_descriptors_component_2fmotor_2fv1_2fmotor_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter() {
  return &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_component_2fmotor_2fv1_2fmotor_2eproto(&descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto);
namespace viam {
namespace component {
namespace motor {
namespace v1 {

// ===================================================================

class SetPowerRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const SetPowerRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
SetPowerRequest::_Internal::extra(const SetPowerRequest* msg) {
  return *msg->extra_;
}
void SetPowerRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
SetPowerRequest::SetPowerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.SetPowerRequest)
}
SetPowerRequest::SetPowerRequest(const SetPowerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  power_pct_ = from.power_pct_;
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.SetPowerRequest)
}

inline void SetPowerRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&extra_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&power_pct_) -
    reinterpret_cast<char*>(&extra_)) + sizeof(power_pct_));
}

SetPowerRequest::~SetPowerRequest() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.SetPowerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetPowerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void SetPowerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetPowerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.SetPowerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  power_pct_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPowerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.motor.v1.SetPowerRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // double power_pct = 2 [json_name = "powerPct"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          power_pct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetPowerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.SetPowerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.motor.v1.SetPowerRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // double power_pct = 2 [json_name = "powerPct"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_power_pct = this->_internal_power_pct();
  uint64_t raw_power_pct;
  memcpy(&raw_power_pct, &tmp_power_pct, sizeof(tmp_power_pct));
  if (raw_power_pct != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_power_pct(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.SetPowerRequest)
  return target;
}

size_t SetPowerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.SetPowerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  // double power_pct = 2 [json_name = "powerPct"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_power_pct = this->_internal_power_pct();
  uint64_t raw_power_pct;
  memcpy(&raw_power_pct, &tmp_power_pct, sizeof(tmp_power_pct));
  if (raw_power_pct != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPowerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetPowerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPowerRequest::GetClassData() const { return &_class_data_; }

void SetPowerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetPowerRequest *>(to)->MergeFrom(
      static_cast<const SetPowerRequest &>(from));
}


void SetPowerRequest::MergeFrom(const SetPowerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.SetPowerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_power_pct = from._internal_power_pct();
  uint64_t raw_power_pct;
  memcpy(&raw_power_pct, &tmp_power_pct, sizeof(tmp_power_pct));
  if (raw_power_pct != 0) {
    _internal_set_power_pct(from._internal_power_pct());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetPowerRequest::CopyFrom(const SetPowerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.SetPowerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPowerRequest::IsInitialized() const {
  return true;
}

void SetPowerRequest::InternalSwap(SetPowerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetPowerRequest, power_pct_)
      + sizeof(SetPowerRequest::power_pct_)
      - PROTOBUF_FIELD_OFFSET(SetPowerRequest, extra_)>(
          reinterpret_cast<char*>(&extra_),
          reinterpret_cast<char*>(&other->extra_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPowerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[0]);
}

// ===================================================================

class SetPowerResponse::_Internal {
 public:
};

SetPowerResponse::SetPowerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.SetPowerResponse)
}
SetPowerResponse::SetPowerResponse(const SetPowerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.SetPowerResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPowerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPowerResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetPowerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[1]);
}

// ===================================================================

class GoForRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GoForRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GoForRequest::_Internal::extra(const GoForRequest* msg) {
  return *msg->extra_;
}
void GoForRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GoForRequest::GoForRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.GoForRequest)
}
GoForRequest::GoForRequest(const GoForRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  ::memcpy(&rpm_, &from.rpm_,
    static_cast<size_t>(reinterpret_cast<char*>(&revolutions_) -
    reinterpret_cast<char*>(&rpm_)) + sizeof(revolutions_));
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.GoForRequest)
}

inline void GoForRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&extra_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&revolutions_) -
    reinterpret_cast<char*>(&extra_)) + sizeof(revolutions_));
}

GoForRequest::~GoForRequest() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.GoForRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GoForRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GoForRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GoForRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.GoForRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  ::memset(&rpm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&revolutions_) -
      reinterpret_cast<char*>(&rpm_)) + sizeof(revolutions_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GoForRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.motor.v1.GoForRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // double rpm = 2 [json_name = "rpm"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          rpm_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double revolutions = 3 [json_name = "revolutions"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          revolutions_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GoForRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.GoForRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.motor.v1.GoForRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // double rpm = 2 [json_name = "rpm"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_rpm = this->_internal_rpm();
  uint64_t raw_rpm;
  memcpy(&raw_rpm, &tmp_rpm, sizeof(tmp_rpm));
  if (raw_rpm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_rpm(), target);
  }

  // double revolutions = 3 [json_name = "revolutions"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_revolutions = this->_internal_revolutions();
  uint64_t raw_revolutions;
  memcpy(&raw_revolutions, &tmp_revolutions, sizeof(tmp_revolutions));
  if (raw_revolutions != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_revolutions(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.GoForRequest)
  return target;
}

size_t GoForRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.GoForRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  // double rpm = 2 [json_name = "rpm"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_rpm = this->_internal_rpm();
  uint64_t raw_rpm;
  memcpy(&raw_rpm, &tmp_rpm, sizeof(tmp_rpm));
  if (raw_rpm != 0) {
    total_size += 1 + 8;
  }

  // double revolutions = 3 [json_name = "revolutions"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_revolutions = this->_internal_revolutions();
  uint64_t raw_revolutions;
  memcpy(&raw_revolutions, &tmp_revolutions, sizeof(tmp_revolutions));
  if (raw_revolutions != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GoForRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GoForRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GoForRequest::GetClassData() const { return &_class_data_; }

void GoForRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GoForRequest *>(to)->MergeFrom(
      static_cast<const GoForRequest &>(from));
}


void GoForRequest::MergeFrom(const GoForRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.GoForRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_rpm = from._internal_rpm();
  uint64_t raw_rpm;
  memcpy(&raw_rpm, &tmp_rpm, sizeof(tmp_rpm));
  if (raw_rpm != 0) {
    _internal_set_rpm(from._internal_rpm());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_revolutions = from._internal_revolutions();
  uint64_t raw_revolutions;
  memcpy(&raw_revolutions, &tmp_revolutions, sizeof(tmp_revolutions));
  if (raw_revolutions != 0) {
    _internal_set_revolutions(from._internal_revolutions());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GoForRequest::CopyFrom(const GoForRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.GoForRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoForRequest::IsInitialized() const {
  return true;
}

void GoForRequest::InternalSwap(GoForRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GoForRequest, revolutions_)
      + sizeof(GoForRequest::revolutions_)
      - PROTOBUF_FIELD_OFFSET(GoForRequest, extra_)>(
          reinterpret_cast<char*>(&extra_),
          reinterpret_cast<char*>(&other->extra_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GoForRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[2]);
}

// ===================================================================

class GoForResponse::_Internal {
 public:
};

GoForResponse::GoForResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.GoForResponse)
}
GoForResponse::GoForResponse(const GoForResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.GoForResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GoForResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GoForResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GoForResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[3]);
}

// ===================================================================

class GoToRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GoToRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GoToRequest::_Internal::extra(const GoToRequest* msg) {
  return *msg->extra_;
}
void GoToRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GoToRequest::GoToRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.GoToRequest)
}
GoToRequest::GoToRequest(const GoToRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  ::memcpy(&rpm_, &from.rpm_,
    static_cast<size_t>(reinterpret_cast<char*>(&position_revolutions_) -
    reinterpret_cast<char*>(&rpm_)) + sizeof(position_revolutions_));
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.GoToRequest)
}

inline void GoToRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&extra_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&position_revolutions_) -
    reinterpret_cast<char*>(&extra_)) + sizeof(position_revolutions_));
}

GoToRequest::~GoToRequest() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.GoToRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GoToRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GoToRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GoToRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.GoToRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  ::memset(&rpm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position_revolutions_) -
      reinterpret_cast<char*>(&rpm_)) + sizeof(position_revolutions_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GoToRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.motor.v1.GoToRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // double rpm = 2 [json_name = "rpm"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          rpm_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double position_revolutions = 3 [json_name = "positionRevolutions"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          position_revolutions_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GoToRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.GoToRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.motor.v1.GoToRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // double rpm = 2 [json_name = "rpm"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_rpm = this->_internal_rpm();
  uint64_t raw_rpm;
  memcpy(&raw_rpm, &tmp_rpm, sizeof(tmp_rpm));
  if (raw_rpm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_rpm(), target);
  }

  // double position_revolutions = 3 [json_name = "positionRevolutions"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_position_revolutions = this->_internal_position_revolutions();
  uint64_t raw_position_revolutions;
  memcpy(&raw_position_revolutions, &tmp_position_revolutions, sizeof(tmp_position_revolutions));
  if (raw_position_revolutions != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_position_revolutions(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.GoToRequest)
  return target;
}

size_t GoToRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.GoToRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  // double rpm = 2 [json_name = "rpm"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_rpm = this->_internal_rpm();
  uint64_t raw_rpm;
  memcpy(&raw_rpm, &tmp_rpm, sizeof(tmp_rpm));
  if (raw_rpm != 0) {
    total_size += 1 + 8;
  }

  // double position_revolutions = 3 [json_name = "positionRevolutions"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_position_revolutions = this->_internal_position_revolutions();
  uint64_t raw_position_revolutions;
  memcpy(&raw_position_revolutions, &tmp_position_revolutions, sizeof(tmp_position_revolutions));
  if (raw_position_revolutions != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GoToRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GoToRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GoToRequest::GetClassData() const { return &_class_data_; }

void GoToRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GoToRequest *>(to)->MergeFrom(
      static_cast<const GoToRequest &>(from));
}


void GoToRequest::MergeFrom(const GoToRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.GoToRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_rpm = from._internal_rpm();
  uint64_t raw_rpm;
  memcpy(&raw_rpm, &tmp_rpm, sizeof(tmp_rpm));
  if (raw_rpm != 0) {
    _internal_set_rpm(from._internal_rpm());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_position_revolutions = from._internal_position_revolutions();
  uint64_t raw_position_revolutions;
  memcpy(&raw_position_revolutions, &tmp_position_revolutions, sizeof(tmp_position_revolutions));
  if (raw_position_revolutions != 0) {
    _internal_set_position_revolutions(from._internal_position_revolutions());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GoToRequest::CopyFrom(const GoToRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.GoToRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoToRequest::IsInitialized() const {
  return true;
}

void GoToRequest::InternalSwap(GoToRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GoToRequest, position_revolutions_)
      + sizeof(GoToRequest::position_revolutions_)
      - PROTOBUF_FIELD_OFFSET(GoToRequest, extra_)>(
          reinterpret_cast<char*>(&extra_),
          reinterpret_cast<char*>(&other->extra_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GoToRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[4]);
}

// ===================================================================

class GoToResponse::_Internal {
 public:
};

GoToResponse::GoToResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.GoToResponse)
}
GoToResponse::GoToResponse(const GoToResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.GoToResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GoToResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GoToResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GoToResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[5]);
}

// ===================================================================

class ResetZeroPositionRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const ResetZeroPositionRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
ResetZeroPositionRequest::_Internal::extra(const ResetZeroPositionRequest* msg) {
  return *msg->extra_;
}
void ResetZeroPositionRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
ResetZeroPositionRequest::ResetZeroPositionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.ResetZeroPositionRequest)
}
ResetZeroPositionRequest::ResetZeroPositionRequest(const ResetZeroPositionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.ResetZeroPositionRequest)
}

inline void ResetZeroPositionRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&extra_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&extra_)) + sizeof(offset_));
}

ResetZeroPositionRequest::~ResetZeroPositionRequest() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.ResetZeroPositionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResetZeroPositionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void ResetZeroPositionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResetZeroPositionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.ResetZeroPositionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  offset_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetZeroPositionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.motor.v1.ResetZeroPositionRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // double offset = 2 [json_name = "offset"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResetZeroPositionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.ResetZeroPositionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.motor.v1.ResetZeroPositionRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // double offset = 2 [json_name = "offset"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_offset = this->_internal_offset();
  uint64_t raw_offset;
  memcpy(&raw_offset, &tmp_offset, sizeof(tmp_offset));
  if (raw_offset != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_offset(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.ResetZeroPositionRequest)
  return target;
}

size_t ResetZeroPositionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.ResetZeroPositionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  // double offset = 2 [json_name = "offset"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_offset = this->_internal_offset();
  uint64_t raw_offset;
  memcpy(&raw_offset, &tmp_offset, sizeof(tmp_offset));
  if (raw_offset != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResetZeroPositionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResetZeroPositionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResetZeroPositionRequest::GetClassData() const { return &_class_data_; }

void ResetZeroPositionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResetZeroPositionRequest *>(to)->MergeFrom(
      static_cast<const ResetZeroPositionRequest &>(from));
}


void ResetZeroPositionRequest::MergeFrom(const ResetZeroPositionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.ResetZeroPositionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_offset = from._internal_offset();
  uint64_t raw_offset;
  memcpy(&raw_offset, &tmp_offset, sizeof(tmp_offset));
  if (raw_offset != 0) {
    _internal_set_offset(from._internal_offset());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResetZeroPositionRequest::CopyFrom(const ResetZeroPositionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.ResetZeroPositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetZeroPositionRequest::IsInitialized() const {
  return true;
}

void ResetZeroPositionRequest::InternalSwap(ResetZeroPositionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResetZeroPositionRequest, offset_)
      + sizeof(ResetZeroPositionRequest::offset_)
      - PROTOBUF_FIELD_OFFSET(ResetZeroPositionRequest, extra_)>(
          reinterpret_cast<char*>(&extra_),
          reinterpret_cast<char*>(&other->extra_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetZeroPositionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[6]);
}

// ===================================================================

class ResetZeroPositionResponse::_Internal {
 public:
};

ResetZeroPositionResponse::ResetZeroPositionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.ResetZeroPositionResponse)
}
ResetZeroPositionResponse::ResetZeroPositionResponse(const ResetZeroPositionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.ResetZeroPositionResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResetZeroPositionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResetZeroPositionResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ResetZeroPositionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[7]);
}

// ===================================================================

class GetPositionRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetPositionRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetPositionRequest::_Internal::extra(const GetPositionRequest* msg) {
  return *msg->extra_;
}
void GetPositionRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetPositionRequest::GetPositionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.GetPositionRequest)
}
GetPositionRequest::GetPositionRequest(const GetPositionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.GetPositionRequest)
}

inline void GetPositionRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetPositionRequest::~GetPositionRequest() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.GetPositionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPositionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetPositionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPositionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.GetPositionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPositionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.motor.v1.GetPositionRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPositionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.GetPositionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.motor.v1.GetPositionRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.GetPositionRequest)
  return target;
}

size_t GetPositionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.GetPositionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPositionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPositionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPositionRequest::GetClassData() const { return &_class_data_; }

void GetPositionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPositionRequest *>(to)->MergeFrom(
      static_cast<const GetPositionRequest &>(from));
}


void GetPositionRequest::MergeFrom(const GetPositionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.GetPositionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPositionRequest::CopyFrom(const GetPositionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.GetPositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPositionRequest::IsInitialized() const {
  return true;
}

void GetPositionRequest::InternalSwap(GetPositionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPositionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[8]);
}

// ===================================================================

class GetPositionResponse::_Internal {
 public:
};

GetPositionResponse::GetPositionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.GetPositionResponse)
}
GetPositionResponse::GetPositionResponse(const GetPositionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  position_ = from.position_;
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.GetPositionResponse)
}

inline void GetPositionResponse::SharedCtor() {
position_ = 0;
}

GetPositionResponse::~GetPositionResponse() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.GetPositionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPositionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetPositionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPositionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.GetPositionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  position_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPositionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double position = 1 [json_name = "position"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          position_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPositionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.GetPositionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double position = 1 [json_name = "position"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_position = this->_internal_position();
  uint64_t raw_position;
  memcpy(&raw_position, &tmp_position, sizeof(tmp_position));
  if (raw_position != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_position(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.GetPositionResponse)
  return target;
}

size_t GetPositionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.GetPositionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double position = 1 [json_name = "position"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_position = this->_internal_position();
  uint64_t raw_position;
  memcpy(&raw_position, &tmp_position, sizeof(tmp_position));
  if (raw_position != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPositionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPositionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPositionResponse::GetClassData() const { return &_class_data_; }

void GetPositionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPositionResponse *>(to)->MergeFrom(
      static_cast<const GetPositionResponse &>(from));
}


void GetPositionResponse::MergeFrom(const GetPositionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.GetPositionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_position = from._internal_position();
  uint64_t raw_position;
  memcpy(&raw_position, &tmp_position, sizeof(tmp_position));
  if (raw_position != 0) {
    _internal_set_position(from._internal_position());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPositionResponse::CopyFrom(const GetPositionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.GetPositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPositionResponse::IsInitialized() const {
  return true;
}

void GetPositionResponse::InternalSwap(GetPositionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(position_, other->position_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPositionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[9]);
}

// ===================================================================

class StopRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const StopRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
StopRequest::_Internal::extra(const StopRequest* msg) {
  return *msg->extra_;
}
void StopRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
StopRequest::StopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.StopRequest)
}
StopRequest::StopRequest(const StopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.StopRequest)
}

inline void StopRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

StopRequest::~StopRequest() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.StopRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void StopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.StopRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.motor.v1.StopRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.StopRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.motor.v1.StopRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.StopRequest)
  return target;
}

size_t StopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.StopRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StopRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopRequest::GetClassData() const { return &_class_data_; }

void StopRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StopRequest *>(to)->MergeFrom(
      static_cast<const StopRequest &>(from));
}


void StopRequest::MergeFrom(const StopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.StopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopRequest::CopyFrom(const StopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.StopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopRequest::IsInitialized() const {
  return true;
}

void StopRequest::InternalSwap(StopRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[10]);
}

// ===================================================================

class StopResponse::_Internal {
 public:
};

StopResponse::StopResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.StopResponse)
}
StopResponse::StopResponse(const StopResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.StopResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StopResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[11]);
}

// ===================================================================

class IsPoweredRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const IsPoweredRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
IsPoweredRequest::_Internal::extra(const IsPoweredRequest* msg) {
  return *msg->extra_;
}
void IsPoweredRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
IsPoweredRequest::IsPoweredRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.IsPoweredRequest)
}
IsPoweredRequest::IsPoweredRequest(const IsPoweredRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.IsPoweredRequest)
}

inline void IsPoweredRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

IsPoweredRequest::~IsPoweredRequest() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.IsPoweredRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IsPoweredRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void IsPoweredRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IsPoweredRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.IsPoweredRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsPoweredRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.motor.v1.IsPoweredRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IsPoweredRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.IsPoweredRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.motor.v1.IsPoweredRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.IsPoweredRequest)
  return target;
}

size_t IsPoweredRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.IsPoweredRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IsPoweredRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IsPoweredRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IsPoweredRequest::GetClassData() const { return &_class_data_; }

void IsPoweredRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IsPoweredRequest *>(to)->MergeFrom(
      static_cast<const IsPoweredRequest &>(from));
}


void IsPoweredRequest::MergeFrom(const IsPoweredRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.IsPoweredRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IsPoweredRequest::CopyFrom(const IsPoweredRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.IsPoweredRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsPoweredRequest::IsInitialized() const {
  return true;
}

void IsPoweredRequest::InternalSwap(IsPoweredRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IsPoweredRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[12]);
}

// ===================================================================

class IsPoweredResponse::_Internal {
 public:
};

IsPoweredResponse::IsPoweredResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.IsPoweredResponse)
}
IsPoweredResponse::IsPoweredResponse(const IsPoweredResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&power_pct_, &from.power_pct_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_on_) -
    reinterpret_cast<char*>(&power_pct_)) + sizeof(is_on_));
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.IsPoweredResponse)
}

inline void IsPoweredResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&power_pct_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_on_) -
    reinterpret_cast<char*>(&power_pct_)) + sizeof(is_on_));
}

IsPoweredResponse::~IsPoweredResponse() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.IsPoweredResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IsPoweredResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IsPoweredResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IsPoweredResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.IsPoweredResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&power_pct_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_on_) -
      reinterpret_cast<char*>(&power_pct_)) + sizeof(is_on_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsPoweredResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_on = 1 [json_name = "isOn"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          is_on_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double power_pct = 2 [json_name = "powerPct"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          power_pct_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IsPoweredResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.IsPoweredResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_on = 1 [json_name = "isOn"];
  if (this->_internal_is_on() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_on(), target);
  }

  // double power_pct = 2 [json_name = "powerPct"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_power_pct = this->_internal_power_pct();
  uint64_t raw_power_pct;
  memcpy(&raw_power_pct, &tmp_power_pct, sizeof(tmp_power_pct));
  if (raw_power_pct != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_power_pct(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.IsPoweredResponse)
  return target;
}

size_t IsPoweredResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.IsPoweredResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double power_pct = 2 [json_name = "powerPct"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_power_pct = this->_internal_power_pct();
  uint64_t raw_power_pct;
  memcpy(&raw_power_pct, &tmp_power_pct, sizeof(tmp_power_pct));
  if (raw_power_pct != 0) {
    total_size += 1 + 8;
  }

  // bool is_on = 1 [json_name = "isOn"];
  if (this->_internal_is_on() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IsPoweredResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IsPoweredResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IsPoweredResponse::GetClassData() const { return &_class_data_; }

void IsPoweredResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IsPoweredResponse *>(to)->MergeFrom(
      static_cast<const IsPoweredResponse &>(from));
}


void IsPoweredResponse::MergeFrom(const IsPoweredResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.IsPoweredResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_power_pct = from._internal_power_pct();
  uint64_t raw_power_pct;
  memcpy(&raw_power_pct, &tmp_power_pct, sizeof(tmp_power_pct));
  if (raw_power_pct != 0) {
    _internal_set_power_pct(from._internal_power_pct());
  }
  if (from._internal_is_on() != 0) {
    _internal_set_is_on(from._internal_is_on());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IsPoweredResponse::CopyFrom(const IsPoweredResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.IsPoweredResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsPoweredResponse::IsInitialized() const {
  return true;
}

void IsPoweredResponse::InternalSwap(IsPoweredResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IsPoweredResponse, is_on_)
      + sizeof(IsPoweredResponse::is_on_)
      - PROTOBUF_FIELD_OFFSET(IsPoweredResponse, power_pct_)>(
          reinterpret_cast<char*>(&power_pct_),
          reinterpret_cast<char*>(&other->power_pct_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IsPoweredResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[13]);
}

// ===================================================================

class GetPropertiesRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetPropertiesRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetPropertiesRequest::_Internal::extra(const GetPropertiesRequest* msg) {
  return *msg->extra_;
}
void GetPropertiesRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetPropertiesRequest::GetPropertiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.GetPropertiesRequest)
}
GetPropertiesRequest::GetPropertiesRequest(const GetPropertiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.GetPropertiesRequest)
}

inline void GetPropertiesRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetPropertiesRequest::~GetPropertiesRequest() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.GetPropertiesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPropertiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetPropertiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPropertiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.GetPropertiesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPropertiesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.motor.v1.GetPropertiesRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPropertiesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.GetPropertiesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.motor.v1.GetPropertiesRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.GetPropertiesRequest)
  return target;
}

size_t GetPropertiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.GetPropertiesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPropertiesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPropertiesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPropertiesRequest::GetClassData() const { return &_class_data_; }

void GetPropertiesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPropertiesRequest *>(to)->MergeFrom(
      static_cast<const GetPropertiesRequest &>(from));
}


void GetPropertiesRequest::MergeFrom(const GetPropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.GetPropertiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPropertiesRequest::CopyFrom(const GetPropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.GetPropertiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPropertiesRequest::IsInitialized() const {
  return true;
}

void GetPropertiesRequest::InternalSwap(GetPropertiesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPropertiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[14]);
}

// ===================================================================

class GetPropertiesResponse::_Internal {
 public:
};

GetPropertiesResponse::GetPropertiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.GetPropertiesResponse)
}
GetPropertiesResponse::GetPropertiesResponse(const GetPropertiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  position_reporting_ = from.position_reporting_;
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.GetPropertiesResponse)
}

inline void GetPropertiesResponse::SharedCtor() {
position_reporting_ = false;
}

GetPropertiesResponse::~GetPropertiesResponse() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.GetPropertiesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPropertiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetPropertiesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPropertiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.GetPropertiesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  position_reporting_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPropertiesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool position_reporting = 1 [json_name = "positionReporting"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          position_reporting_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPropertiesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.GetPropertiesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool position_reporting = 1 [json_name = "positionReporting"];
  if (this->_internal_position_reporting() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_position_reporting(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.GetPropertiesResponse)
  return target;
}

size_t GetPropertiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.GetPropertiesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool position_reporting = 1 [json_name = "positionReporting"];
  if (this->_internal_position_reporting() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPropertiesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPropertiesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPropertiesResponse::GetClassData() const { return &_class_data_; }

void GetPropertiesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPropertiesResponse *>(to)->MergeFrom(
      static_cast<const GetPropertiesResponse &>(from));
}


void GetPropertiesResponse::MergeFrom(const GetPropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.GetPropertiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_position_reporting() != 0) {
    _internal_set_position_reporting(from._internal_position_reporting());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPropertiesResponse::CopyFrom(const GetPropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.GetPropertiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPropertiesResponse::IsInitialized() const {
  return true;
}

void GetPropertiesResponse::InternalSwap(GetPropertiesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(position_reporting_, other->position_reporting_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPropertiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[15]);
}

// ===================================================================

class Status::_Internal {
 public:
};

Status::Status(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.Status)
}
Status::Status(const Status& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&position_, &from.position_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_moving_) -
    reinterpret_cast<char*>(&position_)) + sizeof(is_moving_));
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.Status)
}

inline void Status::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&position_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_moving_) -
    reinterpret_cast<char*>(&position_)) + sizeof(is_moving_));
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.Status)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Status::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.Status)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_moving_) -
      reinterpret_cast<char*>(&position_)) + sizeof(is_moving_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Status::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_powered = 1 [json_name = "isPowered"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          is_powered_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double position = 3 [json_name = "position"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          position_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // bool is_moving = 4 [json_name = "isMoving"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          is_moving_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Status::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.Status)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_powered = 1 [json_name = "isPowered"];
  if (this->_internal_is_powered() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_powered(), target);
  }

  // double position = 3 [json_name = "position"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_position = this->_internal_position();
  uint64_t raw_position;
  memcpy(&raw_position, &tmp_position, sizeof(tmp_position));
  if (raw_position != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_position(), target);
  }

  // bool is_moving = 4 [json_name = "isMoving"];
  if (this->_internal_is_moving() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_is_moving(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.Status)
  return target;
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.Status)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double position = 3 [json_name = "position"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_position = this->_internal_position();
  uint64_t raw_position;
  memcpy(&raw_position, &tmp_position, sizeof(tmp_position));
  if (raw_position != 0) {
    total_size += 1 + 8;
  }

  // bool is_powered = 1 [json_name = "isPowered"];
  if (this->_internal_is_powered() != 0) {
    total_size += 1 + 1;
  }

  // bool is_moving = 4 [json_name = "isMoving"];
  if (this->_internal_is_moving() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Status::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Status::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Status::GetClassData() const { return &_class_data_; }

void Status::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Status *>(to)->MergeFrom(
      static_cast<const Status &>(from));
}


void Status::MergeFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.Status)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_position = from._internal_position();
  uint64_t raw_position;
  memcpy(&raw_position, &tmp_position, sizeof(tmp_position));
  if (raw_position != 0) {
    _internal_set_position(from._internal_position());
  }
  if (from._internal_is_powered() != 0) {
    _internal_set_is_powered(from._internal_is_powered());
  }
  if (from._internal_is_moving() != 0) {
    _internal_set_is_moving(from._internal_is_moving());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::InternalSwap(Status* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Status, is_moving_)
      + sizeof(Status::is_moving_)
      - PROTOBUF_FIELD_OFFSET(Status, position_)>(
          reinterpret_cast<char*>(&position_),
          reinterpret_cast<char*>(&other->position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Status::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[16]);
}

// ===================================================================

class IsMovingRequest::_Internal {
 public:
};

IsMovingRequest::IsMovingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.IsMovingRequest)
}
IsMovingRequest::IsMovingRequest(const IsMovingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.IsMovingRequest)
}

inline void IsMovingRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

IsMovingRequest::~IsMovingRequest() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.IsMovingRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IsMovingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void IsMovingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IsMovingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.IsMovingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsMovingRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.motor.v1.IsMovingRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IsMovingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.IsMovingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.motor.v1.IsMovingRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.IsMovingRequest)
  return target;
}

size_t IsMovingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.IsMovingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IsMovingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IsMovingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IsMovingRequest::GetClassData() const { return &_class_data_; }

void IsMovingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IsMovingRequest *>(to)->MergeFrom(
      static_cast<const IsMovingRequest &>(from));
}


void IsMovingRequest::MergeFrom(const IsMovingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.IsMovingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IsMovingRequest::CopyFrom(const IsMovingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.IsMovingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsMovingRequest::IsInitialized() const {
  return true;
}

void IsMovingRequest::InternalSwap(IsMovingRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata IsMovingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[17]);
}

// ===================================================================

class IsMovingResponse::_Internal {
 public:
};

IsMovingResponse::IsMovingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.motor.v1.IsMovingResponse)
}
IsMovingResponse::IsMovingResponse(const IsMovingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  is_moving_ = from.is_moving_;
  // @@protoc_insertion_point(copy_constructor:viam.component.motor.v1.IsMovingResponse)
}

inline void IsMovingResponse::SharedCtor() {
is_moving_ = false;
}

IsMovingResponse::~IsMovingResponse() {
  // @@protoc_insertion_point(destructor:viam.component.motor.v1.IsMovingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IsMovingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IsMovingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IsMovingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.motor.v1.IsMovingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_moving_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsMovingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_moving = 1 [json_name = "isMoving"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          is_moving_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IsMovingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.motor.v1.IsMovingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_moving = 1 [json_name = "isMoving"];
  if (this->_internal_is_moving() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_moving(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.motor.v1.IsMovingResponse)
  return target;
}

size_t IsMovingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.motor.v1.IsMovingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_moving = 1 [json_name = "isMoving"];
  if (this->_internal_is_moving() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IsMovingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IsMovingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IsMovingResponse::GetClassData() const { return &_class_data_; }

void IsMovingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IsMovingResponse *>(to)->MergeFrom(
      static_cast<const IsMovingResponse &>(from));
}


void IsMovingResponse::MergeFrom(const IsMovingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.motor.v1.IsMovingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_moving() != 0) {
    _internal_set_is_moving(from._internal_is_moving());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IsMovingResponse::CopyFrom(const IsMovingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.motor.v1.IsMovingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsMovingResponse::IsInitialized() const {
  return true;
}

void IsMovingResponse::InternalSwap(IsMovingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(is_moving_, other->is_moving_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IsMovingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_getter, &descriptor_table_component_2fmotor_2fv1_2fmotor_2eproto_once,
      file_level_metadata_component_2fmotor_2fv1_2fmotor_2eproto[18]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace motor
}  // namespace component
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::SetPowerRequest*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::SetPowerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::SetPowerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::SetPowerResponse*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::SetPowerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::SetPowerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::GoForRequest*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::GoForRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::GoForRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::GoForResponse*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::GoForResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::GoForResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::GoToRequest*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::GoToRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::GoToRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::GoToResponse*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::GoToResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::GoToResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::ResetZeroPositionRequest*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::ResetZeroPositionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::ResetZeroPositionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::ResetZeroPositionResponse*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::ResetZeroPositionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::ResetZeroPositionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::GetPositionRequest*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::GetPositionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::GetPositionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::GetPositionResponse*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::GetPositionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::GetPositionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::StopRequest*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::StopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::StopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::StopResponse*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::StopResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::StopResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::IsPoweredRequest*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::IsPoweredRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::IsPoweredRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::IsPoweredResponse*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::IsPoweredResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::IsPoweredResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::GetPropertiesRequest*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::GetPropertiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::GetPropertiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::GetPropertiesResponse*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::GetPropertiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::GetPropertiesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::Status*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::Status >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::Status >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::IsMovingRequest*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::IsMovingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::IsMovingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::motor::v1::IsMovingResponse*
Arena::CreateMaybeMessage< ::viam::component::motor::v1::IsMovingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::motor::v1::IsMovingResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
