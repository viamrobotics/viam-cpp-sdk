// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component/movementsensor/v1/movementsensor.proto

#include "component/movementsensor/v1/movementsensor.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace component {
namespace movementsensor {
namespace v1 {
PROTOBUF_CONSTEXPR GetLinearVelocityRequest::GetLinearVelocityRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetLinearVelocityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLinearVelocityRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLinearVelocityRequestDefaultTypeInternal() {}
  union {
    GetLinearVelocityRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLinearVelocityRequestDefaultTypeInternal _GetLinearVelocityRequest_default_instance_;
PROTOBUF_CONSTEXPR GetLinearVelocityResponse::GetLinearVelocityResponse(
    ::_pbi::ConstantInitialized)
  : linear_velocity_(nullptr){}
struct GetLinearVelocityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLinearVelocityResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLinearVelocityResponseDefaultTypeInternal() {}
  union {
    GetLinearVelocityResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLinearVelocityResponseDefaultTypeInternal _GetLinearVelocityResponse_default_instance_;
PROTOBUF_CONSTEXPR GetAngularVelocityRequest::GetAngularVelocityRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetAngularVelocityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAngularVelocityRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAngularVelocityRequestDefaultTypeInternal() {}
  union {
    GetAngularVelocityRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAngularVelocityRequestDefaultTypeInternal _GetAngularVelocityRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAngularVelocityResponse::GetAngularVelocityResponse(
    ::_pbi::ConstantInitialized)
  : angular_velocity_(nullptr){}
struct GetAngularVelocityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAngularVelocityResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAngularVelocityResponseDefaultTypeInternal() {}
  union {
    GetAngularVelocityResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAngularVelocityResponseDefaultTypeInternal _GetAngularVelocityResponse_default_instance_;
PROTOBUF_CONSTEXPR GetCompassHeadingRequest::GetCompassHeadingRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetCompassHeadingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCompassHeadingRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCompassHeadingRequestDefaultTypeInternal() {}
  union {
    GetCompassHeadingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCompassHeadingRequestDefaultTypeInternal _GetCompassHeadingRequest_default_instance_;
PROTOBUF_CONSTEXPR GetCompassHeadingResponse::GetCompassHeadingResponse(
    ::_pbi::ConstantInitialized)
  : value_(0){}
struct GetCompassHeadingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCompassHeadingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCompassHeadingResponseDefaultTypeInternal() {}
  union {
    GetCompassHeadingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCompassHeadingResponseDefaultTypeInternal _GetCompassHeadingResponse_default_instance_;
PROTOBUF_CONSTEXPR GetOrientationRequest::GetOrientationRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetOrientationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrientationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrientationRequestDefaultTypeInternal() {}
  union {
    GetOrientationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrientationRequestDefaultTypeInternal _GetOrientationRequest_default_instance_;
PROTOBUF_CONSTEXPR GetOrientationResponse::GetOrientationResponse(
    ::_pbi::ConstantInitialized)
  : orientation_(nullptr){}
struct GetOrientationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrientationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrientationResponseDefaultTypeInternal() {}
  union {
    GetOrientationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrientationResponseDefaultTypeInternal _GetOrientationResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPositionRequest::GetPositionRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetPositionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPositionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPositionRequestDefaultTypeInternal() {}
  union {
    GetPositionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPositionRequestDefaultTypeInternal _GetPositionRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPositionResponse::GetPositionResponse(
    ::_pbi::ConstantInitialized)
  : coordinate_(nullptr)
  , altitude_mm_(0){}
struct GetPositionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPositionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPositionResponseDefaultTypeInternal() {}
  union {
    GetPositionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPositionResponseDefaultTypeInternal _GetPositionResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPropertiesRequest::GetPropertiesRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetPropertiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPropertiesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPropertiesRequestDefaultTypeInternal() {}
  union {
    GetPropertiesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPropertiesRequestDefaultTypeInternal _GetPropertiesRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPropertiesResponse::GetPropertiesResponse(
    ::_pbi::ConstantInitialized)
  : linear_velocity_supported_(false)
  , angular_velocity_supported_(false)
  , orientation_supported_(false)
  , position_supported_(false)
  , compass_heading_supported_(false)
  , linear_acceleration_supported_(false){}
struct GetPropertiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPropertiesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPropertiesResponseDefaultTypeInternal() {}
  union {
    GetPropertiesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPropertiesResponseDefaultTypeInternal _GetPropertiesResponse_default_instance_;
PROTOBUF_CONSTEXPR GetAccuracyRequest::GetAccuracyRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetAccuracyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAccuracyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAccuracyRequestDefaultTypeInternal() {}
  union {
    GetAccuracyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAccuracyRequestDefaultTypeInternal _GetAccuracyRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAccuracyResponse_AccuracyMmEntry_DoNotUse::GetAccuracyResponse_AccuracyMmEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct GetAccuracyResponse_AccuracyMmEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAccuracyResponse_AccuracyMmEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAccuracyResponse_AccuracyMmEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetAccuracyResponse_AccuracyMmEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAccuracyResponse_AccuracyMmEntry_DoNotUseDefaultTypeInternal _GetAccuracyResponse_AccuracyMmEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR GetAccuracyResponse::GetAccuracyResponse(
    ::_pbi::ConstantInitialized)
  : accuracy_mm_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct GetAccuracyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAccuracyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAccuracyResponseDefaultTypeInternal() {}
  union {
    GetAccuracyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAccuracyResponseDefaultTypeInternal _GetAccuracyResponse_default_instance_;
PROTOBUF_CONSTEXPR GetLinearAccelerationRequest::GetLinearAccelerationRequest(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , extra_(nullptr){}
struct GetLinearAccelerationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLinearAccelerationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLinearAccelerationRequestDefaultTypeInternal() {}
  union {
    GetLinearAccelerationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLinearAccelerationRequestDefaultTypeInternal _GetLinearAccelerationRequest_default_instance_;
PROTOBUF_CONSTEXPR GetLinearAccelerationResponse::GetLinearAccelerationResponse(
    ::_pbi::ConstantInitialized)
  : linear_acceleration_(nullptr){}
struct GetLinearAccelerationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLinearAccelerationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLinearAccelerationResponseDefaultTypeInternal() {}
  union {
    GetLinearAccelerationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLinearAccelerationResponseDefaultTypeInternal _GetLinearAccelerationResponse_default_instance_;
}  // namespace v1
}  // namespace movementsensor
}  // namespace component
}  // namespace viam
static ::_pb::Metadata file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[17];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto = nullptr;

const uint32_t TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetLinearVelocityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetLinearVelocityRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetLinearVelocityRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetLinearVelocityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetLinearVelocityResponse, linear_velocity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAngularVelocityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAngularVelocityRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAngularVelocityRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAngularVelocityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAngularVelocityResponse, angular_velocity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetCompassHeadingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetCompassHeadingRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetCompassHeadingRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetCompassHeadingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetCompassHeadingResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetOrientationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetOrientationRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetOrientationRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetOrientationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetOrientationResponse, orientation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPositionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPositionRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPositionRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPositionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPositionResponse, coordinate_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPositionResponse, altitude_mm_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPropertiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPropertiesRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPropertiesRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPropertiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPropertiesResponse, linear_velocity_supported_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPropertiesResponse, angular_velocity_supported_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPropertiesResponse, orientation_supported_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPropertiesResponse, position_supported_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPropertiesResponse, compass_heading_supported_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetPropertiesResponse, linear_acceleration_supported_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAccuracyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAccuracyRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAccuracyRequest, extra_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAccuracyResponse_AccuracyMmEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAccuracyResponse_AccuracyMmEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAccuracyResponse_AccuracyMmEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAccuracyResponse_AccuracyMmEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAccuracyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetAccuracyResponse, accuracy_mm_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetLinearAccelerationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetLinearAccelerationRequest, name_),
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetLinearAccelerationRequest, extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetLinearAccelerationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::component::movementsensor::v1::GetLinearAccelerationResponse, linear_acceleration_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::component::movementsensor::v1::GetLinearVelocityRequest)},
  { 8, -1, -1, sizeof(::viam::component::movementsensor::v1::GetLinearVelocityResponse)},
  { 15, -1, -1, sizeof(::viam::component::movementsensor::v1::GetAngularVelocityRequest)},
  { 23, -1, -1, sizeof(::viam::component::movementsensor::v1::GetAngularVelocityResponse)},
  { 30, -1, -1, sizeof(::viam::component::movementsensor::v1::GetCompassHeadingRequest)},
  { 38, -1, -1, sizeof(::viam::component::movementsensor::v1::GetCompassHeadingResponse)},
  { 45, -1, -1, sizeof(::viam::component::movementsensor::v1::GetOrientationRequest)},
  { 53, -1, -1, sizeof(::viam::component::movementsensor::v1::GetOrientationResponse)},
  { 60, -1, -1, sizeof(::viam::component::movementsensor::v1::GetPositionRequest)},
  { 68, -1, -1, sizeof(::viam::component::movementsensor::v1::GetPositionResponse)},
  { 76, -1, -1, sizeof(::viam::component::movementsensor::v1::GetPropertiesRequest)},
  { 84, -1, -1, sizeof(::viam::component::movementsensor::v1::GetPropertiesResponse)},
  { 96, -1, -1, sizeof(::viam::component::movementsensor::v1::GetAccuracyRequest)},
  { 104, 112, -1, sizeof(::viam::component::movementsensor::v1::GetAccuracyResponse_AccuracyMmEntry_DoNotUse)},
  { 114, -1, -1, sizeof(::viam::component::movementsensor::v1::GetAccuracyResponse)},
  { 121, -1, -1, sizeof(::viam::component::movementsensor::v1::GetLinearAccelerationRequest)},
  { 129, -1, -1, sizeof(::viam::component::movementsensor::v1::GetLinearAccelerationResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::component::movementsensor::v1::_GetLinearVelocityRequest_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetLinearVelocityResponse_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetAngularVelocityRequest_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetAngularVelocityResponse_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetCompassHeadingRequest_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetCompassHeadingResponse_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetOrientationRequest_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetOrientationResponse_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetPositionRequest_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetPositionResponse_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetPropertiesRequest_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetPropertiesResponse_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetAccuracyRequest_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetAccuracyResponse_AccuracyMmEntry_DoNotUse_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetAccuracyResponse_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetLinearAccelerationRequest_default_instance_._instance,
  &::viam::component::movementsensor::v1::_GetLinearAccelerationResponse_default_instance_._instance,
};

const char descriptor_table_protodef_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n0component/movementsensor/v1/movementse"
  "nsor.proto\022 viam.component.movementsenso"
  "r.v1\032\026common/v1/common.proto\032\034google/api"
  "/annotations.proto\032\034google/protobuf/stru"
  "ct.proto\"]\n\030GetLinearVelocityRequest\022\022\n\004"
  "name\030\001 \001(\tR\004name\022-\n\005extra\030c \001(\0132\027.google"
  ".protobuf.StructR\005extra\"]\n\031GetLinearVelo"
  "cityResponse\022@\n\017linear_velocity\030\001 \001(\0132\027."
  "viam.common.v1.Vector3R\016linearVelocity\"^"
  "\n\031GetAngularVelocityRequest\022\022\n\004name\030\001 \001("
  "\tR\004name\022-\n\005extra\030c \001(\0132\027.google.protobuf"
  ".StructR\005extra\"`\n\032GetAngularVelocityResp"
  "onse\022B\n\020angular_velocity\030\001 \001(\0132\027.viam.co"
  "mmon.v1.Vector3R\017angularVelocity\"]\n\030GetC"
  "ompassHeadingRequest\022\022\n\004name\030\001 \001(\tR\004name"
  "\022-\n\005extra\030c \001(\0132\027.google.protobuf.Struct"
  "R\005extra\"1\n\031GetCompassHeadingResponse\022\024\n\005"
  "value\030\001 \001(\001R\005value\"Z\n\025GetOrientationRequ"
  "est\022\022\n\004name\030\001 \001(\tR\004name\022-\n\005extra\030c \001(\0132\027"
  ".google.protobuf.StructR\005extra\"W\n\026GetOri"
  "entationResponse\022=\n\013orientation\030\001 \001(\0132\033."
  "viam.common.v1.OrientationR\013orientation\""
  "W\n\022GetPositionRequest\022\022\n\004name\030\001 \001(\tR\004nam"
  "e\022-\n\005extra\030c \001(\0132\027.google.protobuf.Struc"
  "tR\005extra\"p\n\023GetPositionResponse\0228\n\ncoord"
  "inate\030\001 \001(\0132\030.viam.common.v1.GeoPointR\nc"
  "oordinate\022\037\n\013altitude_mm\030\002 \001(\002R\naltitude"
  "Mm\"Y\n\024GetPropertiesRequest\022\022\n\004name\030\001 \001(\t"
  "R\004name\022-\n\005extra\030c \001(\0132\027.google.protobuf."
  "StructR\005extra\"\365\002\n\025GetPropertiesResponse\022"
  ":\n\031linear_velocity_supported\030\001 \001(\010R\027line"
  "arVelocitySupported\022<\n\032angular_velocity_"
  "supported\030\002 \001(\010R\030angularVelocitySupporte"
  "d\0223\n\025orientation_supported\030\003 \001(\010R\024orient"
  "ationSupported\022-\n\022position_supported\030\004 \001"
  "(\010R\021positionSupported\022:\n\031compass_heading"
  "_supported\030\005 \001(\010R\027compassHeadingSupporte"
  "d\022B\n\035linear_acceleration_supported\030\006 \001(\010"
  "R\033linearAccelerationSupported\"W\n\022GetAccu"
  "racyRequest\022\022\n\004name\030\001 \001(\tR\004name\022-\n\005extra"
  "\030c \001(\0132\027.google.protobuf.StructR\005extra\"\274"
  "\001\n\023GetAccuracyResponse\022f\n\013accuracy_mm\030\001 "
  "\003(\0132E.viam.component.movementsensor.v1.G"
  "etAccuracyResponse.AccuracyMmEntryR\naccu"
  "racyMm\032=\n\017AccuracyMmEntry\022\020\n\003key\030\001 \001(\tR\003"
  "key\022\024\n\005value\030\002 \001(\002R\005value:\0028\001\"a\n\034GetLine"
  "arAccelerationRequest\022\022\n\004name\030\001 \001(\tR\004nam"
  "e\022-\n\005extra\030c \001(\0132\027.google.protobuf.Struc"
  "tR\005extra\"i\n\035GetLinearAccelerationRespons"
  "e\022H\n\023linear_acceleration\030\001 \001(\0132\027.viam.co"
  "mmon.v1.Vector3R\022linearAcceleration2\227\016\n\025"
  "MovementSensorService\022\322\001\n\021GetLinearVeloc"
  "ity\022:.viam.component.movementsensor.v1.G"
  "etLinearVelocityRequest\032;.viam.component"
  ".movementsensor.v1.GetLinearVelocityResp"
  "onse\"D\202\323\344\223\002>\022</viam/api/v1/component/mov"
  "ementsensor/{name}/linear_velocity\022\326\001\n\022G"
  "etAngularVelocity\022;.viam.component.movem"
  "entsensor.v1.GetAngularVelocityRequest\032<"
  ".viam.component.movementsensor.v1.GetAng"
  "ularVelocityResponse\"E\202\323\344\223\002\?\022=/viam/api/"
  "v1/component/movementsensor/{name}/angul"
  "ar_velocity\022\322\001\n\021GetCompassHeading\022:.viam"
  ".component.movementsensor.v1.GetCompassH"
  "eadingRequest\032;.viam.component.movements"
  "ensor.v1.GetCompassHeadingResponse\"D\202\323\344\223"
  "\002>\022</viam/api/v1/component/movementsenso"
  "r/{name}/compass_heading\022\305\001\n\016GetOrientat"
  "ion\0227.viam.component.movementsensor.v1.G"
  "etOrientationRequest\0328.viam.component.mo"
  "vementsensor.v1.GetOrientationResponse\"@"
  "\202\323\344\223\002:\0228/viam/api/v1/component/movements"
  "ensor/{name}/orientation\022\271\001\n\013GetPosition"
  "\0224.viam.component.movementsensor.v1.GetP"
  "ositionRequest\0325.viam.component.movement"
  "sensor.v1.GetPositionResponse\"=\202\323\344\223\0027\0225/"
  "viam/api/v1/component/movementsensor/{na"
  "me}/position\022\301\001\n\rGetProperties\0226.viam.co"
  "mponent.movementsensor.v1.GetPropertiesR"
  "equest\0327.viam.component.movementsensor.v"
  "1.GetPropertiesResponse\"\?\202\323\344\223\0029\0227/viam/a"
  "pi/v1/component/movementsensor/{name}/pr"
  "operties\022\271\001\n\013GetAccuracy\0224.viam.componen"
  "t.movementsensor.v1.GetAccuracyRequest\0325"
  ".viam.component.movementsensor.v1.GetAcc"
  "uracyResponse\"=\202\323\344\223\0027\0225/viam/api/v1/comp"
  "onent/movementsensor/{name}/accuracy\022\342\001\n"
  "\025GetLinearAcceleration\022>.viam.component."
  "movementsensor.v1.GetLinearAccelerationR"
  "equest\032\?.viam.component.movementsensor.v"
  "1.GetLinearAccelerationResponse\"H\202\323\344\223\002B\022"
  "@/viam/api/v1/component/movementsensor/{"
  "name}/linear_acceleration\022\221\001\n\tDoCommand\022"
  " .viam.common.v1.DoCommandRequest\032!.viam"
  ".common.v1.DoCommandResponse\"\?\202\323\344\223\0029\"7/v"
  "iam/api/v1/component/movementsensor/{nam"
  "e}/do_commandBS\n$com.viam.component.move"
  "mentsensor.v1Z+go.viam.com/api/component"
  "/movementsensor/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_deps[3] = {
  &::descriptor_table_common_2fv1_2fcommon_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto = {
    false, false, 3946, descriptor_table_protodef_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto,
    "component/movementsensor/v1/movementsensor.proto",
    &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once, descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_deps, 3, 17,
    schemas, file_default_instances, TableStruct_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto::offsets,
    file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto, file_level_enum_descriptors_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto,
    file_level_service_descriptors_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter() {
  return &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto(&descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto);
namespace viam {
namespace component {
namespace movementsensor {
namespace v1 {

// ===================================================================

class GetLinearVelocityRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetLinearVelocityRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetLinearVelocityRequest::_Internal::extra(const GetLinearVelocityRequest* msg) {
  return *msg->extra_;
}
void GetLinearVelocityRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetLinearVelocityRequest::GetLinearVelocityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetLinearVelocityRequest)
}
GetLinearVelocityRequest::GetLinearVelocityRequest(const GetLinearVelocityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetLinearVelocityRequest)
}

inline void GetLinearVelocityRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetLinearVelocityRequest::~GetLinearVelocityRequest() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetLinearVelocityRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLinearVelocityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetLinearVelocityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLinearVelocityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetLinearVelocityRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLinearVelocityRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.movementsensor.v1.GetLinearVelocityRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLinearVelocityRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetLinearVelocityRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.movementsensor.v1.GetLinearVelocityRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetLinearVelocityRequest)
  return target;
}

size_t GetLinearVelocityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetLinearVelocityRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLinearVelocityRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetLinearVelocityRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLinearVelocityRequest::GetClassData() const { return &_class_data_; }

void GetLinearVelocityRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetLinearVelocityRequest *>(to)->MergeFrom(
      static_cast<const GetLinearVelocityRequest &>(from));
}


void GetLinearVelocityRequest::MergeFrom(const GetLinearVelocityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetLinearVelocityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLinearVelocityRequest::CopyFrom(const GetLinearVelocityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetLinearVelocityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLinearVelocityRequest::IsInitialized() const {
  return true;
}

void GetLinearVelocityRequest::InternalSwap(GetLinearVelocityRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLinearVelocityRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[0]);
}

// ===================================================================

class GetLinearVelocityResponse::_Internal {
 public:
  static const ::viam::common::v1::Vector3& linear_velocity(const GetLinearVelocityResponse* msg);
};

const ::viam::common::v1::Vector3&
GetLinearVelocityResponse::_Internal::linear_velocity(const GetLinearVelocityResponse* msg) {
  return *msg->linear_velocity_;
}
void GetLinearVelocityResponse::clear_linear_velocity() {
  if (GetArenaForAllocation() == nullptr && linear_velocity_ != nullptr) {
    delete linear_velocity_;
  }
  linear_velocity_ = nullptr;
}
GetLinearVelocityResponse::GetLinearVelocityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetLinearVelocityResponse)
}
GetLinearVelocityResponse::GetLinearVelocityResponse(const GetLinearVelocityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_linear_velocity()) {
    linear_velocity_ = new ::viam::common::v1::Vector3(*from.linear_velocity_);
  } else {
    linear_velocity_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetLinearVelocityResponse)
}

inline void GetLinearVelocityResponse::SharedCtor() {
linear_velocity_ = nullptr;
}

GetLinearVelocityResponse::~GetLinearVelocityResponse() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetLinearVelocityResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLinearVelocityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete linear_velocity_;
}

void GetLinearVelocityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLinearVelocityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetLinearVelocityResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && linear_velocity_ != nullptr) {
    delete linear_velocity_;
  }
  linear_velocity_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLinearVelocityResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.Vector3 linear_velocity = 1 [json_name = "linearVelocity"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_linear_velocity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLinearVelocityResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetLinearVelocityResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.Vector3 linear_velocity = 1 [json_name = "linearVelocity"];
  if (this->_internal_has_linear_velocity()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::linear_velocity(this),
        _Internal::linear_velocity(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetLinearVelocityResponse)
  return target;
}

size_t GetLinearVelocityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetLinearVelocityResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.Vector3 linear_velocity = 1 [json_name = "linearVelocity"];
  if (this->_internal_has_linear_velocity()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *linear_velocity_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLinearVelocityResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetLinearVelocityResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLinearVelocityResponse::GetClassData() const { return &_class_data_; }

void GetLinearVelocityResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetLinearVelocityResponse *>(to)->MergeFrom(
      static_cast<const GetLinearVelocityResponse &>(from));
}


void GetLinearVelocityResponse::MergeFrom(const GetLinearVelocityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetLinearVelocityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_linear_velocity()) {
    _internal_mutable_linear_velocity()->::viam::common::v1::Vector3::MergeFrom(from._internal_linear_velocity());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLinearVelocityResponse::CopyFrom(const GetLinearVelocityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetLinearVelocityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLinearVelocityResponse::IsInitialized() const {
  return true;
}

void GetLinearVelocityResponse::InternalSwap(GetLinearVelocityResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(linear_velocity_, other->linear_velocity_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLinearVelocityResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[1]);
}

// ===================================================================

class GetAngularVelocityRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetAngularVelocityRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetAngularVelocityRequest::_Internal::extra(const GetAngularVelocityRequest* msg) {
  return *msg->extra_;
}
void GetAngularVelocityRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetAngularVelocityRequest::GetAngularVelocityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetAngularVelocityRequest)
}
GetAngularVelocityRequest::GetAngularVelocityRequest(const GetAngularVelocityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetAngularVelocityRequest)
}

inline void GetAngularVelocityRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetAngularVelocityRequest::~GetAngularVelocityRequest() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetAngularVelocityRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAngularVelocityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetAngularVelocityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetAngularVelocityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetAngularVelocityRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAngularVelocityRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.movementsensor.v1.GetAngularVelocityRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAngularVelocityRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetAngularVelocityRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.movementsensor.v1.GetAngularVelocityRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetAngularVelocityRequest)
  return target;
}

size_t GetAngularVelocityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetAngularVelocityRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAngularVelocityRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetAngularVelocityRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAngularVelocityRequest::GetClassData() const { return &_class_data_; }

void GetAngularVelocityRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetAngularVelocityRequest *>(to)->MergeFrom(
      static_cast<const GetAngularVelocityRequest &>(from));
}


void GetAngularVelocityRequest::MergeFrom(const GetAngularVelocityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetAngularVelocityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAngularVelocityRequest::CopyFrom(const GetAngularVelocityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetAngularVelocityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAngularVelocityRequest::IsInitialized() const {
  return true;
}

void GetAngularVelocityRequest::InternalSwap(GetAngularVelocityRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAngularVelocityRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[2]);
}

// ===================================================================

class GetAngularVelocityResponse::_Internal {
 public:
  static const ::viam::common::v1::Vector3& angular_velocity(const GetAngularVelocityResponse* msg);
};

const ::viam::common::v1::Vector3&
GetAngularVelocityResponse::_Internal::angular_velocity(const GetAngularVelocityResponse* msg) {
  return *msg->angular_velocity_;
}
void GetAngularVelocityResponse::clear_angular_velocity() {
  if (GetArenaForAllocation() == nullptr && angular_velocity_ != nullptr) {
    delete angular_velocity_;
  }
  angular_velocity_ = nullptr;
}
GetAngularVelocityResponse::GetAngularVelocityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetAngularVelocityResponse)
}
GetAngularVelocityResponse::GetAngularVelocityResponse(const GetAngularVelocityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_angular_velocity()) {
    angular_velocity_ = new ::viam::common::v1::Vector3(*from.angular_velocity_);
  } else {
    angular_velocity_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetAngularVelocityResponse)
}

inline void GetAngularVelocityResponse::SharedCtor() {
angular_velocity_ = nullptr;
}

GetAngularVelocityResponse::~GetAngularVelocityResponse() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetAngularVelocityResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAngularVelocityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete angular_velocity_;
}

void GetAngularVelocityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetAngularVelocityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetAngularVelocityResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && angular_velocity_ != nullptr) {
    delete angular_velocity_;
  }
  angular_velocity_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAngularVelocityResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.Vector3 angular_velocity = 1 [json_name = "angularVelocity"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_angular_velocity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAngularVelocityResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetAngularVelocityResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.Vector3 angular_velocity = 1 [json_name = "angularVelocity"];
  if (this->_internal_has_angular_velocity()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::angular_velocity(this),
        _Internal::angular_velocity(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetAngularVelocityResponse)
  return target;
}

size_t GetAngularVelocityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetAngularVelocityResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.Vector3 angular_velocity = 1 [json_name = "angularVelocity"];
  if (this->_internal_has_angular_velocity()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *angular_velocity_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAngularVelocityResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetAngularVelocityResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAngularVelocityResponse::GetClassData() const { return &_class_data_; }

void GetAngularVelocityResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetAngularVelocityResponse *>(to)->MergeFrom(
      static_cast<const GetAngularVelocityResponse &>(from));
}


void GetAngularVelocityResponse::MergeFrom(const GetAngularVelocityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetAngularVelocityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_angular_velocity()) {
    _internal_mutable_angular_velocity()->::viam::common::v1::Vector3::MergeFrom(from._internal_angular_velocity());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAngularVelocityResponse::CopyFrom(const GetAngularVelocityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetAngularVelocityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAngularVelocityResponse::IsInitialized() const {
  return true;
}

void GetAngularVelocityResponse::InternalSwap(GetAngularVelocityResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(angular_velocity_, other->angular_velocity_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAngularVelocityResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[3]);
}

// ===================================================================

class GetCompassHeadingRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetCompassHeadingRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetCompassHeadingRequest::_Internal::extra(const GetCompassHeadingRequest* msg) {
  return *msg->extra_;
}
void GetCompassHeadingRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetCompassHeadingRequest::GetCompassHeadingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetCompassHeadingRequest)
}
GetCompassHeadingRequest::GetCompassHeadingRequest(const GetCompassHeadingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetCompassHeadingRequest)
}

inline void GetCompassHeadingRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetCompassHeadingRequest::~GetCompassHeadingRequest() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetCompassHeadingRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCompassHeadingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetCompassHeadingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCompassHeadingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetCompassHeadingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCompassHeadingRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.movementsensor.v1.GetCompassHeadingRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCompassHeadingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetCompassHeadingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.movementsensor.v1.GetCompassHeadingRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetCompassHeadingRequest)
  return target;
}

size_t GetCompassHeadingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetCompassHeadingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCompassHeadingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetCompassHeadingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCompassHeadingRequest::GetClassData() const { return &_class_data_; }

void GetCompassHeadingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetCompassHeadingRequest *>(to)->MergeFrom(
      static_cast<const GetCompassHeadingRequest &>(from));
}


void GetCompassHeadingRequest::MergeFrom(const GetCompassHeadingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetCompassHeadingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCompassHeadingRequest::CopyFrom(const GetCompassHeadingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetCompassHeadingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCompassHeadingRequest::IsInitialized() const {
  return true;
}

void GetCompassHeadingRequest::InternalSwap(GetCompassHeadingRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCompassHeadingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[4]);
}

// ===================================================================

class GetCompassHeadingResponse::_Internal {
 public:
};

GetCompassHeadingResponse::GetCompassHeadingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetCompassHeadingResponse)
}
GetCompassHeadingResponse::GetCompassHeadingResponse(const GetCompassHeadingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetCompassHeadingResponse)
}

inline void GetCompassHeadingResponse::SharedCtor() {
value_ = 0;
}

GetCompassHeadingResponse::~GetCompassHeadingResponse() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetCompassHeadingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCompassHeadingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetCompassHeadingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetCompassHeadingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetCompassHeadingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCompassHeadingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double value = 1 [json_name = "value"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCompassHeadingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetCompassHeadingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double value = 1 [json_name = "value"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetCompassHeadingResponse)
  return target;
}

size_t GetCompassHeadingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetCompassHeadingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double value = 1 [json_name = "value"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCompassHeadingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetCompassHeadingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCompassHeadingResponse::GetClassData() const { return &_class_data_; }

void GetCompassHeadingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetCompassHeadingResponse *>(to)->MergeFrom(
      static_cast<const GetCompassHeadingResponse &>(from));
}


void GetCompassHeadingResponse::MergeFrom(const GetCompassHeadingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetCompassHeadingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = from._internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCompassHeadingResponse::CopyFrom(const GetCompassHeadingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetCompassHeadingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCompassHeadingResponse::IsInitialized() const {
  return true;
}

void GetCompassHeadingResponse::InternalSwap(GetCompassHeadingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCompassHeadingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[5]);
}

// ===================================================================

class GetOrientationRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetOrientationRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetOrientationRequest::_Internal::extra(const GetOrientationRequest* msg) {
  return *msg->extra_;
}
void GetOrientationRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetOrientationRequest::GetOrientationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetOrientationRequest)
}
GetOrientationRequest::GetOrientationRequest(const GetOrientationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetOrientationRequest)
}

inline void GetOrientationRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetOrientationRequest::~GetOrientationRequest() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetOrientationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrientationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetOrientationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrientationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetOrientationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrientationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.movementsensor.v1.GetOrientationRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrientationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetOrientationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.movementsensor.v1.GetOrientationRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetOrientationRequest)
  return target;
}

size_t GetOrientationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetOrientationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrientationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrientationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrientationRequest::GetClassData() const { return &_class_data_; }

void GetOrientationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOrientationRequest *>(to)->MergeFrom(
      static_cast<const GetOrientationRequest &>(from));
}


void GetOrientationRequest::MergeFrom(const GetOrientationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetOrientationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrientationRequest::CopyFrom(const GetOrientationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetOrientationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrientationRequest::IsInitialized() const {
  return true;
}

void GetOrientationRequest::InternalSwap(GetOrientationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrientationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[6]);
}

// ===================================================================

class GetOrientationResponse::_Internal {
 public:
  static const ::viam::common::v1::Orientation& orientation(const GetOrientationResponse* msg);
};

const ::viam::common::v1::Orientation&
GetOrientationResponse::_Internal::orientation(const GetOrientationResponse* msg) {
  return *msg->orientation_;
}
void GetOrientationResponse::clear_orientation() {
  if (GetArenaForAllocation() == nullptr && orientation_ != nullptr) {
    delete orientation_;
  }
  orientation_ = nullptr;
}
GetOrientationResponse::GetOrientationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetOrientationResponse)
}
GetOrientationResponse::GetOrientationResponse(const GetOrientationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_orientation()) {
    orientation_ = new ::viam::common::v1::Orientation(*from.orientation_);
  } else {
    orientation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetOrientationResponse)
}

inline void GetOrientationResponse::SharedCtor() {
orientation_ = nullptr;
}

GetOrientationResponse::~GetOrientationResponse() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetOrientationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOrientationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete orientation_;
}

void GetOrientationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOrientationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetOrientationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && orientation_ != nullptr) {
    delete orientation_;
  }
  orientation_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOrientationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.Orientation orientation = 1 [json_name = "orientation"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOrientationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetOrientationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.Orientation orientation = 1 [json_name = "orientation"];
  if (this->_internal_has_orientation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::orientation(this),
        _Internal::orientation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetOrientationResponse)
  return target;
}

size_t GetOrientationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetOrientationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.Orientation orientation = 1 [json_name = "orientation"];
  if (this->_internal_has_orientation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *orientation_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOrientationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOrientationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOrientationResponse::GetClassData() const { return &_class_data_; }

void GetOrientationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOrientationResponse *>(to)->MergeFrom(
      static_cast<const GetOrientationResponse &>(from));
}


void GetOrientationResponse::MergeFrom(const GetOrientationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetOrientationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_orientation()) {
    _internal_mutable_orientation()->::viam::common::v1::Orientation::MergeFrom(from._internal_orientation());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrientationResponse::CopyFrom(const GetOrientationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetOrientationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrientationResponse::IsInitialized() const {
  return true;
}

void GetOrientationResponse::InternalSwap(GetOrientationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(orientation_, other->orientation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOrientationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[7]);
}

// ===================================================================

class GetPositionRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetPositionRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetPositionRequest::_Internal::extra(const GetPositionRequest* msg) {
  return *msg->extra_;
}
void GetPositionRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetPositionRequest::GetPositionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetPositionRequest)
}
GetPositionRequest::GetPositionRequest(const GetPositionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetPositionRequest)
}

inline void GetPositionRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetPositionRequest::~GetPositionRequest() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetPositionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPositionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetPositionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPositionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetPositionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPositionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.movementsensor.v1.GetPositionRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPositionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetPositionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.movementsensor.v1.GetPositionRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetPositionRequest)
  return target;
}

size_t GetPositionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetPositionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPositionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPositionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPositionRequest::GetClassData() const { return &_class_data_; }

void GetPositionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPositionRequest *>(to)->MergeFrom(
      static_cast<const GetPositionRequest &>(from));
}


void GetPositionRequest::MergeFrom(const GetPositionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetPositionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPositionRequest::CopyFrom(const GetPositionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetPositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPositionRequest::IsInitialized() const {
  return true;
}

void GetPositionRequest::InternalSwap(GetPositionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPositionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[8]);
}

// ===================================================================

class GetPositionResponse::_Internal {
 public:
  static const ::viam::common::v1::GeoPoint& coordinate(const GetPositionResponse* msg);
};

const ::viam::common::v1::GeoPoint&
GetPositionResponse::_Internal::coordinate(const GetPositionResponse* msg) {
  return *msg->coordinate_;
}
void GetPositionResponse::clear_coordinate() {
  if (GetArenaForAllocation() == nullptr && coordinate_ != nullptr) {
    delete coordinate_;
  }
  coordinate_ = nullptr;
}
GetPositionResponse::GetPositionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetPositionResponse)
}
GetPositionResponse::GetPositionResponse(const GetPositionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coordinate()) {
    coordinate_ = new ::viam::common::v1::GeoPoint(*from.coordinate_);
  } else {
    coordinate_ = nullptr;
  }
  altitude_mm_ = from.altitude_mm_;
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetPositionResponse)
}

inline void GetPositionResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coordinate_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&altitude_mm_) -
    reinterpret_cast<char*>(&coordinate_)) + sizeof(altitude_mm_));
}

GetPositionResponse::~GetPositionResponse() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetPositionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPositionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete coordinate_;
}

void GetPositionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPositionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetPositionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && coordinate_ != nullptr) {
    delete coordinate_;
  }
  coordinate_ = nullptr;
  altitude_mm_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPositionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.GeoPoint coordinate = 1 [json_name = "coordinate"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_coordinate(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float altitude_mm = 2 [json_name = "altitudeMm"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          altitude_mm_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPositionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetPositionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.GeoPoint coordinate = 1 [json_name = "coordinate"];
  if (this->_internal_has_coordinate()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::coordinate(this),
        _Internal::coordinate(this).GetCachedSize(), target, stream);
  }

  // float altitude_mm = 2 [json_name = "altitudeMm"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_altitude_mm = this->_internal_altitude_mm();
  uint32_t raw_altitude_mm;
  memcpy(&raw_altitude_mm, &tmp_altitude_mm, sizeof(tmp_altitude_mm));
  if (raw_altitude_mm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_altitude_mm(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetPositionResponse)
  return target;
}

size_t GetPositionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetPositionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.GeoPoint coordinate = 1 [json_name = "coordinate"];
  if (this->_internal_has_coordinate()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *coordinate_);
  }

  // float altitude_mm = 2 [json_name = "altitudeMm"];
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_altitude_mm = this->_internal_altitude_mm();
  uint32_t raw_altitude_mm;
  memcpy(&raw_altitude_mm, &tmp_altitude_mm, sizeof(tmp_altitude_mm));
  if (raw_altitude_mm != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPositionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPositionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPositionResponse::GetClassData() const { return &_class_data_; }

void GetPositionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPositionResponse *>(to)->MergeFrom(
      static_cast<const GetPositionResponse &>(from));
}


void GetPositionResponse::MergeFrom(const GetPositionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetPositionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_coordinate()) {
    _internal_mutable_coordinate()->::viam::common::v1::GeoPoint::MergeFrom(from._internal_coordinate());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_altitude_mm = from._internal_altitude_mm();
  uint32_t raw_altitude_mm;
  memcpy(&raw_altitude_mm, &tmp_altitude_mm, sizeof(tmp_altitude_mm));
  if (raw_altitude_mm != 0) {
    _internal_set_altitude_mm(from._internal_altitude_mm());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPositionResponse::CopyFrom(const GetPositionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetPositionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPositionResponse::IsInitialized() const {
  return true;
}

void GetPositionResponse::InternalSwap(GetPositionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPositionResponse, altitude_mm_)
      + sizeof(GetPositionResponse::altitude_mm_)
      - PROTOBUF_FIELD_OFFSET(GetPositionResponse, coordinate_)>(
          reinterpret_cast<char*>(&coordinate_),
          reinterpret_cast<char*>(&other->coordinate_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPositionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[9]);
}

// ===================================================================

class GetPropertiesRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetPropertiesRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetPropertiesRequest::_Internal::extra(const GetPropertiesRequest* msg) {
  return *msg->extra_;
}
void GetPropertiesRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetPropertiesRequest::GetPropertiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetPropertiesRequest)
}
GetPropertiesRequest::GetPropertiesRequest(const GetPropertiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetPropertiesRequest)
}

inline void GetPropertiesRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetPropertiesRequest::~GetPropertiesRequest() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetPropertiesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPropertiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetPropertiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPropertiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetPropertiesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPropertiesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.movementsensor.v1.GetPropertiesRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPropertiesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetPropertiesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.movementsensor.v1.GetPropertiesRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetPropertiesRequest)
  return target;
}

size_t GetPropertiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetPropertiesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPropertiesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPropertiesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPropertiesRequest::GetClassData() const { return &_class_data_; }

void GetPropertiesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPropertiesRequest *>(to)->MergeFrom(
      static_cast<const GetPropertiesRequest &>(from));
}


void GetPropertiesRequest::MergeFrom(const GetPropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetPropertiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPropertiesRequest::CopyFrom(const GetPropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetPropertiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPropertiesRequest::IsInitialized() const {
  return true;
}

void GetPropertiesRequest::InternalSwap(GetPropertiesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPropertiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[10]);
}

// ===================================================================

class GetPropertiesResponse::_Internal {
 public:
};

GetPropertiesResponse::GetPropertiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetPropertiesResponse)
}
GetPropertiesResponse::GetPropertiesResponse(const GetPropertiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&linear_velocity_supported_, &from.linear_velocity_supported_,
    static_cast<size_t>(reinterpret_cast<char*>(&linear_acceleration_supported_) -
    reinterpret_cast<char*>(&linear_velocity_supported_)) + sizeof(linear_acceleration_supported_));
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetPropertiesResponse)
}

inline void GetPropertiesResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&linear_velocity_supported_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&linear_acceleration_supported_) -
    reinterpret_cast<char*>(&linear_velocity_supported_)) + sizeof(linear_acceleration_supported_));
}

GetPropertiesResponse::~GetPropertiesResponse() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetPropertiesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPropertiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetPropertiesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPropertiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetPropertiesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&linear_velocity_supported_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&linear_acceleration_supported_) -
      reinterpret_cast<char*>(&linear_velocity_supported_)) + sizeof(linear_acceleration_supported_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPropertiesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool linear_velocity_supported = 1 [json_name = "linearVelocitySupported"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          linear_velocity_supported_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool angular_velocity_supported = 2 [json_name = "angularVelocitySupported"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          angular_velocity_supported_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool orientation_supported = 3 [json_name = "orientationSupported"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          orientation_supported_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool position_supported = 4 [json_name = "positionSupported"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          position_supported_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool compass_heading_supported = 5 [json_name = "compassHeadingSupported"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          compass_heading_supported_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool linear_acceleration_supported = 6 [json_name = "linearAccelerationSupported"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          linear_acceleration_supported_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPropertiesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetPropertiesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool linear_velocity_supported = 1 [json_name = "linearVelocitySupported"];
  if (this->_internal_linear_velocity_supported() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_linear_velocity_supported(), target);
  }

  // bool angular_velocity_supported = 2 [json_name = "angularVelocitySupported"];
  if (this->_internal_angular_velocity_supported() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_angular_velocity_supported(), target);
  }

  // bool orientation_supported = 3 [json_name = "orientationSupported"];
  if (this->_internal_orientation_supported() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_orientation_supported(), target);
  }

  // bool position_supported = 4 [json_name = "positionSupported"];
  if (this->_internal_position_supported() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_position_supported(), target);
  }

  // bool compass_heading_supported = 5 [json_name = "compassHeadingSupported"];
  if (this->_internal_compass_heading_supported() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_compass_heading_supported(), target);
  }

  // bool linear_acceleration_supported = 6 [json_name = "linearAccelerationSupported"];
  if (this->_internal_linear_acceleration_supported() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_linear_acceleration_supported(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetPropertiesResponse)
  return target;
}

size_t GetPropertiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetPropertiesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool linear_velocity_supported = 1 [json_name = "linearVelocitySupported"];
  if (this->_internal_linear_velocity_supported() != 0) {
    total_size += 1 + 1;
  }

  // bool angular_velocity_supported = 2 [json_name = "angularVelocitySupported"];
  if (this->_internal_angular_velocity_supported() != 0) {
    total_size += 1 + 1;
  }

  // bool orientation_supported = 3 [json_name = "orientationSupported"];
  if (this->_internal_orientation_supported() != 0) {
    total_size += 1 + 1;
  }

  // bool position_supported = 4 [json_name = "positionSupported"];
  if (this->_internal_position_supported() != 0) {
    total_size += 1 + 1;
  }

  // bool compass_heading_supported = 5 [json_name = "compassHeadingSupported"];
  if (this->_internal_compass_heading_supported() != 0) {
    total_size += 1 + 1;
  }

  // bool linear_acceleration_supported = 6 [json_name = "linearAccelerationSupported"];
  if (this->_internal_linear_acceleration_supported() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPropertiesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPropertiesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPropertiesResponse::GetClassData() const { return &_class_data_; }

void GetPropertiesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPropertiesResponse *>(to)->MergeFrom(
      static_cast<const GetPropertiesResponse &>(from));
}


void GetPropertiesResponse::MergeFrom(const GetPropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetPropertiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_linear_velocity_supported() != 0) {
    _internal_set_linear_velocity_supported(from._internal_linear_velocity_supported());
  }
  if (from._internal_angular_velocity_supported() != 0) {
    _internal_set_angular_velocity_supported(from._internal_angular_velocity_supported());
  }
  if (from._internal_orientation_supported() != 0) {
    _internal_set_orientation_supported(from._internal_orientation_supported());
  }
  if (from._internal_position_supported() != 0) {
    _internal_set_position_supported(from._internal_position_supported());
  }
  if (from._internal_compass_heading_supported() != 0) {
    _internal_set_compass_heading_supported(from._internal_compass_heading_supported());
  }
  if (from._internal_linear_acceleration_supported() != 0) {
    _internal_set_linear_acceleration_supported(from._internal_linear_acceleration_supported());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPropertiesResponse::CopyFrom(const GetPropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetPropertiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPropertiesResponse::IsInitialized() const {
  return true;
}

void GetPropertiesResponse::InternalSwap(GetPropertiesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, linear_acceleration_supported_)
      + sizeof(GetPropertiesResponse::linear_acceleration_supported_)
      - PROTOBUF_FIELD_OFFSET(GetPropertiesResponse, linear_velocity_supported_)>(
          reinterpret_cast<char*>(&linear_velocity_supported_),
          reinterpret_cast<char*>(&other->linear_velocity_supported_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPropertiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[11]);
}

// ===================================================================

class GetAccuracyRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetAccuracyRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetAccuracyRequest::_Internal::extra(const GetAccuracyRequest* msg) {
  return *msg->extra_;
}
void GetAccuracyRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetAccuracyRequest::GetAccuracyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetAccuracyRequest)
}
GetAccuracyRequest::GetAccuracyRequest(const GetAccuracyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetAccuracyRequest)
}

inline void GetAccuracyRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetAccuracyRequest::~GetAccuracyRequest() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetAccuracyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAccuracyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetAccuracyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetAccuracyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetAccuracyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAccuracyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.movementsensor.v1.GetAccuracyRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAccuracyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetAccuracyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.movementsensor.v1.GetAccuracyRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetAccuracyRequest)
  return target;
}

size_t GetAccuracyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetAccuracyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAccuracyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetAccuracyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAccuracyRequest::GetClassData() const { return &_class_data_; }

void GetAccuracyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetAccuracyRequest *>(to)->MergeFrom(
      static_cast<const GetAccuracyRequest &>(from));
}


void GetAccuracyRequest::MergeFrom(const GetAccuracyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetAccuracyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAccuracyRequest::CopyFrom(const GetAccuracyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetAccuracyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccuracyRequest::IsInitialized() const {
  return true;
}

void GetAccuracyRequest::InternalSwap(GetAccuracyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAccuracyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[12]);
}

// ===================================================================

GetAccuracyResponse_AccuracyMmEntry_DoNotUse::GetAccuracyResponse_AccuracyMmEntry_DoNotUse() {}
GetAccuracyResponse_AccuracyMmEntry_DoNotUse::GetAccuracyResponse_AccuracyMmEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetAccuracyResponse_AccuracyMmEntry_DoNotUse::MergeFrom(const GetAccuracyResponse_AccuracyMmEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetAccuracyResponse_AccuracyMmEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[13]);
}

// ===================================================================

class GetAccuracyResponse::_Internal {
 public:
};

GetAccuracyResponse::GetAccuracyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  accuracy_mm_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &GetAccuracyResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetAccuracyResponse)
}
GetAccuracyResponse::GetAccuracyResponse(const GetAccuracyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accuracy_mm_.MergeFrom(from.accuracy_mm_);
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetAccuracyResponse)
}

inline void GetAccuracyResponse::SharedCtor() {
}

GetAccuracyResponse::~GetAccuracyResponse() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetAccuracyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void GetAccuracyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  accuracy_mm_.Destruct();
}

void GetAccuracyResponse::ArenaDtor(void* object) {
  GetAccuracyResponse* _this = reinterpret_cast< GetAccuracyResponse* >(object);
  _this->accuracy_mm_.Destruct();
}
void GetAccuracyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetAccuracyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetAccuracyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accuracy_mm_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAccuracyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, float> accuracy_mm = 1 [json_name = "accuracyMm"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&accuracy_mm_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAccuracyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetAccuracyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, float> accuracy_mm = 1 [json_name = "accuracyMm"];
  if (!this->_internal_accuracy_mm().empty()) {
    using MapType = ::_pb::Map<std::string, float>;
    using WireHelper = GetAccuracyResponse_AccuracyMmEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_accuracy_mm();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "viam.component.movementsensor.v1.GetAccuracyResponse.AccuracyMmEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetAccuracyResponse)
  return target;
}

size_t GetAccuracyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetAccuracyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, float> accuracy_mm = 1 [json_name = "accuracyMm"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_accuracy_mm_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, float >::const_iterator
      it = this->_internal_accuracy_mm().begin();
      it != this->_internal_accuracy_mm().end(); ++it) {
    total_size += GetAccuracyResponse_AccuracyMmEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAccuracyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetAccuracyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAccuracyResponse::GetClassData() const { return &_class_data_; }

void GetAccuracyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetAccuracyResponse *>(to)->MergeFrom(
      static_cast<const GetAccuracyResponse &>(from));
}


void GetAccuracyResponse::MergeFrom(const GetAccuracyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetAccuracyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  accuracy_mm_.MergeFrom(from.accuracy_mm_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAccuracyResponse::CopyFrom(const GetAccuracyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetAccuracyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccuracyResponse::IsInitialized() const {
  return true;
}

void GetAccuracyResponse::InternalSwap(GetAccuracyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  accuracy_mm_.InternalSwap(&other->accuracy_mm_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAccuracyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[14]);
}

// ===================================================================

class GetLinearAccelerationRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Struct& extra(const GetLinearAccelerationRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
GetLinearAccelerationRequest::_Internal::extra(const GetLinearAccelerationRequest* msg) {
  return *msg->extra_;
}
void GetLinearAccelerationRequest::clear_extra() {
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
}
GetLinearAccelerationRequest::GetLinearAccelerationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetLinearAccelerationRequest)
}
GetLinearAccelerationRequest::GetLinearAccelerationRequest(const GetLinearAccelerationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_extra()) {
    extra_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from.extra_);
  } else {
    extra_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetLinearAccelerationRequest)
}

inline void GetLinearAccelerationRequest::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
extra_ = nullptr;
}

GetLinearAccelerationRequest::~GetLinearAccelerationRequest() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetLinearAccelerationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLinearAccelerationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
  if (this != internal_default_instance()) delete extra_;
}

void GetLinearAccelerationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLinearAccelerationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetLinearAccelerationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && extra_ != nullptr) {
    delete extra_;
  }
  extra_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLinearAccelerationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.component.movementsensor.v1.GetLinearAccelerationRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extra(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLinearAccelerationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetLinearAccelerationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.component.movementsensor.v1.GetLinearAccelerationRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(99, _Internal::extra(this),
        _Internal::extra(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetLinearAccelerationRequest)
  return target;
}

size_t GetLinearAccelerationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetLinearAccelerationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Struct extra = 99 [json_name = "extra"];
  if (this->_internal_has_extra()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extra_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLinearAccelerationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetLinearAccelerationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLinearAccelerationRequest::GetClassData() const { return &_class_data_; }

void GetLinearAccelerationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetLinearAccelerationRequest *>(to)->MergeFrom(
      static_cast<const GetLinearAccelerationRequest &>(from));
}


void GetLinearAccelerationRequest::MergeFrom(const GetLinearAccelerationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetLinearAccelerationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_extra()) {
    _internal_mutable_extra()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(from._internal_extra());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLinearAccelerationRequest::CopyFrom(const GetLinearAccelerationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetLinearAccelerationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLinearAccelerationRequest::IsInitialized() const {
  return true;
}

void GetLinearAccelerationRequest::InternalSwap(GetLinearAccelerationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(extra_, other->extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLinearAccelerationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[15]);
}

// ===================================================================

class GetLinearAccelerationResponse::_Internal {
 public:
  static const ::viam::common::v1::Vector3& linear_acceleration(const GetLinearAccelerationResponse* msg);
};

const ::viam::common::v1::Vector3&
GetLinearAccelerationResponse::_Internal::linear_acceleration(const GetLinearAccelerationResponse* msg) {
  return *msg->linear_acceleration_;
}
void GetLinearAccelerationResponse::clear_linear_acceleration() {
  if (GetArenaForAllocation() == nullptr && linear_acceleration_ != nullptr) {
    delete linear_acceleration_;
  }
  linear_acceleration_ = nullptr;
}
GetLinearAccelerationResponse::GetLinearAccelerationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:viam.component.movementsensor.v1.GetLinearAccelerationResponse)
}
GetLinearAccelerationResponse::GetLinearAccelerationResponse(const GetLinearAccelerationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_linear_acceleration()) {
    linear_acceleration_ = new ::viam::common::v1::Vector3(*from.linear_acceleration_);
  } else {
    linear_acceleration_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:viam.component.movementsensor.v1.GetLinearAccelerationResponse)
}

inline void GetLinearAccelerationResponse::SharedCtor() {
linear_acceleration_ = nullptr;
}

GetLinearAccelerationResponse::~GetLinearAccelerationResponse() {
  // @@protoc_insertion_point(destructor:viam.component.movementsensor.v1.GetLinearAccelerationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLinearAccelerationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete linear_acceleration_;
}

void GetLinearAccelerationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLinearAccelerationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.component.movementsensor.v1.GetLinearAccelerationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && linear_acceleration_ != nullptr) {
    delete linear_acceleration_;
  }
  linear_acceleration_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLinearAccelerationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.Vector3 linear_acceleration = 1 [json_name = "linearAcceleration"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_linear_acceleration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLinearAccelerationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.component.movementsensor.v1.GetLinearAccelerationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.Vector3 linear_acceleration = 1 [json_name = "linearAcceleration"];
  if (this->_internal_has_linear_acceleration()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::linear_acceleration(this),
        _Internal::linear_acceleration(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.component.movementsensor.v1.GetLinearAccelerationResponse)
  return target;
}

size_t GetLinearAccelerationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.component.movementsensor.v1.GetLinearAccelerationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.Vector3 linear_acceleration = 1 [json_name = "linearAcceleration"];
  if (this->_internal_has_linear_acceleration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *linear_acceleration_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLinearAccelerationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetLinearAccelerationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLinearAccelerationResponse::GetClassData() const { return &_class_data_; }

void GetLinearAccelerationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetLinearAccelerationResponse *>(to)->MergeFrom(
      static_cast<const GetLinearAccelerationResponse &>(from));
}


void GetLinearAccelerationResponse::MergeFrom(const GetLinearAccelerationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viam.component.movementsensor.v1.GetLinearAccelerationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_linear_acceleration()) {
    _internal_mutable_linear_acceleration()->::viam::common::v1::Vector3::MergeFrom(from._internal_linear_acceleration());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLinearAccelerationResponse::CopyFrom(const GetLinearAccelerationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.component.movementsensor.v1.GetLinearAccelerationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLinearAccelerationResponse::IsInitialized() const {
  return true;
}

void GetLinearAccelerationResponse::InternalSwap(GetLinearAccelerationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(linear_acceleration_, other->linear_acceleration_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLinearAccelerationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_getter, &descriptor_table_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto_once,
      file_level_metadata_component_2fmovementsensor_2fv1_2fmovementsensor_2eproto[16]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace movementsensor
}  // namespace component
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetLinearVelocityRequest*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetLinearVelocityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetLinearVelocityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetLinearVelocityResponse*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetLinearVelocityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetLinearVelocityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetAngularVelocityRequest*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetAngularVelocityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetAngularVelocityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetAngularVelocityResponse*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetAngularVelocityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetAngularVelocityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetCompassHeadingRequest*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetCompassHeadingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetCompassHeadingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetCompassHeadingResponse*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetCompassHeadingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetCompassHeadingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetOrientationRequest*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetOrientationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetOrientationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetOrientationResponse*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetOrientationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetOrientationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetPositionRequest*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetPositionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetPositionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetPositionResponse*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetPositionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetPositionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetPropertiesRequest*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetPropertiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetPropertiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetPropertiesResponse*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetPropertiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetPropertiesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetAccuracyRequest*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetAccuracyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetAccuracyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetAccuracyResponse_AccuracyMmEntry_DoNotUse*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetAccuracyResponse_AccuracyMmEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetAccuracyResponse_AccuracyMmEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetAccuracyResponse*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetAccuracyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetAccuracyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetLinearAccelerationRequest*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetLinearAccelerationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetLinearAccelerationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::component::movementsensor::v1::GetLinearAccelerationResponse*
Arena::CreateMaybeMessage< ::viam::component::movementsensor::v1::GetLinearAccelerationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::component::movementsensor::v1::GetLinearAccelerationResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
