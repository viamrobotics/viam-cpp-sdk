// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module/v1/module.proto

#include "module/v1/module.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace module {
namespace v1 {
PROTOBUF_CONSTEXPR AddResourceRequest::AddResourceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dependencies_)*/{}
  , /*decltype(_impl_.config_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddResourceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddResourceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddResourceRequestDefaultTypeInternal() {}
  union {
    AddResourceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddResourceRequestDefaultTypeInternal _AddResourceRequest_default_instance_;
PROTOBUF_CONSTEXPR AddResourceResponse::AddResourceResponse(
    ::_pbi::ConstantInitialized) {}
struct AddResourceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddResourceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddResourceResponseDefaultTypeInternal() {}
  union {
    AddResourceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddResourceResponseDefaultTypeInternal _AddResourceResponse_default_instance_;
PROTOBUF_CONSTEXPR ReconfigureResourceRequest::ReconfigureResourceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dependencies_)*/{}
  , /*decltype(_impl_.config_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReconfigureResourceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReconfigureResourceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReconfigureResourceRequestDefaultTypeInternal() {}
  union {
    ReconfigureResourceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReconfigureResourceRequestDefaultTypeInternal _ReconfigureResourceRequest_default_instance_;
PROTOBUF_CONSTEXPR ReconfigureResourceResponse::ReconfigureResourceResponse(
    ::_pbi::ConstantInitialized) {}
struct ReconfigureResourceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReconfigureResourceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReconfigureResourceResponseDefaultTypeInternal() {}
  union {
    ReconfigureResourceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReconfigureResourceResponseDefaultTypeInternal _ReconfigureResourceResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveResourceRequest::RemoveResourceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveResourceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveResourceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveResourceRequestDefaultTypeInternal() {}
  union {
    RemoveResourceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveResourceRequestDefaultTypeInternal _RemoveResourceRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveResourceResponse::RemoveResourceResponse(
    ::_pbi::ConstantInitialized) {}
struct RemoveResourceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveResourceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveResourceResponseDefaultTypeInternal() {}
  union {
    RemoveResourceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveResourceResponseDefaultTypeInternal _RemoveResourceResponse_default_instance_;
PROTOBUF_CONSTEXPR HandlerDefinition::HandlerDefinition(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.models_)*/{}
  , /*decltype(_impl_.subtype_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HandlerDefinitionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandlerDefinitionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandlerDefinitionDefaultTypeInternal() {}
  union {
    HandlerDefinition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandlerDefinitionDefaultTypeInternal _HandlerDefinition_default_instance_;
PROTOBUF_CONSTEXPR HandlerMap::HandlerMap(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.handlers_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HandlerMapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandlerMapDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandlerMapDefaultTypeInternal() {}
  union {
    HandlerMap _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandlerMapDefaultTypeInternal _HandlerMap_default_instance_;
PROTOBUF_CONSTEXPR ReadyRequest::ReadyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReadyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadyRequestDefaultTypeInternal() {}
  union {
    ReadyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadyRequestDefaultTypeInternal _ReadyRequest_default_instance_;
PROTOBUF_CONSTEXPR ReadyResponse::ReadyResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.handlermap_)*/nullptr
  , /*decltype(_impl_.ready_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReadyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadyResponseDefaultTypeInternal() {}
  union {
    ReadyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadyResponseDefaultTypeInternal _ReadyResponse_default_instance_;
}  // namespace v1
}  // namespace module
}  // namespace viam
static ::_pb::Metadata file_level_metadata_module_2fv1_2fmodule_2eproto[10];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_module_2fv1_2fmodule_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_module_2fv1_2fmodule_2eproto = nullptr;

const uint32_t TableStruct_module_2fv1_2fmodule_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::AddResourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::AddResourceRequest, _impl_.config_),
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::AddResourceRequest, _impl_.dependencies_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::AddResourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::ReconfigureResourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::ReconfigureResourceRequest, _impl_.config_),
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::ReconfigureResourceRequest, _impl_.dependencies_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::ReconfigureResourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::RemoveResourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::RemoveResourceRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::RemoveResourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::HandlerDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::HandlerDefinition, _impl_.subtype_),
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::HandlerDefinition, _impl_.models_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::HandlerMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::HandlerMap, _impl_.handlers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::ReadyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::ReadyRequest, _impl_.parent_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::ReadyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::ReadyResponse, _impl_.ready_),
  PROTOBUF_FIELD_OFFSET(::viam::module::v1::ReadyResponse, _impl_.handlermap_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::module::v1::AddResourceRequest)},
  { 8, -1, -1, sizeof(::viam::module::v1::AddResourceResponse)},
  { 14, -1, -1, sizeof(::viam::module::v1::ReconfigureResourceRequest)},
  { 22, -1, -1, sizeof(::viam::module::v1::ReconfigureResourceResponse)},
  { 28, -1, -1, sizeof(::viam::module::v1::RemoveResourceRequest)},
  { 35, -1, -1, sizeof(::viam::module::v1::RemoveResourceResponse)},
  { 41, -1, -1, sizeof(::viam::module::v1::HandlerDefinition)},
  { 49, -1, -1, sizeof(::viam::module::v1::HandlerMap)},
  { 56, -1, -1, sizeof(::viam::module::v1::ReadyRequest)},
  { 63, -1, -1, sizeof(::viam::module::v1::ReadyResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::module::v1::_AddResourceRequest_default_instance_._instance,
  &::viam::module::v1::_AddResourceResponse_default_instance_._instance,
  &::viam::module::v1::_ReconfigureResourceRequest_default_instance_._instance,
  &::viam::module::v1::_ReconfigureResourceResponse_default_instance_._instance,
  &::viam::module::v1::_RemoveResourceRequest_default_instance_._instance,
  &::viam::module::v1::_RemoveResourceResponse_default_instance_._instance,
  &::viam::module::v1::_HandlerDefinition_default_instance_._instance,
  &::viam::module::v1::_HandlerMap_default_instance_._instance,
  &::viam::module::v1::_ReadyRequest_default_instance_._instance,
  &::viam::module::v1::_ReadyResponse_default_instance_._instance,
};

const char descriptor_table_protodef_module_2fv1_2fmodule_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026module/v1/module.proto\022\016viam.module.v1"
  "\032\022app/v1/robot.proto\032\024robot/v1/robot.pro"
  "to\"n\n\022AddResourceRequest\0224\n\006config\030\001 \001(\013"
  "2\034.viam.app.v1.ComponentConfigR\006config\022\""
  "\n\014dependencies\030\002 \003(\tR\014dependencies\"\025\n\023Ad"
  "dResourceResponse\"v\n\032ReconfigureResource"
  "Request\0224\n\006config\030\001 \001(\0132\034.viam.app.v1.Co"
  "mponentConfigR\006config\022\"\n\014dependencies\030\002 "
  "\003(\tR\014dependencies\"\035\n\033ReconfigureResource"
  "Response\"+\n\025RemoveResourceRequest\022\022\n\004nam"
  "e\030\001 \001(\tR\004name\"\030\n\026RemoveResourceResponse\""
  "h\n\021HandlerDefinition\022;\n\007subtype\030\001 \001(\0132!."
  "viam.robot.v1.ResourceRPCSubtypeR\007subtyp"
  "e\022\026\n\006models\030\002 \003(\tR\006models\"K\n\nHandlerMap\022"
  "=\n\010handlers\030\001 \003(\0132!.viam.module.v1.Handl"
  "erDefinitionR\010handlers\"5\n\014ReadyRequest\022%"
  "\n\016parent_address\030\001 \001(\tR\rparentAddress\"a\n"
  "\rReadyResponse\022\024\n\005ready\030\001 \001(\010R\005ready\022:\n\n"
  "handlermap\030\002 \001(\0132\032.viam.module.v1.Handle"
  "rMapR\nhandlermap2\376\002\n\rModuleService\022V\n\013Ad"
  "dResource\022\".viam.module.v1.AddResourceRe"
  "quest\032#.viam.module.v1.AddResourceRespon"
  "se\022n\n\023ReconfigureResource\022*.viam.module."
  "v1.ReconfigureResourceRequest\032+.viam.mod"
  "ule.v1.ReconfigureResourceResponse\022_\n\016Re"
  "moveResource\022%.viam.module.v1.RemoveReso"
  "urceRequest\032&.viam.module.v1.RemoveResou"
  "rceResponse\022D\n\005Ready\022\034.viam.module.v1.Re"
  "adyRequest\032\035.viam.module.v1.ReadyRespons"
  "eB\033Z\031go.viam.com/api/module/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_module_2fv1_2fmodule_2eproto_deps[2] = {
  &::descriptor_table_app_2fv1_2frobot_2eproto,
  &::descriptor_table_robot_2fv1_2frobot_2eproto,
};
static ::_pbi::once_flag descriptor_table_module_2fv1_2fmodule_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_module_2fv1_2fmodule_2eproto = {
    false, false, 1198, descriptor_table_protodef_module_2fv1_2fmodule_2eproto,
    "module/v1/module.proto",
    &descriptor_table_module_2fv1_2fmodule_2eproto_once, descriptor_table_module_2fv1_2fmodule_2eproto_deps, 2, 10,
    schemas, file_default_instances, TableStruct_module_2fv1_2fmodule_2eproto::offsets,
    file_level_metadata_module_2fv1_2fmodule_2eproto, file_level_enum_descriptors_module_2fv1_2fmodule_2eproto,
    file_level_service_descriptors_module_2fv1_2fmodule_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_module_2fv1_2fmodule_2eproto_getter() {
  return &descriptor_table_module_2fv1_2fmodule_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_module_2fv1_2fmodule_2eproto(&descriptor_table_module_2fv1_2fmodule_2eproto);
namespace viam {
namespace module {
namespace v1 {

// ===================================================================

class AddResourceRequest::_Internal {
 public:
  static const ::viam::app::v1::ComponentConfig& config(const AddResourceRequest* msg);
};

const ::viam::app::v1::ComponentConfig&
AddResourceRequest::_Internal::config(const AddResourceRequest* msg) {
  return *msg->_impl_.config_;
}
void AddResourceRequest::clear_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.config_ != nullptr) {
    delete _impl_.config_;
  }
  _impl_.config_ = nullptr;
}
AddResourceRequest::AddResourceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.module.v1.AddResourceRequest)
}
AddResourceRequest::AddResourceRequest(const AddResourceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddResourceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dependencies_){from._impl_.dependencies_}
    , decltype(_impl_.config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_config()) {
    _this->_impl_.config_ = new ::viam::app::v1::ComponentConfig(*from._impl_.config_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.module.v1.AddResourceRequest)
}

inline void AddResourceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dependencies_){arena}
    , decltype(_impl_.config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddResourceRequest::~AddResourceRequest() {
  // @@protoc_insertion_point(destructor:viam.module.v1.AddResourceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddResourceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dependencies_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.config_;
}

void AddResourceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddResourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.module.v1.AddResourceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dependencies_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.config_ != nullptr) {
    delete _impl_.config_;
  }
  _impl_.config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddResourceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.ComponentConfig config = 1 [json_name = "config"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string dependencies = 2 [json_name = "dependencies"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_dependencies();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.module.v1.AddResourceRequest.dependencies"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddResourceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.module.v1.AddResourceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.ComponentConfig config = 1 [json_name = "config"];
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  // repeated string dependencies = 2 [json_name = "dependencies"];
  for (int i = 0, n = this->_internal_dependencies_size(); i < n; i++) {
    const auto& s = this->_internal_dependencies(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.module.v1.AddResourceRequest.dependencies");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.module.v1.AddResourceRequest)
  return target;
}

size_t AddResourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.module.v1.AddResourceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string dependencies = 2 [json_name = "dependencies"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.dependencies_.size());
  for (int i = 0, n = _impl_.dependencies_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.dependencies_.Get(i));
  }

  // .viam.app.v1.ComponentConfig config = 1 [json_name = "config"];
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddResourceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddResourceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddResourceRequest::GetClassData() const { return &_class_data_; }


void AddResourceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddResourceRequest*>(&to_msg);
  auto& from = static_cast<const AddResourceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.module.v1.AddResourceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.dependencies_.MergeFrom(from._impl_.dependencies_);
  if (from._internal_has_config()) {
    _this->_internal_mutable_config()->::viam::app::v1::ComponentConfig::MergeFrom(
        from._internal_config());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddResourceRequest::CopyFrom(const AddResourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.module.v1.AddResourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResourceRequest::IsInitialized() const {
  return true;
}

void AddResourceRequest::InternalSwap(AddResourceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dependencies_.InternalSwap(&other->_impl_.dependencies_);
  swap(_impl_.config_, other->_impl_.config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddResourceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_module_2fv1_2fmodule_2eproto_getter, &descriptor_table_module_2fv1_2fmodule_2eproto_once,
      file_level_metadata_module_2fv1_2fmodule_2eproto[0]);
}

// ===================================================================

class AddResourceResponse::_Internal {
 public:
};

AddResourceResponse::AddResourceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.module.v1.AddResourceResponse)
}
AddResourceResponse::AddResourceResponse(const AddResourceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  AddResourceResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.module.v1.AddResourceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddResourceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddResourceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata AddResourceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_module_2fv1_2fmodule_2eproto_getter, &descriptor_table_module_2fv1_2fmodule_2eproto_once,
      file_level_metadata_module_2fv1_2fmodule_2eproto[1]);
}

// ===================================================================

class ReconfigureResourceRequest::_Internal {
 public:
  static const ::viam::app::v1::ComponentConfig& config(const ReconfigureResourceRequest* msg);
};

const ::viam::app::v1::ComponentConfig&
ReconfigureResourceRequest::_Internal::config(const ReconfigureResourceRequest* msg) {
  return *msg->_impl_.config_;
}
void ReconfigureResourceRequest::clear_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.config_ != nullptr) {
    delete _impl_.config_;
  }
  _impl_.config_ = nullptr;
}
ReconfigureResourceRequest::ReconfigureResourceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.module.v1.ReconfigureResourceRequest)
}
ReconfigureResourceRequest::ReconfigureResourceRequest(const ReconfigureResourceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReconfigureResourceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dependencies_){from._impl_.dependencies_}
    , decltype(_impl_.config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_config()) {
    _this->_impl_.config_ = new ::viam::app::v1::ComponentConfig(*from._impl_.config_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.module.v1.ReconfigureResourceRequest)
}

inline void ReconfigureResourceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dependencies_){arena}
    , decltype(_impl_.config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReconfigureResourceRequest::~ReconfigureResourceRequest() {
  // @@protoc_insertion_point(destructor:viam.module.v1.ReconfigureResourceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReconfigureResourceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dependencies_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.config_;
}

void ReconfigureResourceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReconfigureResourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.module.v1.ReconfigureResourceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dependencies_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.config_ != nullptr) {
    delete _impl_.config_;
  }
  _impl_.config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReconfigureResourceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.v1.ComponentConfig config = 1 [json_name = "config"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string dependencies = 2 [json_name = "dependencies"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_dependencies();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.module.v1.ReconfigureResourceRequest.dependencies"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReconfigureResourceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.module.v1.ReconfigureResourceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.v1.ComponentConfig config = 1 [json_name = "config"];
  if (this->_internal_has_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  // repeated string dependencies = 2 [json_name = "dependencies"];
  for (int i = 0, n = this->_internal_dependencies_size(); i < n; i++) {
    const auto& s = this->_internal_dependencies(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.module.v1.ReconfigureResourceRequest.dependencies");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.module.v1.ReconfigureResourceRequest)
  return target;
}

size_t ReconfigureResourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.module.v1.ReconfigureResourceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string dependencies = 2 [json_name = "dependencies"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.dependencies_.size());
  for (int i = 0, n = _impl_.dependencies_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.dependencies_.Get(i));
  }

  // .viam.app.v1.ComponentConfig config = 1 [json_name = "config"];
  if (this->_internal_has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReconfigureResourceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReconfigureResourceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReconfigureResourceRequest::GetClassData() const { return &_class_data_; }


void ReconfigureResourceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReconfigureResourceRequest*>(&to_msg);
  auto& from = static_cast<const ReconfigureResourceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.module.v1.ReconfigureResourceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.dependencies_.MergeFrom(from._impl_.dependencies_);
  if (from._internal_has_config()) {
    _this->_internal_mutable_config()->::viam::app::v1::ComponentConfig::MergeFrom(
        from._internal_config());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReconfigureResourceRequest::CopyFrom(const ReconfigureResourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.module.v1.ReconfigureResourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconfigureResourceRequest::IsInitialized() const {
  return true;
}

void ReconfigureResourceRequest::InternalSwap(ReconfigureResourceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dependencies_.InternalSwap(&other->_impl_.dependencies_);
  swap(_impl_.config_, other->_impl_.config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReconfigureResourceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_module_2fv1_2fmodule_2eproto_getter, &descriptor_table_module_2fv1_2fmodule_2eproto_once,
      file_level_metadata_module_2fv1_2fmodule_2eproto[2]);
}

// ===================================================================

class ReconfigureResourceResponse::_Internal {
 public:
};

ReconfigureResourceResponse::ReconfigureResourceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.module.v1.ReconfigureResourceResponse)
}
ReconfigureResourceResponse::ReconfigureResourceResponse(const ReconfigureResourceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ReconfigureResourceResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.module.v1.ReconfigureResourceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReconfigureResourceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReconfigureResourceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ReconfigureResourceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_module_2fv1_2fmodule_2eproto_getter, &descriptor_table_module_2fv1_2fmodule_2eproto_once,
      file_level_metadata_module_2fv1_2fmodule_2eproto[3]);
}

// ===================================================================

class RemoveResourceRequest::_Internal {
 public:
};

RemoveResourceRequest::RemoveResourceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.module.v1.RemoveResourceRequest)
}
RemoveResourceRequest::RemoveResourceRequest(const RemoveResourceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveResourceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.module.v1.RemoveResourceRequest)
}

inline void RemoveResourceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RemoveResourceRequest::~RemoveResourceRequest() {
  // @@protoc_insertion_point(destructor:viam.module.v1.RemoveResourceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveResourceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void RemoveResourceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveResourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.module.v1.RemoveResourceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveResourceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.module.v1.RemoveResourceRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveResourceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.module.v1.RemoveResourceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.module.v1.RemoveResourceRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.module.v1.RemoveResourceRequest)
  return target;
}

size_t RemoveResourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.module.v1.RemoveResourceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveResourceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveResourceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveResourceRequest::GetClassData() const { return &_class_data_; }


void RemoveResourceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveResourceRequest*>(&to_msg);
  auto& from = static_cast<const RemoveResourceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.module.v1.RemoveResourceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveResourceRequest::CopyFrom(const RemoveResourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.module.v1.RemoveResourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveResourceRequest::IsInitialized() const {
  return true;
}

void RemoveResourceRequest::InternalSwap(RemoveResourceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveResourceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_module_2fv1_2fmodule_2eproto_getter, &descriptor_table_module_2fv1_2fmodule_2eproto_once,
      file_level_metadata_module_2fv1_2fmodule_2eproto[4]);
}

// ===================================================================

class RemoveResourceResponse::_Internal {
 public:
};

RemoveResourceResponse::RemoveResourceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.module.v1.RemoveResourceResponse)
}
RemoveResourceResponse::RemoveResourceResponse(const RemoveResourceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RemoveResourceResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.module.v1.RemoveResourceResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveResourceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveResourceResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RemoveResourceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_module_2fv1_2fmodule_2eproto_getter, &descriptor_table_module_2fv1_2fmodule_2eproto_once,
      file_level_metadata_module_2fv1_2fmodule_2eproto[5]);
}

// ===================================================================

class HandlerDefinition::_Internal {
 public:
  static const ::viam::robot::v1::ResourceRPCSubtype& subtype(const HandlerDefinition* msg);
};

const ::viam::robot::v1::ResourceRPCSubtype&
HandlerDefinition::_Internal::subtype(const HandlerDefinition* msg) {
  return *msg->_impl_.subtype_;
}
void HandlerDefinition::clear_subtype() {
  if (GetArenaForAllocation() == nullptr && _impl_.subtype_ != nullptr) {
    delete _impl_.subtype_;
  }
  _impl_.subtype_ = nullptr;
}
HandlerDefinition::HandlerDefinition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.module.v1.HandlerDefinition)
}
HandlerDefinition::HandlerDefinition(const HandlerDefinition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HandlerDefinition* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.models_){from._impl_.models_}
    , decltype(_impl_.subtype_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_subtype()) {
    _this->_impl_.subtype_ = new ::viam::robot::v1::ResourceRPCSubtype(*from._impl_.subtype_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.module.v1.HandlerDefinition)
}

inline void HandlerDefinition::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.models_){arena}
    , decltype(_impl_.subtype_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

HandlerDefinition::~HandlerDefinition() {
  // @@protoc_insertion_point(destructor:viam.module.v1.HandlerDefinition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HandlerDefinition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.models_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.subtype_;
}

void HandlerDefinition::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HandlerDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.module.v1.HandlerDefinition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.models_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.subtype_ != nullptr) {
    delete _impl_.subtype_;
  }
  _impl_.subtype_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandlerDefinition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.robot.v1.ResourceRPCSubtype subtype = 1 [json_name = "subtype"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_subtype(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string models = 2 [json_name = "models"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_models();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "viam.module.v1.HandlerDefinition.models"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HandlerDefinition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.module.v1.HandlerDefinition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.robot.v1.ResourceRPCSubtype subtype = 1 [json_name = "subtype"];
  if (this->_internal_has_subtype()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::subtype(this),
        _Internal::subtype(this).GetCachedSize(), target, stream);
  }

  // repeated string models = 2 [json_name = "models"];
  for (int i = 0, n = this->_internal_models_size(); i < n; i++) {
    const auto& s = this->_internal_models(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.module.v1.HandlerDefinition.models");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.module.v1.HandlerDefinition)
  return target;
}

size_t HandlerDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.module.v1.HandlerDefinition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string models = 2 [json_name = "models"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.models_.size());
  for (int i = 0, n = _impl_.models_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.models_.Get(i));
  }

  // .viam.robot.v1.ResourceRPCSubtype subtype = 1 [json_name = "subtype"];
  if (this->_internal_has_subtype()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.subtype_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HandlerDefinition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HandlerDefinition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HandlerDefinition::GetClassData() const { return &_class_data_; }


void HandlerDefinition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HandlerDefinition*>(&to_msg);
  auto& from = static_cast<const HandlerDefinition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.module.v1.HandlerDefinition)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.models_.MergeFrom(from._impl_.models_);
  if (from._internal_has_subtype()) {
    _this->_internal_mutable_subtype()->::viam::robot::v1::ResourceRPCSubtype::MergeFrom(
        from._internal_subtype());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HandlerDefinition::CopyFrom(const HandlerDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.module.v1.HandlerDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandlerDefinition::IsInitialized() const {
  return true;
}

void HandlerDefinition::InternalSwap(HandlerDefinition* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.models_.InternalSwap(&other->_impl_.models_);
  swap(_impl_.subtype_, other->_impl_.subtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HandlerDefinition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_module_2fv1_2fmodule_2eproto_getter, &descriptor_table_module_2fv1_2fmodule_2eproto_once,
      file_level_metadata_module_2fv1_2fmodule_2eproto[6]);
}

// ===================================================================

class HandlerMap::_Internal {
 public:
};

HandlerMap::HandlerMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.module.v1.HandlerMap)
}
HandlerMap::HandlerMap(const HandlerMap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HandlerMap* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.handlers_){from._impl_.handlers_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.module.v1.HandlerMap)
}

inline void HandlerMap::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.handlers_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

HandlerMap::~HandlerMap() {
  // @@protoc_insertion_point(destructor:viam.module.v1.HandlerMap)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HandlerMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handlers_.~RepeatedPtrField();
}

void HandlerMap::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HandlerMap::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.module.v1.HandlerMap)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.handlers_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandlerMap::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.module.v1.HandlerDefinition handlers = 1 [json_name = "handlers"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_handlers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HandlerMap::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.module.v1.HandlerMap)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.module.v1.HandlerDefinition handlers = 1 [json_name = "handlers"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_handlers_size()); i < n; i++) {
    const auto& repfield = this->_internal_handlers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.module.v1.HandlerMap)
  return target;
}

size_t HandlerMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.module.v1.HandlerMap)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.module.v1.HandlerDefinition handlers = 1 [json_name = "handlers"];
  total_size += 1UL * this->_internal_handlers_size();
  for (const auto& msg : this->_impl_.handlers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HandlerMap::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HandlerMap::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HandlerMap::GetClassData() const { return &_class_data_; }


void HandlerMap::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HandlerMap*>(&to_msg);
  auto& from = static_cast<const HandlerMap&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.module.v1.HandlerMap)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.handlers_.MergeFrom(from._impl_.handlers_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HandlerMap::CopyFrom(const HandlerMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.module.v1.HandlerMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandlerMap::IsInitialized() const {
  return true;
}

void HandlerMap::InternalSwap(HandlerMap* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.handlers_.InternalSwap(&other->_impl_.handlers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HandlerMap::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_module_2fv1_2fmodule_2eproto_getter, &descriptor_table_module_2fv1_2fmodule_2eproto_once,
      file_level_metadata_module_2fv1_2fmodule_2eproto[7]);
}

// ===================================================================

class ReadyRequest::_Internal {
 public:
};

ReadyRequest::ReadyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.module.v1.ReadyRequest)
}
ReadyRequest::ReadyRequest(const ReadyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReadyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_address_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent_address().empty()) {
    _this->_impl_.parent_address_.Set(from._internal_parent_address(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.module.v1.ReadyRequest)
}

inline void ReadyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_address_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReadyRequest::~ReadyRequest() {
  // @@protoc_insertion_point(destructor:viam.module.v1.ReadyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_address_.Destroy();
}

void ReadyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReadyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.module.v1.ReadyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent_address = 1 [json_name = "parentAddress"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.module.v1.ReadyRequest.parent_address"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.module.v1.ReadyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent_address = 1 [json_name = "parentAddress"];
  if (!this->_internal_parent_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_address().data(), static_cast<int>(this->_internal_parent_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.module.v1.ReadyRequest.parent_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.module.v1.ReadyRequest)
  return target;
}

size_t ReadyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.module.v1.ReadyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent_address = 1 [json_name = "parentAddress"];
  if (!this->_internal_parent_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReadyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadyRequest::GetClassData() const { return &_class_data_; }


void ReadyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReadyRequest*>(&to_msg);
  auto& from = static_cast<const ReadyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.module.v1.ReadyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent_address().empty()) {
    _this->_internal_set_parent_address(from._internal_parent_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadyRequest::CopyFrom(const ReadyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.module.v1.ReadyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadyRequest::IsInitialized() const {
  return true;
}

void ReadyRequest::InternalSwap(ReadyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_address_, lhs_arena,
      &other->_impl_.parent_address_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_module_2fv1_2fmodule_2eproto_getter, &descriptor_table_module_2fv1_2fmodule_2eproto_once,
      file_level_metadata_module_2fv1_2fmodule_2eproto[8]);
}

// ===================================================================

class ReadyResponse::_Internal {
 public:
  static const ::viam::module::v1::HandlerMap& handlermap(const ReadyResponse* msg);
};

const ::viam::module::v1::HandlerMap&
ReadyResponse::_Internal::handlermap(const ReadyResponse* msg) {
  return *msg->_impl_.handlermap_;
}
ReadyResponse::ReadyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.module.v1.ReadyResponse)
}
ReadyResponse::ReadyResponse(const ReadyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReadyResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.handlermap_){nullptr}
    , decltype(_impl_.ready_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_handlermap()) {
    _this->_impl_.handlermap_ = new ::viam::module::v1::HandlerMap(*from._impl_.handlermap_);
  }
  _this->_impl_.ready_ = from._impl_.ready_;
  // @@protoc_insertion_point(copy_constructor:viam.module.v1.ReadyResponse)
}

inline void ReadyResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.handlermap_){nullptr}
    , decltype(_impl_.ready_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReadyResponse::~ReadyResponse() {
  // @@protoc_insertion_point(destructor:viam.module.v1.ReadyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReadyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.handlermap_;
}

void ReadyResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReadyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.module.v1.ReadyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.handlermap_ != nullptr) {
    delete _impl_.handlermap_;
  }
  _impl_.handlermap_ = nullptr;
  _impl_.ready_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool ready = 1 [json_name = "ready"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ready_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.module.v1.HandlerMap handlermap = 2 [json_name = "handlermap"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_handlermap(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.module.v1.ReadyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ready = 1 [json_name = "ready"];
  if (this->_internal_ready() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_ready(), target);
  }

  // .viam.module.v1.HandlerMap handlermap = 2 [json_name = "handlermap"];
  if (this->_internal_has_handlermap()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::handlermap(this),
        _Internal::handlermap(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.module.v1.ReadyResponse)
  return target;
}

size_t ReadyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.module.v1.ReadyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.module.v1.HandlerMap handlermap = 2 [json_name = "handlermap"];
  if (this->_internal_has_handlermap()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.handlermap_);
  }

  // bool ready = 1 [json_name = "ready"];
  if (this->_internal_ready() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReadyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadyResponse::GetClassData() const { return &_class_data_; }


void ReadyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReadyResponse*>(&to_msg);
  auto& from = static_cast<const ReadyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.module.v1.ReadyResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_handlermap()) {
    _this->_internal_mutable_handlermap()->::viam::module::v1::HandlerMap::MergeFrom(
        from._internal_handlermap());
  }
  if (from._internal_ready() != 0) {
    _this->_internal_set_ready(from._internal_ready());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadyResponse::CopyFrom(const ReadyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.module.v1.ReadyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadyResponse::IsInitialized() const {
  return true;
}

void ReadyResponse::InternalSwap(ReadyResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadyResponse, _impl_.ready_)
      + sizeof(ReadyResponse::_impl_.ready_)
      - PROTOBUF_FIELD_OFFSET(ReadyResponse, _impl_.handlermap_)>(
          reinterpret_cast<char*>(&_impl_.handlermap_),
          reinterpret_cast<char*>(&other->_impl_.handlermap_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_module_2fv1_2fmodule_2eproto_getter, &descriptor_table_module_2fv1_2fmodule_2eproto_once,
      file_level_metadata_module_2fv1_2fmodule_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace module
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::module::v1::AddResourceRequest*
Arena::CreateMaybeMessage< ::viam::module::v1::AddResourceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::module::v1::AddResourceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::module::v1::AddResourceResponse*
Arena::CreateMaybeMessage< ::viam::module::v1::AddResourceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::module::v1::AddResourceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::module::v1::ReconfigureResourceRequest*
Arena::CreateMaybeMessage< ::viam::module::v1::ReconfigureResourceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::module::v1::ReconfigureResourceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::module::v1::ReconfigureResourceResponse*
Arena::CreateMaybeMessage< ::viam::module::v1::ReconfigureResourceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::module::v1::ReconfigureResourceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::module::v1::RemoveResourceRequest*
Arena::CreateMaybeMessage< ::viam::module::v1::RemoveResourceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::module::v1::RemoveResourceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::module::v1::RemoveResourceResponse*
Arena::CreateMaybeMessage< ::viam::module::v1::RemoveResourceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::module::v1::RemoveResourceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::module::v1::HandlerDefinition*
Arena::CreateMaybeMessage< ::viam::module::v1::HandlerDefinition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::module::v1::HandlerDefinition >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::module::v1::HandlerMap*
Arena::CreateMaybeMessage< ::viam::module::v1::HandlerMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::module::v1::HandlerMap >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::module::v1::ReadyRequest*
Arena::CreateMaybeMessage< ::viam::module::v1::ReadyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::module::v1::ReadyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::module::v1::ReadyResponse*
Arena::CreateMaybeMessage< ::viam::module::v1::ReadyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::module::v1::ReadyResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
