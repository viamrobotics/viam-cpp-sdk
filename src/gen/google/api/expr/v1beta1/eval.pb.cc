// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1beta1/eval.proto

#include "google/api/expr/v1beta1/eval.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace expr {
namespace v1beta1 {
PROTOBUF_CONSTEXPR EvalState_Result::EvalState_Result(
    ::_pbi::ConstantInitialized)
  : expr_(nullptr)
  , value_(0){}
struct EvalState_ResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvalState_ResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvalState_ResultDefaultTypeInternal() {}
  union {
    EvalState_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvalState_ResultDefaultTypeInternal _EvalState_Result_default_instance_;
PROTOBUF_CONSTEXPR EvalState::EvalState(
    ::_pbi::ConstantInitialized)
  : values_()
  , results_(){}
struct EvalStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvalStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvalStateDefaultTypeInternal() {}
  union {
    EvalState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvalStateDefaultTypeInternal _EvalState_default_instance_;
PROTOBUF_CONSTEXPR ExprValue::ExprValue(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct ExprValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExprValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExprValueDefaultTypeInternal() {}
  union {
    ExprValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExprValueDefaultTypeInternal _ExprValue_default_instance_;
PROTOBUF_CONSTEXPR ErrorSet::ErrorSet(
    ::_pbi::ConstantInitialized)
  : errors_(){}
struct ErrorSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ErrorSetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ErrorSetDefaultTypeInternal() {}
  union {
    ErrorSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ErrorSetDefaultTypeInternal _ErrorSet_default_instance_;
PROTOBUF_CONSTEXPR UnknownSet::UnknownSet(
    ::_pbi::ConstantInitialized)
  : exprs_(){}
struct UnknownSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownSetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownSetDefaultTypeInternal() {}
  union {
    UnknownSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownSetDefaultTypeInternal _UnknownSet_default_instance_;
PROTOBUF_CONSTEXPR IdRef::IdRef(
    ::_pbi::ConstantInitialized)
  : id_(0){}
struct IdRefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IdRefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IdRefDefaultTypeInternal() {}
  union {
    IdRef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IdRefDefaultTypeInternal _IdRef_default_instance_;
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto[6];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::EvalState_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::EvalState_Result, expr_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::EvalState_Result, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::EvalState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::EvalState, values_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::EvalState, results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::ExprValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::ExprValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::ExprValue, kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::ErrorSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::ErrorSet, errors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::UnknownSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::UnknownSet, exprs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::IdRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::IdRef, id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::expr::v1beta1::EvalState_Result)},
  { 8, -1, -1, sizeof(::google::api::expr::v1beta1::EvalState)},
  { 16, -1, -1, sizeof(::google::api::expr::v1beta1::ExprValue)},
  { 26, -1, -1, sizeof(::google::api::expr::v1beta1::ErrorSet)},
  { 33, -1, -1, sizeof(::google::api::expr::v1beta1::UnknownSet)},
  { 40, -1, -1, sizeof(::google::api::expr::v1beta1::IdRef)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::expr::v1beta1::_EvalState_Result_default_instance_._instance,
  &::google::api::expr::v1beta1::_EvalState_default_instance_._instance,
  &::google::api::expr::v1beta1::_ExprValue_default_instance_._instance,
  &::google::api::expr::v1beta1::_ErrorSet_default_instance_._instance,
  &::google::api::expr::v1beta1::_UnknownSet_default_instance_._instance,
  &::google::api::expr::v1beta1::_IdRef_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"google/api/expr/v1beta1/eval.proto\022\027go"
  "ogle.api.expr.v1beta1\032#google/api/expr/v"
  "1beta1/value.proto\032\027google/rpc/status.pr"
  "oto\"\340\001\n\tEvalState\022:\n\006values\030\001 \003(\0132\".goog"
  "le.api.expr.v1beta1.ExprValueR\006values\022C\n"
  "\007results\030\003 \003(\0132).google.api.expr.v1beta1"
  ".EvalState.ResultR\007results\032R\n\006Result\0222\n\004"
  "expr\030\001 \001(\0132\036.google.api.expr.v1beta1.IdR"
  "efR\004expr\022\024\n\005value\030\002 \001(\005R\005value\"\307\001\n\tExprV"
  "alue\0226\n\005value\030\001 \001(\0132\036.google.api.expr.v1"
  "beta1.ValueH\000R\005value\0229\n\005error\030\002 \001(\0132!.go"
  "ogle.api.expr.v1beta1.ErrorSetH\000R\005error\022"
  "\?\n\007unknown\030\003 \001(\0132#.google.api.expr.v1bet"
  "a1.UnknownSetH\000R\007unknownB\006\n\004kind\"6\n\010Erro"
  "rSet\022*\n\006errors\030\001 \003(\0132\022.google.rpc.Status"
  "R\006errors\"B\n\nUnknownSet\0224\n\005exprs\030\001 \003(\0132\036."
  "google.api.expr.v1beta1.IdRefR\005exprs\"\027\n\005"
  "IdRef\022\016\n\002id\030\001 \001(\005R\002idBj\n\033com.google.api."
  "expr.v1beta1B\tEvalProtoP\001Z;google.golang"
  ".org/genproto/googleapis/api/expr/v1beta"
  "1;expr\370\001\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_deps[2] = {
  &::descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fvalue_2eproto,
  &::descriptor_table_google_2frpc_2fstatus_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto = {
    false, false, 817, descriptor_table_protodef_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto,
    "google/api/expr/v1beta1/eval.proto",
    &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_once, descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_deps, 2, 6,
    schemas, file_default_instances, TableStruct_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto::offsets,
    file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto, file_level_enum_descriptors_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto,
    file_level_service_descriptors_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto(&descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto);
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {

// ===================================================================

class EvalState_Result::_Internal {
 public:
  static const ::google::api::expr::v1beta1::IdRef& expr(const EvalState_Result* msg);
};

const ::google::api::expr::v1beta1::IdRef&
EvalState_Result::_Internal::expr(const EvalState_Result* msg) {
  return *msg->expr_;
}
EvalState_Result::EvalState_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.EvalState.Result)
}
EvalState_Result::EvalState_Result(const EvalState_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_expr()) {
    expr_ = new ::google::api::expr::v1beta1::IdRef(*from.expr_);
  } else {
    expr_ = nullptr;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.EvalState.Result)
}

inline void EvalState_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&expr_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&expr_)) + sizeof(value_));
}

EvalState_Result::~EvalState_Result() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.EvalState.Result)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EvalState_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete expr_;
}

void EvalState_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EvalState_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.EvalState.Result)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && expr_ != nullptr) {
    delete expr_;
  }
  expr_ = nullptr;
  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EvalState_Result::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.v1beta1.IdRef expr = 1 [json_name = "expr"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 value = 2 [json_name = "value"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EvalState_Result::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.EvalState.Result)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1beta1.IdRef expr = 1 [json_name = "expr"];
  if (this->_internal_has_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::expr(this),
        _Internal::expr(this).GetCachedSize(), target, stream);
  }

  // int32 value = 2 [json_name = "value"];
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.EvalState.Result)
  return target;
}

size_t EvalState_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.EvalState.Result)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.expr.v1beta1.IdRef expr = 1 [json_name = "expr"];
  if (this->_internal_has_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expr_);
  }

  // int32 value = 2 [json_name = "value"];
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EvalState_Result::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EvalState_Result::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EvalState_Result::GetClassData() const { return &_class_data_; }

void EvalState_Result::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<EvalState_Result *>(to)->MergeFrom(
      static_cast<const EvalState_Result &>(from));
}


void EvalState_Result::MergeFrom(const EvalState_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.EvalState.Result)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_expr()) {
    _internal_mutable_expr()->::google::api::expr::v1beta1::IdRef::MergeFrom(from._internal_expr());
  }
  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EvalState_Result::CopyFrom(const EvalState_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.EvalState.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvalState_Result::IsInitialized() const {
  return true;
}

void EvalState_Result::InternalSwap(EvalState_Result* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EvalState_Result, value_)
      + sizeof(EvalState_Result::value_)
      - PROTOBUF_FIELD_OFFSET(EvalState_Result, expr_)>(
          reinterpret_cast<char*>(&expr_),
          reinterpret_cast<char*>(&other->expr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EvalState_Result::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto[0]);
}

// ===================================================================

class EvalState::_Internal {
 public:
};

EvalState::EvalState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  values_(arena),
  results_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.EvalState)
}
EvalState::EvalState(const EvalState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_),
      results_(from.results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.EvalState)
}

inline void EvalState::SharedCtor() {
}

EvalState::~EvalState() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.EvalState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EvalState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EvalState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EvalState::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.EvalState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EvalState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.expr.v1beta1.ExprValue values = 1 [json_name = "values"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.expr.v1beta1.EvalState.Result results = 3 [json_name = "results"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EvalState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.EvalState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.expr.v1beta1.ExprValue values = 1 [json_name = "values"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_values_size()); i < n; i++) {
    const auto& repfield = this->_internal_values(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .google.api.expr.v1beta1.EvalState.Result results = 3 [json_name = "results"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_results_size()); i < n; i++) {
    const auto& repfield = this->_internal_results(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.EvalState)
  return target;
}

size_t EvalState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.EvalState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1beta1.ExprValue values = 1 [json_name = "values"];
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .google.api.expr.v1beta1.EvalState.Result results = 3 [json_name = "results"];
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EvalState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EvalState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EvalState::GetClassData() const { return &_class_data_; }

void EvalState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<EvalState *>(to)->MergeFrom(
      static_cast<const EvalState &>(from));
}


void EvalState::MergeFrom(const EvalState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.EvalState)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  results_.MergeFrom(from.results_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EvalState::CopyFrom(const EvalState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.EvalState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvalState::IsInitialized() const {
  return true;
}

void EvalState::InternalSwap(EvalState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
  results_.InternalSwap(&other->results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EvalState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto[1]);
}

// ===================================================================

class ExprValue::_Internal {
 public:
  static const ::google::api::expr::v1beta1::Value& value(const ExprValue* msg);
  static const ::google::api::expr::v1beta1::ErrorSet& error(const ExprValue* msg);
  static const ::google::api::expr::v1beta1::UnknownSet& unknown(const ExprValue* msg);
};

const ::google::api::expr::v1beta1::Value&
ExprValue::_Internal::value(const ExprValue* msg) {
  return *msg->kind_.value_;
}
const ::google::api::expr::v1beta1::ErrorSet&
ExprValue::_Internal::error(const ExprValue* msg) {
  return *msg->kind_.error_;
}
const ::google::api::expr::v1beta1::UnknownSet&
ExprValue::_Internal::unknown(const ExprValue* msg) {
  return *msg->kind_.unknown_;
}
void ExprValue::set_allocated_value(::google::api::expr::v1beta1::Value* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    set_has_value();
    kind_.value_ = value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.ExprValue.value)
}
void ExprValue::clear_value() {
  if (_internal_has_value()) {
    if (GetArenaForAllocation() == nullptr) {
      delete kind_.value_;
    }
    clear_has_kind();
  }
}
void ExprValue::set_allocated_error(::google::api::expr::v1beta1::ErrorSet* error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(error);
    if (message_arena != submessage_arena) {
      error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    kind_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.ExprValue.error)
}
void ExprValue::set_allocated_unknown(::google::api::expr::v1beta1::UnknownSet* unknown) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (unknown) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(unknown);
    if (message_arena != submessage_arena) {
      unknown = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unknown, submessage_arena);
    }
    set_has_unknown();
    kind_.unknown_ = unknown;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.ExprValue.unknown)
}
ExprValue::ExprValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.ExprValue)
}
ExprValue::ExprValue(const ExprValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_kind();
  switch (from.kind_case()) {
    case kValue: {
      _internal_mutable_value()->::google::api::expr::v1beta1::Value::MergeFrom(from._internal_value());
      break;
    }
    case kError: {
      _internal_mutable_error()->::google::api::expr::v1beta1::ErrorSet::MergeFrom(from._internal_error());
      break;
    }
    case kUnknown: {
      _internal_mutable_unknown()->::google::api::expr::v1beta1::UnknownSet::MergeFrom(from._internal_unknown());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.ExprValue)
}

inline void ExprValue::SharedCtor() {
clear_has_kind();
}

ExprValue::~ExprValue() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.ExprValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExprValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_kind()) {
    clear_kind();
  }
}

void ExprValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExprValue::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1beta1.ExprValue)
  switch (kind_case()) {
    case kValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete kind_.value_;
      }
      break;
    }
    case kError: {
      if (GetArenaForAllocation() == nullptr) {
        delete kind_.error_;
      }
      break;
    }
    case kUnknown: {
      if (GetArenaForAllocation() == nullptr) {
        delete kind_.unknown_;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void ExprValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.ExprValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExprValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.v1beta1.Value value = 1 [json_name = "value"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.ErrorSet error = 2 [json_name = "error"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.UnknownSet unknown = 3 [json_name = "unknown"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_unknown(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExprValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.ExprValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1beta1.Value value = 1 [json_name = "value"];
  if (_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1beta1.ErrorSet error = 2 [json_name = "error"];
  if (_internal_has_error()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::error(this),
        _Internal::error(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1beta1.UnknownSet unknown = 3 [json_name = "unknown"];
  if (_internal_has_unknown()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::unknown(this),
        _Internal::unknown(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.ExprValue)
  return target;
}

size_t ExprValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.ExprValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (kind_case()) {
    // .google.api.expr.v1beta1.Value value = 1 [json_name = "value"];
    case kValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.value_);
      break;
    }
    // .google.api.expr.v1beta1.ErrorSet error = 2 [json_name = "error"];
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.error_);
      break;
    }
    // .google.api.expr.v1beta1.UnknownSet unknown = 3 [json_name = "unknown"];
    case kUnknown: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.unknown_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExprValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ExprValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExprValue::GetClassData() const { return &_class_data_; }

void ExprValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ExprValue *>(to)->MergeFrom(
      static_cast<const ExprValue &>(from));
}


void ExprValue::MergeFrom(const ExprValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.ExprValue)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.kind_case()) {
    case kValue: {
      _internal_mutable_value()->::google::api::expr::v1beta1::Value::MergeFrom(from._internal_value());
      break;
    }
    case kError: {
      _internal_mutable_error()->::google::api::expr::v1beta1::ErrorSet::MergeFrom(from._internal_error());
      break;
    }
    case kUnknown: {
      _internal_mutable_unknown()->::google::api::expr::v1beta1::UnknownSet::MergeFrom(from._internal_unknown());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExprValue::CopyFrom(const ExprValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.ExprValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExprValue::IsInitialized() const {
  return true;
}

void ExprValue::InternalSwap(ExprValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExprValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto[2]);
}

// ===================================================================

class ErrorSet::_Internal {
 public:
};

void ErrorSet::clear_errors() {
  errors_.Clear();
}
ErrorSet::ErrorSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  errors_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.ErrorSet)
}
ErrorSet::ErrorSet(const ErrorSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.ErrorSet)
}

inline void ErrorSet::SharedCtor() {
}

ErrorSet::~ErrorSet() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.ErrorSet)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ErrorSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ErrorSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ErrorSet::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.ErrorSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ErrorSet::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.rpc.Status errors = 1 [json_name = "errors"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_errors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ErrorSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.ErrorSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.rpc.Status errors = 1 [json_name = "errors"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_errors_size()); i < n; i++) {
    const auto& repfield = this->_internal_errors(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.ErrorSet)
  return target;
}

size_t ErrorSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.ErrorSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.rpc.Status errors = 1 [json_name = "errors"];
  total_size += 1UL * this->_internal_errors_size();
  for (const auto& msg : this->errors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ErrorSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ErrorSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ErrorSet::GetClassData() const { return &_class_data_; }

void ErrorSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ErrorSet *>(to)->MergeFrom(
      static_cast<const ErrorSet &>(from));
}


void ErrorSet::MergeFrom(const ErrorSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.ErrorSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ErrorSet::CopyFrom(const ErrorSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.ErrorSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorSet::IsInitialized() const {
  return true;
}

void ErrorSet::InternalSwap(ErrorSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  errors_.InternalSwap(&other->errors_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ErrorSet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto[3]);
}

// ===================================================================

class UnknownSet::_Internal {
 public:
};

UnknownSet::UnknownSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  exprs_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.UnknownSet)
}
UnknownSet::UnknownSet(const UnknownSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      exprs_(from.exprs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.UnknownSet)
}

inline void UnknownSet::SharedCtor() {
}

UnknownSet::~UnknownSet() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.UnknownSet)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnknownSet::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.UnknownSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exprs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownSet::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.expr.v1beta1.IdRef exprs = 1 [json_name = "exprs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_exprs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.UnknownSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.expr.v1beta1.IdRef exprs = 1 [json_name = "exprs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_exprs_size()); i < n; i++) {
    const auto& repfield = this->_internal_exprs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.UnknownSet)
  return target;
}

size_t UnknownSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.UnknownSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1beta1.IdRef exprs = 1 [json_name = "exprs"];
  total_size += 1UL * this->_internal_exprs_size();
  for (const auto& msg : this->exprs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UnknownSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownSet::GetClassData() const { return &_class_data_; }

void UnknownSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UnknownSet *>(to)->MergeFrom(
      static_cast<const UnknownSet &>(from));
}


void UnknownSet::MergeFrom(const UnknownSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.UnknownSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  exprs_.MergeFrom(from.exprs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownSet::CopyFrom(const UnknownSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.UnknownSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownSet::IsInitialized() const {
  return true;
}

void UnknownSet::InternalSwap(UnknownSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  exprs_.InternalSwap(&other->exprs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownSet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto[4]);
}

// ===================================================================

class IdRef::_Internal {
 public:
};

IdRef::IdRef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.IdRef)
}
IdRef::IdRef(const IdRef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.IdRef)
}

inline void IdRef::SharedCtor() {
id_ = 0;
}

IdRef::~IdRef() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.IdRef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IdRef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IdRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IdRef::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.IdRef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IdRef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IdRef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.IdRef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.IdRef)
  return target;
}

size_t IdRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.IdRef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IdRef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IdRef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IdRef::GetClassData() const { return &_class_data_; }

void IdRef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IdRef *>(to)->MergeFrom(
      static_cast<const IdRef &>(from));
}


void IdRef::MergeFrom(const IdRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.IdRef)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IdRef::CopyFrom(const IdRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.IdRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdRef::IsInitialized() const {
  return true;
}

void IdRef::InternalSwap(IdRef* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IdRef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2feval_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::EvalState_Result*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::EvalState_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::EvalState_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::EvalState*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::EvalState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::EvalState >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::ExprValue*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::ExprValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::ExprValue >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::ErrorSet*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::ErrorSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::ErrorSet >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::UnknownSet*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::UnknownSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::UnknownSet >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::IdRef*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::IdRef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::IdRef >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
