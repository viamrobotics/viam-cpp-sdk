// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1beta1/expr.proto

#include "google/api/expr/v1beta1/expr.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace expr {
namespace v1beta1 {
PROTOBUF_CONSTEXPR ParsedExpr::ParsedExpr(
    ::_pbi::ConstantInitialized)
  : syntax_version_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , expr_(nullptr)
  , source_info_(nullptr){}
struct ParsedExprDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParsedExprDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParsedExprDefaultTypeInternal() {}
  union {
    ParsedExpr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParsedExprDefaultTypeInternal _ParsedExpr_default_instance_;
PROTOBUF_CONSTEXPR Expr_Ident::Expr_Ident(
    ::_pbi::ConstantInitialized)
  : name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct Expr_IdentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_IdentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_IdentDefaultTypeInternal() {}
  union {
    Expr_Ident _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_IdentDefaultTypeInternal _Expr_Ident_default_instance_;
PROTOBUF_CONSTEXPR Expr_Select::Expr_Select(
    ::_pbi::ConstantInitialized)
  : field_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , operand_(nullptr)
  , test_only_(false){}
struct Expr_SelectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_SelectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_SelectDefaultTypeInternal() {}
  union {
    Expr_Select _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_SelectDefaultTypeInternal _Expr_Select_default_instance_;
PROTOBUF_CONSTEXPR Expr_Call::Expr_Call(
    ::_pbi::ConstantInitialized)
  : args_()
  , function_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , target_(nullptr){}
struct Expr_CallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_CallDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_CallDefaultTypeInternal() {}
  union {
    Expr_Call _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_CallDefaultTypeInternal _Expr_Call_default_instance_;
PROTOBUF_CONSTEXPR Expr_CreateList::Expr_CreateList(
    ::_pbi::ConstantInitialized)
  : elements_(){}
struct Expr_CreateListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_CreateListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_CreateListDefaultTypeInternal() {}
  union {
    Expr_CreateList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_CreateListDefaultTypeInternal _Expr_CreateList_default_instance_;
PROTOBUF_CONSTEXPR Expr_CreateStruct_Entry::Expr_CreateStruct_Entry(
    ::_pbi::ConstantInitialized)
  : value_(nullptr)
  , id_(0)
  , _oneof_case_{}{}
struct Expr_CreateStruct_EntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_CreateStruct_EntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_CreateStruct_EntryDefaultTypeInternal() {}
  union {
    Expr_CreateStruct_Entry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_CreateStruct_EntryDefaultTypeInternal _Expr_CreateStruct_Entry_default_instance_;
PROTOBUF_CONSTEXPR Expr_CreateStruct::Expr_CreateStruct(
    ::_pbi::ConstantInitialized)
  : entries_()
  , type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct Expr_CreateStructDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_CreateStructDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_CreateStructDefaultTypeInternal() {}
  union {
    Expr_CreateStruct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_CreateStructDefaultTypeInternal _Expr_CreateStruct_default_instance_;
PROTOBUF_CONSTEXPR Expr_Comprehension::Expr_Comprehension(
    ::_pbi::ConstantInitialized)
  : iter_var_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , accu_var_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , iter_range_(nullptr)
  , accu_init_(nullptr)
  , loop_condition_(nullptr)
  , loop_step_(nullptr)
  , result_(nullptr){}
struct Expr_ComprehensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_ComprehensionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_ComprehensionDefaultTypeInternal() {}
  union {
    Expr_Comprehension _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_ComprehensionDefaultTypeInternal _Expr_Comprehension_default_instance_;
PROTOBUF_CONSTEXPR Expr::Expr(
    ::_pbi::ConstantInitialized)
  : id_(0)
  , _oneof_case_{}{}
struct ExprDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExprDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExprDefaultTypeInternal() {}
  union {
    Expr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExprDefaultTypeInternal _Expr_default_instance_;
PROTOBUF_CONSTEXPR Literal::Literal(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct LiteralDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LiteralDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LiteralDefaultTypeInternal() {}
  union {
    Literal _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LiteralDefaultTypeInternal _Literal_default_instance_;
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto[10];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::ParsedExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::ParsedExpr, expr_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::ParsedExpr, source_info_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::ParsedExpr, syntax_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Ident, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Ident, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Select, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Select, operand_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Select, field_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Select, test_only_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Call, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Call, target_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Call, function_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Call, args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_CreateList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_CreateList, elements_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_CreateStruct_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_CreateStruct_Entry, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_CreateStruct_Entry, id_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_CreateStruct_Entry, value_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_CreateStruct_Entry, key_kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_CreateStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_CreateStruct, type_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_CreateStruct, entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Comprehension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Comprehension, iter_var_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Comprehension, iter_range_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Comprehension, accu_var_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Comprehension, accu_init_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Comprehension, loop_condition_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Comprehension, loop_step_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr_Comprehension, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr, id_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Expr, expr_kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Literal, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Literal, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::Literal, constant_kind_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::expr::v1beta1::ParsedExpr)},
  { 9, -1, -1, sizeof(::google::api::expr::v1beta1::Expr_Ident)},
  { 16, -1, -1, sizeof(::google::api::expr::v1beta1::Expr_Select)},
  { 25, -1, -1, sizeof(::google::api::expr::v1beta1::Expr_Call)},
  { 34, -1, -1, sizeof(::google::api::expr::v1beta1::Expr_CreateList)},
  { 41, -1, -1, sizeof(::google::api::expr::v1beta1::Expr_CreateStruct_Entry)},
  { 52, -1, -1, sizeof(::google::api::expr::v1beta1::Expr_CreateStruct)},
  { 60, -1, -1, sizeof(::google::api::expr::v1beta1::Expr_Comprehension)},
  { 73, -1, -1, sizeof(::google::api::expr::v1beta1::Expr)},
  { 88, -1, -1, sizeof(::google::api::expr::v1beta1::Literal)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::expr::v1beta1::_ParsedExpr_default_instance_._instance,
  &::google::api::expr::v1beta1::_Expr_Ident_default_instance_._instance,
  &::google::api::expr::v1beta1::_Expr_Select_default_instance_._instance,
  &::google::api::expr::v1beta1::_Expr_Call_default_instance_._instance,
  &::google::api::expr::v1beta1::_Expr_CreateList_default_instance_._instance,
  &::google::api::expr::v1beta1::_Expr_CreateStruct_Entry_default_instance_._instance,
  &::google::api::expr::v1beta1::_Expr_CreateStruct_default_instance_._instance,
  &::google::api::expr::v1beta1::_Expr_Comprehension_default_instance_._instance,
  &::google::api::expr::v1beta1::_Expr_default_instance_._instance,
  &::google::api::expr::v1beta1::_Literal_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"google/api/expr/v1beta1/expr.proto\022\027go"
  "ogle.api.expr.v1beta1\032$google/api/expr/v"
  "1beta1/source.proto\032\034google/protobuf/str"
  "uct.proto\"\254\001\n\nParsedExpr\0221\n\004expr\030\002 \001(\0132\035"
  ".google.api.expr.v1beta1.ExprR\004expr\022D\n\013s"
  "ource_info\030\003 \001(\0132#.google.api.expr.v1bet"
  "a1.SourceInfoR\nsourceInfo\022%\n\016syntax_vers"
  "ion\030\004 \001(\tR\rsyntaxVersion\"\275\014\n\004Expr\022\016\n\002id\030"
  "\002 \001(\005R\002id\022E\n\014literal_expr\030\003 \001(\0132 .google"
  ".api.expr.v1beta1.LiteralH\000R\013literalExpr"
  "\022D\n\nident_expr\030\004 \001(\0132#.google.api.expr.v"
  "1beta1.Expr.IdentH\000R\tidentExpr\022G\n\013select"
  "_expr\030\005 \001(\0132$.google.api.expr.v1beta1.Ex"
  "pr.SelectH\000R\nselectExpr\022A\n\tcall_expr\030\006 \001"
  "(\0132\".google.api.expr.v1beta1.Expr.CallH\000"
  "R\010callExpr\022G\n\tlist_expr\030\007 \001(\0132(.google.a"
  "pi.expr.v1beta1.Expr.CreateListH\000R\010listE"
  "xpr\022M\n\013struct_expr\030\010 \001(\0132*.google.api.ex"
  "pr.v1beta1.Expr.CreateStructH\000R\nstructEx"
  "pr\022\\\n\022comprehension_expr\030\t \001(\0132+.google."
  "api.expr.v1beta1.Expr.ComprehensionH\000R\021c"
  "omprehensionExpr\032\033\n\005Ident\022\022\n\004name\030\001 \001(\tR"
  "\004name\032t\n\006Select\0227\n\007operand\030\001 \001(\0132\035.googl"
  "e.api.expr.v1beta1.ExprR\007operand\022\024\n\005fiel"
  "d\030\002 \001(\tR\005field\022\033\n\ttest_only\030\003 \001(\010R\010testO"
  "nly\032\214\001\n\004Call\0225\n\006target\030\001 \001(\0132\035.google.ap"
  "i.expr.v1beta1.ExprR\006target\022\032\n\010function\030"
  "\002 \001(\tR\010function\0221\n\004args\030\003 \003(\0132\035.google.a"
  "pi.expr.v1beta1.ExprR\004args\032G\n\nCreateList"
  "\0229\n\010elements\030\001 \003(\0132\035.google.api.expr.v1b"
  "eta1.ExprR\010elements\032\242\002\n\014CreateStruct\022\022\n\004"
  "type\030\001 \001(\tR\004type\022J\n\007entries\030\002 \003(\01320.goog"
  "le.api.expr.v1beta1.Expr.CreateStruct.En"
  "tryR\007entries\032\261\001\n\005Entry\022\016\n\002id\030\001 \001(\005R\002id\022\035"
  "\n\tfield_key\030\002 \001(\tH\000R\010fieldKey\0228\n\007map_key"
  "\030\003 \001(\0132\035.google.api.expr.v1beta1.ExprH\000R"
  "\006mapKey\0223\n\005value\030\004 \001(\0132\035.google.api.expr"
  ".v1beta1.ExprR\005valueB\n\n\010key_kind\032\370\002\n\rCom"
  "prehension\022\031\n\010iter_var\030\001 \001(\tR\007iterVar\022<\n"
  "\niter_range\030\002 \001(\0132\035.google.api.expr.v1be"
  "ta1.ExprR\titerRange\022\031\n\010accu_var\030\003 \001(\tR\007a"
  "ccuVar\022:\n\taccu_init\030\004 \001(\0132\035.google.api.e"
  "xpr.v1beta1.ExprR\010accuInit\022D\n\016loop_condi"
  "tion\030\005 \001(\0132\035.google.api.expr.v1beta1.Exp"
  "rR\rloopCondition\022:\n\tloop_step\030\006 \001(\0132\035.go"
  "ogle.api.expr.v1beta1.ExprR\010loopStep\0225\n\006"
  "result\030\007 \001(\0132\035.google.api.expr.v1beta1.E"
  "xprR\006resultB\013\n\texpr_kind\"\255\002\n\007Literal\022;\n\n"
  "null_value\030\001 \001(\0162\032.google.protobuf.NullV"
  "alueH\000R\tnullValue\022\037\n\nbool_value\030\002 \001(\010H\000R"
  "\tboolValue\022!\n\013int64_value\030\003 \001(\003H\000R\nint64"
  "Value\022#\n\014uint64_value\030\004 \001(\004H\000R\013uint64Val"
  "ue\022#\n\014double_value\030\005 \001(\001H\000R\013doubleValue\022"
  "#\n\014string_value\030\006 \001(\tH\000R\013stringValue\022!\n\013"
  "bytes_value\030\007 \001(\014H\000R\nbytesValueB\017\n\rconst"
  "ant_kindBj\n\033com.google.api.expr.v1beta1B"
  "\tExprProtoP\001Z;google.golang.org/genproto"
  "/googleapis/api/expr/v1beta1;expr\370\001\001b\006pr"
  "oto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_deps[2] = {
  &::descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto = {
    false, false, 2324, descriptor_table_protodef_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto,
    "google/api/expr/v1beta1/expr.proto",
    &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_once, descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_deps, 2, 10,
    schemas, file_default_instances, TableStruct_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto::offsets,
    file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto, file_level_enum_descriptors_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto,
    file_level_service_descriptors_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto(&descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto);
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {

// ===================================================================

class ParsedExpr::_Internal {
 public:
  static const ::google::api::expr::v1beta1::Expr& expr(const ParsedExpr* msg);
  static const ::google::api::expr::v1beta1::SourceInfo& source_info(const ParsedExpr* msg);
};

const ::google::api::expr::v1beta1::Expr&
ParsedExpr::_Internal::expr(const ParsedExpr* msg) {
  return *msg->expr_;
}
const ::google::api::expr::v1beta1::SourceInfo&
ParsedExpr::_Internal::source_info(const ParsedExpr* msg) {
  return *msg->source_info_;
}
void ParsedExpr::clear_source_info() {
  if (GetArenaForAllocation() == nullptr && source_info_ != nullptr) {
    delete source_info_;
  }
  source_info_ = nullptr;
}
ParsedExpr::ParsedExpr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.ParsedExpr)
}
ParsedExpr::ParsedExpr(const ParsedExpr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  syntax_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    syntax_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_syntax_version().empty()) {
    syntax_version_.Set(from._internal_syntax_version(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_expr()) {
    expr_ = new ::google::api::expr::v1beta1::Expr(*from.expr_);
  } else {
    expr_ = nullptr;
  }
  if (from._internal_has_source_info()) {
    source_info_ = new ::google::api::expr::v1beta1::SourceInfo(*from.source_info_);
  } else {
    source_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.ParsedExpr)
}

inline void ParsedExpr::SharedCtor() {
syntax_version_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  syntax_version_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&expr_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&source_info_) -
    reinterpret_cast<char*>(&expr_)) + sizeof(source_info_));
}

ParsedExpr::~ParsedExpr() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.ParsedExpr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ParsedExpr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  syntax_version_.Destroy();
  if (this != internal_default_instance()) delete expr_;
  if (this != internal_default_instance()) delete source_info_;
}

void ParsedExpr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ParsedExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.ParsedExpr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  syntax_version_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && expr_ != nullptr) {
    delete expr_;
  }
  expr_ = nullptr;
  if (GetArenaForAllocation() == nullptr && source_info_ != nullptr) {
    delete source_info_;
  }
  source_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParsedExpr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.v1beta1.Expr expr = 2 [json_name = "expr"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.SourceInfo source_info = 3 [json_name = "sourceInfo"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_source_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string syntax_version = 4 [json_name = "syntaxVersion"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_syntax_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1beta1.ParsedExpr.syntax_version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ParsedExpr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.ParsedExpr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1beta1.Expr expr = 2 [json_name = "expr"];
  if (this->_internal_has_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::expr(this),
        _Internal::expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1beta1.SourceInfo source_info = 3 [json_name = "sourceInfo"];
  if (this->_internal_has_source_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::source_info(this),
        _Internal::source_info(this).GetCachedSize(), target, stream);
  }

  // string syntax_version = 4 [json_name = "syntaxVersion"];
  if (!this->_internal_syntax_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_syntax_version().data(), static_cast<int>(this->_internal_syntax_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.ParsedExpr.syntax_version");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_syntax_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.ParsedExpr)
  return target;
}

size_t ParsedExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.ParsedExpr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string syntax_version = 4 [json_name = "syntaxVersion"];
  if (!this->_internal_syntax_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_syntax_version());
  }

  // .google.api.expr.v1beta1.Expr expr = 2 [json_name = "expr"];
  if (this->_internal_has_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expr_);
  }

  // .google.api.expr.v1beta1.SourceInfo source_info = 3 [json_name = "sourceInfo"];
  if (this->_internal_has_source_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ParsedExpr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ParsedExpr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ParsedExpr::GetClassData() const { return &_class_data_; }

void ParsedExpr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ParsedExpr *>(to)->MergeFrom(
      static_cast<const ParsedExpr &>(from));
}


void ParsedExpr::MergeFrom(const ParsedExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.ParsedExpr)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_syntax_version().empty()) {
    _internal_set_syntax_version(from._internal_syntax_version());
  }
  if (from._internal_has_expr()) {
    _internal_mutable_expr()->::google::api::expr::v1beta1::Expr::MergeFrom(from._internal_expr());
  }
  if (from._internal_has_source_info()) {
    _internal_mutable_source_info()->::google::api::expr::v1beta1::SourceInfo::MergeFrom(from._internal_source_info());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ParsedExpr::CopyFrom(const ParsedExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.ParsedExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParsedExpr::IsInitialized() const {
  return true;
}

void ParsedExpr::InternalSwap(ParsedExpr* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &syntax_version_, lhs_arena,
      &other->syntax_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParsedExpr, source_info_)
      + sizeof(ParsedExpr::source_info_)
      - PROTOBUF_FIELD_OFFSET(ParsedExpr, expr_)>(
          reinterpret_cast<char*>(&expr_),
          reinterpret_cast<char*>(&other->expr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ParsedExpr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto[0]);
}

// ===================================================================

class Expr_Ident::_Internal {
 public:
};

Expr_Ident::Expr_Ident(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.Expr.Ident)
}
Expr_Ident::Expr_Ident(const Expr_Ident& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.Expr.Ident)
}

inline void Expr_Ident::SharedCtor() {
name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Expr_Ident::~Expr_Ident() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.Expr.Ident)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_Ident::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.Destroy();
}

void Expr_Ident::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Expr_Ident::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.Expr.Ident)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_Ident::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1beta1.Expr.Ident.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_Ident::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.Expr.Ident)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.Expr.Ident.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.Expr.Ident)
  return target;
}

size_t Expr_Ident::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.Expr.Ident)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_Ident::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Expr_Ident::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_Ident::GetClassData() const { return &_class_data_; }

void Expr_Ident::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Expr_Ident *>(to)->MergeFrom(
      static_cast<const Expr_Ident &>(from));
}


void Expr_Ident::MergeFrom(const Expr_Ident& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.Expr.Ident)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_Ident::CopyFrom(const Expr_Ident& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.Expr.Ident)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_Ident::IsInitialized() const {
  return true;
}

void Expr_Ident::InternalSwap(Expr_Ident* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_Ident::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto[1]);
}

// ===================================================================

class Expr_Select::_Internal {
 public:
  static const ::google::api::expr::v1beta1::Expr& operand(const Expr_Select* msg);
};

const ::google::api::expr::v1beta1::Expr&
Expr_Select::_Internal::operand(const Expr_Select* msg) {
  return *msg->operand_;
}
Expr_Select::Expr_Select(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.Expr.Select)
}
Expr_Select::Expr_Select(const Expr_Select& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  field_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    field_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_field().empty()) {
    field_.Set(from._internal_field(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_operand()) {
    operand_ = new ::google::api::expr::v1beta1::Expr(*from.operand_);
  } else {
    operand_ = nullptr;
  }
  test_only_ = from.test_only_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.Expr.Select)
}

inline void Expr_Select::SharedCtor() {
field_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  field_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&operand_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&test_only_) -
    reinterpret_cast<char*>(&operand_)) + sizeof(test_only_));
}

Expr_Select::~Expr_Select() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.Expr.Select)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_Select::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  field_.Destroy();
  if (this != internal_default_instance()) delete operand_;
}

void Expr_Select::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Expr_Select::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.Expr.Select)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && operand_ != nullptr) {
    delete operand_;
  }
  operand_ = nullptr;
  test_only_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_Select::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.v1beta1.Expr operand = 1 [json_name = "operand"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_operand(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string field = 2 [json_name = "field"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_field();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1beta1.Expr.Select.field"));
        } else
          goto handle_unusual;
        continue;
      // bool test_only = 3 [json_name = "testOnly"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          test_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_Select::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.Expr.Select)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1beta1.Expr operand = 1 [json_name = "operand"];
  if (this->_internal_has_operand()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::operand(this),
        _Internal::operand(this).GetCachedSize(), target, stream);
  }

  // string field = 2 [json_name = "field"];
  if (!this->_internal_field().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field().data(), static_cast<int>(this->_internal_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.Expr.Select.field");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_field(), target);
  }

  // bool test_only = 3 [json_name = "testOnly"];
  if (this->_internal_test_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_test_only(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.Expr.Select)
  return target;
}

size_t Expr_Select::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.Expr.Select)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field = 2 [json_name = "field"];
  if (!this->_internal_field().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field());
  }

  // .google.api.expr.v1beta1.Expr operand = 1 [json_name = "operand"];
  if (this->_internal_has_operand()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *operand_);
  }

  // bool test_only = 3 [json_name = "testOnly"];
  if (this->_internal_test_only() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_Select::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Expr_Select::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_Select::GetClassData() const { return &_class_data_; }

void Expr_Select::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Expr_Select *>(to)->MergeFrom(
      static_cast<const Expr_Select &>(from));
}


void Expr_Select::MergeFrom(const Expr_Select& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.Expr.Select)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field().empty()) {
    _internal_set_field(from._internal_field());
  }
  if (from._internal_has_operand()) {
    _internal_mutable_operand()->::google::api::expr::v1beta1::Expr::MergeFrom(from._internal_operand());
  }
  if (from._internal_test_only() != 0) {
    _internal_set_test_only(from._internal_test_only());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_Select::CopyFrom(const Expr_Select& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.Expr.Select)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_Select::IsInitialized() const {
  return true;
}

void Expr_Select::InternalSwap(Expr_Select* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &field_, lhs_arena,
      &other->field_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Expr_Select, test_only_)
      + sizeof(Expr_Select::test_only_)
      - PROTOBUF_FIELD_OFFSET(Expr_Select, operand_)>(
          reinterpret_cast<char*>(&operand_),
          reinterpret_cast<char*>(&other->operand_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_Select::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto[2]);
}

// ===================================================================

class Expr_Call::_Internal {
 public:
  static const ::google::api::expr::v1beta1::Expr& target(const Expr_Call* msg);
};

const ::google::api::expr::v1beta1::Expr&
Expr_Call::_Internal::target(const Expr_Call* msg) {
  return *msg->target_;
}
Expr_Call::Expr_Call(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  args_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.Expr.Call)
}
Expr_Call::Expr_Call(const Expr_Call& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      args_(from.args_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  function_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    function_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_function().empty()) {
    function_.Set(from._internal_function(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_target()) {
    target_ = new ::google::api::expr::v1beta1::Expr(*from.target_);
  } else {
    target_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.Expr.Call)
}

inline void Expr_Call::SharedCtor() {
function_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  function_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
target_ = nullptr;
}

Expr_Call::~Expr_Call() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.Expr.Call)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_Call::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  function_.Destroy();
  if (this != internal_default_instance()) delete target_;
}

void Expr_Call::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Expr_Call::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.Expr.Call)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  function_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && target_ != nullptr) {
    delete target_;
  }
  target_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_Call::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.v1beta1.Expr target = 1 [json_name = "target"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_target(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string function = 2 [json_name = "function"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_function();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1beta1.Expr.Call.function"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.expr.v1beta1.Expr args = 3 [json_name = "args"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_args(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_Call::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.Expr.Call)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1beta1.Expr target = 1 [json_name = "target"];
  if (this->_internal_has_target()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::target(this),
        _Internal::target(this).GetCachedSize(), target, stream);
  }

  // string function = 2 [json_name = "function"];
  if (!this->_internal_function().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_function().data(), static_cast<int>(this->_internal_function().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.Expr.Call.function");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_function(), target);
  }

  // repeated .google.api.expr.v1beta1.Expr args = 3 [json_name = "args"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_args_size()); i < n; i++) {
    const auto& repfield = this->_internal_args(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.Expr.Call)
  return target;
}

size_t Expr_Call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.Expr.Call)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1beta1.Expr args = 3 [json_name = "args"];
  total_size += 1UL * this->_internal_args_size();
  for (const auto& msg : this->args_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string function = 2 [json_name = "function"];
  if (!this->_internal_function().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_function());
  }

  // .google.api.expr.v1beta1.Expr target = 1 [json_name = "target"];
  if (this->_internal_has_target()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_Call::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Expr_Call::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_Call::GetClassData() const { return &_class_data_; }

void Expr_Call::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Expr_Call *>(to)->MergeFrom(
      static_cast<const Expr_Call &>(from));
}


void Expr_Call::MergeFrom(const Expr_Call& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.Expr.Call)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  if (!from._internal_function().empty()) {
    _internal_set_function(from._internal_function());
  }
  if (from._internal_has_target()) {
    _internal_mutable_target()->::google::api::expr::v1beta1::Expr::MergeFrom(from._internal_target());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_Call::CopyFrom(const Expr_Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.Expr.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_Call::IsInitialized() const {
  return true;
}

void Expr_Call::InternalSwap(Expr_Call* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  args_.InternalSwap(&other->args_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &function_, lhs_arena,
      &other->function_, rhs_arena
  );
  swap(target_, other->target_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_Call::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto[3]);
}

// ===================================================================

class Expr_CreateList::_Internal {
 public:
};

Expr_CreateList::Expr_CreateList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  elements_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.Expr.CreateList)
}
Expr_CreateList::Expr_CreateList(const Expr_CreateList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      elements_(from.elements_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.Expr.CreateList)
}

inline void Expr_CreateList::SharedCtor() {
}

Expr_CreateList::~Expr_CreateList() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.Expr.CreateList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_CreateList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Expr_CreateList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Expr_CreateList::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.Expr.CreateList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elements_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_CreateList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.expr.v1beta1.Expr elements = 1 [json_name = "elements"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elements(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_CreateList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.Expr.CreateList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.expr.v1beta1.Expr elements = 1 [json_name = "elements"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elements_size()); i < n; i++) {
    const auto& repfield = this->_internal_elements(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.Expr.CreateList)
  return target;
}

size_t Expr_CreateList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.Expr.CreateList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1beta1.Expr elements = 1 [json_name = "elements"];
  total_size += 1UL * this->_internal_elements_size();
  for (const auto& msg : this->elements_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_CreateList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Expr_CreateList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_CreateList::GetClassData() const { return &_class_data_; }

void Expr_CreateList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Expr_CreateList *>(to)->MergeFrom(
      static_cast<const Expr_CreateList &>(from));
}


void Expr_CreateList::MergeFrom(const Expr_CreateList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.Expr.CreateList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  elements_.MergeFrom(from.elements_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_CreateList::CopyFrom(const Expr_CreateList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.Expr.CreateList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_CreateList::IsInitialized() const {
  return true;
}

void Expr_CreateList::InternalSwap(Expr_CreateList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  elements_.InternalSwap(&other->elements_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_CreateList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto[4]);
}

// ===================================================================

class Expr_CreateStruct_Entry::_Internal {
 public:
  static const ::google::api::expr::v1beta1::Expr& map_key(const Expr_CreateStruct_Entry* msg);
  static const ::google::api::expr::v1beta1::Expr& value(const Expr_CreateStruct_Entry* msg);
};

const ::google::api::expr::v1beta1::Expr&
Expr_CreateStruct_Entry::_Internal::map_key(const Expr_CreateStruct_Entry* msg) {
  return *msg->key_kind_.map_key_;
}
const ::google::api::expr::v1beta1::Expr&
Expr_CreateStruct_Entry::_Internal::value(const Expr_CreateStruct_Entry* msg) {
  return *msg->value_;
}
void Expr_CreateStruct_Entry::set_allocated_map_key(::google::api::expr::v1beta1::Expr* map_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_key_kind();
  if (map_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(map_key);
    if (message_arena != submessage_arena) {
      map_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, map_key, submessage_arena);
    }
    set_has_map_key();
    key_kind_.map_key_ = map_key;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Expr.CreateStruct.Entry.map_key)
}
Expr_CreateStruct_Entry::Expr_CreateStruct_Entry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.Expr.CreateStruct.Entry)
}
Expr_CreateStruct_Entry::Expr_CreateStruct_Entry(const Expr_CreateStruct_Entry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::google::api::expr::v1beta1::Expr(*from.value_);
  } else {
    value_ = nullptr;
  }
  id_ = from.id_;
  clear_has_key_kind();
  switch (from.key_kind_case()) {
    case kFieldKey: {
      _internal_set_field_key(from._internal_field_key());
      break;
    }
    case kMapKey: {
      _internal_mutable_map_key()->::google::api::expr::v1beta1::Expr::MergeFrom(from._internal_map_key());
      break;
    }
    case KEY_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.Expr.CreateStruct.Entry)
}

inline void Expr_CreateStruct_Entry::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&value_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&value_)) + sizeof(id_));
clear_has_key_kind();
}

Expr_CreateStruct_Entry::~Expr_CreateStruct_Entry() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.Expr.CreateStruct.Entry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_CreateStruct_Entry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete value_;
  if (has_key_kind()) {
    clear_key_kind();
  }
}

void Expr_CreateStruct_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Expr_CreateStruct_Entry::clear_key_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1beta1.Expr.CreateStruct.Entry)
  switch (key_kind_case()) {
    case kFieldKey: {
      key_kind_.field_key_.Destroy();
      break;
    }
    case kMapKey: {
      if (GetArenaForAllocation() == nullptr) {
        delete key_kind_.map_key_;
      }
      break;
    }
    case KEY_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KEY_KIND_NOT_SET;
}


void Expr_CreateStruct_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.Expr.CreateStruct.Entry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  id_ = 0;
  clear_key_kind();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_CreateStruct_Entry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string field_key = 2 [json_name = "fieldKey"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_field_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1beta1.Expr.CreateStruct.Entry.field_key"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Expr map_key = 3 [json_name = "mapKey"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_map_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Expr value = 4 [json_name = "value"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_CreateStruct_Entry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.Expr.CreateStruct.Entry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // string field_key = 2 [json_name = "fieldKey"];
  if (_internal_has_field_key()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field_key().data(), static_cast<int>(this->_internal_field_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.Expr.CreateStruct.Entry.field_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_field_key(), target);
  }

  // .google.api.expr.v1beta1.Expr map_key = 3 [json_name = "mapKey"];
  if (_internal_has_map_key()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::map_key(this),
        _Internal::map_key(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1beta1.Expr value = 4 [json_name = "value"];
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.Expr.CreateStruct.Entry)
  return target;
}

size_t Expr_CreateStruct_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.Expr.CreateStruct.Entry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.expr.v1beta1.Expr value = 4 [json_name = "value"];
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  switch (key_kind_case()) {
    // string field_key = 2 [json_name = "fieldKey"];
    case kFieldKey: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_field_key());
      break;
    }
    // .google.api.expr.v1beta1.Expr map_key = 3 [json_name = "mapKey"];
    case kMapKey: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *key_kind_.map_key_);
      break;
    }
    case KEY_KIND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_CreateStruct_Entry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Expr_CreateStruct_Entry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_CreateStruct_Entry::GetClassData() const { return &_class_data_; }

void Expr_CreateStruct_Entry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Expr_CreateStruct_Entry *>(to)->MergeFrom(
      static_cast<const Expr_CreateStruct_Entry &>(from));
}


void Expr_CreateStruct_Entry::MergeFrom(const Expr_CreateStruct_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.Expr.CreateStruct.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_value()) {
    _internal_mutable_value()->::google::api::expr::v1beta1::Expr::MergeFrom(from._internal_value());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  switch (from.key_kind_case()) {
    case kFieldKey: {
      _internal_set_field_key(from._internal_field_key());
      break;
    }
    case kMapKey: {
      _internal_mutable_map_key()->::google::api::expr::v1beta1::Expr::MergeFrom(from._internal_map_key());
      break;
    }
    case KEY_KIND_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_CreateStruct_Entry::CopyFrom(const Expr_CreateStruct_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.Expr.CreateStruct.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_CreateStruct_Entry::IsInitialized() const {
  return true;
}

void Expr_CreateStruct_Entry::InternalSwap(Expr_CreateStruct_Entry* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Expr_CreateStruct_Entry, id_)
      + sizeof(Expr_CreateStruct_Entry::id_)
      - PROTOBUF_FIELD_OFFSET(Expr_CreateStruct_Entry, value_)>(
          reinterpret_cast<char*>(&value_),
          reinterpret_cast<char*>(&other->value_));
  swap(key_kind_, other->key_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_CreateStruct_Entry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto[5]);
}

// ===================================================================

class Expr_CreateStruct::_Internal {
 public:
};

Expr_CreateStruct::Expr_CreateStruct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entries_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.Expr.CreateStruct)
}
Expr_CreateStruct::Expr_CreateStruct(const Expr_CreateStruct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    type_.Set(from._internal_type(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.Expr.CreateStruct)
}

inline void Expr_CreateStruct::SharedCtor() {
type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Expr_CreateStruct::~Expr_CreateStruct() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.Expr.CreateStruct)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_CreateStruct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  type_.Destroy();
}

void Expr_CreateStruct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Expr_CreateStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.Expr.CreateStruct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_CreateStruct::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string type = 1 [json_name = "type"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1beta1.Expr.CreateStruct.type"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.expr.v1beta1.Expr.CreateStruct.Entry entries = 2 [json_name = "entries"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_CreateStruct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.Expr.CreateStruct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1 [json_name = "type"];
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.Expr.CreateStruct.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // repeated .google.api.expr.v1beta1.Expr.CreateStruct.Entry entries = 2 [json_name = "entries"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_entries(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.Expr.CreateStruct)
  return target;
}

size_t Expr_CreateStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.Expr.CreateStruct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1beta1.Expr.CreateStruct.Entry entries = 2 [json_name = "entries"];
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string type = 1 [json_name = "type"];
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_CreateStruct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Expr_CreateStruct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_CreateStruct::GetClassData() const { return &_class_data_; }

void Expr_CreateStruct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Expr_CreateStruct *>(to)->MergeFrom(
      static_cast<const Expr_CreateStruct &>(from));
}


void Expr_CreateStruct::MergeFrom(const Expr_CreateStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.Expr.CreateStruct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (!from._internal_type().empty()) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_CreateStruct::CopyFrom(const Expr_CreateStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.Expr.CreateStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_CreateStruct::IsInitialized() const {
  return true;
}

void Expr_CreateStruct::InternalSwap(Expr_CreateStruct* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &type_, lhs_arena,
      &other->type_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_CreateStruct::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto[6]);
}

// ===================================================================

class Expr_Comprehension::_Internal {
 public:
  static const ::google::api::expr::v1beta1::Expr& iter_range(const Expr_Comprehension* msg);
  static const ::google::api::expr::v1beta1::Expr& accu_init(const Expr_Comprehension* msg);
  static const ::google::api::expr::v1beta1::Expr& loop_condition(const Expr_Comprehension* msg);
  static const ::google::api::expr::v1beta1::Expr& loop_step(const Expr_Comprehension* msg);
  static const ::google::api::expr::v1beta1::Expr& result(const Expr_Comprehension* msg);
};

const ::google::api::expr::v1beta1::Expr&
Expr_Comprehension::_Internal::iter_range(const Expr_Comprehension* msg) {
  return *msg->iter_range_;
}
const ::google::api::expr::v1beta1::Expr&
Expr_Comprehension::_Internal::accu_init(const Expr_Comprehension* msg) {
  return *msg->accu_init_;
}
const ::google::api::expr::v1beta1::Expr&
Expr_Comprehension::_Internal::loop_condition(const Expr_Comprehension* msg) {
  return *msg->loop_condition_;
}
const ::google::api::expr::v1beta1::Expr&
Expr_Comprehension::_Internal::loop_step(const Expr_Comprehension* msg) {
  return *msg->loop_step_;
}
const ::google::api::expr::v1beta1::Expr&
Expr_Comprehension::_Internal::result(const Expr_Comprehension* msg) {
  return *msg->result_;
}
Expr_Comprehension::Expr_Comprehension(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.Expr.Comprehension)
}
Expr_Comprehension::Expr_Comprehension(const Expr_Comprehension& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  iter_var_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    iter_var_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_iter_var().empty()) {
    iter_var_.Set(from._internal_iter_var(), 
      GetArenaForAllocation());
  }
  accu_var_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    accu_var_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_accu_var().empty()) {
    accu_var_.Set(from._internal_accu_var(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_iter_range()) {
    iter_range_ = new ::google::api::expr::v1beta1::Expr(*from.iter_range_);
  } else {
    iter_range_ = nullptr;
  }
  if (from._internal_has_accu_init()) {
    accu_init_ = new ::google::api::expr::v1beta1::Expr(*from.accu_init_);
  } else {
    accu_init_ = nullptr;
  }
  if (from._internal_has_loop_condition()) {
    loop_condition_ = new ::google::api::expr::v1beta1::Expr(*from.loop_condition_);
  } else {
    loop_condition_ = nullptr;
  }
  if (from._internal_has_loop_step()) {
    loop_step_ = new ::google::api::expr::v1beta1::Expr(*from.loop_step_);
  } else {
    loop_step_ = nullptr;
  }
  if (from._internal_has_result()) {
    result_ = new ::google::api::expr::v1beta1::Expr(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.Expr.Comprehension)
}

inline void Expr_Comprehension::SharedCtor() {
iter_var_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  iter_var_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
accu_var_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  accu_var_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iter_range_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&iter_range_)) + sizeof(result_));
}

Expr_Comprehension::~Expr_Comprehension() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.Expr.Comprehension)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_Comprehension::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  iter_var_.Destroy();
  accu_var_.Destroy();
  if (this != internal_default_instance()) delete iter_range_;
  if (this != internal_default_instance()) delete accu_init_;
  if (this != internal_default_instance()) delete loop_condition_;
  if (this != internal_default_instance()) delete loop_step_;
  if (this != internal_default_instance()) delete result_;
}

void Expr_Comprehension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Expr_Comprehension::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.Expr.Comprehension)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  iter_var_.ClearToEmpty();
  accu_var_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && iter_range_ != nullptr) {
    delete iter_range_;
  }
  iter_range_ = nullptr;
  if (GetArenaForAllocation() == nullptr && accu_init_ != nullptr) {
    delete accu_init_;
  }
  accu_init_ = nullptr;
  if (GetArenaForAllocation() == nullptr && loop_condition_ != nullptr) {
    delete loop_condition_;
  }
  loop_condition_ = nullptr;
  if (GetArenaForAllocation() == nullptr && loop_step_ != nullptr) {
    delete loop_step_;
  }
  loop_step_ = nullptr;
  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_Comprehension::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string iter_var = 1 [json_name = "iterVar"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_iter_var();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1beta1.Expr.Comprehension.iter_var"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Expr iter_range = 2 [json_name = "iterRange"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_iter_range(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string accu_var = 3 [json_name = "accuVar"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_accu_var();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1beta1.Expr.Comprehension.accu_var"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Expr accu_init = 4 [json_name = "accuInit"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_accu_init(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Expr loop_condition = 5 [json_name = "loopCondition"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_loop_condition(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Expr loop_step = 6 [json_name = "loopStep"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_loop_step(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Expr result = 7 [json_name = "result"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_Comprehension::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.Expr.Comprehension)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string iter_var = 1 [json_name = "iterVar"];
  if (!this->_internal_iter_var().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_iter_var().data(), static_cast<int>(this->_internal_iter_var().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.Expr.Comprehension.iter_var");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_iter_var(), target);
  }

  // .google.api.expr.v1beta1.Expr iter_range = 2 [json_name = "iterRange"];
  if (this->_internal_has_iter_range()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::iter_range(this),
        _Internal::iter_range(this).GetCachedSize(), target, stream);
  }

  // string accu_var = 3 [json_name = "accuVar"];
  if (!this->_internal_accu_var().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accu_var().data(), static_cast<int>(this->_internal_accu_var().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.Expr.Comprehension.accu_var");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_accu_var(), target);
  }

  // .google.api.expr.v1beta1.Expr accu_init = 4 [json_name = "accuInit"];
  if (this->_internal_has_accu_init()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::accu_init(this),
        _Internal::accu_init(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1beta1.Expr loop_condition = 5 [json_name = "loopCondition"];
  if (this->_internal_has_loop_condition()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::loop_condition(this),
        _Internal::loop_condition(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1beta1.Expr loop_step = 6 [json_name = "loopStep"];
  if (this->_internal_has_loop_step()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::loop_step(this),
        _Internal::loop_step(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1beta1.Expr result = 7 [json_name = "result"];
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.Expr.Comprehension)
  return target;
}

size_t Expr_Comprehension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.Expr.Comprehension)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string iter_var = 1 [json_name = "iterVar"];
  if (!this->_internal_iter_var().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_iter_var());
  }

  // string accu_var = 3 [json_name = "accuVar"];
  if (!this->_internal_accu_var().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accu_var());
  }

  // .google.api.expr.v1beta1.Expr iter_range = 2 [json_name = "iterRange"];
  if (this->_internal_has_iter_range()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *iter_range_);
  }

  // .google.api.expr.v1beta1.Expr accu_init = 4 [json_name = "accuInit"];
  if (this->_internal_has_accu_init()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *accu_init_);
  }

  // .google.api.expr.v1beta1.Expr loop_condition = 5 [json_name = "loopCondition"];
  if (this->_internal_has_loop_condition()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *loop_condition_);
  }

  // .google.api.expr.v1beta1.Expr loop_step = 6 [json_name = "loopStep"];
  if (this->_internal_has_loop_step()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *loop_step_);
  }

  // .google.api.expr.v1beta1.Expr result = 7 [json_name = "result"];
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_Comprehension::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Expr_Comprehension::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_Comprehension::GetClassData() const { return &_class_data_; }

void Expr_Comprehension::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Expr_Comprehension *>(to)->MergeFrom(
      static_cast<const Expr_Comprehension &>(from));
}


void Expr_Comprehension::MergeFrom(const Expr_Comprehension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.Expr.Comprehension)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_iter_var().empty()) {
    _internal_set_iter_var(from._internal_iter_var());
  }
  if (!from._internal_accu_var().empty()) {
    _internal_set_accu_var(from._internal_accu_var());
  }
  if (from._internal_has_iter_range()) {
    _internal_mutable_iter_range()->::google::api::expr::v1beta1::Expr::MergeFrom(from._internal_iter_range());
  }
  if (from._internal_has_accu_init()) {
    _internal_mutable_accu_init()->::google::api::expr::v1beta1::Expr::MergeFrom(from._internal_accu_init());
  }
  if (from._internal_has_loop_condition()) {
    _internal_mutable_loop_condition()->::google::api::expr::v1beta1::Expr::MergeFrom(from._internal_loop_condition());
  }
  if (from._internal_has_loop_step()) {
    _internal_mutable_loop_step()->::google::api::expr::v1beta1::Expr::MergeFrom(from._internal_loop_step());
  }
  if (from._internal_has_result()) {
    _internal_mutable_result()->::google::api::expr::v1beta1::Expr::MergeFrom(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_Comprehension::CopyFrom(const Expr_Comprehension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.Expr.Comprehension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_Comprehension::IsInitialized() const {
  return true;
}

void Expr_Comprehension::InternalSwap(Expr_Comprehension* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &iter_var_, lhs_arena,
      &other->iter_var_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &accu_var_, lhs_arena,
      &other->accu_var_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Expr_Comprehension, result_)
      + sizeof(Expr_Comprehension::result_)
      - PROTOBUF_FIELD_OFFSET(Expr_Comprehension, iter_range_)>(
          reinterpret_cast<char*>(&iter_range_),
          reinterpret_cast<char*>(&other->iter_range_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_Comprehension::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto[7]);
}

// ===================================================================

class Expr::_Internal {
 public:
  static const ::google::api::expr::v1beta1::Literal& literal_expr(const Expr* msg);
  static const ::google::api::expr::v1beta1::Expr_Ident& ident_expr(const Expr* msg);
  static const ::google::api::expr::v1beta1::Expr_Select& select_expr(const Expr* msg);
  static const ::google::api::expr::v1beta1::Expr_Call& call_expr(const Expr* msg);
  static const ::google::api::expr::v1beta1::Expr_CreateList& list_expr(const Expr* msg);
  static const ::google::api::expr::v1beta1::Expr_CreateStruct& struct_expr(const Expr* msg);
  static const ::google::api::expr::v1beta1::Expr_Comprehension& comprehension_expr(const Expr* msg);
};

const ::google::api::expr::v1beta1::Literal&
Expr::_Internal::literal_expr(const Expr* msg) {
  return *msg->expr_kind_.literal_expr_;
}
const ::google::api::expr::v1beta1::Expr_Ident&
Expr::_Internal::ident_expr(const Expr* msg) {
  return *msg->expr_kind_.ident_expr_;
}
const ::google::api::expr::v1beta1::Expr_Select&
Expr::_Internal::select_expr(const Expr* msg) {
  return *msg->expr_kind_.select_expr_;
}
const ::google::api::expr::v1beta1::Expr_Call&
Expr::_Internal::call_expr(const Expr* msg) {
  return *msg->expr_kind_.call_expr_;
}
const ::google::api::expr::v1beta1::Expr_CreateList&
Expr::_Internal::list_expr(const Expr* msg) {
  return *msg->expr_kind_.list_expr_;
}
const ::google::api::expr::v1beta1::Expr_CreateStruct&
Expr::_Internal::struct_expr(const Expr* msg) {
  return *msg->expr_kind_.struct_expr_;
}
const ::google::api::expr::v1beta1::Expr_Comprehension&
Expr::_Internal::comprehension_expr(const Expr* msg) {
  return *msg->expr_kind_.comprehension_expr_;
}
void Expr::set_allocated_literal_expr(::google::api::expr::v1beta1::Literal* literal_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (literal_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(literal_expr);
    if (message_arena != submessage_arena) {
      literal_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, literal_expr, submessage_arena);
    }
    set_has_literal_expr();
    expr_kind_.literal_expr_ = literal_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Expr.literal_expr)
}
void Expr::set_allocated_ident_expr(::google::api::expr::v1beta1::Expr_Ident* ident_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (ident_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ident_expr);
    if (message_arena != submessage_arena) {
      ident_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ident_expr, submessage_arena);
    }
    set_has_ident_expr();
    expr_kind_.ident_expr_ = ident_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Expr.ident_expr)
}
void Expr::set_allocated_select_expr(::google::api::expr::v1beta1::Expr_Select* select_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (select_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_expr);
    if (message_arena != submessage_arena) {
      select_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_expr, submessage_arena);
    }
    set_has_select_expr();
    expr_kind_.select_expr_ = select_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Expr.select_expr)
}
void Expr::set_allocated_call_expr(::google::api::expr::v1beta1::Expr_Call* call_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (call_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(call_expr);
    if (message_arena != submessage_arena) {
      call_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, call_expr, submessage_arena);
    }
    set_has_call_expr();
    expr_kind_.call_expr_ = call_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Expr.call_expr)
}
void Expr::set_allocated_list_expr(::google::api::expr::v1beta1::Expr_CreateList* list_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (list_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(list_expr);
    if (message_arena != submessage_arena) {
      list_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_expr, submessage_arena);
    }
    set_has_list_expr();
    expr_kind_.list_expr_ = list_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Expr.list_expr)
}
void Expr::set_allocated_struct_expr(::google::api::expr::v1beta1::Expr_CreateStruct* struct_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (struct_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(struct_expr);
    if (message_arena != submessage_arena) {
      struct_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, struct_expr, submessage_arena);
    }
    set_has_struct_expr();
    expr_kind_.struct_expr_ = struct_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Expr.struct_expr)
}
void Expr::set_allocated_comprehension_expr(::google::api::expr::v1beta1::Expr_Comprehension* comprehension_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (comprehension_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(comprehension_expr);
    if (message_arena != submessage_arena) {
      comprehension_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, comprehension_expr, submessage_arena);
    }
    set_has_comprehension_expr();
    expr_kind_.comprehension_expr_ = comprehension_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Expr.comprehension_expr)
}
Expr::Expr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.Expr)
}
Expr::Expr(const Expr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  clear_has_expr_kind();
  switch (from.expr_kind_case()) {
    case kLiteralExpr: {
      _internal_mutable_literal_expr()->::google::api::expr::v1beta1::Literal::MergeFrom(from._internal_literal_expr());
      break;
    }
    case kIdentExpr: {
      _internal_mutable_ident_expr()->::google::api::expr::v1beta1::Expr_Ident::MergeFrom(from._internal_ident_expr());
      break;
    }
    case kSelectExpr: {
      _internal_mutable_select_expr()->::google::api::expr::v1beta1::Expr_Select::MergeFrom(from._internal_select_expr());
      break;
    }
    case kCallExpr: {
      _internal_mutable_call_expr()->::google::api::expr::v1beta1::Expr_Call::MergeFrom(from._internal_call_expr());
      break;
    }
    case kListExpr: {
      _internal_mutable_list_expr()->::google::api::expr::v1beta1::Expr_CreateList::MergeFrom(from._internal_list_expr());
      break;
    }
    case kStructExpr: {
      _internal_mutable_struct_expr()->::google::api::expr::v1beta1::Expr_CreateStruct::MergeFrom(from._internal_struct_expr());
      break;
    }
    case kComprehensionExpr: {
      _internal_mutable_comprehension_expr()->::google::api::expr::v1beta1::Expr_Comprehension::MergeFrom(from._internal_comprehension_expr());
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.Expr)
}

inline void Expr::SharedCtor() {
id_ = 0;
clear_has_expr_kind();
}

Expr::~Expr() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.Expr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_expr_kind()) {
    clear_expr_kind();
  }
}

void Expr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Expr::clear_expr_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1beta1.Expr)
  switch (expr_kind_case()) {
    case kLiteralExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete expr_kind_.literal_expr_;
      }
      break;
    }
    case kIdentExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete expr_kind_.ident_expr_;
      }
      break;
    }
    case kSelectExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete expr_kind_.select_expr_;
      }
      break;
    }
    case kCallExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete expr_kind_.call_expr_;
      }
      break;
    }
    case kListExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete expr_kind_.list_expr_;
      }
      break;
    }
    case kStructExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete expr_kind_.struct_expr_;
      }
      break;
    }
    case kComprehensionExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete expr_kind_.comprehension_expr_;
      }
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EXPR_KIND_NOT_SET;
}


void Expr::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.Expr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  clear_expr_kind();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 2 [json_name = "id"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Literal literal_expr = 3 [json_name = "literalExpr"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_literal_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Expr.Ident ident_expr = 4 [json_name = "identExpr"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ident_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Expr.Select select_expr = 5 [json_name = "selectExpr"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_select_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Expr.Call call_expr = 6 [json_name = "callExpr"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_call_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Expr.CreateList list_expr = 7 [json_name = "listExpr"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Expr.CreateStruct struct_expr = 8 [json_name = "structExpr"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_struct_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1beta1.Expr.Comprehension comprehension_expr = 9 [json_name = "comprehensionExpr"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_comprehension_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.Expr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 2 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_id(), target);
  }

  // .google.api.expr.v1beta1.Literal literal_expr = 3 [json_name = "literalExpr"];
  if (_internal_has_literal_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::literal_expr(this),
        _Internal::literal_expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1beta1.Expr.Ident ident_expr = 4 [json_name = "identExpr"];
  if (_internal_has_ident_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::ident_expr(this),
        _Internal::ident_expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1beta1.Expr.Select select_expr = 5 [json_name = "selectExpr"];
  if (_internal_has_select_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::select_expr(this),
        _Internal::select_expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1beta1.Expr.Call call_expr = 6 [json_name = "callExpr"];
  if (_internal_has_call_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::call_expr(this),
        _Internal::call_expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1beta1.Expr.CreateList list_expr = 7 [json_name = "listExpr"];
  if (_internal_has_list_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::list_expr(this),
        _Internal::list_expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1beta1.Expr.CreateStruct struct_expr = 8 [json_name = "structExpr"];
  if (_internal_has_struct_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::struct_expr(this),
        _Internal::struct_expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1beta1.Expr.Comprehension comprehension_expr = 9 [json_name = "comprehensionExpr"];
  if (_internal_has_comprehension_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::comprehension_expr(this),
        _Internal::comprehension_expr(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.Expr)
  return target;
}

size_t Expr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.Expr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 2 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  switch (expr_kind_case()) {
    // .google.api.expr.v1beta1.Literal literal_expr = 3 [json_name = "literalExpr"];
    case kLiteralExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.literal_expr_);
      break;
    }
    // .google.api.expr.v1beta1.Expr.Ident ident_expr = 4 [json_name = "identExpr"];
    case kIdentExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.ident_expr_);
      break;
    }
    // .google.api.expr.v1beta1.Expr.Select select_expr = 5 [json_name = "selectExpr"];
    case kSelectExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.select_expr_);
      break;
    }
    // .google.api.expr.v1beta1.Expr.Call call_expr = 6 [json_name = "callExpr"];
    case kCallExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.call_expr_);
      break;
    }
    // .google.api.expr.v1beta1.Expr.CreateList list_expr = 7 [json_name = "listExpr"];
    case kListExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.list_expr_);
      break;
    }
    // .google.api.expr.v1beta1.Expr.CreateStruct struct_expr = 8 [json_name = "structExpr"];
    case kStructExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.struct_expr_);
      break;
    }
    // .google.api.expr.v1beta1.Expr.Comprehension comprehension_expr = 9 [json_name = "comprehensionExpr"];
    case kComprehensionExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.comprehension_expr_);
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Expr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr::GetClassData() const { return &_class_data_; }

void Expr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Expr *>(to)->MergeFrom(
      static_cast<const Expr &>(from));
}


void Expr::MergeFrom(const Expr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.Expr)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  switch (from.expr_kind_case()) {
    case kLiteralExpr: {
      _internal_mutable_literal_expr()->::google::api::expr::v1beta1::Literal::MergeFrom(from._internal_literal_expr());
      break;
    }
    case kIdentExpr: {
      _internal_mutable_ident_expr()->::google::api::expr::v1beta1::Expr_Ident::MergeFrom(from._internal_ident_expr());
      break;
    }
    case kSelectExpr: {
      _internal_mutable_select_expr()->::google::api::expr::v1beta1::Expr_Select::MergeFrom(from._internal_select_expr());
      break;
    }
    case kCallExpr: {
      _internal_mutable_call_expr()->::google::api::expr::v1beta1::Expr_Call::MergeFrom(from._internal_call_expr());
      break;
    }
    case kListExpr: {
      _internal_mutable_list_expr()->::google::api::expr::v1beta1::Expr_CreateList::MergeFrom(from._internal_list_expr());
      break;
    }
    case kStructExpr: {
      _internal_mutable_struct_expr()->::google::api::expr::v1beta1::Expr_CreateStruct::MergeFrom(from._internal_struct_expr());
      break;
    }
    case kComprehensionExpr: {
      _internal_mutable_comprehension_expr()->::google::api::expr::v1beta1::Expr_Comprehension::MergeFrom(from._internal_comprehension_expr());
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr::CopyFrom(const Expr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.Expr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr::IsInitialized() const {
  return true;
}

void Expr::InternalSwap(Expr* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(id_, other->id_);
  swap(expr_kind_, other->expr_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto[8]);
}

// ===================================================================

class Literal::_Internal {
 public:
};

Literal::Literal(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.Literal)
}
Literal::Literal(const Literal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_constant_kind();
  switch (from.constant_kind_case()) {
    case kNullValue: {
      _internal_set_null_value(from._internal_null_value());
      break;
    }
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kInt64Value: {
      _internal_set_int64_value(from._internal_int64_value());
      break;
    }
    case kUint64Value: {
      _internal_set_uint64_value(from._internal_uint64_value());
      break;
    }
    case kDoubleValue: {
      _internal_set_double_value(from._internal_double_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kBytesValue: {
      _internal_set_bytes_value(from._internal_bytes_value());
      break;
    }
    case CONSTANT_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.Literal)
}

inline void Literal::SharedCtor() {
clear_has_constant_kind();
}

Literal::~Literal() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.Literal)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Literal::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_constant_kind()) {
    clear_constant_kind();
  }
}

void Literal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Literal::clear_constant_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1beta1.Literal)
  switch (constant_kind_case()) {
    case kNullValue: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kUint64Value: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      constant_kind_.string_value_.Destroy();
      break;
    }
    case kBytesValue: {
      constant_kind_.bytes_value_.Destroy();
      break;
    }
    case CONSTANT_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONSTANT_KIND_NOT_SET;
}


void Literal::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.Literal)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_constant_kind();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Literal::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.NullValue null_value = 1 [json_name = "nullValue"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_null_value(static_cast<::PROTOBUF_NAMESPACE_ID::NullValue>(val));
        } else
          goto handle_unusual;
        continue;
      // bool bool_value = 2 [json_name = "boolValue"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_bool_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 int64_value = 3 [json_name = "int64Value"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _internal_set_int64_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 uint64_value = 4 [json_name = "uint64Value"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _internal_set_uint64_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double double_value = 5 [json_name = "doubleValue"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          _internal_set_double_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // string string_value = 6 [json_name = "stringValue"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_string_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1beta1.Literal.string_value"));
        } else
          goto handle_unusual;
        continue;
      // bytes bytes_value = 7 [json_name = "bytesValue"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_bytes_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Literal::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.Literal)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.NullValue null_value = 1 [json_name = "nullValue"];
  if (_internal_has_null_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_null_value(), target);
  }

  // bool bool_value = 2 [json_name = "boolValue"];
  if (_internal_has_bool_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_bool_value(), target);
  }

  // int64 int64_value = 3 [json_name = "int64Value"];
  if (_internal_has_int64_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_int64_value(), target);
  }

  // uint64 uint64_value = 4 [json_name = "uint64Value"];
  if (_internal_has_uint64_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_uint64_value(), target);
  }

  // double double_value = 5 [json_name = "doubleValue"];
  if (_internal_has_double_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(5, this->_internal_double_value(), target);
  }

  // string string_value = 6 [json_name = "stringValue"];
  if (_internal_has_string_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_value().data(), static_cast<int>(this->_internal_string_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.Literal.string_value");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_string_value(), target);
  }

  // bytes bytes_value = 7 [json_name = "bytesValue"];
  if (_internal_has_bytes_value()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_bytes_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.Literal)
  return target;
}

size_t Literal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.Literal)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (constant_kind_case()) {
    // .google.protobuf.NullValue null_value = 1 [json_name = "nullValue"];
    case kNullValue: {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_null_value());
      break;
    }
    // bool bool_value = 2 [json_name = "boolValue"];
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // int64 int64_value = 3 [json_name = "int64Value"];
    case kInt64Value: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_int64_value());
      break;
    }
    // uint64 uint64_value = 4 [json_name = "uint64Value"];
    case kUint64Value: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_uint64_value());
      break;
    }
    // double double_value = 5 [json_name = "doubleValue"];
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // string string_value = 6 [json_name = "stringValue"];
    case kStringValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_value());
      break;
    }
    // bytes bytes_value = 7 [json_name = "bytesValue"];
    case kBytesValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_bytes_value());
      break;
    }
    case CONSTANT_KIND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Literal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Literal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Literal::GetClassData() const { return &_class_data_; }

void Literal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Literal *>(to)->MergeFrom(
      static_cast<const Literal &>(from));
}


void Literal::MergeFrom(const Literal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.Literal)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.constant_kind_case()) {
    case kNullValue: {
      _internal_set_null_value(from._internal_null_value());
      break;
    }
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kInt64Value: {
      _internal_set_int64_value(from._internal_int64_value());
      break;
    }
    case kUint64Value: {
      _internal_set_uint64_value(from._internal_uint64_value());
      break;
    }
    case kDoubleValue: {
      _internal_set_double_value(from._internal_double_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kBytesValue: {
      _internal_set_bytes_value(from._internal_bytes_value());
      break;
    }
    case CONSTANT_KIND_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Literal::CopyFrom(const Literal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.Literal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Literal::IsInitialized() const {
  return true;
}

void Literal::InternalSwap(Literal* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(constant_kind_, other->constant_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Literal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::ParsedExpr*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::ParsedExpr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::ParsedExpr >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::Expr_Ident*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::Expr_Ident >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::Expr_Ident >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::Expr_Select*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::Expr_Select >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::Expr_Select >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::Expr_Call*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::Expr_Call >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::Expr_Call >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::Expr_CreateList*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::Expr_CreateList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::Expr_CreateList >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::Expr_CreateStruct_Entry*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::Expr_CreateStruct_Entry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::Expr_CreateStruct_Entry >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::Expr_CreateStruct*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::Expr_CreateStruct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::Expr_CreateStruct >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::Expr_Comprehension*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::Expr_Comprehension >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::Expr_Comprehension >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::Expr*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::Expr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::Expr >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::Literal*
Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::Literal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::Literal >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
