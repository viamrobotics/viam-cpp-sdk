// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1alpha1/syntax.proto

#include "google/api/expr/v1alpha1/syntax.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {
PROTOBUF_CONSTEXPR ParsedExpr::ParsedExpr(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.expr_)*/nullptr
  , /*decltype(_impl_.source_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ParsedExprDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParsedExprDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParsedExprDefaultTypeInternal() {}
  union {
    ParsedExpr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParsedExprDefaultTypeInternal _ParsedExpr_default_instance_;
PROTOBUF_CONSTEXPR Expr_Ident::Expr_Ident(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Expr_IdentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_IdentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_IdentDefaultTypeInternal() {}
  union {
    Expr_Ident _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_IdentDefaultTypeInternal _Expr_Ident_default_instance_;
PROTOBUF_CONSTEXPR Expr_Select::Expr_Select(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.field_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.operand_)*/nullptr
  , /*decltype(_impl_.test_only_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Expr_SelectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_SelectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_SelectDefaultTypeInternal() {}
  union {
    Expr_Select _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_SelectDefaultTypeInternal _Expr_Select_default_instance_;
PROTOBUF_CONSTEXPR Expr_Call::Expr_Call(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.args_)*/{}
  , /*decltype(_impl_.function_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.target_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Expr_CallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_CallDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_CallDefaultTypeInternal() {}
  union {
    Expr_Call _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_CallDefaultTypeInternal _Expr_Call_default_instance_;
PROTOBUF_CONSTEXPR Expr_CreateList::Expr_CreateList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.elements_)*/{}
  , /*decltype(_impl_.optional_indices_)*/{}
  , /*decltype(_impl_._optional_indices_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Expr_CreateListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_CreateListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_CreateListDefaultTypeInternal() {}
  union {
    Expr_CreateList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_CreateListDefaultTypeInternal _Expr_CreateList_default_instance_;
PROTOBUF_CONSTEXPR Expr_CreateStruct_Entry::Expr_CreateStruct_Entry(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_.optional_entry_)*/false
  , /*decltype(_impl_.key_kind_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct Expr_CreateStruct_EntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_CreateStruct_EntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_CreateStruct_EntryDefaultTypeInternal() {}
  union {
    Expr_CreateStruct_Entry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_CreateStruct_EntryDefaultTypeInternal _Expr_CreateStruct_Entry_default_instance_;
PROTOBUF_CONSTEXPR Expr_CreateStruct::Expr_CreateStruct(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entries_)*/{}
  , /*decltype(_impl_.message_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Expr_CreateStructDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_CreateStructDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_CreateStructDefaultTypeInternal() {}
  union {
    Expr_CreateStruct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_CreateStructDefaultTypeInternal _Expr_CreateStruct_default_instance_;
PROTOBUF_CONSTEXPR Expr_Comprehension::Expr_Comprehension(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.iter_var_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.accu_var_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.iter_range_)*/nullptr
  , /*decltype(_impl_.accu_init_)*/nullptr
  , /*decltype(_impl_.loop_condition_)*/nullptr
  , /*decltype(_impl_.loop_step_)*/nullptr
  , /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Expr_ComprehensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Expr_ComprehensionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Expr_ComprehensionDefaultTypeInternal() {}
  union {
    Expr_Comprehension _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Expr_ComprehensionDefaultTypeInternal _Expr_Comprehension_default_instance_;
PROTOBUF_CONSTEXPR Expr::Expr(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_.expr_kind_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ExprDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExprDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExprDefaultTypeInternal() {}
  union {
    Expr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExprDefaultTypeInternal _Expr_default_instance_;
PROTOBUF_CONSTEXPR Constant::Constant(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.constant_kind_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ConstantDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConstantDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConstantDefaultTypeInternal() {}
  union {
    Constant _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConstantDefaultTypeInternal _Constant_default_instance_;
PROTOBUF_CONSTEXPR SourceInfo_PositionsEntry_DoNotUse::SourceInfo_PositionsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct SourceInfo_PositionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SourceInfo_PositionsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SourceInfo_PositionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SourceInfo_PositionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SourceInfo_PositionsEntry_DoNotUseDefaultTypeInternal _SourceInfo_PositionsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SourceInfo_MacroCallsEntry_DoNotUse::SourceInfo_MacroCallsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct SourceInfo_MacroCallsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SourceInfo_MacroCallsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SourceInfo_MacroCallsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SourceInfo_MacroCallsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SourceInfo_MacroCallsEntry_DoNotUseDefaultTypeInternal _SourceInfo_MacroCallsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SourceInfo::SourceInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.line_offsets_)*/{}
  , /*decltype(_impl_._line_offsets_cached_byte_size_)*/{0}
  , /*decltype(_impl_.positions_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.macro_calls_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.syntax_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.location_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SourceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SourceInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SourceInfoDefaultTypeInternal() {}
  union {
    SourceInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SourceInfoDefaultTypeInternal _SourceInfo_default_instance_;
PROTOBUF_CONSTEXPR SourcePosition::SourcePosition(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.location_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.offset_)*/0
  , /*decltype(_impl_.line_)*/0
  , /*decltype(_impl_.column_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SourcePositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SourcePositionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SourcePositionDefaultTypeInternal() {}
  union {
    SourcePosition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SourcePositionDefaultTypeInternal _SourcePosition_default_instance_;
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
static ::_pb::Metadata file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[14];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto = nullptr;

const uint32_t TableStruct_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParsedExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParsedExpr, _impl_.expr_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParsedExpr, _impl_.source_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Ident, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Ident, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Select, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Select, _impl_.operand_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Select, _impl_.field_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Select, _impl_.test_only_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Call, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Call, _impl_.target_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Call, _impl_.function_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Call, _impl_.args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateList, _impl_.elements_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateList, _impl_.optional_indices_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct_Entry, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct_Entry, _impl_.id_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct_Entry, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct_Entry, _impl_.optional_entry_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct_Entry, _impl_.key_kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct, _impl_.message_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct, _impl_.entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, _impl_.iter_var_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, _impl_.iter_range_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, _impl_.accu_var_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, _impl_.accu_init_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, _impl_.loop_condition_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, _impl_.loop_step_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr, _impl_.id_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr, _impl_.expr_kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Constant, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Constant, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Constant, _impl_.constant_kind_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo, _impl_.syntax_version_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo, _impl_.location_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo, _impl_.line_offsets_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo, _impl_.positions_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo, _impl_.macro_calls_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourcePosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourcePosition, _impl_.location_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourcePosition, _impl_.offset_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourcePosition, _impl_.line_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourcePosition, _impl_.column_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::google::api::expr::v1alpha1::ParsedExpr)},
  { 8, -1, -1, sizeof(::google::api::expr::v1alpha1::Expr_Ident)},
  { 15, -1, -1, sizeof(::google::api::expr::v1alpha1::Expr_Select)},
  { 24, -1, -1, sizeof(::google::api::expr::v1alpha1::Expr_Call)},
  { 33, -1, -1, sizeof(::google::api::expr::v1alpha1::Expr_CreateList)},
  { 41, -1, -1, sizeof(::google::api::expr::v1alpha1::Expr_CreateStruct_Entry)},
  { 53, -1, -1, sizeof(::google::api::expr::v1alpha1::Expr_CreateStruct)},
  { 61, -1, -1, sizeof(::google::api::expr::v1alpha1::Expr_Comprehension)},
  { 74, -1, -1, sizeof(::google::api::expr::v1alpha1::Expr)},
  { 89, -1, -1, sizeof(::google::api::expr::v1alpha1::Constant)},
  { 105, 113, -1, sizeof(::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse)},
  { 115, 123, -1, sizeof(::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse)},
  { 125, -1, -1, sizeof(::google::api::expr::v1alpha1::SourceInfo)},
  { 136, -1, -1, sizeof(::google::api::expr::v1alpha1::SourcePosition)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::google::api::expr::v1alpha1::_ParsedExpr_default_instance_._instance,
  &::google::api::expr::v1alpha1::_Expr_Ident_default_instance_._instance,
  &::google::api::expr::v1alpha1::_Expr_Select_default_instance_._instance,
  &::google::api::expr::v1alpha1::_Expr_Call_default_instance_._instance,
  &::google::api::expr::v1alpha1::_Expr_CreateList_default_instance_._instance,
  &::google::api::expr::v1alpha1::_Expr_CreateStruct_Entry_default_instance_._instance,
  &::google::api::expr::v1alpha1::_Expr_CreateStruct_default_instance_._instance,
  &::google::api::expr::v1alpha1::_Expr_Comprehension_default_instance_._instance,
  &::google::api::expr::v1alpha1::_Expr_default_instance_._instance,
  &::google::api::expr::v1alpha1::_Constant_default_instance_._instance,
  &::google::api::expr::v1alpha1::_SourceInfo_PositionsEntry_DoNotUse_default_instance_._instance,
  &::google::api::expr::v1alpha1::_SourceInfo_MacroCallsEntry_DoNotUse_default_instance_._instance,
  &::google::api::expr::v1alpha1::_SourceInfo_default_instance_._instance,
  &::google::api::expr::v1alpha1::_SourcePosition_default_instance_._instance,
};

const char descriptor_table_protodef_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%google/api/expr/v1alpha1/syntax.proto\022"
  "\030google.api.expr.v1alpha1\032\036google/protob"
  "uf/duration.proto\032\034google/protobuf/struc"
  "t.proto\032\037google/protobuf/timestamp.proto"
  "\"\207\001\n\nParsedExpr\0222\n\004expr\030\002 \001(\0132\036.google.a"
  "pi.expr.v1alpha1.ExprR\004expr\022E\n\013source_in"
  "fo\030\003 \001(\0132$.google.api.expr.v1alpha1.Sour"
  "ceInfoR\nsourceInfo\"\256\r\n\004Expr\022\016\n\002id\030\002 \001(\003R"
  "\002id\022C\n\nconst_expr\030\003 \001(\0132\".google.api.exp"
  "r.v1alpha1.ConstantH\000R\tconstExpr\022E\n\niden"
  "t_expr\030\004 \001(\0132$.google.api.expr.v1alpha1."
  "Expr.IdentH\000R\tidentExpr\022H\n\013select_expr\030\005"
  " \001(\0132%.google.api.expr.v1alpha1.Expr.Sel"
  "ectH\000R\nselectExpr\022B\n\tcall_expr\030\006 \001(\0132#.g"
  "oogle.api.expr.v1alpha1.Expr.CallH\000R\010cal"
  "lExpr\022H\n\tlist_expr\030\007 \001(\0132).google.api.ex"
  "pr.v1alpha1.Expr.CreateListH\000R\010listExpr\022"
  "N\n\013struct_expr\030\010 \001(\0132+.google.api.expr.v"
  "1alpha1.Expr.CreateStructH\000R\nstructExpr\022"
  "]\n\022comprehension_expr\030\t \001(\0132,.google.api"
  ".expr.v1alpha1.Expr.ComprehensionH\000R\021com"
  "prehensionExpr\032\033\n\005Ident\022\022\n\004name\030\001 \001(\tR\004n"
  "ame\032u\n\006Select\0228\n\007operand\030\001 \001(\0132\036.google."
  "api.expr.v1alpha1.ExprR\007operand\022\024\n\005field"
  "\030\002 \001(\tR\005field\022\033\n\ttest_only\030\003 \001(\010R\010testOn"
  "ly\032\216\001\n\004Call\0226\n\006target\030\001 \001(\0132\036.google.api"
  ".expr.v1alpha1.ExprR\006target\022\032\n\010function\030"
  "\002 \001(\tR\010function\0222\n\004args\030\003 \003(\0132\036.google.a"
  "pi.expr.v1alpha1.ExprR\004args\032s\n\nCreateLis"
  "t\022:\n\010elements\030\001 \003(\0132\036.google.api.expr.v1"
  "alpha1.ExprR\010elements\022)\n\020optional_indice"
  "s\030\002 \003(\005R\017optionalIndices\032\333\002\n\014CreateStruc"
  "t\022!\n\014message_name\030\001 \001(\tR\013messageName\022K\n\007"
  "entries\030\002 \003(\01321.google.api.expr.v1alpha1"
  ".Expr.CreateStruct.EntryR\007entries\032\332\001\n\005En"
  "try\022\016\n\002id\030\001 \001(\003R\002id\022\035\n\tfield_key\030\002 \001(\tH\000"
  "R\010fieldKey\0229\n\007map_key\030\003 \001(\0132\036.google.api"
  ".expr.v1alpha1.ExprH\000R\006mapKey\0224\n\005value\030\004"
  " \001(\0132\036.google.api.expr.v1alpha1.ExprR\005va"
  "lue\022%\n\016optional_entry\030\005 \001(\010R\roptionalEnt"
  "ryB\n\n\010key_kind\032\375\002\n\rComprehension\022\031\n\010iter"
  "_var\030\001 \001(\tR\007iterVar\022=\n\niter_range\030\002 \001(\0132"
  "\036.google.api.expr.v1alpha1.ExprR\titerRan"
  "ge\022\031\n\010accu_var\030\003 \001(\tR\007accuVar\022;\n\taccu_in"
  "it\030\004 \001(\0132\036.google.api.expr.v1alpha1.Expr"
  "R\010accuInit\022E\n\016loop_condition\030\005 \001(\0132\036.goo"
  "gle.api.expr.v1alpha1.ExprR\rloopConditio"
  "n\022;\n\tloop_step\030\006 \001(\0132\036.google.api.expr.v"
  "1alpha1.ExprR\010loopStep\0226\n\006result\030\007 \001(\0132\036"
  ".google.api.expr.v1alpha1.ExprR\006resultB\013"
  "\n\texpr_kind\"\301\003\n\010Constant\022;\n\nnull_value\030\001"
  " \001(\0162\032.google.protobuf.NullValueH\000R\tnull"
  "Value\022\037\n\nbool_value\030\002 \001(\010H\000R\tboolValue\022!"
  "\n\013int64_value\030\003 \001(\003H\000R\nint64Value\022#\n\014uin"
  "t64_value\030\004 \001(\004H\000R\013uint64Value\022#\n\014double"
  "_value\030\005 \001(\001H\000R\013doubleValue\022#\n\014string_va"
  "lue\030\006 \001(\tH\000R\013stringValue\022!\n\013bytes_value\030"
  "\007 \001(\014H\000R\nbytesValue\022F\n\016duration_value\030\010 "
  "\001(\0132\031.google.protobuf.DurationB\002\030\001H\000R\rdu"
  "rationValue\022I\n\017timestamp_value\030\t \001(\0132\032.g"
  "oogle.protobuf.TimestampB\002\030\001H\000R\016timestam"
  "pValueB\017\n\rconstant_kind\"\271\003\n\nSourceInfo\022%"
  "\n\016syntax_version\030\001 \001(\tR\rsyntaxVersion\022\032\n"
  "\010location\030\002 \001(\tR\010location\022!\n\014line_offset"
  "s\030\003 \003(\005R\013lineOffsets\022Q\n\tpositions\030\004 \003(\0132"
  "3.google.api.expr.v1alpha1.SourceInfo.Po"
  "sitionsEntryR\tpositions\022U\n\013macro_calls\030\005"
  " \003(\01324.google.api.expr.v1alpha1.SourceIn"
  "fo.MacroCallsEntryR\nmacroCalls\032<\n\016Positi"
  "onsEntry\022\020\n\003key\030\001 \001(\003R\003key\022\024\n\005value\030\002 \001("
  "\005R\005value:\0028\001\032]\n\017MacroCallsEntry\022\020\n\003key\030\001"
  " \001(\003R\003key\0224\n\005value\030\002 \001(\0132\036.google.api.ex"
  "pr.v1alpha1.ExprR\005value:\0028\001\"p\n\016SourcePos"
  "ition\022\032\n\010location\030\001 \001(\tR\010location\022\026\n\006off"
  "set\030\002 \001(\005R\006offset\022\022\n\004line\030\003 \001(\005R\004line\022\026\n"
  "\006column\030\004 \001(\005R\006columnBn\n\034com.google.api."
  "expr.v1alpha1B\013SyntaxProtoP\001Z<google.gol"
  "ang.org/genproto/googleapis/api/expr/v1a"
  "lpha1;expr\370\001\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto = {
    false, false, 3141, descriptor_table_protodef_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto,
    "google/api/expr/v1alpha1/syntax.proto",
    &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once, descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_deps, 3, 14,
    schemas, file_default_instances, TableStruct_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::offsets,
    file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto, file_level_enum_descriptors_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto,
    file_level_service_descriptors_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter() {
  return &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto(&descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto);
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {

// ===================================================================

class ParsedExpr::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::Expr& expr(const ParsedExpr* msg);
  static const ::google::api::expr::v1alpha1::SourceInfo& source_info(const ParsedExpr* msg);
};

const ::google::api::expr::v1alpha1::Expr&
ParsedExpr::_Internal::expr(const ParsedExpr* msg) {
  return *msg->_impl_.expr_;
}
const ::google::api::expr::v1alpha1::SourceInfo&
ParsedExpr::_Internal::source_info(const ParsedExpr* msg) {
  return *msg->_impl_.source_info_;
}
ParsedExpr::ParsedExpr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.ParsedExpr)
}
ParsedExpr::ParsedExpr(const ParsedExpr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ParsedExpr* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.expr_){nullptr}
    , decltype(_impl_.source_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_expr()) {
    _this->_impl_.expr_ = new ::google::api::expr::v1alpha1::Expr(*from._impl_.expr_);
  }
  if (from._internal_has_source_info()) {
    _this->_impl_.source_info_ = new ::google::api::expr::v1alpha1::SourceInfo(*from._impl_.source_info_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.ParsedExpr)
}

inline void ParsedExpr::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.expr_){nullptr}
    , decltype(_impl_.source_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ParsedExpr::~ParsedExpr() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.ParsedExpr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ParsedExpr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.expr_;
  if (this != internal_default_instance()) delete _impl_.source_info_;
}

void ParsedExpr::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ParsedExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.ParsedExpr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.expr_ != nullptr) {
    delete _impl_.expr_;
  }
  _impl_.expr_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.source_info_ != nullptr) {
    delete _impl_.source_info_;
  }
  _impl_.source_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParsedExpr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.Expr expr = 2 [json_name = "expr"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.SourceInfo source_info = 3 [json_name = "sourceInfo"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_source_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ParsedExpr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.ParsedExpr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Expr expr = 2 [json_name = "expr"];
  if (this->_internal_has_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::expr(this),
        _Internal::expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1alpha1.SourceInfo source_info = 3 [json_name = "sourceInfo"];
  if (this->_internal_has_source_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::source_info(this),
        _Internal::source_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.ParsedExpr)
  return target;
}

size_t ParsedExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.ParsedExpr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Expr expr = 2 [json_name = "expr"];
  if (this->_internal_has_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.expr_);
  }

  // .google.api.expr.v1alpha1.SourceInfo source_info = 3 [json_name = "sourceInfo"];
  if (this->_internal_has_source_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.source_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ParsedExpr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ParsedExpr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ParsedExpr::GetClassData() const { return &_class_data_; }


void ParsedExpr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ParsedExpr*>(&to_msg);
  auto& from = static_cast<const ParsedExpr&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.ParsedExpr)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_expr()) {
    _this->_internal_mutable_expr()->::google::api::expr::v1alpha1::Expr::MergeFrom(
        from._internal_expr());
  }
  if (from._internal_has_source_info()) {
    _this->_internal_mutable_source_info()->::google::api::expr::v1alpha1::SourceInfo::MergeFrom(
        from._internal_source_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ParsedExpr::CopyFrom(const ParsedExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.ParsedExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParsedExpr::IsInitialized() const {
  return true;
}

void ParsedExpr::InternalSwap(ParsedExpr* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParsedExpr, _impl_.source_info_)
      + sizeof(ParsedExpr::_impl_.source_info_)
      - PROTOBUF_FIELD_OFFSET(ParsedExpr, _impl_.expr_)>(
          reinterpret_cast<char*>(&_impl_.expr_),
          reinterpret_cast<char*>(&other->_impl_.expr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ParsedExpr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[0]);
}

// ===================================================================

class Expr_Ident::_Internal {
 public:
};

Expr_Ident::Expr_Ident(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.Ident)
}
Expr_Ident::Expr_Ident(const Expr_Ident& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Expr_Ident* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.Ident)
}

inline void Expr_Ident::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Expr_Ident::~Expr_Ident() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.Ident)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_Ident::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void Expr_Ident::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Expr_Ident::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.Ident)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_Ident::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1alpha1.Expr.Ident.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_Ident::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.Ident)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.Ident.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.Ident)
  return target;
}

size_t Expr_Ident::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.Ident)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_Ident::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Expr_Ident::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_Ident::GetClassData() const { return &_class_data_; }


void Expr_Ident::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Expr_Ident*>(&to_msg);
  auto& from = static_cast<const Expr_Ident&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.Ident)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_Ident::CopyFrom(const Expr_Ident& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.Ident)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_Ident::IsInitialized() const {
  return true;
}

void Expr_Ident::InternalSwap(Expr_Ident* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_Ident::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[1]);
}

// ===================================================================

class Expr_Select::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::Expr& operand(const Expr_Select* msg);
};

const ::google::api::expr::v1alpha1::Expr&
Expr_Select::_Internal::operand(const Expr_Select* msg) {
  return *msg->_impl_.operand_;
}
Expr_Select::Expr_Select(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.Select)
}
Expr_Select::Expr_Select(const Expr_Select& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Expr_Select* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.field_){}
    , decltype(_impl_.operand_){nullptr}
    , decltype(_impl_.test_only_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.field_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.field_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_field().empty()) {
    _this->_impl_.field_.Set(from._internal_field(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_operand()) {
    _this->_impl_.operand_ = new ::google::api::expr::v1alpha1::Expr(*from._impl_.operand_);
  }
  _this->_impl_.test_only_ = from._impl_.test_only_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.Select)
}

inline void Expr_Select::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.field_){}
    , decltype(_impl_.operand_){nullptr}
    , decltype(_impl_.test_only_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.field_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.field_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Expr_Select::~Expr_Select() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.Select)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_Select::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.field_.Destroy();
  if (this != internal_default_instance()) delete _impl_.operand_;
}

void Expr_Select::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Expr_Select::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.Select)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.field_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.operand_ != nullptr) {
    delete _impl_.operand_;
  }
  _impl_.operand_ = nullptr;
  _impl_.test_only_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_Select::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.Expr operand = 1 [json_name = "operand"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_operand(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string field = 2 [json_name = "field"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_field();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1alpha1.Expr.Select.field"));
        } else
          goto handle_unusual;
        continue;
      // bool test_only = 3 [json_name = "testOnly"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.test_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_Select::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.Select)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Expr operand = 1 [json_name = "operand"];
  if (this->_internal_has_operand()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::operand(this),
        _Internal::operand(this).GetCachedSize(), target, stream);
  }

  // string field = 2 [json_name = "field"];
  if (!this->_internal_field().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field().data(), static_cast<int>(this->_internal_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.Select.field");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_field(), target);
  }

  // bool test_only = 3 [json_name = "testOnly"];
  if (this->_internal_test_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_test_only(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.Select)
  return target;
}

size_t Expr_Select::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.Select)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field = 2 [json_name = "field"];
  if (!this->_internal_field().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field());
  }

  // .google.api.expr.v1alpha1.Expr operand = 1 [json_name = "operand"];
  if (this->_internal_has_operand()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.operand_);
  }

  // bool test_only = 3 [json_name = "testOnly"];
  if (this->_internal_test_only() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_Select::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Expr_Select::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_Select::GetClassData() const { return &_class_data_; }


void Expr_Select::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Expr_Select*>(&to_msg);
  auto& from = static_cast<const Expr_Select&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.Select)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field().empty()) {
    _this->_internal_set_field(from._internal_field());
  }
  if (from._internal_has_operand()) {
    _this->_internal_mutable_operand()->::google::api::expr::v1alpha1::Expr::MergeFrom(
        from._internal_operand());
  }
  if (from._internal_test_only() != 0) {
    _this->_internal_set_test_only(from._internal_test_only());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_Select::CopyFrom(const Expr_Select& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.Select)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_Select::IsInitialized() const {
  return true;
}

void Expr_Select::InternalSwap(Expr_Select* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.field_, lhs_arena,
      &other->_impl_.field_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Expr_Select, _impl_.test_only_)
      + sizeof(Expr_Select::_impl_.test_only_)
      - PROTOBUF_FIELD_OFFSET(Expr_Select, _impl_.operand_)>(
          reinterpret_cast<char*>(&_impl_.operand_),
          reinterpret_cast<char*>(&other->_impl_.operand_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_Select::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[2]);
}

// ===================================================================

class Expr_Call::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::Expr& target(const Expr_Call* msg);
};

const ::google::api::expr::v1alpha1::Expr&
Expr_Call::_Internal::target(const Expr_Call* msg) {
  return *msg->_impl_.target_;
}
Expr_Call::Expr_Call(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.Call)
}
Expr_Call::Expr_Call(const Expr_Call& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Expr_Call* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.args_){from._impl_.args_}
    , decltype(_impl_.function_){}
    , decltype(_impl_.target_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.function_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_function().empty()) {
    _this->_impl_.function_.Set(from._internal_function(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_target()) {
    _this->_impl_.target_ = new ::google::api::expr::v1alpha1::Expr(*from._impl_.target_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.Call)
}

inline void Expr_Call::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.args_){arena}
    , decltype(_impl_.function_){}
    , decltype(_impl_.target_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.function_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Expr_Call::~Expr_Call() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.Call)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_Call::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.args_.~RepeatedPtrField();
  _impl_.function_.Destroy();
  if (this != internal_default_instance()) delete _impl_.target_;
}

void Expr_Call::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Expr_Call::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.Call)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.args_.Clear();
  _impl_.function_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.target_ != nullptr) {
    delete _impl_.target_;
  }
  _impl_.target_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_Call::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.Expr target = 1 [json_name = "target"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_target(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string function = 2 [json_name = "function"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_function();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1alpha1.Expr.Call.function"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.expr.v1alpha1.Expr args = 3 [json_name = "args"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_args(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_Call::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.Call)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Expr target = 1 [json_name = "target"];
  if (this->_internal_has_target()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::target(this),
        _Internal::target(this).GetCachedSize(), target, stream);
  }

  // string function = 2 [json_name = "function"];
  if (!this->_internal_function().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_function().data(), static_cast<int>(this->_internal_function().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.Call.function");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_function(), target);
  }

  // repeated .google.api.expr.v1alpha1.Expr args = 3 [json_name = "args"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_args_size()); i < n; i++) {
    const auto& repfield = this->_internal_args(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.Call)
  return target;
}

size_t Expr_Call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.Call)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.Expr args = 3 [json_name = "args"];
  total_size += 1UL * this->_internal_args_size();
  for (const auto& msg : this->_impl_.args_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string function = 2 [json_name = "function"];
  if (!this->_internal_function().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_function());
  }

  // .google.api.expr.v1alpha1.Expr target = 1 [json_name = "target"];
  if (this->_internal_has_target()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.target_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_Call::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Expr_Call::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_Call::GetClassData() const { return &_class_data_; }


void Expr_Call::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Expr_Call*>(&to_msg);
  auto& from = static_cast<const Expr_Call&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.Call)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.args_.MergeFrom(from._impl_.args_);
  if (!from._internal_function().empty()) {
    _this->_internal_set_function(from._internal_function());
  }
  if (from._internal_has_target()) {
    _this->_internal_mutable_target()->::google::api::expr::v1alpha1::Expr::MergeFrom(
        from._internal_target());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_Call::CopyFrom(const Expr_Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_Call::IsInitialized() const {
  return true;
}

void Expr_Call::InternalSwap(Expr_Call* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.args_.InternalSwap(&other->_impl_.args_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.function_, lhs_arena,
      &other->_impl_.function_, rhs_arena
  );
  swap(_impl_.target_, other->_impl_.target_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_Call::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[3]);
}

// ===================================================================

class Expr_CreateList::_Internal {
 public:
};

Expr_CreateList::Expr_CreateList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.CreateList)
}
Expr_CreateList::Expr_CreateList(const Expr_CreateList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Expr_CreateList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.elements_){from._impl_.elements_}
    , decltype(_impl_.optional_indices_){from._impl_.optional_indices_}
    , /*decltype(_impl_._optional_indices_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.CreateList)
}

inline void Expr_CreateList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.elements_){arena}
    , decltype(_impl_.optional_indices_){arena}
    , /*decltype(_impl_._optional_indices_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Expr_CreateList::~Expr_CreateList() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.CreateList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_CreateList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.elements_.~RepeatedPtrField();
  _impl_.optional_indices_.~RepeatedField();
}

void Expr_CreateList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Expr_CreateList::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.CreateList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.elements_.Clear();
  _impl_.optional_indices_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_CreateList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.api.expr.v1alpha1.Expr elements = 1 [json_name = "elements"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elements(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 optional_indices = 2 [json_name = "optionalIndices"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_optional_indices(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_optional_indices(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_CreateList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.CreateList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.Expr elements = 1 [json_name = "elements"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elements_size()); i < n; i++) {
    const auto& repfield = this->_internal_elements(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated int32 optional_indices = 2 [json_name = "optionalIndices"];
  {
    int byte_size = _impl_._optional_indices_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_optional_indices(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.CreateList)
  return target;
}

size_t Expr_CreateList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.CreateList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.Expr elements = 1 [json_name = "elements"];
  total_size += 1UL * this->_internal_elements_size();
  for (const auto& msg : this->_impl_.elements_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated int32 optional_indices = 2 [json_name = "optionalIndices"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.optional_indices_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._optional_indices_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_CreateList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Expr_CreateList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_CreateList::GetClassData() const { return &_class_data_; }


void Expr_CreateList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Expr_CreateList*>(&to_msg);
  auto& from = static_cast<const Expr_CreateList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.CreateList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.elements_.MergeFrom(from._impl_.elements_);
  _this->_impl_.optional_indices_.MergeFrom(from._impl_.optional_indices_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_CreateList::CopyFrom(const Expr_CreateList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.CreateList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_CreateList::IsInitialized() const {
  return true;
}

void Expr_CreateList::InternalSwap(Expr_CreateList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.elements_.InternalSwap(&other->_impl_.elements_);
  _impl_.optional_indices_.InternalSwap(&other->_impl_.optional_indices_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_CreateList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[4]);
}

// ===================================================================

class Expr_CreateStruct_Entry::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::Expr& map_key(const Expr_CreateStruct_Entry* msg);
  static const ::google::api::expr::v1alpha1::Expr& value(const Expr_CreateStruct_Entry* msg);
};

const ::google::api::expr::v1alpha1::Expr&
Expr_CreateStruct_Entry::_Internal::map_key(const Expr_CreateStruct_Entry* msg) {
  return *msg->_impl_.key_kind_.map_key_;
}
const ::google::api::expr::v1alpha1::Expr&
Expr_CreateStruct_Entry::_Internal::value(const Expr_CreateStruct_Entry* msg) {
  return *msg->_impl_.value_;
}
void Expr_CreateStruct_Entry::set_allocated_map_key(::google::api::expr::v1alpha1::Expr* map_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_key_kind();
  if (map_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(map_key);
    if (message_arena != submessage_arena) {
      map_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, map_key, submessage_arena);
    }
    set_has_map_key();
    _impl_.key_kind_.map_key_ = map_key;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.CreateStruct.Entry.map_key)
}
Expr_CreateStruct_Entry::Expr_CreateStruct_Entry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
}
Expr_CreateStruct_Entry::Expr_CreateStruct_Entry(const Expr_CreateStruct_Entry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Expr_CreateStruct_Entry* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){nullptr}
    , decltype(_impl_.id_){}
    , decltype(_impl_.optional_entry_){}
    , decltype(_impl_.key_kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::google::api::expr::v1alpha1::Expr(*from._impl_.value_);
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.optional_entry_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.optional_entry_));
  clear_has_key_kind();
  switch (from.key_kind_case()) {
    case kFieldKey: {
      _this->_internal_set_field_key(from._internal_field_key());
      break;
    }
    case kMapKey: {
      _this->_internal_mutable_map_key()->::google::api::expr::v1alpha1::Expr::MergeFrom(
          from._internal_map_key());
      break;
    }
    case KEY_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
}

inline void Expr_CreateStruct_Entry::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){nullptr}
    , decltype(_impl_.id_){int64_t{0}}
    , decltype(_impl_.optional_entry_){false}
    , decltype(_impl_.key_kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_key_kind();
}

Expr_CreateStruct_Entry::~Expr_CreateStruct_Entry() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_CreateStruct_Entry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.value_;
  if (has_key_kind()) {
    clear_key_kind();
  }
}

void Expr_CreateStruct_Entry::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Expr_CreateStruct_Entry::clear_key_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  switch (key_kind_case()) {
    case kFieldKey: {
      _impl_.key_kind_.field_key_.Destroy();
      break;
    }
    case kMapKey: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.key_kind_.map_key_;
      }
      break;
    }
    case KEY_KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = KEY_KIND_NOT_SET;
}


void Expr_CreateStruct_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.optional_entry_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.optional_entry_));
  clear_key_kind();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_CreateStruct_Entry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string field_key = 2 [json_name = "fieldKey"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_field_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1alpha1.Expr.CreateStruct.Entry.field_key"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr map_key = 3 [json_name = "mapKey"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_map_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr value = 4 [json_name = "value"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool optional_entry = 5 [json_name = "optionalEntry"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.optional_entry_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_CreateStruct_Entry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // string field_key = 2 [json_name = "fieldKey"];
  if (_internal_has_field_key()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field_key().data(), static_cast<int>(this->_internal_field_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.CreateStruct.Entry.field_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_field_key(), target);
  }

  // .google.api.expr.v1alpha1.Expr map_key = 3 [json_name = "mapKey"];
  if (_internal_has_map_key()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::map_key(this),
        _Internal::map_key(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr value = 4 [json_name = "value"];
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  // bool optional_entry = 5 [json_name = "optionalEntry"];
  if (this->_internal_optional_entry() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_optional_entry(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  return target;
}

size_t Expr_CreateStruct_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Expr value = 4 [json_name = "value"];
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  // int64 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // bool optional_entry = 5 [json_name = "optionalEntry"];
  if (this->_internal_optional_entry() != 0) {
    total_size += 1 + 1;
  }

  switch (key_kind_case()) {
    // string field_key = 2 [json_name = "fieldKey"];
    case kFieldKey: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_field_key());
      break;
    }
    // .google.api.expr.v1alpha1.Expr map_key = 3 [json_name = "mapKey"];
    case kMapKey: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.key_kind_.map_key_);
      break;
    }
    case KEY_KIND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_CreateStruct_Entry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Expr_CreateStruct_Entry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_CreateStruct_Entry::GetClassData() const { return &_class_data_; }


void Expr_CreateStruct_Entry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Expr_CreateStruct_Entry*>(&to_msg);
  auto& from = static_cast<const Expr_CreateStruct_Entry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::google::api::expr::v1alpha1::Expr::MergeFrom(
        from._internal_value());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_optional_entry() != 0) {
    _this->_internal_set_optional_entry(from._internal_optional_entry());
  }
  switch (from.key_kind_case()) {
    case kFieldKey: {
      _this->_internal_set_field_key(from._internal_field_key());
      break;
    }
    case kMapKey: {
      _this->_internal_mutable_map_key()->::google::api::expr::v1alpha1::Expr::MergeFrom(
          from._internal_map_key());
      break;
    }
    case KEY_KIND_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_CreateStruct_Entry::CopyFrom(const Expr_CreateStruct_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_CreateStruct_Entry::IsInitialized() const {
  return true;
}

void Expr_CreateStruct_Entry::InternalSwap(Expr_CreateStruct_Entry* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Expr_CreateStruct_Entry, _impl_.optional_entry_)
      + sizeof(Expr_CreateStruct_Entry::_impl_.optional_entry_)
      - PROTOBUF_FIELD_OFFSET(Expr_CreateStruct_Entry, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
  swap(_impl_.key_kind_, other->_impl_.key_kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_CreateStruct_Entry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[5]);
}

// ===================================================================

class Expr_CreateStruct::_Internal {
 public:
};

Expr_CreateStruct::Expr_CreateStruct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.CreateStruct)
}
Expr_CreateStruct::Expr_CreateStruct(const Expr_CreateStruct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Expr_CreateStruct* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entries_){from._impl_.entries_}
    , decltype(_impl_.message_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message_name().empty()) {
    _this->_impl_.message_name_.Set(from._internal_message_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.CreateStruct)
}

inline void Expr_CreateStruct::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entries_){arena}
    , decltype(_impl_.message_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Expr_CreateStruct::~Expr_CreateStruct() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.CreateStruct)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_CreateStruct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.entries_.~RepeatedPtrField();
  _impl_.message_name_.Destroy();
}

void Expr_CreateStruct::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Expr_CreateStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.CreateStruct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _impl_.message_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_CreateStruct::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message_name = 1 [json_name = "messageName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1alpha1.Expr.CreateStruct.message_name"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.api.expr.v1alpha1.Expr.CreateStruct.Entry entries = 2 [json_name = "entries"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_CreateStruct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.CreateStruct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message_name = 1 [json_name = "messageName"];
  if (!this->_internal_message_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_name().data(), static_cast<int>(this->_internal_message_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.CreateStruct.message_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message_name(), target);
  }

  // repeated .google.api.expr.v1alpha1.Expr.CreateStruct.Entry entries = 2 [json_name = "entries"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entries_size()); i < n; i++) {
    const auto& repfield = this->_internal_entries(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.CreateStruct)
  return target;
}

size_t Expr_CreateStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.CreateStruct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.Expr.CreateStruct.Entry entries = 2 [json_name = "entries"];
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_impl_.entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string message_name = 1 [json_name = "messageName"];
  if (!this->_internal_message_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_CreateStruct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Expr_CreateStruct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_CreateStruct::GetClassData() const { return &_class_data_; }


void Expr_CreateStruct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Expr_CreateStruct*>(&to_msg);
  auto& from = static_cast<const Expr_CreateStruct&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.CreateStruct)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.entries_.MergeFrom(from._impl_.entries_);
  if (!from._internal_message_name().empty()) {
    _this->_internal_set_message_name(from._internal_message_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_CreateStruct::CopyFrom(const Expr_CreateStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.CreateStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_CreateStruct::IsInitialized() const {
  return true;
}

void Expr_CreateStruct::InternalSwap(Expr_CreateStruct* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_name_, lhs_arena,
      &other->_impl_.message_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_CreateStruct::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[6]);
}

// ===================================================================

class Expr_Comprehension::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::Expr& iter_range(const Expr_Comprehension* msg);
  static const ::google::api::expr::v1alpha1::Expr& accu_init(const Expr_Comprehension* msg);
  static const ::google::api::expr::v1alpha1::Expr& loop_condition(const Expr_Comprehension* msg);
  static const ::google::api::expr::v1alpha1::Expr& loop_step(const Expr_Comprehension* msg);
  static const ::google::api::expr::v1alpha1::Expr& result(const Expr_Comprehension* msg);
};

const ::google::api::expr::v1alpha1::Expr&
Expr_Comprehension::_Internal::iter_range(const Expr_Comprehension* msg) {
  return *msg->_impl_.iter_range_;
}
const ::google::api::expr::v1alpha1::Expr&
Expr_Comprehension::_Internal::accu_init(const Expr_Comprehension* msg) {
  return *msg->_impl_.accu_init_;
}
const ::google::api::expr::v1alpha1::Expr&
Expr_Comprehension::_Internal::loop_condition(const Expr_Comprehension* msg) {
  return *msg->_impl_.loop_condition_;
}
const ::google::api::expr::v1alpha1::Expr&
Expr_Comprehension::_Internal::loop_step(const Expr_Comprehension* msg) {
  return *msg->_impl_.loop_step_;
}
const ::google::api::expr::v1alpha1::Expr&
Expr_Comprehension::_Internal::result(const Expr_Comprehension* msg) {
  return *msg->_impl_.result_;
}
Expr_Comprehension::Expr_Comprehension(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.Comprehension)
}
Expr_Comprehension::Expr_Comprehension(const Expr_Comprehension& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Expr_Comprehension* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.iter_var_){}
    , decltype(_impl_.accu_var_){}
    , decltype(_impl_.iter_range_){nullptr}
    , decltype(_impl_.accu_init_){nullptr}
    , decltype(_impl_.loop_condition_){nullptr}
    , decltype(_impl_.loop_step_){nullptr}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.iter_var_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.iter_var_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_iter_var().empty()) {
    _this->_impl_.iter_var_.Set(from._internal_iter_var(), 
      _this->GetArenaForAllocation());
  }
  _impl_.accu_var_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.accu_var_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_accu_var().empty()) {
    _this->_impl_.accu_var_.Set(from._internal_accu_var(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_iter_range()) {
    _this->_impl_.iter_range_ = new ::google::api::expr::v1alpha1::Expr(*from._impl_.iter_range_);
  }
  if (from._internal_has_accu_init()) {
    _this->_impl_.accu_init_ = new ::google::api::expr::v1alpha1::Expr(*from._impl_.accu_init_);
  }
  if (from._internal_has_loop_condition()) {
    _this->_impl_.loop_condition_ = new ::google::api::expr::v1alpha1::Expr(*from._impl_.loop_condition_);
  }
  if (from._internal_has_loop_step()) {
    _this->_impl_.loop_step_ = new ::google::api::expr::v1alpha1::Expr(*from._impl_.loop_step_);
  }
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::google::api::expr::v1alpha1::Expr(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.Comprehension)
}

inline void Expr_Comprehension::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.iter_var_){}
    , decltype(_impl_.accu_var_){}
    , decltype(_impl_.iter_range_){nullptr}
    , decltype(_impl_.accu_init_){nullptr}
    , decltype(_impl_.loop_condition_){nullptr}
    , decltype(_impl_.loop_step_){nullptr}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.iter_var_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.iter_var_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.accu_var_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.accu_var_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Expr_Comprehension::~Expr_Comprehension() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.Comprehension)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr_Comprehension::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.iter_var_.Destroy();
  _impl_.accu_var_.Destroy();
  if (this != internal_default_instance()) delete _impl_.iter_range_;
  if (this != internal_default_instance()) delete _impl_.accu_init_;
  if (this != internal_default_instance()) delete _impl_.loop_condition_;
  if (this != internal_default_instance()) delete _impl_.loop_step_;
  if (this != internal_default_instance()) delete _impl_.result_;
}

void Expr_Comprehension::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Expr_Comprehension::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.Comprehension)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.iter_var_.ClearToEmpty();
  _impl_.accu_var_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.iter_range_ != nullptr) {
    delete _impl_.iter_range_;
  }
  _impl_.iter_range_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.accu_init_ != nullptr) {
    delete _impl_.accu_init_;
  }
  _impl_.accu_init_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.loop_condition_ != nullptr) {
    delete _impl_.loop_condition_;
  }
  _impl_.loop_condition_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.loop_step_ != nullptr) {
    delete _impl_.loop_step_;
  }
  _impl_.loop_step_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr_Comprehension::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string iter_var = 1 [json_name = "iterVar"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_iter_var();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1alpha1.Expr.Comprehension.iter_var"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr iter_range = 2 [json_name = "iterRange"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_iter_range(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string accu_var = 3 [json_name = "accuVar"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_accu_var();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1alpha1.Expr.Comprehension.accu_var"));
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr accu_init = 4 [json_name = "accuInit"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_accu_init(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr loop_condition = 5 [json_name = "loopCondition"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_loop_condition(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr loop_step = 6 [json_name = "loopStep"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_loop_step(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr result = 7 [json_name = "result"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr_Comprehension::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.Comprehension)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string iter_var = 1 [json_name = "iterVar"];
  if (!this->_internal_iter_var().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_iter_var().data(), static_cast<int>(this->_internal_iter_var().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.Comprehension.iter_var");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_iter_var(), target);
  }

  // .google.api.expr.v1alpha1.Expr iter_range = 2 [json_name = "iterRange"];
  if (this->_internal_has_iter_range()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::iter_range(this),
        _Internal::iter_range(this).GetCachedSize(), target, stream);
  }

  // string accu_var = 3 [json_name = "accuVar"];
  if (!this->_internal_accu_var().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accu_var().data(), static_cast<int>(this->_internal_accu_var().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.Comprehension.accu_var");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_accu_var(), target);
  }

  // .google.api.expr.v1alpha1.Expr accu_init = 4 [json_name = "accuInit"];
  if (this->_internal_has_accu_init()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::accu_init(this),
        _Internal::accu_init(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr loop_condition = 5 [json_name = "loopCondition"];
  if (this->_internal_has_loop_condition()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::loop_condition(this),
        _Internal::loop_condition(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr loop_step = 6 [json_name = "loopStep"];
  if (this->_internal_has_loop_step()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::loop_step(this),
        _Internal::loop_step(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr result = 7 [json_name = "result"];
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.Comprehension)
  return target;
}

size_t Expr_Comprehension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.Comprehension)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string iter_var = 1 [json_name = "iterVar"];
  if (!this->_internal_iter_var().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_iter_var());
  }

  // string accu_var = 3 [json_name = "accuVar"];
  if (!this->_internal_accu_var().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accu_var());
  }

  // .google.api.expr.v1alpha1.Expr iter_range = 2 [json_name = "iterRange"];
  if (this->_internal_has_iter_range()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.iter_range_);
  }

  // .google.api.expr.v1alpha1.Expr accu_init = 4 [json_name = "accuInit"];
  if (this->_internal_has_accu_init()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.accu_init_);
  }

  // .google.api.expr.v1alpha1.Expr loop_condition = 5 [json_name = "loopCondition"];
  if (this->_internal_has_loop_condition()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.loop_condition_);
  }

  // .google.api.expr.v1alpha1.Expr loop_step = 6 [json_name = "loopStep"];
  if (this->_internal_has_loop_step()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.loop_step_);
  }

  // .google.api.expr.v1alpha1.Expr result = 7 [json_name = "result"];
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr_Comprehension::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Expr_Comprehension::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr_Comprehension::GetClassData() const { return &_class_data_; }


void Expr_Comprehension::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Expr_Comprehension*>(&to_msg);
  auto& from = static_cast<const Expr_Comprehension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.Comprehension)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_iter_var().empty()) {
    _this->_internal_set_iter_var(from._internal_iter_var());
  }
  if (!from._internal_accu_var().empty()) {
    _this->_internal_set_accu_var(from._internal_accu_var());
  }
  if (from._internal_has_iter_range()) {
    _this->_internal_mutable_iter_range()->::google::api::expr::v1alpha1::Expr::MergeFrom(
        from._internal_iter_range());
  }
  if (from._internal_has_accu_init()) {
    _this->_internal_mutable_accu_init()->::google::api::expr::v1alpha1::Expr::MergeFrom(
        from._internal_accu_init());
  }
  if (from._internal_has_loop_condition()) {
    _this->_internal_mutable_loop_condition()->::google::api::expr::v1alpha1::Expr::MergeFrom(
        from._internal_loop_condition());
  }
  if (from._internal_has_loop_step()) {
    _this->_internal_mutable_loop_step()->::google::api::expr::v1alpha1::Expr::MergeFrom(
        from._internal_loop_step());
  }
  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::google::api::expr::v1alpha1::Expr::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr_Comprehension::CopyFrom(const Expr_Comprehension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.Comprehension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_Comprehension::IsInitialized() const {
  return true;
}

void Expr_Comprehension::InternalSwap(Expr_Comprehension* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.iter_var_, lhs_arena,
      &other->_impl_.iter_var_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.accu_var_, lhs_arena,
      &other->_impl_.accu_var_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Expr_Comprehension, _impl_.result_)
      + sizeof(Expr_Comprehension::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(Expr_Comprehension, _impl_.iter_range_)>(
          reinterpret_cast<char*>(&_impl_.iter_range_),
          reinterpret_cast<char*>(&other->_impl_.iter_range_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_Comprehension::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[7]);
}

// ===================================================================

class Expr::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::Constant& const_expr(const Expr* msg);
  static const ::google::api::expr::v1alpha1::Expr_Ident& ident_expr(const Expr* msg);
  static const ::google::api::expr::v1alpha1::Expr_Select& select_expr(const Expr* msg);
  static const ::google::api::expr::v1alpha1::Expr_Call& call_expr(const Expr* msg);
  static const ::google::api::expr::v1alpha1::Expr_CreateList& list_expr(const Expr* msg);
  static const ::google::api::expr::v1alpha1::Expr_CreateStruct& struct_expr(const Expr* msg);
  static const ::google::api::expr::v1alpha1::Expr_Comprehension& comprehension_expr(const Expr* msg);
};

const ::google::api::expr::v1alpha1::Constant&
Expr::_Internal::const_expr(const Expr* msg) {
  return *msg->_impl_.expr_kind_.const_expr_;
}
const ::google::api::expr::v1alpha1::Expr_Ident&
Expr::_Internal::ident_expr(const Expr* msg) {
  return *msg->_impl_.expr_kind_.ident_expr_;
}
const ::google::api::expr::v1alpha1::Expr_Select&
Expr::_Internal::select_expr(const Expr* msg) {
  return *msg->_impl_.expr_kind_.select_expr_;
}
const ::google::api::expr::v1alpha1::Expr_Call&
Expr::_Internal::call_expr(const Expr* msg) {
  return *msg->_impl_.expr_kind_.call_expr_;
}
const ::google::api::expr::v1alpha1::Expr_CreateList&
Expr::_Internal::list_expr(const Expr* msg) {
  return *msg->_impl_.expr_kind_.list_expr_;
}
const ::google::api::expr::v1alpha1::Expr_CreateStruct&
Expr::_Internal::struct_expr(const Expr* msg) {
  return *msg->_impl_.expr_kind_.struct_expr_;
}
const ::google::api::expr::v1alpha1::Expr_Comprehension&
Expr::_Internal::comprehension_expr(const Expr* msg) {
  return *msg->_impl_.expr_kind_.comprehension_expr_;
}
void Expr::set_allocated_const_expr(::google::api::expr::v1alpha1::Constant* const_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (const_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(const_expr);
    if (message_arena != submessage_arena) {
      const_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, const_expr, submessage_arena);
    }
    set_has_const_expr();
    _impl_.expr_kind_.const_expr_ = const_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.const_expr)
}
void Expr::set_allocated_ident_expr(::google::api::expr::v1alpha1::Expr_Ident* ident_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (ident_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(ident_expr);
    if (message_arena != submessage_arena) {
      ident_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ident_expr, submessage_arena);
    }
    set_has_ident_expr();
    _impl_.expr_kind_.ident_expr_ = ident_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.ident_expr)
}
void Expr::set_allocated_select_expr(::google::api::expr::v1alpha1::Expr_Select* select_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (select_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_expr);
    if (message_arena != submessage_arena) {
      select_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_expr, submessage_arena);
    }
    set_has_select_expr();
    _impl_.expr_kind_.select_expr_ = select_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.select_expr)
}
void Expr::set_allocated_call_expr(::google::api::expr::v1alpha1::Expr_Call* call_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (call_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(call_expr);
    if (message_arena != submessage_arena) {
      call_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, call_expr, submessage_arena);
    }
    set_has_call_expr();
    _impl_.expr_kind_.call_expr_ = call_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.call_expr)
}
void Expr::set_allocated_list_expr(::google::api::expr::v1alpha1::Expr_CreateList* list_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (list_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(list_expr);
    if (message_arena != submessage_arena) {
      list_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_expr, submessage_arena);
    }
    set_has_list_expr();
    _impl_.expr_kind_.list_expr_ = list_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.list_expr)
}
void Expr::set_allocated_struct_expr(::google::api::expr::v1alpha1::Expr_CreateStruct* struct_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (struct_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(struct_expr);
    if (message_arena != submessage_arena) {
      struct_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, struct_expr, submessage_arena);
    }
    set_has_struct_expr();
    _impl_.expr_kind_.struct_expr_ = struct_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.struct_expr)
}
void Expr::set_allocated_comprehension_expr(::google::api::expr::v1alpha1::Expr_Comprehension* comprehension_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_expr_kind();
  if (comprehension_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(comprehension_expr);
    if (message_arena != submessage_arena) {
      comprehension_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, comprehension_expr, submessage_arena);
    }
    set_has_comprehension_expr();
    _impl_.expr_kind_.comprehension_expr_ = comprehension_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.comprehension_expr)
}
Expr::Expr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr)
}
Expr::Expr(const Expr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Expr* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.expr_kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;
  clear_has_expr_kind();
  switch (from.expr_kind_case()) {
    case kConstExpr: {
      _this->_internal_mutable_const_expr()->::google::api::expr::v1alpha1::Constant::MergeFrom(
          from._internal_const_expr());
      break;
    }
    case kIdentExpr: {
      _this->_internal_mutable_ident_expr()->::google::api::expr::v1alpha1::Expr_Ident::MergeFrom(
          from._internal_ident_expr());
      break;
    }
    case kSelectExpr: {
      _this->_internal_mutable_select_expr()->::google::api::expr::v1alpha1::Expr_Select::MergeFrom(
          from._internal_select_expr());
      break;
    }
    case kCallExpr: {
      _this->_internal_mutable_call_expr()->::google::api::expr::v1alpha1::Expr_Call::MergeFrom(
          from._internal_call_expr());
      break;
    }
    case kListExpr: {
      _this->_internal_mutable_list_expr()->::google::api::expr::v1alpha1::Expr_CreateList::MergeFrom(
          from._internal_list_expr());
      break;
    }
    case kStructExpr: {
      _this->_internal_mutable_struct_expr()->::google::api::expr::v1alpha1::Expr_CreateStruct::MergeFrom(
          from._internal_struct_expr());
      break;
    }
    case kComprehensionExpr: {
      _this->_internal_mutable_comprehension_expr()->::google::api::expr::v1alpha1::Expr_Comprehension::MergeFrom(
          from._internal_comprehension_expr());
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr)
}

inline void Expr::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){int64_t{0}}
    , decltype(_impl_.expr_kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_expr_kind();
}

Expr::~Expr() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Expr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_expr_kind()) {
    clear_expr_kind();
  }
}

void Expr::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Expr::clear_expr_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1alpha1.Expr)
  switch (expr_kind_case()) {
    case kConstExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.expr_kind_.const_expr_;
      }
      break;
    }
    case kIdentExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.expr_kind_.ident_expr_;
      }
      break;
    }
    case kSelectExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.expr_kind_.select_expr_;
      }
      break;
    }
    case kCallExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.expr_kind_.call_expr_;
      }
      break;
    }
    case kListExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.expr_kind_.list_expr_;
      }
      break;
    }
    case kStructExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.expr_kind_.struct_expr_;
      }
      break;
    }
    case kComprehensionExpr: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.expr_kind_.comprehension_expr_;
      }
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = EXPR_KIND_NOT_SET;
}


void Expr::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = int64_t{0};
  clear_expr_kind();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Expr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 2 [json_name = "id"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Constant const_expr = 3 [json_name = "constExpr"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_const_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr.Ident ident_expr = 4 [json_name = "identExpr"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ident_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr.Select select_expr = 5 [json_name = "selectExpr"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_select_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr.Call call_expr = 6 [json_name = "callExpr"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_call_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr.CreateList list_expr = 7 [json_name = "listExpr"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr.CreateStruct struct_expr = 8 [json_name = "structExpr"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_struct_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr.Comprehension comprehension_expr = 9 [json_name = "comprehensionExpr"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_comprehension_expr(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Expr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 2 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_id(), target);
  }

  // .google.api.expr.v1alpha1.Constant const_expr = 3 [json_name = "constExpr"];
  if (_internal_has_const_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::const_expr(this),
        _Internal::const_expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr.Ident ident_expr = 4 [json_name = "identExpr"];
  if (_internal_has_ident_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::ident_expr(this),
        _Internal::ident_expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr.Select select_expr = 5 [json_name = "selectExpr"];
  if (_internal_has_select_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::select_expr(this),
        _Internal::select_expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr.Call call_expr = 6 [json_name = "callExpr"];
  if (_internal_has_call_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::call_expr(this),
        _Internal::call_expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr.CreateList list_expr = 7 [json_name = "listExpr"];
  if (_internal_has_list_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::list_expr(this),
        _Internal::list_expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr.CreateStruct struct_expr = 8 [json_name = "structExpr"];
  if (_internal_has_struct_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::struct_expr(this),
        _Internal::struct_expr(this).GetCachedSize(), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr.Comprehension comprehension_expr = 9 [json_name = "comprehensionExpr"];
  if (_internal_has_comprehension_expr()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::comprehension_expr(this),
        _Internal::comprehension_expr(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr)
  return target;
}

size_t Expr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 2 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  switch (expr_kind_case()) {
    // .google.api.expr.v1alpha1.Constant const_expr = 3 [json_name = "constExpr"];
    case kConstExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.expr_kind_.const_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.Expr.Ident ident_expr = 4 [json_name = "identExpr"];
    case kIdentExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.expr_kind_.ident_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.Expr.Select select_expr = 5 [json_name = "selectExpr"];
    case kSelectExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.expr_kind_.select_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.Expr.Call call_expr = 6 [json_name = "callExpr"];
    case kCallExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.expr_kind_.call_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.Expr.CreateList list_expr = 7 [json_name = "listExpr"];
    case kListExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.expr_kind_.list_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.Expr.CreateStruct struct_expr = 8 [json_name = "structExpr"];
    case kStructExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.expr_kind_.struct_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.Expr.Comprehension comprehension_expr = 9 [json_name = "comprehensionExpr"];
    case kComprehensionExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.expr_kind_.comprehension_expr_);
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Expr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Expr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Expr::GetClassData() const { return &_class_data_; }


void Expr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Expr*>(&to_msg);
  auto& from = static_cast<const Expr&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  switch (from.expr_kind_case()) {
    case kConstExpr: {
      _this->_internal_mutable_const_expr()->::google::api::expr::v1alpha1::Constant::MergeFrom(
          from._internal_const_expr());
      break;
    }
    case kIdentExpr: {
      _this->_internal_mutable_ident_expr()->::google::api::expr::v1alpha1::Expr_Ident::MergeFrom(
          from._internal_ident_expr());
      break;
    }
    case kSelectExpr: {
      _this->_internal_mutable_select_expr()->::google::api::expr::v1alpha1::Expr_Select::MergeFrom(
          from._internal_select_expr());
      break;
    }
    case kCallExpr: {
      _this->_internal_mutable_call_expr()->::google::api::expr::v1alpha1::Expr_Call::MergeFrom(
          from._internal_call_expr());
      break;
    }
    case kListExpr: {
      _this->_internal_mutable_list_expr()->::google::api::expr::v1alpha1::Expr_CreateList::MergeFrom(
          from._internal_list_expr());
      break;
    }
    case kStructExpr: {
      _this->_internal_mutable_struct_expr()->::google::api::expr::v1alpha1::Expr_CreateStruct::MergeFrom(
          from._internal_struct_expr());
      break;
    }
    case kComprehensionExpr: {
      _this->_internal_mutable_comprehension_expr()->::google::api::expr::v1alpha1::Expr_Comprehension::MergeFrom(
          from._internal_comprehension_expr());
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Expr::CopyFrom(const Expr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr::IsInitialized() const {
  return true;
}

void Expr::InternalSwap(Expr* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
  swap(_impl_.expr_kind_, other->_impl_.expr_kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[8]);
}

// ===================================================================

class Constant::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Duration& duration_value(const Constant* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& timestamp_value(const Constant* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Duration&
Constant::_Internal::duration_value(const Constant* msg) {
  return *msg->_impl_.constant_kind_.duration_value_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Constant::_Internal::timestamp_value(const Constant* msg) {
  return *msg->_impl_.constant_kind_.timestamp_value_;
}
void Constant::set_allocated_duration_value(::PROTOBUF_NAMESPACE_ID::Duration* duration_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_constant_kind();
  if (duration_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(duration_value));
    if (message_arena != submessage_arena) {
      duration_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, duration_value, submessage_arena);
    }
    set_has_duration_value();
    _impl_.constant_kind_.duration_value_ = duration_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Constant.duration_value)
}
void Constant::clear_duration_value() {
  if (_internal_has_duration_value()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.constant_kind_.duration_value_;
    }
    clear_has_constant_kind();
  }
}
void Constant::set_allocated_timestamp_value(::PROTOBUF_NAMESPACE_ID::Timestamp* timestamp_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_constant_kind();
  if (timestamp_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timestamp_value));
    if (message_arena != submessage_arena) {
      timestamp_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timestamp_value, submessage_arena);
    }
    set_has_timestamp_value();
    _impl_.constant_kind_.timestamp_value_ = timestamp_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Constant.timestamp_value)
}
void Constant::clear_timestamp_value() {
  if (_internal_has_timestamp_value()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.constant_kind_.timestamp_value_;
    }
    clear_has_constant_kind();
  }
}
Constant::Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Constant)
}
Constant::Constant(const Constant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Constant* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.constant_kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_constant_kind();
  switch (from.constant_kind_case()) {
    case kNullValue: {
      _this->_internal_set_null_value(from._internal_null_value());
      break;
    }
    case kBoolValue: {
      _this->_internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kInt64Value: {
      _this->_internal_set_int64_value(from._internal_int64_value());
      break;
    }
    case kUint64Value: {
      _this->_internal_set_uint64_value(from._internal_uint64_value());
      break;
    }
    case kDoubleValue: {
      _this->_internal_set_double_value(from._internal_double_value());
      break;
    }
    case kStringValue: {
      _this->_internal_set_string_value(from._internal_string_value());
      break;
    }
    case kBytesValue: {
      _this->_internal_set_bytes_value(from._internal_bytes_value());
      break;
    }
    case kDurationValue: {
      _this->_internal_mutable_duration_value()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(
          from._internal_duration_value());
      break;
    }
    case kTimestampValue: {
      _this->_internal_mutable_timestamp_value()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
          from._internal_timestamp_value());
      break;
    }
    case CONSTANT_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Constant)
}

inline void Constant::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.constant_kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_constant_kind();
}

Constant::~Constant() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Constant)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Constant::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_constant_kind()) {
    clear_constant_kind();
  }
}

void Constant::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Constant::clear_constant_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1alpha1.Constant)
  switch (constant_kind_case()) {
    case kNullValue: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kUint64Value: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      _impl_.constant_kind_.string_value_.Destroy();
      break;
    }
    case kBytesValue: {
      _impl_.constant_kind_.bytes_value_.Destroy();
      break;
    }
    case kDurationValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.constant_kind_.duration_value_;
      }
      break;
    }
    case kTimestampValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.constant_kind_.timestamp_value_;
      }
      break;
    }
    case CONSTANT_KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CONSTANT_KIND_NOT_SET;
}


void Constant::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Constant)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_constant_kind();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Constant::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.NullValue null_value = 1 [json_name = "nullValue"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_null_value(static_cast<::PROTOBUF_NAMESPACE_ID::NullValue>(val));
        } else
          goto handle_unusual;
        continue;
      // bool bool_value = 2 [json_name = "boolValue"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_bool_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 int64_value = 3 [json_name = "int64Value"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _internal_set_int64_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 uint64_value = 4 [json_name = "uint64Value"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _internal_set_uint64_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double double_value = 5 [json_name = "doubleValue"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          _internal_set_double_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // string string_value = 6 [json_name = "stringValue"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_string_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1alpha1.Constant.string_value"));
        } else
          goto handle_unusual;
        continue;
      // bytes bytes_value = 7 [json_name = "bytesValue"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_bytes_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Duration duration_value = 8 [json_name = "durationValue", deprecated = true];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_duration_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp timestamp_value = 9 [json_name = "timestampValue", deprecated = true];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Constant::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Constant)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.NullValue null_value = 1 [json_name = "nullValue"];
  if (_internal_has_null_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_null_value(), target);
  }

  // bool bool_value = 2 [json_name = "boolValue"];
  if (_internal_has_bool_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_bool_value(), target);
  }

  // int64 int64_value = 3 [json_name = "int64Value"];
  if (_internal_has_int64_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_int64_value(), target);
  }

  // uint64 uint64_value = 4 [json_name = "uint64Value"];
  if (_internal_has_uint64_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_uint64_value(), target);
  }

  // double double_value = 5 [json_name = "doubleValue"];
  if (_internal_has_double_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(5, this->_internal_double_value(), target);
  }

  // string string_value = 6 [json_name = "stringValue"];
  if (_internal_has_string_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_value().data(), static_cast<int>(this->_internal_string_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Constant.string_value");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_string_value(), target);
  }

  // bytes bytes_value = 7 [json_name = "bytesValue"];
  if (_internal_has_bytes_value()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_bytes_value(), target);
  }

  // .google.protobuf.Duration duration_value = 8 [json_name = "durationValue", deprecated = true];
  if (_internal_has_duration_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::duration_value(this),
        _Internal::duration_value(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp timestamp_value = 9 [json_name = "timestampValue", deprecated = true];
  if (_internal_has_timestamp_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::timestamp_value(this),
        _Internal::timestamp_value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Constant)
  return target;
}

size_t Constant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Constant)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (constant_kind_case()) {
    // .google.protobuf.NullValue null_value = 1 [json_name = "nullValue"];
    case kNullValue: {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_null_value());
      break;
    }
    // bool bool_value = 2 [json_name = "boolValue"];
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // int64 int64_value = 3 [json_name = "int64Value"];
    case kInt64Value: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_int64_value());
      break;
    }
    // uint64 uint64_value = 4 [json_name = "uint64Value"];
    case kUint64Value: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_uint64_value());
      break;
    }
    // double double_value = 5 [json_name = "doubleValue"];
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // string string_value = 6 [json_name = "stringValue"];
    case kStringValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_value());
      break;
    }
    // bytes bytes_value = 7 [json_name = "bytesValue"];
    case kBytesValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_bytes_value());
      break;
    }
    // .google.protobuf.Duration duration_value = 8 [json_name = "durationValue", deprecated = true];
    case kDurationValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.constant_kind_.duration_value_);
      break;
    }
    // .google.protobuf.Timestamp timestamp_value = 9 [json_name = "timestampValue", deprecated = true];
    case kTimestampValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.constant_kind_.timestamp_value_);
      break;
    }
    case CONSTANT_KIND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Constant::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Constant::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Constant::GetClassData() const { return &_class_data_; }


void Constant::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Constant*>(&to_msg);
  auto& from = static_cast<const Constant&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Constant)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.constant_kind_case()) {
    case kNullValue: {
      _this->_internal_set_null_value(from._internal_null_value());
      break;
    }
    case kBoolValue: {
      _this->_internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kInt64Value: {
      _this->_internal_set_int64_value(from._internal_int64_value());
      break;
    }
    case kUint64Value: {
      _this->_internal_set_uint64_value(from._internal_uint64_value());
      break;
    }
    case kDoubleValue: {
      _this->_internal_set_double_value(from._internal_double_value());
      break;
    }
    case kStringValue: {
      _this->_internal_set_string_value(from._internal_string_value());
      break;
    }
    case kBytesValue: {
      _this->_internal_set_bytes_value(from._internal_bytes_value());
      break;
    }
    case kDurationValue: {
      _this->_internal_mutable_duration_value()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(
          from._internal_duration_value());
      break;
    }
    case kTimestampValue: {
      _this->_internal_mutable_timestamp_value()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
          from._internal_timestamp_value());
      break;
    }
    case CONSTANT_KIND_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Constant::CopyFrom(const Constant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Constant::IsInitialized() const {
  return true;
}

void Constant::InternalSwap(Constant* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.constant_kind_, other->_impl_.constant_kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Constant::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[9]);
}

// ===================================================================

SourceInfo_PositionsEntry_DoNotUse::SourceInfo_PositionsEntry_DoNotUse() {}
SourceInfo_PositionsEntry_DoNotUse::SourceInfo_PositionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SourceInfo_PositionsEntry_DoNotUse::MergeFrom(const SourceInfo_PositionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SourceInfo_PositionsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[10]);
}

// ===================================================================

SourceInfo_MacroCallsEntry_DoNotUse::SourceInfo_MacroCallsEntry_DoNotUse() {}
SourceInfo_MacroCallsEntry_DoNotUse::SourceInfo_MacroCallsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SourceInfo_MacroCallsEntry_DoNotUse::MergeFrom(const SourceInfo_MacroCallsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SourceInfo_MacroCallsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[11]);
}

// ===================================================================

class SourceInfo::_Internal {
 public:
};

SourceInfo::SourceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &SourceInfo::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.SourceInfo)
}
SourceInfo::SourceInfo(const SourceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SourceInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.line_offsets_){from._impl_.line_offsets_}
    , /*decltype(_impl_._line_offsets_cached_byte_size_)*/{0}
    , /*decltype(_impl_.positions_)*/{}
    , /*decltype(_impl_.macro_calls_)*/{}
    , decltype(_impl_.syntax_version_){}
    , decltype(_impl_.location_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.positions_.MergeFrom(from._impl_.positions_);
  _this->_impl_.macro_calls_.MergeFrom(from._impl_.macro_calls_);
  _impl_.syntax_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.syntax_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_syntax_version().empty()) {
    _this->_impl_.syntax_version_.Set(from._internal_syntax_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    _this->_impl_.location_.Set(from._internal_location(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.SourceInfo)
}

inline void SourceInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.line_offsets_){arena}
    , /*decltype(_impl_._line_offsets_cached_byte_size_)*/{0}
    , /*decltype(_impl_.positions_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.macro_calls_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.syntax_version_){}
    , decltype(_impl_.location_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.syntax_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.syntax_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SourceInfo::~SourceInfo() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.SourceInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void SourceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.line_offsets_.~RepeatedField();
  _impl_.positions_.Destruct();
  _impl_.positions_.~MapField();
  _impl_.macro_calls_.Destruct();
  _impl_.macro_calls_.~MapField();
  _impl_.syntax_version_.Destroy();
  _impl_.location_.Destroy();
}

void SourceInfo::ArenaDtor(void* object) {
  SourceInfo* _this = reinterpret_cast< SourceInfo* >(object);
  _this->_impl_.positions_.Destruct();
  _this->_impl_.macro_calls_.Destruct();
}
void SourceInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SourceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.SourceInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.line_offsets_.Clear();
  _impl_.positions_.Clear();
  _impl_.macro_calls_.Clear();
  _impl_.syntax_version_.ClearToEmpty();
  _impl_.location_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourceInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string syntax_version = 1 [json_name = "syntaxVersion"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_syntax_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1alpha1.SourceInfo.syntax_version"));
        } else
          goto handle_unusual;
        continue;
      // string location = 2 [json_name = "location"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1alpha1.SourceInfo.location"));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 line_offsets = 3 [json_name = "lineOffsets"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_line_offsets(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_line_offsets(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<int64, int32> positions = 4 [json_name = "positions"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.positions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<int64, .google.api.expr.v1alpha1.Expr> macro_calls = 5 [json_name = "macroCalls"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.macro_calls_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SourceInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.SourceInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string syntax_version = 1 [json_name = "syntaxVersion"];
  if (!this->_internal_syntax_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_syntax_version().data(), static_cast<int>(this->_internal_syntax_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.SourceInfo.syntax_version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_syntax_version(), target);
  }

  // string location = 2 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.SourceInfo.location");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_location(), target);
  }

  // repeated int32 line_offsets = 3 [json_name = "lineOffsets"];
  {
    int byte_size = _impl_._line_offsets_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_line_offsets(), byte_size, target);
    }
  }

  // map<int64, int32> positions = 4 [json_name = "positions"];
  if (!this->_internal_positions().empty()) {
    using MapType = ::_pb::Map<int64_t, int32_t>;
    using WireHelper = SourceInfo_PositionsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_positions();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int64, .google.api.expr.v1alpha1.Expr> macro_calls = 5 [json_name = "macroCalls"];
  if (!this->_internal_macro_calls().empty()) {
    using MapType = ::_pb::Map<int64_t, ::google::api::expr::v1alpha1::Expr>;
    using WireHelper = SourceInfo_MacroCallsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_macro_calls();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.SourceInfo)
  return target;
}

size_t SourceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.SourceInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 line_offsets = 3 [json_name = "lineOffsets"];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.line_offsets_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._line_offsets_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<int64, int32> positions = 4 [json_name = "positions"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_positions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, int32_t >::const_iterator
      it = this->_internal_positions().begin();
      it != this->_internal_positions().end(); ++it) {
    total_size += SourceInfo_PositionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int64, .google.api.expr.v1alpha1.Expr> macro_calls = 5 [json_name = "macroCalls"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_macro_calls_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::google::api::expr::v1alpha1::Expr >::const_iterator
      it = this->_internal_macro_calls().begin();
      it != this->_internal_macro_calls().end(); ++it) {
    total_size += SourceInfo_MacroCallsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string syntax_version = 1 [json_name = "syntaxVersion"];
  if (!this->_internal_syntax_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_syntax_version());
  }

  // string location = 2 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SourceInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SourceInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SourceInfo::GetClassData() const { return &_class_data_; }


void SourceInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SourceInfo*>(&to_msg);
  auto& from = static_cast<const SourceInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.SourceInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.line_offsets_.MergeFrom(from._impl_.line_offsets_);
  _this->_impl_.positions_.MergeFrom(from._impl_.positions_);
  _this->_impl_.macro_calls_.MergeFrom(from._impl_.macro_calls_);
  if (!from._internal_syntax_version().empty()) {
    _this->_internal_set_syntax_version(from._internal_syntax_version());
  }
  if (!from._internal_location().empty()) {
    _this->_internal_set_location(from._internal_location());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SourceInfo::CopyFrom(const SourceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.SourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceInfo::IsInitialized() const {
  return true;
}

void SourceInfo::InternalSwap(SourceInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.line_offsets_.InternalSwap(&other->_impl_.line_offsets_);
  _impl_.positions_.InternalSwap(&other->_impl_.positions_);
  _impl_.macro_calls_.InternalSwap(&other->_impl_.macro_calls_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.syntax_version_, lhs_arena,
      &other->_impl_.syntax_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.location_, lhs_arena,
      &other->_impl_.location_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[12]);
}

// ===================================================================

class SourcePosition::_Internal {
 public:
};

SourcePosition::SourcePosition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.SourcePosition)
}
SourcePosition::SourcePosition(const SourcePosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SourcePosition* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.location_){}
    , decltype(_impl_.offset_){}
    , decltype(_impl_.line_){}
    , decltype(_impl_.column_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_location().empty()) {
    _this->_impl_.location_.Set(from._internal_location(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.offset_, &from._impl_.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.column_) -
    reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.column_));
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.SourcePosition)
}

inline void SourcePosition::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.location_){}
    , decltype(_impl_.offset_){0}
    , decltype(_impl_.line_){0}
    , decltype(_impl_.column_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SourcePosition::~SourcePosition() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.SourcePosition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SourcePosition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.location_.Destroy();
}

void SourcePosition::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SourcePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.SourcePosition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.location_.ClearToEmpty();
  ::memset(&_impl_.offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.column_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.column_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourcePosition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string location = 1 [json_name = "location"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "google.api.expr.v1alpha1.SourcePosition.location"));
        } else
          goto handle_unusual;
        continue;
      // int32 offset = 2 [json_name = "offset"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 line = 3 [json_name = "line"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.line_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 column = 4 [json_name = "column"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.column_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SourcePosition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.SourcePosition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.SourcePosition.location");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location(), target);
  }

  // int32 offset = 2 [json_name = "offset"];
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_offset(), target);
  }

  // int32 line = 3 [json_name = "line"];
  if (this->_internal_line() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_line(), target);
  }

  // int32 column = 4 [json_name = "column"];
  if (this->_internal_column() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_column(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.SourcePosition)
  return target;
}

size_t SourcePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.SourcePosition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location = 1 [json_name = "location"];
  if (!this->_internal_location().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // int32 offset = 2 [json_name = "offset"];
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_offset());
  }

  // int32 line = 3 [json_name = "line"];
  if (this->_internal_line() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_line());
  }

  // int32 column = 4 [json_name = "column"];
  if (this->_internal_column() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_column());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SourcePosition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SourcePosition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SourcePosition::GetClassData() const { return &_class_data_; }


void SourcePosition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SourcePosition*>(&to_msg);
  auto& from = static_cast<const SourcePosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.SourcePosition)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_location().empty()) {
    _this->_internal_set_location(from._internal_location());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  if (from._internal_line() != 0) {
    _this->_internal_set_line(from._internal_line());
  }
  if (from._internal_column() != 0) {
    _this->_internal_set_column(from._internal_column());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SourcePosition::CopyFrom(const SourcePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.SourcePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourcePosition::IsInitialized() const {
  return true;
}

void SourcePosition::InternalSwap(SourcePosition* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.location_, lhs_arena,
      &other->_impl_.location_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SourcePosition, _impl_.column_)
      + sizeof(SourcePosition::_impl_.column_)
      - PROTOBUF_FIELD_OFFSET(SourcePosition, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SourcePosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_getter, &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once,
      file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::ParsedExpr*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::ParsedExpr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::ParsedExpr >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_Ident*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_Ident >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_Ident >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_Select*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_Select >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_Select >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_Call*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_Call >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_Call >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_CreateList*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_CreateList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_CreateList >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_CreateStruct_Entry*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_CreateStruct_Entry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_CreateStruct_Entry >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_CreateStruct*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_CreateStruct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_CreateStruct >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_Comprehension*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_Comprehension >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_Comprehension >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Constant*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Constant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Constant >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::SourceInfo*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::SourceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::SourceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::SourcePosition*
Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::SourcePosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::SourcePosition >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
