// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot/v1/robot.proto

#include "robot/v1/robot.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace robot {
namespace v1 {
PROTOBUF_CONSTEXPR FrameSystemConfig::FrameSystemConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.frame_)*/nullptr
  , /*decltype(_impl_.kinematics_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FrameSystemConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameSystemConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameSystemConfigDefaultTypeInternal() {}
  union {
    FrameSystemConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameSystemConfigDefaultTypeInternal _FrameSystemConfig_default_instance_;
PROTOBUF_CONSTEXPR FrameSystemConfigRequest::FrameSystemConfigRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.supplemental_transforms_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FrameSystemConfigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameSystemConfigRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameSystemConfigRequestDefaultTypeInternal() {}
  union {
    FrameSystemConfigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameSystemConfigRequestDefaultTypeInternal _FrameSystemConfigRequest_default_instance_;
PROTOBUF_CONSTEXPR FrameSystemConfigResponse::FrameSystemConfigResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.frame_system_configs_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FrameSystemConfigResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameSystemConfigResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameSystemConfigResponseDefaultTypeInternal() {}
  union {
    FrameSystemConfigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameSystemConfigResponseDefaultTypeInternal _FrameSystemConfigResponse_default_instance_;
PROTOBUF_CONSTEXPR TransformPoseRequest::TransformPoseRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.supplemental_transforms_)*/{}
  , /*decltype(_impl_.destination_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.source_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformPoseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformPoseRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformPoseRequestDefaultTypeInternal() {}
  union {
    TransformPoseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformPoseRequestDefaultTypeInternal _TransformPoseRequest_default_instance_;
PROTOBUF_CONSTEXPR TransformPoseResponse::TransformPoseResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pose_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformPoseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformPoseResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformPoseResponseDefaultTypeInternal() {}
  union {
    TransformPoseResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformPoseResponseDefaultTypeInternal _TransformPoseResponse_default_instance_;
PROTOBUF_CONSTEXPR TransformPCDRequest::TransformPCDRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.point_cloud_pcd_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.source_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.destination_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformPCDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformPCDRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformPCDRequestDefaultTypeInternal() {}
  union {
    TransformPCDRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformPCDRequestDefaultTypeInternal _TransformPCDRequest_default_instance_;
PROTOBUF_CONSTEXPR TransformPCDResponse::TransformPCDResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.point_cloud_pcd_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransformPCDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransformPCDResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransformPCDResponseDefaultTypeInternal() {}
  union {
    TransformPCDResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransformPCDResponseDefaultTypeInternal _TransformPCDResponse_default_instance_;
PROTOBUF_CONSTEXPR ResourceNamesRequest::ResourceNamesRequest(
    ::_pbi::ConstantInitialized) {}
struct ResourceNamesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceNamesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceNamesRequestDefaultTypeInternal() {}
  union {
    ResourceNamesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceNamesRequestDefaultTypeInternal _ResourceNamesRequest_default_instance_;
PROTOBUF_CONSTEXPR ResourceNamesResponse::ResourceNamesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resources_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResourceNamesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceNamesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceNamesResponseDefaultTypeInternal() {}
  union {
    ResourceNamesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceNamesResponseDefaultTypeInternal _ResourceNamesResponse_default_instance_;
PROTOBUF_CONSTEXPR ResourceRPCSubtype::ResourceRPCSubtype(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.proto_service_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.subtype_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResourceRPCSubtypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceRPCSubtypeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceRPCSubtypeDefaultTypeInternal() {}
  union {
    ResourceRPCSubtype _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceRPCSubtypeDefaultTypeInternal _ResourceRPCSubtype_default_instance_;
PROTOBUF_CONSTEXPR ResourceRPCSubtypesRequest::ResourceRPCSubtypesRequest(
    ::_pbi::ConstantInitialized) {}
struct ResourceRPCSubtypesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceRPCSubtypesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceRPCSubtypesRequestDefaultTypeInternal() {}
  union {
    ResourceRPCSubtypesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceRPCSubtypesRequestDefaultTypeInternal _ResourceRPCSubtypesRequest_default_instance_;
PROTOBUF_CONSTEXPR ResourceRPCSubtypesResponse::ResourceRPCSubtypesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resource_rpc_subtypes_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResourceRPCSubtypesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceRPCSubtypesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceRPCSubtypesResponseDefaultTypeInternal() {}
  union {
    ResourceRPCSubtypesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceRPCSubtypesResponseDefaultTypeInternal _ResourceRPCSubtypesResponse_default_instance_;
PROTOBUF_CONSTEXPR Operation::Operation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.method_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.arguments_)*/nullptr
  , /*decltype(_impl_.started_)*/nullptr} {}
struct OperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationDefaultTypeInternal() {}
  union {
    Operation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationDefaultTypeInternal _Operation_default_instance_;
PROTOBUF_CONSTEXPR GetOperationsRequest::GetOperationsRequest(
    ::_pbi::ConstantInitialized) {}
struct GetOperationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOperationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOperationsRequestDefaultTypeInternal() {}
  union {
    GetOperationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOperationsRequestDefaultTypeInternal _GetOperationsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetOperationsResponse::GetOperationsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.operations_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetOperationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOperationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOperationsResponseDefaultTypeInternal() {}
  union {
    GetOperationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOperationsResponseDefaultTypeInternal _GetOperationsResponse_default_instance_;
PROTOBUF_CONSTEXPR CancelOperationRequest::CancelOperationRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CancelOperationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelOperationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelOperationRequestDefaultTypeInternal() {}
  union {
    CancelOperationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelOperationRequestDefaultTypeInternal _CancelOperationRequest_default_instance_;
PROTOBUF_CONSTEXPR CancelOperationResponse::CancelOperationResponse(
    ::_pbi::ConstantInitialized) {}
struct CancelOperationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelOperationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelOperationResponseDefaultTypeInternal() {}
  union {
    CancelOperationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelOperationResponseDefaultTypeInternal _CancelOperationResponse_default_instance_;
PROTOBUF_CONSTEXPR BlockForOperationRequest::BlockForOperationRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BlockForOperationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockForOperationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockForOperationRequestDefaultTypeInternal() {}
  union {
    BlockForOperationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockForOperationRequestDefaultTypeInternal _BlockForOperationRequest_default_instance_;
PROTOBUF_CONSTEXPR BlockForOperationResponse::BlockForOperationResponse(
    ::_pbi::ConstantInitialized) {}
struct BlockForOperationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockForOperationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockForOperationResponseDefaultTypeInternal() {}
  union {
    BlockForOperationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockForOperationResponseDefaultTypeInternal _BlockForOperationResponse_default_instance_;
PROTOBUF_CONSTEXPR PeerConnectionInfo::PeerConnectionInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.remote_address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.local_address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/0} {}
struct PeerConnectionInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerConnectionInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerConnectionInfoDefaultTypeInternal() {}
  union {
    PeerConnectionInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerConnectionInfoDefaultTypeInternal _PeerConnectionInfo_default_instance_;
PROTOBUF_CONSTEXPR Session::Session(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.peer_connection_info_)*/nullptr} {}
struct SessionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionDefaultTypeInternal() {}
  union {
    Session _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionDefaultTypeInternal _Session_default_instance_;
PROTOBUF_CONSTEXPR GetSessionsRequest::GetSessionsRequest(
    ::_pbi::ConstantInitialized) {}
struct GetSessionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSessionsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSessionsRequestDefaultTypeInternal() {}
  union {
    GetSessionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSessionsRequestDefaultTypeInternal _GetSessionsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetSessionsResponse::GetSessionsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sessions_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSessionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSessionsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSessionsResponseDefaultTypeInternal() {}
  union {
    GetSessionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSessionsResponseDefaultTypeInternal _GetSessionsResponse_default_instance_;
PROTOBUF_CONSTEXPR DiscoveryQuery::DiscoveryQuery(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.subtype_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.model_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DiscoveryQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiscoveryQueryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiscoveryQueryDefaultTypeInternal() {}
  union {
    DiscoveryQuery _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiscoveryQueryDefaultTypeInternal _DiscoveryQuery_default_instance_;
PROTOBUF_CONSTEXPR Discovery::Discovery(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.query_)*/nullptr
  , /*decltype(_impl_.results_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DiscoveryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiscoveryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiscoveryDefaultTypeInternal() {}
  union {
    Discovery _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiscoveryDefaultTypeInternal _Discovery_default_instance_;
PROTOBUF_CONSTEXPR DiscoverComponentsRequest::DiscoverComponentsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.queries_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DiscoverComponentsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiscoverComponentsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiscoverComponentsRequestDefaultTypeInternal() {}
  union {
    DiscoverComponentsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiscoverComponentsRequestDefaultTypeInternal _DiscoverComponentsRequest_default_instance_;
PROTOBUF_CONSTEXPR DiscoverComponentsResponse::DiscoverComponentsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.discovery_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DiscoverComponentsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiscoverComponentsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiscoverComponentsResponseDefaultTypeInternal() {}
  union {
    DiscoverComponentsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiscoverComponentsResponseDefaultTypeInternal _DiscoverComponentsResponse_default_instance_;
PROTOBUF_CONSTEXPR Status::Status(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/nullptr
  , /*decltype(_impl_.status_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusDefaultTypeInternal _Status_default_instance_;
PROTOBUF_CONSTEXPR GetStatusRequest::GetStatusRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resource_names_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStatusRequestDefaultTypeInternal() {}
  union {
    GetStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStatusRequestDefaultTypeInternal _GetStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR GetStatusResponse::GetStatusResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.status_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStatusResponseDefaultTypeInternal() {}
  union {
    GetStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStatusResponseDefaultTypeInternal _GetStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR StreamStatusRequest::StreamStatusRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resource_names_)*/{}
  , /*decltype(_impl_.every_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamStatusRequestDefaultTypeInternal() {}
  union {
    StreamStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamStatusRequestDefaultTypeInternal _StreamStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR StreamStatusResponse::StreamStatusResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.status_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamStatusResponseDefaultTypeInternal() {}
  union {
    StreamStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamStatusResponseDefaultTypeInternal _StreamStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR StopExtraParameters::StopExtraParameters(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/nullptr
  , /*decltype(_impl_.params_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StopExtraParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopExtraParametersDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopExtraParametersDefaultTypeInternal() {}
  union {
    StopExtraParameters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopExtraParametersDefaultTypeInternal _StopExtraParameters_default_instance_;
PROTOBUF_CONSTEXPR StopAllRequest::StopAllRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.extra_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StopAllRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopAllRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopAllRequestDefaultTypeInternal() {}
  union {
    StopAllRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopAllRequestDefaultTypeInternal _StopAllRequest_default_instance_;
PROTOBUF_CONSTEXPR StopAllResponse::StopAllResponse(
    ::_pbi::ConstantInitialized) {}
struct StopAllResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopAllResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopAllResponseDefaultTypeInternal() {}
  union {
    StopAllResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopAllResponseDefaultTypeInternal _StopAllResponse_default_instance_;
PROTOBUF_CONSTEXPR StartSessionRequest::StartSessionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resume_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StartSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartSessionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartSessionRequestDefaultTypeInternal() {}
  union {
    StartSessionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartSessionRequestDefaultTypeInternal _StartSessionRequest_default_instance_;
PROTOBUF_CONSTEXPR StartSessionResponse::StartSessionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.heartbeat_window_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StartSessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartSessionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartSessionResponseDefaultTypeInternal() {}
  union {
    StartSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartSessionResponseDefaultTypeInternal _StartSessionResponse_default_instance_;
PROTOBUF_CONSTEXPR SendSessionHeartbeatRequest::SendSessionHeartbeatRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SendSessionHeartbeatRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendSessionHeartbeatRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendSessionHeartbeatRequestDefaultTypeInternal() {}
  union {
    SendSessionHeartbeatRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendSessionHeartbeatRequestDefaultTypeInternal _SendSessionHeartbeatRequest_default_instance_;
PROTOBUF_CONSTEXPR SendSessionHeartbeatResponse::SendSessionHeartbeatResponse(
    ::_pbi::ConstantInitialized) {}
struct SendSessionHeartbeatResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendSessionHeartbeatResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendSessionHeartbeatResponseDefaultTypeInternal() {}
  union {
    SendSessionHeartbeatResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendSessionHeartbeatResponseDefaultTypeInternal _SendSessionHeartbeatResponse_default_instance_;
}  // namespace v1
}  // namespace robot
}  // namespace viam
static ::_pb::Metadata file_level_metadata_robot_2fv1_2frobot_2eproto[39];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_robot_2fv1_2frobot_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_robot_2fv1_2frobot_2eproto = nullptr;

const uint32_t TableStruct_robot_2fv1_2frobot_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfig, _impl_.frame_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfig, _impl_.kinematics_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfigRequest, _impl_.supplemental_transforms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::FrameSystemConfigResponse, _impl_.frame_system_configs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPoseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPoseRequest, _impl_.source_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPoseRequest, _impl_.destination_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPoseRequest, _impl_.supplemental_transforms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPoseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPoseResponse, _impl_.pose_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPCDRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPCDRequest, _impl_.point_cloud_pcd_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPCDRequest, _impl_.source_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPCDRequest, _impl_.destination_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPCDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::TransformPCDResponse, _impl_.point_cloud_pcd_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceNamesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceNamesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceNamesResponse, _impl_.resources_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceRPCSubtype, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceRPCSubtype, _impl_.subtype_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceRPCSubtype, _impl_.proto_service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceRPCSubtypesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceRPCSubtypesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::ResourceRPCSubtypesResponse, _impl_.resource_rpc_subtypes_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, _impl_.method_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, _impl_.arguments_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, _impl_.started_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Operation, _impl_.session_id_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetOperationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetOperationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetOperationsResponse, _impl_.operations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::CancelOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::CancelOperationRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::CancelOperationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::BlockForOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::BlockForOperationRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::BlockForOperationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::PeerConnectionInfo, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::PeerConnectionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::PeerConnectionInfo, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::PeerConnectionInfo, _impl_.remote_address_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::PeerConnectionInfo, _impl_.local_address_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Session, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Session, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Session, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Session, _impl_.peer_connection_info_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetSessionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetSessionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetSessionsResponse, _impl_.sessions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoveryQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoveryQuery, _impl_.subtype_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoveryQuery, _impl_.model_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Discovery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Discovery, _impl_.query_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Discovery, _impl_.results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoverComponentsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoverComponentsRequest, _impl_.queries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoverComponentsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::DiscoverComponentsResponse, _impl_.discovery_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Status, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::Status, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetStatusRequest, _impl_.resource_names_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::GetStatusResponse, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StreamStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StreamStatusRequest, _impl_.resource_names_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StreamStatusRequest, _impl_.every_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StreamStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StreamStatusResponse, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StopExtraParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StopExtraParameters, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StopExtraParameters, _impl_.params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StopAllRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StopAllRequest, _impl_.extra_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StopAllResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StartSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StartSessionRequest, _impl_.resume_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StartSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StartSessionResponse, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::StartSessionResponse, _impl_.heartbeat_window_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::SendSessionHeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::SendSessionHeartbeatRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::robot::v1::SendSessionHeartbeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::robot::v1::FrameSystemConfig)},
  { 8, -1, -1, sizeof(::viam::robot::v1::FrameSystemConfigRequest)},
  { 15, -1, -1, sizeof(::viam::robot::v1::FrameSystemConfigResponse)},
  { 22, -1, -1, sizeof(::viam::robot::v1::TransformPoseRequest)},
  { 31, -1, -1, sizeof(::viam::robot::v1::TransformPoseResponse)},
  { 38, -1, -1, sizeof(::viam::robot::v1::TransformPCDRequest)},
  { 47, -1, -1, sizeof(::viam::robot::v1::TransformPCDResponse)},
  { 54, -1, -1, sizeof(::viam::robot::v1::ResourceNamesRequest)},
  { 60, -1, -1, sizeof(::viam::robot::v1::ResourceNamesResponse)},
  { 67, -1, -1, sizeof(::viam::robot::v1::ResourceRPCSubtype)},
  { 75, -1, -1, sizeof(::viam::robot::v1::ResourceRPCSubtypesRequest)},
  { 81, -1, -1, sizeof(::viam::robot::v1::ResourceRPCSubtypesResponse)},
  { 88, 99, -1, sizeof(::viam::robot::v1::Operation)},
  { 104, -1, -1, sizeof(::viam::robot::v1::GetOperationsRequest)},
  { 110, -1, -1, sizeof(::viam::robot::v1::GetOperationsResponse)},
  { 117, -1, -1, sizeof(::viam::robot::v1::CancelOperationRequest)},
  { 124, -1, -1, sizeof(::viam::robot::v1::CancelOperationResponse)},
  { 130, -1, -1, sizeof(::viam::robot::v1::BlockForOperationRequest)},
  { 137, -1, -1, sizeof(::viam::robot::v1::BlockForOperationResponse)},
  { 143, 152, -1, sizeof(::viam::robot::v1::PeerConnectionInfo)},
  { 155, 163, -1, sizeof(::viam::robot::v1::Session)},
  { 165, -1, -1, sizeof(::viam::robot::v1::GetSessionsRequest)},
  { 171, -1, -1, sizeof(::viam::robot::v1::GetSessionsResponse)},
  { 178, -1, -1, sizeof(::viam::robot::v1::DiscoveryQuery)},
  { 186, -1, -1, sizeof(::viam::robot::v1::Discovery)},
  { 194, -1, -1, sizeof(::viam::robot::v1::DiscoverComponentsRequest)},
  { 201, -1, -1, sizeof(::viam::robot::v1::DiscoverComponentsResponse)},
  { 208, -1, -1, sizeof(::viam::robot::v1::Status)},
  { 216, -1, -1, sizeof(::viam::robot::v1::GetStatusRequest)},
  { 223, -1, -1, sizeof(::viam::robot::v1::GetStatusResponse)},
  { 230, -1, -1, sizeof(::viam::robot::v1::StreamStatusRequest)},
  { 238, -1, -1, sizeof(::viam::robot::v1::StreamStatusResponse)},
  { 245, -1, -1, sizeof(::viam::robot::v1::StopExtraParameters)},
  { 253, -1, -1, sizeof(::viam::robot::v1::StopAllRequest)},
  { 260, -1, -1, sizeof(::viam::robot::v1::StopAllResponse)},
  { 266, -1, -1, sizeof(::viam::robot::v1::StartSessionRequest)},
  { 273, -1, -1, sizeof(::viam::robot::v1::StartSessionResponse)},
  { 281, -1, -1, sizeof(::viam::robot::v1::SendSessionHeartbeatRequest)},
  { 288, -1, -1, sizeof(::viam::robot::v1::SendSessionHeartbeatResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::robot::v1::_FrameSystemConfig_default_instance_._instance,
  &::viam::robot::v1::_FrameSystemConfigRequest_default_instance_._instance,
  &::viam::robot::v1::_FrameSystemConfigResponse_default_instance_._instance,
  &::viam::robot::v1::_TransformPoseRequest_default_instance_._instance,
  &::viam::robot::v1::_TransformPoseResponse_default_instance_._instance,
  &::viam::robot::v1::_TransformPCDRequest_default_instance_._instance,
  &::viam::robot::v1::_TransformPCDResponse_default_instance_._instance,
  &::viam::robot::v1::_ResourceNamesRequest_default_instance_._instance,
  &::viam::robot::v1::_ResourceNamesResponse_default_instance_._instance,
  &::viam::robot::v1::_ResourceRPCSubtype_default_instance_._instance,
  &::viam::robot::v1::_ResourceRPCSubtypesRequest_default_instance_._instance,
  &::viam::robot::v1::_ResourceRPCSubtypesResponse_default_instance_._instance,
  &::viam::robot::v1::_Operation_default_instance_._instance,
  &::viam::robot::v1::_GetOperationsRequest_default_instance_._instance,
  &::viam::robot::v1::_GetOperationsResponse_default_instance_._instance,
  &::viam::robot::v1::_CancelOperationRequest_default_instance_._instance,
  &::viam::robot::v1::_CancelOperationResponse_default_instance_._instance,
  &::viam::robot::v1::_BlockForOperationRequest_default_instance_._instance,
  &::viam::robot::v1::_BlockForOperationResponse_default_instance_._instance,
  &::viam::robot::v1::_PeerConnectionInfo_default_instance_._instance,
  &::viam::robot::v1::_Session_default_instance_._instance,
  &::viam::robot::v1::_GetSessionsRequest_default_instance_._instance,
  &::viam::robot::v1::_GetSessionsResponse_default_instance_._instance,
  &::viam::robot::v1::_DiscoveryQuery_default_instance_._instance,
  &::viam::robot::v1::_Discovery_default_instance_._instance,
  &::viam::robot::v1::_DiscoverComponentsRequest_default_instance_._instance,
  &::viam::robot::v1::_DiscoverComponentsResponse_default_instance_._instance,
  &::viam::robot::v1::_Status_default_instance_._instance,
  &::viam::robot::v1::_GetStatusRequest_default_instance_._instance,
  &::viam::robot::v1::_GetStatusResponse_default_instance_._instance,
  &::viam::robot::v1::_StreamStatusRequest_default_instance_._instance,
  &::viam::robot::v1::_StreamStatusResponse_default_instance_._instance,
  &::viam::robot::v1::_StopExtraParameters_default_instance_._instance,
  &::viam::robot::v1::_StopAllRequest_default_instance_._instance,
  &::viam::robot::v1::_StopAllResponse_default_instance_._instance,
  &::viam::robot::v1::_StartSessionRequest_default_instance_._instance,
  &::viam::robot::v1::_StartSessionResponse_default_instance_._instance,
  &::viam::robot::v1::_SendSessionHeartbeatRequest_default_instance_._instance,
  &::viam::robot::v1::_SendSessionHeartbeatResponse_default_instance_._instance,
};

const char descriptor_table_protodef_robot_2fv1_2frobot_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024robot/v1/robot.proto\022\rviam.robot.v1\032\026c"
  "ommon/v1/common.proto\032\034google/api/annota"
  "tions.proto\032\036google/protobuf/duration.pr"
  "oto\032\034google/protobuf/struct.proto\032\037googl"
  "e/protobuf/timestamp.proto\"}\n\021FrameSyste"
  "mConfig\022/\n\005frame\030\001 \001(\0132\031.viam.common.v1."
  "TransformR\005frame\0227\n\nkinematics\030\002 \001(\0132\027.g"
  "oogle.protobuf.StructR\nkinematics\"n\n\030Fra"
  "meSystemConfigRequest\022R\n\027supplemental_tr"
  "ansforms\030\001 \003(\0132\031.viam.common.v1.Transfor"
  "mR\026supplementalTransforms\"o\n\031FrameSystem"
  "ConfigResponse\022R\n\024frame_system_configs\030\001"
  " \003(\0132 .viam.robot.v1.FrameSystemConfigR\022"
  "frameSystemConfigs\"\301\001\n\024TransformPoseRequ"
  "est\0223\n\006source\030\001 \001(\0132\033.viam.common.v1.Pos"
  "eInFrameR\006source\022 \n\013destination\030\002 \001(\tR\013d"
  "estination\022R\n\027supplemental_transforms\030\003 "
  "\003(\0132\031.viam.common.v1.TransformR\026suppleme"
  "ntalTransforms\"H\n\025TransformPoseResponse\022"
  "/\n\004pose\030\001 \001(\0132\033.viam.common.v1.PoseInFra"
  "meR\004pose\"w\n\023TransformPCDRequest\022&\n\017point"
  "_cloud_pcd\030\001 \001(\014R\rpointCloudPcd\022\026\n\006sourc"
  "e\030\002 \001(\tR\006source\022 \n\013destination\030\003 \001(\tR\013de"
  "stination\">\n\024TransformPCDResponse\022&\n\017poi"
  "nt_cloud_pcd\030\001 \001(\014R\rpointCloudPcd\"\026\n\024Res"
  "ourceNamesRequest\"S\n\025ResourceNamesRespon"
  "se\022:\n\tresources\030\001 \003(\0132\034.viam.common.v1.R"
  "esourceNameR\tresources\"q\n\022ResourceRPCSub"
  "type\0226\n\007subtype\030\001 \001(\0132\034.viam.common.v1.R"
  "esourceNameR\007subtype\022#\n\rproto_service\030\002 "
  "\001(\tR\014protoService\"\034\n\032ResourceRPCSubtypes"
  "Request\"t\n\033ResourceRPCSubtypesResponse\022U"
  "\n\025resource_rpc_subtypes\030\001 \003(\0132!.viam.rob"
  "ot.v1.ResourceRPCSubtypeR\023resourceRpcSub"
  "types\"\323\001\n\tOperation\022\016\n\002id\030\001 \001(\tR\002id\022\026\n\006m"
  "ethod\030\002 \001(\tR\006method\0225\n\targuments\030\003 \001(\0132\027"
  ".google.protobuf.StructR\targuments\0224\n\007st"
  "arted\030\004 \001(\0132\032.google.protobuf.TimestampR"
  "\007started\022\"\n\nsession_id\030\005 \001(\tH\000R\tsessionI"
  "d\210\001\001B\r\n\013_session_id\"\026\n\024GetOperationsRequ"
  "est\"Q\n\025GetOperationsResponse\0228\n\noperatio"
  "ns\030\001 \003(\0132\030.viam.robot.v1.OperationR\noper"
  "ations\"(\n\026CancelOperationRequest\022\016\n\002id\030\001"
  " \001(\tR\002id\"\031\n\027CancelOperationResponse\"*\n\030B"
  "lockForOperationRequest\022\016\n\002id\030\001 \001(\tR\002id\""
  "\033\n\031BlockForOperationResponse\"\306\001\n\022PeerCon"
  "nectionInfo\0225\n\004type\030\001 \001(\0162!.viam.robot.v"
  "1.PeerConnectionTypeR\004type\022*\n\016remote_add"
  "ress\030\002 \001(\tH\000R\rremoteAddress\210\001\001\022(\n\rlocal_"
  "address\030\003 \001(\tH\001R\014localAddress\210\001\001B\021\n\017_rem"
  "ote_addressB\020\n\016_local_address\"\214\001\n\007Sessio"
  "n\022\016\n\002id\030\001 \001(\tR\002id\022X\n\024peer_connection_inf"
  "o\030\002 \001(\0132!.viam.robot.v1.PeerConnectionIn"
  "foH\000R\022peerConnectionInfo\210\001\001B\027\n\025_peer_con"
  "nection_info\"\024\n\022GetSessionsRequest\"I\n\023Ge"
  "tSessionsResponse\0222\n\010sessions\030\001 \003(\0132\026.vi"
  "am.robot.v1.SessionR\010sessions\"@\n\016Discove"
  "ryQuery\022\030\n\007subtype\030\001 \001(\tR\007subtype\022\024\n\005mod"
  "el\030\002 \001(\tR\005model\"s\n\tDiscovery\0223\n\005query\030\001 "
  "\001(\0132\035.viam.robot.v1.DiscoveryQueryR\005quer"
  "y\0221\n\007results\030\002 \001(\0132\027.google.protobuf.Str"
  "uctR\007results\"T\n\031DiscoverComponentsReques"
  "t\0227\n\007queries\030\001 \003(\0132\035.viam.robot.v1.Disco"
  "veryQueryR\007queries\"T\n\032DiscoverComponents"
  "Response\0226\n\tdiscovery\030\001 \003(\0132\030.viam.robot"
  ".v1.DiscoveryR\tdiscovery\"k\n\006Status\0220\n\004na"
  "me\030\001 \001(\0132\034.viam.common.v1.ResourceNameR\004"
  "name\022/\n\006status\030\002 \001(\0132\027.google.protobuf.S"
  "tructR\006status\"W\n\020GetStatusRequest\022C\n\016res"
  "ource_names\030\001 \003(\0132\034.viam.common.v1.Resou"
  "rceNameR\rresourceNames\"B\n\021GetStatusRespo"
  "nse\022-\n\006status\030\001 \003(\0132\025.viam.robot.v1.Stat"
  "usR\006status\"\213\001\n\023StreamStatusRequest\022C\n\016re"
  "source_names\030\001 \003(\0132\034.viam.common.v1.Reso"
  "urceNameR\rresourceNames\022/\n\005every\030\002 \001(\0132\031"
  ".google.protobuf.DurationR\005every\"E\n\024Stre"
  "amStatusResponse\022-\n\006status\030\001 \003(\0132\025.viam."
  "robot.v1.StatusR\006status\"x\n\023StopExtraPara"
  "meters\0220\n\004name\030\001 \001(\0132\034.viam.common.v1.Re"
  "sourceNameR\004name\022/\n\006params\030\002 \001(\0132\027.googl"
  "e.protobuf.StructR\006params\"J\n\016StopAllRequ"
  "est\0228\n\005extra\030c \003(\0132\".viam.robot.v1.StopE"
  "xtraParametersR\005extra\"\021\n\017StopAllResponse"
  "\"-\n\023StartSessionRequest\022\026\n\006resume\030\001 \001(\tR"
  "\006resume\"l\n\024StartSessionResponse\022\016\n\002id\030\001 "
  "\001(\tR\002id\022D\n\020heartbeat_window\030\002 \001(\0132\031.goog"
  "le.protobuf.DurationR\017heartbeatWindow\"-\n"
  "\033SendSessionHeartbeatRequest\022\016\n\002id\030\001 \001(\t"
  "R\002id\"\036\n\034SendSessionHeartbeatResponse*z\n\022"
  "PeerConnectionType\022$\n PEER_CONNECTION_TY"
  "PE_UNSPECIFIED\020\000\022\035\n\031PEER_CONNECTION_TYPE"
  "_GRPC\020\001\022\037\n\033PEER_CONNECTION_TYPE_WEBRTC\020\002"
  "2\370\017\n\014RobotService\022\200\001\n\rGetOperations\022#.vi"
  "am.robot.v1.GetOperationsRequest\032$.viam."
  "robot.v1.GetOperationsResponse\"$\202\323\344\223\002\036\022\034"
  "/viam/api/v1/operations/list\022x\n\013GetSessi"
  "ons\022!.viam.robot.v1.GetSessionsRequest\032\""
  ".viam.robot.v1.GetSessionsResponse\"\"\202\323\344\223"
  "\002\034\022\032/viam/api/v1/sessions/list\022\177\n\rResour"
  "ceNames\022#.viam.robot.v1.ResourceNamesReq"
  "uest\032$.viam.robot.v1.ResourceNamesRespon"
  "se\"#\202\323\344\223\002\035\022\033/viam/api/v1/resources/list\022"
  "\235\001\n\023ResourceRPCSubtypes\022).viam.robot.v1."
  "ResourceRPCSubtypesRequest\032*.viam.robot."
  "v1.ResourceRPCSubtypesResponse\"/\202\323\344\223\002)\022\'"
  "/viam/api/v1/resource_rpc_subtypes/list\022"
  "\210\001\n\017CancelOperation\022%.viam.robot.v1.Canc"
  "elOperationRequest\032&.viam.robot.v1.Cance"
  "lOperationResponse\"&\202\323\344\223\002 \"\036/viam/api/v1"
  "/operations/cancel\022\215\001\n\021BlockForOperation"
  "\022\'.viam.robot.v1.BlockForOperationReques"
  "t\032(.viam.robot.v1.BlockForOperationRespo"
  "nse\"%\202\323\344\223\002\037\"\035/viam/api/v1/operations/blo"
  "ck\022\224\001\n\022DiscoverComponents\022(.viam.robot.v"
  "1.DiscoverComponentsRequest\032).viam.robot"
  ".v1.DiscoverComponentsResponse\")\202\323\344\223\002#\022!"
  "/viam/api/v1/discovery/components\022\220\001\n\021Fr"
  "ameSystemConfig\022\'.viam.robot.v1.FrameSys"
  "temConfigRequest\032(.viam.robot.v1.FrameSy"
  "stemConfigResponse\"(\202\323\344\223\002\"\022 /viam/api/v1"
  "/frame_system/config\022\214\001\n\rTransformPose\022#"
  ".viam.robot.v1.TransformPoseRequest\032$.vi"
  "am.robot.v1.TransformPoseResponse\"0\202\323\344\223\002"
  "*\022(/viam/api/v1/frame_system/transform_p"
  "ose\022\210\001\n\014TransformPCD\022\".viam.robot.v1.Tra"
  "nsformPCDRequest\032#.viam.robot.v1.Transfo"
  "rmPCDResponse\"/\202\323\344\223\002)\022\'/viam/api/v1/fram"
  "e_system/transform_pcd\022k\n\tGetStatus\022\037.vi"
  "am.robot.v1.GetStatusRequest\032 .viam.robo"
  "t.v1.GetStatusResponse\"\033\202\323\344\223\002\025\022\023/viam/ap"
  "i/v1/status\022}\n\014StreamStatus\022\".viam.robot"
  ".v1.StreamStatusRequest\032#.viam.robot.v1."
  "StreamStatusResponse\"\"\202\323\344\223\002\034\022\032/viam/api/"
  "v1/status/stream0\001\022g\n\007StopAll\022\035.viam.rob"
  "ot.v1.StopAllRequest\032\036.viam.robot.v1.Sto"
  "pAllResponse\"\035\202\323\344\223\002\027\022\025/viam/api/v1/stop_"
  "all\022v\n\014StartSession\022\".viam.robot.v1.Star"
  "tSessionRequest\032#.viam.robot.v1.StartSes"
  "sionResponse\"\035\202\323\344\223\002\027\"\025/viam/api/v1/sessi"
  "ons\022\235\001\n\024SendSessionHeartbeat\022*.viam.robo"
  "t.v1.SendSessionHeartbeatRequest\032+.viam."
  "robot.v1.SendSessionHeartbeatResponse\",\202"
  "\323\344\223\002&\"$/viam/api/v1/sessions/{id}/heartb"
  "eatB-\n\021com.viam.robot.v1Z\030go.viam.com/ap"
  "i/robot/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_robot_2fv1_2frobot_2eproto_deps[5] = {
  &::descriptor_table_common_2fv1_2fcommon_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_robot_2fv1_2frobot_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_robot_2fv1_2frobot_2eproto = {
    false, false, 5778, descriptor_table_protodef_robot_2fv1_2frobot_2eproto,
    "robot/v1/robot.proto",
    &descriptor_table_robot_2fv1_2frobot_2eproto_once, descriptor_table_robot_2fv1_2frobot_2eproto_deps, 5, 39,
    schemas, file_default_instances, TableStruct_robot_2fv1_2frobot_2eproto::offsets,
    file_level_metadata_robot_2fv1_2frobot_2eproto, file_level_enum_descriptors_robot_2fv1_2frobot_2eproto,
    file_level_service_descriptors_robot_2fv1_2frobot_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_robot_2fv1_2frobot_2eproto_getter() {
  return &descriptor_table_robot_2fv1_2frobot_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_robot_2fv1_2frobot_2eproto(&descriptor_table_robot_2fv1_2frobot_2eproto);
namespace viam {
namespace robot {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PeerConnectionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_robot_2fv1_2frobot_2eproto);
  return file_level_enum_descriptors_robot_2fv1_2frobot_2eproto[0];
}
bool PeerConnectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class FrameSystemConfig::_Internal {
 public:
  static const ::viam::common::v1::Transform& frame(const FrameSystemConfig* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& kinematics(const FrameSystemConfig* msg);
};

const ::viam::common::v1::Transform&
FrameSystemConfig::_Internal::frame(const FrameSystemConfig* msg) {
  return *msg->_impl_.frame_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
FrameSystemConfig::_Internal::kinematics(const FrameSystemConfig* msg) {
  return *msg->_impl_.kinematics_;
}
void FrameSystemConfig::clear_frame() {
  if (GetArenaForAllocation() == nullptr && _impl_.frame_ != nullptr) {
    delete _impl_.frame_;
  }
  _impl_.frame_ = nullptr;
}
void FrameSystemConfig::clear_kinematics() {
  if (GetArenaForAllocation() == nullptr && _impl_.kinematics_ != nullptr) {
    delete _impl_.kinematics_;
  }
  _impl_.kinematics_ = nullptr;
}
FrameSystemConfig::FrameSystemConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.FrameSystemConfig)
}
FrameSystemConfig::FrameSystemConfig(const FrameSystemConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FrameSystemConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.frame_){nullptr}
    , decltype(_impl_.kinematics_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_frame()) {
    _this->_impl_.frame_ = new ::viam::common::v1::Transform(*from._impl_.frame_);
  }
  if (from._internal_has_kinematics()) {
    _this->_impl_.kinematics_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.kinematics_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.FrameSystemConfig)
}

inline void FrameSystemConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.frame_){nullptr}
    , decltype(_impl_.kinematics_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FrameSystemConfig::~FrameSystemConfig() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.FrameSystemConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FrameSystemConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.frame_;
  if (this != internal_default_instance()) delete _impl_.kinematics_;
}

void FrameSystemConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FrameSystemConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.FrameSystemConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.frame_ != nullptr) {
    delete _impl_.frame_;
  }
  _impl_.frame_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.kinematics_ != nullptr) {
    delete _impl_.kinematics_;
  }
  _impl_.kinematics_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrameSystemConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.Transform frame = 1 [json_name = "frame"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_frame(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct kinematics = 2 [json_name = "kinematics"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_kinematics(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FrameSystemConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.FrameSystemConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.Transform frame = 1 [json_name = "frame"];
  if (this->_internal_has_frame()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::frame(this),
        _Internal::frame(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct kinematics = 2 [json_name = "kinematics"];
  if (this->_internal_has_kinematics()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::kinematics(this),
        _Internal::kinematics(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.FrameSystemConfig)
  return target;
}

size_t FrameSystemConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.FrameSystemConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.Transform frame = 1 [json_name = "frame"];
  if (this->_internal_has_frame()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.frame_);
  }

  // .google.protobuf.Struct kinematics = 2 [json_name = "kinematics"];
  if (this->_internal_has_kinematics()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.kinematics_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FrameSystemConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FrameSystemConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FrameSystemConfig::GetClassData() const { return &_class_data_; }


void FrameSystemConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FrameSystemConfig*>(&to_msg);
  auto& from = static_cast<const FrameSystemConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.FrameSystemConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_frame()) {
    _this->_internal_mutable_frame()->::viam::common::v1::Transform::MergeFrom(
        from._internal_frame());
  }
  if (from._internal_has_kinematics()) {
    _this->_internal_mutable_kinematics()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_kinematics());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FrameSystemConfig::CopyFrom(const FrameSystemConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.FrameSystemConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameSystemConfig::IsInitialized() const {
  return true;
}

void FrameSystemConfig::InternalSwap(FrameSystemConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrameSystemConfig, _impl_.kinematics_)
      + sizeof(FrameSystemConfig::_impl_.kinematics_)
      - PROTOBUF_FIELD_OFFSET(FrameSystemConfig, _impl_.frame_)>(
          reinterpret_cast<char*>(&_impl_.frame_),
          reinterpret_cast<char*>(&other->_impl_.frame_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FrameSystemConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[0]);
}

// ===================================================================

class FrameSystemConfigRequest::_Internal {
 public:
};

void FrameSystemConfigRequest::clear_supplemental_transforms() {
  _impl_.supplemental_transforms_.Clear();
}
FrameSystemConfigRequest::FrameSystemConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.FrameSystemConfigRequest)
}
FrameSystemConfigRequest::FrameSystemConfigRequest(const FrameSystemConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FrameSystemConfigRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.supplemental_transforms_){from._impl_.supplemental_transforms_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.FrameSystemConfigRequest)
}

inline void FrameSystemConfigRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.supplemental_transforms_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FrameSystemConfigRequest::~FrameSystemConfigRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.FrameSystemConfigRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FrameSystemConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.supplemental_transforms_.~RepeatedPtrField();
}

void FrameSystemConfigRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FrameSystemConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.FrameSystemConfigRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.supplemental_transforms_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrameSystemConfigRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.common.v1.Transform supplemental_transforms = 1 [json_name = "supplementalTransforms"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_supplemental_transforms(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FrameSystemConfigRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.FrameSystemConfigRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.common.v1.Transform supplemental_transforms = 1 [json_name = "supplementalTransforms"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_supplemental_transforms_size()); i < n; i++) {
    const auto& repfield = this->_internal_supplemental_transforms(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.FrameSystemConfigRequest)
  return target;
}

size_t FrameSystemConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.FrameSystemConfigRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.common.v1.Transform supplemental_transforms = 1 [json_name = "supplementalTransforms"];
  total_size += 1UL * this->_internal_supplemental_transforms_size();
  for (const auto& msg : this->_impl_.supplemental_transforms_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FrameSystemConfigRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FrameSystemConfigRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FrameSystemConfigRequest::GetClassData() const { return &_class_data_; }


void FrameSystemConfigRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FrameSystemConfigRequest*>(&to_msg);
  auto& from = static_cast<const FrameSystemConfigRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.FrameSystemConfigRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.supplemental_transforms_.MergeFrom(from._impl_.supplemental_transforms_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FrameSystemConfigRequest::CopyFrom(const FrameSystemConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.FrameSystemConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameSystemConfigRequest::IsInitialized() const {
  return true;
}

void FrameSystemConfigRequest::InternalSwap(FrameSystemConfigRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.supplemental_transforms_.InternalSwap(&other->_impl_.supplemental_transforms_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrameSystemConfigRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[1]);
}

// ===================================================================

class FrameSystemConfigResponse::_Internal {
 public:
};

FrameSystemConfigResponse::FrameSystemConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.FrameSystemConfigResponse)
}
FrameSystemConfigResponse::FrameSystemConfigResponse(const FrameSystemConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FrameSystemConfigResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.frame_system_configs_){from._impl_.frame_system_configs_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.FrameSystemConfigResponse)
}

inline void FrameSystemConfigResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.frame_system_configs_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FrameSystemConfigResponse::~FrameSystemConfigResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.FrameSystemConfigResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FrameSystemConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.frame_system_configs_.~RepeatedPtrField();
}

void FrameSystemConfigResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FrameSystemConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.FrameSystemConfigResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.frame_system_configs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrameSystemConfigResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.FrameSystemConfig frame_system_configs = 1 [json_name = "frameSystemConfigs"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_frame_system_configs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FrameSystemConfigResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.FrameSystemConfigResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.FrameSystemConfig frame_system_configs = 1 [json_name = "frameSystemConfigs"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_frame_system_configs_size()); i < n; i++) {
    const auto& repfield = this->_internal_frame_system_configs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.FrameSystemConfigResponse)
  return target;
}

size_t FrameSystemConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.FrameSystemConfigResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.FrameSystemConfig frame_system_configs = 1 [json_name = "frameSystemConfigs"];
  total_size += 1UL * this->_internal_frame_system_configs_size();
  for (const auto& msg : this->_impl_.frame_system_configs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FrameSystemConfigResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FrameSystemConfigResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FrameSystemConfigResponse::GetClassData() const { return &_class_data_; }


void FrameSystemConfigResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FrameSystemConfigResponse*>(&to_msg);
  auto& from = static_cast<const FrameSystemConfigResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.FrameSystemConfigResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.frame_system_configs_.MergeFrom(from._impl_.frame_system_configs_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FrameSystemConfigResponse::CopyFrom(const FrameSystemConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.FrameSystemConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameSystemConfigResponse::IsInitialized() const {
  return true;
}

void FrameSystemConfigResponse::InternalSwap(FrameSystemConfigResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.frame_system_configs_.InternalSwap(&other->_impl_.frame_system_configs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrameSystemConfigResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[2]);
}

// ===================================================================

class TransformPoseRequest::_Internal {
 public:
  static const ::viam::common::v1::PoseInFrame& source(const TransformPoseRequest* msg);
};

const ::viam::common::v1::PoseInFrame&
TransformPoseRequest::_Internal::source(const TransformPoseRequest* msg) {
  return *msg->_impl_.source_;
}
void TransformPoseRequest::clear_source() {
  if (GetArenaForAllocation() == nullptr && _impl_.source_ != nullptr) {
    delete _impl_.source_;
  }
  _impl_.source_ = nullptr;
}
void TransformPoseRequest::clear_supplemental_transforms() {
  _impl_.supplemental_transforms_.Clear();
}
TransformPoseRequest::TransformPoseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.TransformPoseRequest)
}
TransformPoseRequest::TransformPoseRequest(const TransformPoseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformPoseRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.supplemental_transforms_){from._impl_.supplemental_transforms_}
    , decltype(_impl_.destination_){}
    , decltype(_impl_.source_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.destination_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.destination_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_destination().empty()) {
    _this->_impl_.destination_.Set(from._internal_destination(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_source()) {
    _this->_impl_.source_ = new ::viam::common::v1::PoseInFrame(*from._impl_.source_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.TransformPoseRequest)
}

inline void TransformPoseRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.supplemental_transforms_){arena}
    , decltype(_impl_.destination_){}
    , decltype(_impl_.source_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.destination_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.destination_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TransformPoseRequest::~TransformPoseRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.TransformPoseRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformPoseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.supplemental_transforms_.~RepeatedPtrField();
  _impl_.destination_.Destroy();
  if (this != internal_default_instance()) delete _impl_.source_;
}

void TransformPoseRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformPoseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.TransformPoseRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.supplemental_transforms_.Clear();
  _impl_.destination_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.source_ != nullptr) {
    delete _impl_.source_;
  }
  _impl_.source_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformPoseRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.PoseInFrame source = 1 [json_name = "source"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string destination = 2 [json_name = "destination"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_destination();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.TransformPoseRequest.destination"));
        } else
          goto handle_unusual;
        continue;
      // repeated .viam.common.v1.Transform supplemental_transforms = 3 [json_name = "supplementalTransforms"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_supplemental_transforms(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformPoseRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.TransformPoseRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.PoseInFrame source = 1 [json_name = "source"];
  if (this->_internal_has_source()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::source(this),
        _Internal::source(this).GetCachedSize(), target, stream);
  }

  // string destination = 2 [json_name = "destination"];
  if (!this->_internal_destination().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destination().data(), static_cast<int>(this->_internal_destination().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.TransformPoseRequest.destination");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_destination(), target);
  }

  // repeated .viam.common.v1.Transform supplemental_transforms = 3 [json_name = "supplementalTransforms"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_supplemental_transforms_size()); i < n; i++) {
    const auto& repfield = this->_internal_supplemental_transforms(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.TransformPoseRequest)
  return target;
}

size_t TransformPoseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.TransformPoseRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.common.v1.Transform supplemental_transforms = 3 [json_name = "supplementalTransforms"];
  total_size += 1UL * this->_internal_supplemental_transforms_size();
  for (const auto& msg : this->_impl_.supplemental_transforms_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string destination = 2 [json_name = "destination"];
  if (!this->_internal_destination().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destination());
  }

  // .viam.common.v1.PoseInFrame source = 1 [json_name = "source"];
  if (this->_internal_has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.source_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformPoseRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformPoseRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformPoseRequest::GetClassData() const { return &_class_data_; }


void TransformPoseRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformPoseRequest*>(&to_msg);
  auto& from = static_cast<const TransformPoseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.TransformPoseRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.supplemental_transforms_.MergeFrom(from._impl_.supplemental_transforms_);
  if (!from._internal_destination().empty()) {
    _this->_internal_set_destination(from._internal_destination());
  }
  if (from._internal_has_source()) {
    _this->_internal_mutable_source()->::viam::common::v1::PoseInFrame::MergeFrom(
        from._internal_source());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformPoseRequest::CopyFrom(const TransformPoseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.TransformPoseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformPoseRequest::IsInitialized() const {
  return true;
}

void TransformPoseRequest::InternalSwap(TransformPoseRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.supplemental_transforms_.InternalSwap(&other->_impl_.supplemental_transforms_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.destination_, lhs_arena,
      &other->_impl_.destination_, rhs_arena
  );
  swap(_impl_.source_, other->_impl_.source_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformPoseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[3]);
}

// ===================================================================

class TransformPoseResponse::_Internal {
 public:
  static const ::viam::common::v1::PoseInFrame& pose(const TransformPoseResponse* msg);
};

const ::viam::common::v1::PoseInFrame&
TransformPoseResponse::_Internal::pose(const TransformPoseResponse* msg) {
  return *msg->_impl_.pose_;
}
void TransformPoseResponse::clear_pose() {
  if (GetArenaForAllocation() == nullptr && _impl_.pose_ != nullptr) {
    delete _impl_.pose_;
  }
  _impl_.pose_ = nullptr;
}
TransformPoseResponse::TransformPoseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.TransformPoseResponse)
}
TransformPoseResponse::TransformPoseResponse(const TransformPoseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformPoseResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pose_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_pose()) {
    _this->_impl_.pose_ = new ::viam::common::v1::PoseInFrame(*from._impl_.pose_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.TransformPoseResponse)
}

inline void TransformPoseResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pose_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransformPoseResponse::~TransformPoseResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.TransformPoseResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformPoseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pose_;
}

void TransformPoseResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformPoseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.TransformPoseResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.pose_ != nullptr) {
    delete _impl_.pose_;
  }
  _impl_.pose_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformPoseResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.PoseInFrame pose = 1 [json_name = "pose"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pose(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformPoseResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.TransformPoseResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.PoseInFrame pose = 1 [json_name = "pose"];
  if (this->_internal_has_pose()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pose(this),
        _Internal::pose(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.TransformPoseResponse)
  return target;
}

size_t TransformPoseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.TransformPoseResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.PoseInFrame pose = 1 [json_name = "pose"];
  if (this->_internal_has_pose()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pose_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformPoseResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformPoseResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformPoseResponse::GetClassData() const { return &_class_data_; }


void TransformPoseResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformPoseResponse*>(&to_msg);
  auto& from = static_cast<const TransformPoseResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.TransformPoseResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_pose()) {
    _this->_internal_mutable_pose()->::viam::common::v1::PoseInFrame::MergeFrom(
        from._internal_pose());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformPoseResponse::CopyFrom(const TransformPoseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.TransformPoseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformPoseResponse::IsInitialized() const {
  return true;
}

void TransformPoseResponse::InternalSwap(TransformPoseResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.pose_, other->_impl_.pose_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformPoseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[4]);
}

// ===================================================================

class TransformPCDRequest::_Internal {
 public:
};

TransformPCDRequest::TransformPCDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.TransformPCDRequest)
}
TransformPCDRequest::TransformPCDRequest(const TransformPCDRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformPCDRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.point_cloud_pcd_){}
    , decltype(_impl_.source_){}
    , decltype(_impl_.destination_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.point_cloud_pcd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.point_cloud_pcd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_point_cloud_pcd().empty()) {
    _this->_impl_.point_cloud_pcd_.Set(from._internal_point_cloud_pcd(), 
      _this->GetArenaForAllocation());
  }
  _impl_.source_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.source_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_source().empty()) {
    _this->_impl_.source_.Set(from._internal_source(), 
      _this->GetArenaForAllocation());
  }
  _impl_.destination_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.destination_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_destination().empty()) {
    _this->_impl_.destination_.Set(from._internal_destination(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.TransformPCDRequest)
}

inline void TransformPCDRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.point_cloud_pcd_){}
    , decltype(_impl_.source_){}
    , decltype(_impl_.destination_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.point_cloud_pcd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.point_cloud_pcd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.source_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.source_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.destination_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.destination_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TransformPCDRequest::~TransformPCDRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.TransformPCDRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformPCDRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.point_cloud_pcd_.Destroy();
  _impl_.source_.Destroy();
  _impl_.destination_.Destroy();
}

void TransformPCDRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformPCDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.TransformPCDRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.point_cloud_pcd_.ClearToEmpty();
  _impl_.source_.ClearToEmpty();
  _impl_.destination_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformPCDRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_point_cloud_pcd();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string source = 2 [json_name = "source"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_source();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.TransformPCDRequest.source"));
        } else
          goto handle_unusual;
        continue;
      // string destination = 3 [json_name = "destination"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_destination();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.TransformPCDRequest.destination"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformPCDRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.TransformPCDRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
  if (!this->_internal_point_cloud_pcd().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_point_cloud_pcd(), target);
  }

  // string source = 2 [json_name = "source"];
  if (!this->_internal_source().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.TransformPCDRequest.source");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_source(), target);
  }

  // string destination = 3 [json_name = "destination"];
  if (!this->_internal_destination().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destination().data(), static_cast<int>(this->_internal_destination().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.TransformPCDRequest.destination");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_destination(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.TransformPCDRequest)
  return target;
}

size_t TransformPCDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.TransformPCDRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
  if (!this->_internal_point_cloud_pcd().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_point_cloud_pcd());
  }

  // string source = 2 [json_name = "source"];
  if (!this->_internal_source().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // string destination = 3 [json_name = "destination"];
  if (!this->_internal_destination().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destination());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformPCDRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformPCDRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformPCDRequest::GetClassData() const { return &_class_data_; }


void TransformPCDRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformPCDRequest*>(&to_msg);
  auto& from = static_cast<const TransformPCDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.TransformPCDRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_point_cloud_pcd().empty()) {
    _this->_internal_set_point_cloud_pcd(from._internal_point_cloud_pcd());
  }
  if (!from._internal_source().empty()) {
    _this->_internal_set_source(from._internal_source());
  }
  if (!from._internal_destination().empty()) {
    _this->_internal_set_destination(from._internal_destination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformPCDRequest::CopyFrom(const TransformPCDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.TransformPCDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformPCDRequest::IsInitialized() const {
  return true;
}

void TransformPCDRequest::InternalSwap(TransformPCDRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.point_cloud_pcd_, lhs_arena,
      &other->_impl_.point_cloud_pcd_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.source_, lhs_arena,
      &other->_impl_.source_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.destination_, lhs_arena,
      &other->_impl_.destination_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformPCDRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[5]);
}

// ===================================================================

class TransformPCDResponse::_Internal {
 public:
};

TransformPCDResponse::TransformPCDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.TransformPCDResponse)
}
TransformPCDResponse::TransformPCDResponse(const TransformPCDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransformPCDResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.point_cloud_pcd_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.point_cloud_pcd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.point_cloud_pcd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_point_cloud_pcd().empty()) {
    _this->_impl_.point_cloud_pcd_.Set(from._internal_point_cloud_pcd(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.TransformPCDResponse)
}

inline void TransformPCDResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.point_cloud_pcd_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.point_cloud_pcd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.point_cloud_pcd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TransformPCDResponse::~TransformPCDResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.TransformPCDResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransformPCDResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.point_cloud_pcd_.Destroy();
}

void TransformPCDResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransformPCDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.TransformPCDResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.point_cloud_pcd_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransformPCDResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_point_cloud_pcd();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransformPCDResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.TransformPCDResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
  if (!this->_internal_point_cloud_pcd().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_point_cloud_pcd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.TransformPCDResponse)
  return target;
}

size_t TransformPCDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.TransformPCDResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes point_cloud_pcd = 1 [json_name = "pointCloudPcd"];
  if (!this->_internal_point_cloud_pcd().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_point_cloud_pcd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransformPCDResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransformPCDResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransformPCDResponse::GetClassData() const { return &_class_data_; }


void TransformPCDResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransformPCDResponse*>(&to_msg);
  auto& from = static_cast<const TransformPCDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.TransformPCDResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_point_cloud_pcd().empty()) {
    _this->_internal_set_point_cloud_pcd(from._internal_point_cloud_pcd());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransformPCDResponse::CopyFrom(const TransformPCDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.TransformPCDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformPCDResponse::IsInitialized() const {
  return true;
}

void TransformPCDResponse::InternalSwap(TransformPCDResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.point_cloud_pcd_, lhs_arena,
      &other->_impl_.point_cloud_pcd_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TransformPCDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[6]);
}

// ===================================================================

class ResourceNamesRequest::_Internal {
 public:
};

ResourceNamesRequest::ResourceNamesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ResourceNamesRequest)
}
ResourceNamesRequest::ResourceNamesRequest(const ResourceNamesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ResourceNamesRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ResourceNamesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResourceNamesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResourceNamesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ResourceNamesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[7]);
}

// ===================================================================

class ResourceNamesResponse::_Internal {
 public:
};

void ResourceNamesResponse::clear_resources() {
  _impl_.resources_.Clear();
}
ResourceNamesResponse::ResourceNamesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ResourceNamesResponse)
}
ResourceNamesResponse::ResourceNamesResponse(const ResourceNamesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResourceNamesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resources_){from._impl_.resources_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ResourceNamesResponse)
}

inline void ResourceNamesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resources_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResourceNamesResponse::~ResourceNamesResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.ResourceNamesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResourceNamesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resources_.~RepeatedPtrField();
}

void ResourceNamesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResourceNamesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.ResourceNamesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resources_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceNamesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.common.v1.ResourceName resources = 1 [json_name = "resources"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResourceNamesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.ResourceNamesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.common.v1.ResourceName resources = 1 [json_name = "resources"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resources_size()); i < n; i++) {
    const auto& repfield = this->_internal_resources(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.ResourceNamesResponse)
  return target;
}

size_t ResourceNamesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.ResourceNamesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.common.v1.ResourceName resources = 1 [json_name = "resources"];
  total_size += 1UL * this->_internal_resources_size();
  for (const auto& msg : this->_impl_.resources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResourceNamesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResourceNamesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResourceNamesResponse::GetClassData() const { return &_class_data_; }


void ResourceNamesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResourceNamesResponse*>(&to_msg);
  auto& from = static_cast<const ResourceNamesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.ResourceNamesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.resources_.MergeFrom(from._impl_.resources_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResourceNamesResponse::CopyFrom(const ResourceNamesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.ResourceNamesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceNamesResponse::IsInitialized() const {
  return true;
}

void ResourceNamesResponse::InternalSwap(ResourceNamesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resources_.InternalSwap(&other->_impl_.resources_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceNamesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[8]);
}

// ===================================================================

class ResourceRPCSubtype::_Internal {
 public:
  static const ::viam::common::v1::ResourceName& subtype(const ResourceRPCSubtype* msg);
};

const ::viam::common::v1::ResourceName&
ResourceRPCSubtype::_Internal::subtype(const ResourceRPCSubtype* msg) {
  return *msg->_impl_.subtype_;
}
void ResourceRPCSubtype::clear_subtype() {
  if (GetArenaForAllocation() == nullptr && _impl_.subtype_ != nullptr) {
    delete _impl_.subtype_;
  }
  _impl_.subtype_ = nullptr;
}
ResourceRPCSubtype::ResourceRPCSubtype(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ResourceRPCSubtype)
}
ResourceRPCSubtype::ResourceRPCSubtype(const ResourceRPCSubtype& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResourceRPCSubtype* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.proto_service_){}
    , decltype(_impl_.subtype_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.proto_service_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.proto_service_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proto_service().empty()) {
    _this->_impl_.proto_service_.Set(from._internal_proto_service(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_subtype()) {
    _this->_impl_.subtype_ = new ::viam::common::v1::ResourceName(*from._impl_.subtype_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ResourceRPCSubtype)
}

inline void ResourceRPCSubtype::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.proto_service_){}
    , decltype(_impl_.subtype_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.proto_service_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.proto_service_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResourceRPCSubtype::~ResourceRPCSubtype() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.ResourceRPCSubtype)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResourceRPCSubtype::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.proto_service_.Destroy();
  if (this != internal_default_instance()) delete _impl_.subtype_;
}

void ResourceRPCSubtype::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResourceRPCSubtype::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.ResourceRPCSubtype)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proto_service_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.subtype_ != nullptr) {
    delete _impl_.subtype_;
  }
  _impl_.subtype_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceRPCSubtype::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.ResourceName subtype = 1 [json_name = "subtype"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_subtype(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string proto_service = 2 [json_name = "protoService"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_proto_service();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.ResourceRPCSubtype.proto_service"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResourceRPCSubtype::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.ResourceRPCSubtype)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.ResourceName subtype = 1 [json_name = "subtype"];
  if (this->_internal_has_subtype()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::subtype(this),
        _Internal::subtype(this).GetCachedSize(), target, stream);
  }

  // string proto_service = 2 [json_name = "protoService"];
  if (!this->_internal_proto_service().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_proto_service().data(), static_cast<int>(this->_internal_proto_service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.ResourceRPCSubtype.proto_service");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_proto_service(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.ResourceRPCSubtype)
  return target;
}

size_t ResourceRPCSubtype::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.ResourceRPCSubtype)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string proto_service = 2 [json_name = "protoService"];
  if (!this->_internal_proto_service().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_proto_service());
  }

  // .viam.common.v1.ResourceName subtype = 1 [json_name = "subtype"];
  if (this->_internal_has_subtype()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.subtype_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResourceRPCSubtype::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResourceRPCSubtype::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResourceRPCSubtype::GetClassData() const { return &_class_data_; }


void ResourceRPCSubtype::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResourceRPCSubtype*>(&to_msg);
  auto& from = static_cast<const ResourceRPCSubtype&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.ResourceRPCSubtype)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_proto_service().empty()) {
    _this->_internal_set_proto_service(from._internal_proto_service());
  }
  if (from._internal_has_subtype()) {
    _this->_internal_mutable_subtype()->::viam::common::v1::ResourceName::MergeFrom(
        from._internal_subtype());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResourceRPCSubtype::CopyFrom(const ResourceRPCSubtype& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.ResourceRPCSubtype)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceRPCSubtype::IsInitialized() const {
  return true;
}

void ResourceRPCSubtype::InternalSwap(ResourceRPCSubtype* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.proto_service_, lhs_arena,
      &other->_impl_.proto_service_, rhs_arena
  );
  swap(_impl_.subtype_, other->_impl_.subtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceRPCSubtype::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[9]);
}

// ===================================================================

class ResourceRPCSubtypesRequest::_Internal {
 public:
};

ResourceRPCSubtypesRequest::ResourceRPCSubtypesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ResourceRPCSubtypesRequest)
}
ResourceRPCSubtypesRequest::ResourceRPCSubtypesRequest(const ResourceRPCSubtypesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ResourceRPCSubtypesRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ResourceRPCSubtypesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResourceRPCSubtypesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResourceRPCSubtypesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ResourceRPCSubtypesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[10]);
}

// ===================================================================

class ResourceRPCSubtypesResponse::_Internal {
 public:
};

ResourceRPCSubtypesResponse::ResourceRPCSubtypesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.ResourceRPCSubtypesResponse)
}
ResourceRPCSubtypesResponse::ResourceRPCSubtypesResponse(const ResourceRPCSubtypesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResourceRPCSubtypesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_rpc_subtypes_){from._impl_.resource_rpc_subtypes_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.ResourceRPCSubtypesResponse)
}

inline void ResourceRPCSubtypesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_rpc_subtypes_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResourceRPCSubtypesResponse::~ResourceRPCSubtypesResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.ResourceRPCSubtypesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResourceRPCSubtypesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resource_rpc_subtypes_.~RepeatedPtrField();
}

void ResourceRPCSubtypesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResourceRPCSubtypesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.ResourceRPCSubtypesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resource_rpc_subtypes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceRPCSubtypesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.ResourceRPCSubtype resource_rpc_subtypes = 1 [json_name = "resourceRpcSubtypes"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resource_rpc_subtypes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResourceRPCSubtypesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.ResourceRPCSubtypesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.ResourceRPCSubtype resource_rpc_subtypes = 1 [json_name = "resourceRpcSubtypes"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resource_rpc_subtypes_size()); i < n; i++) {
    const auto& repfield = this->_internal_resource_rpc_subtypes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.ResourceRPCSubtypesResponse)
  return target;
}

size_t ResourceRPCSubtypesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.ResourceRPCSubtypesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.ResourceRPCSubtype resource_rpc_subtypes = 1 [json_name = "resourceRpcSubtypes"];
  total_size += 1UL * this->_internal_resource_rpc_subtypes_size();
  for (const auto& msg : this->_impl_.resource_rpc_subtypes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResourceRPCSubtypesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResourceRPCSubtypesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResourceRPCSubtypesResponse::GetClassData() const { return &_class_data_; }


void ResourceRPCSubtypesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResourceRPCSubtypesResponse*>(&to_msg);
  auto& from = static_cast<const ResourceRPCSubtypesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.ResourceRPCSubtypesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.resource_rpc_subtypes_.MergeFrom(from._impl_.resource_rpc_subtypes_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResourceRPCSubtypesResponse::CopyFrom(const ResourceRPCSubtypesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.ResourceRPCSubtypesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceRPCSubtypesResponse::IsInitialized() const {
  return true;
}

void ResourceRPCSubtypesResponse::InternalSwap(ResourceRPCSubtypesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resource_rpc_subtypes_.InternalSwap(&other->_impl_.resource_rpc_subtypes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceRPCSubtypesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[11]);
}

// ===================================================================

class Operation::_Internal {
 public:
  using HasBits = decltype(std::declval<Operation>()._impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& arguments(const Operation* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& started(const Operation* msg);
  static void set_has_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Struct&
Operation::_Internal::arguments(const Operation* msg) {
  return *msg->_impl_.arguments_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Operation::_Internal::started(const Operation* msg) {
  return *msg->_impl_.started_;
}
void Operation::clear_arguments() {
  if (GetArenaForAllocation() == nullptr && _impl_.arguments_ != nullptr) {
    delete _impl_.arguments_;
  }
  _impl_.arguments_ = nullptr;
}
void Operation::clear_started() {
  if (GetArenaForAllocation() == nullptr && _impl_.started_ != nullptr) {
    delete _impl_.started_;
  }
  _impl_.started_ = nullptr;
}
Operation::Operation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.Operation)
}
Operation::Operation(const Operation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Operation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.id_){}
    , decltype(_impl_.method_){}
    , decltype(_impl_.session_id_){}
    , decltype(_impl_.arguments_){nullptr}
    , decltype(_impl_.started_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.method_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.method_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_method().empty()) {
    _this->_impl_.method_.Set(from._internal_method(), 
      _this->GetArenaForAllocation());
  }
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_session_id()) {
    _this->_impl_.session_id_.Set(from._internal_session_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_arguments()) {
    _this->_impl_.arguments_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.arguments_);
  }
  if (from._internal_has_started()) {
    _this->_impl_.started_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.started_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.Operation)
}

inline void Operation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.id_){}
    , decltype(_impl_.method_){}
    , decltype(_impl_.session_id_){}
    , decltype(_impl_.arguments_){nullptr}
    , decltype(_impl_.started_){nullptr}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.method_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.method_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.Operation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Operation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.method_.Destroy();
  _impl_.session_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.arguments_;
  if (this != internal_default_instance()) delete _impl_.started_;
}

void Operation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.Operation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.method_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.session_id_.ClearNonDefaultToEmpty();
  }
  if (GetArenaForAllocation() == nullptr && _impl_.arguments_ != nullptr) {
    delete _impl_.arguments_;
  }
  _impl_.arguments_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.started_ != nullptr) {
    delete _impl_.started_;
  }
  _impl_.started_ = nullptr;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Operation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.Operation.id"));
        } else
          goto handle_unusual;
        continue;
      // string method = 2 [json_name = "method"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_method();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.Operation.method"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct arguments = 3 [json_name = "arguments"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_arguments(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp started = 4 [json_name = "started"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_started(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string session_id = 5 [json_name = "sessionId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_session_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.Operation.session_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Operation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.Operation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.Operation.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string method = 2 [json_name = "method"];
  if (!this->_internal_method().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method().data(), static_cast<int>(this->_internal_method().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.Operation.method");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_method(), target);
  }

  // .google.protobuf.Struct arguments = 3 [json_name = "arguments"];
  if (this->_internal_has_arguments()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::arguments(this),
        _Internal::arguments(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp started = 4 [json_name = "started"];
  if (this->_internal_has_started()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::started(this),
        _Internal::started(this).GetCachedSize(), target, stream);
  }

  // optional string session_id = 5 [json_name = "sessionId"];
  if (_internal_has_session_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.Operation.session_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.Operation)
  return target;
}

size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.Operation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string method = 2 [json_name = "method"];
  if (!this->_internal_method().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method());
  }

  // optional string session_id = 5 [json_name = "sessionId"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  // .google.protobuf.Struct arguments = 3 [json_name = "arguments"];
  if (this->_internal_has_arguments()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.arguments_);
  }

  // .google.protobuf.Timestamp started = 4 [json_name = "started"];
  if (this->_internal_has_started()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.started_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Operation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Operation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Operation::GetClassData() const { return &_class_data_; }


void Operation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Operation*>(&to_msg);
  auto& from = static_cast<const Operation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.Operation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_method().empty()) {
    _this->_internal_set_method(from._internal_method());
  }
  if (from._internal_has_session_id()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_has_arguments()) {
    _this->_internal_mutable_arguments()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_arguments());
  }
  if (from._internal_has_started()) {
    _this->_internal_mutable_started()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_started());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  return true;
}

void Operation::InternalSwap(Operation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.method_, lhs_arena,
      &other->_impl_.method_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.session_id_, lhs_arena,
      &other->_impl_.session_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operation, _impl_.started_)
      + sizeof(Operation::_impl_.started_)
      - PROTOBUF_FIELD_OFFSET(Operation, _impl_.arguments_)>(
          reinterpret_cast<char*>(&_impl_.arguments_),
          reinterpret_cast<char*>(&other->_impl_.arguments_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Operation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[12]);
}

// ===================================================================

class GetOperationsRequest::_Internal {
 public:
};

GetOperationsRequest::GetOperationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetOperationsRequest)
}
GetOperationsRequest::GetOperationsRequest(const GetOperationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetOperationsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetOperationsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOperationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOperationsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetOperationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[13]);
}

// ===================================================================

class GetOperationsResponse::_Internal {
 public:
};

GetOperationsResponse::GetOperationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetOperationsResponse)
}
GetOperationsResponse::GetOperationsResponse(const GetOperationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetOperationsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.operations_){from._impl_.operations_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetOperationsResponse)
}

inline void GetOperationsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.operations_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetOperationsResponse::~GetOperationsResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.GetOperationsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetOperationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.operations_.~RepeatedPtrField();
}

void GetOperationsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetOperationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.GetOperationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOperationsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.Operation operations = 1 [json_name = "operations"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_operations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOperationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.GetOperationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Operation operations = 1 [json_name = "operations"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_operations_size()); i < n; i++) {
    const auto& repfield = this->_internal_operations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.GetOperationsResponse)
  return target;
}

size_t GetOperationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.GetOperationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Operation operations = 1 [json_name = "operations"];
  total_size += 1UL * this->_internal_operations_size();
  for (const auto& msg : this->_impl_.operations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOperationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetOperationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOperationsResponse::GetClassData() const { return &_class_data_; }


void GetOperationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetOperationsResponse*>(&to_msg);
  auto& from = static_cast<const GetOperationsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.GetOperationsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.operations_.MergeFrom(from._impl_.operations_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOperationsResponse::CopyFrom(const GetOperationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.GetOperationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOperationsResponse::IsInitialized() const {
  return true;
}

void GetOperationsResponse::InternalSwap(GetOperationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.operations_.InternalSwap(&other->_impl_.operations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOperationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[14]);
}

// ===================================================================

class CancelOperationRequest::_Internal {
 public:
};

CancelOperationRequest::CancelOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.CancelOperationRequest)
}
CancelOperationRequest::CancelOperationRequest(const CancelOperationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CancelOperationRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.CancelOperationRequest)
}

inline void CancelOperationRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CancelOperationRequest::~CancelOperationRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.CancelOperationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CancelOperationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void CancelOperationRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CancelOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.CancelOperationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelOperationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.CancelOperationRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CancelOperationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.CancelOperationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.CancelOperationRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.CancelOperationRequest)
  return target;
}

size_t CancelOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.CancelOperationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CancelOperationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CancelOperationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CancelOperationRequest::GetClassData() const { return &_class_data_; }


void CancelOperationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CancelOperationRequest*>(&to_msg);
  auto& from = static_cast<const CancelOperationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.CancelOperationRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CancelOperationRequest::CopyFrom(const CancelOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.CancelOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelOperationRequest::IsInitialized() const {
  return true;
}

void CancelOperationRequest::InternalSwap(CancelOperationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelOperationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[15]);
}

// ===================================================================

class CancelOperationResponse::_Internal {
 public:
};

CancelOperationResponse::CancelOperationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.CancelOperationResponse)
}
CancelOperationResponse::CancelOperationResponse(const CancelOperationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CancelOperationResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.CancelOperationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CancelOperationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CancelOperationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CancelOperationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[16]);
}

// ===================================================================

class BlockForOperationRequest::_Internal {
 public:
};

BlockForOperationRequest::BlockForOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.BlockForOperationRequest)
}
BlockForOperationRequest::BlockForOperationRequest(const BlockForOperationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BlockForOperationRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.BlockForOperationRequest)
}

inline void BlockForOperationRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BlockForOperationRequest::~BlockForOperationRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.BlockForOperationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BlockForOperationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void BlockForOperationRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BlockForOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.BlockForOperationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockForOperationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.BlockForOperationRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BlockForOperationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.BlockForOperationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.BlockForOperationRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.BlockForOperationRequest)
  return target;
}

size_t BlockForOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.BlockForOperationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlockForOperationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BlockForOperationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlockForOperationRequest::GetClassData() const { return &_class_data_; }


void BlockForOperationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BlockForOperationRequest*>(&to_msg);
  auto& from = static_cast<const BlockForOperationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.BlockForOperationRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlockForOperationRequest::CopyFrom(const BlockForOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.BlockForOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockForOperationRequest::IsInitialized() const {
  return true;
}

void BlockForOperationRequest::InternalSwap(BlockForOperationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockForOperationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[17]);
}

// ===================================================================

class BlockForOperationResponse::_Internal {
 public:
};

BlockForOperationResponse::BlockForOperationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.BlockForOperationResponse)
}
BlockForOperationResponse::BlockForOperationResponse(const BlockForOperationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  BlockForOperationResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.BlockForOperationResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlockForOperationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlockForOperationResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata BlockForOperationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[18]);
}

// ===================================================================

class PeerConnectionInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<PeerConnectionInfo>()._impl_._has_bits_);
  static void set_has_remote_address(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_local_address(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PeerConnectionInfo::PeerConnectionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.PeerConnectionInfo)
}
PeerConnectionInfo::PeerConnectionInfo(const PeerConnectionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PeerConnectionInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.remote_address_){}
    , decltype(_impl_.local_address_){}
    , decltype(_impl_.type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.remote_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.remote_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_remote_address()) {
    _this->_impl_.remote_address_.Set(from._internal_remote_address(), 
      _this->GetArenaForAllocation());
  }
  _impl_.local_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.local_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_local_address()) {
    _this->_impl_.local_address_.Set(from._internal_local_address(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.PeerConnectionInfo)
}

inline void PeerConnectionInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.remote_address_){}
    , decltype(_impl_.local_address_){}
    , decltype(_impl_.type_){0}
  };
  _impl_.remote_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.remote_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.local_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.local_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PeerConnectionInfo::~PeerConnectionInfo() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.PeerConnectionInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PeerConnectionInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.remote_address_.Destroy();
  _impl_.local_address_.Destroy();
}

void PeerConnectionInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PeerConnectionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.PeerConnectionInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.remote_address_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.local_address_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PeerConnectionInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.robot.v1.PeerConnectionType type = 1 [json_name = "type"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::viam::robot::v1::PeerConnectionType>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string remote_address = 2 [json_name = "remoteAddress"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_remote_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.PeerConnectionInfo.remote_address"));
        } else
          goto handle_unusual;
        continue;
      // optional string local_address = 3 [json_name = "localAddress"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_local_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.PeerConnectionInfo.local_address"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PeerConnectionInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.PeerConnectionInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.robot.v1.PeerConnectionType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // optional string remote_address = 2 [json_name = "remoteAddress"];
  if (_internal_has_remote_address()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_remote_address().data(), static_cast<int>(this->_internal_remote_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.PeerConnectionInfo.remote_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_remote_address(), target);
  }

  // optional string local_address = 3 [json_name = "localAddress"];
  if (_internal_has_local_address()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_local_address().data(), static_cast<int>(this->_internal_local_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.PeerConnectionInfo.local_address");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_local_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.PeerConnectionInfo)
  return target;
}

size_t PeerConnectionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.PeerConnectionInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string remote_address = 2 [json_name = "remoteAddress"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_remote_address());
    }

    // optional string local_address = 3 [json_name = "localAddress"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_local_address());
    }

  }
  // .viam.robot.v1.PeerConnectionType type = 1 [json_name = "type"];
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PeerConnectionInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PeerConnectionInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PeerConnectionInfo::GetClassData() const { return &_class_data_; }


void PeerConnectionInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PeerConnectionInfo*>(&to_msg);
  auto& from = static_cast<const PeerConnectionInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.PeerConnectionInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_remote_address(from._internal_remote_address());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_local_address(from._internal_local_address());
    }
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PeerConnectionInfo::CopyFrom(const PeerConnectionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.PeerConnectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeerConnectionInfo::IsInitialized() const {
  return true;
}

void PeerConnectionInfo::InternalSwap(PeerConnectionInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.remote_address_, lhs_arena,
      &other->_impl_.remote_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.local_address_, lhs_arena,
      &other->_impl_.local_address_, rhs_arena
  );
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PeerConnectionInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[19]);
}

// ===================================================================

class Session::_Internal {
 public:
  using HasBits = decltype(std::declval<Session>()._impl_._has_bits_);
  static const ::viam::robot::v1::PeerConnectionInfo& peer_connection_info(const Session* msg);
  static void set_has_peer_connection_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::viam::robot::v1::PeerConnectionInfo&
Session::_Internal::peer_connection_info(const Session* msg) {
  return *msg->_impl_.peer_connection_info_;
}
Session::Session(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.Session)
}
Session::Session(const Session& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Session* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.id_){}
    , decltype(_impl_.peer_connection_info_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_peer_connection_info()) {
    _this->_impl_.peer_connection_info_ = new ::viam::robot::v1::PeerConnectionInfo(*from._impl_.peer_connection_info_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.Session)
}

inline void Session::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.id_){}
    , decltype(_impl_.peer_connection_info_){nullptr}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Session::~Session() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.Session)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Session::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.peer_connection_info_;
}

void Session::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Session::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.Session)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.peer_connection_info_ != nullptr);
    _impl_.peer_connection_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Session::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.Session.id"));
        } else
          goto handle_unusual;
        continue;
      // optional .viam.robot.v1.PeerConnectionInfo peer_connection_info = 2 [json_name = "peerConnectionInfo"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_peer_connection_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Session::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.Session)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.Session.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // optional .viam.robot.v1.PeerConnectionInfo peer_connection_info = 2 [json_name = "peerConnectionInfo"];
  if (_internal_has_peer_connection_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::peer_connection_info(this),
        _Internal::peer_connection_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.Session)
  return target;
}

size_t Session::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.Session)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // optional .viam.robot.v1.PeerConnectionInfo peer_connection_info = 2 [json_name = "peerConnectionInfo"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.peer_connection_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Session::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Session::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Session::GetClassData() const { return &_class_data_; }


void Session::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Session*>(&to_msg);
  auto& from = static_cast<const Session&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.Session)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_has_peer_connection_info()) {
    _this->_internal_mutable_peer_connection_info()->::viam::robot::v1::PeerConnectionInfo::MergeFrom(
        from._internal_peer_connection_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Session::CopyFrom(const Session& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Session::IsInitialized() const {
  return true;
}

void Session::InternalSwap(Session* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.peer_connection_info_, other->_impl_.peer_connection_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Session::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[20]);
}

// ===================================================================

class GetSessionsRequest::_Internal {
 public:
};

GetSessionsRequest::GetSessionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetSessionsRequest)
}
GetSessionsRequest::GetSessionsRequest(const GetSessionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetSessionsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetSessionsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSessionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSessionsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetSessionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[21]);
}

// ===================================================================

class GetSessionsResponse::_Internal {
 public:
};

GetSessionsResponse::GetSessionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetSessionsResponse)
}
GetSessionsResponse::GetSessionsResponse(const GetSessionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSessionsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sessions_){from._impl_.sessions_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetSessionsResponse)
}

inline void GetSessionsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sessions_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSessionsResponse::~GetSessionsResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.GetSessionsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSessionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sessions_.~RepeatedPtrField();
}

void GetSessionsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSessionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.GetSessionsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sessions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSessionsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.Session sessions = 1 [json_name = "sessions"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sessions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSessionsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.GetSessionsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Session sessions = 1 [json_name = "sessions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sessions_size()); i < n; i++) {
    const auto& repfield = this->_internal_sessions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.GetSessionsResponse)
  return target;
}

size_t GetSessionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.GetSessionsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Session sessions = 1 [json_name = "sessions"];
  total_size += 1UL * this->_internal_sessions_size();
  for (const auto& msg : this->_impl_.sessions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSessionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSessionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSessionsResponse::GetClassData() const { return &_class_data_; }


void GetSessionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSessionsResponse*>(&to_msg);
  auto& from = static_cast<const GetSessionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.GetSessionsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.sessions_.MergeFrom(from._impl_.sessions_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSessionsResponse::CopyFrom(const GetSessionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.GetSessionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSessionsResponse::IsInitialized() const {
  return true;
}

void GetSessionsResponse::InternalSwap(GetSessionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sessions_.InternalSwap(&other->_impl_.sessions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSessionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[22]);
}

// ===================================================================

class DiscoveryQuery::_Internal {
 public:
};

DiscoveryQuery::DiscoveryQuery(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.DiscoveryQuery)
}
DiscoveryQuery::DiscoveryQuery(const DiscoveryQuery& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DiscoveryQuery* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.subtype_){}
    , decltype(_impl_.model_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.subtype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.subtype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_subtype().empty()) {
    _this->_impl_.subtype_.Set(from._internal_subtype(), 
      _this->GetArenaForAllocation());
  }
  _impl_.model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model().empty()) {
    _this->_impl_.model_.Set(from._internal_model(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.DiscoveryQuery)
}

inline void DiscoveryQuery::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.subtype_){}
    , decltype(_impl_.model_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.subtype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.subtype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.model_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DiscoveryQuery::~DiscoveryQuery() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.DiscoveryQuery)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DiscoveryQuery::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.subtype_.Destroy();
  _impl_.model_.Destroy();
}

void DiscoveryQuery::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DiscoveryQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.DiscoveryQuery)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subtype_.ClearToEmpty();
  _impl_.model_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DiscoveryQuery::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string subtype = 1 [json_name = "subtype"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_subtype();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.DiscoveryQuery.subtype"));
        } else
          goto handle_unusual;
        continue;
      // string model = 2 [json_name = "model"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.DiscoveryQuery.model"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DiscoveryQuery::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.DiscoveryQuery)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string subtype = 1 [json_name = "subtype"];
  if (!this->_internal_subtype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subtype().data(), static_cast<int>(this->_internal_subtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.DiscoveryQuery.subtype");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subtype(), target);
  }

  // string model = 2 [json_name = "model"];
  if (!this->_internal_model().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model().data(), static_cast<int>(this->_internal_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.DiscoveryQuery.model");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.DiscoveryQuery)
  return target;
}

size_t DiscoveryQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.DiscoveryQuery)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subtype = 1 [json_name = "subtype"];
  if (!this->_internal_subtype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subtype());
  }

  // string model = 2 [json_name = "model"];
  if (!this->_internal_model().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DiscoveryQuery::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DiscoveryQuery::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DiscoveryQuery::GetClassData() const { return &_class_data_; }


void DiscoveryQuery::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DiscoveryQuery*>(&to_msg);
  auto& from = static_cast<const DiscoveryQuery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.DiscoveryQuery)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_subtype().empty()) {
    _this->_internal_set_subtype(from._internal_subtype());
  }
  if (!from._internal_model().empty()) {
    _this->_internal_set_model(from._internal_model());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DiscoveryQuery::CopyFrom(const DiscoveryQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.DiscoveryQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoveryQuery::IsInitialized() const {
  return true;
}

void DiscoveryQuery::InternalSwap(DiscoveryQuery* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.subtype_, lhs_arena,
      &other->_impl_.subtype_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_, lhs_arena,
      &other->_impl_.model_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DiscoveryQuery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[23]);
}

// ===================================================================

class Discovery::_Internal {
 public:
  static const ::viam::robot::v1::DiscoveryQuery& query(const Discovery* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& results(const Discovery* msg);
};

const ::viam::robot::v1::DiscoveryQuery&
Discovery::_Internal::query(const Discovery* msg) {
  return *msg->_impl_.query_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
Discovery::_Internal::results(const Discovery* msg) {
  return *msg->_impl_.results_;
}
void Discovery::clear_results() {
  if (GetArenaForAllocation() == nullptr && _impl_.results_ != nullptr) {
    delete _impl_.results_;
  }
  _impl_.results_ = nullptr;
}
Discovery::Discovery(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.Discovery)
}
Discovery::Discovery(const Discovery& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Discovery* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.query_){nullptr}
    , decltype(_impl_.results_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_query()) {
    _this->_impl_.query_ = new ::viam::robot::v1::DiscoveryQuery(*from._impl_.query_);
  }
  if (from._internal_has_results()) {
    _this->_impl_.results_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.results_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.Discovery)
}

inline void Discovery::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.query_){nullptr}
    , decltype(_impl_.results_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Discovery::~Discovery() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.Discovery)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Discovery::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.query_;
  if (this != internal_default_instance()) delete _impl_.results_;
}

void Discovery::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Discovery::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.Discovery)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.query_ != nullptr) {
    delete _impl_.query_;
  }
  _impl_.query_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.results_ != nullptr) {
    delete _impl_.results_;
  }
  _impl_.results_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Discovery::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.robot.v1.DiscoveryQuery query = 1 [json_name = "query"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_query(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct results = 2 [json_name = "results"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_results(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Discovery::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.Discovery)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.robot.v1.DiscoveryQuery query = 1 [json_name = "query"];
  if (this->_internal_has_query()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::query(this),
        _Internal::query(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct results = 2 [json_name = "results"];
  if (this->_internal_has_results()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::results(this),
        _Internal::results(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.Discovery)
  return target;
}

size_t Discovery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.Discovery)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.robot.v1.DiscoveryQuery query = 1 [json_name = "query"];
  if (this->_internal_has_query()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.query_);
  }

  // .google.protobuf.Struct results = 2 [json_name = "results"];
  if (this->_internal_has_results()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.results_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Discovery::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Discovery::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Discovery::GetClassData() const { return &_class_data_; }


void Discovery::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Discovery*>(&to_msg);
  auto& from = static_cast<const Discovery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.Discovery)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_query()) {
    _this->_internal_mutable_query()->::viam::robot::v1::DiscoveryQuery::MergeFrom(
        from._internal_query());
  }
  if (from._internal_has_results()) {
    _this->_internal_mutable_results()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_results());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Discovery::CopyFrom(const Discovery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.Discovery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Discovery::IsInitialized() const {
  return true;
}

void Discovery::InternalSwap(Discovery* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Discovery, _impl_.results_)
      + sizeof(Discovery::_impl_.results_)
      - PROTOBUF_FIELD_OFFSET(Discovery, _impl_.query_)>(
          reinterpret_cast<char*>(&_impl_.query_),
          reinterpret_cast<char*>(&other->_impl_.query_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Discovery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[24]);
}

// ===================================================================

class DiscoverComponentsRequest::_Internal {
 public:
};

DiscoverComponentsRequest::DiscoverComponentsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.DiscoverComponentsRequest)
}
DiscoverComponentsRequest::DiscoverComponentsRequest(const DiscoverComponentsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DiscoverComponentsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.queries_){from._impl_.queries_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.DiscoverComponentsRequest)
}

inline void DiscoverComponentsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.queries_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DiscoverComponentsRequest::~DiscoverComponentsRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.DiscoverComponentsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DiscoverComponentsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.queries_.~RepeatedPtrField();
}

void DiscoverComponentsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DiscoverComponentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.DiscoverComponentsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.queries_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DiscoverComponentsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.DiscoveryQuery queries = 1 [json_name = "queries"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_queries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DiscoverComponentsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.DiscoverComponentsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.DiscoveryQuery queries = 1 [json_name = "queries"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_queries_size()); i < n; i++) {
    const auto& repfield = this->_internal_queries(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.DiscoverComponentsRequest)
  return target;
}

size_t DiscoverComponentsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.DiscoverComponentsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.DiscoveryQuery queries = 1 [json_name = "queries"];
  total_size += 1UL * this->_internal_queries_size();
  for (const auto& msg : this->_impl_.queries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DiscoverComponentsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DiscoverComponentsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DiscoverComponentsRequest::GetClassData() const { return &_class_data_; }


void DiscoverComponentsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DiscoverComponentsRequest*>(&to_msg);
  auto& from = static_cast<const DiscoverComponentsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.DiscoverComponentsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.queries_.MergeFrom(from._impl_.queries_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DiscoverComponentsRequest::CopyFrom(const DiscoverComponentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.DiscoverComponentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoverComponentsRequest::IsInitialized() const {
  return true;
}

void DiscoverComponentsRequest::InternalSwap(DiscoverComponentsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.queries_.InternalSwap(&other->_impl_.queries_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DiscoverComponentsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[25]);
}

// ===================================================================

class DiscoverComponentsResponse::_Internal {
 public:
};

DiscoverComponentsResponse::DiscoverComponentsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.DiscoverComponentsResponse)
}
DiscoverComponentsResponse::DiscoverComponentsResponse(const DiscoverComponentsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DiscoverComponentsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.discovery_){from._impl_.discovery_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.DiscoverComponentsResponse)
}

inline void DiscoverComponentsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.discovery_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DiscoverComponentsResponse::~DiscoverComponentsResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.DiscoverComponentsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DiscoverComponentsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.discovery_.~RepeatedPtrField();
}

void DiscoverComponentsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DiscoverComponentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.DiscoverComponentsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.discovery_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DiscoverComponentsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.Discovery discovery = 1 [json_name = "discovery"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_discovery(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DiscoverComponentsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.DiscoverComponentsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Discovery discovery = 1 [json_name = "discovery"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_discovery_size()); i < n; i++) {
    const auto& repfield = this->_internal_discovery(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.DiscoverComponentsResponse)
  return target;
}

size_t DiscoverComponentsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.DiscoverComponentsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Discovery discovery = 1 [json_name = "discovery"];
  total_size += 1UL * this->_internal_discovery_size();
  for (const auto& msg : this->_impl_.discovery_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DiscoverComponentsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DiscoverComponentsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DiscoverComponentsResponse::GetClassData() const { return &_class_data_; }


void DiscoverComponentsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DiscoverComponentsResponse*>(&to_msg);
  auto& from = static_cast<const DiscoverComponentsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.DiscoverComponentsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.discovery_.MergeFrom(from._impl_.discovery_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DiscoverComponentsResponse::CopyFrom(const DiscoverComponentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.DiscoverComponentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoverComponentsResponse::IsInitialized() const {
  return true;
}

void DiscoverComponentsResponse::InternalSwap(DiscoverComponentsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.discovery_.InternalSwap(&other->_impl_.discovery_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DiscoverComponentsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[26]);
}

// ===================================================================

class Status::_Internal {
 public:
  static const ::viam::common::v1::ResourceName& name(const Status* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& status(const Status* msg);
};

const ::viam::common::v1::ResourceName&
Status::_Internal::name(const Status* msg) {
  return *msg->_impl_.name_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
Status::_Internal::status(const Status* msg) {
  return *msg->_impl_.status_;
}
void Status::clear_name() {
  if (GetArenaForAllocation() == nullptr && _impl_.name_ != nullptr) {
    delete _impl_.name_;
  }
  _impl_.name_ = nullptr;
}
void Status::clear_status() {
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
}
Status::Status(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.Status)
}
Status::Status(const Status& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Status* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){nullptr}
    , decltype(_impl_.status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_name()) {
    _this->_impl_.name_ = new ::viam::common::v1::ResourceName(*from._impl_.name_);
  }
  if (from._internal_has_status()) {
    _this->_impl_.status_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.Status)
}

inline void Status::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){nullptr}
    , decltype(_impl_.status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.Status)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Status::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.name_;
  if (this != internal_default_instance()) delete _impl_.status_;
}

void Status::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.Status)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.name_ != nullptr) {
    delete _impl_.name_;
  }
  _impl_.name_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Status::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_name(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Status::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.Status)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
  if (this->_internal_has_name()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::name(this),
        _Internal::name(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct status = 2 [json_name = "status"];
  if (this->_internal_has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.Status)
  return target;
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.Status)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
  if (this->_internal_has_name()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.name_);
  }

  // .google.protobuf.Struct status = 2 [json_name = "status"];
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Status::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Status::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Status::GetClassData() const { return &_class_data_; }


void Status::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Status*>(&to_msg);
  auto& from = static_cast<const Status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.Status)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_name()) {
    _this->_internal_mutable_name()->::viam::common::v1::ResourceName::MergeFrom(
        from._internal_name());
  }
  if (from._internal_has_status()) {
    _this->_internal_mutable_status()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::InternalSwap(Status* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Status, _impl_.status_)
      + sizeof(Status::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(Status, _impl_.name_)>(
          reinterpret_cast<char*>(&_impl_.name_),
          reinterpret_cast<char*>(&other->_impl_.name_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Status::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[27]);
}

// ===================================================================

class GetStatusRequest::_Internal {
 public:
};

void GetStatusRequest::clear_resource_names() {
  _impl_.resource_names_.Clear();
}
GetStatusRequest::GetStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetStatusRequest)
}
GetStatusRequest::GetStatusRequest(const GetStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStatusRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_names_){from._impl_.resource_names_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetStatusRequest)
}

inline void GetStatusRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_names_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetStatusRequest::~GetStatusRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.GetStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resource_names_.~RepeatedPtrField();
}

void GetStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.GetStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resource_names_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resource_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.GetStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resource_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_resource_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.GetStatusRequest)
  return target;
}

size_t GetStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.GetStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
  total_size += 1UL * this->_internal_resource_names_size();
  for (const auto& msg : this->_impl_.resource_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStatusRequest::GetClassData() const { return &_class_data_; }


void GetStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStatusRequest*>(&to_msg);
  auto& from = static_cast<const GetStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.GetStatusRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.resource_names_.MergeFrom(from._impl_.resource_names_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStatusRequest::CopyFrom(const GetStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.GetStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusRequest::IsInitialized() const {
  return true;
}

void GetStatusRequest::InternalSwap(GetStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resource_names_.InternalSwap(&other->_impl_.resource_names_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[28]);
}

// ===================================================================

class GetStatusResponse::_Internal {
 public:
};

GetStatusResponse::GetStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.GetStatusResponse)
}
GetStatusResponse::GetStatusResponse(const GetStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStatusResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.status_){from._impl_.status_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.GetStatusResponse)
}

inline void GetStatusResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.status_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetStatusResponse::~GetStatusResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.GetStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.status_.~RepeatedPtrField();
}

void GetStatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.GetStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_status(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.GetStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_status_size()); i < n; i++) {
    const auto& repfield = this->_internal_status(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.GetStatusResponse)
  return target;
}

size_t GetStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.GetStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
  total_size += 1UL * this->_internal_status_size();
  for (const auto& msg : this->_impl_.status_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStatusResponse::GetClassData() const { return &_class_data_; }


void GetStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStatusResponse*>(&to_msg);
  auto& from = static_cast<const GetStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.GetStatusResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.status_.MergeFrom(from._impl_.status_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStatusResponse::CopyFrom(const GetStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.GetStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatusResponse::IsInitialized() const {
  return true;
}

void GetStatusResponse::InternalSwap(GetStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.status_.InternalSwap(&other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[29]);
}

// ===================================================================

class StreamStatusRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Duration& every(const StreamStatusRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Duration&
StreamStatusRequest::_Internal::every(const StreamStatusRequest* msg) {
  return *msg->_impl_.every_;
}
void StreamStatusRequest::clear_resource_names() {
  _impl_.resource_names_.Clear();
}
void StreamStatusRequest::clear_every() {
  if (GetArenaForAllocation() == nullptr && _impl_.every_ != nullptr) {
    delete _impl_.every_;
  }
  _impl_.every_ = nullptr;
}
StreamStatusRequest::StreamStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StreamStatusRequest)
}
StreamStatusRequest::StreamStatusRequest(const StreamStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamStatusRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_names_){from._impl_.resource_names_}
    , decltype(_impl_.every_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_every()) {
    _this->_impl_.every_ = new ::PROTOBUF_NAMESPACE_ID::Duration(*from._impl_.every_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StreamStatusRequest)
}

inline void StreamStatusRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_names_){arena}
    , decltype(_impl_.every_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StreamStatusRequest::~StreamStatusRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.StreamStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resource_names_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.every_;
}

void StreamStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.StreamStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resource_names_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.every_ != nullptr) {
    delete _impl_.every_;
  }
  _impl_.every_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resource_names(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Duration every = 2 [json_name = "every"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_every(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.StreamStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resource_names_size()); i < n; i++) {
    const auto& repfield = this->_internal_resource_names(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .google.protobuf.Duration every = 2 [json_name = "every"];
  if (this->_internal_has_every()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::every(this),
        _Internal::every(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.StreamStatusRequest)
  return target;
}

size_t StreamStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.StreamStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.common.v1.ResourceName resource_names = 1 [json_name = "resourceNames"];
  total_size += 1UL * this->_internal_resource_names_size();
  for (const auto& msg : this->_impl_.resource_names_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.protobuf.Duration every = 2 [json_name = "every"];
  if (this->_internal_has_every()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.every_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamStatusRequest::GetClassData() const { return &_class_data_; }


void StreamStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamStatusRequest*>(&to_msg);
  auto& from = static_cast<const StreamStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.StreamStatusRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.resource_names_.MergeFrom(from._impl_.resource_names_);
  if (from._internal_has_every()) {
    _this->_internal_mutable_every()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(
        from._internal_every());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamStatusRequest::CopyFrom(const StreamStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.StreamStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamStatusRequest::IsInitialized() const {
  return true;
}

void StreamStatusRequest::InternalSwap(StreamStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resource_names_.InternalSwap(&other->_impl_.resource_names_);
  swap(_impl_.every_, other->_impl_.every_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[30]);
}

// ===================================================================

class StreamStatusResponse::_Internal {
 public:
};

StreamStatusResponse::StreamStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StreamStatusResponse)
}
StreamStatusResponse::StreamStatusResponse(const StreamStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamStatusResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.status_){from._impl_.status_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StreamStatusResponse)
}

inline void StreamStatusResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.status_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StreamStatusResponse::~StreamStatusResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.StreamStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.status_.~RepeatedPtrField();
}

void StreamStatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.StreamStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_status(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.StreamStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_status_size()); i < n; i++) {
    const auto& repfield = this->_internal_status(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.StreamStatusResponse)
  return target;
}

size_t StreamStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.StreamStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.Status status = 1 [json_name = "status"];
  total_size += 1UL * this->_internal_status_size();
  for (const auto& msg : this->_impl_.status_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamStatusResponse::GetClassData() const { return &_class_data_; }


void StreamStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamStatusResponse*>(&to_msg);
  auto& from = static_cast<const StreamStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.StreamStatusResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.status_.MergeFrom(from._impl_.status_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamStatusResponse::CopyFrom(const StreamStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.StreamStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamStatusResponse::IsInitialized() const {
  return true;
}

void StreamStatusResponse::InternalSwap(StreamStatusResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.status_.InternalSwap(&other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[31]);
}

// ===================================================================

class StopExtraParameters::_Internal {
 public:
  static const ::viam::common::v1::ResourceName& name(const StopExtraParameters* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Struct& params(const StopExtraParameters* msg);
};

const ::viam::common::v1::ResourceName&
StopExtraParameters::_Internal::name(const StopExtraParameters* msg) {
  return *msg->_impl_.name_;
}
const ::PROTOBUF_NAMESPACE_ID::Struct&
StopExtraParameters::_Internal::params(const StopExtraParameters* msg) {
  return *msg->_impl_.params_;
}
void StopExtraParameters::clear_name() {
  if (GetArenaForAllocation() == nullptr && _impl_.name_ != nullptr) {
    delete _impl_.name_;
  }
  _impl_.name_ = nullptr;
}
void StopExtraParameters::clear_params() {
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
}
StopExtraParameters::StopExtraParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StopExtraParameters)
}
StopExtraParameters::StopExtraParameters(const StopExtraParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StopExtraParameters* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){nullptr}
    , decltype(_impl_.params_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_name()) {
    _this->_impl_.name_ = new ::viam::common::v1::ResourceName(*from._impl_.name_);
  }
  if (from._internal_has_params()) {
    _this->_impl_.params_ = new ::PROTOBUF_NAMESPACE_ID::Struct(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StopExtraParameters)
}

inline void StopExtraParameters::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){nullptr}
    , decltype(_impl_.params_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StopExtraParameters::~StopExtraParameters() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.StopExtraParameters)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopExtraParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.name_;
  if (this != internal_default_instance()) delete _impl_.params_;
}

void StopExtraParameters::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StopExtraParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.StopExtraParameters)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.name_ != nullptr) {
    delete _impl_.name_;
  }
  _impl_.name_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.params_ != nullptr) {
    delete _impl_.params_;
  }
  _impl_.params_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopExtraParameters::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_name(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Struct params = 2 [json_name = "params"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopExtraParameters::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.StopExtraParameters)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
  if (this->_internal_has_name()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::name(this),
        _Internal::name(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Struct params = 2 [json_name = "params"];
  if (this->_internal_has_params()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.StopExtraParameters)
  return target;
}

size_t StopExtraParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.StopExtraParameters)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.common.v1.ResourceName name = 1 [json_name = "name"];
  if (this->_internal_has_name()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.name_);
  }

  // .google.protobuf.Struct params = 2 [json_name = "params"];
  if (this->_internal_has_params()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopExtraParameters::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StopExtraParameters::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopExtraParameters::GetClassData() const { return &_class_data_; }


void StopExtraParameters::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StopExtraParameters*>(&to_msg);
  auto& from = static_cast<const StopExtraParameters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.StopExtraParameters)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_name()) {
    _this->_internal_mutable_name()->::viam::common::v1::ResourceName::MergeFrom(
        from._internal_name());
  }
  if (from._internal_has_params()) {
    _this->_internal_mutable_params()->::PROTOBUF_NAMESPACE_ID::Struct::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopExtraParameters::CopyFrom(const StopExtraParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.StopExtraParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopExtraParameters::IsInitialized() const {
  return true;
}

void StopExtraParameters::InternalSwap(StopExtraParameters* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StopExtraParameters, _impl_.params_)
      + sizeof(StopExtraParameters::_impl_.params_)
      - PROTOBUF_FIELD_OFFSET(StopExtraParameters, _impl_.name_)>(
          reinterpret_cast<char*>(&_impl_.name_),
          reinterpret_cast<char*>(&other->_impl_.name_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StopExtraParameters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[32]);
}

// ===================================================================

class StopAllRequest::_Internal {
 public:
};

StopAllRequest::StopAllRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StopAllRequest)
}
StopAllRequest::StopAllRequest(const StopAllRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StopAllRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.extra_){from._impl_.extra_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StopAllRequest)
}

inline void StopAllRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.extra_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StopAllRequest::~StopAllRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.StopAllRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopAllRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.extra_.~RepeatedPtrField();
}

void StopAllRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StopAllRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.StopAllRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extra_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopAllRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .viam.robot.v1.StopExtraParameters extra = 99 [json_name = "extra"];
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_extra(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<794>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopAllRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.StopAllRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .viam.robot.v1.StopExtraParameters extra = 99 [json_name = "extra"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_extra_size()); i < n; i++) {
    const auto& repfield = this->_internal_extra(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(99, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.StopAllRequest)
  return target;
}

size_t StopAllRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.StopAllRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .viam.robot.v1.StopExtraParameters extra = 99 [json_name = "extra"];
  total_size += 2UL * this->_internal_extra_size();
  for (const auto& msg : this->_impl_.extra_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopAllRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StopAllRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopAllRequest::GetClassData() const { return &_class_data_; }


void StopAllRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StopAllRequest*>(&to_msg);
  auto& from = static_cast<const StopAllRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.StopAllRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.extra_.MergeFrom(from._impl_.extra_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopAllRequest::CopyFrom(const StopAllRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.StopAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopAllRequest::IsInitialized() const {
  return true;
}

void StopAllRequest::InternalSwap(StopAllRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.extra_.InternalSwap(&other->_impl_.extra_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopAllRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[33]);
}

// ===================================================================

class StopAllResponse::_Internal {
 public:
};

StopAllResponse::StopAllResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StopAllResponse)
}
StopAllResponse::StopAllResponse(const StopAllResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  StopAllResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StopAllResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopAllResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopAllResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StopAllResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[34]);
}

// ===================================================================

class StartSessionRequest::_Internal {
 public:
};

StartSessionRequest::StartSessionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StartSessionRequest)
}
StartSessionRequest::StartSessionRequest(const StartSessionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StartSessionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resume_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.resume_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resume_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resume().empty()) {
    _this->_impl_.resume_.Set(from._internal_resume(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StartSessionRequest)
}

inline void StartSessionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resume_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.resume_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resume_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StartSessionRequest::~StartSessionRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.StartSessionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StartSessionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resume_.Destroy();
}

void StartSessionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StartSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.StartSessionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resume_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartSessionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string resume = 1 [json_name = "resume"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_resume();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.StartSessionRequest.resume"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StartSessionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.StartSessionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string resume = 1 [json_name = "resume"];
  if (!this->_internal_resume().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resume().data(), static_cast<int>(this->_internal_resume().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.StartSessionRequest.resume");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_resume(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.StartSessionRequest)
  return target;
}

size_t StartSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.StartSessionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resume = 1 [json_name = "resume"];
  if (!this->_internal_resume().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resume());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartSessionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StartSessionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartSessionRequest::GetClassData() const { return &_class_data_; }


void StartSessionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StartSessionRequest*>(&to_msg);
  auto& from = static_cast<const StartSessionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.StartSessionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_resume().empty()) {
    _this->_internal_set_resume(from._internal_resume());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartSessionRequest::CopyFrom(const StartSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.StartSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartSessionRequest::IsInitialized() const {
  return true;
}

void StartSessionRequest::InternalSwap(StartSessionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.resume_, lhs_arena,
      &other->_impl_.resume_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StartSessionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[35]);
}

// ===================================================================

class StartSessionResponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Duration& heartbeat_window(const StartSessionResponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Duration&
StartSessionResponse::_Internal::heartbeat_window(const StartSessionResponse* msg) {
  return *msg->_impl_.heartbeat_window_;
}
void StartSessionResponse::clear_heartbeat_window() {
  if (GetArenaForAllocation() == nullptr && _impl_.heartbeat_window_ != nullptr) {
    delete _impl_.heartbeat_window_;
  }
  _impl_.heartbeat_window_ = nullptr;
}
StartSessionResponse::StartSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.StartSessionResponse)
}
StartSessionResponse::StartSessionResponse(const StartSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StartSessionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.heartbeat_window_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_heartbeat_window()) {
    _this->_impl_.heartbeat_window_ = new ::PROTOBUF_NAMESPACE_ID::Duration(*from._impl_.heartbeat_window_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.StartSessionResponse)
}

inline void StartSessionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.heartbeat_window_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StartSessionResponse::~StartSessionResponse() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.StartSessionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StartSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.heartbeat_window_;
}

void StartSessionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StartSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.StartSessionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.heartbeat_window_ != nullptr) {
    delete _impl_.heartbeat_window_;
  }
  _impl_.heartbeat_window_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartSessionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.StartSessionResponse.id"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Duration heartbeat_window = 2 [json_name = "heartbeatWindow"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_heartbeat_window(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StartSessionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.StartSessionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.StartSessionResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .google.protobuf.Duration heartbeat_window = 2 [json_name = "heartbeatWindow"];
  if (this->_internal_has_heartbeat_window()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::heartbeat_window(this),
        _Internal::heartbeat_window(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.StartSessionResponse)
  return target;
}

size_t StartSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.StartSessionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .google.protobuf.Duration heartbeat_window = 2 [json_name = "heartbeatWindow"];
  if (this->_internal_has_heartbeat_window()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.heartbeat_window_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartSessionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StartSessionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartSessionResponse::GetClassData() const { return &_class_data_; }


void StartSessionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StartSessionResponse*>(&to_msg);
  auto& from = static_cast<const StartSessionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.StartSessionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_has_heartbeat_window()) {
    _this->_internal_mutable_heartbeat_window()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(
        from._internal_heartbeat_window());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartSessionResponse::CopyFrom(const StartSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.StartSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartSessionResponse::IsInitialized() const {
  return true;
}

void StartSessionResponse::InternalSwap(StartSessionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.heartbeat_window_, other->_impl_.heartbeat_window_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartSessionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[36]);
}

// ===================================================================

class SendSessionHeartbeatRequest::_Internal {
 public:
};

SendSessionHeartbeatRequest::SendSessionHeartbeatRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.SendSessionHeartbeatRequest)
}
SendSessionHeartbeatRequest::SendSessionHeartbeatRequest(const SendSessionHeartbeatRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SendSessionHeartbeatRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.SendSessionHeartbeatRequest)
}

inline void SendSessionHeartbeatRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SendSessionHeartbeatRequest::~SendSessionHeartbeatRequest() {
  // @@protoc_insertion_point(destructor:viam.robot.v1.SendSessionHeartbeatRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SendSessionHeartbeatRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void SendSessionHeartbeatRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SendSessionHeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.robot.v1.SendSessionHeartbeatRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendSessionHeartbeatRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.robot.v1.SendSessionHeartbeatRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SendSessionHeartbeatRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.robot.v1.SendSessionHeartbeatRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.robot.v1.SendSessionHeartbeatRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.robot.v1.SendSessionHeartbeatRequest)
  return target;
}

size_t SendSessionHeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.robot.v1.SendSessionHeartbeatRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendSessionHeartbeatRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SendSessionHeartbeatRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendSessionHeartbeatRequest::GetClassData() const { return &_class_data_; }


void SendSessionHeartbeatRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SendSessionHeartbeatRequest*>(&to_msg);
  auto& from = static_cast<const SendSessionHeartbeatRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.robot.v1.SendSessionHeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendSessionHeartbeatRequest::CopyFrom(const SendSessionHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.robot.v1.SendSessionHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendSessionHeartbeatRequest::IsInitialized() const {
  return true;
}

void SendSessionHeartbeatRequest::InternalSwap(SendSessionHeartbeatRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SendSessionHeartbeatRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[37]);
}

// ===================================================================

class SendSessionHeartbeatResponse::_Internal {
 public:
};

SendSessionHeartbeatResponse::SendSessionHeartbeatResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:viam.robot.v1.SendSessionHeartbeatResponse)
}
SendSessionHeartbeatResponse::SendSessionHeartbeatResponse(const SendSessionHeartbeatResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SendSessionHeartbeatResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:viam.robot.v1.SendSessionHeartbeatResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendSessionHeartbeatResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendSessionHeartbeatResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SendSessionHeartbeatResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_robot_2fv1_2frobot_2eproto_getter, &descriptor_table_robot_2fv1_2frobot_2eproto_once,
      file_level_metadata_robot_2fv1_2frobot_2eproto[38]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace robot
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::robot::v1::FrameSystemConfig*
Arena::CreateMaybeMessage< ::viam::robot::v1::FrameSystemConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::FrameSystemConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::FrameSystemConfigRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::FrameSystemConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::FrameSystemConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::FrameSystemConfigResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::FrameSystemConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::FrameSystemConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::TransformPoseRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::TransformPoseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::TransformPoseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::TransformPoseResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::TransformPoseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::TransformPoseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::TransformPCDRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::TransformPCDRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::TransformPCDRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::TransformPCDResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::TransformPCDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::TransformPCDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ResourceNamesRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::ResourceNamesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ResourceNamesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ResourceNamesResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::ResourceNamesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ResourceNamesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ResourceRPCSubtype*
Arena::CreateMaybeMessage< ::viam::robot::v1::ResourceRPCSubtype >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ResourceRPCSubtype >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ResourceRPCSubtypesRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::ResourceRPCSubtypesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ResourceRPCSubtypesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::ResourceRPCSubtypesResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::ResourceRPCSubtypesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::ResourceRPCSubtypesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::Operation*
Arena::CreateMaybeMessage< ::viam::robot::v1::Operation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::Operation >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetOperationsRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetOperationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetOperationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetOperationsResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetOperationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetOperationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::CancelOperationRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::CancelOperationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::CancelOperationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::CancelOperationResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::CancelOperationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::CancelOperationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::BlockForOperationRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::BlockForOperationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::BlockForOperationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::BlockForOperationResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::BlockForOperationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::BlockForOperationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::PeerConnectionInfo*
Arena::CreateMaybeMessage< ::viam::robot::v1::PeerConnectionInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::PeerConnectionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::Session*
Arena::CreateMaybeMessage< ::viam::robot::v1::Session >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::Session >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetSessionsRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetSessionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetSessionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetSessionsResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetSessionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetSessionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::DiscoveryQuery*
Arena::CreateMaybeMessage< ::viam::robot::v1::DiscoveryQuery >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::DiscoveryQuery >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::Discovery*
Arena::CreateMaybeMessage< ::viam::robot::v1::Discovery >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::Discovery >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::DiscoverComponentsRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::DiscoverComponentsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::DiscoverComponentsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::DiscoverComponentsResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::DiscoverComponentsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::DiscoverComponentsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::Status*
Arena::CreateMaybeMessage< ::viam::robot::v1::Status >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::Status >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetStatusRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::GetStatusResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::GetStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::GetStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StreamStatusRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::StreamStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StreamStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StreamStatusResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::StreamStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StreamStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StopExtraParameters*
Arena::CreateMaybeMessage< ::viam::robot::v1::StopExtraParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StopExtraParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StopAllRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::StopAllRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StopAllRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StopAllResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::StopAllResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StopAllResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StartSessionRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::StartSessionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StartSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::StartSessionResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::StartSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::StartSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::SendSessionHeartbeatRequest*
Arena::CreateMaybeMessage< ::viam::robot::v1::SendSessionHeartbeatRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::SendSessionHeartbeatRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::robot::v1::SendSessionHeartbeatResponse*
Arena::CreateMaybeMessage< ::viam::robot::v1::SendSessionHeartbeatResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::robot::v1::SendSessionHeartbeatResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
