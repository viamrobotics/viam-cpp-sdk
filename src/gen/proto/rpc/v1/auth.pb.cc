// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/rpc/v1/auth.proto

#include "proto/rpc/v1/auth.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace proto {
namespace rpc {
namespace v1 {
PROTOBUF_CONSTEXPR Credentials::Credentials(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.payload_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CredentialsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CredentialsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CredentialsDefaultTypeInternal() {}
  union {
    Credentials _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CredentialsDefaultTypeInternal _Credentials_default_instance_;
PROTOBUF_CONSTEXPR AuthenticateRequest::AuthenticateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.credentials_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AuthenticateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticateRequestDefaultTypeInternal() {}
  union {
    AuthenticateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticateRequestDefaultTypeInternal _AuthenticateRequest_default_instance_;
PROTOBUF_CONSTEXPR AuthenticateResponse::AuthenticateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.access_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AuthenticateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticateResponseDefaultTypeInternal() {}
  union {
    AuthenticateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticateResponseDefaultTypeInternal _AuthenticateResponse_default_instance_;
PROTOBUF_CONSTEXPR AuthenticateToRequest::AuthenticateToRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AuthenticateToRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticateToRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticateToRequestDefaultTypeInternal() {}
  union {
    AuthenticateToRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticateToRequestDefaultTypeInternal _AuthenticateToRequest_default_instance_;
PROTOBUF_CONSTEXPR AuthenticateToResponse::AuthenticateToResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.access_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AuthenticateToResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthenticateToResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthenticateToResponseDefaultTypeInternal() {}
  union {
    AuthenticateToResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthenticateToResponseDefaultTypeInternal _AuthenticateToResponse_default_instance_;
}  // namespace v1
}  // namespace rpc
}  // namespace proto
static ::_pb::Metadata file_level_metadata_proto_2frpc_2fv1_2fauth_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_proto_2frpc_2fv1_2fauth_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_proto_2frpc_2fv1_2fauth_2eproto = nullptr;

const uint32_t TableStruct_proto_2frpc_2fv1_2fauth_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::rpc::v1::Credentials, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::rpc::v1::Credentials, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::proto::rpc::v1::Credentials, _impl_.payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::rpc::v1::AuthenticateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::rpc::v1::AuthenticateRequest, _impl_.entity_),
  PROTOBUF_FIELD_OFFSET(::proto::rpc::v1::AuthenticateRequest, _impl_.credentials_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::rpc::v1::AuthenticateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::rpc::v1::AuthenticateResponse, _impl_.access_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::rpc::v1::AuthenticateToRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::rpc::v1::AuthenticateToRequest, _impl_.entity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::rpc::v1::AuthenticateToResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::rpc::v1::AuthenticateToResponse, _impl_.access_token_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::proto::rpc::v1::Credentials)},
  { 8, -1, -1, sizeof(::proto::rpc::v1::AuthenticateRequest)},
  { 16, -1, -1, sizeof(::proto::rpc::v1::AuthenticateResponse)},
  { 23, -1, -1, sizeof(::proto::rpc::v1::AuthenticateToRequest)},
  { 30, -1, -1, sizeof(::proto::rpc::v1::AuthenticateToResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::proto::rpc::v1::_Credentials_default_instance_._instance,
  &::proto::rpc::v1::_AuthenticateRequest_default_instance_._instance,
  &::proto::rpc::v1::_AuthenticateResponse_default_instance_._instance,
  &::proto::rpc::v1::_AuthenticateToRequest_default_instance_._instance,
  &::proto::rpc::v1::_AuthenticateToResponse_default_instance_._instance,
};

const char descriptor_table_protodef_proto_2frpc_2fv1_2fauth_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027proto/rpc/v1/auth.proto\022\014proto.rpc.v1\032"
  "\034google/api/annotations.proto\";\n\013Credent"
  "ials\022\022\n\004type\030\001 \001(\tR\004type\022\030\n\007payload\030\002 \001("
  "\tR\007payload\"j\n\023AuthenticateRequest\022\026\n\006ent"
  "ity\030\001 \001(\tR\006entity\022;\n\013credentials\030\002 \001(\0132\031"
  ".proto.rpc.v1.CredentialsR\013credentials\"9"
  "\n\024AuthenticateResponse\022!\n\014access_token\030\001"
  " \001(\tR\013accessToken\"/\n\025AuthenticateToReque"
  "st\022\026\n\006entity\030\001 \001(\tR\006entity\";\n\026Authentica"
  "teToResponse\022!\n\014access_token\030\001 \001(\tR\013acce"
  "ssToken2\202\001\n\013AuthService\022s\n\014Authenticate\022"
  "!.proto.rpc.v1.AuthenticateRequest\032\".pro"
  "to.rpc.v1.AuthenticateResponse\"\034\202\323\344\223\002\026\"\024"
  "/rpc/v1/authenticate2\223\001\n\023ExternalAuthSer"
  "vice\022|\n\016AuthenticateTo\022#.proto.rpc.v1.Au"
  "thenticateToRequest\032$.proto.rpc.v1.Authe"
  "nticateToResponse\"\037\202\323\344\223\002\031\"\027/rpc/v1/authe"
  "nticate_toB Z\036go.viam.com/utils/proto/rp"
  "c/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_deps[1] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::_pbi::once_flag descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2frpc_2fv1_2fauth_2eproto = {
    false, false, 732, descriptor_table_protodef_proto_2frpc_2fv1_2fauth_2eproto,
    "proto/rpc/v1/auth.proto",
    &descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_once, descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_deps, 1, 5,
    schemas, file_default_instances, TableStruct_proto_2frpc_2fv1_2fauth_2eproto::offsets,
    file_level_metadata_proto_2frpc_2fv1_2fauth_2eproto, file_level_enum_descriptors_proto_2frpc_2fv1_2fauth_2eproto,
    file_level_service_descriptors_proto_2frpc_2fv1_2fauth_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_getter() {
  return &descriptor_table_proto_2frpc_2fv1_2fauth_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proto_2frpc_2fv1_2fauth_2eproto(&descriptor_table_proto_2frpc_2fv1_2fauth_2eproto);
namespace proto {
namespace rpc {
namespace v1 {

// ===================================================================

class Credentials::_Internal {
 public:
};

Credentials::Credentials(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.rpc.v1.Credentials)
}
Credentials::Credentials(const Credentials& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Credentials* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.payload_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.payload_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payload().empty()) {
    _this->_impl_.payload_.Set(from._internal_payload(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.rpc.v1.Credentials)
}

inline void Credentials::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.payload_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.payload_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Credentials::~Credentials() {
  // @@protoc_insertion_point(destructor:proto.rpc.v1.Credentials)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Credentials::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_.Destroy();
  _impl_.payload_.Destroy();
}

void Credentials::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Credentials::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.rpc.v1.Credentials)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  _impl_.payload_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Credentials::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string type = 1 [json_name = "type"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.rpc.v1.Credentials.type"));
        } else
          goto handle_unusual;
        continue;
      // string payload = 2 [json_name = "payload"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_payload();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.rpc.v1.Credentials.payload"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Credentials::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.rpc.v1.Credentials)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1 [json_name = "type"];
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.rpc.v1.Credentials.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // string payload = 2 [json_name = "payload"];
  if (!this->_internal_payload().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload().data(), static_cast<int>(this->_internal_payload().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.rpc.v1.Credentials.payload");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.rpc.v1.Credentials)
  return target;
}

size_t Credentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.rpc.v1.Credentials)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 1 [json_name = "type"];
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string payload = 2 [json_name = "payload"];
  if (!this->_internal_payload().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Credentials::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Credentials::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Credentials::GetClassData() const { return &_class_data_; }


void Credentials::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Credentials*>(&to_msg);
  auto& from = static_cast<const Credentials&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.rpc.v1.Credentials)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Credentials::CopyFrom(const Credentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.rpc.v1.Credentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Credentials::IsInitialized() const {
  return true;
}

void Credentials::InternalSwap(Credentials* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.payload_, lhs_arena,
      &other->_impl_.payload_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Credentials::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_getter, &descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_once,
      file_level_metadata_proto_2frpc_2fv1_2fauth_2eproto[0]);
}

// ===================================================================

class AuthenticateRequest::_Internal {
 public:
  static const ::proto::rpc::v1::Credentials& credentials(const AuthenticateRequest* msg);
};

const ::proto::rpc::v1::Credentials&
AuthenticateRequest::_Internal::credentials(const AuthenticateRequest* msg) {
  return *msg->_impl_.credentials_;
}
AuthenticateRequest::AuthenticateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.rpc.v1.AuthenticateRequest)
}
AuthenticateRequest::AuthenticateRequest(const AuthenticateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthenticateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_){}
    , decltype(_impl_.credentials_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.entity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.entity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entity().empty()) {
    _this->_impl_.entity_.Set(from._internal_entity(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_credentials()) {
    _this->_impl_.credentials_ = new ::proto::rpc::v1::Credentials(*from._impl_.credentials_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.rpc.v1.AuthenticateRequest)
}

inline void AuthenticateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_){}
    , decltype(_impl_.credentials_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.entity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.entity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthenticateRequest::~AuthenticateRequest() {
  // @@protoc_insertion_point(destructor:proto.rpc.v1.AuthenticateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthenticateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.entity_.Destroy();
  if (this != internal_default_instance()) delete _impl_.credentials_;
}

void AuthenticateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthenticateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.rpc.v1.AuthenticateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.credentials_ != nullptr) {
    delete _impl_.credentials_;
  }
  _impl_.credentials_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string entity = 1 [json_name = "entity"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_entity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.rpc.v1.AuthenticateRequest.entity"));
        } else
          goto handle_unusual;
        continue;
      // .proto.rpc.v1.Credentials credentials = 2 [json_name = "credentials"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_credentials(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.rpc.v1.AuthenticateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string entity = 1 [json_name = "entity"];
  if (!this->_internal_entity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entity().data(), static_cast<int>(this->_internal_entity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.rpc.v1.AuthenticateRequest.entity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_entity(), target);
  }

  // .proto.rpc.v1.Credentials credentials = 2 [json_name = "credentials"];
  if (this->_internal_has_credentials()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::credentials(this),
        _Internal::credentials(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.rpc.v1.AuthenticateRequest)
  return target;
}

size_t AuthenticateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.rpc.v1.AuthenticateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string entity = 1 [json_name = "entity"];
  if (!this->_internal_entity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entity());
  }

  // .proto.rpc.v1.Credentials credentials = 2 [json_name = "credentials"];
  if (this->_internal_has_credentials()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.credentials_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthenticateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticateRequest::GetClassData() const { return &_class_data_; }


void AuthenticateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthenticateRequest*>(&to_msg);
  auto& from = static_cast<const AuthenticateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.rpc.v1.AuthenticateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_entity().empty()) {
    _this->_internal_set_entity(from._internal_entity());
  }
  if (from._internal_has_credentials()) {
    _this->_internal_mutable_credentials()->::proto::rpc::v1::Credentials::MergeFrom(
        from._internal_credentials());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticateRequest::CopyFrom(const AuthenticateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.rpc.v1.AuthenticateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateRequest::IsInitialized() const {
  return true;
}

void AuthenticateRequest::InternalSwap(AuthenticateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.entity_, lhs_arena,
      &other->_impl_.entity_, rhs_arena
  );
  swap(_impl_.credentials_, other->_impl_.credentials_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_getter, &descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_once,
      file_level_metadata_proto_2frpc_2fv1_2fauth_2eproto[1]);
}

// ===================================================================

class AuthenticateResponse::_Internal {
 public:
};

AuthenticateResponse::AuthenticateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.rpc.v1.AuthenticateResponse)
}
AuthenticateResponse::AuthenticateResponse(const AuthenticateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthenticateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.access_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.access_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.access_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_access_token().empty()) {
    _this->_impl_.access_token_.Set(from._internal_access_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.rpc.v1.AuthenticateResponse)
}

inline void AuthenticateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.access_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.access_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.access_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthenticateResponse::~AuthenticateResponse() {
  // @@protoc_insertion_point(destructor:proto.rpc.v1.AuthenticateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthenticateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.access_token_.Destroy();
}

void AuthenticateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthenticateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.rpc.v1.AuthenticateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.access_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string access_token = 1 [json_name = "accessToken"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_access_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.rpc.v1.AuthenticateResponse.access_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.rpc.v1.AuthenticateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_token = 1 [json_name = "accessToken"];
  if (!this->_internal_access_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_access_token().data(), static_cast<int>(this->_internal_access_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.rpc.v1.AuthenticateResponse.access_token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_access_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.rpc.v1.AuthenticateResponse)
  return target;
}

size_t AuthenticateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.rpc.v1.AuthenticateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string access_token = 1 [json_name = "accessToken"];
  if (!this->_internal_access_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_access_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthenticateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticateResponse::GetClassData() const { return &_class_data_; }


void AuthenticateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthenticateResponse*>(&to_msg);
  auto& from = static_cast<const AuthenticateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.rpc.v1.AuthenticateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_access_token().empty()) {
    _this->_internal_set_access_token(from._internal_access_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticateResponse::CopyFrom(const AuthenticateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.rpc.v1.AuthenticateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateResponse::IsInitialized() const {
  return true;
}

void AuthenticateResponse::InternalSwap(AuthenticateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.access_token_, lhs_arena,
      &other->_impl_.access_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_getter, &descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_once,
      file_level_metadata_proto_2frpc_2fv1_2fauth_2eproto[2]);
}

// ===================================================================

class AuthenticateToRequest::_Internal {
 public:
};

AuthenticateToRequest::AuthenticateToRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.rpc.v1.AuthenticateToRequest)
}
AuthenticateToRequest::AuthenticateToRequest(const AuthenticateToRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthenticateToRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.entity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.entity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entity().empty()) {
    _this->_impl_.entity_.Set(from._internal_entity(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.rpc.v1.AuthenticateToRequest)
}

inline void AuthenticateToRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.entity_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.entity_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthenticateToRequest::~AuthenticateToRequest() {
  // @@protoc_insertion_point(destructor:proto.rpc.v1.AuthenticateToRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthenticateToRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.entity_.Destroy();
}

void AuthenticateToRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthenticateToRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.rpc.v1.AuthenticateToRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateToRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string entity = 1 [json_name = "entity"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_entity();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.rpc.v1.AuthenticateToRequest.entity"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticateToRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.rpc.v1.AuthenticateToRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string entity = 1 [json_name = "entity"];
  if (!this->_internal_entity().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entity().data(), static_cast<int>(this->_internal_entity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.rpc.v1.AuthenticateToRequest.entity");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_entity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.rpc.v1.AuthenticateToRequest)
  return target;
}

size_t AuthenticateToRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.rpc.v1.AuthenticateToRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string entity = 1 [json_name = "entity"];
  if (!this->_internal_entity().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticateToRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthenticateToRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticateToRequest::GetClassData() const { return &_class_data_; }


void AuthenticateToRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthenticateToRequest*>(&to_msg);
  auto& from = static_cast<const AuthenticateToRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.rpc.v1.AuthenticateToRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_entity().empty()) {
    _this->_internal_set_entity(from._internal_entity());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticateToRequest::CopyFrom(const AuthenticateToRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.rpc.v1.AuthenticateToRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateToRequest::IsInitialized() const {
  return true;
}

void AuthenticateToRequest::InternalSwap(AuthenticateToRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.entity_, lhs_arena,
      &other->_impl_.entity_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateToRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_getter, &descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_once,
      file_level_metadata_proto_2frpc_2fv1_2fauth_2eproto[3]);
}

// ===================================================================

class AuthenticateToResponse::_Internal {
 public:
};

AuthenticateToResponse::AuthenticateToResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.rpc.v1.AuthenticateToResponse)
}
AuthenticateToResponse::AuthenticateToResponse(const AuthenticateToResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AuthenticateToResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.access_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.access_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.access_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_access_token().empty()) {
    _this->_impl_.access_token_.Set(from._internal_access_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.rpc.v1.AuthenticateToResponse)
}

inline void AuthenticateToResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.access_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.access_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.access_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthenticateToResponse::~AuthenticateToResponse() {
  // @@protoc_insertion_point(destructor:proto.rpc.v1.AuthenticateToResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AuthenticateToResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.access_token_.Destroy();
}

void AuthenticateToResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AuthenticateToResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.rpc.v1.AuthenticateToResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.access_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateToResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string access_token = 1 [json_name = "accessToken"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_access_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.rpc.v1.AuthenticateToResponse.access_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticateToResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.rpc.v1.AuthenticateToResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_token = 1 [json_name = "accessToken"];
  if (!this->_internal_access_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_access_token().data(), static_cast<int>(this->_internal_access_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.rpc.v1.AuthenticateToResponse.access_token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_access_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.rpc.v1.AuthenticateToResponse)
  return target;
}

size_t AuthenticateToResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.rpc.v1.AuthenticateToResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string access_token = 1 [json_name = "accessToken"];
  if (!this->_internal_access_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_access_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticateToResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AuthenticateToResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticateToResponse::GetClassData() const { return &_class_data_; }


void AuthenticateToResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AuthenticateToResponse*>(&to_msg);
  auto& from = static_cast<const AuthenticateToResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.rpc.v1.AuthenticateToResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_access_token().empty()) {
    _this->_internal_set_access_token(from._internal_access_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticateToResponse::CopyFrom(const AuthenticateToResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.rpc.v1.AuthenticateToResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateToResponse::IsInitialized() const {
  return true;
}

void AuthenticateToResponse::InternalSwap(AuthenticateToResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.access_token_, lhs_arena,
      &other->_impl_.access_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateToResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_getter, &descriptor_table_proto_2frpc_2fv1_2fauth_2eproto_once,
      file_level_metadata_proto_2frpc_2fv1_2fauth_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace rpc
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::rpc::v1::Credentials*
Arena::CreateMaybeMessage< ::proto::rpc::v1::Credentials >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::rpc::v1::Credentials >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::rpc::v1::AuthenticateRequest*
Arena::CreateMaybeMessage< ::proto::rpc::v1::AuthenticateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::rpc::v1::AuthenticateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::rpc::v1::AuthenticateResponse*
Arena::CreateMaybeMessage< ::proto::rpc::v1::AuthenticateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::rpc::v1::AuthenticateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::rpc::v1::AuthenticateToRequest*
Arena::CreateMaybeMessage< ::proto::rpc::v1::AuthenticateToRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::rpc::v1::AuthenticateToRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::rpc::v1::AuthenticateToResponse*
Arena::CreateMaybeMessage< ::proto::rpc::v1::AuthenticateToResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::rpc::v1::AuthenticateToResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
